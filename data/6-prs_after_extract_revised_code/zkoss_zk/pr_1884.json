{"pr_number": 1884, "pr_title": "ZK-4501: Add SimpleForm back for compatibility", "pr_createdAt": "2020-02-18T06:26:20Z", "pr_url": "https://github.com/zkoss/zk/pull/1884", "timeline": [{"oid": "d84c4c960c837fa8ded1940338469d2182cc2592", "url": "https://github.com/zkoss/zk/commit/d84c4c960c837fa8ded1940338469d2182cc2592", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-18T06:45:00Z", "type": "forcePushed"}, {"oid": "4bb390502ff9a7e646b09f235f9d9bf278d24eb3", "url": "https://github.com/zkoss/zk/commit/4bb390502ff9a7e646b09f235f9d9bf278d24eb3", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-18T09:47:51Z", "type": "forcePushed"}, {"oid": "2fa67b85368f26479e5931bf595230c48cdf40dc", "url": "https://github.com/zkoss/zk/commit/2fa67b85368f26479e5931bf595230c48cdf40dc", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-18T09:59:53Z", "type": "forcePushed"}, {"oid": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "url": "https://github.com/zkoss/zk/commit/d2e01bdd51d65490b55d17507a1732cf6845d2e8", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-18T10:08:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA0NDYxOQ==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381044619", "bodyText": "FormLegacyExt", "author": "plijyfes", "createdAt": "2020-02-19T02:22:40Z", "path": "zkbind/src/org/zkoss/bind/FormExt.java", "diffHunk": "@@ -0,0 +1,59 @@\n+\n+/* FormLegacyExt.java\n+\tPurpose:\n+\t\n+\tDescription:\n+\t\n+\tHistory:\n+\t\t2011/12/1 Created by Dennis Chen\n+Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+*/\n+package org.zkoss.bind;\n+\n+import java.util.Set;\n+\n+\n+\n+/**\n+ * An addition interface of {@link FormLegacy} to provide\n+ * more control.\n+ * @deprecated As of release 8.0.0, please use {@link org.zkoss.bind.Form}\n+ * @author dennis\n+ * @since 6.0.0\n+ */\n+public interface FormExt {", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/FormExt.java b/zkbind/src/org/zkoss/bind/FormLegacyExt.java\nsimilarity index 74%\nrename from zkbind/src/org/zkoss/bind/FormExt.java\nrename to zkbind/src/org/zkoss/bind/FormLegacyExt.java\nindex 6587807ecd..8066feb0e9 100644\n--- a/zkbind/src/org/zkoss/bind/FormExt.java\n+++ b/zkbind/src/org/zkoss/bind/FormLegacyExt.java\n\n@@ -1,12 +1,13 @@\n-\n /* FormLegacyExt.java\n-\tPurpose:\n-\t\n-\tDescription:\n-\t\n-\tHistory:\n-\t\t2011/12/1 Created by Dennis Chen\n-Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+\n+\t\tPurpose:\n+\t\t\n+\t\tDescription:\n+\t\t\n+\t\tHistory:\n+\t\t\t\tWed Feb 19 15:45:29 CST 2020, Created by leon\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n */\n package org.zkoss.bind;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA0NDcwNw==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381044707", "bodyText": "FormLegacyStatus", "author": "plijyfes", "createdAt": "2020-02-19T02:23:02Z", "path": "zkbind/src/org/zkoss/bind/FormExt.java", "diffHunk": "@@ -0,0 +1,59 @@\n+\n+/* FormLegacyExt.java\n+\tPurpose:\n+\t\n+\tDescription:\n+\t\n+\tHistory:\n+\t\t2011/12/1 Created by Dennis Chen\n+Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+*/\n+package org.zkoss.bind;\n+\n+import java.util.Set;\n+\n+\n+\n+/**\n+ * An addition interface of {@link FormLegacy} to provide\n+ * more control.\n+ * @deprecated As of release 8.0.0, please use {@link org.zkoss.bind.Form}\n+ * @author dennis\n+ * @since 6.0.0\n+ */\n+public interface FormExt {\n+\t/**\n+\t * @return the status object of this form\n+\t */\n+\tpublic FormStatusLegacy getStatus();", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/FormExt.java b/zkbind/src/org/zkoss/bind/FormLegacyExt.java\nsimilarity index 74%\nrename from zkbind/src/org/zkoss/bind/FormExt.java\nrename to zkbind/src/org/zkoss/bind/FormLegacyExt.java\nindex 6587807ecd..8066feb0e9 100644\n--- a/zkbind/src/org/zkoss/bind/FormExt.java\n+++ b/zkbind/src/org/zkoss/bind/FormLegacyExt.java\n\n@@ -1,12 +1,13 @@\n-\n /* FormLegacyExt.java\n-\tPurpose:\n-\t\n-\tDescription:\n-\t\n-\tHistory:\n-\t\t2011/12/1 Created by Dennis Chen\n-Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+\n+\t\tPurpose:\n+\t\t\n+\t\tDescription:\n+\t\t\n+\t\tHistory:\n+\t\t\t\tWed Feb 19 15:45:29 CST 2020, Created by leon\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n */\n package org.zkoss.bind;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA0NTA5Nw==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381045097", "bodyText": "9.0.1", "author": "plijyfes", "createdAt": "2020-02-19T02:24:29Z", "path": "zkbind/src/org/zkoss/bind/FormExt.java", "diffHunk": "@@ -0,0 +1,59 @@\n+\n+/* FormLegacyExt.java\n+\tPurpose:\n+\t\n+\tDescription:\n+\t\n+\tHistory:\n+\t\t2011/12/1 Created by Dennis Chen\n+Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+*/\n+package org.zkoss.bind;\n+\n+import java.util.Set;\n+\n+\n+\n+/**\n+ * An addition interface of {@link FormLegacy} to provide\n+ * more control.\n+ * @deprecated As of release 8.0.0, please use {@link org.zkoss.bind.Form}\n+ * @author dennis\n+ * @since 6.0.0", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/FormExt.java b/zkbind/src/org/zkoss/bind/FormLegacyExt.java\nsimilarity index 74%\nrename from zkbind/src/org/zkoss/bind/FormExt.java\nrename to zkbind/src/org/zkoss/bind/FormLegacyExt.java\nindex 6587807ecd..8066feb0e9 100644\n--- a/zkbind/src/org/zkoss/bind/FormExt.java\n+++ b/zkbind/src/org/zkoss/bind/FormLegacyExt.java\n\n@@ -1,12 +1,13 @@\n-\n /* FormLegacyExt.java\n-\tPurpose:\n-\t\n-\tDescription:\n-\t\n-\tHistory:\n-\t\t2011/12/1 Created by Dennis Chen\n-Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+\n+\t\tPurpose:\n+\t\t\n+\t\tDescription:\n+\t\t\n+\t\tHistory:\n+\t\t\t\tWed Feb 19 15:45:29 CST 2020, Created by leon\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n */\n package org.zkoss.bind;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA0NTMzNw==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381045337", "bodyText": "remove", "author": "plijyfes", "createdAt": "2020-02-19T02:25:36Z", "path": "zkbind/src/org/zkoss/bind/FormLegacy.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/* FormLegacy.java\n+\tPurpose:\n+\t\t\n+\tDescription:\n+\t\t\n+\tHistory:\n+\t\tJun 24, 2011 6:36:05 PM, Created by henrichen\n+Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+*/\n+package org.zkoss.bind;\n+\n+import java.util.Set;\n+\n+/**\n+ * Virtual Bean that associated with a form.\n+ * @deprecated As of release 8.0.0, please use {@link org.zkoss.bind.Form}\n+ * @author henrichen\n+ * @since 6.0.0\n+ */\n+public interface FormLegacy {\n+//\t/**\n+//\t * Returns the id of this FormLegacy.\n+//\t * @return the id of this FormLegacy.\n+//\t */\n+//\tpublic String getId();", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/FormLegacy.java b/zkbind/src/org/zkoss/bind/FormLegacy.java\nindex 3a9aa6737d..700c789fbf 100644\n--- a/zkbind/src/org/zkoss/bind/FormLegacy.java\n+++ b/zkbind/src/org/zkoss/bind/FormLegacy.java\n\n@@ -1,29 +1,25 @@\n /* FormLegacy.java\n-\tPurpose:\n+\n+\t\tPurpose:\n \t\t\n-\tDescription:\n+\t\tDescription:\n \t\t\n-\tHistory:\n-\t\tJun 24, 2011 6:36:05 PM, Created by henrichen\n-Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+\t\tHistory:\n+\t\t\t\tWed Feb 19 15:45:29 CST 2020, Created by leon\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n */\n package org.zkoss.bind;\n \n import java.util.Set;\n \n /**\n- * Virtual Bean that associated with a form.\n- * @deprecated As of release 8.0.0, please use {@link org.zkoss.bind.Form}\n- * @author henrichen\n- * @since 6.0.0\n+ * For compatibility only.\n+ * @deprecated As of release 9.0.1, please use {@link org.zkoss.bind.Form}\n+ * @author Leon\n+ * @since 9.0.1\n  */\n-public interface FormLegacy {\n-//\t/**\n-//\t * Returns the id of this FormLegacy.\n-//\t * @return the id of this FormLegacy.\n-//\t */\n-//\tpublic String getId();\n-\t\n+public interface FormLegacy extends Form {\n \t/**\n \t * Returns all field names that this FormLegacy bean is care about for both read and load.\n \t * @return all field names that this FormLegacy bean is care about.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA0NTQ3OQ==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381045479", "bodyText": "rename", "author": "plijyfes", "createdAt": "2020-02-19T02:26:09Z", "path": "zkbind/src/org/zkoss/bind/FormStatusLegacy.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/* FormStatus.java", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/FormStatusLegacy.java b/zkbind/src/org/zkoss/bind/FormStatusLegacy.java\ndeleted file mode 100644\nindex 379bbb456a..0000000000\n--- a/zkbind/src/org/zkoss/bind/FormStatusLegacy.java\n+++ /dev/null\n\n@@ -1,26 +0,0 @@\n-/* FormStatus.java\n-\tPurpose:\n-\t\t\n-\tDescription:\n-\t\t\n-\tHistory:\n-\t\t2011/12/1 Created by Dennis Chen\n-Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n-*/\n-package org.zkoss.bind;\n-\n-/**\n- * Represents the runtime information of the {@link FormLegacy}\n- * @deprecated see {@link FormLegacy}\n- * @author dennis\n- * @since 6.0.0\n- */\n-public interface FormStatusLegacy {\n-\t\n-\t/**\n-\t * Returns whether the form has been modified \n-\t * @return whether the form has been modified.\n-\t * @see FormStatusLegacy#isDirty()\n-\t */\n-\tpublic boolean isDirty();\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA0NTgyOQ==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381045829", "bodyText": "remove", "author": "plijyfes", "createdAt": "2020-02-19T02:27:40Z", "path": "zkbind/src/org/zkoss/bind/impl/FormImpl.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/* FormImpl.java\n+\tPurpose:\n+\t\n+\tDescription:\n+\t\n+\tHistory:\n+\t\tAug 9, 2011 12:28:17 PM, Created by henrichen\n+Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+*/\n+package org.zkoss.bind.impl;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.zkoss.bind.FormExt;\n+import org.zkoss.bind.FormLegacy;\n+import org.zkoss.bind.FormStatusLegacy;\n+import org.zkoss.lang.Objects;\n+\n+/**\n+ * Implementation of the {@link FormLegacy}.\n+ * @deprecated As of release 8.0.0, please use {@link org.zkoss.bind.Form}\n+ * @author henrichen\n+ * @author dennis\n+ * @since 6.0.0\n+ */\n+public class FormImpl implements FormLegacy, FormExt, Serializable {\n+\tprivate static final long serialVersionUID = 1463169907348730644L;\n+\t\n+\tprivate final Set<String> _saveFieldNames; //field name for saving\n+\tprivate final Set<String> _loadFieldNames; //field name for loading\n+\tprivate final Map<String, Object> _fields; //field series -> value\n+\tprivate final Map<String, Object> _initFields; //field series -> value\n+\tprivate final Set<String> _dirtyFieldNames; //field name that is dirty\n+\tprivate static final int INIT_CAPACITY = 32;\n+\t\n+\tprivate final FormStatusLegacy _status;\n+\t\n+\tpublic FormImpl() {\n+\t\t_fields = new LinkedHashMap<String, Object>(INIT_CAPACITY);\n+\t\t_initFields = new HashMap<String, Object>(INIT_CAPACITY);\n+\t\t_saveFieldNames = new LinkedHashSet<String>(INIT_CAPACITY);\n+\t\t_loadFieldNames = new LinkedHashSet<String>(INIT_CAPACITY);\n+\t\t_dirtyFieldNames = new HashSet<String>(INIT_CAPACITY);\n+\t\t_status = new FormStatusImpl();\n+\t}\n+\t\n+\tprivate class FormStatusImpl implements FormStatusLegacy, Serializable {\n+\t\tprivate static final long serialVersionUID = 1L;\n+\t\t\n+\t\tpublic boolean isDirty() {\n+\t\t\treturn FormImpl.this.isDirty();\n+\t\t}\n+\t}\n+\t\n+\tpublic void setField(String field, Object value) {\n+\t\t_fields.put(field, value);\n+\t\tfinal Object init = _initFields.get(field);\n+\t\tif (!Objects.equals(init, value)) { //different from original\n+\t\t\t_dirtyFieldNames.add(field);\n+\t\t} else {\n+\t\t\t_dirtyFieldNames.remove(field);\n+\t\t}\n+\t}\n+\t\n+\t\n+\tpublic void resetDirty() {\n+\t\t_initFields.putAll(_fields);\n+\t\t_dirtyFieldNames.clear();\n+\t}\n+\t\n+\tpublic Object getField(String field) {\n+\t\treturn _fields.get(field);\n+\t}\n+\t\n+\tpublic Set<String> getLoadFieldNames() {\n+\t\treturn _loadFieldNames;\n+\t}\n+\t\n+\tpublic Set<String> getSaveFieldNames() {\n+\t\treturn _saveFieldNames;\n+\t}\n+\t\n+\tpublic Set<String> getFieldNames() {\n+\t\treturn _fields.keySet();\n+\t}\n+\t\n+\tpublic boolean isDirty() {\n+\t\treturn !_dirtyFieldNames.isEmpty();\n+\t}\n+\t\n+\t@Override\n+\tpublic FormStatusLegacy getStatus() {\n+\t\treturn _status;\n+\t}\n+\t\n+\tpublic void addLoadFieldName(String fieldName) {\n+\t\t_loadFieldNames.add(fieldName);\n+\t}\n+\t\n+\tpublic void addSaveFieldName(String fieldName) {\n+\t\t_saveFieldNames.add(fieldName);\n+\t}\n+\t\n+\tpublic String toString() {\n+\t\treturn new StringBuilder().append(getClass().getSimpleName()).append(\"@\").append(Integer.toHexString(hashCode()))\n+//\t\t.append(\",id:\").append(getId())", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/FormImpl.java b/zkbind/src/org/zkoss/bind/impl/FormImpl.java\nindex ed962eafc0..27b94284c6 100644\n--- a/zkbind/src/org/zkoss/bind/impl/FormImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/FormImpl.java\n\n@@ -1,11 +1,13 @@\n /* FormImpl.java\n-\tPurpose:\n-\t\n-\tDescription:\n-\t\n-\tHistory:\n-\t\tAug 9, 2011 12:28:17 PM, Created by henrichen\n-Copyright (C) 2011 Potix Corporation. All Rights Reserved.\n+\n+\t\tPurpose:\n+\t\t\n+\t\tDescription:\n+\t\t\n+\t\tHistory:\n+\t\t\t\tWed Feb 19 15:45:29 CST 2020, Created by leon\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n */\n package org.zkoss.bind.impl;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA0NjQ5NQ==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381046495", "bodyText": "remove", "author": "plijyfes", "createdAt": "2020-02-19T02:30:19Z", "path": "zktest/test/java/org/zkoss/zktest/zats/WebDriverTestCase.java", "diffHunk": "@@ -84,7 +84,7 @@ protected static String getAddress() {\n \n \tprotected WebDriver getWebDriver() {\n \t\tif (driver == null) {\n-\t\t\tdriver = new ChromiumHeadlessDriver(getWebDriverOptions(), true);\n+\t\t\tdriver = new ChromiumHeadlessDriver(getWebDriverOptions(), false);", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zktest/test/java/org/zkoss/zktest/zats/WebDriverTestCase.java b/zktest/test/java/org/zkoss/zktest/zats/WebDriverTestCase.java\nindex b69d9032c3..fcf5fd1f6a 100644\n--- a/zktest/test/java/org/zkoss/zktest/zats/WebDriverTestCase.java\n+++ b/zktest/test/java/org/zkoss/zktest/zats/WebDriverTestCase.java\n\n@@ -84,7 +84,7 @@ public abstract class WebDriverTestCase {\n \n \tprotected WebDriver getWebDriver() {\n \t\tif (driver == null) {\n-\t\t\tdriver = new ChromiumHeadlessDriver(getWebDriverOptions(), false);\n+\t\t\tdriver = new ChromiumHeadlessDriver(getWebDriverOptions(), true);\n \t\t}\n \t\treturn driver;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA0NzIwOA==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381047208", "bodyText": "id not vm", "author": "plijyfes", "createdAt": "2020-02-19T02:33:09Z", "path": "zkbind/src/org/zkoss/bind/impl/BinderImpl.java", "diffHunk": "@@ -705,6 +751,24 @@ private void removeForm(Component comp) {\n \t\t}\n \t}\n \n+\tprivate void initFormLegacyBean(Component comp, String id, String expr) {\n+\t\tFormLegacy formLegacy = getFormLegacy(comp, id);\n+\t\tif (formLegacy == null) {\n+\t\t\tString[] exprArray = expr.split(\"\\\\.\", 2);\n+\t\t\tif (\"vm\".equals(exprArray[0])) {", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/BinderImpl.java b/zkbind/src/org/zkoss/bind/impl/BinderImpl.java\nindex b085a3778f..e6e41acdc6 100644\n--- a/zkbind/src/org/zkoss/bind/impl/BinderImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/BinderImpl.java\n\n@@ -751,22 +724,10 @@ public class BinderImpl implements Binder, BinderCtrl, Serializable {\n \t\t}\n \t}\n \n-\tprivate void initFormLegacyBean(Component comp, String id, String expr) {\n-\t\tFormLegacy formLegacy = getFormLegacy(comp, id);\n-\t\tif (formLegacy == null) {\n-\t\t\tString[] exprArray = expr.split(\"\\\\.\", 2);\n-\t\t\tif (\"vm\".equals(exprArray[0])) {\n-\t\t\t\tObject vm = getViewModel();\n-\t\t\t\ttry {\n-\t\t\t\t\tField field = vm.getClass().getDeclaredField(exprArray[1]);\n-\t\t\t\t\tif (field.getType().isAssignableFrom(FormLegacy.class)) {\n-\t\t\t\t\t\tstoreFormLegacy(comp, id, new SimpleForm());\n-\t\t\t\t\t}\n-\t\t\t\t} catch (NoSuchFieldException e) {\n-\t\t\t\t\te.printStackTrace();\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n+\tprivate void initFormLegacyBean(Component comp, String id, Object bean) {\n+\t\tForm form = getForm(comp, id);\n+\t\tif (form == null && bean instanceof FormLegacy)\n+\t\t\tstoreForm(comp, id, new SimpleForm());\n \t}\n \n \tpublic void addFormInitBinding(Component comp, String id, String initExpr, Map<String, Object> initArgs) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1MTQ4Nw==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381051487", "bodyText": "use eval check bean", "author": "plijyfes", "createdAt": "2020-02-19T02:51:20Z", "path": "zkbind/src/org/zkoss/bind/impl/BinderImpl.java", "diffHunk": "@@ -705,6 +751,24 @@ private void removeForm(Component comp) {\n \t\t}\n \t}\n \n+\tprivate void initFormLegacyBean(Component comp, String id, String expr) {\n+\t\tFormLegacy formLegacy = getFormLegacy(comp, id);\n+\t\tif (formLegacy == null) {\n+\t\t\tString[] exprArray = expr.split(\"\\\\.\", 2);\n+\t\t\tif (\"vm\".equals(exprArray[0])) {\n+\t\t\t\tObject vm = getViewModel();\n+\t\t\t\ttry {\n+\t\t\t\t\tField field = vm.getClass().getDeclaredField(exprArray[1]);", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/BinderImpl.java b/zkbind/src/org/zkoss/bind/impl/BinderImpl.java\nindex b085a3778f..e6e41acdc6 100644\n--- a/zkbind/src/org/zkoss/bind/impl/BinderImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/BinderImpl.java\n\n@@ -751,22 +724,10 @@ public class BinderImpl implements Binder, BinderCtrl, Serializable {\n \t\t}\n \t}\n \n-\tprivate void initFormLegacyBean(Component comp, String id, String expr) {\n-\t\tFormLegacy formLegacy = getFormLegacy(comp, id);\n-\t\tif (formLegacy == null) {\n-\t\t\tString[] exprArray = expr.split(\"\\\\.\", 2);\n-\t\t\tif (\"vm\".equals(exprArray[0])) {\n-\t\t\t\tObject vm = getViewModel();\n-\t\t\t\ttry {\n-\t\t\t\t\tField field = vm.getClass().getDeclaredField(exprArray[1]);\n-\t\t\t\t\tif (field.getType().isAssignableFrom(FormLegacy.class)) {\n-\t\t\t\t\t\tstoreFormLegacy(comp, id, new SimpleForm());\n-\t\t\t\t\t}\n-\t\t\t\t} catch (NoSuchFieldException e) {\n-\t\t\t\t\te.printStackTrace();\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n+\tprivate void initFormLegacyBean(Component comp, String id, Object bean) {\n+\t\tForm form = getForm(comp, id);\n+\t\tif (form == null && bean instanceof FormLegacy)\n+\t\t\tstoreForm(comp, id, new SimpleForm());\n \t}\n \n \tpublic void addFormInitBinding(Component comp, String id, String initExpr, Map<String, Object> initArgs) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1MzMwNA==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381053304", "bodyText": "not need", "author": "plijyfes", "createdAt": "2020-02-19T02:59:09Z", "path": "zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java", "diffHunk": "@@ -62,32 +68,84 @@ public void load(BindContext ctx) {\n \t\t\t\t\t.formatLocationMessage(\"doesn't support to load a nested form , formId \" + getFormId(), comp));\n \t\t}\n \n-\t\tfinal Form form = initFormBean(bean,\n-\t\t\t\t(Class<Object>) (bean != null ? bean.getClass() : eval.getType(ctx, comp, _accessInfo.getProperty())),\n-\t\t\t\tctx);\n+\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n \t\tfinal boolean activating = ((BinderCtrl) getBinder()).isActivating();\n-\n-\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n-\t\t//sets the last loaded bean express of the form\n-\t\tcomp.setAttribute(BinderCtrl.LOAD_FORM_EXPRESSION, getPropertyString());\n-\n-\t\tif (activating)\n-\t\t\treturn; // don't notify change if activating\n-\n-\t\t// don't do resetDirty when in activating. Test case is in bind/form/FormWith*\n-\t\tFormStatus formStatus = form.getFormStatus();\n-\t\tformStatus.reset(); //initial loading, mark form as clean\n-\n-\t\tbinder.notifyChange(form, \".\"); // notify change of fx and fx.*\n-\n-\t\t// notify change of fxStatus and fxStatus.*\n-\t\tbinder.notifyChange(formStatus, \".\");\n-\n-\t\tif (collector != null) {\n-\t\t\tcollector.addInfo(new LoadInfo(LoadInfo.FORM_LOAD, comp, getConditionString(ctx), getPropertyString(),\n-\t\t\t\t\tgetFormId(), bean, getArgs(), null));\n+\t\tif (formLegacy != null) {", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java b/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java\nindex 3ffb6a5803..b42fc09c18 100644\n--- a/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java\n\n@@ -68,27 +68,28 @@ public class LoadFormBindingImpl extends FormBindingImpl implements LoadFormBind\n \t\t\t\t\t.formatLocationMessage(\"doesn't support to load a nested form , formId \" + getFormId(), comp));\n \t\t}\n \n-\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n+\t\tForm form = getFormBean();\n \t\tfinal boolean activating = ((BinderCtrl) getBinder()).isActivating();\n-\t\tif (formLegacy != null) {\n-\t\t\tif (formLegacy instanceof FormExt) {\n-\t\t\t\tFormExt fex = (FormExt) formLegacy;\n-\t\t\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n-\t\t\t\t//sets the last loaded bean express of the form\n-\t\t\t\tcomp.setAttribute(BinderImpl.LOAD_FORM_EXPRESSION, getPropertyString());\n-\t\t\t\t\n+\t\t\n+\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n+\t\t//sets the last loaded bean express of the form\n+\t\tcomp.setAttribute(BinderCtrl.LOAD_FORM_EXPRESSION, getPropertyString());\n+\t\t\n+\t\tif (form instanceof FormLegacy) { // ZK-4501: add SimpleForm back for compatibility\n+\t\t\tif (form instanceof FormLegacyExt) {\n+\t\t\t\tFormLegacyExt fex = (FormLegacyExt) form;\n \t\t\t\t\n \t\t\t\t//ZK-1259, for the case of nested form expression in same loading, e.g. @load(fx.hash[fx.key]),\n \t\t\t\t//it will produce 2 loadField name, 'hash[fx.key]' & 'key',\n \t\t\t\t//and fx + 'hash[fx.key]' will get null if fx + 'key' is not loaded yet and throw exception\n \t\t\t\t//i sort the field name to let inner value be loaded into form first.\n-\t\t\t\tfinal String fomrid = getFormId();\n+\t\t\t\tfinal String formId = getFormId();\n \t\t\t\tList<String> fields = new LinkedList<String>(fex.getLoadFieldNames());\n \t\t\t\tCollections.sort(fields, new Comparator<String>() {\n \t\t\t\t\t\n \t\t\t\t\tpublic int compare(String o1, String o2) {\n-\t\t\t\t\t\to1 = BindELContext.appendFields(fomrid, o1);\n-\t\t\t\t\t\to2 = BindELContext.appendFields(fomrid, o2);\n+\t\t\t\t\t\to1 = BindELContext.appendFields(formId, o1);\n+\t\t\t\t\t\to2 = BindELContext.appendFields(formId, o2);\n \t\t\t\t\t\tif (o1.indexOf(o2) > 0) return 1;\n \t\t\t\t\t\tif (o2.indexOf(o1) > 0) return -1;\n \t\t\t\t\t\treturn 0;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1NDAxMw==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381054013", "bodyText": "typo", "author": "plijyfes", "createdAt": "2020-02-19T03:02:31Z", "path": "zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java", "diffHunk": "@@ -62,32 +68,84 @@ public void load(BindContext ctx) {\n \t\t\t\t\t.formatLocationMessage(\"doesn't support to load a nested form , formId \" + getFormId(), comp));\n \t\t}\n \n-\t\tfinal Form form = initFormBean(bean,\n-\t\t\t\t(Class<Object>) (bean != null ? bean.getClass() : eval.getType(ctx, comp, _accessInfo.getProperty())),\n-\t\t\t\tctx);\n+\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n \t\tfinal boolean activating = ((BinderCtrl) getBinder()).isActivating();\n-\n-\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n-\t\t//sets the last loaded bean express of the form\n-\t\tcomp.setAttribute(BinderCtrl.LOAD_FORM_EXPRESSION, getPropertyString());\n-\n-\t\tif (activating)\n-\t\t\treturn; // don't notify change if activating\n-\n-\t\t// don't do resetDirty when in activating. Test case is in bind/form/FormWith*\n-\t\tFormStatus formStatus = form.getFormStatus();\n-\t\tformStatus.reset(); //initial loading, mark form as clean\n-\n-\t\tbinder.notifyChange(form, \".\"); // notify change of fx and fx.*\n-\n-\t\t// notify change of fxStatus and fxStatus.*\n-\t\tbinder.notifyChange(formStatus, \".\");\n-\n-\t\tif (collector != null) {\n-\t\t\tcollector.addInfo(new LoadInfo(LoadInfo.FORM_LOAD, comp, getConditionString(ctx), getPropertyString(),\n-\t\t\t\t\tgetFormId(), bean, getArgs(), null));\n+\t\tif (formLegacy != null) {\n+\t\t\tif (formLegacy instanceof FormExt) {\n+\t\t\t\tFormExt fex = (FormExt) formLegacy;\n+\t\t\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n+\t\t\t\t//sets the last loaded bean express of the form\n+\t\t\t\tcomp.setAttribute(BinderImpl.LOAD_FORM_EXPRESSION, getPropertyString());\n+\t\t\t\t\n+\t\t\t\t\n+\t\t\t\t//ZK-1259, for the case of nested form expression in same loading, e.g. @load(fx.hash[fx.key]),\n+\t\t\t\t//it will produce 2 loadField name, 'hash[fx.key]' & 'key',\n+\t\t\t\t//and fx + 'hash[fx.key]' will get null if fx + 'key' is not loaded yet and throw exception\n+\t\t\t\t//i sort the field name to let inner value be loaded into form first.\n+\t\t\t\tfinal String fomrid = getFormId();", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java b/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java\nindex 3ffb6a5803..b42fc09c18 100644\n--- a/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java\n\n@@ -68,27 +68,28 @@ public class LoadFormBindingImpl extends FormBindingImpl implements LoadFormBind\n \t\t\t\t\t.formatLocationMessage(\"doesn't support to load a nested form , formId \" + getFormId(), comp));\n \t\t}\n \n-\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n+\t\tForm form = getFormBean();\n \t\tfinal boolean activating = ((BinderCtrl) getBinder()).isActivating();\n-\t\tif (formLegacy != null) {\n-\t\t\tif (formLegacy instanceof FormExt) {\n-\t\t\t\tFormExt fex = (FormExt) formLegacy;\n-\t\t\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n-\t\t\t\t//sets the last loaded bean express of the form\n-\t\t\t\tcomp.setAttribute(BinderImpl.LOAD_FORM_EXPRESSION, getPropertyString());\n-\t\t\t\t\n+\t\t\n+\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n+\t\t//sets the last loaded bean express of the form\n+\t\tcomp.setAttribute(BinderCtrl.LOAD_FORM_EXPRESSION, getPropertyString());\n+\t\t\n+\t\tif (form instanceof FormLegacy) { // ZK-4501: add SimpleForm back for compatibility\n+\t\t\tif (form instanceof FormLegacyExt) {\n+\t\t\t\tFormLegacyExt fex = (FormLegacyExt) form;\n \t\t\t\t\n \t\t\t\t//ZK-1259, for the case of nested form expression in same loading, e.g. @load(fx.hash[fx.key]),\n \t\t\t\t//it will produce 2 loadField name, 'hash[fx.key]' & 'key',\n \t\t\t\t//and fx + 'hash[fx.key]' will get null if fx + 'key' is not loaded yet and throw exception\n \t\t\t\t//i sort the field name to let inner value be loaded into form first.\n-\t\t\t\tfinal String fomrid = getFormId();\n+\t\t\t\tfinal String formId = getFormId();\n \t\t\t\tList<String> fields = new LinkedList<String>(fex.getLoadFieldNames());\n \t\t\t\tCollections.sort(fields, new Comparator<String>() {\n \t\t\t\t\t\n \t\t\t\t\tpublic int compare(String o1, String o2) {\n-\t\t\t\t\t\to1 = BindELContext.appendFields(fomrid, o1);\n-\t\t\t\t\t\to2 = BindELContext.appendFields(fomrid, o2);\n+\t\t\t\t\t\to1 = BindELContext.appendFields(formId, o1);\n+\t\t\t\t\t\to2 = BindELContext.appendFields(formId, o2);\n \t\t\t\t\t\tif (o1.indexOf(o2) > 0) return 1;\n \t\t\t\t\t\tif (o2.indexOf(o1) > 0) return -1;\n \t\t\t\t\t\treturn 0;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1NDA3OQ==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381054079", "bodyText": "extract", "author": "plijyfes", "createdAt": "2020-02-19T03:02:47Z", "path": "zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java", "diffHunk": "@@ -62,32 +68,84 @@ public void load(BindContext ctx) {\n \t\t\t\t\t.formatLocationMessage(\"doesn't support to load a nested form , formId \" + getFormId(), comp));\n \t\t}\n \n-\t\tfinal Form form = initFormBean(bean,\n-\t\t\t\t(Class<Object>) (bean != null ? bean.getClass() : eval.getType(ctx, comp, _accessInfo.getProperty())),\n-\t\t\t\tctx);\n+\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n \t\tfinal boolean activating = ((BinderCtrl) getBinder()).isActivating();\n-\n-\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n-\t\t//sets the last loaded bean express of the form\n-\t\tcomp.setAttribute(BinderCtrl.LOAD_FORM_EXPRESSION, getPropertyString());\n-\n-\t\tif (activating)\n-\t\t\treturn; // don't notify change if activating\n-\n-\t\t// don't do resetDirty when in activating. Test case is in bind/form/FormWith*\n-\t\tFormStatus formStatus = form.getFormStatus();\n-\t\tformStatus.reset(); //initial loading, mark form as clean\n-\n-\t\tbinder.notifyChange(form, \".\"); // notify change of fx and fx.*\n-\n-\t\t// notify change of fxStatus and fxStatus.*\n-\t\tbinder.notifyChange(formStatus, \".\");\n-\n-\t\tif (collector != null) {\n-\t\t\tcollector.addInfo(new LoadInfo(LoadInfo.FORM_LOAD, comp, getConditionString(ctx), getPropertyString(),\n-\t\t\t\t\tgetFormId(), bean, getArgs(), null));\n+\t\tif (formLegacy != null) {\n+\t\t\tif (formLegacy instanceof FormExt) {\n+\t\t\t\tFormExt fex = (FormExt) formLegacy;\n+\t\t\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n+\t\t\t\t//sets the last loaded bean express of the form\n+\t\t\t\tcomp.setAttribute(BinderImpl.LOAD_FORM_EXPRESSION, getPropertyString());\n+\t\t\t\t\n+\t\t\t\t\n+\t\t\t\t//ZK-1259, for the case of nested form expression in same loading, e.g. @load(fx.hash[fx.key]),\n+\t\t\t\t//it will produce 2 loadField name, 'hash[fx.key]' & 'key',\n+\t\t\t\t//and fx + 'hash[fx.key]' will get null if fx + 'key' is not loaded yet and throw exception\n+\t\t\t\t//i sort the field name to let inner value be loaded into form first.\n+\t\t\t\tfinal String fomrid = getFormId();\n+\t\t\t\tList<String> fields = new LinkedList<String>(fex.getLoadFieldNames());\n+\t\t\t\tCollections.sort(fields, new Comparator<String>() {\n+\t\t\t\t\t\n+\t\t\t\t\tpublic int compare(String o1, String o2) {\n+\t\t\t\t\t\to1 = BindELContext.appendFields(fomrid, o1);\n+\t\t\t\t\t\to2 = BindELContext.appendFields(fomrid, o2);\n+\t\t\t\t\t\tif (o1.indexOf(o2) > 0) return 1;\n+\t\t\t\t\t\tif (o2.indexOf(o1) > 0) return -1;\n+\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\t\n+\t\t\t\tfor (String field : fields) {\n+\t\t\t\t\tfinal ExpressionX expr = getFieldExpression(eval, field);\n+\t\t\t\t\tif (expr != null) {\n+\t\t\t\t\t\tfinal Object value = eval.getValue(ctx, comp, expr);\n+\t\t\t\t\t\tif (!activating) { //don't load to form if activating\n+\t\t\t\t\t\t\t//ZK-911. Save into Form bean via expression(so will use form's AccessFieldName)\n+\t\t\t\t\t\t\tfinal ExpressionX formExpr = getFormExpression(eval, field);\n+\t\t\t\t\t\t\teval.setValue(null, comp, formExpr, value); //formExprform.setField(field, value);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (activating) return;\n+\t\t\t\t\n+\t\t\t\tfex.resetDirty(); //initial loading, mark form as clean\n+\t\t\t}\n+\t\t\tif (activating) return; //don't notify change if activating\n+\t\t\t\n+\t\t\tbinder.notifyChange(formLegacy, \".\"); //notify change of fx and fx.*\n+\t\t\tif (formLegacy instanceof FormExt) {\n+\t\t\t\tbinder.notifyChange(((FormExt) formLegacy).getStatus(), \".\"); //notify change of fxStatus and fxStatus.*\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (collector != null) {", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java b/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java\nindex 3ffb6a5803..b42fc09c18 100644\n--- a/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/LoadFormBindingImpl.java\n\n@@ -68,27 +68,28 @@ public class LoadFormBindingImpl extends FormBindingImpl implements LoadFormBind\n \t\t\t\t\t.formatLocationMessage(\"doesn't support to load a nested form , formId \" + getFormId(), comp));\n \t\t}\n \n-\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n+\t\tForm form = getFormBean();\n \t\tfinal boolean activating = ((BinderCtrl) getBinder()).isActivating();\n-\t\tif (formLegacy != null) {\n-\t\t\tif (formLegacy instanceof FormExt) {\n-\t\t\t\tFormExt fex = (FormExt) formLegacy;\n-\t\t\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n-\t\t\t\t//sets the last loaded bean express of the form\n-\t\t\t\tcomp.setAttribute(BinderImpl.LOAD_FORM_EXPRESSION, getPropertyString());\n-\t\t\t\t\n+\t\t\n+\t\t//ZK-1005 ZK 6.0.1 validation fails on nested bean\n+\t\t//sets the last loaded bean express of the form\n+\t\tcomp.setAttribute(BinderCtrl.LOAD_FORM_EXPRESSION, getPropertyString());\n+\t\t\n+\t\tif (form instanceof FormLegacy) { // ZK-4501: add SimpleForm back for compatibility\n+\t\t\tif (form instanceof FormLegacyExt) {\n+\t\t\t\tFormLegacyExt fex = (FormLegacyExt) form;\n \t\t\t\t\n \t\t\t\t//ZK-1259, for the case of nested form expression in same loading, e.g. @load(fx.hash[fx.key]),\n \t\t\t\t//it will produce 2 loadField name, 'hash[fx.key]' & 'key',\n \t\t\t\t//and fx + 'hash[fx.key]' will get null if fx + 'key' is not loaded yet and throw exception\n \t\t\t\t//i sort the field name to let inner value be loaded into form first.\n-\t\t\t\tfinal String fomrid = getFormId();\n+\t\t\t\tfinal String formId = getFormId();\n \t\t\t\tList<String> fields = new LinkedList<String>(fex.getLoadFieldNames());\n \t\t\t\tCollections.sort(fields, new Comparator<String>() {\n \t\t\t\t\t\n \t\t\t\t\tpublic int compare(String o1, String o2) {\n-\t\t\t\t\t\to1 = BindELContext.appendFields(fomrid, o1);\n-\t\t\t\t\t\to2 = BindELContext.appendFields(fomrid, o2);\n+\t\t\t\t\t\to1 = BindELContext.appendFields(formId, o1);\n+\t\t\t\t\t\to2 = BindELContext.appendFields(formId, o2);\n \t\t\t\t\t\tif (o1.indexOf(o2) > 0) return 1;\n \t\t\t\t\t\tif (o2.indexOf(o1) > 0) return -1;\n \t\t\t\t\t\treturn 0;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1NDQzMg==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381054432", "bodyText": "extract", "author": "plijyfes", "createdAt": "2020-02-19T03:04:34Z", "path": "zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java", "diffHunk": "@@ -118,20 +123,41 @@ public Form getFormBean(BindContext ctx) {\n \tpublic void save(BindContext ctx) {\n \t\tfinal Binder binder = getBinder();\n \t\tfinal Component comp = getComponent(); //ctx.getComponent();\n-\t\tfinal Form form = getFormBean(ctx);\n-\n+\t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();\n+\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n+\t\t\n \t\tBindingExecutionInfoCollector collector = ((BinderCtrl) getBinder()).getBindingExecutionInfoCollector();\n-\t\tif (collector != null) {\n-\t\t\tcollector.addInfo(new SaveInfo(SaveInfo.FORM_SAVE, comp, getConditionString(ctx), getFormId(),\n-\t\t\t\t\tgetPropertyString(), form, getArgs(), null));\n-\t\t}\n \n \t\t//update form field into backing bean\n-\t\tFormStatus formStatus = form.getFormStatus();\n-\t\tif (formStatus.isDirty())\n-\t\t\tformStatus.submit(ctx);\n-\n-\t\tbinder.notifyChange(formStatus, \".\"); //notify change of fxStatus and fxStatus.*\n+\t\tif (formLegacy != null) {\n+\t\t\tif (collector != null) {", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java b/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\nindex abb8750d76..a7e5c711a6 100644\n--- a/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\n\n@@ -124,18 +124,14 @@ public class SaveFormBindingImpl extends FormBindingImpl implements SaveFormBind\n \t\tfinal Binder binder = getBinder();\n \t\tfinal Component comp = getComponent(); //ctx.getComponent();\n \t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();\n-\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n+\t\tForm form = getFormBean();\n \t\t\n \t\tBindingExecutionInfoCollector collector = ((BinderCtrl) getBinder()).getBindingExecutionInfoCollector();\n \n \t\t//update form field into backing bean\n-\t\tif (formLegacy != null) {\n-\t\t\tif (collector != null) {\n-\t\t\t\tcollector.addInfo(new SaveInfo(SaveInfo.FORM_SAVE, comp, getConditionString(ctx), getFormId(),\n-\t\t\t\t\t\tgetPropertyString(), formLegacy, getArgs(), null));\n-\t\t\t}\n-\t\t\tif (formLegacy instanceof FormExt) {\n-\t\t\t\tfor (String field : ((FormExt) formLegacy).getSaveFieldNames()) {\n+\t\tif (form instanceof FormLegacy) {\n+\t\t\tif (form instanceof FormLegacyExt) {\n+\t\t\t\tfor (String field : ((FormLegacyExt) form).getSaveFieldNames()) {\n \t\t\t\t\tfinal ExpressionX expr = getFieldExpression(eval, field);\n \t\t\t\t\tif (expr != null) {\n \t\t\t\t\t\t//ZK-911. Load from Form bean via expression(so will use form's AccessFieldName)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1NjMyNw==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381056327", "bodyText": "Form <- FormLegacy", "author": "plijyfes", "createdAt": "2020-02-19T03:13:39Z", "path": "zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java", "diffHunk": "@@ -153,12 +179,16 @@ public Property getValidate(BindContext ctx) {\n \t\tfinal Binder binder = getBinder();\n \t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();\n \t\tfinal Component comp = getComponent(); //ctx.getComponent();\n-\t\tfinal Form form = getFormBean(ctx);\n-\n+\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n \t\tfinal ExpressionX expr = getBaseExpression(eval);\n+\t\tfinal Object base = eval.getValue(ctx, comp, expr);\n \t\tif (expr != null) {\n-\t\t\tfinal Object base = eval.getValue(ctx, comp, expr);\n-\t\t\treturn new PropertyImpl(base, \".\", form);\n+\t\t\tif (formLegacy == null) {\n+\t\t\t\tfinal Form form = getFormBean(ctx);\n+\t\t\t\treturn new PropertyImpl(base, \".\", form);", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java b/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\nindex abb8750d76..a7e5c711a6 100644\n--- a/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\n\n@@ -179,16 +179,13 @@ public class SaveFormBindingImpl extends FormBindingImpl implements SaveFormBind\n \t\tfinal Binder binder = getBinder();\n \t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();\n \t\tfinal Component comp = getComponent(); //ctx.getComponent();\n-\t\tfinal FormLegacy formLegacy = getFormLegacyBean();\n \t\tfinal ExpressionX expr = getBaseExpression(eval);\n-\t\tfinal Object base = eval.getValue(ctx, comp, expr);\n+\t\tForm form = getFormBean();\n \t\tif (expr != null) {\n-\t\t\tif (formLegacy == null) {\n-\t\t\t\tfinal Form form = getFormBean(ctx);\n-\t\t\t\treturn new PropertyImpl(base, \".\", form);\n-\t\t\t} else {\n-\t\t\t\treturn new PropertyImpl(base, \".\", formLegacy);\n-\t\t\t}\n+\t\t\tfinal Object base = eval.getValue(ctx, comp, expr);\n+\t\t\tif (!(form instanceof FormLegacy))\n+\t\t\t\tform = getFormBean(ctx);\n+\t\t\treturn new PropertyImpl(base, \".\", form);\n \t\t}\n \t\treturn null;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1ODE5NA==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381058194", "bodyText": "do twice?", "author": "plijyfes", "createdAt": "2020-02-19T03:22:26Z", "path": "zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java", "diffHunk": "@@ -96,9 +101,46 @@ protected void addTracking(List<String> series) {\n \t\t\t//check if a PropertyBinding inside a Form\n \t\t\tfinal Component comp = bctx != null ? bctx.getComponent() : binding.getComponent();\n \t\t\tfinal Object base = comp.getAttribute(prop, true);\n-\t\t\tif (base instanceof Form) {\n+\t\t\tfinal String fieldName = fieldName(it);\n+\t\t\t\n+\t\t\tif (base instanceof FormLegacy) { // ZK-4501: add SimpleForm back for compatibility\n+\t\t\t\tfinal FormLegacy formLegacyBean = (FormLegacy) base;\n+\t\t\t\tif (fieldName != null) {\n+\t\t\t\t\tif (binding instanceof SavePropertyBinding && !Boolean.TRUE.equals(isVisted)) {\n+\t\t\t\t\t\tif (_log.isDebugEnabled()) {\n+\t\t\t\t\t\t\t_log.debug(\"add save-field '%s' to form '%s'\", fieldName, formLegacyBean);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (formLegacyBean instanceof FormExt) {\n+\t\t\t\t\t\t\t((FormExt) formLegacyBean).addSaveFieldName(fieldName);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\t((BinderCtrl) binder).addFormAssociatedSaveBinding(comp, prop, (SavePropertyBinding) binding, fieldName);\n+\t\t\t\t\t} else if (binding instanceof LoadPropertyBinding\n+\t\t\t\t\t\t\t|| binding instanceof LoadChildrenBinding || binding instanceof ReferenceBinding) {\n+\t\t\t\t\t\tif (_log.isDebugEnabled()) {\n+\t\t\t\t\t\t\t_log.debug(\"add load-field '%s' to form '%s'\", fieldName, formLegacyBean);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (formLegacyBean instanceof FormExt) {\n+\t\t\t\t\t\t\t((FormExt) formLegacyBean).addLoadFieldName(fieldName);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tif (dotracker) {\n+\t\t\t\t\t\tif (srcprops == null) {\n+\t\t\t\t\t\t\ttracker.addTracking(comp, new String[]{prop, fieldName}, binding);\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\ttracker.addDependsOn(comp, srcprops, binding, dependsOnComp, new String[]{prop, fieldName});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t} else {", "originalCommit": "d2e01bdd51d65490b55d17507a1732cf6845d2e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "403543f3ebfe2381336aad9a51299ce857de2a49", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java b/zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java\nindex 49f77e6d2f..ea66e0cc9d 100644\n--- a/zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java\n+++ b/zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java\n\n@@ -110,8 +110,8 @@ public class BindExpressionBuilder extends ExpressionBuilder {\n \t\t\t\t\t\tif (_log.isDebugEnabled()) {\n \t\t\t\t\t\t\t_log.debug(\"add save-field '%s' to form '%s'\", fieldName, formLegacyBean);\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (formLegacyBean instanceof FormExt) {\n-\t\t\t\t\t\t\t((FormExt) formLegacyBean).addSaveFieldName(fieldName);\n+\t\t\t\t\t\tif (formLegacyBean instanceof FormLegacyExt) {\n+\t\t\t\t\t\t\t((FormLegacyExt) formLegacyBean).addSaveFieldName(fieldName);\n \t\t\t\t\t\t}\n \t\t\t\t\t\t((BinderCtrl) binder).addFormAssociatedSaveBinding(comp, prop, (SavePropertyBinding) binding, fieldName);\n \t\t\t\t\t} else if (binding instanceof LoadPropertyBinding\n"}}, {"oid": "403543f3ebfe2381336aad9a51299ce857de2a49", "url": "https://github.com/zkoss/zk/commit/403543f3ebfe2381336aad9a51299ce857de2a49", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-20T03:42:35Z", "type": "forcePushed"}, {"oid": "0801d14f34690447d433c5c2a1da0fa783743403", "url": "https://github.com/zkoss/zk/commit/0801d14f34690447d433c5c2a1da0fa783743403", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-20T03:49:54Z", "type": "forcePushed"}, {"oid": "9ddfcbcaa998a81ac1b159ee44cffd0b3596ec54", "url": "https://github.com/zkoss/zk/commit/9ddfcbcaa998a81ac1b159ee44cffd0b3596ec54", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-20T04:04:34Z", "type": "forcePushed"}, {"oid": "8403bd994e34165be57d3a27204d02b5b8f1f29b", "url": "https://github.com/zkoss/zk/commit/8403bd994e34165be57d3a27204d02b5b8f1f29b", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-20T04:32:01Z", "type": "forcePushed"}, {"oid": "3902287bf829d992aa4f7bf99375921f89f1912a", "url": "https://github.com/zkoss/zk/commit/3902287bf829d992aa4f7bf99375921f89f1912a", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-20T04:43:40Z", "type": "forcePushed"}, {"oid": "c82bc8e59aba58da5b9b1c8536b8a86c2c60eb37", "url": "https://github.com/zkoss/zk/commit/c82bc8e59aba58da5b9b1c8536b8a86c2c60eb37", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-20T04:49:33Z", "type": "forcePushed"}, {"oid": "3cba996d8fdc7440c2206ac9a6aa6658ea2a3f64", "url": "https://github.com/zkoss/zk/commit/3cba996d8fdc7440c2206ac9a6aa6658ea2a3f64", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-20T04:53:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgwMTkxNw==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381801917", "bodyText": "remove", "author": "plijyfes", "createdAt": "2020-02-20T06:33:27Z", "path": "zkbind/src/org/zkoss/bind/FormLegacyStatus.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/* FormLegacyStatus.java\n+\n+\t\tPurpose:\n+\t\t\n+\t\tDescription:\n+\t\t\n+\t\tHistory:\n+\t\t\t\tWed Feb 19 15:45:29 CST 2020, Created by leon\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n+*/\n+package org.zkoss.bind;\n+\n+/**\n+ * Represents the runtime information of the {@link FormLegacy}\n+ * @deprecated see {@link FormLegacy}\n+ * @author Leon\n+ * @since 9.0.1\n+ */\n+public interface FormLegacyStatus extends FormStatus {\n+\t\n+\t/**\n+\t * Returns whether the form has been modified \n+\t * @return whether the form has been modified.\n+\t * @see FormLegacyStatus#isDirty()\n+\t */\n+\tpublic boolean isDirty();", "originalCommit": "3cba996d8fdc7440c2206ac9a6aa6658ea2a3f64", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae925c460bef9a0a7ad25de472f08ca1775d2aeb", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/FormLegacyStatus.java b/zkbind/src/org/zkoss/bind/FormLegacyStatus.java\ndeleted file mode 100644\nindex d8d5085531..0000000000\n--- a/zkbind/src/org/zkoss/bind/FormLegacyStatus.java\n+++ /dev/null\n\n@@ -1,28 +0,0 @@\n-/* FormLegacyStatus.java\n-\n-\t\tPurpose:\n-\t\t\n-\t\tDescription:\n-\t\t\n-\t\tHistory:\n-\t\t\t\tWed Feb 19 15:45:29 CST 2020, Created by leon\n-\n-Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n-*/\n-package org.zkoss.bind;\n-\n-/**\n- * Represents the runtime information of the {@link FormLegacy}\n- * @deprecated see {@link FormLegacy}\n- * @author Leon\n- * @since 9.0.1\n- */\n-public interface FormLegacyStatus extends FormStatus {\n-\t\n-\t/**\n-\t * Returns whether the form has been modified \n-\t * @return whether the form has been modified.\n-\t * @see FormLegacyStatus#isDirty()\n-\t */\n-\tpublic boolean isDirty();\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgwNDM5Nw==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381804397", "bodyText": "'@deprecated'", "author": "plijyfes", "createdAt": "2020-02-20T06:38:21Z", "path": "zkbind/src/org/zkoss/bind/impl/FormImpl.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/* FormImpl.java\n+\n+\t\tPurpose:\n+\t\t\n+\t\tDescription:\n+\t\t\n+\t\tHistory:\n+\t\t\t\tWed Feb 19 15:45:29 CST 2020, Created by leon\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n+*/\n+package org.zkoss.bind.impl;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.zkoss.bind.BindContext;\n+import org.zkoss.bind.FormLegacy;\n+import org.zkoss.bind.FormLegacyExt;\n+import org.zkoss.bind.FormLegacyStatus;\n+import org.zkoss.bind.FormStatus;\n+import org.zkoss.lang.Objects;\n+\n+/**\n+ * For compatibility only.\n+ * @deprecated As of release 9.0.1, please use {@link org.zkoss.bind.Form}\n+ * @author Leon\n+ * @since 9.0.1\n+ */", "originalCommit": "3cba996d8fdc7440c2206ac9a6aa6658ea2a3f64", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae925c460bef9a0a7ad25de472f08ca1775d2aeb", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/FormImpl.java b/zkbind/src/org/zkoss/bind/impl/FormImpl.java\nindex 480331a793..fbccf009ee 100644\n--- a/zkbind/src/org/zkoss/bind/impl/FormImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/FormImpl.java\n\n@@ -22,7 +22,6 @@ import java.util.Set;\n import org.zkoss.bind.BindContext;\n import org.zkoss.bind.FormLegacy;\n import org.zkoss.bind.FormLegacyExt;\n-import org.zkoss.bind.FormLegacyStatus;\n import org.zkoss.bind.FormStatus;\n import org.zkoss.lang.Objects;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgwODE0Ng==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381808146", "bodyText": "final Form form = getFormBean(ctx);", "author": "plijyfes", "createdAt": "2020-02-20T06:45:26Z", "path": "zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java", "diffHunk": "@@ -118,20 +123,36 @@ public Form getFormBean(BindContext ctx) {\n \tpublic void save(BindContext ctx) {\n \t\tfinal Binder binder = getBinder();\n \t\tfinal Component comp = getComponent(); //ctx.getComponent();\n-\t\tfinal Form form = getFormBean(ctx);\n-\n+\t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();\n+\t\tForm form = getFormBean();", "originalCommit": "3cba996d8fdc7440c2206ac9a6aa6658ea2a3f64", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae925c460bef9a0a7ad25de472f08ca1775d2aeb", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java b/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\nindex bf9898374b..ca609b9aa0 100644\n--- a/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\n\n@@ -123,13 +123,13 @@ public class SaveFormBindingImpl extends FormBindingImpl implements SaveFormBind\n \tpublic void save(BindContext ctx) {\n \t\tfinal Binder binder = getBinder();\n \t\tfinal Component comp = getComponent(); //ctx.getComponent();\n-\t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();\n-\t\tForm form = getFormBean();\n+\t\tfinal Form form = getFormBean(ctx);\n \t\tBindingExecutionInfoCollector collector = ((BinderCtrl) getBinder()).getBindingExecutionInfoCollector();\n-\n+\t\t\n \t\t//update form field into backing bean\n \t\tif (form instanceof FormLegacy) {\n \t\t\tif (form instanceof FormLegacyExt) {\n+\t\t\t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();\n \t\t\t\tfor (String field : ((FormLegacyExt) form).getSaveFieldNames()) {\n \t\t\t\t\tfinal ExpressionX expr = getFieldExpression(eval, field);\n \t\t\t\t\tif (expr != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgwODU4Mg==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381808582", "bodyText": "move into formLegacy part", "author": "plijyfes", "createdAt": "2020-02-20T06:46:10Z", "path": "zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java", "diffHunk": "@@ -118,20 +123,36 @@ public Form getFormBean(BindContext ctx) {\n \tpublic void save(BindContext ctx) {\n \t\tfinal Binder binder = getBinder();\n \t\tfinal Component comp = getComponent(); //ctx.getComponent();\n-\t\tfinal Form form = getFormBean(ctx);\n-\n+\t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();", "originalCommit": "3cba996d8fdc7440c2206ac9a6aa6658ea2a3f64", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae925c460bef9a0a7ad25de472f08ca1775d2aeb", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java b/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\nindex bf9898374b..ca609b9aa0 100644\n--- a/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\n+++ b/zkbind/src/org/zkoss/bind/impl/SaveFormBindingImpl.java\n\n@@ -123,13 +123,13 @@ public class SaveFormBindingImpl extends FormBindingImpl implements SaveFormBind\n \tpublic void save(BindContext ctx) {\n \t\tfinal Binder binder = getBinder();\n \t\tfinal Component comp = getComponent(); //ctx.getComponent();\n-\t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();\n-\t\tForm form = getFormBean();\n+\t\tfinal Form form = getFormBean(ctx);\n \t\tBindingExecutionInfoCollector collector = ((BinderCtrl) getBinder()).getBindingExecutionInfoCollector();\n-\n+\t\t\n \t\t//update form field into backing bean\n \t\tif (form instanceof FormLegacy) {\n \t\t\tif (form instanceof FormLegacyExt) {\n+\t\t\t\tfinal BindEvaluatorX eval = binder.getEvaluatorX();\n \t\t\t\tfor (String field : ((FormLegacyExt) form).getSaveFieldNames()) {\n \t\t\t\t\tfinal ExpressionX expr = getFieldExpression(eval, field);\n \t\t\t\t\tif (expr != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgxMDM2Mw==", "url": "https://github.com/zkoss/zk/pull/1884#discussion_r381810363", "bodyText": "duplicated", "author": "plijyfes", "createdAt": "2020-02-20T06:49:32Z", "path": "zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java", "diffHunk": "@@ -96,9 +101,31 @@ protected void addTracking(List<String> series) {\n \t\t\t//check if a PropertyBinding inside a Form\n \t\t\tfinal Component comp = bctx != null ? bctx.getComponent() : binding.getComponent();\n \t\t\tfinal Object base = comp.getAttribute(prop, true);\n-\t\t\tif (base instanceof Form) {\n+\t\t\tfinal String fieldName = fieldName(it);\n+\t\t\t\n+\t\t\tif (base instanceof FormLegacy) { // ZK-4501: add SimpleForm back for compatibility\n+\t\t\t\tfinal FormLegacy formLegacyBean = (FormLegacy) base;\n+\t\t\t\tif (fieldName != null) {\n+\t\t\t\t\tif (binding instanceof SavePropertyBinding && !Boolean.TRUE.equals(isVisted)) {\n+\t\t\t\t\t\tif (_log.isDebugEnabled()) {\n+\t\t\t\t\t\t\t_log.debug(\"add save-field '%s' to form '%s'\", fieldName, formLegacyBean);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (formLegacyBean instanceof FormLegacyExt) {\n+\t\t\t\t\t\t\t((FormLegacyExt) formLegacyBean).addSaveFieldName(fieldName);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\t((BinderCtrl) binder).addFormAssociatedSaveBinding(comp, prop, (SavePropertyBinding) binding, fieldName);", "originalCommit": "3cba996d8fdc7440c2206ac9a6aa6658ea2a3f64", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e7b08c66c623f1211a602f2463b94fe4822a35ba", "chunk": "diff --git a/zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java b/zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java\nindex 62e358f20b..73b4d56e72 100644\n--- a/zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java\n+++ b/zkbind/src/org/zkoss/bind/xel/zel/BindExpressionBuilder.java\n\n@@ -103,9 +103,10 @@ public class BindExpressionBuilder extends ExpressionBuilder {\n \t\t\tfinal Object base = comp.getAttribute(prop, true);\n \t\t\tfinal String fieldName = fieldName(it);\n \t\t\t\n-\t\t\tif (base instanceof FormLegacy) { // ZK-4501: add SimpleForm back for compatibility\n-\t\t\t\tfinal FormLegacy formLegacyBean = (FormLegacy) base;\n-\t\t\t\tif (fieldName != null) {\n+\t\t\tif (fieldName != null) {\n+\t\t\t\tif (base instanceof FormLegacy) { // ZK-4501: add SimpleForm back for compatibility\n+\t\t\t\t\tfinal FormLegacy formLegacyBean = (FormLegacy) base;\n+\t\t\t\t\t\n \t\t\t\t\tif (binding instanceof SavePropertyBinding && !Boolean.TRUE.equals(isVisted)) {\n \t\t\t\t\t\tif (_log.isDebugEnabled()) {\n \t\t\t\t\t\t\t_log.debug(\"add save-field '%s' to form '%s'\", fieldName, formLegacyBean);\n"}}, {"oid": "ae925c460bef9a0a7ad25de472f08ca1775d2aeb", "url": "https://github.com/zkoss/zk/commit/ae925c460bef9a0a7ad25de472f08ca1775d2aeb", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-25T10:09:14Z", "type": "forcePushed"}, {"oid": "62f05df3884ab2c7a3373d5e92dee24c60d8c74a", "url": "https://github.com/zkoss/zk/commit/62f05df3884ab2c7a3373d5e92dee24c60d8c74a", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-26T07:20:13Z", "type": "forcePushed"}, {"oid": "e7b08c66c623f1211a602f2463b94fe4822a35ba", "url": "https://github.com/zkoss/zk/commit/e7b08c66c623f1211a602f2463b94fe4822a35ba", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-26T07:48:30Z", "type": "forcePushed"}, {"oid": "975ba321077ff4293bec14417f1a3db3dc5d8400", "url": "https://github.com/zkoss/zk/commit/975ba321077ff4293bec14417f1a3db3dc5d8400", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-02-26T08:35:06Z", "type": "forcePushed"}, {"oid": "93139f940bfe7a1ebd4f56229b5fc3b5b0e4b01c", "url": "https://github.com/zkoss/zk/commit/93139f940bfe7a1ebd4f56229b5fc3b5b0e4b01c", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-04-22T06:40:38Z", "type": "commit"}, {"oid": "93139f940bfe7a1ebd4f56229b5fc3b5b0e4b01c", "url": "https://github.com/zkoss/zk/commit/93139f940bfe7a1ebd4f56229b5fc3b5b0e4b01c", "message": "ZK-4501: Add SimpleForm back for compatibility", "committedDate": "2020-04-22T06:40:38Z", "type": "forcePushed"}]}