{"pr_number": 1994, "pr_title": "Fail-fast manual tracer creation in presence of java agent", "pr_createdAt": "2020-10-15T16:45:28Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1994", "timeline": [{"oid": "d5aa7ff1e07e897c332202614a42759a5722c985", "url": "https://github.com/DataDog/dd-trace-java/commit/d5aa7ff1e07e897c332202614a42759a5722c985", "message": "Fail-fast manual tracer creation in presence of agent", "committedDate": "2020-10-15T16:36:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2MDk5NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1994#discussion_r505760995", "bodyText": "Do you want to throw an assertion error after this in case it doesn't fail as expected?", "author": "tylerbenson", "createdAt": "2020-10-15T18:39:29Z", "path": "dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package datadog.smoketest.opentracing;\n+\n+import datadog.opentracing.DDTracer;\n+\n+public class IncorrectSetupWithAgentApplication {\n+  public static void main(final String[] args) {\n+    try {\n+      DDTracer.builder().build();", "originalCommit": "d5aa7ff1e07e897c332202614a42759a5722c985", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dee1fe8902362223916372c8a9eb30d5cc1669cf", "chunk": "diff --git a/dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java b/dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java\nindex 52f1b80726..edc12a9e76 100644\n--- a/dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java\n+++ b/dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java\n\n@@ -6,7 +6,7 @@ public class IncorrectSetupWithAgentApplication {\n   public static void main(final String[] args) {\n     try {\n       DDTracer.builder().build();\n-    } catch (RuntimeException e) {\n+    } catch (IllegalStateException e) {\n       if (e.getMessage().startsWith(\"Datadog Tracer already installed\")) {\n         return;\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2Mjg3MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1994#discussion_r505762870", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"Datadog Tracer already installed. NOTE: Manually creating the tracer while using the java agent is not supported\");\n          \n          \n            \n                      \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");", "author": "tylerbenson", "createdAt": "2020-10-15T18:42:34Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -197,6 +198,14 @@ private DDTracer(\n       final LogHandler logHandler,\n       final StatsDClient statsDClient) {\n \n+    // Check if the tracer is already installed by the agent\n+    // Unable to use \"instanceof\" because of class renaming\n+    if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n+      log.warn(\n+          \"Datadog Tracer already installed. NOTE: Manually creating the tracer while using the java agent is not supported\");", "originalCommit": "d5aa7ff1e07e897c332202614a42759a5722c985", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dee1fe8902362223916372c8a9eb30d5cc1669cf", "chunk": "diff --git a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\nindex 4c4ee36dd6..b31cb4cb20 100644\n--- a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n+++ b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n\n@@ -201,9 +201,9 @@ public class DDTracer implements Tracer, datadog.trace.api.Tracer {\n     // Check if the tracer is already installed by the agent\n     // Unable to use \"instanceof\" because of class renaming\n     if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n-      log.warn(\n-          \"Datadog Tracer already installed. NOTE: Manually creating the tracer while using the java agent is not supported\");\n-      throw new RuntimeException(\"Datadog Tracer already installed\");\n+      log.error(\n+          \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n+      throw new IllegalStateException(\"Datadog Tracer already installed\");\n     }\n \n     if (logHandler != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2MzIxMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1994#discussion_r505763213", "bodyText": "Since we're throwing an exception, perhaps this should be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  log.warn(\n          \n          \n            \n                  log.error(", "author": "tylerbenson", "createdAt": "2020-10-15T18:43:03Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -197,6 +198,14 @@ private DDTracer(\n       final LogHandler logHandler,\n       final StatsDClient statsDClient) {\n \n+    // Check if the tracer is already installed by the agent\n+    // Unable to use \"instanceof\" because of class renaming\n+    if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n+      log.warn(", "originalCommit": "d5aa7ff1e07e897c332202614a42759a5722c985", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dee1fe8902362223916372c8a9eb30d5cc1669cf", "chunk": "diff --git a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\nindex 4c4ee36dd6..b31cb4cb20 100644\n--- a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n+++ b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n\n@@ -201,9 +201,9 @@ public class DDTracer implements Tracer, datadog.trace.api.Tracer {\n     // Check if the tracer is already installed by the agent\n     // Unable to use \"instanceof\" because of class renaming\n     if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n-      log.warn(\n-          \"Datadog Tracer already installed. NOTE: Manually creating the tracer while using the java agent is not supported\");\n-      throw new RuntimeException(\"Datadog Tracer already installed\");\n+      log.error(\n+          \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n+      throw new IllegalStateException(\"Datadog Tracer already installed\");\n     }\n \n     if (logHandler != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2Mzg5NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1994#discussion_r505763895", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  throw new RuntimeException(\"Datadog Tracer already installed\");\n          \n          \n            \n                  throw new IllegalStateException(\"Datadog Tracer already installed\");", "author": "tylerbenson", "createdAt": "2020-10-15T18:44:24Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -197,6 +198,14 @@ private DDTracer(\n       final LogHandler logHandler,\n       final StatsDClient statsDClient) {\n \n+    // Check if the tracer is already installed by the agent\n+    // Unable to use \"instanceof\" because of class renaming\n+    if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n+      log.warn(\n+          \"Datadog Tracer already installed. NOTE: Manually creating the tracer while using the java agent is not supported\");\n+      throw new RuntimeException(\"Datadog Tracer already installed\");", "originalCommit": "d5aa7ff1e07e897c332202614a42759a5722c985", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dee1fe8902362223916372c8a9eb30d5cc1669cf", "chunk": "diff --git a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\nindex 4c4ee36dd6..b31cb4cb20 100644\n--- a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n+++ b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n\n@@ -201,9 +201,9 @@ public class DDTracer implements Tracer, datadog.trace.api.Tracer {\n     // Check if the tracer is already installed by the agent\n     // Unable to use \"instanceof\" because of class renaming\n     if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n-      log.warn(\n-          \"Datadog Tracer already installed. NOTE: Manually creating the tracer while using the java agent is not supported\");\n-      throw new RuntimeException(\"Datadog Tracer already installed\");\n+      log.error(\n+          \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n+      throw new IllegalStateException(\"Datadog Tracer already installed\");\n     }\n \n     if (logHandler != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2NDA1Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1994#discussion_r505764052", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                } catch (RuntimeException e) {\n          \n          \n            \n                } catch (IllegalStateException e) {", "author": "tylerbenson", "createdAt": "2020-10-15T18:44:44Z", "path": "dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package datadog.smoketest.opentracing;\n+\n+import datadog.opentracing.DDTracer;\n+\n+public class IncorrectSetupWithAgentApplication {\n+  public static void main(final String[] args) {\n+    try {\n+      DDTracer.builder().build();\n+    } catch (RuntimeException e) {", "originalCommit": "d5aa7ff1e07e897c332202614a42759a5722c985", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dee1fe8902362223916372c8a9eb30d5cc1669cf", "chunk": "diff --git a/dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java b/dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java\nindex 52f1b80726..edc12a9e76 100644\n--- a/dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java\n+++ b/dd-smoke-tests/opentracing/src/main/java/datadog/smoketest/opentracing/IncorrectSetupWithAgentApplication.java\n\n@@ -6,7 +6,7 @@ public class IncorrectSetupWithAgentApplication {\n   public static void main(final String[] args) {\n     try {\n       DDTracer.builder().build();\n-    } catch (RuntimeException e) {\n+    } catch (IllegalStateException e) {\n       if (e.getMessage().startsWith(\"Datadog Tracer already installed\")) {\n         return;\n       }\n"}}, {"oid": "dee1fe8902362223916372c8a9eb30d5cc1669cf", "url": "https://github.com/DataDog/dd-trace-java/commit/dee1fe8902362223916372c8a9eb30d5cc1669cf", "message": "Apply suggestions from code review\n\nCo-authored-by: Tyler Benson <tyler.benson@datadoghq.com>", "committedDate": "2020-10-15T18:49:47Z", "type": "commit"}]}