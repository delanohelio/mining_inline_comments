{"pr_number": 1788, "pr_title": "Fix double read of shared atomic in reactor instrumentation", "pr_createdAt": "2020-08-20T09:30:55Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1788", "timeline": [{"oid": "c969ad6df95eeecd6b3cf9aba507fe98752de73d", "url": "https://github.com/DataDog/dd-trace-java/commit/c969ad6df95eeecd6b3cf9aba507fe98752de73d", "message": "Fix double read of shared atomic in reactor instrumentation", "committedDate": "2020-08-20T09:28:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgxNDAyMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1788#discussion_r473814023", "bodyText": "This is just cleanup, of using the thing we actually read 4 lines above.", "author": "bantonsson", "createdAt": "2020-08-20T09:32:09Z", "path": "dd-java-agent/instrumentation/reactor-core-3.1/src/main/java8/datadog/trace/instrumentation/reactor/core/TracingSubscriber.java", "diffHunk": "@@ -42,7 +42,7 @@ public TracingSubscriber(final AgentSpan upstreamSpan, final CoreSubscriber<T> d\n       if (downstreamScope != null) {\n         downstreamScope.setAsyncPropagation(true);\n         // create a hard reference to the trace that we don't want reported until we are done\n-        continuation.set(activeScope().capture());\n+        continuation.set(downstreamScope.capture());", "originalCommit": "c969ad6df95eeecd6b3cf9aba507fe98752de73d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}