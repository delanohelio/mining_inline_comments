{"pr_number": 1192, "pr_title": "Add support for Spring Scheduling", "pr_createdAt": "2020-01-27T22:07:57Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1192", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyNTc4Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r371525787", "bodyText": "Apply formatting.", "author": "tylerbenson", "createdAt": "2020-01-27T22:46:33Z", "path": "dd-java-agent/instrumentation/spring-data-1.8/src/main/java/datadog/trace/instrumentation/springdata/SpringRepositoryInstrumentation.java", "diffHunk": "@@ -29,6 +18,18 @@\n import org.springframework.data.repository.core.support.RepositoryFactorySupport;\n import org.springframework.data.repository.core.support.RepositoryProxyPostProcessor;\n \n+import java.lang.reflect.Method;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import static datadog.trace.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.springdata.SpringDataDecorator.DECORATOR;\n+import static net.bytebuddy.matcher.ElementMatchers.isConstructor;\n+import static net.bytebuddy.matcher.ElementMatchers.isInterface;\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+import static net.bytebuddy.matcher.ElementMatchers.not;", "originalCommit": "e032d19408f7236f198c64036e506510b8edbedc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4OTIzNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r371889234", "bodyText": "Using google-java-format? I think I read about it in one of our wiki docs.", "author": "heathkd", "createdAt": "2020-01-28T15:52:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyNTc4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ2OTg1OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r372469858", "bodyText": "yes.  You should apply the google-java-format plugin in Idea.  You can also run ./gradlew googleJavaFormat.", "author": "tylerbenson", "createdAt": "2020-01-29T15:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyNTc4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "931ac63eca7416c0bb15b08134a12c5896ae2939", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-data-1.8/src/main/java/datadog/trace/instrumentation/springdata/SpringRepositoryInstrumentation.java b/dd-java-agent/instrumentation/spring-data-1.8/src/main/java/datadog/trace/instrumentation/springdata/SpringRepositoryInstrumentation.java\nindex c56c3c7915..7e93ea6575 100644\n--- a/dd-java-agent/instrumentation/spring-data-1.8/src/main/java/datadog/trace/instrumentation/springdata/SpringRepositoryInstrumentation.java\n+++ b/dd-java-agent/instrumentation/spring-data-1.8/src/main/java/datadog/trace/instrumentation/springdata/SpringRepositoryInstrumentation.java\n\n@@ -18,18 +29,6 @@ import org.springframework.data.repository.core.RepositoryInformation;\n import org.springframework.data.repository.core.support.RepositoryFactorySupport;\n import org.springframework.data.repository.core.support.RepositoryProxyPostProcessor;\n \n-import java.lang.reflect.Method;\n-import java.util.Collections;\n-import java.util.Map;\n-\n-import static datadog.trace.instrumentation.api.AgentTracer.activateSpan;\n-import static datadog.trace.instrumentation.api.AgentTracer.startSpan;\n-import static datadog.trace.instrumentation.springdata.SpringDataDecorator.DECORATOR;\n-import static net.bytebuddy.matcher.ElementMatchers.isConstructor;\n-import static net.bytebuddy.matcher.ElementMatchers.isInterface;\n-import static net.bytebuddy.matcher.ElementMatchers.named;\n-import static net.bytebuddy.matcher.ElementMatchers.not;\n-\n @AutoService(Instrumenter.class)\n public final class SpringRepositoryInstrumentation extends Instrumenter.Default {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyNjE5NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r371526195", "bodyText": "delete this.", "author": "tylerbenson", "createdAt": "2020-01-27T22:47:37Z", "path": "dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// This file includes software developed at SignalFx", "originalCommit": "e032d19408f7236f198c64036e506510b8edbedc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ec5d69e2af7d784decca91e1e7815c60be3f2e0", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java b/dd-java-agent/instrumentation/spring-scheduling-1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\nsimilarity index 91%\nrename from dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\nrename to dd-java-agent/instrumentation/spring-scheduling-1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\nindex 16a41b8a67..169bfd9e41 100644\n--- a/dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\n+++ b/dd-java-agent/instrumentation/spring-scheduling-1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\n\n@@ -1,5 +1,3 @@\n-// This file includes software developed at SignalFx\n-\n package datadog.trace.instrumentation.springscheduling;\n \n import datadog.trace.agent.decorator.BaseDecorator;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzMDgzOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r371530839", "bodyText": "Instead, use spanNameForClass.", "author": "tylerbenson", "createdAt": "2020-01-27T23:01:10Z", "path": "dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// This file includes software developed at SignalFx\n+\n+package datadog.trace.instrumentation.springscheduling;\n+\n+import datadog.trace.agent.decorator.BaseDecorator;\n+import datadog.trace.api.DDTags;\n+import datadog.trace.instrumentation.api.AgentSpan;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.scheduling.support.ScheduledMethodRunnable;\n+\n+@Slf4j\n+public class SpringSchedulingDecorator extends BaseDecorator {\n+  public static final SpringSchedulingDecorator DECORATE = new SpringSchedulingDecorator();\n+\n+  private SpringSchedulingDecorator() {}\n+\n+  @Override\n+  protected String[] instrumentationNames() {\n+    return new String[] {\"spring-scheduling\"};\n+  }\n+\n+  @Override\n+  protected String spanType() {\n+    return null;\n+  }\n+\n+  @Override\n+  protected String component() {\n+    return \"spring-scheduling\";\n+  }\n+\n+  public AgentSpan onRun(final AgentSpan span, final Runnable runnable) {\n+    if (runnable != null) {\n+      String resourceName = \"\";\n+      if (runnable instanceof ScheduledMethodRunnable) {\n+        final ScheduledMethodRunnable scheduledMethodRunnable = (ScheduledMethodRunnable) runnable;\n+        resourceName = spanNameForMethod(scheduledMethodRunnable.getMethod());\n+      } else {\n+        final String className = runnable.getClass().getName();", "originalCommit": "e032d19408f7236f198c64036e506510b8edbedc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ec5d69e2af7d784decca91e1e7815c60be3f2e0", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java b/dd-java-agent/instrumentation/spring-scheduling-1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\nsimilarity index 91%\nrename from dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\nrename to dd-java-agent/instrumentation/spring-scheduling-1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\nindex 16a41b8a67..169bfd9e41 100644\n--- a/dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\n+++ b/dd-java-agent/instrumentation/spring-scheduling-1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\n\n@@ -1,5 +1,3 @@\n-// This file includes software developed at SignalFx\n-\n package datadog.trace.instrumentation.springscheduling;\n \n import datadog.trace.agent.decorator.BaseDecorator;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzMTE2Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r371531166", "bodyText": "To circle back, MethodInvokingRunnable is the legacy system that was deprecated in 3.0.  Probably not worth explicitly worrying about for now.", "author": "tylerbenson", "createdAt": "2020-01-27T23:02:09Z", "path": "dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// This file includes software developed at SignalFx\n+\n+package datadog.trace.instrumentation.springscheduling;\n+\n+import datadog.trace.agent.decorator.BaseDecorator;\n+import datadog.trace.api.DDTags;\n+import datadog.trace.instrumentation.api.AgentSpan;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.scheduling.support.ScheduledMethodRunnable;\n+\n+@Slf4j\n+public class SpringSchedulingDecorator extends BaseDecorator {\n+  public static final SpringSchedulingDecorator DECORATE = new SpringSchedulingDecorator();\n+\n+  private SpringSchedulingDecorator() {}\n+\n+  @Override\n+  protected String[] instrumentationNames() {\n+    return new String[] {\"spring-scheduling\"};\n+  }\n+\n+  @Override\n+  protected String spanType() {\n+    return null;\n+  }\n+\n+  @Override\n+  protected String component() {\n+    return \"spring-scheduling\";\n+  }\n+\n+  public AgentSpan onRun(final AgentSpan span, final Runnable runnable) {\n+    if (runnable != null) {\n+      String resourceName = \"\";\n+      if (runnable instanceof ScheduledMethodRunnable) {", "originalCommit": "e032d19408f7236f198c64036e506510b8edbedc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ec5d69e2af7d784decca91e1e7815c60be3f2e0", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java b/dd-java-agent/instrumentation/spring-scheduling-1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\nsimilarity index 91%\nrename from dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\nrename to dd-java-agent/instrumentation/spring-scheduling-1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\nindex 16a41b8a67..169bfd9e41 100644\n--- a/dd-java-agent/instrumentation/spring-scheduling/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\n+++ b/dd-java-agent/instrumentation/spring-scheduling-1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringSchedulingDecorator.java\n\n@@ -1,5 +1,3 @@\n-// This file includes software developed at SignalFx\n-\n package datadog.trace.instrumentation.springscheduling;\n \n import datadog.trace.agent.decorator.BaseDecorator;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzMTMwNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r371531306", "bodyText": "^^^ This can all be removed.", "author": "tylerbenson", "createdAt": "2020-01-27T23:02:38Z", "path": "dd-java-agent/instrumentation/spring-scheduling/src/test/java/IntervalTask.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// import datadog.trace.api.DDTags;\n+// import datadog.trace.instrumentation.api.AgentScope;\n+// import datadog.trace.instrumentation.api.AgentSpan;", "originalCommit": "e032d19408f7236f198c64036e506510b8edbedc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ec5d69e2af7d784decca91e1e7815c60be3f2e0", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-scheduling/src/test/java/IntervalTask.java b/dd-java-agent/instrumentation/spring-scheduling-1/src/test/java/IntervalTask.java\nsimilarity index 88%\nrename from dd-java-agent/instrumentation/spring-scheduling/src/test/java/IntervalTask.java\nrename to dd-java-agent/instrumentation/spring-scheduling-1/src/test/java/IntervalTask.java\nindex ce3e4494d9..0ec04fdc29 100644\n--- a/dd-java-agent/instrumentation/spring-scheduling/src/test/java/IntervalTask.java\n+++ b/dd-java-agent/instrumentation/spring-scheduling-1/src/test/java/IntervalTask.java\n\n@@ -14,10 +14,6 @@\n  * limitations under the License.\n  */\n \n-// import datadog.trace.api.DDTags;\n-// import datadog.trace.instrumentation.api.AgentScope;\n-// import datadog.trace.instrumentation.api.AgentSpan;\n-\n import org.springframework.scheduling.annotation.Scheduled;\n import org.springframework.stereotype.Component;\n \n"}}, {"oid": "8ec5d69e2af7d784decca91e1e7815c60be3f2e0", "url": "https://github.com/DataDog/dd-trace-java/commit/8ec5d69e2af7d784decca91e1e7815c60be3f2e0", "message": "address PR comments", "committedDate": "2020-01-30T20:28:16Z", "type": "forcePushed"}, {"oid": "931ac63eca7416c0bb15b08134a12c5896ae2939", "url": "https://github.com/DataDog/dd-trace-java/commit/931ac63eca7416c0bb15b08134a12c5896ae2939", "message": "change version of spring context library", "committedDate": "2020-02-01T23:04:33Z", "type": "forcePushed"}, {"oid": "ffc57fb07411c8b207049486571d65432fb1346d", "url": "https://github.com/DataDog/dd-trace-java/commit/ffc57fb07411c8b207049486571d65432fb1346d", "message": "increase spring-context version number to 3.2.3 so unit tests build", "committedDate": "2020-02-03T21:46:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc2NzA4MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r374767080", "bodyText": "Remove this.", "author": "tylerbenson", "createdAt": "2020-02-04T16:08:57Z", "path": "dd-java-agent/instrumentation/spring-scheduling-3.2.4/src/test/java/IntervalTask.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.", "originalCommit": "2574ab89a41031bc28bcb9f1529a74611689152f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39dbee7b37154863e7ac95d159bfb44b235cdf70", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-scheduling-3.2.4/src/test/java/IntervalTask.java b/dd-java-agent/instrumentation/spring-scheduling-3.2.4/src/test/java/IntervalTask.java\ndeleted file mode 100644\nindex 44209b5a21..0000000000\n--- a/dd-java-agent/instrumentation/spring-scheduling-3.2.4/src/test/java/IntervalTask.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-/*\n- * Copyright 2012-2015 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.TimeUnit;\n-import org.springframework.scheduling.annotation.Scheduled;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class IntervalTask implements Runnable {\n-\n-  private final CountDownLatch latch = new CountDownLatch(1);\n-\n-  @Scheduled(fixedRate = 5000)\n-  @Override\n-  public void run() {\n-    latch.countDown();\n-  }\n-\n-  public void blockUntilExecute() throws InterruptedException {\n-    latch.await(5, TimeUnit.SECONDS);\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc2NzIwNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r374767204", "bodyText": "Remove this.", "author": "tylerbenson", "createdAt": "2020-02-04T16:09:07Z", "path": "dd-java-agent/instrumentation/spring-scheduling-3.2.4/src/test/java/TriggerTask.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.", "originalCommit": "2574ab89a41031bc28bcb9f1529a74611689152f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39dbee7b37154863e7ac95d159bfb44b235cdf70", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-scheduling-3.2.4/src/test/java/TriggerTask.java b/dd-java-agent/instrumentation/spring-scheduling-3.2.4/src/test/java/TriggerTask.java\ndeleted file mode 100644\nindex 083258db2d..0000000000\n--- a/dd-java-agent/instrumentation/spring-scheduling-3.2.4/src/test/java/TriggerTask.java\n+++ /dev/null\n\n@@ -1,40 +0,0 @@\n-/*\n- * Copyright 2012-2015 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.TimeUnit;\n-import org.springframework.scheduling.annotation.Scheduled;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class TriggerTask implements Runnable {\n-\n-  public TriggerTask() {\n-    System.out.println(\"in the ScheduledTasks constructor\");\n-  }\n-\n-  private final CountDownLatch latch = new CountDownLatch(1);\n-\n-  @Scheduled(cron = \"0/5 * * * * *\")\n-  @Override\n-  public void run() {\n-    latch.countDown();\n-  }\n-\n-  public void blockUntilExecute() throws InterruptedException {\n-    latch.await(5, TimeUnit.SECONDS);\n-  }\n-}\n"}}, {"oid": "3bb564b38f18ea6ff030d799af63f8425093df6a", "url": "https://github.com/DataDog/dd-trace-java/commit/3bb564b38f18ea6ff030d799af63f8425093df6a", "message": "remove locks and clearing of TEST_WRITER", "committedDate": "2020-02-06T00:14:34Z", "type": "forcePushed"}, {"oid": "fa388902489d3db95a54c36b437b6f3bdd331ac5", "url": "https://github.com/DataDog/dd-trace-java/commit/fa388902489d3db95a54c36b437b6f3bdd331ac5", "message": "remove locks and clearing of TEST_WRITER", "committedDate": "2020-02-06T00:39:20Z", "type": "forcePushed"}, {"oid": "ee31d33b7bf5ad67c77250a683f119306217147d", "url": "https://github.com/DataDog/dd-trace-java/commit/ee31d33b7bf5ad67c77250a683f119306217147d", "message": "update versions in gradle file", "committedDate": "2020-02-07T16:00:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNDY1OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r376534659", "bodyText": "remove this.", "author": "tylerbenson", "createdAt": "2020-02-07T18:18:20Z", "path": "dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/TriggerTask.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */", "originalCommit": "ee31d33b7bf5ad67c77250a683f119306217147d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39dbee7b37154863e7ac95d159bfb44b235cdf70", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/TriggerTask.java b/dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/TriggerTask.java\ndeleted file mode 100644\nindex 083258db2d..0000000000\n--- a/dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/TriggerTask.java\n+++ /dev/null\n\n@@ -1,40 +0,0 @@\n-/*\n- * Copyright 2012-2015 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.TimeUnit;\n-import org.springframework.scheduling.annotation.Scheduled;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class TriggerTask implements Runnable {\n-\n-  public TriggerTask() {\n-    System.out.println(\"in the ScheduledTasks constructor\");\n-  }\n-\n-  private final CountDownLatch latch = new CountDownLatch(1);\n-\n-  @Scheduled(cron = \"0/5 * * * * *\")\n-  @Override\n-  public void run() {\n-    latch.countDown();\n-  }\n-\n-  public void blockUntilExecute() throws InterruptedException {\n-    latch.await(5, TimeUnit.SECONDS);\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNDgxNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r376534814", "bodyText": "remove this.", "author": "tylerbenson", "createdAt": "2020-02-07T18:18:42Z", "path": "dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/IntervalTask.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */", "originalCommit": "ee31d33b7bf5ad67c77250a683f119306217147d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39dbee7b37154863e7ac95d159bfb44b235cdf70", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/IntervalTask.java b/dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/IntervalTask.java\ndeleted file mode 100644\nindex 44209b5a21..0000000000\n--- a/dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/IntervalTask.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-/*\n- * Copyright 2012-2015 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.TimeUnit;\n-import org.springframework.scheduling.annotation.Scheduled;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class IntervalTask implements Runnable {\n-\n-  private final CountDownLatch latch = new CountDownLatch(1);\n-\n-  @Scheduled(fixedRate = 5000)\n-  @Override\n-  public void run() {\n-    latch.countDown();\n-  }\n-\n-  public void blockUntilExecute() throws InterruptedException {\n-    latch.await(5, TimeUnit.SECONDS);\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNTQzMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1192#discussion_r376535430", "bodyText": "not really needed.", "author": "tylerbenson", "createdAt": "2020-02-07T18:19:51Z", "path": "dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/TriggerTask.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import org.springframework.scheduling.annotation.Scheduled;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class TriggerTask implements Runnable {\n+\n+  public TriggerTask() {\n+    System.out.println(\"in the ScheduledTasks constructor\");\n+  }", "originalCommit": "ee31d33b7bf5ad67c77250a683f119306217147d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39dbee7b37154863e7ac95d159bfb44b235cdf70", "chunk": "diff --git a/dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/TriggerTask.java b/dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/TriggerTask.java\ndeleted file mode 100644\nindex 083258db2d..0000000000\n--- a/dd-java-agent/instrumentation/spring-scheduling-3.2.3/src/test/java/TriggerTask.java\n+++ /dev/null\n\n@@ -1,40 +0,0 @@\n-/*\n- * Copyright 2012-2015 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.TimeUnit;\n-import org.springframework.scheduling.annotation.Scheduled;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class TriggerTask implements Runnable {\n-\n-  public TriggerTask() {\n-    System.out.println(\"in the ScheduledTasks constructor\");\n-  }\n-\n-  private final CountDownLatch latch = new CountDownLatch(1);\n-\n-  @Scheduled(cron = \"0/5 * * * * *\")\n-  @Override\n-  public void run() {\n-    latch.countDown();\n-  }\n-\n-  public void blockUntilExecute() throws InterruptedException {\n-    latch.await(5, TimeUnit.SECONDS);\n-  }\n-}\n"}}, {"oid": "39dbee7b37154863e7ac95d159bfb44b235cdf70", "url": "https://github.com/DataDog/dd-trace-java/commit/39dbee7b37154863e7ac95d159bfb44b235cdf70", "message": "change module and file names to match version of earliest supported version of spring-context", "committedDate": "2020-02-14T18:50:10Z", "type": "forcePushed"}, {"oid": "3de452b1879194462afc1e52c5fd2062978af84c", "url": "https://github.com/DataDog/dd-trace-java/commit/3de452b1879194462afc1e52c5fd2062978af84c", "message": "change imports to use bootstrap api package", "committedDate": "2020-02-15T00:53:27Z", "type": "forcePushed"}, {"oid": "68c323ac567a7762dd7e3431fc47aa0da7b3828a", "url": "https://github.com/DataDog/dd-trace-java/commit/68c323ac567a7762dd7e3431fc47aa0da7b3828a", "message": "create ScheduledTasks bean and application context config", "committedDate": "2020-02-15T01:46:00Z", "type": "commit"}, {"oid": "cc1aaf5fc5b9529d28876a26450e674a04c569af", "url": "https://github.com/DataDog/dd-trace-java/commit/cc1aaf5fc5b9529d28876a26450e674a04c569af", "message": "replace Trace annotation with regular API interaction", "committedDate": "2020-02-15T01:46:26Z", "type": "commit"}, {"oid": "b21e36159182129ae8e9371652898b3e4f488834", "url": "https://github.com/DataDog/dd-trace-java/commit/b21e36159182129ae8e9371652898b3e4f488834", "message": "add test for interval task and trigger task", "committedDate": "2020-02-15T01:46:26Z", "type": "commit"}, {"oid": "9eb51248cd0281fed0cb6d7f655f93ec9c838781", "url": "https://github.com/DataDog/dd-trace-java/commit/9eb51248cd0281fed0cb6d7f655f93ec9c838781", "message": "address PR comments", "committedDate": "2020-02-15T01:47:16Z", "type": "commit"}, {"oid": "f3537e16650ae83f73f97f47c7ae95404f86e3b5", "url": "https://github.com/DataDog/dd-trace-java/commit/f3537e16650ae83f73f97f47c7ae95404f86e3b5", "message": "change module and file names to match version of earliest supported version of spring-context", "committedDate": "2020-02-15T01:47:16Z", "type": "commit"}, {"oid": "917deb19becdab0d3ef8192febf417d6995ee4d1", "url": "https://github.com/DataDog/dd-trace-java/commit/917deb19becdab0d3ef8192febf417d6995ee4d1", "message": "change imports to use bootstrap api package", "committedDate": "2020-02-15T01:48:18Z", "type": "commit"}, {"oid": "917deb19becdab0d3ef8192febf417d6995ee4d1", "url": "https://github.com/DataDog/dd-trace-java/commit/917deb19becdab0d3ef8192febf417d6995ee4d1", "message": "change imports to use bootstrap api package", "committedDate": "2020-02-15T01:48:18Z", "type": "forcePushed"}]}