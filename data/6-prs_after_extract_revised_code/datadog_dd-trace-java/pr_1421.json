{"pr_number": 1421, "pr_title": "Do not stop profiling on fatal exceptions", "pr_createdAt": "2020-05-01T17:13:55Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1421", "timeline": [{"oid": "014cb92dc7ab745869bd2104b0ec077eed8dda02", "url": "https://github.com/DataDog/dd-trace-java/commit/014cb92dc7ab745869bd2104b0ec077eed8dda02", "message": "Do not stop profiling on fatal exceptions", "committedDate": "2020-05-01T17:12:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwMzU4OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1421#discussion_r419303589", "bodyText": "For OOME usually it is not really good to try and and log exception - the memory is stretched already and the logging statement can throw its own OOME and propagate the exception we are trying to mask to the caller.\nI would suggest handling OOME differently and just silently ignore it.", "author": "jbachorik", "createdAt": "2020-05-04T09:10:02Z", "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/controller/ProfilingSystem.java", "diffHunk": "@@ -199,8 +199,13 @@ public void run() {\n       } catch (final Exception e) {\n         log.error(\"Exception in profiling thread, continuing\", e);\n       } catch (final Throwable t) {\n-        log.error(\"Fatal exception in profiling thread, exiting\", t);\n-        throw t;\n+        /*\n+        Try to continue even after fatal exception. It seems to be useful to attempt to store profile when this happens.\n+        For example JVM maybe out of heap and throwing OutOfMemoryError - we probably still would want to continue and", "originalCommit": "014cb92dc7ab745869bd2104b0ec077eed8dda02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MjU4MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1421#discussion_r419362581", "bodyText": "good point, I'll just wrap the whole logging statement in try/catch", "author": "mar-kolya", "createdAt": "2020-05-04T11:12:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwMzU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxNTM0NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1421#discussion_r419515345", "bodyText": "Good idea to try the log if possible!", "author": "dbenamydd", "createdAt": "2020-05-04T15:18:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwMzU4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3295f19e27e98e9f809545475db47895fce487f8", "chunk": "diff --git a/dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/controller/ProfilingSystem.java b/dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/controller/ProfilingSystem.java\nindex 03ef2a32ae..69738d33a0 100644\n--- a/dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/controller/ProfilingSystem.java\n+++ b/dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/controller/ProfilingSystem.java\n\n@@ -205,7 +205,12 @@ public final class ProfilingSystem {\n         try to save profile later.\n         Another reason is that it may be bad to stop profiling if the rest of the app is continuing.\n          */\n-        log.error(\"Fatal exception in profiling thread, trying to continue\", t);\n+        try {\n+          log.error(\"Fatal exception in profiling thread, trying to continue\", t);\n+        } catch (final Throwable t2) {\n+          // This should almost never happen and there is not much we can do here in cases like\n+          // OutOfMemoryError, so we will just ignore this.\n+        }\n       }\n     }\n   }\n"}}, {"oid": "3295f19e27e98e9f809545475db47895fce487f8", "url": "https://github.com/DataDog/dd-trace-java/commit/3295f19e27e98e9f809545475db47895fce487f8", "message": "Catch and ignore exceptions in logging", "committedDate": "2020-05-04T11:10:19Z", "type": "commit"}]}