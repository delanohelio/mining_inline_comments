{"pr_number": 2052, "pr_title": "Unwrapped java.sql PreparedStatement and Connection", "pr_createdAt": "2020-11-04T23:14:29Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2052", "timeline": [{"oid": "c5c6d4cc5f0fb110bb82348242a8aec5701749d7", "url": "https://github.com/DataDog/dd-trace-java/commit/c5c6d4cc5f0fb110bb82348242a8aec5701749d7", "message": "add put() and getIfPresent() to DDCache", "committedDate": "2020-11-04T23:01:48Z", "type": "commit"}, {"oid": "b6cf741d9e3ec98b6f3dd44aeeddfd3f4480c79b", "url": "https://github.com/DataDog/dd-trace-java/commit/b6cf741d9e3ec98b6f3dd44aeeddfd3f4480c79b", "message": "Unwrap PreparedStatement and Connection", "committedDate": "2020-11-04T23:35:28Z", "type": "commit"}, {"oid": "b6cf741d9e3ec98b6f3dd44aeeddfd3f4480c79b", "url": "https://github.com/DataDog/dd-trace-java/commit/b6cf741d9e3ec98b6f3dd44aeeddfd3f4480c79b", "message": "Unwrap PreparedStatement and Connection", "committedDate": "2020-11-04T23:35:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NDU2MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2052#discussion_r517884560", "bodyText": "Could we use ClassValue here instead? (which have weak keys)", "author": "richardstartin", "createdAt": "2020-11-05T08:53:32Z", "path": "dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/JDBCUtils.java", "diffHunk": "@@ -1,13 +1,49 @@\n package datadog.trace.instrumentation.jdbc;\n \n+import datadog.trace.api.cache.DDCache;\n+import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.ExceptionLogger;\n import java.lang.reflect.Field;\n import java.sql.Connection;\n+import java.sql.PreparedStatement;\n import java.sql.Statement;\n \n public abstract class JDBCUtils {\n   private static Field c3poField = null;\n \n+  // Cache if the class's isWrapperFor() or unwrap() methods are abstract\n+  // Using classnames to avoid the need for a WeakMap\n+  public static final DDCache<String, Boolean> ABSTRACT_UNWRAP = DDCaches.newFixedSizeCache(64);", "originalCommit": "b6cf741d9e3ec98b6f3dd44aeeddfd3f4480c79b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03738b04617f849495768c0d33b75384987dc092", "chunk": "diff --git a/dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/JDBCUtils.java b/dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/JDBCUtils.java\nindex da080501d6..3a89c340ae 100644\n--- a/dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/JDBCUtils.java\n+++ b/dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/JDBCUtils.java\n\n@@ -1,9 +1,8 @@\n package datadog.trace.instrumentation.jdbc;\n \n-import datadog.trace.api.cache.DDCache;\n-import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.ExceptionLogger;\n import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.Statement;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NTY5OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2052#discussion_r517885698", "bodyText": "These changes aren't necessary if we, ahem, wrap the unwrapping logic in a ClassValue<Boolean>", "author": "richardstartin", "createdAt": "2020-11-05T08:55:24Z", "path": "internal-api/src/main/java/datadog/trace/api/cache/CHMCache.java", "diffHunk": "@@ -11,6 +11,24 @@ public CHMCache(final int initialCapacity) {\n     this.chm = new ConcurrentHashMap<>(initialCapacity);\n   }\n \n+  @Override", "originalCommit": "b6cf741d9e3ec98b6f3dd44aeeddfd3f4480c79b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9a0fb2db8a2b1980d699b1d4696bb4bb7b2cbaa", "chunk": "diff --git a/internal-api/src/main/java/datadog/trace/api/cache/CHMCache.java b/internal-api/src/main/java/datadog/trace/api/cache/CHMCache.java\nindex 1437725fdf..e9ecc67e65 100644\n--- a/internal-api/src/main/java/datadog/trace/api/cache/CHMCache.java\n+++ b/internal-api/src/main/java/datadog/trace/api/cache/CHMCache.java\n\n@@ -11,24 +11,6 @@ final class CHMCache<K, V> implements DDCache<K, V> {\n     this.chm = new ConcurrentHashMap<>(initialCapacity);\n   }\n \n-  @Override\n-  public V put(K key, V value) {\n-    if (null == key) {\n-      return null;\n-    }\n-\n-    return chm.put(key, value);\n-  }\n-\n-  @Override\n-  public V getIfPresent(K key) {\n-    if (null == key) {\n-      return null;\n-    }\n-\n-    return chm.get(key);\n-  }\n-\n   @Override\n   public V computeIfAbsent(K key, Function<K, ? extends V> func) {\n     if (null == key) {\n"}}, {"oid": "e9a0fb2db8a2b1980d699b1d4696bb4bb7b2cbaa", "url": "https://github.com/DataDog/dd-trace-java/commit/e9a0fb2db8a2b1980d699b1d4696bb4bb7b2cbaa", "message": "Revert \"add put() and getIfPresent() to DDCache\"\n\nThis reverts commit c5c6d4cc5f0fb110bb82348242a8aec5701749d7.", "committedDate": "2020-11-06T22:47:31Z", "type": "commit"}, {"oid": "03738b04617f849495768c0d33b75384987dc092", "url": "https://github.com/DataDog/dd-trace-java/commit/03738b04617f849495768c0d33b75384987dc092", "message": "Implement cache using ClassValue", "committedDate": "2020-11-10T22:21:24Z", "type": "commit"}]}