{"pr_number": 1735, "pr_title": "add catch for exceptions in sample method", "pr_createdAt": "2020-08-03T14:52:01Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1735", "timeline": [{"oid": "72bc50349be678b2ed5ab2b91f137741a941bbd8", "url": "https://github.com/DataDog/dd-trace-java/commit/72bc50349be678b2ed5ab2b91f137741a941bbd8", "message": "add catch for exceptions in sample method\n\nand log it", "committedDate": "2020-08-03T14:50:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3MDA3Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1735#discussion_r464470077", "bodyText": "What is the chance of this happening on customer deployments?\nWould it be a very rare occasion only?", "author": "jbachorik", "createdAt": "2020-08-03T15:00:06Z", "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java", "diffHunk": "@@ -86,27 +86,31 @@ public void removeThread(long threadId) {\n   }\n \n   private void sample() {\n-    long[] tmpArray = threadIds.get();\n-    if (tmpArray == null || tmpArray.length == 0) {\n-      return;\n-    }\n-    ThreadStackProvider provider = ThreadStackAccess.getCurrentThreadStackProvider();\n-    if (provider instanceof NoneThreadStackProvider && providerFirstAccess) {\n-      log.warn(\"ThreadStack provider is no op. It will not provide thread stacks.\");\n-      providerFirstAccess = false;\n-    }\n-    final ThreadInfo[] threadInfos = provider.getThreadInfo(tmpArray);\n-    // dispatch to Scopes\n-    for (ThreadInfo threadInfo : threadInfos) {\n-      ScopeManager scopeManager = threadScopeMapper.forThread(threadInfo.getThreadId());\n-      if (scopeManager == null) {\n-        continue;\n+    try {\n+      long[] tmpArray = threadIds.get();\n+      if (tmpArray == null || tmpArray.length == 0) {\n+        return;\n+      }\n+      ThreadStackProvider provider = ThreadStackAccess.getCurrentThreadStackProvider();\n+      if (provider instanceof NoneThreadStackProvider && providerFirstAccess) {\n+        log.warn(\"ThreadStack provider is no op. It will not provide thread stacks.\");\n+        providerFirstAccess = false;\n       }\n-      ScopeStackCollector scopeStackCollector = scopeManager.getCurrentScope();\n-      if (scopeStackCollector == null) {\n-        continue;\n+      final ThreadInfo[] threadInfos = provider.getThreadInfo(tmpArray);\n+      // dispatch to Scopes\n+      for (ThreadInfo threadInfo : threadInfos) {\n+        ScopeManager scopeManager = threadScopeMapper.forThread(threadInfo.getThreadId());\n+        if (scopeManager == null) {\n+          continue;\n+        }\n+        ScopeStackCollector scopeStackCollector = scopeManager.getCurrentScope();\n+        if (scopeStackCollector == null) {\n+          continue;\n+        }\n+        scopeStackCollector.collect(threadInfo.getStackTrace());\n       }\n-      scopeStackCollector.collect(threadInfo.getStackTrace());\n+    } catch (Exception ex) {\n+      log.warn(\"Exception thrown during JMX sampling:\", ex);", "originalCommit": "72bc50349be678b2ed5ab2b91f137741a941bbd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5MzYyNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1735#discussion_r464493627", "bodyText": "well in fact it's happening in staging for prof-analyzer-java \ud83d\ude01", "author": "jpbempel", "createdAt": "2020-08-03T15:37:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3MDA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5NjU1Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1735#discussion_r464496557", "bodyText": "In that case perhaps INFO and some innocent message :) Customers tend to be quite spooked when seeing WARN and ERROR in their app logs :)", "author": "jbachorik", "createdAt": "2020-08-03T15:41:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3MDA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5NzI4Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1735#discussion_r464497287", "bodyText": "noted, right now, I am trying to figure out what is happening :)", "author": "jpbempel", "createdAt": "2020-08-03T15:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3MDA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwOTgwMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1735#discussion_r464509803", "bodyText": "done", "author": "jpbempel", "createdAt": "2020-08-03T16:04:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3MDA3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "68502bacee97e5e9e48a5b1c47f4ae0a57dc3a45", "chunk": "diff --git a/dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java b/dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java\nindex 3ceaaa142a..b94efd473f 100644\n--- a/dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java\n+++ b/dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java\n\n@@ -110,7 +110,7 @@ class JMXSampler {\n         scopeStackCollector.collect(threadInfo.getStackTrace());\n       }\n     } catch (Exception ex) {\n-      log.warn(\"Exception thrown during JMX sampling:\", ex);\n+      log.info(\"Exception thrown during JMX sampling:\", ex);\n     }\n   }\n }\n"}}, {"oid": "68502bacee97e5e9e48a5b1c47f4ae0a57dc3a45", "url": "https://github.com/DataDog/dd-trace-java/commit/68502bacee97e5e9e48a5b1c47f4ae0a57dc3a45", "message": "change log level to info", "committedDate": "2020-08-03T16:03:08Z", "type": "commit"}, {"oid": "994a0c842c5264e202a1bbbda680e6d99fc4cba5", "url": "https://github.com/DataDog/dd-trace-java/commit/994a0c842c5264e202a1bbbda680e6d99fc4cba5", "message": "Fix possible NPE on threadInfo", "committedDate": "2020-08-03T16:10:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxODUyOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1735#discussion_r464518529", "bodyText": "This should either be at debug only or rate limited.", "author": "tylerbenson", "createdAt": "2020-08-03T16:19:21Z", "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java", "diffHunk": "@@ -86,27 +86,34 @@ public void removeThread(long threadId) {\n   }\n \n   private void sample() {\n-    long[] tmpArray = threadIds.get();\n-    if (tmpArray == null || tmpArray.length == 0) {\n-      return;\n-    }\n-    ThreadStackProvider provider = ThreadStackAccess.getCurrentThreadStackProvider();\n-    if (provider instanceof NoneThreadStackProvider && providerFirstAccess) {\n-      log.warn(\"ThreadStack provider is no op. It will not provide thread stacks.\");\n-      providerFirstAccess = false;\n-    }\n-    final ThreadInfo[] threadInfos = provider.getThreadInfo(tmpArray);\n-    // dispatch to Scopes\n-    for (ThreadInfo threadInfo : threadInfos) {\n-      ScopeManager scopeManager = threadScopeMapper.forThread(threadInfo.getThreadId());\n-      if (scopeManager == null) {\n-        continue;\n+    try {\n+      long[] tmpArray = threadIds.get();\n+      if (tmpArray == null || tmpArray.length == 0) {\n+        return;\n+      }\n+      ThreadStackProvider provider = ThreadStackAccess.getCurrentThreadStackProvider();\n+      if (provider instanceof NoneThreadStackProvider && providerFirstAccess) {\n+        log.warn(\"ThreadStack provider is no op. It will not provide thread stacks.\");\n+        providerFirstAccess = false;\n       }\n-      ScopeStackCollector scopeStackCollector = scopeManager.getCurrentScope();\n-      if (scopeStackCollector == null) {\n-        continue;\n+      final ThreadInfo[] threadInfos = provider.getThreadInfo(tmpArray);\n+      // dispatch to Scopes\n+      for (ThreadInfo threadInfo : threadInfos) {\n+        if (threadInfo == null) {\n+          continue;\n+        }\n+        ScopeManager scopeManager = threadScopeMapper.forThread(threadInfo.getThreadId());\n+        if (scopeManager == null) {\n+          continue;\n+        }\n+        ScopeStackCollector scopeStackCollector = scopeManager.getCurrentScope();\n+        if (scopeStackCollector == null) {\n+          continue;\n+        }\n+        scopeStackCollector.collect(threadInfo.getStackTrace());\n       }\n-      scopeStackCollector.collect(threadInfo.getStackTrace());\n+    } catch (Exception ex) {\n+      log.info(\"Exception thrown during JMX sampling:\", ex);", "originalCommit": "994a0c842c5264e202a1bbbda680e6d99fc4cba5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUzMzUzNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1735#discussion_r464533534", "bodyText": "done", "author": "jpbempel", "createdAt": "2020-08-03T16:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxODUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "8316da857e7e91e9e37ef8787207c68caf0b9120", "chunk": "diff --git a/dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java b/dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java\nindex b7ccc44d15..6be65b2084 100644\n--- a/dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java\n+++ b/dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/JMXSampler.java\n\n@@ -113,7 +117,10 @@ class JMXSampler {\n         scopeStackCollector.collect(threadInfo.getStackTrace());\n       }\n     } catch (Exception ex) {\n-      log.info(\"Exception thrown during JMX sampling:\", ex);\n+      if (exceptionCount % exceptionCountBeforeLog == 0) {\n+        log.info(\"Exception thrown during JMX sampling:\", ex);\n+      }\n+      exceptionCount++;\n     }\n   }\n }\n"}}, {"oid": "8316da857e7e91e9e37ef8787207c68caf0b9120", "url": "https://github.com/DataDog/dd-trace-java/commit/8316da857e7e91e9e37ef8787207c68caf0b9120", "message": "add rate limiting for logging exception\n\n1 per minute", "committedDate": "2020-08-03T16:33:06Z", "type": "commit"}]}