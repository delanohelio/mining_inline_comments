{"pr_number": 1835, "pr_title": "pluggable id strategies", "pr_createdAt": "2020-09-04T14:04:06Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1835", "timeline": [{"oid": "c6b8d5e6a0c8219715847926781bad88f3c6b31f", "url": "https://github.com/DataDog/dd-trace-java/commit/c6b8d5e6a0c8219715847926781bad88f3c6b31f", "message": "pluggable id strategies to make debugging and asserting about concurrent context propagation easier", "committedDate": "2020-09-04T14:29:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483711631", "bodyText": "Should we assert that only random is used if the writer is DDAgentWriter?\nPerhaps we could even automatically set it to sequential if the ListWriter is used?", "author": "tylerbenson", "createdAt": "2020-09-04T15:56:51Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -189,6 +193,10 @@ private CoreTracer(\n     this.defaultSpanTags = defaultSpanTags;\n     this.serviceNameMappings = serviceNameMappings;\n     this.partialFlushMinSpans = partialFlushMinSpans;\n+    this.idGenerationStrategy =\n+        null == idGenerationStrategy\n+            ? Config.get().getIdGenerationStrategy()\n+            : idGenerationStrategy;", "originalCommit": "c6b8d5e6a0c8219715847926781bad88f3c6b31f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMzk2OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483713968", "bodyText": "I actually want the system property for benchmarking", "author": "richardstartin", "createdAt": "2020-09-04T16:01:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxNjU3Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483716572", "bodyText": "I'm not opposed to having that as an option.  I'm just saying it doesn't make sense to use non-random IDs for DDAgentWriter, so maybe we shouldn't allow it.  Are you using the agent writer for the benchmark?", "author": "tylerbenson", "createdAt": "2020-09-04T16:06:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxOTc4MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483719780", "bodyText": "Yes, sequential ids take up a lot less space because messagepack is good at stripping leading zeros. There is a WARN message in Config, stating if you don't use RANDOM, you're in uncharted territory and are alone. If you/anyone else would prefer that I remove the config option, I'll remove it.", "author": "richardstartin", "createdAt": "2020-09-04T16:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyMjQ1NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483722455", "bodyText": "another idea to consider is separating out the trace id and span id settings.  I think I'd be less concerned about spanid being sequential, but traceid has a much greater responsibility to be random in my mind.\n(I would even suggest that sequential should be the default span id generator when using list writer.)", "author": "tylerbenson", "createdAt": "2020-09-04T16:18:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyNDIzNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483724234", "bodyText": "OK, that makes sense. Since it's labour day on Monday and I want this for testing purposes (i.e. I have tests I want to write which depend on being able to do this), I will make changes along those lines next week but won't wait for approval.\nIf anyone wants the config property removed, please speak up, and I will remove it, but don't block the PR from being merged.", "author": "richardstartin", "createdAt": "2020-09-04T16:22:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "12be84ba2fc585682ab522393011ec4df7305f96", "url": "https://github.com/DataDog/dd-trace-java/commit/12be84ba2fc585682ab522393011ec4df7305f96", "message": "pluggable id strategies to make debugging and asserting about concurrent context propagation easier", "committedDate": "2020-09-07T14:54:57Z", "type": "forcePushed"}, {"oid": "0ef2031d112dd0d1ad2fd5da82848bd2b12e4d07", "url": "https://github.com/DataDog/dd-trace-java/commit/0ef2031d112dd0d1ad2fd5da82848bd2b12e4d07", "message": "pluggable id strategies to make debugging and asserting about concurrent context propagation easier", "committedDate": "2020-09-07T15:10:43Z", "type": "commit"}, {"oid": "0ef2031d112dd0d1ad2fd5da82848bd2b12e4d07", "url": "https://github.com/DataDog/dd-trace-java/commit/0ef2031d112dd0d1ad2fd5da82848bd2b12e4d07", "message": "pluggable id strategies to make debugging and asserting about concurrent context propagation easier", "committedDate": "2020-09-07T15:10:43Z", "type": "forcePushed"}]}