{"pr_number": 2155, "pr_title": "Add Muzzle reference creation for interfaces", "pr_createdAt": "2020-12-02T20:56:39Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2155", "timeline": [{"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433", "url": "https://github.com/DataDog/dd-trace-java/commit/bf7f42bdb40196b64fd3d83e29c90fead2c01433", "message": "Add Muzzle reference creation for interfaces\n\nThis will allow muzzle to fail if an implemented interface is missing.", "committedDate": "2020-12-02T20:57:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4MzYwMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534483600", "bodyText": "Seems like an unrelated change and a net negative.", "author": "richardstartin", "createdAt": "2020-12-02T21:10:49Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java", "diffHunk": "@@ -129,11 +131,6 @@ public Reference merge(final Reference anotherReference) {\n     return merged;\n   }\n \n-  @Override", "originalCommit": "bf7f42bdb40196b64fd3d83e29c90fead2c01433", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "chunk": "diff --git a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java\nindex 483f888e64..362b37d0cd 100644\n--- a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java\n+++ b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java\n\n@@ -131,6 +129,11 @@ public class Reference {\n     return merged;\n   }\n \n+  @Override\n+  public String toString() {\n+    return \"Reference<\" + className + \">\";\n+  }\n+\n   public static class Source {\n     private final String name;\n     private final int line;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NDg4Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534484887", "bodyText": "Doesn't produce the same result as before. In fact, I can't see and therefore reason about what it does produce any more. We have an annotation from a library which messes with IDE integrations so we can avoid a one liner.", "author": "richardstartin", "createdAt": "2020-12-02T21:13:16Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java", "diffHunk": "@@ -9,10 +9,12 @@\n import java.util.LinkedHashSet;\n import java.util.List;\n import java.util.Set;\n+import lombok.ToString;\n import net.bytebuddy.jar.asm.Opcodes;\n import net.bytebuddy.jar.asm.Type;\n \n /** An immutable reference to a jvm class. */\n+@ToString", "originalCommit": "bf7f42bdb40196b64fd3d83e29c90fead2c01433", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NTY4Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534485687", "bodyText": "I can revert the lombok change, but it was useful when trying to debug this problem as the previous toString only printed the name.", "author": "tylerbenson", "createdAt": "2020-12-02T21:14:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NDg4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "chunk": "diff --git a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java\nindex 483f888e64..362b37d0cd 100644\n--- a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java\n+++ b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java\n\n@@ -9,12 +9,10 @@ import java.util.EnumSet;\n import java.util.LinkedHashSet;\n import java.util.List;\n import java.util.Set;\n-import lombok.ToString;\n import net.bytebuddy.jar.asm.Opcodes;\n import net.bytebuddy.jar.asm.Type;\n \n /** An immutable reference to a jvm class. */\n-@ToString\n public class Reference {\n   private final Set<Source> sources;\n   private final String className;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NjA0NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534486045", "bodyText": "this is inconsistent with behaviour elsewhere in the class where the value -1 is used when no line number is known.", "author": "richardstartin", "createdAt": "2020-12-02T21:15:30Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceCreator.java", "diffHunk": "@@ -180,9 +180,16 @@ public void visit(\n     refSourceClassName = Utils.getClassName(name);\n     refSourceType = Type.getType(\"L\" + name + \";\");\n     refSourceTypeInternalName = refSourceType.getInternalName();\n-    // Additional references we could check\n-    // - supertype of class and visible from this package\n-    // - interfaces of class and visible from this package\n+\n+    // Add references to each of the interfaces.\n+    for (String iface : interfaces) {\n+      addReference(\n+          new Reference.Builder(iface)\n+              .withSource(refSourceClassName, 0) // We don't have a specific line number to use.", "originalCommit": "bf7f42bdb40196b64fd3d83e29c90fead2c01433", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ5MzAzMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534493032", "bodyText": "I'm not sure that the existing behaviour is correct. Line numbers will be missing if code has been passed through an obfuscator, for instance, in which case MethodVisitor.visitLineNumber wouldn't be entered, and line number 0 may be a better fallback value than -1.", "author": "richardstartin", "createdAt": "2020-12-02T21:28:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NjA0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ5NzA1Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534497053", "bodyText": "This only matters for our own code, so the case of an obfuscator doesn't likely apply.  I don't care between -1 and 0, but I did extract it out to a static final.", "author": "tylerbenson", "createdAt": "2020-12-02T21:36:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NjA0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "chunk": "diff --git a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceCreator.java b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceCreator.java\nindex 230d7bdf0c..08720f4639 100644\n--- a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceCreator.java\n+++ b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceCreator.java\n\n@@ -185,7 +187,9 @@ public class ReferenceCreator extends ClassVisitor {\n     for (String iface : interfaces) {\n       addReference(\n           new Reference.Builder(iface)\n-              .withSource(refSourceClassName, 0) // We don't have a specific line number to use.\n+              .withSource(\n+                  refSourceClassName,\n+                  UNDEFINED_LINE) // We don't have a specific line number to use.\n               .withFlag(Reference.Flag.PUBLIC)\n               .build());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NjcyNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534486727", "bodyText": "This is also an unrelated change... I uncommented it to verify it still worked and found it didn't, so I updated it here.", "author": "tylerbenson", "createdAt": "2020-12-02T21:16:44Z", "path": "dd-java-agent/testing/src/test/java/muzzle/TestClasses.java", "diffHunk": "@@ -95,10 +95,9 @@ public static boolean instanceofMethod(final Object a) {\n \n   // Can't test this until java 7 is dropped.\n   public static class InDyAdvice {\n-    //    public static MethodBodyAdvice.SomeInterface indyMethod(\n-    //        final MethodBodyAdvice.SomeImplementation a) {\n+    //    public static MethodBodyAdvice.HasMethod indyMethod(final MethodBodyAdvice.HasMethod a) {\n     //      Runnable aStaticMethod = MethodBodyAdvice.B::aStaticMethod;\n-    //      return a::someMethod;\n+    //      return a::requiredMethod;", "originalCommit": "bf7f42bdb40196b64fd3d83e29c90fead2c01433", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "url": "https://github.com/DataDog/dd-trace-java/commit/8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "message": "Add Muzzle reference creation for interfaces\n\nThis will allow muzzle to fail if an implemented interface is missing.", "committedDate": "2020-12-02T21:23:29Z", "type": "commit"}, {"oid": "8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "url": "https://github.com/DataDog/dd-trace-java/commit/8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "message": "Add Muzzle reference creation for interfaces\n\nThis will allow muzzle to fail if an implemented interface is missing.", "committedDate": "2020-12-02T21:23:29Z", "type": "forcePushed"}, {"oid": "5d9ca5faecad6dcdefef3e85d15a69816715c761", "url": "https://github.com/DataDog/dd-trace-java/commit/5d9ca5faecad6dcdefef3e85d15a69816715c761", "message": "Add root to log", "committedDate": "2020-12-03T20:10:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY1MTAwMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r535651000", "bodyText": "Why was this committed with this PR?", "author": "richardstartin", "createdAt": "2020-12-03T21:39:03Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -240,7 +240,8 @@ private void decrementRefAndMaybeWrite(boolean isRootSpan) {\n       }\n     }\n     if (log.isDebugEnabled()) {\n-      log.debug(\"t_id={} -> expired reference. pending count={}\", traceId, count);", "originalCommit": "5d9ca5faecad6dcdefef3e85d15a69816715c761", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY2MjU1OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r535662558", "bodyText": "Yes, agreed.  That seems completely unrelated and should not be in this PR.", "author": "dougqh", "createdAt": "2020-12-03T21:49:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY1MTAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NDI3NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r535684274", "bodyText": "it is unrelated to the pr.  I made this change to troubleshoot some build failures, but the build passed following this change.  It seems like a useful and very minor change so I left it in.", "author": "tylerbenson", "createdAt": "2020-12-03T22:17:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY1MTAwMA=="}], "type": "inlineReview", "revised_code": null}]}