{"pr_number": 1998, "pr_title": "Exclude internal agent threads from exception profiling", "pr_createdAt": "2020-10-16T15:28:25Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1998", "timeline": [{"oid": "cc07d608d7cc55b681c0484adc889145d8013c2a", "url": "https://github.com/DataDog/dd-trace-java/commit/cc07d608d7cc55b681c0484adc889145d8013c2a", "message": "Exclude internal agent threads from exception profiling", "committedDate": "2020-10-16T15:17:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU1NzE3Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1998#discussion_r506557173", "bodyText": "what do people think about using == here instead of equals?", "author": "mcculls", "createdAt": "2020-10-16T15:41:29Z", "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java11/datadog/exceptions/instrumentation/ThrowableInstanceAdvice.java", "diffHunk": "@@ -17,6 +19,12 @@ public static void onExit(@Advice.This final Throwable t) {\n      */\n     if (ThrowableInstanceAdviceHelper.enterHandler()) {\n       try {\n+        /*\n+         * Exclude internal agent threads from exception profiling.\n+         */\n+        if (AGENT_THREAD_GROUP.equals(Thread.currentThread().getThreadGroup())) {", "originalCommit": "cc07d608d7cc55b681c0484adc889145d8013c2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU2ODE2Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1998#discussion_r506568163", "bodyText": "I doubt it would make any difference after inlining given that reference equality is the first check in equals(), but would make a small improvement in bytecode size. I wouldn't bother.", "author": "richardstartin", "createdAt": "2020-10-16T15:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU1NzE3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "03fed6f079d4f43c499ac5a1e1f4a726bbacc8ad", "chunk": "diff --git a/dd-java-agent/instrumentation/exception-profiling/src/main/java11/datadog/exceptions/instrumentation/ThrowableInstanceAdvice.java b/dd-java-agent/instrumentation/exception-profiling/src/main/java11/datadog/exceptions/instrumentation/ThrowableInstanceAdvice.java\nindex 3459f1875d..8a91999173 100644\n--- a/dd-java-agent/instrumentation/exception-profiling/src/main/java11/datadog/exceptions/instrumentation/ThrowableInstanceAdvice.java\n+++ b/dd-java-agent/instrumentation/exception-profiling/src/main/java11/datadog/exceptions/instrumentation/ThrowableInstanceAdvice.java\n\n@@ -22,7 +23,8 @@ public class ThrowableInstanceAdvice {\n         /*\n          * Exclude internal agent threads from exception profiling.\n          */\n-        if (AGENT_THREAD_GROUP.equals(Thread.currentThread().getThreadGroup())) {\n+        if (Config.get().isProfilingExcludeAgentThreads()\n+            && AGENT_THREAD_GROUP.equals(Thread.currentThread().getThreadGroup())) {\n           return;\n         }\n         /*\n"}}, {"oid": "03fed6f079d4f43c499ac5a1e1f4a726bbacc8ad", "url": "https://github.com/DataDog/dd-trace-java/commit/03fed6f079d4f43c499ac5a1e1f4a726bbacc8ad", "message": "Add flag to exclude agent threads from profiling (default: true)", "committedDate": "2020-10-16T16:25:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc5OTcwMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1998#discussion_r507799700", "bodyText": "I think this should have been dd-trace-java since this is used by dd-trace-ot as well.", "author": "tylerbenson", "createdAt": "2020-10-19T14:31:41Z", "path": "internal-api/src/main/java/datadog/trace/util/DaemonThreadFactory.java", "diffHunk": "@@ -4,6 +4,8 @@\n \n /** A {@link ThreadFactory} implementation that starts all {@link Thread} as daemons. */\n public final class DaemonThreadFactory implements ThreadFactory {\n+  public static final ThreadGroup AGENT_THREAD_GROUP = new ThreadGroup(\"dd-java-agent\");", "originalCommit": "03fed6f079d4f43c499ac5a1e1f4a726bbacc8ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg3MDQ0OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1998#discussion_r507870448", "bodyText": "#2005", "author": "mcculls", "createdAt": "2020-10-19T16:00:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc5OTcwMA=="}], "type": "inlineReview", "revised_code": null}]}