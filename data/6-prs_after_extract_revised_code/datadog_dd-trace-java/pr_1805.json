{"pr_number": 1805, "pr_title": "cache boxed integers in a radix tree, make HTTP status and port primitives", "pr_createdAt": "2020-08-26T17:58:49Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1805", "timeline": [{"oid": "3abde15010b94701a0ae2617e313cae6828565d0", "url": "https://github.com/DataDog/dd-trace-java/commit/3abde15010b94701a0ae2617e313cae6828565d0", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-26T18:03:01Z", "type": "forcePushed"}, {"oid": "bc60ea983bfe09887d4ed275d1a327af81d7ce7b", "url": "https://github.com/DataDog/dd-trace-java/commit/bc60ea983bfe09887d4ed275d1a327af81d7ce7b", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-26T18:08:32Z", "type": "forcePushed"}, {"oid": "8161c79cf6da3a132c419487994468e4bac7781c", "url": "https://github.com/DataDog/dd-trace-java/commit/8161c79cf6da3a132c419487994468e4bac7781c", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-26T19:03:52Z", "type": "forcePushed"}, {"oid": "29d90d71420b5fbdd5813f307014c555bd1623fd", "url": "https://github.com/DataDog/dd-trace-java/commit/29d90d71420b5fbdd5813f307014c555bd1623fd", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-26T19:14:13Z", "type": "forcePushed"}, {"oid": "0cc99a51ba8c77aa77eaef92b16eecc32d136646", "url": "https://github.com/DataDog/dd-trace-java/commit/0cc99a51ba8c77aa77eaef92b16eecc32d136646", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-26T19:28:36Z", "type": "forcePushed"}, {"oid": "54ed9d6f58c0a49272d693b785b56692a769cd39", "url": "https://github.com/DataDog/dd-trace-java/commit/54ed9d6f58c0a49272d693b785b56692a769cd39", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-26T20:21:51Z", "type": "forcePushed"}, {"oid": "f3388987687cedc0b5ae91762ded03028cf10b06", "url": "https://github.com/DataDog/dd-trace-java/commit/f3388987687cedc0b5ae91762ded03028cf10b06", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-26T20:22:46Z", "type": "forcePushed"}, {"oid": "bcbf8a3c616264ab884f4a00765dadf1405556dc", "url": "https://github.com/DataDog/dd-trace-java/commit/bcbf8a3c616264ab884f4a00765dadf1405556dc", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-26T20:45:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYyMzkzMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1805#discussion_r477623933", "bodyText": "Is 9090 common enough to warrant caching here?", "author": "tylerbenson", "createdAt": "2020-08-26T22:27:23Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package datadog.trace.bootstrap.instrumentation.cache;\n+\n+import java.util.concurrent.atomic.AtomicReferenceArray;\n+\n+/** Sparse cache of commonly boxed values */\n+public final class RadixTreeBoxCache {\n+\n+  public static final RadixTreeBoxCache HTTP_STATUSES =\n+      new RadixTreeBoxCache(8, 64, 200, 201, 301, 307, 400, 401, 403, 404, 500, 502, 503);\n+\n+  public static final RadixTreeBoxCache PORTS =\n+      new RadixTreeBoxCache(256, 256, 80, 443, 8080, 9090);", "originalCommit": "bcbf8a3c616264ab884f4a00765dadf1405556dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODEyNjUyNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1805#discussion_r478126526", "bodyText": "Probably not.", "author": "richardstartin", "createdAt": "2020-08-27T05:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYyMzkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "7cc284006468f742ff2f839fb76778afda32f4a6", "chunk": "diff --git a/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java b/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java\nindex 2a8d9e61ae..8fd2cbf986 100644\n--- a/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java\n+++ b/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java\n\n@@ -5,11 +5,14 @@ import java.util.concurrent.atomic.AtomicReferenceArray;\n /** Sparse cache of commonly boxed values */\n public final class RadixTreeBoxCache {\n \n+  // should cover range [0, 512) to cover all standard HTTP statuses\n+  // 16 pages of 32 should keep the tree sparse with typical pages\n+  // covering ranges [192, 224), [288, 320), [384, 416), [480, 512)\n   public static final RadixTreeBoxCache HTTP_STATUSES =\n-      new RadixTreeBoxCache(8, 64, 200, 201, 301, 307, 400, 401, 403, 404, 500, 502, 503);\n+      new RadixTreeBoxCache(16, 32, 200, 201, 301, 307, 400, 401, 403, 404, 500, 502, 503);\n \n-  public static final RadixTreeBoxCache PORTS =\n-      new RadixTreeBoxCache(256, 256, 80, 443, 8080, 9090);\n+  // should cover range [0, 2^16)\n+  public static final RadixTreeBoxCache PORTS = new RadixTreeBoxCache(256, 256, 80, 443, 8080);\n \n   private final int level1;\n   private final int level2;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYyNTIyOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1805#discussion_r477625228", "bodyText": "A comment with how you determined your l1 and l2 sizes would be helpful.", "author": "tylerbenson", "createdAt": "2020-08-26T22:30:56Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package datadog.trace.bootstrap.instrumentation.cache;\n+\n+import java.util.concurrent.atomic.AtomicReferenceArray;\n+\n+/** Sparse cache of commonly boxed values */\n+public final class RadixTreeBoxCache {\n+\n+  public static final RadixTreeBoxCache HTTP_STATUSES =\n+      new RadixTreeBoxCache(8, 64, 200, 201, 301, 307, 400, 401, 403, 404, 500, 502, 503);", "originalCommit": "bcbf8a3c616264ab884f4a00765dadf1405556dc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7cc284006468f742ff2f839fb76778afda32f4a6", "chunk": "diff --git a/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java b/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java\nindex 2a8d9e61ae..8fd2cbf986 100644\n--- a/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java\n+++ b/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/cache/RadixTreeBoxCache.java\n\n@@ -5,11 +5,14 @@ import java.util.concurrent.atomic.AtomicReferenceArray;\n /** Sparse cache of commonly boxed values */\n public final class RadixTreeBoxCache {\n \n+  // should cover range [0, 512) to cover all standard HTTP statuses\n+  // 16 pages of 32 should keep the tree sparse with typical pages\n+  // covering ranges [192, 224), [288, 320), [384, 416), [480, 512)\n   public static final RadixTreeBoxCache HTTP_STATUSES =\n-      new RadixTreeBoxCache(8, 64, 200, 201, 301, 307, 400, 401, 403, 404, 500, 502, 503);\n+      new RadixTreeBoxCache(16, 32, 200, 201, 301, 307, 400, 401, 403, 404, 500, 502, 503);\n \n-  public static final RadixTreeBoxCache PORTS =\n-      new RadixTreeBoxCache(256, 256, 80, 443, 8080, 9090);\n+  // should cover range [0, 2^16)\n+  public static final RadixTreeBoxCache PORTS = new RadixTreeBoxCache(256, 256, 80, 443, 8080);\n \n   private final int level1;\n   private final int level2;\n"}}, {"oid": "7cc284006468f742ff2f839fb76778afda32f4a6", "url": "https://github.com/DataDog/dd-trace-java/commit/7cc284006468f742ff2f839fb76778afda32f4a6", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-27T05:18:10Z", "type": "commit"}, {"oid": "7cc284006468f742ff2f839fb76778afda32f4a6", "url": "https://github.com/DataDog/dd-trace-java/commit/7cc284006468f742ff2f839fb76778afda32f4a6", "message": "cache boxed integers in a radix tree", "committedDate": "2020-08-27T05:18:10Z", "type": "forcePushed"}]}