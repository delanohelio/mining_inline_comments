{"pr_number": 1955, "pr_title": "Write out a trace as soon as possible", "pr_createdAt": "2020-10-06T11:10:36Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1955", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500311651", "bodyText": "Please update the class comment with the new flow.", "author": "tylerbenson", "createdAt": "2020-10-06T14:06:30Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -281,32 +281,32 @@ private void expireReference(boolean isRootSpan) {\n       return;\n     }\n     final int count = pendingReferenceCount.decrementAndGet();\n-    if (isRootSpan) {\n-      if (0 < count) {\n+    if (count == 0) {", "originalCommit": "386536fd170d2f85536c757586327b616f47697e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM1MDY1MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500350650", "bodyText": "Yes, I debated whether this was necessary or not.\nI was also a little hesitant because of how this might work in the late arriving situations.  If we take out one continuation at a time, we'll end up sending small batches.\nThat will work well for our tests, but I think it is less clear what we want in production.\nI suspect this is probably the right choice for production as well since it reduces how long we're holding traces, but we need to verify carefully.", "author": "dougqh", "createdAt": "2020-10-06T14:46:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NDMxMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500394313", "bodyText": "So one idea would to be only do direct write when count == 0 if the trace is a rootSpan or it has not been written.", "author": "bantonsson", "createdAt": "2020-10-06T15:32:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwMDY1MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500400651", "bodyText": "I think this is what you're suggesting, but the write when count == 0 should probably only apply if the root span is finished and not written.", "author": "tylerbenson", "createdAt": "2020-10-06T15:39:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwOTA4NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500409085", "bodyText": "Yes, I changed the code to if (count == 0 && (isRootSpan || !rootSpanWritten.get())) {", "author": "bantonsson", "createdAt": "2020-10-06T15:50:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwOTM3Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500409377", "bodyText": "Comment at top has been updated", "author": "bantonsson", "createdAt": "2020-10-06T15:50:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4MDU3Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500480576", "bodyText": "Yes, that works for me.", "author": "dougqh", "createdAt": "2020-10-06T17:41:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "817f7bde1aa8635fe47661386d1dea62f3249727", "chunk": "diff --git a/dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java b/dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java\nindex 5c97d0e823..97fc276dfe 100644\n--- a/dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java\n+++ b/dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java\n\n@@ -281,7 +281,7 @@ public class PendingTrace implements AgentTrace {\n       return;\n     }\n     final int count = pendingReferenceCount.decrementAndGet();\n-    if (count == 0) {\n+    if (count == 0 && (isRootSpan || !rootSpanWritten.get())) {\n       // Finished with no pending work ... write immediately\n       write();\n     } else {\n"}}, {"oid": "817f7bde1aa8635fe47661386d1dea62f3249727", "url": "https://github.com/DataDog/dd-trace-java/commit/817f7bde1aa8635fe47661386d1dea62f3249727", "message": "Write out a trace as soon as possible", "committedDate": "2020-10-06T15:47:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDYzMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500414631", "bodyText": "Think it'd be worth capturing this detail in a field?", "author": "tylerbenson", "createdAt": "2020-10-06T15:58:00Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -415,6 +415,11 @@ public void cancel(final Set<WeakReference<AgentScope.Continuation>> weakReferen\n       ref = null;\n     }\n \n+    protected boolean isRootSpan() {\n+      AgentSpan span = this.spanUnderScope;\n+      return span == span.getLocalRootSpan();", "originalCommit": "817f7bde1aa8635fe47661386d1dea62f3249727", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5MzQ0MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500793440", "bodyText": "Maybe. I mean the code would be run the same number of times (once), and the Continuation instance would get larger.", "author": "bantonsson", "createdAt": "2020-10-07T07:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk2OTEwOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500969109", "bodyText": "No longer necessary", "author": "bantonsson", "createdAt": "2020-10-07T12:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDYzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5c8310fc3bc4c32d3e74bdbc04453882601a57ef", "chunk": "diff --git a/dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java b/dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java\nindex 8febc8ec6d..126d1280b7 100644\n--- a/dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java\n+++ b/dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java\n\n@@ -415,11 +415,6 @@ public class ContinuableScopeManager implements AgentScopeManager {\n       ref = null;\n     }\n \n-    protected boolean isRootSpan() {\n-      AgentSpan span = this.spanUnderScope;\n-      return span == span.getLocalRootSpan();\n-    }\n-\n     // Called by ContinuableScopeManager when a continued scope is closed\n     // Can't use cancel() for SingleContinuation because of the \"used\" check\n     abstract void cancelFromContinuedScopeClose();\n"}}, {"oid": "c449b5a06143ee5bf5251074c901d8bf24fa1c4f", "url": "https://github.com/DataDog/dd-trace-java/commit/c449b5a06143ee5bf5251074c901d8bf24fa1c4f", "message": "Write out a trace as soon as possible", "committedDate": "2020-10-07T09:50:01Z", "type": "forcePushed"}, {"oid": "5c8310fc3bc4c32d3e74bdbc04453882601a57ef", "url": "https://github.com/DataDog/dd-trace-java/commit/5c8310fc3bc4c32d3e74bdbc04453882601a57ef", "message": "Write out a trace as soon as possible", "committedDate": "2020-10-07T12:24:41Z", "type": "commit"}, {"oid": "5c8310fc3bc4c32d3e74bdbc04453882601a57ef", "url": "https://github.com/DataDog/dd-trace-java/commit/5c8310fc3bc4c32d3e74bdbc04453882601a57ef", "message": "Write out a trace as soon as possible", "committedDate": "2020-10-07T12:24:41Z", "type": "forcePushed"}]}