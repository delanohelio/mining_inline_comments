{"pr_number": 2116, "pr_title": "Automatically inject missing serialVersionUIDs when field-injecting Serializables", "pr_createdAt": "2020-11-24T18:26:55Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2116", "timeline": [{"oid": "71a8b687be2bbcc40e6d49db3e068a4f747d6b5e", "url": "https://github.com/DataDog/dd-trace-java/commit/71a8b687be2bbcc40e6d49db3e068a4f747d6b5e", "message": "Automatically inject missing serialVersionUIDs when field-injecting Serializables.\nThe generated serialVersionUID is based on the class shape before field-injection.", "committedDate": "2020-11-24T18:29:00Z", "type": "forcePushed"}, {"oid": "7ccc2915f4451dbbc35dcc84fd9baab7cca15457", "url": "https://github.com/DataDog/dd-trace-java/commit/7ccc2915f4451dbbc35dcc84fd9baab7cca15457", "message": "Automatically inject missing serialVersionUIDs when field-injecting Serializables.\nThe generated serialVersionUID is based on the class shape before field-injection.", "committedDate": "2020-11-24T23:32:50Z", "type": "forcePushed"}, {"oid": "18b5443101cb671f3d502af45d32614471e87078", "url": "https://github.com/DataDog/dd-trace-java/commit/18b5443101cb671f3d502af45d32614471e87078", "message": "Turn off injection of missing serialVersionUids by default", "committedDate": "2020-11-25T16:46:06Z", "type": "forcePushed"}, {"oid": "68baf2a68f978d0f2e1aebd5dec30a99463a6b0d", "url": "https://github.com/DataDog/dd-trace-java/commit/68baf2a68f978d0f2e1aebd5dec30a99463a6b0d", "message": "Automatically inject missing serialVersionUIDs when field-injecting Serializables.\nThe generated serialVersionUID is based on the class shape before field-injection.", "committedDate": "2020-11-25T17:13:43Z", "type": "commit"}, {"oid": "f97b7e1eb0575eb8355ace873270c43df6a49f00", "url": "https://github.com/DataDog/dd-trace-java/commit/f97b7e1eb0575eb8355ace873270c43df6a49f00", "message": "Turn off injection of missing serialVersionUids by default", "committedDate": "2020-11-25T17:13:46Z", "type": "commit"}, {"oid": "f97b7e1eb0575eb8355ace873270c43df6a49f00", "url": "https://github.com/DataDog/dd-trace-java/commit/f97b7e1eb0575eb8355ace873270c43df6a49f00", "message": "Turn off injection of missing serialVersionUids by default", "committedDate": "2020-11-25T17:13:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNjYwNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531216604", "bodyText": "Can you inject this flag instead and capture it from config as far up as possible please?", "author": "richardstartin", "createdAt": "2020-11-26T20:35:05Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldInjectionVisitor.java", "diffHunk": "@@ -82,6 +87,11 @@ public void visit(\n         final Set<String> set = new LinkedHashSet<>(Arrays.asList(interfaces));\n         set.add(INJECTED_FIELDS_MARKER_CLASS_NAME);\n         set.add(interfaceType.getInternalName());\n+        if (Config.get().isSerialVersionUIDFieldInjection()", "originalCommit": "f97b7e1eb0575eb8355ace873270c43df6a49f00", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "064fb09efe29b7acabf37ce5d6e251e7c385f0f0", "chunk": "diff --git a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldInjectionVisitor.java b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldInjectionVisitor.java\nindex 4022d2e256..0670fafa68 100644\n--- a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldInjectionVisitor.java\n+++ b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldInjectionVisitor.java\n\n@@ -87,8 +90,7 @@ final class FieldInjectionVisitor implements AsmVisitorWrapper {\n         final Set<String> set = new LinkedHashSet<>(Arrays.asList(interfaces));\n         set.add(INJECTED_FIELDS_MARKER_CLASS_NAME);\n         set.add(interfaceType.getInternalName());\n-        if (Config.get().isSerialVersionUIDFieldInjection()\n-            && instrumentedType.isAssignableTo(Serializable.class)) {\n+        if (serialVersionUIDFieldInjection && instrumentedType.isAssignableTo(Serializable.class)) {\n           serialVersionUIDInjector = new SerialVersionUIDInjector();\n           serialVersionUIDInjector.visit(version, access, name, signature, superName, interfaces);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNzM0Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531217347", "bodyText": "Don't we have a dependency on ASM with this class in it?", "author": "richardstartin", "createdAt": "2020-11-26T20:38:11Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/asm/SerialVersionUIDAdder.java", "diffHunk": "@@ -0,0 +1,493 @@\n+// ASM: a very small and fast Java bytecode manipulation framework", "originalCommit": "f97b7e1eb0575eb8355ace873270c43df6a49f00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyNTUxMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531225512", "bodyText": "Byte-Buddy's copy of ASM doesn't contain this particular type, only a subset of asm-commons.\nWe do currently have an unshaded version of this class under 'shared' thanks to a transitive dependency of:\ndogstatsd-> jnr-unixsocket -> jnr-ffi->asm-commons\nIt is technically possible to use this because none of the visitor methods currently have ASM types as parameters. However I was reluctant to depend on something that is an implementation detail of an unrelated feature - at the moment the versions are compatible, but that could change or it could be dropped at some point.\nI also ran into test issues because the transitive dependency is unshaded - certain tests bring in other dependencies that also pull in ASM but at a different version. In the end it was easier to just shade in a copy of this one file and keep it nicely isolated.", "author": "mcculls", "createdAt": "2020-11-26T21:12:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNzM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzNzA3NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531237074", "bodyText": "Seems fair enough", "author": "richardstartin", "createdAt": "2020-11-26T22:06:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNzM0Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNzc0NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531217744", "bodyText": "I know this is an existing pattern, but I'm struggling to see the benefit of it. Can't we just static import  TraceInstrumentationConfig.SERIALVERSIONUID_FIELD_INJECTION?", "author": "richardstartin", "createdAt": "2020-11-26T20:39:44Z", "path": "internal-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -181,6 +182,8 @@\n   public static final String PARTIAL_FLUSH_MIN_SPANS = TracerConfig.PARTIAL_FLUSH_MIN_SPANS;\n   public static final String RUNTIME_CONTEXT_FIELD_INJECTION =\n       TraceInstrumentationConfig.RUNTIME_CONTEXT_FIELD_INJECTION;\n+  public static final String SERIALVERSIONUID_FIELD_INJECTION =", "originalCommit": "f97b7e1eb0575eb8355ace873270c43df6a49f00", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "399a72092398ec817e9e8833852fed41b1b9583f", "chunk": "diff --git a/internal-api/src/main/java/datadog/trace/api/Config.java b/internal-api/src/main/java/datadog/trace/api/Config.java\nindex 0e20e6fe73..cee7b0bbc3 100644\n--- a/internal-api/src/main/java/datadog/trace/api/Config.java\n+++ b/internal-api/src/main/java/datadog/trace/api/Config.java\n\n@@ -182,8 +183,6 @@ public class Config {\n   public static final String PARTIAL_FLUSH_MIN_SPANS = TracerConfig.PARTIAL_FLUSH_MIN_SPANS;\n   public static final String RUNTIME_CONTEXT_FIELD_INJECTION =\n       TraceInstrumentationConfig.RUNTIME_CONTEXT_FIELD_INJECTION;\n-  public static final String SERIALVERSIONUID_FIELD_INJECTION =\n-      TraceInstrumentationConfig.SERIALVERSIONUID_FIELD_INJECTION;\n   public static final String PROPAGATION_STYLE_EXTRACT = TracerConfig.PROPAGATION_STYLE_EXTRACT;\n   public static final String PROPAGATION_STYLE_INJECT = TracerConfig.PROPAGATION_STYLE_INJECT;\n \n"}}, {"oid": "064fb09efe29b7acabf37ce5d6e251e7c385f0f0", "url": "https://github.com/DataDog/dd-trace-java/commit/064fb09efe29b7acabf37ce5d6e251e7c385f0f0", "message": "Capture serialVersionUIDFieldInjection flag when creating field-injection visitor", "committedDate": "2020-11-30T09:52:53Z", "type": "commit"}, {"oid": "399a72092398ec817e9e8833852fed41b1b9583f", "url": "https://github.com/DataDog/dd-trace-java/commit/399a72092398ec817e9e8833852fed41b1b9583f", "message": "DRY: prefer static import", "committedDate": "2020-11-30T09:55:46Z", "type": "commit"}]}