{"pr_number": 1225, "pr_title": "Introduce the LogsHandler", "pr_createdAt": "2020-02-14T17:33:11Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1225", "timeline": [{"oid": "9c26cacbaa17953d6358a3a02f6e83b01be53622", "url": "https://github.com/DataDog/dd-trace-java/commit/9c26cacbaa17953d6358a3a02f6e83b01be53622", "message": "Introduce the LogsHandler", "committedDate": "2020-02-14T17:34:34Z", "type": "forcePushed"}, {"oid": "c287dbbf895e0c6182b9a33170b693f354d11244", "url": "https://github.com/DataDog/dd-trace-java/commit/c287dbbf895e0c6182b9a33170b693f354d11244", "message": "Introduce the LogsHandler", "committedDate": "2020-02-14T18:13:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNTE5Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r384815196", "bodyText": "What about making the previous behavior be the default logHandler?\nThen this method would simply call\nlogHandler.log(map);", "author": "tylerbenson", "createdAt": "2020-02-26T22:48:54Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java", "diffHunk": "@@ -227,7 +242,9 @@ public final DDSpan setOperationName(final String operationName) {\n    */\n   @Override\n   public final DDSpan log(final Map<String, ?> map) {\n-    if (!extractError(map)) {\n+    if (!extractError(map) && logsHandler != null) {", "originalCommit": "c287dbbf895e0c6182b9a33170b693f354d11244", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56bc7ddb42f1e2dacd4b1e3466fe17c55ca9f4f8", "chunk": "diff --git a/dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java b/dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java\nindex 0c6cffabed..8f38606ee5 100644\n--- a/dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java\n+++ b/dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java\n\n@@ -242,11 +242,8 @@ public class DDSpan implements Span, MutableSpan {\n    */\n   @Override\n   public final DDSpan log(final Map<String, ?> map) {\n-    if (!extractError(map) && logsHandler != null) {\n-      logsHandler.log(map);\n-    } else {\n-      log.debug(\"`log` method is not implemented. Doing nothing\");\n-    }\n+    extractError(map);\n+    logHandler.log(map);\n     return this;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNTYwOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r384815608", "bodyText": "This could start with the Default implementation instead of null.", "author": "tylerbenson", "createdAt": "2020-02-26T22:50:03Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -580,6 +580,7 @@ private static DDScopeEventFactory createScopeEventFactory() {\n     private boolean errorFlag;\n     private String spanType;\n     private boolean ignoreScope = false;\n+    private LogsHandler logsHandler = null;", "originalCommit": "c287dbbf895e0c6182b9a33170b693f354d11244", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56bc7ddb42f1e2dacd4b1e3466fe17c55ca9f4f8", "chunk": "diff --git a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\nindex 117c578b6e..fa3839cd4f 100644\n--- a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n+++ b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n\n@@ -580,7 +580,7 @@ public class DDTracer implements io.opentracing.Tracer, Closeable, datadog.trace\n     private boolean errorFlag;\n     private String spanType;\n     private boolean ignoreScope = false;\n-    private LogsHandler logsHandler = null;\n+    private LogHandler logHandler = new DefaultLogHandler();\n \n     public DDSpanBuilder(final String operationName, final ScopeManager scopeManager) {\n       this.operationName = operationName;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNTc1MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r384815750", "bodyText": "Assert logsHandler is never set to null.", "author": "tylerbenson", "createdAt": "2020-02-26T22:50:25Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -670,6 +671,11 @@ public DDSpanBuilder withSpanType(final String spanType) {\n       return parent.baggageItems();\n     }\n \n+    public DDSpanBuilder withLogsHandler(LogsHandler logsHandler) {\n+      this.logsHandler = logsHandler;", "originalCommit": "c287dbbf895e0c6182b9a33170b693f354d11244", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56bc7ddb42f1e2dacd4b1e3466fe17c55ca9f4f8", "chunk": "diff --git a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\nindex 117c578b6e..fa3839cd4f 100644\n--- a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n+++ b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n\n@@ -671,8 +671,9 @@ public class DDTracer implements io.opentracing.Tracer, Closeable, datadog.trace\n       return parent.baggageItems();\n     }\n \n-    public DDSpanBuilder withLogsHandler(LogsHandler logsHandler) {\n-      this.logsHandler = logsHandler;\n+    public DDSpanBuilder withLogHandler(final LogHandler logHandler) {\n+      assert logHandler != null : \"LogHandler must not be null\";\n+      this.logHandler = logHandler;\n       return this;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNjU1MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r384816551", "bodyText": "One more thing... lets go with LogHandler", "author": "tylerbenson", "createdAt": "2020-02-26T22:52:24Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/LogsHandler.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package datadog.opentracing;\n+\n+import java.util.Map;\n+\n+public interface LogsHandler {", "originalCommit": "c287dbbf895e0c6182b9a33170b693f354d11244", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56bc7ddb42f1e2dacd4b1e3466fe17c55ca9f4f8", "chunk": "diff --git a/dd-trace-ot/src/main/java/datadog/opentracing/LogsHandler.java b/dd-trace-ot/src/main/java/datadog/opentracing/LogHandler.java\nsimilarity index 97%\nrename from dd-trace-ot/src/main/java/datadog/opentracing/LogsHandler.java\nrename to dd-trace-ot/src/main/java/datadog/opentracing/LogHandler.java\nindex a6069980eb..f1e5d43b68 100644\n--- a/dd-trace-ot/src/main/java/datadog/opentracing/LogsHandler.java\n+++ b/dd-trace-ot/src/main/java/datadog/opentracing/LogHandler.java\n\n@@ -2,7 +2,7 @@ package datadog.opentracing;\n \n import java.util.Map;\n \n-public interface LogsHandler {\n+public interface LogHandler {\n \n   /**\n    * Handles the log implementation in the Span.\n"}}, {"oid": "56bc7ddb42f1e2dacd4b1e3466fe17c55ca9f4f8", "url": "https://github.com/DataDog/dd-trace-java/commit/56bc7ddb42f1e2dacd4b1e3466fe17c55ca9f4f8", "message": "Add the DefaultLogHandler implementation", "committedDate": "2020-02-27T11:55:17Z", "type": "forcePushed"}, {"oid": "bdc8a27fe97b4d599ec346d8f3f3f96657a7abec", "url": "https://github.com/DataDog/dd-trace-java/commit/bdc8a27fe97b4d599ec346d8f3f3f96657a7abec", "message": "Add the DefaultLogHandler implementation", "committedDate": "2020-02-27T12:21:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5NTYzMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385095632", "bodyText": "I guess this should stay here...it is decorating the current span with the relevant information from the map (attributes). I don't think it's the LogHandler's responsibility to do this.", "author": "mariusc83", "createdAt": "2020-02-27T12:28:39Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java", "diffHunk": "@@ -238,9 +252,8 @@ public final DDSpan log(final Map<String, ?> map) {\n    */\n   @Override\n   public final DDSpan log(final long l, final Map<String, ?> map) {\n-    if (!extractError(map)) {\n-      log.debug(\"`log` method is not implemented. Doing nothing\");\n-    }\n+    extractError(map);", "originalCommit": "bdc8a27fe97b4d599ec346d8f3f3f96657a7abec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIzOTMyOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385239328", "bodyText": "My suggestion was to move this into the logHandler...  For that to work, you may need to pass DDSpan in as the first argument of each method.\nWhy don't you like that idea?", "author": "tylerbenson", "createdAt": "2020-02-27T16:55:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5NTYzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4ODAyNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385288026", "bodyText": "Because exactly that :D . Did no want to modify the arguments to pass the Span, but if you like it more like that I will pass it and handle it there ;)", "author": "mariusc83", "createdAt": "2020-02-27T18:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5NTYzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0ODM1Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385348357", "bodyText": "Alternatively, you could split up the logHandler and a factory that takes a span and returns the logHandler.", "author": "tylerbenson", "createdAt": "2020-02-27T20:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5NTYzMg=="}], "type": "inlineReview", "revised_code": {"commit": "349c57e687b5fb5de8244365a05f62dc254eb658", "chunk": "diff --git a/dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java b/dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java\nindex 8f38606ee5..1380b2753c 100644\n--- a/dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java\n+++ b/dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java\n\n@@ -252,8 +236,7 @@ public class DDSpan implements Span, MutableSpan {\n    */\n   @Override\n   public final DDSpan log(final long l, final Map<String, ?> map) {\n-    extractError(map);\n-    logHandler.log(l, map);\n+    logHandler.log(l, map, this);\n     return this;\n   }\n \n"}}, {"oid": "f523ee26075d62577cad486b985923305dabd068", "url": "https://github.com/DataDog/dd-trace-java/commit/f523ee26075d62577cad486b985923305dabd068", "message": "Add the DefaultLogHandler implementation", "committedDate": "2020-02-27T12:31:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MDg5MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385240890", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  assert logHandler != null : \"LogHandler must not be null\";\n          \n          \n            \n                  this.logHandler = logHandler;\n          \n          \n            \n                  if(logHandler != null) {\n          \n          \n            \n                      this.logHandler = logHandler;\n          \n          \n            \n                  }\n          \n      \n    \n    \n  \n\nNow that I think about it, I think this is a better option...  Avoids the risk of harmful exceptions.", "author": "tylerbenson", "createdAt": "2020-02-27T16:57:38Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -670,6 +671,12 @@ public DDSpanBuilder withSpanType(final String spanType) {\n       return parent.baggageItems();\n     }\n \n+    public DDSpanBuilder withLogHandler(final LogHandler logHandler) {\n+      assert logHandler != null : \"LogHandler must not be null\";\n+      this.logHandler = logHandler;", "originalCommit": "f523ee26075d62577cad486b985923305dabd068", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "349c57e687b5fb5de8244365a05f62dc254eb658", "chunk": "diff --git a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\nindex fa3839cd4f..180bea4f35 100644\n--- a/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n+++ b/dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java\n\n@@ -672,8 +672,9 @@ public class DDTracer implements io.opentracing.Tracer, Closeable, datadog.trace\n     }\n \n     public DDSpanBuilder withLogHandler(final LogHandler logHandler) {\n-      assert logHandler != null : \"LogHandler must not be null\";\n-      this.logHandler = logHandler;\n+      if (logHandler != null) {\n+        this.logHandler = logHandler;\n+      }\n       return this;\n     }\n \n"}}, {"oid": "349c57e687b5fb5de8244365a05f62dc254eb658", "url": "https://github.com/DataDog/dd-trace-java/commit/349c57e687b5fb5de8244365a05f62dc254eb658", "message": "Apply code review changes", "committedDate": "2020-02-28T08:12:10Z", "type": "forcePushed"}, {"oid": "4ff068df9c514384facf31d1af3d3071e434a272", "url": "https://github.com/DataDog/dd-trace-java/commit/4ff068df9c514384facf31d1af3d3071e434a272", "message": "Apply code review changes", "committedDate": "2020-02-28T09:22:17Z", "type": "forcePushed"}, {"oid": "6cd2d9f79b7848d9e7873eb19e917d4e6233a935", "url": "https://github.com/DataDog/dd-trace-java/commit/6cd2d9f79b7848d9e7873eb19e917d4e6233a935", "message": "Introduce the LogsHandler", "committedDate": "2020-02-28T17:53:35Z", "type": "commit"}, {"oid": "b24ae8d6387868c7a69ed601a79277e1d9688d63", "url": "https://github.com/DataDog/dd-trace-java/commit/b24ae8d6387868c7a69ed601a79277e1d9688d63", "message": "Add the DefaultLogHandler implementation", "committedDate": "2020-02-28T17:53:35Z", "type": "commit"}, {"oid": "d36201c9dc8e63c1e5e066c1d71aa8ac3545a87f", "url": "https://github.com/DataDog/dd-trace-java/commit/d36201c9dc8e63c1e5e066c1d71aa8ac3545a87f", "message": "Apply code review changes", "committedDate": "2020-02-28T17:53:35Z", "type": "commit"}, {"oid": "d36201c9dc8e63c1e5e066c1d71aa8ac3545a87f", "url": "https://github.com/DataDog/dd-trace-java/commit/d36201c9dc8e63c1e5e066c1d71aa8ac3545a87f", "message": "Apply code review changes", "committedDate": "2020-02-28T17:53:35Z", "type": "forcePushed"}]}