{"pr_number": 1767, "pr_title": "avoid unnecessary allocation in handoff between PendingTrace and CoreTracer ", "pr_createdAt": "2020-08-12T10:09:42Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1767", "timeline": [{"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9", "url": "https://github.com/DataDog/dd-trace-java/commit/3ccda9316eeb15aec5f087f09681b139b8b308d9", "message": "simplify handoff between PendingTrace and CoreTracer which avoids an unnecessary ArrayList allocation", "committedDate": "2020-08-12T10:38:46Z", "type": "commit"}, {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9", "url": "https://github.com/DataDog/dd-trace-java/commit/3ccda9316eeb15aec5f087f09681b139b8b308d9", "message": "simplify handoff between PendingTrace and CoreTracer which avoids an unnecessary ArrayList allocation", "committedDate": "2020-08-12T10:38:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxOTUzNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#discussion_r469319537", "bodyText": "I don't understand why sending a new ArrayList is better than sending this.", "author": "tylerbenson", "createdAt": "2020-08-12T14:52:42Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -248,8 +253,18 @@ private synchronized void write() {\n     if (isWritten.compareAndSet(false, true)) {\n       removePendingTrace();\n       if (!isEmpty()) {\n-        log.debug(\"Writing {} spans to {}.\", size(), tracer.writer);\n-        tracer.write(this);\n+        int size = size();\n+        if (log.isDebugEnabled()) {\n+          log.debug(\"Writing {} spans to {}.\", size, tracer.writer);\n+        }\n+        List<DDSpan> trace = new ArrayList<>(size);\n+        trace.addAll(this);", "originalCommit": "3ccda9316eeb15aec5f087f09681b139b8b308d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyMjkwNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#discussion_r469322906", "bodyText": "Because CoreTracer always copies its input between one and four times. The aim is to avoid copying when we do a partial flush. This just simplifies it.", "author": "richardstartin", "createdAt": "2020-08-12T14:57:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxOTUzNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMzM2NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#discussion_r469333364", "bodyText": "@tylerbenson this is the important bit", "author": "richardstartin", "createdAt": "2020-08-12T15:11:22Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -381,14 +381,12 @@ public AgentSpan noopSpan() {\n    *\n    * @param trace a list of the spans related to the same trace\n    */\n-  void write(final Collection<DDSpan> trace) {\n+  void write(final List<DDSpan> trace) {\n     if (trace.isEmpty()) {\n       return;\n     }\n-    final ArrayList<DDSpan> writtenTrace;", "originalCommit": "3ccda9316eeb15aec5f087f09681b139b8b308d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}