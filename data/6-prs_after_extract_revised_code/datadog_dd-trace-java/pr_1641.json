{"pr_number": 1641, "pr_title": "don't block when there are no buffers left", "pr_createdAt": "2020-06-30T12:23:34Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1641", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY1NDUzNQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1641#discussion_r447654535", "bodyText": "Definitely good to know. Maybe we should add some metrics for these things as well?", "author": "bantonsson", "createdAt": "2020-06-30T12:47:22Z", "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DispatchingDisruptor.java", "diffHunk": "@@ -46,7 +47,25 @@ public void close() {\n   }\n \n   long beginTransaction() {\n-    return disruptor.getRingBuffer().next();\n+    long backoffMillis = 1;\n+    long nextLogTime = 0;\n+    while (true) {\n+      try {\n+        return disruptor.getRingBuffer().tryNext();\n+      } catch (InsufficientCapacityException insufficientCapacity) {\n+        long now = System.currentTimeMillis();\n+        backoffMillis = Math.min(backoffMillis * 2, 1000);\n+        if (now > nextLogTime) { // log every 20 seconds\n+          log.debug(\"no buffer available, sleeping for {}ms\", backoffMillis);", "originalCommit": "5b6a7728abf73eb22c97a00faa8eb1cf255bb480", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY1NzgyMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1641#discussion_r447657822", "bodyText": "Agreed, this isn't something I want to merge right now", "author": "richardstartin", "createdAt": "2020-06-30T12:52:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY1NDUzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d79f438146a91da702a1bc80d71942d8d1698d4", "chunk": "diff --git a/dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DispatchingDisruptor.java b/dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DispatchingDisruptor.java\nindex 91c8cee2f3..fecfddecce 100644\n--- a/dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DispatchingDisruptor.java\n+++ b/dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DispatchingDisruptor.java\n\n@@ -49,7 +49,7 @@ public class DispatchingDisruptor implements AutoCloseable {\n   long beginTransaction() {\n     long backoffMillis = 1;\n     long nextLogTime = 0;\n-    while (true) {\n+    while (!Thread.currentThread().isInterrupted()) {\n       try {\n         return disruptor.getRingBuffer().tryNext();\n       } catch (InsufficientCapacityException insufficientCapacity) {\n"}}, {"oid": "e2c085975424e777abbdafc67416d5f965795402", "url": "https://github.com/DataDog/dd-trace-java/commit/e2c085975424e777abbdafc67416d5f965795402", "message": "don't block when there are no buffers left", "committedDate": "2020-06-30T12:27:15Z", "type": "forcePushed"}, {"oid": "1d79f438146a91da702a1bc80d71942d8d1698d4", "url": "https://github.com/DataDog/dd-trace-java/commit/1d79f438146a91da702a1bc80d71942d8d1698d4", "message": "don't block when there are no buffers left", "committedDate": "2020-06-30T13:02:58Z", "type": "commit"}, {"oid": "1d79f438146a91da702a1bc80d71942d8d1698d4", "url": "https://github.com/DataDog/dd-trace-java/commit/1d79f438146a91da702a1bc80d71942d8d1698d4", "message": "don't block when there are no buffers left", "committedDate": "2020-06-30T13:02:58Z", "type": "forcePushed"}, {"oid": "9dc0378a16d51f63f0c492867062ef9678b3e996", "url": "https://github.com/DataDog/dd-trace-java/commit/9dc0378a16d51f63f0c492867062ef9678b3e996", "message": "add monitoring for backups", "committedDate": "2020-06-30T13:35:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY4OTU0Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1641#discussion_r447689546", "bodyText": "\ud83d\udc4d", "author": "bantonsson", "createdAt": "2020-06-30T13:38:56Z", "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/Monitor.java", "diffHunk": "@@ -114,6 +116,11 @@ public void onScheduleFlush(final DDAgentWriter agentWriter, final boolean previ\n       // not recorded\n     }\n \n+    @Override\n+    public void onBackedUpTraceBuffer() {\n+      statsd.incrementCounter(\"trace.buffer.backlog\");", "originalCommit": "9dc0378a16d51f63f0c492867062ef9678b3e996", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "25551ca319166fd0057b6e54227fe5ff625bd865", "url": "https://github.com/DataDog/dd-trace-java/commit/25551ca319166fd0057b6e54227fe5ff625bd865", "message": "more stable testing strategy", "committedDate": "2020-06-30T16:44:57Z", "type": "forcePushed"}, {"oid": "e2f46a96f892bffc09c8d1ec6ecde861dfcda96c", "url": "https://github.com/DataDog/dd-trace-java/commit/e2f46a96f892bffc09c8d1ec6ecde861dfcda96c", "message": "add a test for backoff behaviour", "committedDate": "2020-06-30T17:23:25Z", "type": "commit"}, {"oid": "e2f46a96f892bffc09c8d1ec6ecde861dfcda96c", "url": "https://github.com/DataDog/dd-trace-java/commit/e2f46a96f892bffc09c8d1ec6ecde861dfcda96c", "message": "add a test for backoff behaviour", "committedDate": "2020-06-30T17:23:25Z", "type": "forcePushed"}]}