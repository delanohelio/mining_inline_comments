{"pr_number": 2235, "pr_title": "AgentTestRunner refactor and cleanup", "pr_createdAt": "2020-12-22T22:52:42Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2235", "timeline": [{"oid": "1b8b3992dc39ab80590b2ba55287897531ffeb62", "url": "https://github.com/DataDog/dd-trace-java/commit/1b8b3992dc39ab80590b2ba55287897531ffeb62", "message": "Big refactor", "committedDate": "2020-12-22T23:07:27Z", "type": "forcePushed"}, {"oid": "b21dfa1c69be637d7c1749028ccaf5375153a9d9", "url": "https://github.com/DataDog/dd-trace-java/commit/b21dfa1c69be637d7c1749028ccaf5375153a9d9", "message": "Allow WithGlobalCallback to work across multiple tracer installations", "committedDate": "2020-12-23T22:46:26Z", "type": "forcePushed"}, {"oid": "0430aecd576a4a117c25216afd27ebfe2801eac9", "url": "https://github.com/DataDog/dd-trace-java/commit/0430aecd576a4a117c25216afd27ebfe2801eac9", "message": "ignore class load errors from the http server being shutdown", "committedDate": "2020-12-24T17:58:10Z", "type": "forcePushed"}, {"oid": "5f6d7daab357e8cef30b57732cf2040027073f99", "url": "https://github.com/DataDog/dd-trace-java/commit/5f6d7daab357e8cef30b57732cf2040027073f99", "message": "Add ability to override tracer registration", "committedDate": "2020-12-24T19:29:25Z", "type": "commit"}, {"oid": "c6bf31d407f3f9e01e2d11bb3531f244b6cad555", "url": "https://github.com/DataDog/dd-trace-java/commit/c6bf31d407f3f9e01e2d11bb3531f244b6cad555", "message": "Use TEST_TRACER directly instead of method", "committedDate": "2020-12-24T19:29:25Z", "type": "commit"}, {"oid": "b56a89a3e0d4334b9c8d18de20d215ba0b7e955d", "url": "https://github.com/DataDog/dd-trace-java/commit/b56a89a3e0d4334b9c8d18de20d215ba0b7e955d", "message": "ignore class load errors from the http server being shutdown", "committedDate": "2020-12-24T19:29:25Z", "type": "forcePushed"}, {"oid": "3745cfabd2d19f30a2a0ef82f9fd4d2244bc66b5", "url": "https://github.com/DataDog/dd-trace-java/commit/3745cfabd2d19f30a2a0ef82f9fd4d2244bc66b5", "message": "Big refactor", "committedDate": "2020-12-24T21:13:28Z", "type": "commit"}, {"oid": "22900bc5c822b56830ff1e542af5001a67731707", "url": "https://github.com/DataDog/dd-trace-java/commit/22900bc5c822b56830ff1e542af5001a67731707", "message": "Fix scala tests", "committedDate": "2020-12-24T21:13:28Z", "type": "commit"}, {"oid": "be57e16ea2bf8abdc8e3a5e4f5542c0cb2611356", "url": "https://github.com/DataDog/dd-trace-java/commit/be57e16ea2bf8abdc8e3a5e4f5542c0cb2611356", "message": "Fix codenarc", "committedDate": "2020-12-24T21:13:28Z", "type": "commit"}, {"oid": "7972a67c23a438ad2babd539096d469ecfae61f7", "url": "https://github.com/DataDog/dd-trace-java/commit/7972a67c23a438ad2babd539096d469ecfae61f7", "message": "Allow WithGlobalCallback to work across multiple tracer installations", "committedDate": "2020-12-24T21:13:28Z", "type": "commit"}, {"oid": "fb383c1a19b09ab4826f3342199422d8cacd68b3", "url": "https://github.com/DataDog/dd-trace-java/commit/fb383c1a19b09ab4826f3342199422d8cacd68b3", "message": "ignore class load errors from the http server being shutdown", "committedDate": "2020-12-24T21:13:28Z", "type": "commit"}, {"oid": "28a4be28deac23da5b3dfc32ddb85e83934e2e86", "url": "https://github.com/DataDog/dd-trace-java/commit/28a4be28deac23da5b3dfc32ddb85e83934e2e86", "message": "Ignore coverage because of Groovy bug", "committedDate": "2020-12-24T21:13:28Z", "type": "commit"}, {"oid": "28a4be28deac23da5b3dfc32ddb85e83934e2e86", "url": "https://github.com/DataDog/dd-trace-java/commit/28a4be28deac23da5b3dfc32ddb85e83934e2e86", "message": "Ignore coverage because of Groovy bug", "committedDate": "2020-12-24T21:13:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwNDEzNQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2235#discussion_r549404135", "bodyText": "Consider adding a warning level log message when this is used so it can be identified if somehow invoked in non-test env's.  (This could also be done in the forceRegister methods instead.)", "author": "tylerbenson", "createdAt": "2020-12-28T16:19:15Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/TracerInstaller.java", "diffHunk": "@@ -25,9 +25,21 @@ public static void installGlobalTracer(final CoreTracer tracer) {\n     try {\n       GlobalTracer.registerIfAbsent(tracer);\n       AgentTracer.registerIfAbsent(tracer);\n+\n+      log.debug(\"Global tracer installed\");\n+    } catch (final RuntimeException re) {\n+      log.warn(\"Failed to register tracer: {}\", tracer, re);\n+    }\n+  }\n+\n+  public static void forceInstallGlobalTracer(CoreTracer tracer) {", "originalCommit": "28a4be28deac23da5b3dfc32ddb85e83934e2e86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0607b0a76b7d5008643b6bd9c7af8f503b40031b", "chunk": "diff --git a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/TracerInstaller.java b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/TracerInstaller.java\nindex 44a7929d92..f7271a346e 100644\n--- a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/TracerInstaller.java\n+++ b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/TracerInstaller.java\n\n@@ -34,6 +34,8 @@ public class TracerInstaller {\n \n   public static void forceInstallGlobalTracer(CoreTracer tracer) {\n     try {\n+      log.warn(\"Overriding installed global tracer.  This is not intended for production use\");\n+\n       GlobalTracer.forceRegister(tracer);\n       AgentTracer.forceRegister(tracer);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwNzgxNQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2235#discussion_r549407815", "bodyText": "Do we need a way for tests to remove callbacks after test completion?", "author": "tylerbenson", "createdAt": "2020-12-28T16:31:21Z", "path": "dd-trace-api/src/main/java/datadog/trace/api/GlobalTracer.java", "diffHunk": "@@ -31,50 +32,52 @@ public boolean addTraceInterceptor(TraceInterceptor traceInterceptor) {\n         @Override\n         public void addScopeListener(ScopeListener listener) {}\n       };\n-  private static final AtomicReference<Tracer> provider = new AtomicReference<>(NO_OP);\n+\n+  private static final Collection<Callback> installationCallbacks = new ArrayList<>();", "originalCommit": "28a4be28deac23da5b3dfc32ddb85e83934e2e86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1MTM2MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2235#discussion_r549451361", "bodyText": "No, and removing them would break tests.\nThe callbacks are added with the initialization of the logging framework specific MDC class (with LogContextScopeListener.add()).  This only happens once per module.  Everything worked fine previously because CoreTracer was static and only created once per module.\nWith the changes in this PR, CoreTracer is created once per test class but the MDC initialization still only happens once per module.  Those callbacks need to be called on every CoreTracer instance.\nIn the future, if we have classloader isolation between test classes in the same module, the MDC class would be initialized multiple times, but the static installationCallbacks field would also be initialized multiple times.\ntl;dr: the lifecycle of installationCallbacks needs to match the lifecycle of the MDC subclass which is static for now.", "author": "randomanderson", "createdAt": "2020-12-28T18:50:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwNzgxNQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0607b0a76b7d5008643b6bd9c7af8f503b40031b", "url": "https://github.com/DataDog/dd-trace-java/commit/0607b0a76b7d5008643b6bd9c7af8f503b40031b", "message": "PR feedback", "committedDate": "2020-12-28T18:52:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2Mjg3OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2235#discussion_r549762879", "bodyText": "This is not suppose to be public api, right? Maybe comment", "author": "lpriima", "createdAt": "2020-12-29T16:15:31Z", "path": "dd-trace-api/src/main/java/datadog/trace/api/GlobalTracer.java", "diffHunk": "@@ -31,50 +32,52 @@ public boolean addTraceInterceptor(TraceInterceptor traceInterceptor) {\n         @Override\n         public void addScopeListener(ScopeListener listener) {}\n       };\n-  private static final AtomicReference<Tracer> provider = new AtomicReference<>(NO_OP);\n+\n+  private static final Collection<Callback> installationCallbacks = new ArrayList<>();\n+  private static Tracer provider = NO_OP;\n \n   public static void registerIfAbsent(Tracer p) {\n-    if (p != null && p != NO_OP) {\n-      boolean installed = provider.compareAndSet(NO_OP, p);\n-      if (installed) {\n-        Callback callback = installationCallback.getAndSet(null);\n-        if (callback != null) {\n+    if (p == null || p == NO_OP) {\n+      throw new IllegalArgumentException();\n+    }\n+\n+    synchronized (installationCallbacks) {\n+      if (provider == NO_OP) {\n+        provider = p;\n+        for (Callback callback : installationCallbacks) {\n           callback.installed(p);\n         }\n       }\n     }\n   }\n \n+  public static void forceRegister(Tracer tracer) {", "originalCommit": "0607b0a76b7d5008643b6bd9c7af8f503b40031b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}