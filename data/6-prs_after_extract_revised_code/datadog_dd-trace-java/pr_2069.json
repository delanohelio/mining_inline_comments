{"pr_number": 2069, "pr_title": "Add a routing span to vertx 3.4", "pr_createdAt": "2020-11-12T16:18:29Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2069", "timeline": [{"oid": "3cc83465414a8d88f58376dffa798ea7a352331b", "url": "https://github.com/DataDog/dd-trace-java/commit/3cc83465414a8d88f58376dffa798ea7a352331b", "message": "Add a routing span to vertx 3.5", "committedDate": "2020-11-12T16:18:39Z", "type": "forcePushed"}, {"oid": "a59b697c9cdf3c8c0d5c8ea686442eed557a9f23", "url": "https://github.com/DataDog/dd-trace-java/commit/a59b697c9cdf3c8c0d5c8ea686442eed557a9f23", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-12T16:44:56Z", "type": "forcePushed"}, {"oid": "b1ddef41f8421c4a421962196ff03982bbc92f1c", "url": "https://github.com/DataDog/dd-trace-java/commit/b1ddef41f8421c4a421962196ff03982bbc92f1c", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-12T16:54:27Z", "type": "forcePushed"}, {"oid": "e4bf4f2a6a4e40b481fb070da5a3f3f11a15d65b", "url": "https://github.com/DataDog/dd-trace-java/commit/e4bf4f2a6a4e40b481fb070da5a3f3f11a15d65b", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-12T16:57:24Z", "type": "forcePushed"}, {"oid": "0632e0c10b5d4c7e404108ef34e68ea6bad9848b", "url": "https://github.com/DataDog/dd-trace-java/commit/0632e0c10b5d4c7e404108ef34e68ea6bad9848b", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-12T17:02:03Z", "type": "forcePushed"}, {"oid": "4bc3ebbcbfeee25e8950b514df2435994258d3cb", "url": "https://github.com/DataDog/dd-trace-java/commit/4bc3ebbcbfeee25e8950b514df2435994258d3cb", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-12T17:06:42Z", "type": "forcePushed"}, {"oid": "38c8428f1da4405c56d9fa26535d7321d507010f", "url": "https://github.com/DataDog/dd-trace-java/commit/38c8428f1da4405c56d9fa26535d7321d507010f", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-12T17:52:44Z", "type": "forcePushed"}, {"oid": "7fe71128688b0ca3cfa99850021be5da5dea69d7", "url": "https://github.com/DataDog/dd-trace-java/commit/7fe71128688b0ca3cfa99850021be5da5dea69d7", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-12T17:58:14Z", "type": "forcePushed"}, {"oid": "d1bf8488bdf4642a7a5b1c7b471032781f205c1a", "url": "https://github.com/DataDog/dd-trace-java/commit/d1bf8488bdf4642a7a5b1c7b471032781f205c1a", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-12T17:59:36Z", "type": "forcePushed"}, {"oid": "74086f35abd5d004781eafb92ca6b0d44739f325", "url": "https://github.com/DataDog/dd-trace-java/commit/74086f35abd5d004781eafb92ca6b0d44739f325", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-12T19:05:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyNjI2Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r523026267", "bodyText": "I'm not sure what the right way to use the routing path/regex is in this case. I don't really like the pattern of modifying one span just to start another. It's also not clear to me what the correct methods to call are", "author": "devinsba", "createdAt": "2020-11-13T15:32:39Z", "path": "dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package datadog.trace.instrumentation.vertx_3_4.server;\n+\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.DECORATE;\n+import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.INSTRUMENTATION_NAME;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import io.vertx.core.Handler;\n+import io.vertx.ext.web.RoutingContext;\n+\n+public class RouteHandlerWrapper implements Handler<RoutingContext> {\n+  private final Handler<RoutingContext> actual;\n+\n+  public RouteHandlerWrapper(final Handler<RoutingContext> handler) {\n+    actual = handler;\n+  }\n+\n+  @Override\n+  public void handle(final RoutingContext routingContext) {", "originalCommit": "74086f35abd5d004781eafb92ca6b0d44739f325", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a80b1c461617ad61b583d497fbcf19974cb6dfb7", "chunk": "diff --git a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java\nindex 1594ff7862..2d3559bb72 100644\n--- a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java\n+++ b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java\n\n@@ -1,6 +1,7 @@\n package datadog.trace.instrumentation.vertx_3_4.server;\n \n import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activeSpan;\n import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.DECORATE;\n import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.INSTRUMENTATION_NAME;\n"}}, {"oid": "295583324b495af44f866c934d7e4611f8bad461", "url": "https://github.com/DataDog/dd-trace-java/commit/295583324b495af44f866c934d7e4611f8bad461", "message": "Add a routing span to vertx 3.4", "committedDate": "2020-11-16T20:47:31Z", "type": "commit"}, {"oid": "a80b1c461617ad61b583d497fbcf19974cb6dfb7", "url": "https://github.com/DataDog/dd-trace-java/commit/a80b1c461617ad61b583d497fbcf19974cb6dfb7", "message": "Add path to parent span", "committedDate": "2020-11-16T20:47:31Z", "type": "forcePushed"}, {"oid": "4b826545d7d2da6836c081d61bd3c96a4928eedd", "url": "https://github.com/DataDog/dd-trace-java/commit/4b826545d7d2da6836c081d61bd3c96a4928eedd", "message": "Add path to parent span", "committedDate": "2020-11-17T16:55:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5OTU4NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r525399584", "bodyText": "Should this be wrapped in a scope?", "author": "tylerbenson", "createdAt": "2020-11-17T18:42:12Z", "path": "dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package datadog.trace.instrumentation.vertx_3_4.server;\n+\n+import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.DECORATE;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import io.vertx.core.Handler;\n+import io.vertx.core.http.HttpServerResponse;\n+\n+public class EndHandlerWrapper implements Handler<Void> {\n+  private final AgentSpan span;\n+  private final HttpServerResponse response;\n+\n+  Handler<Void> actual;\n+\n+  EndHandlerWrapper(final AgentSpan span, final HttpServerResponse response) {\n+    this.span = span;\n+    this.response = response;\n+  }\n+\n+  @Override\n+  public void handle(final Void event) {\n+    if (actual != null) {\n+      actual.handle(event);", "originalCommit": "4b826545d7d2da6836c081d61bd3c96a4928eedd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE1NjkyMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r526156923", "bodyText": "It will be inside the scope from the other handler. Either directly or through async propagation", "author": "devinsba", "createdAt": "2020-11-18T15:03:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5OTU4NA=="}], "type": "inlineReview", "revised_code": {"commit": "d7c07049fccc0c7d642c4ea53c2dd1e3d85977c3", "chunk": "diff --git a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java\nindex 5ffffc66c2..be330176b7 100644\n--- a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java\n+++ b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java\n\n@@ -19,10 +19,13 @@ public class EndHandlerWrapper implements Handler<Void> {\n \n   @Override\n   public void handle(final Void event) {\n-    if (actual != null) {\n-      actual.handle(event);\n+    try {\n+      if (actual != null) {\n+        actual.handle(event);\n+      }\n+    } finally {\n+      DECORATE.onResponse(span, response);\n+      span.finish();\n     }\n-    DECORATE.onResponse(span, response);\n-    span.finish();\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwMDUxOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r525400519", "bodyText": "I think some comments here would be helpful.", "author": "tylerbenson", "createdAt": "2020-11-17T18:43:44Z", "path": "dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapperAdvice.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package datadog.trace.instrumentation.vertx_3_4.server;\n+\n+import io.vertx.core.Handler;\n+import net.bytebuddy.asm.Advice;\n+\n+public class EndHandlerWrapperAdvice {\n+  @Advice.OnMethodEnter(suppress = Throwable.class)\n+  public static void wrapHandler(\n+      @Advice.FieldValue(value = \"endHandler\", readOnly = false) final Handler<Void> endHandler,\n+      @Advice.Argument(value = 0, readOnly = false) final Handler<Void> handler) {\n+    if (endHandler instanceof EndHandlerWrapper && handler instanceof EndHandlerWrapper) {\n+      return;\n+    }\n+    if (handler instanceof EndHandlerWrapper && endHandler != null) {\n+      ((EndHandlerWrapper) handler).actual = endHandler;\n+    } else if (endHandler instanceof EndHandlerWrapper) {\n+      ((EndHandlerWrapper) endHandler).actual = handler;\n+    }", "originalCommit": "4b826545d7d2da6836c081d61bd3c96a4928eedd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d207584b96b4b9369d35e03eaf8c16ae35040098", "chunk": "diff --git a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapperAdvice.java b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapperAdvice.java\nindex 659dd10b57..421ce25a18 100644\n--- a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapperAdvice.java\n+++ b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapperAdvice.java\n\n@@ -7,14 +7,21 @@ public class EndHandlerWrapperAdvice {\n   @Advice.OnMethodEnter(suppress = Throwable.class)\n   public static void wrapHandler(\n       @Advice.FieldValue(value = \"endHandler\", readOnly = false) final Handler<Void> endHandler,\n-      @Advice.Argument(value = 0, readOnly = false) final Handler<Void> handler) {\n+      @Advice.Argument(value = 0, readOnly = false) Handler<Void> handler) {\n+    // In case the handler instrumentation executes twice on the same response\n     if (endHandler instanceof EndHandlerWrapper && handler instanceof EndHandlerWrapper) {\n       return;\n     }\n+    // If an end handler was already registered when our wrapper is registered, we save the one that\n+    // existed before\n     if (handler instanceof EndHandlerWrapper && endHandler != null) {\n       ((EndHandlerWrapper) handler).actual = endHandler;\n+\n+      // If the user registers an end handler and ours has already been registered then we wrap the\n+      // users handler and swap the function argument for the wrapper\n     } else if (endHandler instanceof EndHandlerWrapper) {\n       ((EndHandlerWrapper) endHandler).actual = handler;\n+      handler = endHandler;\n     }\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNjUzOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r525406538", "bodyText": "I think it would be useful to set the span's resource name to actual's class name.", "author": "tylerbenson", "createdAt": "2020-11-17T18:53:14Z", "path": "dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package datadog.trace.instrumentation.vertx_3_4.server;\n+\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activeSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.DECORATE;\n+import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.INSTRUMENTATION_NAME;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import io.vertx.core.Handler;\n+import io.vertx.ext.web.RoutingContext;\n+\n+public class RouteHandlerWrapper implements Handler<RoutingContext> {\n+  private final Handler<RoutingContext> actual;\n+\n+  public RouteHandlerWrapper(final Handler<RoutingContext> handler) {\n+    actual = handler;\n+  }\n+\n+  @Override\n+  public void handle(final RoutingContext routingContext) {\n+    final AgentSpan parentSpan = activeSpan();\n+    DECORATE.onRequest(parentSpan, routingContext);\n+\n+    final AgentSpan span = startSpan(INSTRUMENTATION_NAME);\n+    routingContext.response().endHandler(new EndHandlerWrapper(span, routingContext.response()));\n+    DECORATE.afterStart(span);", "originalCommit": "4b826545d7d2da6836c081d61bd3c96a4928eedd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2MDk0Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r526160946", "bodyText": "For most use cases I would expect this to be an anonymous class. I don't feel that is all that useful but I can be convinced", "author": "devinsba", "createdAt": "2020-11-18T15:08:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNjUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwMDA5Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r526300092", "bodyText": "Since this isn't a measured span, the cardinality requirements are less strict.  I think an anonymous class name would still be more useful than nothing.", "author": "tylerbenson", "createdAt": "2020-11-18T17:51:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNjUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "93858a1a3d63ec6a6425b23fd39794a076e28e54", "chunk": "diff --git a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java\nindex 71f6e94f23..7842a1700c 100644\n--- a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java\n+++ b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java\n\n@@ -26,10 +26,16 @@ public class RouteHandlerWrapper implements Handler<RoutingContext> {\n     final AgentSpan span = startSpan(INSTRUMENTATION_NAME);\n     routingContext.response().endHandler(new EndHandlerWrapper(span, routingContext.response()));\n     DECORATE.afterStart(span);\n+    span.setResourceName(actual.getClass().getName());\n \n     try (final AgentScope scope = activateSpan(span)) {\n       scope.setAsyncPropagation(true);\n-      actual.handle(routingContext);\n+      try {\n+        actual.handle(routingContext);\n+      } catch (final Throwable t) {\n+        DECORATE.onError(span, t);\n+        throw t;\n+      }\n     }\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNzE5OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r525407199", "bodyText": "If there's any chance of this throwing an exception, you should catch and add it to the span.", "author": "tylerbenson", "createdAt": "2020-11-17T18:54:16Z", "path": "dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package datadog.trace.instrumentation.vertx_3_4.server;\n+\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activeSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.DECORATE;\n+import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.INSTRUMENTATION_NAME;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import io.vertx.core.Handler;\n+import io.vertx.ext.web.RoutingContext;\n+\n+public class RouteHandlerWrapper implements Handler<RoutingContext> {\n+  private final Handler<RoutingContext> actual;\n+\n+  public RouteHandlerWrapper(final Handler<RoutingContext> handler) {\n+    actual = handler;\n+  }\n+\n+  @Override\n+  public void handle(final RoutingContext routingContext) {\n+    final AgentSpan parentSpan = activeSpan();\n+    DECORATE.onRequest(parentSpan, routingContext);\n+\n+    final AgentSpan span = startSpan(INSTRUMENTATION_NAME);\n+    routingContext.response().endHandler(new EndHandlerWrapper(span, routingContext.response()));\n+    DECORATE.afterStart(span);\n+\n+    try (final AgentScope scope = activateSpan(span)) {\n+      scope.setAsyncPropagation(true);\n+      actual.handle(routingContext);", "originalCommit": "4b826545d7d2da6836c081d61bd3c96a4928eedd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "93858a1a3d63ec6a6425b23fd39794a076e28e54", "chunk": "diff --git a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java\nindex 71f6e94f23..7842a1700c 100644\n--- a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java\n+++ b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/RouteHandlerWrapper.java\n\n@@ -26,10 +26,16 @@ public class RouteHandlerWrapper implements Handler<RoutingContext> {\n     final AgentSpan span = startSpan(INSTRUMENTATION_NAME);\n     routingContext.response().endHandler(new EndHandlerWrapper(span, routingContext.response()));\n     DECORATE.afterStart(span);\n+    span.setResourceName(actual.getClass().getName());\n \n     try (final AgentScope scope = activateSpan(span)) {\n       scope.setAsyncPropagation(true);\n-      actual.handle(routingContext);\n+      try {\n+        actual.handle(routingContext);\n+      } catch (final Throwable t) {\n+        DECORATE.onError(span, t);\n+        throw t;\n+      }\n     }\n   }\n }\n"}}, {"oid": "d207584b96b4b9369d35e03eaf8c16ae35040098", "url": "https://github.com/DataDog/dd-trace-java/commit/d207584b96b4b9369d35e03eaf8c16ae35040098", "message": "Add path to parent span", "committedDate": "2020-11-18T16:01:58Z", "type": "commit"}, {"oid": "d207584b96b4b9369d35e03eaf8c16ae35040098", "url": "https://github.com/DataDog/dd-trace-java/commit/d207584b96b4b9369d35e03eaf8c16ae35040098", "message": "Add path to parent span", "committedDate": "2020-11-18T16:01:58Z", "type": "forcePushed"}, {"oid": "93858a1a3d63ec6a6425b23fd39794a076e28e54", "url": "https://github.com/DataDog/dd-trace-java/commit/93858a1a3d63ec6a6425b23fd39794a076e28e54", "message": "Address pr comments", "committedDate": "2020-11-18T18:58:40Z", "type": "forcePushed"}, {"oid": "484129d84c6fdd4c493f0a4e6531c8af7d081a06", "url": "https://github.com/DataDog/dd-trace-java/commit/484129d84c6fdd4c493f0a4e6531c8af7d081a06", "message": "Address pr comments", "committedDate": "2020-11-18T19:23:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3MzYzMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r526373632", "bodyText": "The test was not behaving correctly when this server was written in Groovy with regards to the exception", "author": "devinsba", "createdAt": "2020-11-18T19:46:36Z", "path": "dd-java-agent/instrumentation/vertx-web-3.4/src/test/java/server/VertxTestServer.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package server;", "originalCommit": "484129d84c6fdd4c493f0a4e6531c8af7d081a06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk1OTkyMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r526959921", "bodyText": "you might want to put the span.finish() in a try/finally in case the handle throws an exception.", "author": "tylerbenson", "createdAt": "2020-11-19T15:07:33Z", "path": "dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package datadog.trace.instrumentation.vertx_3_4.server;\n+\n+import static datadog.trace.instrumentation.vertx_3_4.server.VertxRouterDecorator.DECORATE;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import io.vertx.core.Handler;\n+import io.vertx.core.http.HttpServerResponse;\n+\n+public class EndHandlerWrapper implements Handler<Void> {\n+  private final AgentSpan span;\n+  private final HttpServerResponse response;\n+\n+  Handler<Void> actual;\n+\n+  EndHandlerWrapper(final AgentSpan span, final HttpServerResponse response) {\n+    this.span = span;\n+    this.response = response;\n+  }\n+\n+  @Override\n+  public void handle(final Void event) {\n+    if (actual != null) {\n+      actual.handle(event);\n+    }\n+    DECORATE.onResponse(span, response);\n+    span.finish();", "originalCommit": "484129d84c6fdd4c493f0a4e6531c8af7d081a06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk2NTM0Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2069#discussion_r526965342", "bodyText": "Good call. Done", "author": "devinsba", "createdAt": "2020-11-19T15:14:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk1OTkyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "d7c07049fccc0c7d642c4ea53c2dd1e3d85977c3", "chunk": "diff --git a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java\nindex 5ffffc66c2..be330176b7 100644\n--- a/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java\n+++ b/dd-java-agent/instrumentation/vertx-web-3.4/src/main/java8/datadog/trace/instrumentation/vertx_3_4/server/EndHandlerWrapper.java\n\n@@ -19,10 +19,13 @@ public class EndHandlerWrapper implements Handler<Void> {\n \n   @Override\n   public void handle(final Void event) {\n-    if (actual != null) {\n-      actual.handle(event);\n+    try {\n+      if (actual != null) {\n+        actual.handle(event);\n+      }\n+    } finally {\n+      DECORATE.onResponse(span, response);\n+      span.finish();\n     }\n-    DECORATE.onResponse(span, response);\n-    span.finish();\n   }\n }\n"}}, {"oid": "d7c07049fccc0c7d642c4ea53c2dd1e3d85977c3", "url": "https://github.com/DataDog/dd-trace-java/commit/d7c07049fccc0c7d642c4ea53c2dd1e3d85977c3", "message": "Address pr comments", "committedDate": "2020-11-19T15:14:46Z", "type": "forcePushed"}, {"oid": "389128b57fc804a66b3502a20261ba758b7878ea", "url": "https://github.com/DataDog/dd-trace-java/commit/389128b57fc804a66b3502a20261ba758b7878ea", "message": "Address pr comments", "committedDate": "2020-11-19T16:17:38Z", "type": "commit"}, {"oid": "389128b57fc804a66b3502a20261ba758b7878ea", "url": "https://github.com/DataDog/dd-trace-java/commit/389128b57fc804a66b3502a20261ba758b7878ea", "message": "Address pr comments", "committedDate": "2020-11-19T16:17:38Z", "type": "forcePushed"}]}