{"pr_number": 1878, "pr_title": "Precompute UTF-8 for span names", "pr_createdAt": "2020-09-16T17:24:06Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1878", "timeline": [{"oid": "860340c929aa0f10438008128ee4d99a7cda27ac", "url": "https://github.com/DataDog/dd-trace-java/commit/860340c929aa0f10438008128ee4d99a7cda27ac", "message": "revapi", "committedDate": "2020-09-16T17:28:06Z", "type": "forcePushed"}, {"oid": "d0a09d17e6b753390bdb4f86376bbee5bde4bcdc", "url": "https://github.com/DataDog/dd-trace-java/commit/d0a09d17e6b753390bdb4f86376bbee5bde4bcdc", "message": "revapi", "committedDate": "2020-09-16T19:49:57Z", "type": "forcePushed"}, {"oid": "47d4b65c7bdde3bbadff4468dcd5bc82c29f5989", "url": "https://github.com/DataDog/dd-trace-java/commit/47d4b65c7bdde3bbadff4468dcd5bc82c29f5989", "message": "revapi", "committedDate": "2020-09-16T20:16:06Z", "type": "forcePushed"}, {"oid": "a5262beef6481ea52a8453b1d0f6379eee5e4629", "url": "https://github.com/DataDog/dd-trace-java/commit/a5262beef6481ea52a8453b1d0f6379eee5e4629", "message": "revapi", "committedDate": "2020-09-16T20:39:24Z", "type": "forcePushed"}, {"oid": "62358d5184bf151a3a6d93a3ab6e0c21329f7a6f", "url": "https://github.com/DataDog/dd-trace-java/commit/62358d5184bf151a3a6d93a3ab6e0c21329f7a6f", "message": "revapi", "committedDate": "2020-09-16T20:57:20Z", "type": "forcePushed"}, {"oid": "bff05b61da10311e8f260e1800587f169aa57e74", "url": "https://github.com/DataDog/dd-trace-java/commit/bff05b61da10311e8f260e1800587f169aa57e74", "message": "revapi", "committedDate": "2020-09-16T21:51:19Z", "type": "forcePushed"}, {"oid": "a569933f94dd0731451b656fdce1abb44626c273", "url": "https://github.com/DataDog/dd-trace-java/commit/a569933f94dd0731451b656fdce1abb44626c273", "message": "revapi", "committedDate": "2020-09-17T09:21:30Z", "type": "forcePushed"}, {"oid": "2ff62ac857e333e951a8b257ec0623eed9220868", "url": "https://github.com/DataDog/dd-trace-java/commit/2ff62ac857e333e951a8b257ec0623eed9220868", "message": "revapi", "committedDate": "2020-09-17T09:42:37Z", "type": "forcePushed"}, {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb", "url": "https://github.com/DataDog/dd-trace-java/commit/e3f9c9f6f370d4b81485be31c8869d2a710a3cbb", "message": "revapi", "committedDate": "2020-09-17T10:01:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMzUzMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490133530", "bodyText": "Added some caching here to capture \"servlet.\" + method and ensure the UTF-8 encoding is only done once.", "author": "richardstartin", "createdAt": "2020-09-17T10:19:18Z", "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java", "diffHunk": "@@ -1,8 +1,16 @@\n package datadog.trace.instrumentation.servlet.dispatcher;\n \n+import datadog.trace.api.Function;\n+import datadog.trace.api.Functions;\n+import datadog.trace.api.cache.DDCache;\n+import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n \n public class RequestDispatcherDecorator extends BaseDecorator {\n+  public static final DDCache<CharSequence, CharSequence> SPAN_NAME_CACHE =", "originalCommit": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "60e419f233d5333a50bb4829d6bf310f79c6f4fc", "chunk": "diff --git a/dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java b/dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java\nindex 26d7d57a2a..dab4bcbda5 100644\n--- a/dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java\n+++ b/dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java\n\n@@ -1,16 +1,8 @@\n package datadog.trace.instrumentation.servlet.dispatcher;\n \n-import datadog.trace.api.Function;\n-import datadog.trace.api.Functions;\n-import datadog.trace.api.cache.DDCache;\n-import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n \n public class RequestDispatcherDecorator extends BaseDecorator {\n-  public static final DDCache<CharSequence, CharSequence> SPAN_NAME_CACHE =\n-      DDCaches.newUnboundedCache(16);\n-  public static final Function<CharSequence, CharSequence> SERVLET_PREFIX =\n-      Functions.Prefix.ZERO.curry(\"servlet.\");\n   public static final RequestDispatcherDecorator DECORATE = new RequestDispatcherDecorator();\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMzk1NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490133954", "bodyText": "Use of the cache here (method is very low cardinality)", "author": "richardstartin", "createdAt": "2020-09-17T10:19:52Z", "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherInstrumentation.java", "diffHunk": "@@ -99,7 +101,8 @@ public static AgentScope start(\n         parent = servletSpan.context();\n       }\n \n-      final AgentSpan span = startSpan(\"servlet.\" + method, parent);\n+      final AgentSpan span =", "originalCommit": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyNjAyMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490426022", "bodyText": "nice change!", "author": "tylerbenson", "createdAt": "2020-09-17T17:13:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMzk1NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNDExMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490134111", "bodyText": "Same caching here", "author": "richardstartin", "createdAt": "2020-09-17T10:20:11Z", "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java", "diffHunk": "@@ -1,8 +1,16 @@\n package datadog.trace.instrumentation.servlet.http;\n \n+import datadog.trace.api.Function;\n+import datadog.trace.api.Functions;\n+import datadog.trace.api.cache.DDCache;\n+import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n \n public class HttpServletDecorator extends BaseDecorator {\n+  public static final DDCache<CharSequence, CharSequence> SPAN_NAME_CACHE =", "originalCommit": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1MTA4Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490151083", "bodyText": "could the servlet and request decorators share the same cache since they're in the same module?", "author": "mcculls", "createdAt": "2020-09-17T10:53:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNDExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1MjcyNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490152726", "bodyText": "I actually hadn't paid it that much attention - that's a good point.", "author": "richardstartin", "createdAt": "2020-09-17T10:56:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNDExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NTE3Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490155176", "bodyText": "Done here", "author": "richardstartin", "createdAt": "2020-09-17T11:01:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNDExMQ=="}], "type": "inlineReview", "revised_code": {"commit": "60e419f233d5333a50bb4829d6bf310f79c6f4fc", "chunk": "diff --git a/dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java b/dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java\nindex 390db8a11a..8c2d9d2e55 100644\n--- a/dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java\n+++ b/dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java\n\n@@ -1,16 +1,9 @@\n package datadog.trace.instrumentation.servlet.http;\n \n-import datadog.trace.api.Function;\n-import datadog.trace.api.Functions;\n-import datadog.trace.api.cache.DDCache;\n-import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n \n public class HttpServletDecorator extends BaseDecorator {\n-  public static final DDCache<CharSequence, CharSequence> SPAN_NAME_CACHE =\n-      DDCaches.newUnboundedCache(16);\n-  public static final Function<CharSequence, CharSequence> SERVLET_PREFIX =\n-      Functions.Prefix.ZERO.curry(\"servlet.\");\n+\n   public static final HttpServletDecorator DECORATE = new HttpServletDecorator();\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNTI1OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490135258", "bodyText": "Don't need this any more.", "author": "richardstartin", "createdAt": "2020-09-17T10:22:24Z", "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/DDSpanNames.java", "diffHunk": "@@ -1,8 +0,0 @@\n-package datadog.trace.bootstrap.instrumentation.api;", "originalCommit": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNTYzMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490135632", "bodyText": "The idea is to use CharSequence in more places until we can completely remove this entire class. This means users only pay for \"interning\" what they need.", "author": "richardstartin", "createdAt": "2020-09-17T10:23:09Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/StringTables.java", "diffHunk": "@@ -48,7 +47,6 @@\n     internConstantsUTF8(InstrumentationTags.class, UTF8_INTERN_KEYS_TABLE, null);\n     internConstantsUTF8(DDSpanTypes.class, UTF8_INTERN_TAGS_TABLE, TAGS_FIRST_CHAR_IS_PRESENT);\n     internConstantsUTF8(DDComponents.class, UTF8_INTERN_TAGS_TABLE, TAGS_FIRST_CHAR_IS_PRESENT);\n-    internConstantsUTF8(DDSpanNames.class, UTF8_INTERN_TAGS_TABLE, TAGS_FIRST_CHAR_IS_PRESENT);", "originalCommit": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NDg3Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490144872", "bodyText": "should this be AWS_HTTP to match the other constant naming?", "author": "mcculls", "createdAt": "2020-09-17T10:40:30Z", "path": "dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/TracingRequestHandler.java", "diffHunk": "@@ -29,7 +32,7 @@ public AmazonWebServiceRequest beforeMarshalling(final AmazonWebServiceRequest r\n \n   @Override\n   public void beforeRequest(final Request<?> request) {\n-    final AgentSpan span = startSpan(\"aws.http\");\n+    final AgentSpan span = startSpan(SPAN_NAME);", "originalCommit": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NjEwOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490146109", "bodyText": "Yes, but to save you looking at the rest, this was the first one I did, before I adopted the naming convention.", "author": "richardstartin", "createdAt": "2020-09-17T10:42:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NDg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NjU1NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490146554", "bodyText": "Changed in a forced push", "author": "richardstartin", "createdAt": "2020-09-17T10:43:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NDg3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "06675637b3a5325d8c7cbe12064abae859bcb79f", "chunk": "diff --git a/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/TracingRequestHandler.java b/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/TracingRequestHandler.java\nindex 68e08cf8d3..a0103b5d7c 100644\n--- a/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/TracingRequestHandler.java\n+++ b/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/TracingRequestHandler.java\n\n@@ -32,7 +32,7 @@ public class TracingRequestHandler extends RequestHandler2 {\n \n   @Override\n   public void beforeRequest(final Request<?> request) {\n-    final AgentSpan span = startSpan(SPAN_NAME);\n+    final AgentSpan span = startSpan(AWS_HTTP);\n     decorate.afterStart(span);\n     decorate.onRequest(span, request);\n     request.addHandlerContext(SCOPE_CONTEXT_KEY, activateSpan(span));\n"}}, {"oid": "06675637b3a5325d8c7cbe12064abae859bcb79f", "url": "https://github.com/DataDog/dd-trace-java/commit/06675637b3a5325d8c7cbe12064abae859bcb79f", "message": "change span name to be a UTF8ByteString", "committedDate": "2020-09-17T10:43:19Z", "type": "commit"}, {"oid": "043a4791455e642705a2d848b94e7a682d0f531c", "url": "https://github.com/DataDog/dd-trace-java/commit/043a4791455e642705a2d848b94e7a682d0f531c", "message": "revapi", "committedDate": "2020-09-17T10:43:19Z", "type": "commit"}, {"oid": "043a4791455e642705a2d848b94e7a682d0f531c", "url": "https://github.com/DataDog/dd-trace-java/commit/043a4791455e642705a2d848b94e7a682d0f531c", "message": "revapi", "committedDate": "2020-09-17T10:43:19Z", "type": "forcePushed"}, {"oid": "60e419f233d5333a50bb4829d6bf310f79c6f4fc", "url": "https://github.com/DataDog/dd-trace-java/commit/60e419f233d5333a50bb4829d6bf310f79c6f4fc", "message": "use the same span name cache for request dispatcher and httpservlet span names", "committedDate": "2020-09-17T11:19:30Z", "type": "commit"}, {"oid": "60e419f233d5333a50bb4829d6bf310f79c6f4fc", "url": "https://github.com/DataDog/dd-trace-java/commit/60e419f233d5333a50bb4829d6bf310f79c6f4fc", "message": "use the same span name cache for request dispatcher and httpservlet span names", "committedDate": "2020-09-17T11:19:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyNzA3Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490427072", "bodyText": "I wonder if we should take this a step further and require UTF8BytesString instead...  This would push the need to cache this to the OT/OTel instrumentation, which has its' own tradeoffs.", "author": "tylerbenson", "createdAt": "2020-09-17T17:15:30Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -319,28 +319,28 @@ private void registerClassLoader(final ClassLoader classLoader) {\n   }\n \n   @Override\n-  public CoreSpanBuilder buildSpan(final String operationName) {\n+  public CoreSpanBuilder buildSpan(final CharSequence operationName) {", "originalCommit": "60e419f233d5333a50bb4829d6bf310f79c6f4fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzNDYyMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490434622", "bodyText": "I wanted to leave the test integrations alone for now", "author": "richardstartin", "createdAt": "2020-09-17T17:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyNzA3Mg=="}], "type": "inlineReview", "revised_code": null}]}