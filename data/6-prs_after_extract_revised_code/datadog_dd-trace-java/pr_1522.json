{"pr_number": 1522, "pr_title": "add record.queue_time_ms to rabbitmq consumer span tags", "pr_createdAt": "2020-06-02T12:41:36Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1522", "timeline": [{"oid": "5769e4c8b139d0c9da56051e28e0effd0e7e175b", "url": "https://github.com/DataDog/dd-trace-java/commit/5769e4c8b139d0c9da56051e28e0effd0e7e175b", "message": "add record.queue_time_ms to rabbitmq consumer span tags", "committedDate": "2020-06-02T12:43:12Z", "type": "forcePushed"}, {"oid": "f14e9b46eb4c8937ec75d7a5eba0e6a7605c7499", "url": "https://github.com/DataDog/dd-trace-java/commit/f14e9b46eb4c8937ec75d7a5eba0e6a7605c7499", "message": "add record.queue_time_ms to rabbitmq consumer span tags", "committedDate": "2020-06-02T13:37:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkyMzEwNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1522#discussion_r433923104", "bodyText": "Please add a comment describing when this would be null or how the timestamp gets populated.", "author": "tylerbenson", "createdAt": "2020-06-02T14:31:33Z", "path": "dd-java-agent/instrumentation/rabbitmq-amqp-2.7/src/main/java/datadog/trace/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java", "diffHunk": "@@ -70,13 +75,19 @@ public void handleDelivery(\n       final Context context = headers == null ? null : propagate().extract(headers, GETTER);\n \n       final AgentSpan span =\n-          startSpan(\"amqp.command\", context)\n-              .setTag(\"message.size\", body == null ? 0 : body.length)\n-              .setTag(\"span.origin.type\", delegate.getClass().getName())\n-              .setTag(InstrumentationTags.DD_MEASURED, true);\n+          startSpan(AMQP_COMMAND, context)\n+              .setTag(MESSAGE_SIZE, body == null ? 0 : body.length)\n+              .setTag(SPAN_ORIGIN_TYPE, delegate.getClass().getName())\n+              .setTag(DD_MEASURED, true);\n       CONSUMER_DECORATE.afterStart(span);\n       CONSUMER_DECORATE.onDeliver(span, queue, envelope);\n \n+      if (properties.getTimestamp() != null) {", "originalCommit": "f14e9b46eb4c8937ec75d7a5eba0e6a7605c7499", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e784bfcc88029aba81c58b1efd7e2d89a1b393d2", "chunk": "diff --git a/dd-java-agent/instrumentation/rabbitmq-amqp-2.7/src/main/java/datadog/trace/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java b/dd-java-agent/instrumentation/rabbitmq-amqp-2.7/src/main/java/datadog/trace/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java\nindex 5a00b08ed1..22ed879c51 100644\n--- a/dd-java-agent/instrumentation/rabbitmq-amqp-2.7/src/main/java/datadog/trace/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java\n+++ b/dd-java-agent/instrumentation/rabbitmq-amqp-2.7/src/main/java/datadog/trace/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java\n\n@@ -75,19 +70,13 @@ public class TracedDelegatingConsumer implements Consumer {\n       final Context context = headers == null ? null : propagate().extract(headers, GETTER);\n \n       final AgentSpan span =\n-          startSpan(AMQP_COMMAND, context)\n-              .setTag(MESSAGE_SIZE, body == null ? 0 : body.length)\n-              .setTag(SPAN_ORIGIN_TYPE, delegate.getClass().getName())\n-              .setTag(DD_MEASURED, true);\n+          startSpan(\"amqp.command\", context)\n+              .setTag(\"message.size\", body == null ? 0 : body.length)\n+              .setTag(\"span.origin.type\", delegate.getClass().getName())\n+              .setTag(InstrumentationTags.DD_MEASURED, true);\n       CONSUMER_DECORATE.afterStart(span);\n       CONSUMER_DECORATE.onDeliver(span, queue, envelope);\n \n-      if (properties.getTimestamp() != null) {\n-        long produceTime = properties.getTimestamp().getTime();\n-        long consumeTime = NANOSECONDS.toMillis(span.getStartTime());\n-        span.setTag(RECORD_QUEUE_TIME_MS, Math.max(0L, consumeTime - produceTime));\n-      }\n-\n       scope = activateSpan(span);\n \n     } catch (final Exception e) {\n"}}, {"oid": "e784bfcc88029aba81c58b1efd7e2d89a1b393d2", "url": "https://github.com/DataDog/dd-trace-java/commit/e784bfcc88029aba81c58b1efd7e2d89a1b393d2", "message": "see what happens if we let elastic find a port to bind to and get the port back from the client", "committedDate": "2020-06-02T15:02:15Z", "type": "commit"}, {"oid": "ee33c2d343b1117504d58c005cc1ce620cb65279", "url": "https://github.com/DataDog/dd-trace-java/commit/ee33c2d343b1117504d58c005cc1ce620cb65279", "message": "add record.queue_time_ms to rabbitmq consumer span tags", "committedDate": "2020-06-02T15:02:47Z", "type": "commit"}, {"oid": "ee33c2d343b1117504d58c005cc1ce620cb65279", "url": "https://github.com/DataDog/dd-trace-java/commit/ee33c2d343b1117504d58c005cc1ce620cb65279", "message": "add record.queue_time_ms to rabbitmq consumer span tags", "committedDate": "2020-06-02T15:02:47Z", "type": "forcePushed"}]}