{"pr_number": 1398, "pr_title": "Provide instrumentation support for lettuce-4.0-4.5.0 sync/async APIs", "pr_createdAt": "2020-04-23T16:21:13Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1398", "timeline": [{"oid": "53d0832cc89d7d7646320987c4a7e78e5c53f939", "url": "https://github.com/DataDog/dd-trace-java/commit/53d0832cc89d7d7646320987c4a7e78e5c53f939", "message": "get lettuce 4.0 sync and async working", "committedDate": "2020-04-23T19:26:24Z", "type": "forcePushed"}, {"oid": "94f56b499a682f9e32c37b689e880ff49aad614d", "url": "https://github.com/DataDog/dd-trace-java/commit/94f56b499a682f9e32c37b689e880ff49aad614d", "message": "get lettuce 4.0 sync and async working", "committedDate": "2020-04-23T19:27:40Z", "type": "forcePushed"}, {"oid": "925679c0f532076089f745c01cc25a571559c0d8", "url": "https://github.com/DataDog/dd-trace-java/commit/925679c0f532076089f745c01cc25a571559c0d8", "message": "code cleanup", "committedDate": "2020-04-24T21:36:52Z", "type": "forcePushed"}, {"oid": "3f8bc96e8dc58e9e39c2f913a4df4835af8665a2", "url": "https://github.com/DataDog/dd-trace-java/commit/3f8bc96e8dc58e9e39c2f913a4df4835af8665a2", "message": "get lettuce 4.0 sync and async working", "committedDate": "2020-04-27T13:59:11Z", "type": "commit"}, {"oid": "8ef57915bef1c71a7ac16a605dcc680941f156fd", "url": "https://github.com/DataDog/dd-trace-java/commit/8ef57915bef1c71a7ac16a605dcc680941f156fd", "message": "minimise impact on instrumentation point bytecode size", "committedDate": "2020-04-27T13:59:11Z", "type": "commit"}, {"oid": "d1feb819edae1eadf299969b58bc103b20a0023b", "url": "https://github.com/DataDog/dd-trace-java/commit/d1feb819edae1eadf299969b58bc103b20a0023b", "message": "use enumsets for keyword checking", "committedDate": "2020-04-27T13:59:11Z", "type": "commit"}, {"oid": "6273880d5e53482fdef95b5b0981a32b153f2b7b", "url": "https://github.com/DataDog/dd-trace-java/commit/6273880d5e53482fdef95b5b0981a32b153f2b7b", "message": "address versions comments", "committedDate": "2020-04-27T13:59:11Z", "type": "commit"}, {"oid": "5271952930aa0fad3aa57534a97fcef5fac88c12", "url": "https://github.com/DataDog/dd-trace-java/commit/5271952930aa0fad3aa57534a97fcef5fac88c12", "message": "remove upper bound on Java version", "committedDate": "2020-04-27T13:59:11Z", "type": "commit"}, {"oid": "d158590ab781e75cb9098ee9d25dc062c00a52ae", "url": "https://github.com/DataDog/dd-trace-java/commit/d158590ab781e75cb9098ee9d25dc062c00a52ae", "message": "code cleanup", "committedDate": "2020-04-27T13:59:11Z", "type": "commit"}, {"oid": "d158590ab781e75cb9098ee9d25dc062c00a52ae", "url": "https://github.com/DataDog/dd-trace-java/commit/d158590ab781e75cb9098ee9d25dc062c00a52ae", "message": "code cleanup", "committedDate": "2020-04-27T13:59:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2MTI2NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1398#discussion_r415861264", "bodyText": "This url is now out of date... maybe find the new one?", "author": "tylerbenson", "createdAt": "2020-04-27T14:29:11Z", "path": "dd-java-agent/instrumentation/lettuce-4.0/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package datadog.trace.instrumentation.lettuce;\n+\n+import static com.lambdaworks.redis.protocol.CommandKeyword.SEGFAULT;\n+import static com.lambdaworks.redis.protocol.CommandType.CLIENT;\n+import static com.lambdaworks.redis.protocol.CommandType.CLUSTER;\n+import static com.lambdaworks.redis.protocol.CommandType.COMMAND;\n+import static com.lambdaworks.redis.protocol.CommandType.CONFIG;\n+import static com.lambdaworks.redis.protocol.CommandType.DEBUG;\n+import static com.lambdaworks.redis.protocol.CommandType.SCRIPT;\n+import static com.lambdaworks.redis.protocol.CommandType.SHUTDOWN;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.lettuce.LettuceClientDecorator.DECORATE;\n+\n+import com.lambdaworks.redis.RedisURI;\n+import com.lambdaworks.redis.protocol.AsyncCommand;\n+import com.lambdaworks.redis.protocol.CommandType;\n+import com.lambdaworks.redis.protocol.ProtocolKeyword;\n+import com.lambdaworks.redis.protocol.RedisCommand;\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+\n+import java.util.EnumSet;\n+import java.util.Set;\n+import java.util.concurrent.CancellationException;\n+\n+public final class InstrumentationPoints {\n+\n+  private static final Set<CommandType> NON_INSTRUMENTING_COMMANDS = EnumSet.of(SHUTDOWN, DEBUG);\n+\n+  private static final Set<CommandType> AGENT_CRASHING_COMMANDS =\n+    EnumSet.of(CLIENT, CLUSTER, COMMAND, CONFIG, DEBUG, SCRIPT);\n+\n+  public static final String AGENT_CRASHING_COMMAND_PREFIX = \"COMMAND-NAME:\";\n+\n+  public static AgentScope beforeCommand(RedisCommand<?, ?, ?> command) {\n+    AgentSpan span = startSpan(\"redis.query\");\n+    DECORATE.afterStart(span);\n+    DECORATE.onCommand(span, command);\n+    return activateSpan(span, finishSpanEarly(command));\n+  }\n+\n+  public static void afterCommand(RedisCommand<?, ?, ?> command,\n+                                  AgentScope scope,\n+                                  Throwable throwable,\n+                                  AsyncCommand<?, ?, ?> asyncCommand) {\n+      AgentSpan span = scope.span();\n+      if (throwable != null) {\n+        DECORATE.onError(span, throwable);\n+        DECORATE.beforeFinish(span);\n+        span.finish();\n+      } else if (!finishSpanEarly(command)) {\n+        asyncCommand.handleAsync((value, ex) -> {\n+          if (ex instanceof CancellationException) {\n+            span.setTag(\"db.command.cancelled\", true);\n+          } else {\n+            DECORATE.onError(span, ex);\n+          }\n+          DECORATE.beforeFinish(span);\n+          span.finish();\n+          return null;\n+        });\n+      }\n+      scope.close();\n+  }\n+\n+  public static AgentScope beforeConnect(RedisURI redisURI) {\n+    AgentSpan span = startSpan(\"redis.query\");\n+    DECORATE.afterStart(span);\n+    DECORATE.onConnection(span, redisURI);\n+    return activateSpan(span, false);\n+  }\n+\n+  public static void afterConnect(AgentScope scope, Throwable throwable) {\n+    AgentSpan span = scope.span();\n+    if (throwable != null) {\n+      DECORATE.onError(span, throwable);\n+      DECORATE.beforeFinish(span);\n+    }\n+    span.finish();\n+    scope.close();\n+  }\n+\n+  /**\n+   * Determines whether a redis command should finish its relevant span early (as soon as tags are\n+   * added and the command is executed) because these commands have no return values/call backs, so\n+   * we must close the span early in order to provide info for the users\n+   *\n+   * @param command\n+   * @return true if finish the span early (the command will not have a return value)\n+   */\n+  public static boolean finishSpanEarly(RedisCommand<?, ?, ?> command) {\n+    ProtocolKeyword keyword = command.getType();\n+    return isNonInstrumentingCommand(keyword) || isNonInstrumentingKeyword(keyword);\n+  }\n+\n+  private static boolean isNonInstrumentingCommand(ProtocolKeyword keyword) {\n+    return keyword instanceof CommandType && NON_INSTRUMENTING_COMMANDS.contains(keyword);\n+  }\n+\n+  private static boolean isNonInstrumentingKeyword(ProtocolKeyword keyword) {\n+    return keyword == SEGFAULT;\n+  }\n+\n+  // Workaround to keep trace agent from crashing\n+  // Currently the commands in AGENT_CRASHING_COMMANDS_WORDS will crash the trace agent and\n+  // traces with these commands as the resource name will not be processed by the trace agent\n+  // https://github.com/DataDog/datadog-trace-agent/blob/master/quantizer/redis.go#L18 has", "originalCommit": "d158590ab781e75cb9098ee9d25dc062c00a52ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3MjQwNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1398#discussion_r415872407", "bodyText": "I looked for it, but couldn't find it, there seems to have been major refactoring here.", "author": "richardstartin", "createdAt": "2020-04-27T14:42:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2MTI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3NzkyNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1398#discussion_r415877927", "bodyText": "I have removed the link but will follow up to see if this logic can actually just be removed in another PR.", "author": "richardstartin", "createdAt": "2020-04-27T14:48:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2MTI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg4MzI1NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1398#discussion_r415883255", "bodyText": "probably this: https://github.com/DataDog/datadog-trace-agent/blob/c56f4c62b8656b3e8fd2c80058fffd0ec6052374/quantizer/redis.go#L18 but was moved to here: https://github.com/DataDog/datadog-agent/blob/1c76b8381a195a0b0f629011a6225e936fe1d37a/pkg/trace/obfuscate/redis.go", "author": "tylerbenson", "createdAt": "2020-04-27T14:54:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2MTI2NA=="}], "type": "inlineReview", "revised_code": {"commit": "158ba0952017baf3310cacb1d2ae14c632eec22e", "chunk": "diff --git a/dd-java-agent/instrumentation/lettuce-4.0/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java b/dd-java-agent/instrumentation/lettuce-4/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\nsimilarity index 87%\nrename from dd-java-agent/instrumentation/lettuce-4.0/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\nrename to dd-java-agent/instrumentation/lettuce-4/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\nindex 2195cee974..5bf9d5a3dd 100644\n--- a/dd-java-agent/instrumentation/lettuce-4.0/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\n+++ b/dd-java-agent/instrumentation/lettuce-4/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\n\n@@ -102,18 +102,10 @@ public final class InstrumentationPoints {\n     return keyword == SEGFAULT;\n   }\n \n-  // Workaround to keep trace agent from crashing\n-  // Currently the commands in AGENT_CRASHING_COMMANDS_WORDS will crash the trace agent and\n-  // traces with these commands as the resource name will not be processed by the trace agent\n-  // https://github.com/DataDog/datadog-trace-agent/blob/master/quantizer/redis.go#L18 has\n-  // list of commands that will currently fail at the trace agent level.\n-\n   /**\n    * Workaround to keep trace agent from crashing Currently the commands in\n-   * AGENT_CRASHING_COMMANDS_WORDS will crash the trace agent and traces with these commands as the\n+   * AGENT_CRASHING_COMMANDS will crash the trace agent and traces with these commands as the\n    * resource name will not be processed by the trace agent\n-   * https://github.com/DataDog/datadog-trace-agent/blob/master/quantizer/redis.go#L18 has list of\n-   * commands that will currently fail at the trace agent level.\n    *\n    * @param keyword the actual redis command\n    * @return the redis command with a prefix if it is a command that will crash the trace agent,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2NzI5OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1398#discussion_r415867299", "bodyText": "I think I'd prefer if this logic was in either the advice classes or the decorator, but I'm also fine leaving it.", "author": "tylerbenson", "createdAt": "2020-04-27T14:36:12Z", "path": "dd-java-agent/instrumentation/lettuce-4.0/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package datadog.trace.instrumentation.lettuce;\n+\n+import static com.lambdaworks.redis.protocol.CommandKeyword.SEGFAULT;\n+import static com.lambdaworks.redis.protocol.CommandType.CLIENT;\n+import static com.lambdaworks.redis.protocol.CommandType.CLUSTER;\n+import static com.lambdaworks.redis.protocol.CommandType.COMMAND;\n+import static com.lambdaworks.redis.protocol.CommandType.CONFIG;\n+import static com.lambdaworks.redis.protocol.CommandType.DEBUG;\n+import static com.lambdaworks.redis.protocol.CommandType.SCRIPT;\n+import static com.lambdaworks.redis.protocol.CommandType.SHUTDOWN;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.lettuce.LettuceClientDecorator.DECORATE;\n+\n+import com.lambdaworks.redis.RedisURI;\n+import com.lambdaworks.redis.protocol.AsyncCommand;\n+import com.lambdaworks.redis.protocol.CommandType;\n+import com.lambdaworks.redis.protocol.ProtocolKeyword;\n+import com.lambdaworks.redis.protocol.RedisCommand;\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+\n+import java.util.EnumSet;\n+import java.util.Set;\n+import java.util.concurrent.CancellationException;\n+\n+public final class InstrumentationPoints {", "originalCommit": "d158590ab781e75cb9098ee9d25dc062c00a52ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "158ba0952017baf3310cacb1d2ae14c632eec22e", "chunk": "diff --git a/dd-java-agent/instrumentation/lettuce-4.0/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java b/dd-java-agent/instrumentation/lettuce-4/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\nsimilarity index 87%\nrename from dd-java-agent/instrumentation/lettuce-4.0/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\nrename to dd-java-agent/instrumentation/lettuce-4/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\nindex 2195cee974..5bf9d5a3dd 100644\n--- a/dd-java-agent/instrumentation/lettuce-4.0/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\n+++ b/dd-java-agent/instrumentation/lettuce-4/src/main/java8/datadog/trace/instrumentation/lettuce/InstrumentationPoints.java\n\n@@ -102,18 +102,10 @@ public final class InstrumentationPoints {\n     return keyword == SEGFAULT;\n   }\n \n-  // Workaround to keep trace agent from crashing\n-  // Currently the commands in AGENT_CRASHING_COMMANDS_WORDS will crash the trace agent and\n-  // traces with these commands as the resource name will not be processed by the trace agent\n-  // https://github.com/DataDog/datadog-trace-agent/blob/master/quantizer/redis.go#L18 has\n-  // list of commands that will currently fail at the trace agent level.\n-\n   /**\n    * Workaround to keep trace agent from crashing Currently the commands in\n-   * AGENT_CRASHING_COMMANDS_WORDS will crash the trace agent and traces with these commands as the\n+   * AGENT_CRASHING_COMMANDS will crash the trace agent and traces with these commands as the\n    * resource name will not be processed by the trace agent\n-   * https://github.com/DataDog/datadog-trace-agent/blob/master/quantizer/redis.go#L18 has list of\n-   * commands that will currently fail at the trace agent level.\n    *\n    * @param keyword the actual redis command\n    * @return the redis command with a prefix if it is a command that will crash the trace agent,\n"}}, {"oid": "a8e79c438537dcc7a33146bbd0cb39ddcba369e5", "url": "https://github.com/DataDog/dd-trace-java/commit/a8e79c438537dcc7a33146bbd0cb39ddcba369e5", "message": "rename module to lettuce-4", "committedDate": "2020-04-27T14:45:34Z", "type": "commit"}, {"oid": "158ba0952017baf3310cacb1d2ae14c632eec22e", "url": "https://github.com/DataDog/dd-trace-java/commit/158ba0952017baf3310cacb1d2ae14c632eec22e", "message": "remove misleading comments", "committedDate": "2020-04-27T14:47:24Z", "type": "commit"}]}