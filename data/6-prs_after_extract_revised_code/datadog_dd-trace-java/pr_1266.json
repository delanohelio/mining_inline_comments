{"pr_number": 1266, "pr_title": "Imply not(isInterface()) call for expensive matchers", "pr_createdAt": "2020-02-27T16:26:38Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1266", "timeline": [{"oid": "59b5e1874d63175dee3854f9ef2c9bd3255764d3", "url": "https://github.com/DataDog/dd-trace-java/commit/59b5e1874d63175dee3854f9ef2c9bd3255764d3", "message": "Imply not(isInterface()) call for expensive matchers\n\nAlso remove from simple named(\"some.name\") matchers to avoid metadata lookup.", "committedDate": "2020-02-27T16:51:11Z", "type": "forcePushed"}, {"oid": "35e00686b304534d7e5cb54daedd45e1011a9915", "url": "https://github.com/DataDog/dd-trace-java/commit/35e00686b304534d7e5cb54daedd45e1011a9915", "message": "Imply not(isInterface()) call for expensive matchers\n\nAlso remove from simple named(\"some.name\") matchers to avoid metadata lookup.", "committedDate": "2020-02-27T20:13:42Z", "type": "commit"}, {"oid": "35e00686b304534d7e5cb54daedd45e1011a9915", "url": "https://github.com/DataDog/dd-trace-java/commit/35e00686b304534d7e5cb54daedd45e1011a9915", "message": "Imply not(isInterface()) call for expensive matchers\n\nAlso remove from simple named(\"some.name\") matchers to avoid metadata lookup.", "committedDate": "2020-02-27T20:13:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1Mjc5MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1266#discussion_r385352791", "bodyText": "Had to split this out as a separate method because some instrumentation uses hasInterface in method matchers to match method parameter and return types, so it can't exclude interfaces.", "author": "tylerbenson", "createdAt": "2020-02-27T20:26:20Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/DDElementMatchers.java", "diffHunk": "@@ -15,28 +17,26 @@\n \n   public static <T extends TypeDescription> ElementMatcher.Junction<T> extendsClass(\n       final ElementMatcher<? super TypeDescription> matcher) {\n-    return new SafeExtendsClassMatcher<>(new SafeErasureMatcher<>(matcher));\n+    return not(isInterface()).and(new SafeExtendsClassMatcher<>(new SafeErasureMatcher<>(matcher)));\n+  }\n+\n+  public static <T extends TypeDescription> ElementMatcher.Junction<T> implementsInterface(", "originalCommit": "35e00686b304534d7e5cb54daedd45e1011a9915", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}