{"pr_number": 1444, "pr_title": "prevent DDSpan.this escaping before constructor complete", "pr_createdAt": "2020-05-11T11:35:30Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1444", "timeline": [{"oid": "e37db8e1b8c29a5c0719aae08698b447d66ab5cf", "url": "https://github.com/DataDog/dd-trace-java/commit/e37db8e1b8c29a5c0719aae08698b447d66ab5cf", "message": "prevent DDSpan.this escaping before constructor complete", "committedDate": "2020-05-11T12:02:51Z", "type": "commit"}, {"oid": "e37db8e1b8c29a5c0719aae08698b447d66ab5cf", "url": "https://github.com/DataDog/dd-trace-java/commit/e37db8e1b8c29a5c0719aae08698b447d66ab5cf", "message": "prevent DDSpan.this escaping before constructor complete", "committedDate": "2020-05-11T12:02:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk5NjkyOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1444#discussion_r422996928", "bodyText": "Nice catch!", "author": "bantonsson", "createdAt": "2020-05-11T12:16:28Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpan.java", "diffHunk": "@@ -67,8 +73,6 @@\n       // Timestamp have come from an external clock, so use startTimeNano as a flag\n       startTimeNano = 0;\n     }\n-\n-    context.getTrace().registerSpan(this);", "originalCommit": "e37db8e1b8c29a5c0719aae08698b447d66ab5cf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk5Nzg0Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1444#discussion_r422997846", "bodyText": "Should this have package reachability like the constructor, and should the constructor become private to avoid creating without registering?", "author": "bantonsson", "createdAt": "2020-05-11T12:18:12Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpan.java", "diffHunk": "@@ -24,6 +24,12 @@\n @Slf4j\n public class DDSpan implements MutableSpan, AgentSpan {\n \n+  public static DDSpan create(final long timestampMicro, final DDSpanContext context) {", "originalCommit": "e37db8e1b8c29a5c0719aae08698b447d66ab5cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk5OTgxMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1444#discussion_r422999813", "bodyText": "I think it should, yes.", "author": "richardstartin", "createdAt": "2020-05-11T12:21:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk5Nzg0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "97abaf504457e6fd312c2c682ba4cbfa705422dc", "chunk": "diff --git a/dd-trace-core/src/main/java/datadog/trace/core/DDSpan.java b/dd-trace-core/src/main/java/datadog/trace/core/DDSpan.java\nindex 9c084fbba2..9bf2ce56ad 100644\n--- a/dd-trace-core/src/main/java/datadog/trace/core/DDSpan.java\n+++ b/dd-trace-core/src/main/java/datadog/trace/core/DDSpan.java\n\n@@ -24,7 +24,7 @@ import lombok.extern.slf4j.Slf4j;\n @Slf4j\n public class DDSpan implements MutableSpan, AgentSpan {\n \n-  public static DDSpan create(final long timestampMicro, final DDSpanContext context) {\n+  static DDSpan create(final long timestampMicro, final DDSpanContext context) {\n     DDSpan span = new DDSpan(timestampMicro, context);\n     context.getTrace().registerSpan(span);\n     return span;\n"}}, {"oid": "97abaf504457e6fd312c2c682ba4cbfa705422dc", "url": "https://github.com/DataDog/dd-trace-java/commit/97abaf504457e6fd312c2c682ba4cbfa705422dc", "message": "update visibility", "committedDate": "2020-05-11T12:21:18Z", "type": "commit"}, {"oid": "59feb49e25d1351411f6946e9cab1443b3bedfff", "url": "https://github.com/DataDog/dd-trace-java/commit/59feb49e25d1351411f6946e9cab1443b3bedfff", "message": "fix this leak in PendingTrace", "committedDate": "2020-05-11T12:53:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAyODg4OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1444#discussion_r423028888", "bodyText": "This should probably not be a static import since there are multiple $CLASS.create methods used in this class", "author": "devinsba", "createdAt": "2020-05-11T13:13:30Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -479,7 +481,7 @@ public CoreSpanBuilder ignoreActiveSpan() {\n     }\n \n     private DDSpan buildSpan() {\n-      return new DDSpan(timestampMicro, buildSpanContext());\n+      return create(timestampMicro, buildSpanContext());", "originalCommit": "59feb49e25d1351411f6946e9cab1443b3bedfff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAzMzY5Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1444#discussion_r423033693", "bodyText": "That's fair enough, I've changed that.", "author": "richardstartin", "createdAt": "2020-05-11T13:20:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAyODg4OA=="}], "type": "inlineReview", "revised_code": {"commit": "146d589a55684eae3928a38b0cfc1ef616bf2e35", "chunk": "diff --git a/dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java b/dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java\nindex ba171f40d0..7041119c00 100644\n--- a/dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java\n+++ b/dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java\n\n@@ -481,7 +479,7 @@ public class CoreTracer\n     }\n \n     private DDSpan buildSpan() {\n-      return create(timestampMicro, buildSpanContext());\n+      return DDSpan.create(timestampMicro, buildSpanContext());\n     }\n \n     /** @deprecated use {@link #start()} instead. */\n"}}, {"oid": "146d589a55684eae3928a38b0cfc1ef616bf2e35", "url": "https://github.com/DataDog/dd-trace-java/commit/146d589a55684eae3928a38b0cfc1ef616bf2e35", "message": "remove static import of DDSpan.create", "committedDate": "2020-05-11T13:20:14Z", "type": "commit"}]}