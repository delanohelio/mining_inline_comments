{"pr_number": 2065, "pr_title": "`FieldBackedProvider` should avoid modifying `Serializable` classes without `serialVersionUID`", "pr_createdAt": "2020-11-11T16:56:34Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2065", "timeline": [{"oid": "628f0aa2d18cdaea4526683ae5050a9f2c657f9b", "url": "https://github.com/DataDog/dd-trace-java/commit/628f0aa2d18cdaea4526683ae5050a9f2c657f9b", "message": "`FieldBackedProvider` should avoid modifying `Serializable` classes without `serialVersionUID`\n\nThese classes may implicitly generate a serialVersionUID based on the modified class structure which would be different if we modified the class, making the serialization incompatible.", "committedDate": "2020-11-11T17:20:37Z", "type": "commit"}, {"oid": "628f0aa2d18cdaea4526683ae5050a9f2c657f9b", "url": "https://github.com/DataDog/dd-trace-java/commit/628f0aa2d18cdaea4526683ae5050a9f2c657f9b", "message": "`FieldBackedProvider` should avoid modifying `Serializable` classes without `serialVersionUID`\n\nThese classes may implicitly generate a serialVersionUID based on the modified class structure which would be different if we modified the class, making the serialization incompatible.", "committedDate": "2020-11-11T17:20:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwMDk5MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2065#discussion_r521600991", "bodyText": "Is the field required to be final?  I recall there aren't any visibility requirements.\nArguably, it would be safer to cast wider rather than smaller net here.", "author": "dougqh", "createdAt": "2020-11-11T19:52:16Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldBackedProvider.java", "diffHunk": "@@ -139,6 +145,14 @@ public static void resetContextMatchers() {\n                     .type(safeHasSuperType(named(entry.getKey())), classLoaderMatcher)\n                     .and(ShouldInjectFieldsMatcher.of(entry.getKey(), entry.getValue()))\n                     .and(Default.NOT_DECORATOR_MATCHER)\n+                    .and(\n+                        not(safeHasSuperType(named(\"java.io.Serializable\")))\n+                            .or(\n+                                declaresField(\n+                                    named(\"serialVersionUID\")\n+                                        .and(ElementMatchers.<FieldDescription>isStatic())\n+                                        .and(isFinal())", "originalCommit": "628f0aa2d18cdaea4526683ae5050a9f2c657f9b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY0OTE4OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2065#discussion_r521649188", "bodyText": "I considered not adding these restrictions, but the javadoc for Serializable suggests that:\nA serializable class can declare its own serialVersionUID explicitly by declaring\na field named `serialVersionUID` that must be static, final, and of type `long`.\n\nWhat would you like me to do?", "author": "tylerbenson", "createdAt": "2020-11-11T21:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwMDk5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY1MDcxNQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2065#discussion_r521650715", "bodyText": "I would actually suggest that being more restrictive here is safer because it would fall back to skipping and not add the field/method.", "author": "tylerbenson", "createdAt": "2020-11-11T21:32:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwMDk5MQ=="}], "type": "inlineReview", "revised_code": null}]}