{"pr_number": 2015, "pr_title": "Capture scope if necessary before Scala 2.13 Transformation enters an ExecutionContext", "pr_createdAt": "2020-10-20T18:28:09Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2015", "timeline": [{"oid": "58c002b884d3780a0856bf0030e0c685acc25e7a", "url": "https://github.com/DataDog/dd-trace-java/commit/58c002b884d3780a0856bf0030e0c685acc25e7a", "message": "transfer state when scala 2.13 transformation is mapped", "committedDate": "2020-10-20T18:29:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2NDQ2Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2015#discussion_r508764462", "bodyText": "It seems like callbacks could be either Transformation or ManyCallbacks.  Would this still work if multiple callbacks were added to a single promise?", "author": "tylerbenson", "createdAt": "2020-10-20T18:52:31Z", "path": "dd-java-agent/instrumentation/scala-promise-2.13/src/main/java/datadog/trace/instrumentation/scala/concurrent/PromiseTransformationInstrumentation.java", "diffHunk": "@@ -77,6 +80,28 @@ private static void muzzleCheck(final Transformation callback) {\n     }\n   }\n \n+  public static final class Transfer {\n+    @SuppressWarnings(\"rawtypes\")\n+    @Advice.OnMethodExit(suppress = Throwable.class)\n+    public static <F, T> void transfer(\n+        @Advice.This Transformation<F, T> task,\n+        @Advice.Argument(0) Object doNotUse,\n+        @Advice.Argument(1) Object callbacks) {\n+      if (callbacks instanceof Transformation && task != callbacks) {", "originalCommit": "58c002b884d3780a0856bf0030e0c685acc25e7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAyMzA0NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2015#discussion_r509023045", "bodyText": "Nope, it won't work for multiple callbacks. Or rather I'm not sure what it's supposed to do since this will afaics, take the existing State for the this Transformation and transfer it to the first Transformation that is added to this Transformation. So if you add multiple Transformations only the first one added will get the State. There is a race here as well since adding Transformations can be done concurrently, there is no telling which Transformation actually gets the State.", "author": "bantonsson", "createdAt": "2020-10-21T06:37:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2NDQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAzNDYxMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2015#discussion_r509034613", "bodyText": "I don't think it's actually necessary to set the state in the first Transformation to null, and yes, it was racy.", "author": "richardstartin", "createdAt": "2020-10-21T07:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2NDQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA0NjAwOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2015#discussion_r509046009", "bodyText": "It doesn't need to work with ManyCallbacks - see Promise$Transformation.", "author": "richardstartin", "createdAt": "2020-10-21T07:23:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2NDQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE0OTg2Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2015#discussion_r509149867", "bodyText": "This instrumentation no longer exists", "author": "richardstartin", "createdAt": "2020-10-21T09:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2NDQ2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "83571f3e5f7ba322d553a1d67cca3abd494beb34", "chunk": "diff --git a/dd-java-agent/instrumentation/scala-promise-2.13/src/main/java/datadog/trace/instrumentation/scala/concurrent/PromiseTransformationInstrumentation.java b/dd-java-agent/instrumentation/scala-promise-2.13/src/main/java/datadog/trace/instrumentation/scala/concurrent/PromiseTransformationInstrumentation.java\nindex ad2e57185a..692d66d2f7 100644\n--- a/dd-java-agent/instrumentation/scala-promise-2.13/src/main/java/datadog/trace/instrumentation/scala/concurrent/PromiseTransformationInstrumentation.java\n+++ b/dd-java-agent/instrumentation/scala-promise-2.13/src/main/java/datadog/trace/instrumentation/scala/concurrent/PromiseTransformationInstrumentation.java\n\n@@ -90,9 +90,7 @@ public final class PromiseTransformationInstrumentation extends Instrumenter.Def\n       if (callbacks instanceof Transformation && task != callbacks) {\n         ContextStore<Transformation, State> contextStore =\n             InstrumentationContext.get(Transformation.class, State.class);\n-        State state = contextStore.get(task);\n-        contextStore.put(task, null);\n-        contextStore.put((Transformation) callbacks, state);\n+        contextStore.put((Transformation) callbacks, contextStore.get(task));\n       }\n     }\n \n"}}, {"oid": "83571f3e5f7ba322d553a1d67cca3abd494beb34", "url": "https://github.com/DataDog/dd-trace-java/commit/83571f3e5f7ba322d553a1d67cca3abd494beb34", "message": "transfer state when scala 2.13 transformation is mapped", "committedDate": "2020-10-21T07:00:30Z", "type": "forcePushed"}, {"oid": "6ad52a5fdd40ba2aaa705d162fb8085cd044f513", "url": "https://github.com/DataDog/dd-trace-java/commit/6ad52a5fdd40ba2aaa705d162fb8085cd044f513", "message": "transfer state when scala 2.13 transformation is mapped", "committedDate": "2020-10-21T07:46:06Z", "type": "forcePushed"}, {"oid": "257cd156799dabab8914ef1319a4d8055d2c12cf", "url": "https://github.com/DataDog/dd-trace-java/commit/257cd156799dabab8914ef1319a4d8055d2c12cf", "message": "test scala 2.13 promises with specified execution context", "committedDate": "2020-10-21T09:50:27Z", "type": "commit"}, {"oid": "257cd156799dabab8914ef1319a4d8055d2c12cf", "url": "https://github.com/DataDog/dd-trace-java/commit/257cd156799dabab8914ef1319a4d8055d2c12cf", "message": "test scala 2.13 promises with specified execution context", "committedDate": "2020-10-21T09:50:27Z", "type": "forcePushed"}, {"oid": "15135fa1ffc4b220f0b481ab6c68dbbdd3501e6e", "url": "https://github.com/DataDog/dd-trace-java/commit/15135fa1ffc4b220f0b481ab6c68dbbdd3501e6e", "message": "Capture scope if necessary before Scala 2.13 Transformation enters an ExecutionContext", "committedDate": "2020-10-21T09:57:08Z", "type": "commit"}]}