{"pr_number": 1364, "pr_title": "No logging when using default Value", "pr_createdAt": "2020-04-13T15:28:59Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1364", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDkyOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1364#discussion_r407554929", "bodyText": "Are you sure this can be useful at all?", "author": "mar-kolya", "createdAt": "2020-04-13T15:58:54Z", "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -1059,7 +1059,7 @@ private static String propertyNameToSystemPropertyName(final String setting) {\n   private static <T> T valueOf(\n       final String value, @NonNull final Class<T> tClass, final T defaultValue) {\n     if (value == null || value.trim().isEmpty()) {\n-      log.debug(\"valueOf: using defaultValue '{}' for '{}' of '{}' \", defaultValue, value, tClass);\n+      log.trace(\"valueOf: using defaultValue '{}' for '{}' of '{}' \", defaultValue, value, tClass);", "originalCommit": "6835b58f0b72aaf1e9b8b551d6be1f951bf735a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1ODI0MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1364#discussion_r407558241", "bodyText": "not sure. delete it ?", "author": "lpriima", "createdAt": "2020-04-13T16:04:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDkyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2ODg3OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1364#discussion_r407568878", "bodyText": "Personally I'd vote for not having it unless there is a specific problem it solves.", "author": "mar-kolya", "createdAt": "2020-04-13T16:24:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDkyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "79c7c8361ba3658631ffd7de1008384f70063f00", "chunk": "diff --git a/dd-trace-api/src/main/java/datadog/trace/api/Config.java b/dd-trace-api/src/main/java/datadog/trace/api/Config.java\nindex 1fa4bc3a82..ce5f16a608 100644\n--- a/dd-trace-api/src/main/java/datadog/trace/api/Config.java\n+++ b/dd-trace-api/src/main/java/datadog/trace/api/Config.java\n\n@@ -1059,7 +1059,6 @@ public class Config {\n   private static <T> T valueOf(\n       final String value, @NonNull final Class<T> tClass, final T defaultValue) {\n     if (value == null || value.trim().isEmpty()) {\n-      log.trace(\"valueOf: using defaultValue '{}' for '{}' of '{}' \", defaultValue, value, tClass);\n       return defaultValue;\n     }\n     try {\n"}}, {"oid": "5b865a5c9a2f69f9404706c96ad7ee97fd5117dd", "url": "https://github.com/DataDog/dd-trace-java/commit/5b865a5c9a2f69f9404706c96ad7ee97fd5117dd", "message": "Trace logging when using default Value", "committedDate": "2020-04-13T16:03:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYxMzIzMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1364#discussion_r407613230", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (\"Azul Systems, Inc.\".equals(System.getProperty(\"java.vendor\"))) {\n          \n          \n            \n                if (\"Azul Systems, Inc.\".equals(javaVendor)) {", "author": "tylerbenson", "createdAt": "2020-04-13T17:45:20Z", "path": "dd-java-agent/agent-profiling/profiling-controller/src/test/java/com/datadog/profiling/controller/ControllerFactoryTest.java", "diffHunk": "@@ -28,9 +28,15 @@ public void testCreateControllerJava8() {\n             });\n     String expected =\n         \"The JFR controller could not find a supported JFR API, use OpenJDK 11+ or Azul zulu version 1.8.0_212+\";\n+    final String javaVendor = System.getProperty(\"java.vendor\");\n+    final String javaVersion = System.getProperty(\"java.version\");\n+    System.out.println(javaVendor + \" \" + javaVersion);\n     if (\"Azul Systems, Inc.\".equals(System.getProperty(\"java.vendor\"))) {", "originalCommit": "5b865a5c9a2f69f9404706c96ad7ee97fd5117dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "79c7c8361ba3658631ffd7de1008384f70063f00", "chunk": "diff --git a/dd-java-agent/agent-profiling/profiling-controller/src/test/java/com/datadog/profiling/controller/ControllerFactoryTest.java b/dd-java-agent/agent-profiling/profiling-controller/src/test/java/com/datadog/profiling/controller/ControllerFactoryTest.java\nindex 8594719371..3db1de2127 100644\n--- a/dd-java-agent/agent-profiling/profiling-controller/src/test/java/com/datadog/profiling/controller/ControllerFactoryTest.java\n+++ b/dd-java-agent/agent-profiling/profiling-controller/src/test/java/com/datadog/profiling/controller/ControllerFactoryTest.java\n\n@@ -30,14 +30,16 @@ public class ControllerFactoryTest {\n         \"The JFR controller could not find a supported JFR API, use OpenJDK 11+ or Azul zulu version 1.8.0_212+\";\n     final String javaVendor = System.getProperty(\"java.vendor\");\n     final String javaVersion = System.getProperty(\"java.version\");\n-    System.out.println(javaVendor + \" \" + javaVersion);\n+    System.err.println(javaVendor + \" \" + javaVersion);\n     if (\"Azul Systems, Inc.\".equals(System.getProperty(\"java.vendor\"))) {\n       expected =\n           \"The JFR controller could not find a supported JFR API, use Azul zulu version 1.8.0_212+\";\n-    } else if (\"Oracle Corporation\".equals(javaVendor)\n-        && javaVersion.startsWith(\"1.8\")) {\n+    } else if (\"Oracle Corporation\".equals(javaVendor) && javaVersion.startsWith(\"1.8\")) {\n       expected = \"The JFR controller is currently not supported on the Oracle JDK <= JDK 11!\";\n     }\n-    assertEquals(expected, unsupportedEnvironmentException.getMessage());\n+    assertEquals(\n+        expected,\n+        unsupportedEnvironmentException.getMessage(),\n+        \"java version: '\" + javaVendor + \" \" + javaVersion + \"'\");\n   }\n }\n"}}, {"oid": "79c7c8361ba3658631ffd7de1008384f70063f00", "url": "https://github.com/DataDog/dd-trace-java/commit/79c7c8361ba3658631ffd7de1008384f70063f00", "message": "Trace logging when using default Value", "committedDate": "2020-04-13T18:02:26Z", "type": "forcePushed"}, {"oid": "1c03dd8ad80253e6d5d2f0ff8d1de2641fa18e5b", "url": "https://github.com/DataDog/dd-trace-java/commit/1c03dd8ad80253e6d5d2f0ff8d1de2641fa18e5b", "message": "Trace logging when using default Value", "committedDate": "2020-04-13T20:44:24Z", "type": "forcePushed"}, {"oid": "66bd59f42ba415d29233549a6971ee76804f27fa", "url": "https://github.com/DataDog/dd-trace-java/commit/66bd59f42ba415d29233549a6971ee76804f27fa", "message": "Trace logging when using default Value", "committedDate": "2020-04-13T21:21:51Z", "type": "commit"}, {"oid": "66bd59f42ba415d29233549a6971ee76804f27fa", "url": "https://github.com/DataDog/dd-trace-java/commit/66bd59f42ba415d29233549a6971ee76804f27fa", "message": "Trace logging when using default Value", "committedDate": "2020-04-13T21:21:51Z", "type": "forcePushed"}]}