{"pr_number": 1584, "pr_title": "replace remaining named disjunctions with namedOneOf or namedNoneOf", "pr_createdAt": "2020-06-15T08:56:01Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1584", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA0NDg1OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1584#discussion_r440044859", "bodyText": "Extreme nitpick, but is prefices really a word? I always though that it was prefixes, since prefix is not a proper latin word to begin with.", "author": "bantonsson", "createdAt": "2020-06-15T09:24:59Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentInstaller.java", "diffHunk": "@@ -130,16 +130,26 @@ private static void addByteBuddyRawSetting() {\n   private static ElementMatcher.Junction<Object> matchesConfiguredExcludes() {\n     final List<String> excludedClasses = Config.get().getExcludedClasses();\n     ElementMatcher.Junction matcher = none();\n+    List<String> literals = new ArrayList<>();\n+    List<String> prefices = new ArrayList<>();", "originalCommit": "2d9da81662d348dfb5e5b169dff5ca30fa2d6e42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fc122330714454aebefa2ca275f7047b22dbc018", "chunk": "diff --git a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentInstaller.java b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentInstaller.java\nindex d2726145b9..95e9cfdabd 100644\n--- a/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentInstaller.java\n+++ b/dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentInstaller.java\n\n@@ -131,13 +131,13 @@ public class AgentInstaller {\n     final List<String> excludedClasses = Config.get().getExcludedClasses();\n     ElementMatcher.Junction matcher = none();\n     List<String> literals = new ArrayList<>();\n-    List<String> prefices = new ArrayList<>();\n+    List<String> prefixes = new ArrayList<>();\n     // first accumulate by operation because a lot of work can be aggregated\n     for (String excludedClass : excludedClasses) {\n       excludedClass = excludedClass.trim();\n       if (excludedClass.endsWith(\"*\")) {\n         // remove the trailing *\n-        prefices.add(excludedClass.substring(0, excludedClass.length() - 1));\n+        prefixes.add(excludedClass.substring(0, excludedClass.length() - 1));\n       } else {\n         literals.add(excludedClass);\n       }\n"}}, {"oid": "fc122330714454aebefa2ca275f7047b22dbc018", "url": "https://github.com/DataDog/dd-trace-java/commit/fc122330714454aebefa2ca275f7047b22dbc018", "message": "replace remaining named disjunctions with namedOneOf or namedNoneOf", "committedDate": "2020-06-15T09:33:08Z", "type": "forcePushed"}, {"oid": "fe1f0762cbb100798895b03c129a81da3c013343", "url": "https://github.com/DataDog/dd-trace-java/commit/fe1f0762cbb100798895b03c129a81da3c013343", "message": "replace remaining named disjunctions with namedOneOf or namedNoneOf", "committedDate": "2020-06-15T09:47:17Z", "type": "forcePushed"}, {"oid": "8043b2e4b4cf56ec12506ba4497cfb33b7b50bf1", "url": "https://github.com/DataDog/dd-trace-java/commit/8043b2e4b4cf56ec12506ba4497cfb33b7b50bf1", "message": "replace remaining named disjunctions with namedOneOf or namedNoneOf", "committedDate": "2020-06-15T10:06:43Z", "type": "commit"}, {"oid": "8043b2e4b4cf56ec12506ba4497cfb33b7b50bf1", "url": "https://github.com/DataDog/dd-trace-java/commit/8043b2e4b4cf56ec12506ba4497cfb33b7b50bf1", "message": "replace remaining named disjunctions with namedOneOf or namedNoneOf", "committedDate": "2020-06-15T10:06:43Z", "type": "forcePushed"}, {"oid": "f9c9ccc5807a219a40e5f9aab2d3f9d1d28f1df4", "url": "https://github.com/DataDog/dd-trace-java/commit/f9c9ccc5807a219a40e5f9aab2d3f9d1d28f1df4", "message": "add some tests for NameMatchers", "committedDate": "2020-06-15T11:30:25Z", "type": "commit"}]}