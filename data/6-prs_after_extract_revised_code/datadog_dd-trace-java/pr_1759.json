{"pr_number": 1759, "pr_title": "refactor class and name based resource name caching", "pr_createdAt": "2020-08-07T13:45:27Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1759", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTg5NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1759#discussion_r467051895", "bodyText": "I noticed based on the contents of serviceNames and operationNames in a customer heap dump, and afterwards consulting the AWS SDK, that caching the resource name would be very low cardinality and a quick win.", "author": "richardstartin", "createdAt": "2020-08-07T13:48:26Z", "path": "dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/AwsSdkClientDecorator.java", "diffHunk": "@@ -7,18 +7,34 @@\n import datadog.trace.api.DDTags;\n import datadog.trace.bootstrap.ContextStore;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import datadog.trace.bootstrap.instrumentation.api.Function;\n+import datadog.trace.bootstrap.instrumentation.api.Functions;\n import datadog.trace.bootstrap.instrumentation.api.InstrumentationTags;\n+import datadog.trace.bootstrap.instrumentation.api.QualifiedClassNameCache;\n import datadog.trace.bootstrap.instrumentation.decorator.HttpClientDecorator;\n import java.net.URI;\n-import java.util.Map;\n-import java.util.concurrent.ConcurrentHashMap;\n \n public class AwsSdkClientDecorator extends HttpClientDecorator<Request, Response> {\n \n   static final String COMPONENT_NAME = \"java-aws-sdk\";\n \n-  private final Map<String, String> serviceNames = new ConcurrentHashMap<>();\n-  private final Map<Class, String> operationNames = new ConcurrentHashMap<>();\n+  private final QualifiedClassNameCache cache =", "originalCommit": "71406e734589995bd59e850aeff6af1aff6c6fb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzExMjcxMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1759#discussion_r467112713", "bodyText": "Nice catch!", "author": "tylerbenson", "createdAt": "2020-08-07T15:30:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTg5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e9f4865eba8070d5932859c805c9aa9008abfbe6", "chunk": "diff --git a/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/AwsSdkClientDecorator.java b/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/AwsSdkClientDecorator.java\nindex e6731a5f00..ff4e55e78c 100644\n--- a/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/AwsSdkClientDecorator.java\n+++ b/dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/AwsSdkClientDecorator.java\n\n@@ -20,7 +20,7 @@ public class AwsSdkClientDecorator extends HttpClientDecorator<Request, Response\n \n   private final QualifiedClassNameCache cache =\n       new QualifiedClassNameCache(\n-          new Function<Class<?>, String>() {\n+          new Function<Class<?>, CharSequence>() {\n             @Override\n             public String apply(Class<?> input) {\n               return input.getSimpleName().replace(\"Request\", \"\");\n"}}, {"oid": "3797bc773551636f41566435a6ad281feea9df50", "url": "https://github.com/DataDog/dd-trace-java/commit/3797bc773551636f41566435a6ad281feea9df50", "message": "refactor class and name based resource name caching", "committedDate": "2020-08-07T14:07:00Z", "type": "commit"}, {"oid": "3797bc773551636f41566435a6ad281feea9df50", "url": "https://github.com/DataDog/dd-trace-java/commit/3797bc773551636f41566435a6ad281feea9df50", "message": "refactor class and name based resource name caching", "committedDate": "2020-08-07T14:07:00Z", "type": "forcePushed"}, {"oid": "e9f4865eba8070d5932859c805c9aa9008abfbe6", "url": "https://github.com/DataDog/dd-trace-java/commit/e9f4865eba8070d5932859c805c9aa9008abfbe6", "message": "use CharSequence for cacheable values, which saves a lot of UTF-8 conversions", "committedDate": "2020-08-07T16:07:05Z", "type": "forcePushed"}, {"oid": "8ab01a4ffa134a61098b3db8333eb9cbdd621dfe", "url": "https://github.com/DataDog/dd-trace-java/commit/8ab01a4ffa134a61098b3db8333eb9cbdd621dfe", "message": "formatting", "committedDate": "2020-08-07T16:21:15Z", "type": "forcePushed"}, {"oid": "1a78f9600353d4995c4fd6c104ca66494dc67a98", "url": "https://github.com/DataDog/dd-trace-java/commit/1a78f9600353d4995c4fd6c104ca66494dc67a98", "message": "use CharSequence for cacheable values, which saves a lot of UTF-8 conversions", "committedDate": "2020-08-07T16:22:26Z", "type": "commit"}, {"oid": "1a78f9600353d4995c4fd6c104ca66494dc67a98", "url": "https://github.com/DataDog/dd-trace-java/commit/1a78f9600353d4995c4fd6c104ca66494dc67a98", "message": "use CharSequence for cacheable values, which saves a lot of UTF-8 conversions", "committedDate": "2020-08-07T16:22:26Z", "type": "forcePushed"}, {"oid": "1adaa7480ba3e51e45868ac7d24168e8c7859da9", "url": "https://github.com/DataDog/dd-trace-java/commit/1adaa7480ba3e51e45868ac7d24168e8c7859da9", "message": "no longer expect the operation name to be a string during serialisation", "committedDate": "2020-08-07T16:26:06Z", "type": "commit"}, {"oid": "bbbf72aa498814883561bfd1532fb1c5123cbf89", "url": "https://github.com/DataDog/dd-trace-java/commit/bbbf72aa498814883561bfd1532fb1c5123cbf89", "message": "address more tests which assumed resourceName was a string", "committedDate": "2020-08-07T16:37:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NjEyMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1759#discussion_r467146122", "bodyText": "why you called this just Function ?\nIn disregard your comment:\nhttps://github.com/DataDog/dd-trace-java/pull/1759/files#diff-3438fdfbe14e3ba1c3a3e78ef37f7637R3", "author": "lpriima", "createdAt": "2020-08-07T16:31:57Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/api/Function.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package datadog.trace.bootstrap.instrumentation.api;\n+\n+public interface Function<T, U> {", "originalCommit": "1adaa7480ba3e51e45868ac7d24168e8c7859da9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1MTY4NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1759#discussion_r467151685", "bodyText": "It's different. This is a function. We will search and replace datadog.trace.bootstrap.instrumentation.api.Function with java.util.function.Function when we drop JDK7. The other one differs to BiFunction in its interface.", "author": "richardstartin", "createdAt": "2020-08-07T16:43:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NjEyMg=="}], "type": "inlineReview", "revised_code": null}]}