{"pr_number": 8855, "pr_title": "JDK15 : Add loadLibraryWithPath package access APIs & Invoke registerBootstrapLibrary() in JVM_LoadLibrary", "pr_createdAt": "2020-03-13T13:12:36Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8855", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMTY5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8855#discussion_r392301692", "bodyText": "Perhaps this should call loadLibraryWithClassLoader(), which might fix the UnsatisfiedLinkError.", "author": "pshipton", "createdAt": "2020-03-13T15:32:16Z", "path": "jcl/src/java.base/share/classes/java/lang/ClassLoader.java", "diffHunk": "@@ -1957,6 +1957,15 @@ static void loadLibrary(Class<?> caller, String name, boolean fullPath) {\n \t\tloadLibraryWithClassLoader(name, caller.getClassLoaderImpl());\n }\n \n+/*[IF Java15]*/\n+static void loadLibrary(Class<?> caller, File file) {\n+\tloadLibraryWithPath(file.getAbsolutePath(), caller.getClassLoaderImpl(), null);", "originalCommit": "002da6266225ef76f9844b0151308668a68d5ec0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMzUwNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/8855#discussion_r392303507", "bodyText": "Will look into it, mark this PR WIP.", "author": "JasonFengJ9", "createdAt": "2020-03-13T15:35:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMTY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxNDE4Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8855#discussion_r392314182", "bodyText": "It doesn't appear the UnsatisfiedLinkError during the build process is related to this PR.\nThe two helper methods added were not invoked before this error.\nIn addition, the stacktrace doesn't show java.lang.ClassLoader or java.lang.Runtime which is the caller of these two new methods.", "author": "JasonFengJ9", "createdAt": "2020-03-13T15:53:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMTY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwNDQ2OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8855#discussion_r392404468", "bodyText": "It seems there is a newly introduced jdk.internal.loader.NativeLibraries which doesn't work well with OpenJ9 ClassLoader.", "author": "JasonFengJ9", "createdAt": "2020-03-13T18:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMTY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAxOTI4NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8855#discussion_r393019285", "bodyText": "Before this jdk.internal.loader.NativeLibraries JDK15 update, System.loadLibrary(library) was used which calls ClassLoader.loadLibraryWithClassLoader(), and eventually invokes BytecodeInterpreter.hpp.inlClassLoaderLoadLibraryWithPath() which calls registerNativeLibrary().\nAfter this update, internal.loader.NativeLibraries has its own private static native boolean load(NativeLibraryImpl impl, String name, boolean isBuiltin) which invokes JVM_LoadLibrary() and JVM_FindLibraryEntry(). This seems break OpenJ9 native library loading mechanism.\nRestoring System.loadLibrary(library) within jdk.internal.loader.NativeLibraries can skip its natives and use OpenJ9 inlClassLoaderLoadLibraryWithPath() which fixes the  UnsatisfiedLinkError. However this approach requires a JCL patch.\n@DanHeidinga @pshipton please comment.", "author": "JasonFengJ9", "createdAt": "2020-03-16T13:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMTY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAzODQzMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8855#discussion_r394038430", "bodyText": "Updated the PR and its description, please review.", "author": "JasonFengJ9", "createdAt": "2020-03-18T00:03:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMTY5Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "9eb61512b390d4f225066c8f7e557c9b99e8fbf4", "url": "https://github.com/eclipse-openj9/openj9/commit/9eb61512b390d4f225066c8f7e557c9b99e8fbf4", "message": "Add loadLibraryWithPath package access APIs for JDK15\nInvoke registerBootstrapLibrary() in JVM_LoadLibrary\n\nstatic void loadLibrary(Class<?> caller, File file) is added which calls\nloadLibraryWithPath(String libName, ClassLoade loader, String\nlibraryPath);\nstatic void loadLibrary(Class<?> caller, String libName) is added which\ncalls loadLibraryWithClassLoader(String libName, ClassLoader loader);\nInvoke registerBootstrapLibrary() in JVM_LoadLibrary.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-03-17T20:51:27Z", "type": "forcePushed"}, {"oid": "dabcea0becf5df783960a8b2abdb1e65f8a94c8e", "url": "https://github.com/eclipse-openj9/openj9/commit/dabcea0becf5df783960a8b2abdb1e65f8a94c8e", "message": "Add loadLibraryWithPath package access APIs for JDK15\nInvoke registerBootstrapLibrary() in JVM_LoadLibrary\n\nstatic void loadLibrary(Class<?> caller, File file) is added which calls\nloadLibraryWithPath(String libName, ClassLoade loader, String\nlibraryPath);\nstatic void loadLibrary(Class<?> caller, String libName) is added which\ncalls loadLibraryWithClassLoader(String libName, ClassLoader loader);\nInvoke registerBootstrapLibrary() in JVM_LoadLibrary.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-03-18T02:19:20Z", "type": "commit"}, {"oid": "dabcea0becf5df783960a8b2abdb1e65f8a94c8e", "url": "https://github.com/eclipse-openj9/openj9/commit/dabcea0becf5df783960a8b2abdb1e65f8a94c8e", "message": "Add loadLibraryWithPath package access APIs for JDK15\nInvoke registerBootstrapLibrary() in JVM_LoadLibrary\n\nstatic void loadLibrary(Class<?> caller, File file) is added which calls\nloadLibraryWithPath(String libName, ClassLoade loader, String\nlibraryPath);\nstatic void loadLibrary(Class<?> caller, String libName) is added which\ncalls loadLibraryWithClassLoader(String libName, ClassLoader loader);\nInvoke registerBootstrapLibrary() in JVM_LoadLibrary.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-03-18T02:19:20Z", "type": "forcePushed"}]}