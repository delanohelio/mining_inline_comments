{"pr_number": 9934, "pr_title": "Improve Test_Thread failure diagnostics", "pr_createdAt": "2020-06-18T16:14:37Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9934", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1Mjg1OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442352859", "bodyText": "This sequence might better be handled by:\n    Assert.fail(\"Failed to create subthread\", e);\n\nSee org.testng.Assert#fail", "author": "keithc-ca", "createdAt": "2020-06-18T16:27:58Z", "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -163,6 +163,7 @@ public void test_Constructor2() {\n \t\t\tct = new Thread(new SimpleThread(10));\n \t\t\tct.start();\n \t\t} catch (Exception e) {\n+\t\t\te.printStackTrace();\n \t\t\tAssertJUnit.assertTrue(\"Failed to create subthread\", false);", "originalCommit": "e0d4b734a93e2070ff3a93142b93b7feccd42c57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2MDU5OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442360598", "bodyText": "Updated", "author": "pshipton", "createdAt": "2020-06-18T16:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1Mjg1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "638ebe485c1cce9b4f6b4f8a8e7501c66d07becd", "chunk": "diff --git a/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java b/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\nindex 47c0e383e..024410876 100644\n--- a/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\n+++ b/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\n\n@@ -163,8 +163,7 @@ public class Test_Thread {\n \t\t\tct = new Thread(new SimpleThread(10));\n \t\t\tct.start();\n \t\t} catch (Exception e) {\n-\t\t\te.printStackTrace();\n-\t\t\tAssertJUnit.assertTrue(\"Failed to create subthread\", false);\n+\t\t\tAssertJUnit.fail(\"Failed to create subthread\", e);\n \t\t}\n \t}\n \n"}}, {"oid": "638ebe485c1cce9b4f6b4f8a8e7501c66d07becd", "url": "https://github.com/eclipse-openj9/openj9/commit/638ebe485c1cce9b4f6b4f8a8e7501c66d07becd", "message": "Improve Test_Thread failure diagnostics\n\nRelated to #9915. The failure we're tracking re-occurred, but in a\ndifferent place. I've tried to over them all.\n\n[ci skip]\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-06-18T16:38:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NTg5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442365892", "bodyText": "The local variable result becomes useless with this change. Unless we expect to revert this later, the local variables should be removed (here and in test_join2() and test_join3()).", "author": "keithc-ca", "createdAt": "2020-06-18T16:48:34Z", "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -787,6 +787,7 @@ public void test_join() {\n \t\t\t// }\n \t\t\tth.join();\n \t\t} catch (InterruptedException e) {\n+\t\t\tAssertJUnit.fail(\"Interrupted\", e);\n \t\t\tresult = false;", "originalCommit": "638ebe485c1cce9b4f6b4f8a8e7501c66d07becd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3MTE1NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442371155", "bodyText": "Updated.", "author": "pshipton", "createdAt": "2020-06-18T16:57:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NTg5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d42eb8293748aa20f10f6fa182574c97fea09445", "chunk": "diff --git a/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java b/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\nindex 024410876..7b5fd5e70 100644\n--- a/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\n+++ b/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\n\n@@ -787,11 +786,10 @@ public class Test_Thread {\n \t\t\t// }\n \t\t\tth.join();\n \t\t} catch (InterruptedException e) {\n-\t\t\tAssertJUnit.fail(\"Interrupted\", e);\n-\t\t\tresult = false;\n+\t\t\t// killer.interrupt();\n+\t\t\tAssertJUnit.fail(\"Hung joining a non-started thread\", e);\n \t\t}\n \t\t// killer.interrupt();\n-\t\tAssertJUnit.assertTrue(\"Hung joining a non-started thread\", result);\n \t\tth.start();\n \t}\n \n"}}, {"oid": "d42eb8293748aa20f10f6fa182574c97fea09445", "url": "https://github.com/eclipse-openj9/openj9/commit/d42eb8293748aa20f10f6fa182574c97fea09445", "message": "Improve Test_Thread failure diagnostics\n\nRelated to #9915. The failure we're tracking re-occurred, but in a\ndifferent place. I've tried to over them all.\n\n[ci skip]\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-06-18T16:56:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3OTIyMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442379223", "bodyText": "What is the purpose of the comments referring to 'killer' (there is nothing available here by that name)?", "author": "keithc-ca", "createdAt": "2020-06-18T17:12:06Z", "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -787,10 +786,10 @@ public void test_join() {\n \t\t\t// }\n \t\t\tth.join();\n \t\t} catch (InterruptedException e) {\n-\t\t\tresult = false;\n+\t\t\t// killer.interrupt();\n+\t\t\tAssertJUnit.fail(\"Hung joining a non-started thread\", e);\n \t\t}\n \t\t// killer.interrupt();", "originalCommit": "d42eb8293748aa20f10f6fa182574c97fea09445", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjc1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442522752", "bodyText": "I couldn't say, just keeping it consistent with what was already there.\nI've removed the hopefully obsolete comments.", "author": "pshipton", "createdAt": "2020-06-18T21:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3OTIyMw=="}], "type": "inlineReview", "revised_code": {"commit": "c1a51b6178ee017839cdb69866271300e837cee9", "chunk": "diff --git a/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java b/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\nindex 7b5fd5e70..7caf9339c 100644\n--- a/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\n+++ b/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\n\n@@ -780,16 +780,10 @@ public class Test_Thread {\n \t\tAssertJUnit.assertTrue(\"Joined thread is still alive\", !st.isAlive());\n \t\tThread th = new Thread(\"test\");\n \t\ttry {\n-\t\t\t// synchronized(lock) {\n-\t\t\t// killer.start();\n-\t\t\t// lock.wait();\n-\t\t\t// }\n \t\t\tth.join();\n \t\t} catch (InterruptedException e) {\n-\t\t\t// killer.interrupt();\n \t\t\tAssertJUnit.fail(\"Hung joining a non-started thread\", e);\n \t\t}\n-\t\t// killer.interrupt();\n \t\tth.start();\n \t}\n \n"}}, {"oid": "c1a51b6178ee017839cdb69866271300e837cee9", "url": "https://github.com/eclipse-openj9/openj9/commit/c1a51b6178ee017839cdb69866271300e837cee9", "message": "Improve Test_Thread failure diagnostics\n\nRelated to #9915. The failure we're tracking re-occurred, but in a\ndifferent place. I've tried to over them all.\n\n[ci skip]\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-06-18T21:50:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNzI2NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442807264", "bodyText": "This needs to use Assert.fail like on line 276 below. This correction is required several other places below.", "author": "keithc-ca", "createdAt": "2020-06-19T12:20:02Z", "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -163,7 +163,7 @@ public void test_Constructor2() {\n \t\t\tct = new Thread(new SimpleThread(10));\n \t\t\tct.start();\n \t\t} catch (Exception e) {\n-\t\t\tAssertJUnit.assertTrue(\"Failed to create subthread\", false);\n+\t\t\tAssertJUnit.fail(\"Failed to create subthread\", e);", "originalCommit": "c1a51b6178ee017839cdb69866271300e837cee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzMTkxMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442831912", "bodyText": "Fixed, I hope.", "author": "pshipton", "createdAt": "2020-06-19T13:11:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNzI2NA=="}], "type": "inlineReview", "revised_code": {"commit": "1d5553ddbcd866139e49d92d4a62fabf0f13f72e", "chunk": "diff --git a/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java b/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\nindex 7caf9339c..9b701dc3e 100644\n--- a/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\n+++ b/test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java\n\n@@ -163,7 +163,7 @@ public class Test_Thread {\n \t\t\tct = new Thread(new SimpleThread(10));\n \t\t\tct.start();\n \t\t} catch (Exception e) {\n-\t\t\tAssertJUnit.fail(\"Failed to create subthread\", e);\n+\t\t\tAssert.fail(\"Failed to create subthread\", e);\n \t\t}\n \t}\n \n"}}, {"oid": "1d5553ddbcd866139e49d92d4a62fabf0f13f72e", "url": "https://github.com/eclipse-openj9/openj9/commit/1d5553ddbcd866139e49d92d4a62fabf0f13f72e", "message": "Improve Test_Thread failure diagnostics\n\nRelated to #9915. The failure we're tracking re-occurred, but in a\ndifferent place. I've tried to over them all.\n\n[ci skip]\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-06-19T13:09:54Z", "type": "commit"}, {"oid": "1d5553ddbcd866139e49d92d4a62fabf0f13f72e", "url": "https://github.com/eclipse-openj9/openj9/commit/1d5553ddbcd866139e49d92d4a62fabf0f13f72e", "message": "Improve Test_Thread failure diagnostics\n\nRelated to #9915. The failure we're tracking re-occurred, but in a\ndifferent place. I've tried to over them all.\n\n[ci skip]\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-06-19T13:09:54Z", "type": "forcePushed"}]}