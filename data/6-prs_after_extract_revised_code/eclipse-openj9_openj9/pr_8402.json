{"pr_number": 8402, "pr_title": "Add compare and branch JIT Test", "pr_createdAt": "2020-01-24T16:26:12Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8402", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDczODc4NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8402#discussion_r370738784", "bodyText": "We should add a bit of documentation on what exactly this unit test is trying to capture. Things we should do:\n\nExplain what issue the test is trying to capture\nReference the fix\n\nThere is a decent example of this in [1] for a Z bug.\n[1] https://github.com/eclipse/openj9/blob/3fb280271d4b3093c611858b62d13f9fba6c6700/test/functional/JIT_Test/src/jit/test/ra/TestOOLSpill31Bit.java#L41-L49", "author": "fjeremic", "createdAt": "2020-01-24T16:58:29Z", "path": "test/functional/JIT_Test/src/jit/test/jitt/misc/SanityCompareAndBranch.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+package jit.test.jitt.misc;\n+\n+import org.testng.annotations.Test;\n+import org.testng.Assert;\n+\n+@Test(groups = { \"level.sanity\", \"component.jit\"})\n+public class SanityCompareAndBranch extends jit.test.jitt.Test {\n+\n+   private int testAddressCompare(Object obj1, Object obj2) {\n+      int retVal = 0;\n+      if (obj1.getClass() == java.lang.String.class) {\n+         String temp = (String)obj1;\n+         for (int i=0; i < temp.length(); i++) {\n+            if (temp.charAt(i) == 'i')\n+               retVal++;\n+         }\n+      }\n+      if (obj1.getClass() == obj2.getClass())\n+         retVal = 0;\n+      return retVal;\n+   }\n+\n+   @Test\n+   public void testCompareAndBranch() {\n+      SanityCompareAndBranch x = new SanityCompareAndBranch();\n+      String a1 = \"This is Demo String a1\";\n+      String a2 = \"This is Demo String a2\";\n+      Assert.assertEquals(0, testAddressCompare(a1,a2));\n+      String a3 = \"This is Demo String a3\";\n+      String a4 = \"This is Demo String a4\";\n+      Assert.assertEquals(0, testAddressCompare(a3, a4));\n+   }", "originalCommit": "dbdcc2f45b4c09652fde013f1530a1ce5b8d35c7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1611f99307dc0d57a1b52d239f6dc215c0e0d7f", "chunk": "diff --git a/test/functional/JIT_Test/src/jit/test/jitt/misc/SanityCompareAndBranch.java b/test/functional/JIT_Test/src/jit/test/jitt/misc/SanityCompareAndBranch.java\nindex 7636e613b..b7c044399 100644\n--- a/test/functional/JIT_Test/src/jit/test/jitt/misc/SanityCompareAndBranch.java\n+++ b/test/functional/JIT_Test/src/jit/test/jitt/misc/SanityCompareAndBranch.java\n\n@@ -27,6 +27,15 @@ import org.testng.Assert;\n @Test(groups = { \"level.sanity\", \"component.jit\"})\n public class SanityCompareAndBranch extends jit.test.jitt.Test {\n \n+   /**\n+    * Following method when JIT compiled deterministically (Fix optimization level), contains a tree\n+    * that compares two VFT pointers, one of which is stored on temporary java stack slots while other\n+    * from the object. \n+    * On 64-Bit platform with Compressed references, this will test the code path to generate instruction\n+    * for `if` tree where one child is 8 byte memory load while other child is 4 byte memory load.\n+    *\n+    * For more details see eclipse/omr#4763\n+    */\n    private int testAddressCompare(Object obj1, Object obj2) {\n       int retVal = 0;\n       if (obj1.getClass() == java.lang.String.class) {\n"}}, {"oid": "f1611f99307dc0d57a1b52d239f6dc215c0e0d7f", "url": "https://github.com/eclipse-openj9/openj9/commit/f1611f99307dc0d57a1b52d239f6dc215c0e0d7f", "message": "Fix Copyright and add comment to test\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-01-28T21:34:03Z", "type": "forcePushed"}, {"oid": "1f30bf9f5154b939f666eeeda4a93280c2b97274", "url": "https://github.com/eclipse-openj9/openj9/commit/1f30bf9f5154b939f666eeeda4a93280c2b97274", "message": "Add compare and branch JIT Test\n\nAdd a unit test to test Compare and Branch instruction\ngeneration in JIT compiled code when we are comparing\ntwo VFT nodes.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-01-29T15:54:23Z", "type": "forcePushed"}, {"oid": "b47329f86aa9453c1f0b0a3a26a4d9986fdd94a2", "url": "https://github.com/eclipse-openj9/openj9/commit/b47329f86aa9453c1f0b0a3a26a4d9986fdd94a2", "message": "Add compare and branch JIT Test\n\nAdd a unit test to test Compare and Branch instruction\ngeneration in JIT compiled code when we are comparing\ntwo VFT nodes.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-02-05T14:23:10Z", "type": "commit"}, {"oid": "b47329f86aa9453c1f0b0a3a26a4d9986fdd94a2", "url": "https://github.com/eclipse-openj9/openj9/commit/b47329f86aa9453c1f0b0a3a26a4d9986fdd94a2", "message": "Add compare and branch JIT Test\n\nAdd a unit test to test Compare and Branch instruction\ngeneration in JIT compiled code when we are comparing\ntwo VFT nodes.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-02-05T14:23:10Z", "type": "forcePushed"}]}