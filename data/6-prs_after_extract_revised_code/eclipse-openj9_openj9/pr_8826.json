{"pr_number": 8826, "pr_title": "Runtime compressed refs work", "pr_createdAt": "2020-03-10T22:40:08Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8826", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MjExMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391042111", "bodyText": "The name 'MIXED_MODE' is a little generic; it would be better if it mentioned 'references'.", "author": "keithc-ca", "createdAt": "2020-03-11T15:09:41Z", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java", "diffHunk": "@@ -71,6 +71,8 @@\n \n \tpublic static final String MM_OBJECT_ACCESS_BARRIER_VERSION = \"ALG_MM_OBJECT_ACCESS_BARRIER_VERSION\";\n \n+\tpublic static final String MIXED_MODE = \"MIXED_MODE\";", "originalCommit": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MDU5OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391060599", "bodyText": "Fixed (along with the java final variable).", "author": "gacholio", "createdAt": "2020-03-11T15:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MjExMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c29749bbd0bb5d109223ee772b10e5f35b9b87c7", "chunk": "diff --git a/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java b/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java\nindex eb889a613..9bf398dac 100644\n--- a/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java\n+++ b/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java\n\n@@ -71,7 +71,7 @@ public class AlgorithmVersion {\n \n \tpublic static final String MM_OBJECT_ACCESS_BARRIER_VERSION = \"ALG_MM_OBJECT_ACCESS_BARRIER_VERSION\";\n \n-\tpublic static final String MIXED_MODE = \"MIXED_MODE\";\n+\tpublic static final String MIXED_REFERENCE_MODE = \"MIXED_REFERENCE_MODE\";\n \n \t// Fields\n \tprivate static AlgorithmVersion DEFAULT_VERSION;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0NjU1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391046552", "bodyText": "formatting: space after catch", "author": "keithc-ca", "createdAt": "2020-03-11T15:15:44Z", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -44,14 +52,27 @@\n \tprivate static int[] counts;\n \tprivate static long probes;\n \tprivate static long hits;\n-\t\n+\tpublic static final boolean mixedMode;\n+\tpublic static final boolean compressObjectReferences;\n+\n \t/**\n \t * Determines whether java/lang/String is backed by a byte[] array if true or char[] if false.\n \t */\n \tprivate static Boolean isStringBackedByByteArray = null;\n \t\n \tstatic {\n \t\tinitializeCache();\n+\t\ttry {\n+\t\t\tmixedMode = AlgorithmVersion.getVersionOf(AlgorithmVersion.MIXED_MODE).getAlgorithmVersion() > 0;\n+\t\t\tif (mixedMode) {\n+\t\t\t\tJ9JavaVMPointer vm = J9RASHelper.getVM(DataType.getJ9RASPointer());\n+\t\t\t\tcompressObjectReferences = vm.extendedRuntimeFlags2().anyBitsIn(J9_EXTENDED_RUNTIME2_COMPRESS_OBJECT_REFERENCES);\n+\t\t\t} else {\n+\t\t\t\tcompressObjectReferences = J9BuildFlags.gc_compressedPointers;\n+\t\t\t}\n+\t\t} catch(CorruptDataException e) {", "originalCommit": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MDM1Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391060356", "bodyText": "Fixed.", "author": "gacholio", "createdAt": "2020-03-11T15:33:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0NjU1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c29749bbd0bb5d109223ee772b10e5f35b9b87c7", "chunk": "diff --git a/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java b/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java\nindex 1d66d2bdb..5a799f33c 100644\n--- a/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java\n+++ b/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java\n\n@@ -52,7 +52,7 @@ public class J9ObjectHelper\n \tprivate static int[] counts;\n \tprivate static long probes;\n \tprivate static long hits;\n-\tpublic static final boolean mixedMode;\n+\tpublic static final boolean mixedReferenceMode;\n \tpublic static final boolean compressObjectReferences;\n \n \t/**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0OTYxNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391049616", "bodyText": "Is interp_flagsInClassSlot another of those flags that can't be turned off?", "author": "keithc-ca", "createdAt": "2020-03-11T15:19:59Z", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -68,27 +89,44 @@ public static boolean isIndexable(J9ObjectPointer objPointer) throws CorruptData\n \tpublic static U32 flags(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\t\t\n \t\tif(J9BuildFlags.interp_flagsInClassSlot) {\n-\t\t\tlong bitmask = (J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1);\n-\t\t\tJ9ClassPointer clazz = objPointer.clazz();\n+\t\t\tlong bitmask = J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1;\n+\t\t\tUDATA clazz = rawClazz(objPointer);\n \t\t\t\n-\t\t\treturn new U32(UDATA.cast(clazz).bitAnd(bitmask));\n+\t\t\treturn new U32(clazz.bitAnd(bitmask));\n \t\t} else {\n \t\t\tthrow new UnsupportedOperationException(\"Only builds with interp_flagsInClassSlot currently supported.\");\n \t\t}\n \t}\n \n+\tpublic static long headerSize()\n+\t{\n+\t\tif (mixedMode) {\n+\t\t\tif (compressObjectReferences) {\n+\t\t\t\treturn J9ObjectCompressed.SIZEOF;\n+\t\t\t}\n+\t\t\treturn J9ObjectFull.SIZEOF;\n+\t\t}\n+\t\treturn J9Object.SIZEOF;\n+\t}\n+\n+\tpublic static UDATA rawClazz(J9ObjectPointer objPointer) throws CorruptDataException\n+\t{\n+\t\tif (mixedMode) {\n+\t\t\tif (compressObjectReferences) {\n+\t\t\t\treturn J9ObjectCompressedPointer.cast(objPointer).clazz();\n+\t\t\t}\n+\t\t\treturn J9ObjectFullPointer.cast(objPointer).clazz();\n+\t\t}\n+\t\treturn UDATA.cast(objPointer.clazz());\n+\t}\n+\n \tpublic static J9ClassPointer clazz(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\n \t\tJ9ClassPointer classPointer = checkClassCache(objPointer);\n \t\tif(null == classPointer) {\n-\t\t\tif(J9BuildFlags.interp_flagsInClassSlot) {", "originalCommit": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1NzUwNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391057504", "bodyText": "Yes - I'm not fixing anything to do with this in this PR.", "author": "gacholio", "createdAt": "2020-03-11T15:30:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0OTYxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MjMzMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391062332", "bodyText": "That's fine with me; I just wanted to be sure that the removal of the test of interp_flagsInClassSlot was intended and will be safe.", "author": "keithc-ca", "createdAt": "2020-03-11T15:36:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0OTYxNg=="}], "type": "inlineReview", "revised_code": {"commit": "c29749bbd0bb5d109223ee772b10e5f35b9b87c7", "chunk": "diff --git a/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java b/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java\nindex 1d66d2bdb..5a799f33c 100644\n--- a/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java\n+++ b/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java\n\n@@ -100,7 +100,7 @@ public class J9ObjectHelper\n \n \tpublic static long headerSize()\n \t{\n-\t\tif (mixedMode) {\n+\t\tif (mixedReferenceMode) {\n \t\t\tif (compressObjectReferences) {\n \t\t\t\treturn J9ObjectCompressed.SIZEOF;\n \t\t\t}\n"}}, {"oid": "c29749bbd0bb5d109223ee772b10e5f35b9b87c7", "url": "https://github.com/eclipse-openj9/openj9/commit/c29749bbd0bb5d109223ee772b10e5f35b9b87c7", "message": "Runtime compressed refs work\n\nGet DDR working in mixed mode.\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>", "committedDate": "2020-03-11T15:33:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3MjA5MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391072090", "bodyText": "Since you removed the test of interp_flagsInClassSlot below, perhaps you should remove it here too?", "author": "keithc-ca", "createdAt": "2020-03-11T15:49:15Z", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -68,27 +89,44 @@ public static boolean isIndexable(J9ObjectPointer objPointer) throws CorruptData\n \tpublic static U32 flags(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\t\t\n \t\tif(J9BuildFlags.interp_flagsInClassSlot) {", "originalCommit": "c29749bbd0bb5d109223ee772b10e5f35b9b87c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA4MTg2Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391081862", "bodyText": "Done.", "author": "gacholio", "createdAt": "2020-03-11T16:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3MjA5MA=="}], "type": "inlineReview", "revised_code": {"commit": "1d335b03ac50040b5f6291514a2f1a376c17f49d", "chunk": "diff --git a/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java b/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java\nindex 5a799f33c..acfa9175d 100644\n--- a/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java\n+++ b/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java\n\n@@ -88,14 +88,10 @@ public class J9ObjectHelper\n \t\n \tpublic static U32 flags(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\t\t\n-\t\tif(J9BuildFlags.interp_flagsInClassSlot) {\n-\t\t\tlong bitmask = J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1;\n-\t\t\tUDATA clazz = rawClazz(objPointer);\n-\t\t\t\n-\t\t\treturn new U32(clazz.bitAnd(bitmask));\n-\t\t} else {\n-\t\t\tthrow new UnsupportedOperationException(\"Only builds with interp_flagsInClassSlot currently supported.\");\n-\t\t}\n+\t\tlong bitmask = J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1;\n+\t\tUDATA clazz = rawClazz(objPointer);\n+\t\t\n+\t\treturn new U32(clazz.bitAnd(bitmask));\n \t}\n \n \tpublic static long headerSize()\n"}}, {"oid": "1d335b03ac50040b5f6291514a2f1a376c17f49d", "url": "https://github.com/eclipse-openj9/openj9/commit/1d335b03ac50040b5f6291514a2f1a376c17f49d", "message": "Runtime compressed refs work\n\nGet DDR working in mixed mode.\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>", "committedDate": "2020-03-11T16:01:36Z", "type": "forcePushed"}, {"oid": "045e32d4b88d48d5ec3f41fff2a174016c2bfca8", "url": "https://github.com/eclipse-openj9/openj9/commit/045e32d4b88d48d5ec3f41fff2a174016c2bfca8", "message": "Runtime compressed refs work\n\nGet DDR working in mixed mode.\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>", "committedDate": "2020-03-11T16:49:36Z", "type": "commit"}, {"oid": "045e32d4b88d48d5ec3f41fff2a174016c2bfca8", "url": "https://github.com/eclipse-openj9/openj9/commit/045e32d4b88d48d5ec3f41fff2a174016c2bfca8", "message": "Runtime compressed refs work\n\nGet DDR working in mixed mode.\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>", "committedDate": "2020-03-11T16:49:36Z", "type": "forcePushed"}]}