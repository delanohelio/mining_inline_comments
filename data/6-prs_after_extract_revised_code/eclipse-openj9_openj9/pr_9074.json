{"pr_number": 9074, "pr_title": "Add FlattenedArrayObjectScanner", "pr_createdAt": "2020-04-01T18:59:18Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9074", "timeline": [{"oid": "448e19ab08c84f8b0ab136119d36761a71fb66fd", "url": "https://github.com/eclipse-openj9/openj9/commit/448e19ab08c84f8b0ab136119d36761a71fb66fd", "message": "Add FlattenedArrayObjectSCanner\n\n- Use flattened size when iterating flattened arrays\n- Use object ptr in Mixed and Reference scanner constructors\n\nSigned-off-by: Andrew Young <youngar17@gmail.com>", "committedDate": "2020-04-01T19:01:27Z", "type": "forcePushed"}, {"oid": "bef5fb3e365d0c73250c6292a9721584ad2b40c4", "url": "https://github.com/eclipse-openj9/openj9/commit/bef5fb3e365d0c73250c6292a9721584ad2b40c4", "message": "Add FlattenedArrayObjectSCanner\n\n- Use flattened size when iterating flattened arrays\n- Use object ptr in Mixed and Reference scanner constructors\n\nSigned-off-by: Andrew Young <youngar17@gmail.com>", "committedDate": "2020-04-01T19:22:43Z", "type": "forcePushed"}, {"oid": "97ef6d7b24f7c1ae8407f22cad612f70c92883b5", "url": "https://github.com/eclipse-openj9/openj9/commit/97ef6d7b24f7c1ae8407f22cad612f70c92883b5", "message": "Add FlattenedArrayObjectScanner\n\n- Use flattened size when iterating flattened arrays\n- Use object ptr in Mixed and Reference scanner constructors\n\nSigned-off-by: Andrew Young <youngar17@gmail.com>", "committedDate": "2020-04-01T19:34:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkwMzMyMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9074#discussion_r401903322", "bodyText": "I guess typo. Should it be /* megaObject */ ?", "author": "dmitripivkine", "createdAt": "2020-04-01T20:54:54Z", "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -107,6 +107,9 @@\n \tstatic Class largeObjectValueClass = null;\n \tstatic MethodHandle makeLargeObjectValue = null;\n \tstatic MethodHandle[] getObjects = null;\n+\t/* megeObject */", "originalCommit": "f4efb095aa726db6d52a481dcdb2c473cc7cb4eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e13901880b00fda8b174cf21e6ac2c4720be0e71", "chunk": "diff --git a/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java b/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java\nindex 22cb1dbb1..12f4c788b 100644\n--- a/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java\n+++ b/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java\n\n@@ -107,7 +107,7 @@ public class ValueTypeTests {\n \tstatic Class largeObjectValueClass = null;\n \tstatic MethodHandle makeLargeObjectValue = null;\n \tstatic MethodHandle[] getObjects = null;\n-\t/* megeObject */\n+\t/* megaObject */\n \tstatic Class megaObjectValueClass = null;\n \tstatic MethodHandle makeMegaObjectValue = null;\n \t/* assortedRefWithLongAlignment */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNDA3MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9074#discussion_r401914070", "bodyText": "you can use checkFieldAccessMHOfAssortedType to verify that what you are getting back is the correct thing", "author": "tajila", "createdAt": "2020-04-01T21:15:31Z", "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -252,6 +255,71 @@ static public void testCreateArrayPoint2D() throws Throwable {\n \t\tassertEquals(getY.invoke(point2D_2_check), getY.invoke(point2D_2));\n \t}\n \n+\t@Test(priority=5)\n+\tstatic public void testGCFlattenedPoint2DArray() throws Throwable {\n+\t\tint x1 = 0xFFEEFFEE;\n+\t\tint y1 = 0xAABBAABB;\n+\t\tObject point2D = makePoint2D.invoke(x1, y1);\n+\t\tObject arrayObject = Array.newInstance(point2DClass, 8);\n+\n+\t\tfor (int i = 1; i < 8; i++) {\n+\t\t\tArray.set(arrayObject, i, point2D);\n+\t\t}\n+\n+\t\tSystem.gc();\n+\t\tSystem.gc();\n+\n+\t\tObject value = Array.get(arrayObject, 0);\n+\t}\n+\n+\t@Test(priority=5)\n+\tstatic public void testGCFlattenedAssortedValueArray() throws Throwable {\n+\t\tObject arrayObject = Array.newInstance(assortedValueWithLongAlignmentClass, 4);\n+\t\tObject assortedValueWithLongAlignment = createAssorted(makeAssortedValueWithLongAlignment, typeWithLongAlignmentFields);\n+\n+\t\tfor (int i = 1; i < 4; i++) {\n+\t\t\tArray.set(arrayObject, i, assortedValueWithLongAlignment);\n+\t\t}\n+\n+\t\tSystem.gc();\n+\t\tSystem.gc();\n+\n+\t\tObject value = Array.get(arrayObject, 0);", "originalCommit": "f4efb095aa726db6d52a481dcdb2c473cc7cb4eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3NzY0Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9074#discussion_r401977643", "bodyText": "I added tests so now we're doing all three singleAlignment, objectAlignment, and longAlignment.  The tests are now using checkFieldAccessMHOfAssortedType on each array element.", "author": "youngar", "createdAt": "2020-04-01T23:58:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNDA3MA=="}], "type": "inlineReview", "revised_code": {"commit": "e13901880b00fda8b174cf21e6ac2c4720be0e71", "chunk": "diff --git a/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java b/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java\nindex 22cb1dbb1..12f4c788b 100644\n--- a/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java\n+++ b/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java\n\n@@ -262,7 +262,7 @@ public class ValueTypeTests {\n \t\tObject point2D = makePoint2D.invoke(x1, y1);\n \t\tObject arrayObject = Array.newInstance(point2DClass, 8);\n \n-\t\tfor (int i = 1; i < 8; i++) {\n+\t\tfor (int i = 0; i < 8; i++) {\n \t\t\tArray.set(arrayObject, i, point2D);\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNjE3Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9074#discussion_r401916172", "bodyText": "For this test we want to see whether the GC will scan the default value on the J9Class (see https://github.com/eclipse/openj9/blob/master/runtime/gc_structs/ValueTypesIterator.hpp#L69), we know this is tested with a big number (200000) does it still exercise that path with 200?", "author": "tajila", "createdAt": "2020-04-01T21:19:52Z", "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -1402,7 +1471,7 @@ static public void testStaticFieldsWithObjectAlignment() throws Throwable {\n \tstatic public void testCreateLargeNumberOfPoint2D() throws Throwable {\n \t\tString fields[] = {\"x:I\", \"y:I\"};\n \t\tString className = \"Point2D\";\n-\t\tfor (int valueIndex = 0; valueIndex < 200000; valueIndex++) {\n+\t\tfor (int valueIndex = 0; valueIndex < 200; valueIndex++) {", "originalCommit": "f4efb095aa726db6d52a481dcdb2c473cc7cb4eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyOTk1MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9074#discussion_r401929951", "bodyText": "This was accidentally added, the tests were simply taking too long.  Thanks for pointing it out.  Could we switch this test to call System.gc()?", "author": "youngar", "createdAt": "2020-04-01T21:48:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNjE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3ODEwNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9074#discussion_r401978107", "bodyText": "I just switched back the number for now.", "author": "youngar", "createdAt": "2020-04-02T00:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNjE3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f41926821736c594ddc7b61143e219a85f5e8730", "chunk": "diff --git a/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java b/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java\nindex 22cb1dbb1..2446a9db5 100644\n--- a/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java\n+++ b/test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java\n\n@@ -1471,7 +1507,7 @@ public class ValueTypeTests {\n \tstatic public void testCreateLargeNumberOfPoint2D() throws Throwable {\n \t\tString fields[] = {\"x:I\", \"y:I\"};\n \t\tString className = \"Point2D\";\n-\t\tfor (int valueIndex = 0; valueIndex < 200; valueIndex++) {\n+\t\tfor (int valueIndex = 0; valueIndex < 200000; valueIndex++) {\n \t\t\tclassName =  \"Point2D\" + valueIndex;\t\t\n \t\t\tpoint2DClass = ValueTypeGenerator.generateValueClass(className, fields);\n \t\t\t/* findStatic will trigger class resolution */\n"}}, {"oid": "e13901880b00fda8b174cf21e6ac2c4720be0e71", "url": "https://github.com/eclipse-openj9/openj9/commit/e13901880b00fda8b174cf21e6ac2c4720be0e71", "message": "Add more value type array tests\n\n- Add tests for all assorted value alignment types\n- Make sure tests are validating after a GC\n\nSigned-off-by: Andrew Young <youngar17@gmail.com>", "committedDate": "2020-04-01T23:46:57Z", "type": "forcePushed"}, {"oid": "b67b1ebd85e5006e0a034c5f0c30981445e58d72", "url": "https://github.com/eclipse-openj9/openj9/commit/b67b1ebd85e5006e0a034c5f0c30981445e58d72", "message": "Add more value type array tests\n\n- Add tests for all assorted value alignment types\n- Make sure tests are validating after a GC\n\nSigned-off-by: Andrew Young <youngar17@gmail.com>", "committedDate": "2020-04-01T23:50:00Z", "type": "forcePushed"}, {"oid": "f41926821736c594ddc7b61143e219a85f5e8730", "url": "https://github.com/eclipse-openj9/openj9/commit/f41926821736c594ddc7b61143e219a85f5e8730", "message": "Add more value type array tests\n\n- Add tests for all assorted value alignment types\n- Make sure tests are validating after a GC\n\nSigned-off-by: Andrew Young <youngar17@gmail.com>", "committedDate": "2020-04-02T00:01:15Z", "type": "forcePushed"}, {"oid": "07755f7fa4775348a9c8eb58f8c9e59b0bf861fb", "url": "https://github.com/eclipse-openj9/openj9/commit/07755f7fa4775348a9c8eb58f8c9e59b0bf861fb", "message": "Add FlattenedArrayObjectScanner\n\n- Use flattened size when iterating flattened arrays\n- Use object ptr in Mixed and Reference scanner constructors\n- Add more value type array tests\n- Add tests for all assorted value alignment types\n- Make sure tests are validating after a GC\n\nSigned-off-by: Andrew Young <youngar17@gmail.com>", "committedDate": "2020-04-02T01:22:10Z", "type": "forcePushed"}, {"oid": "69ba50da5d14fead1654ba8072419cd8e2d8fff8", "url": "https://github.com/eclipse-openj9/openj9/commit/69ba50da5d14fead1654ba8072419cd8e2d8fff8", "message": "Add FlattenedArrayObjectScanner\n\n- Use flattened size when iterating flattened arrays\n- Use object ptr in Mixed and Reference scanner constructors\n- Add more value type array tests\n- Add tests for all assorted value alignment types\n- Make sure tests are validating after a GC\n\nSigned-off-by: Andrew Young <youngar17@gmail.com>", "committedDate": "2020-04-02T16:56:22Z", "type": "commit"}, {"oid": "69ba50da5d14fead1654ba8072419cd8e2d8fff8", "url": "https://github.com/eclipse-openj9/openj9/commit/69ba50da5d14fead1654ba8072419cd8e2d8fff8", "message": "Add FlattenedArrayObjectScanner\n\n- Use flattened size when iterating flattened arrays\n- Use object ptr in Mixed and Reference scanner constructors\n- Add more value type array tests\n- Add tests for all assorted value alignment types\n- Make sure tests are validating after a GC\n\nSigned-off-by: Andrew Young <youngar17@gmail.com>", "committedDate": "2020-04-02T16:56:22Z", "type": "forcePushed"}]}