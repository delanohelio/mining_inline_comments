{"pr_number": 57044, "pr_title": "Don't run sort optimization on size=0", "pr_createdAt": "2020-05-21T14:21:58Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57044", "timeline": [{"oid": "23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386", "url": "https://github.com/elastic/elasticsearch/commit/23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386", "message": "Don't run sort optimization on size=0\n\nSort optimization creates TopFieldCollector that errors\nwhen size=0. This ensures that sort optimization is not\nrun when size=0.\n\nCloses #56923", "committedDate": "2020-05-21T14:18:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1NjIxNg==", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r428756216", "bodyText": "I'm wondering why we use a spy here, if we don't verify the calls after?", "author": "jtibshirani", "createdAt": "2020-05-21T16:08:56Z", "path": "server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java", "diffHunk": "@@ -703,6 +703,23 @@ public void testNumericLongOrDateSortOptimization() throws Exception {\n         searchContext.sort(sortAndFormats);\n         QueryPhase.executeInternal(searchContext);\n         assertSortResults(searchContext.queryResult().topDocs().topDocs, (long) numDocs, true);\n+\n+        // 5. Test that sort optimization is NOT run with size 0\n+        {\n+            sortAndFormats = new SortAndFormats(longSort, new DocValueFormat[]{DocValueFormat.RAW});\n+            searchContext = spy(new TestSearchContext(null, indexShard, newContextSearcher(reader)));", "originalCommit": "23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0MjU2MA==", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r428842560", "bodyText": "@jtibshirani Thanks for the review.  I am using spy here to wrap an instance of searchContext for it to return a fake mapperService on the following line of 711.   Since we don't have a real node here,  I had to create a fake MapperService on line 646.", "author": "mayya-sharipova", "createdAt": "2020-05-21T18:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1NjIxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0NDMxMA==", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r428844310", "bodyText": "Got it, thanks.", "author": "jtibshirani", "createdAt": "2020-05-21T18:46:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1NjIxNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MTk0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r429051947", "bodyText": "What if 'size' is 0 but 'from' is not, can this case uses sort optimization?  if it can, changing this place to \"from + size\" may be much better.\nFeel free about this, just an advice :P", "author": "yyff", "createdAt": "2020-05-22T05:39:06Z", "path": "server/src/main/java/org/elasticsearch/search/query/QueryPhase.java", "diffHunk": "@@ -244,7 +244,7 @@ static boolean executeInternal(SearchContext searchContext) throws QueryPhaseExe\n \n             CheckedConsumer<List<LeafReaderContext>, IOException> leafSorter = l -> {};\n             // try to rewrite numeric or date sort to the optimized distanceFeatureQuery\n-            if ((searchContext.sort() != null) && SYS_PROP_REWRITE_SORT) {\n+            if ((searchContext.sort() != null) && (searchContext.size() > 0) && SYS_PROP_REWRITE_SORT) {", "originalCommit": "23b152d48b5e38319a0f18fa9f9a2ffa7ba9b386", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYwNDUzNg==", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r430604536", "bodyText": "@yyff thanks for pointing this out! It seems unusual to perform a search with from: n, size: 0, but I do agree it's more consistent to check 'num hits' (which is from + size) instead of just size. @mayya-sharipova what are your thoughts on adjusting this?", "author": "jtibshirani", "createdAt": "2020-05-26T18:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MTk0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM4OTk3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57044#discussion_r431389975", "bodyText": "@yyff @jtibshirani Thanks for commenting.  I have addressed this in #57250", "author": "mayya-sharipova", "createdAt": "2020-05-27T19:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MTk0Nw=="}], "type": "inlineReview", "revised_code": null}]}