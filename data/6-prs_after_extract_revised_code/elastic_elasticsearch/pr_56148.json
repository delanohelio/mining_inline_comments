{"pr_number": 56148, "pr_title": "SQL: relax version lock between server and clients", "pr_createdAt": "2020-05-04T19:00:13Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56148", "timeline": [{"oid": "6e69337b193c185a1422c61cea5be63cbe2b8a03", "url": "https://github.com/elastic/elasticsearch/commit/6e69337b193c185a1422c61cea5be63cbe2b8a03", "message": "Relax version lock between ES/SQL and clients\n\nAllow older-than-server clients to connect, if these are past or on a\ncertain min release.", "committedDate": "2020-05-04T18:53:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5OTAyMA==", "url": "https://github.com/elastic/elasticsearch/pull/56148#discussion_r419699020", "bodyText": "Those can be outside of the loop no?\nand probably the whole try - catch can \"wrap\" the loop?", "author": "matriv", "createdAt": "2020-05-04T20:12:26Z", "path": "x-pack/plugin/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/VersionParityTests.java", "diffHunk": "@@ -38,14 +38,19 @@ public void testExceptionThrownOnIncompatibleVersions() throws IOException, SQLE\n     }\n     \n     public void testNoExceptionThrownForCompatibleVersions() throws IOException {\n-        prepareResponse(null);\n-        \n-        String url = JdbcConfiguration.URL_PREFIX + webServerAddress();\n-        try {\n-            new JdbcHttpClient(JdbcConfiguration.create(url, null, 0));\n-        } catch (SQLException sqle) {\n-            fail(\"JDBC driver version and Elasticsearch server version should be compatible. Error: \" + sqle);\n-        }\n+        Version version = Version.CURRENT;\n+        do {\n+            prepareResponse(version);\n+\n+            String url = JdbcConfiguration.URL_PREFIX + webServerAddress();", "originalCommit": "6e69337b193c185a1422c61cea5be63cbe2b8a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkzNjU5OA==", "url": "https://github.com/elastic/elasticsearch/pull/56148#discussion_r419936598", "bodyText": "Yes, you're right, thanks!", "author": "bpintea", "createdAt": "2020-05-05T08:14:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5OTAyMA=="}], "type": "inlineReview", "revised_code": {"commit": "c3e21a36a87d43906d47fdcaf33bb47eca6c25e8", "chunk": "diff --git a/x-pack/plugin/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/VersionParityTests.java b/x-pack/plugin/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/VersionParityTests.java\nindex af42a073847..1291111cd5c 100644\n--- a/x-pack/plugin/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/VersionParityTests.java\n+++ b/x-pack/plugin/sql/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/VersionParityTests.java\n\n@@ -38,19 +38,17 @@ public class VersionParityTests extends WebServerTestCase {\n     }\n     \n     public void testNoExceptionThrownForCompatibleVersions() throws IOException {\n+        String url = JdbcConfiguration.URL_PREFIX + webServerAddress();\n         Version version = Version.CURRENT;\n-        do {\n-            prepareResponse(version);\n-\n-            String url = JdbcConfiguration.URL_PREFIX + webServerAddress();\n-            try {\n+        try {\n+            do {\n+                prepareResponse(version);\n                 new JdbcHttpClient(JdbcConfiguration.create(url, null, 0));\n-            } catch (SQLException sqle) {\n-                fail(\"JDBC driver version and Elasticsearch server version should be compatible. Error: \" + sqle);\n-            }\n-\n-            version = VersionUtils.getPreviousVersion(version);\n-        } while (version.compareTo(Version.V_7_7_0) >= 0);\n+                version = VersionUtils.getPreviousVersion(version);\n+            } while (version.compareTo(Version.V_7_7_0) >= 0);\n+        } catch (SQLException sqle) {\n+            fail(\"JDBC driver version and Elasticsearch server version should be compatible. Error: \" + sqle);\n+        }\n     }\n     \n     void prepareResponse(Version version) throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNTI3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/56148#discussion_r419905273", "bodyText": "Do you think this method better belongs to SqlVersion class where hasVersionCompatibility() is also defined?", "author": "astefan", "createdAt": "2020-05-05T07:10:33Z", "path": "x-pack/plugin/sql/sql-action/src/main/java/org/elasticsearch/xpack/sql/action/AbstractSqlQueryRequest.java", "diffHunk": "@@ -233,6 +234,11 @@ public ActionRequestValidationException validate() {\n         return validationException;\n     }\n \n+    protected boolean isClientCompatible() {", "originalCommit": "6e69337b193c185a1422c61cea5be63cbe2b8a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkzNzE4NA==", "url": "https://github.com/elastic/elasticsearch/pull/56148#discussion_r419937184", "bodyText": "Yeh, I had a hesitation initially, but it does belong there more naturally. Thanks for raising it.", "author": "bpintea", "createdAt": "2020-05-05T08:15:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNTI3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c3e21a36a87d43906d47fdcaf33bb47eca6c25e8", "chunk": "diff --git a/x-pack/plugin/sql/sql-action/src/main/java/org/elasticsearch/xpack/sql/action/AbstractSqlQueryRequest.java b/x-pack/plugin/sql/sql-action/src/main/java/org/elasticsearch/xpack/sql/action/AbstractSqlQueryRequest.java\nindex 3418875f40e..b505576a574 100644\n--- a/x-pack/plugin/sql/sql-action/src/main/java/org/elasticsearch/xpack/sql/action/AbstractSqlQueryRequest.java\n+++ b/x-pack/plugin/sql/sql-action/src/main/java/org/elasticsearch/xpack/sql/action/AbstractSqlQueryRequest.java\n\n@@ -234,11 +234,6 @@ public abstract class AbstractSqlQueryRequest extends AbstractSqlRequest impleme\n         return validationException;\n     }\n \n-    protected boolean isClientCompatible() {\n-        /* only client's of version 7.7.0 and later are supported as backwards compatible */\n-        return SqlVersion.V_7_7_0.compareTo(requestInfo().version()) <= 0;\n-    }\n-\n     /**\n      * The client's time zone\n      */\n"}}, {"oid": "c3e21a36a87d43906d47fdcaf33bb47eca6c25e8", "url": "https://github.com/elastic/elasticsearch/commit/c3e21a36a87d43906d47fdcaf33bb47eca6c25e8", "message": "Adress review comments\n\n- refactor VersionParityTests#testNoExceptionThrownForCompatibleVersions\nto take idempotent assignments and try-catch blocks out a loop.\n- move method that establishes version compatibiltiy into SqlVersion.", "committedDate": "2020-05-05T08:11:25Z", "type": "commit"}, {"oid": "466be8338aa6d7c099a6f717375e52049febc62f", "url": "https://github.com/elastic/elasticsearch/commit/466be8338aa6d7c099a6f717375e52049febc62f", "message": "Merge remote-tracking branch 'upstream/master' into enh/lift_version_lock_step", "committedDate": "2020-05-05T11:00:59Z", "type": "commit"}]}