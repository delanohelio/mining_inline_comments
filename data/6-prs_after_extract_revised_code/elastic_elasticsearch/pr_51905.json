{"pr_number": 51905, "pr_title": "Use local checkpoint to calculate min translog gen for recovery", "pr_createdAt": "2020-02-05T03:23:18Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51905", "timeline": [{"oid": "fe6733791b37c5af4ca6ded83e2ebd0ae5576c19", "url": "https://github.com/elastic/elasticsearch/commit/fe6733791b37c5af4ca6ded83e2ebd0ae5576c19", "message": "Use local checkpoint to calculate min translog gen for recovery", "committedDate": "2020-02-05T03:08:36Z", "type": "commit"}, {"oid": "403a8bd93d44ae2c9ca88b723aaa875b475a137c", "url": "https://github.com/elastic/elasticsearch/commit/403a8bd93d44ae2c9ca88b723aaa875b475a137c", "message": "Merge branch 'master' into seqno-tlog-policy", "committedDate": "2020-02-05T14:44:17Z", "type": "commit"}, {"oid": "1eb0d5399e72449ff10af0417221394048b838cc", "url": "https://github.com/elastic/elasticsearch/commit/1eb0d5399e72449ff10af0417221394048b838cc", "message": "force flush in translog yaml test", "committedDate": "2020-02-05T15:22:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk0OTQ0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r375949442", "bodyText": "assert localCheckpointOfSafeCommit <= localCheckpointOfLastCommit", "author": "ywelsch", "createdAt": "2020-02-06T16:41:14Z", "path": "server/src/main/java/org/elasticsearch/index/engine/CombinedDeletionPolicy.java", "diffHunk": "@@ -121,16 +121,12 @@ private void updateRetentionPolicy() throws IOException {\n         assert Thread.holdsLock(this);\n         logger.debug(\"Safe commit [{}], last commit [{}]\", commitDescription(safeCommit), commitDescription(lastCommit));\n         assert safeCommit.isDeleted() == false : \"The safe commit must not be deleted\";\n-        final long minRequiredGen = Long.parseLong(safeCommit.getUserData().get(Translog.TRANSLOG_GENERATION_KEY));\n         assert lastCommit.isDeleted() == false : \"The last commit must not be deleted\";\n-        final long lastGen = Long.parseLong(lastCommit.getUserData().get(Translog.TRANSLOG_GENERATION_KEY));\n-\n-        assert minRequiredGen <= lastGen : \"minRequiredGen must not be greater than lastGen\";\n-        translogDeletionPolicy.setTranslogGenerationOfLastCommit(lastGen);\n-        translogDeletionPolicy.setMinTranslogGenerationForRecovery(minRequiredGen);\n-\n-        softDeletesPolicy.setLocalCheckpointOfSafeCommit(\n-            Long.parseLong(safeCommit.getUserData().get(SequenceNumbers.LOCAL_CHECKPOINT_KEY)));\n+        final long localCheckpointOfSafeCommit = Long.parseLong(safeCommit.getUserData().get(SequenceNumbers.LOCAL_CHECKPOINT_KEY));\n+        final long localCheckpointOfLastCommit = Long.parseLong(lastCommit.getUserData().get(SequenceNumbers.LOCAL_CHECKPOINT_KEY));\n+        softDeletesPolicy.setLocalCheckpointOfSafeCommit(localCheckpointOfSafeCommit);", "originalCommit": "1eb0d5399e72449ff10af0417221394048b838cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4bcceafc01ddbb745063fe0cfbea246079c5e64", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/engine/CombinedDeletionPolicy.java b/server/src/main/java/org/elasticsearch/index/engine/CombinedDeletionPolicy.java\nindex d8b524d5ff7..5fbf9e69b24 100644\n--- a/server/src/main/java/org/elasticsearch/index/engine/CombinedDeletionPolicy.java\n+++ b/server/src/main/java/org/elasticsearch/index/engine/CombinedDeletionPolicy.java\n\n@@ -123,9 +123,7 @@ public class CombinedDeletionPolicy extends IndexDeletionPolicy {\n         assert safeCommit.isDeleted() == false : \"The safe commit must not be deleted\";\n         assert lastCommit.isDeleted() == false : \"The last commit must not be deleted\";\n         final long localCheckpointOfSafeCommit = Long.parseLong(safeCommit.getUserData().get(SequenceNumbers.LOCAL_CHECKPOINT_KEY));\n-        final long localCheckpointOfLastCommit = Long.parseLong(lastCommit.getUserData().get(SequenceNumbers.LOCAL_CHECKPOINT_KEY));\n         softDeletesPolicy.setLocalCheckpointOfSafeCommit(localCheckpointOfSafeCommit);\n-        translogDeletionPolicy.setLocalCheckpointOfLastCommit(localCheckpointOfLastCommit);\n         translogDeletionPolicy.setLocalCheckpointOfSafeCommit(localCheckpointOfSafeCommit);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1MTc0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r375951745", "bodyText": "this log might still be useful?", "author": "ywelsch", "createdAt": "2020-02-06T16:44:49Z", "path": "server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java", "diffHunk": "@@ -458,23 +458,22 @@ public void skipTranslogRecovery() {\n     }\n \n     private void recoverFromTranslogInternal(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException {\n-        Translog.TranslogGeneration translogGeneration = translog.getGeneration();\n         final int opsRecovered;\n-        final long translogFileGen = Long.parseLong(lastCommittedSegmentInfos.getUserData().get(Translog.TRANSLOG_GENERATION_KEY));\n-        try (Translog.Snapshot snapshot = translog.newSnapshotFromGen(\n-            new Translog.TranslogGeneration(translog.getTranslogUUID(), translogFileGen), recoverUpToSeqNo)) {\n-            opsRecovered = translogRecoveryRunner.run(this, snapshot);\n-        } catch (Exception e) {\n-            throw new EngineException(shardId, \"failed to recover from translog\", e);\n+        final long localCheckpoint = getProcessedLocalCheckpoint();\n+        if (localCheckpoint < recoverUpToSeqNo) {\n+            try (Translog.Snapshot snapshot = translog.newSnapshot(localCheckpoint + 1, recoverUpToSeqNo)) {\n+                opsRecovered = translogRecoveryRunner.run(this, snapshot);\n+            } catch (Exception e) {\n+                throw new EngineException(shardId, \"failed to recover from translog\", e);\n+            }\n+        } else {\n+            opsRecovered = 0;\n         }\n         // flush if we recovered something or if we have references to older translogs\n         // note: if opsRecovered == 0 and we have older translogs it means they are corrupted or 0 length.\n         assert pendingTranslogRecovery.get() : \"translogRecovery is not pending but should be\";\n         pendingTranslogRecovery.set(false); // we are good - now we can commit\n         if (opsRecovered > 0) {\n-            logger.trace(\"flushing post recovery from translog. ops recovered [{}]. committed translog id [{}]. current id [{}]\",", "originalCommit": "1eb0d5399e72449ff10af0417221394048b838cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxNjAwNg==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r376416006", "bodyText": "restored in 2c0b257", "author": "dnhatn", "createdAt": "2020-02-07T14:24:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1MTc0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "2c0b2573dc8ee7aa21c418b0319dad3e276f1c8a", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java\nindex af066651322..9656b091c2c 100644\n--- a/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java\n+++ b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java\n\n@@ -474,6 +474,8 @@ public class InternalEngine extends Engine {\n         assert pendingTranslogRecovery.get() : \"translogRecovery is not pending but should be\";\n         pendingTranslogRecovery.set(false); // we are good - now we can commit\n         if (opsRecovered > 0) {\n+            logger.trace(\"flushing post recovery from translog: ops recovered [{}], current translog generation [{}]\",\n+                opsRecovered, translog.currentFileGeneration());\n             commitIndexWriter(indexWriter, translog);\n             refreshLastCommittedSegmentInfos();\n             refresh(\"translog_recovery\");\n"}}, {"oid": "6572ed443f37edbfd4e57c8425ace530c4ec4b5e", "url": "https://github.com/elastic/elasticsearch/commit/6572ed443f37edbfd4e57c8425ace530c4ec4b5e", "message": "Merge branch 'master' into seqno-tlog-policy", "committedDate": "2020-02-07T13:38:39Z", "type": "commit"}, {"oid": "c4bcceafc01ddbb745063fe0cfbea246079c5e64", "url": "https://github.com/elastic/elasticsearch/commit/c4bcceafc01ddbb745063fe0cfbea246079c5e64", "message": "Use local checkpoint of safe commit to calculate committed stats", "committedDate": "2020-02-07T14:19:44Z", "type": "commit"}, {"oid": "2c0b2573dc8ee7aa21c418b0319dad3e276f1c8a", "url": "https://github.com/elastic/elasticsearch/commit/2c0b2573dc8ee7aa21c418b0319dad3e276f1c8a", "message": "restore log", "committedDate": "2020-02-07T14:23:04Z", "type": "commit"}, {"oid": "5ea2cae112c15f1efd2ff13ddd22e2469e9762a3", "url": "https://github.com/elastic/elasticsearch/commit/5ea2cae112c15f1efd2ff13ddd22e2469e9762a3", "message": "fix test", "committedDate": "2020-02-07T16:07:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTExOTU4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r375119586", "bodyText": "Not sure about why number of uncommitted ops are relevant to trimming?", "author": "henningandersen", "createdAt": "2020-02-05T08:38:44Z", "path": "server/src/main/java/org/elasticsearch/index/engine/NoOpEngine.java", "diffHunk": "@@ -137,31 +138,26 @@ public void trimUnreferencedTranslogFiles() {\n         try (ReleasableLock lock = readLock.acquire()) {\n             ensureOpen();\n             final List<IndexCommit> commits = DirectoryReader.listCommits(store.directory());\n-            if (commits.size() == 1) {\n+            if (commits.size() == 1 &&\n+                translogStats.getUncommittedOperations() == 0 &&", "originalCommit": "fe6733791b37c5af4ca6ded83e2ebd0ae5576c19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTc1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r376605752", "bodyText": "Good catch. That is not needed. I removed it in 63c25e2.", "author": "dnhatn", "createdAt": "2020-02-07T21:01:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTExOTU4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c4bcceafc01ddbb745063fe0cfbea246079c5e64", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/engine/NoOpEngine.java b/server/src/main/java/org/elasticsearch/index/engine/NoOpEngine.java\nindex e17d2741446..041d6e2cd87 100644\n--- a/server/src/main/java/org/elasticsearch/index/engine/NoOpEngine.java\n+++ b/server/src/main/java/org/elasticsearch/index/engine/NoOpEngine.java\n\n@@ -150,7 +150,6 @@ public final class NoOpEngine extends ReadOnlyEngine {\n                 final long localCheckpoint = Long.parseLong(commitUserData.get(SequenceNumbers.LOCAL_CHECKPOINT_KEY));\n                 final TranslogDeletionPolicy translogDeletionPolicy = new TranslogDeletionPolicy();\n                 translogDeletionPolicy.setLocalCheckpointOfSafeCommit(localCheckpoint);\n-                translogDeletionPolicy.setLocalCheckpointOfLastCommit(localCheckpoint);\n                 try (Translog translog = new Translog(translogConfig, translogUuid, translogDeletionPolicy,\n                     engineConfig.getGlobalCheckpointSupplier(), engineConfig.getPrimaryTermSupplier(), seqNo -> {})) {\n                     translog.trimUnreferencedReaders();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ3MDMzOA==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r376470338", "bodyText": "I wonder why this change is necessary? I find it a bit counter intuitive to update that before sync'ing translog, but I am sure there is a good reason.", "author": "henningandersen", "createdAt": "2020-02-07T16:01:57Z", "path": "server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java", "diffHunk": "@@ -5664,8 +5647,8 @@ public void testRecoverFromLocalTranslog() throws Exception {\n                 for (Engine.Operation op : operations) {\n                     applyOperation(engine, op);\n                     if (randomBoolean()) {\n+                        globalCheckpoint.set(randomLongBetween(globalCheckpoint.get(), engine.getProcessedLocalCheckpoint()));", "originalCommit": "2c0b2573dc8ee7aa21c418b0319dad3e276f1c8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTg3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r376605879", "bodyText": "I've reverted this in 630da78.", "author": "dnhatn", "createdAt": "2020-02-07T21:02:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ3MDMzOA=="}], "type": "inlineReview", "revised_code": {"commit": "630da78ad629bf1a9fb7af78c9dcee77cb7c2b66", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java\nindex ad6fdc28bf9..c94b4967cb7 100644\n--- a/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java\n\n@@ -5647,8 +5652,8 @@ public class InternalEngineTests extends EngineTestCase {\n                 for (Engine.Operation op : operations) {\n                     applyOperation(engine, op);\n                     if (randomBoolean()) {\n-                        globalCheckpoint.set(randomLongBetween(globalCheckpoint.get(), engine.getProcessedLocalCheckpoint()));\n                         engine.syncTranslog();\n+                        globalCheckpoint.set(randomLongBetween(globalCheckpoint.get(), engine.getPersistedLocalCheckpoint()));\n                     }\n                     if (randomInt(100) < 10) {\n                         engine.refresh(\"test\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ3NDExMg==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r376474112", "bodyText": "I am guessing that the change in the next line is due to only keeping one generation now? In that case, this comment needs updating I think.", "author": "henningandersen", "createdAt": "2020-02-07T16:09:09Z", "path": "server/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java", "diffHunk": "@@ -416,7 +416,7 @@ public void testStressMaybeFlushOrRollTranslogGeneration() throws Exception {\n         final Settings settings;\n         if (flush) {\n             // size of the operation plus two generations of overhead.", "originalCommit": "2c0b2573dc8ee7aa21c418b0319dad3e276f1c8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzY2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r376613661", "bodyText": "fixed in 8c91dcf.", "author": "dnhatn", "createdAt": "2020-02-07T21:22:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ3NDExMg=="}], "type": "inlineReview", "revised_code": {"commit": "8c91dcfe43d55bef8c109885527cc7a3584f74a4", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java b/server/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java\nindex 73eb214a55c..bcec724a72d 100644\n--- a/server/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java\n+++ b/server/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java\n\n@@ -415,7 +415,7 @@ public class IndexShardIT extends ESSingleNodeTestCase {\n         final boolean flush = randomBoolean();\n         final Settings settings;\n         if (flush) {\n-            // size of the operation plus two generations of overhead.\n+            // size of the operation plus the overhead of one generation.\n             settings = Settings.builder().put(\"index.translog.flush_threshold_size\", \"125b\").build();\n         } else {\n             // size of the operation plus header and footer\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ3OTY0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r376479642", "bodyText": "Should we check prior to this that we have some operations to trim, except in the case where the last thing done was a flush?", "author": "henningandersen", "createdAt": "2020-02-07T16:19:35Z", "path": "server/src/test/java/org/elasticsearch/index/engine/NoOpEngineTests.java", "diffHunk": "@@ -168,49 +166,28 @@ public void testTrimUnreferencedTranslogFiles() throws Exception {\n         tracker.updateFromMaster(1L, Collections.singleton(allocationId.getId()), table);\n         tracker.activatePrimaryMode(SequenceNumbers.NO_OPS_PERFORMED);\n \n-        boolean softDeleteEnabled = engine.config().getIndexSettings().isSoftDeleteEnabled();\n         final int numDocs = scaledRandomIntBetween(10, 3000);\n         for (int i = 0; i < numDocs; i++) {\n             engine.index(indexForDoc(createParsedDoc(Integer.toString(i), null)));\n             tracker.updateLocalCheckpoint(allocationId.getId(), i);\n             if (rarely()) {\n                 engine.flush();\n             }\n+            if (randomBoolean()) {\n+                engine.rollTranslogGeneration();\n+            }\n         }\n+        // prevent translog from trimming so we can test trimUnreferencedFiles in NoOpEngine.\n+        final Translog.Snapshot snapshot = engine.getTranslog().newSnapshot();\n         engine.flush(true, true);\n-\n-        final String translogUuid = engine.getTranslog().getTranslogUUID();\n-        final long minFileGeneration = engine.getTranslog().getMinFileGeneration();\n-        final long currentFileGeneration = engine.getTranslog().currentFileGeneration();\n         engine.close();\n \n         final NoOpEngine noOpEngine = new NoOpEngine(noOpConfig(INDEX_SETTINGS, store, primaryTranslogDir, tracker));\n-        final Path translogPath = noOpEngine.config().getTranslogConfig().getTranslogPath();\n-\n-        final long lastCommitedTranslogGeneration;\n-        try (Engine.IndexCommitRef indexCommitRef = noOpEngine.acquireLastIndexCommit(false)) {\n-            Map<String, String> lastCommittedUserData = indexCommitRef.getIndexCommit().getUserData();\n-            lastCommitedTranslogGeneration = Long.parseLong(lastCommittedUserData.get(Translog.TRANSLOG_GENERATION_KEY));\n-            assertThat(lastCommitedTranslogGeneration, equalTo(currentFileGeneration));\n-        }\n-\n-        assertThat(Translog.readMinTranslogGeneration(translogPath, translogUuid), equalTo(minFileGeneration));\n-        assertThat(noOpEngine.getTranslogStats().estimatedNumberOfOperations(), equalTo(softDeleteEnabled ? 0 : numDocs));\n-        assertThat(noOpEngine.getTranslogStats().getUncommittedOperations(), equalTo(0));\n-\n         noOpEngine.trimUnreferencedTranslogFiles();", "originalCommit": "2c0b2573dc8ee7aa21c418b0319dad3e276f1c8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzU2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51905#discussion_r376613565", "bodyText": "++. Added in 02103b7.", "author": "dnhatn", "createdAt": "2020-02-07T21:22:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ3OTY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "02103b77d611ab3fc10d0d90299f28c7508b9cd8", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/index/engine/NoOpEngineTests.java b/server/src/test/java/org/elasticsearch/index/engine/NoOpEngineTests.java\nindex 58f9f248ed3..b1eb9e6ded5 100644\n--- a/server/src/test/java/org/elasticsearch/index/engine/NoOpEngineTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/engine/NoOpEngineTests.java\n\n@@ -167,10 +167,13 @@ public class NoOpEngineTests extends EngineTestCase {\n         tracker.activatePrimaryMode(SequenceNumbers.NO_OPS_PERFORMED);\n \n         final int numDocs = scaledRandomIntBetween(10, 3000);\n+        int totalTranslogOps = 0;\n         for (int i = 0; i < numDocs; i++) {\n+            totalTranslogOps++;\n             engine.index(indexForDoc(createParsedDoc(Integer.toString(i), null)));\n             tracker.updateLocalCheckpoint(allocationId.getId(), i);\n             if (rarely()) {\n+                totalTranslogOps = 0;\n                 engine.flush();\n             }\n             if (randomBoolean()) {\n"}}, {"oid": "6baaf900c63314c6fa05bec4e8997bda62436c88", "url": "https://github.com/elastic/elasticsearch/commit/6baaf900c63314c6fa05bec4e8997bda62436c88", "message": "Merge branch 'master' into seqno-tlog-policy", "committedDate": "2020-02-07T20:04:56Z", "type": "commit"}, {"oid": "63c25e2adc5802bd1bc128e3204b844e6a83a7bf", "url": "https://github.com/elastic/elasticsearch/commit/63c25e2adc5802bd1bc128e3204b844e6a83a7bf", "message": "remove uncommitted translog", "committedDate": "2020-02-07T20:06:26Z", "type": "commit"}, {"oid": "630da78ad629bf1a9fb7af78c9dcee77cb7c2b66", "url": "https://github.com/elastic/elasticsearch/commit/630da78ad629bf1a9fb7af78c9dcee77cb7c2b66", "message": "revert checkpoint sync", "committedDate": "2020-02-07T20:51:22Z", "type": "commit"}, {"oid": "02103b77d611ab3fc10d0d90299f28c7508b9cd8", "url": "https://github.com/elastic/elasticsearch/commit/02103b77d611ab3fc10d0d90299f28c7508b9cd8", "message": "assert translog ops before trimming", "committedDate": "2020-02-07T21:01:02Z", "type": "commit"}, {"oid": "8c91dcfe43d55bef8c109885527cc7a3584f74a4", "url": "https://github.com/elastic/elasticsearch/commit/8c91dcfe43d55bef8c109885527cc7a3584f74a4", "message": "comment", "committedDate": "2020-02-07T21:21:35Z", "type": "commit"}]}