{"pr_number": 56372, "pr_title": "Clean up DocValuesIndexFieldData", "pr_createdAt": "2020-05-07T17:38:56Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56372", "timeline": [{"oid": "e2b5bda60a49b682c3d76a31a1caefb5bebca849", "url": "https://github.com/elastic/elasticsearch/commit/e2b5bda60a49b682c3d76a31a1caefb5bebca849", "message": "extract SortedNumericDVIndexFieldData builder", "committedDate": "2020-05-06T21:01:47Z", "type": "commit"}, {"oid": "d4c76427c2a7f4749ad7bace34828aac05468069", "url": "https://github.com/elastic/elasticsearch/commit/d4c76427c2a7f4749ad7bace34828aac05468069", "message": "Inline the remaining uses of DocValuesIndexFieldData.Builder", "committedDate": "2020-05-06T21:53:03Z", "type": "commit"}, {"oid": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a", "url": "https://github.com/elastic/elasticsearch/commit/b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a", "message": "Remove DocValuesIndexFieldData", "committedDate": "2020-05-07T17:20:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MDM4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421680382", "bodyText": "Is numericType required? Maybe it can be final a ctor arg?", "author": "nik9000", "createdAt": "2020-05-07T17:42:29Z", "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java", "diffHunk": "@@ -53,21 +59,58 @@\n import java.io.IOException;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.Objects;\n import java.util.function.LongUnaryOperator;\n \n /**\n  * FieldData backed by {@link LeafReader#getSortedNumericDocValues(String)}\n  * @see DocValuesType#SORTED_NUMERIC\n  */\n-public class SortedNumericDVIndexFieldData extends DocValuesIndexFieldData implements IndexNumericFieldData {\n-    private final NumericType numericType;\n+public class SortedNumericDVIndexFieldData implements IndexNumericFieldData {\n+    public static class Builder implements IndexFieldData.Builder {\n+\n+        private NumericType numericType;\n+        public Builder numericType(NumericType type) {", "originalCommit": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MDkxMw==", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421680913", "bodyText": "I wonder if all of these sorts of args can be ctor args.", "author": "nik9000", "createdAt": "2020-05-07T17:43:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MDM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcxMDE3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421710171", "bodyText": "Yeah, I think they can.  I'll take a pass at it.", "author": "not-napoleon", "createdAt": "2020-05-07T18:32:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MDM4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "af6c4ef9cd033c197c7396ce878467fae775c4f4", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java b/server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericIndexFieldData.java\nsimilarity index 97%\nrename from server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java\nrename to server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericIndexFieldData.java\nindex 022912d830c..c23a01992ca 100644\n--- a/server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java\n+++ b/server/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericIndexFieldData.java\n\n@@ -66,13 +66,13 @@ import java.util.function.LongUnaryOperator;\n  * FieldData backed by {@link LeafReader#getSortedNumericDocValues(String)}\n  * @see DocValuesType#SORTED_NUMERIC\n  */\n-public class SortedNumericDVIndexFieldData implements IndexNumericFieldData {\n+public class SortedNumericIndexFieldData implements IndexNumericFieldData {\n     public static class Builder implements IndexFieldData.Builder {\n \n-        private NumericType numericType;\n-        public Builder numericType(NumericType type) {\n-            this.numericType = type;\n-            return this;\n+        private final NumericType numericType;\n+\n+        public Builder(NumericType numericType) {\n+            this.numericType = numericType;\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4MTY1OA==", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421681658", "bodyText": "I see what you mean about copying method around and maybe making an abstract base class at some point. But the copying is fine by me as an intermediate step to untwisting all of this.", "author": "nik9000", "createdAt": "2020-05-07T17:44:38Z", "path": "x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/query/VectorDVIndexFieldData.java", "diffHunk": "@@ -26,10 +25,29 @@\n import org.elasticsearch.search.sort.SortOrder;\n \n \n-public class VectorDVIndexFieldData extends DocValuesIndexFieldData implements IndexFieldData<VectorDVLeafFieldData> {\n+public class VectorDVIndexFieldData implements IndexFieldData<VectorDVLeafFieldData> {\n+\n+    protected final Index index;\n+    protected final String fieldName;\n \n     public VectorDVIndexFieldData(Index index, String fieldName) {\n-        super(index, fieldName);\n+        this.index = index;\n+        this.fieldName = fieldName;\n+    }\n+\n+    @Override\n+    public final String getFieldName() {\n+        return fieldName;\n+    }\n+\n+    @Override\n+    public final void clear() {\n+        // can't do", "originalCommit": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "af6c4ef9cd033c197c7396ce878467fae775c4f4", "chunk": "diff --git a/x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/query/VectorDVIndexFieldData.java b/x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/query/VectorIndexFieldData.java\nsimilarity index 91%\nrename from x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/query/VectorDVIndexFieldData.java\nrename to x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/query/VectorIndexFieldData.java\nindex 7877702c58a..92589fa7f18 100644\n--- a/x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/query/VectorDVIndexFieldData.java\n+++ b/x-pack/plugin/vectors/src/main/java/org/elasticsearch/xpack/vectors/query/VectorIndexFieldData.java\n\n@@ -25,12 +25,12 @@ import org.elasticsearch.search.sort.BucketedSort;\n import org.elasticsearch.search.sort.SortOrder;\n \n \n-public class VectorDVIndexFieldData implements IndexFieldData<VectorDVLeafFieldData> {\n+public class VectorIndexFieldData implements IndexFieldData<VectorDVLeafFieldData> {\n \n     protected final Index index;\n     protected final String fieldName;\n \n-    public VectorDVIndexFieldData(Index index, String fieldName) {\n+    public VectorIndexFieldData(Index index, String fieldName) {\n         this.index = index;\n         this.fieldName = fieldName;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5MTc2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421691763", "bodyText": "What would you think about removing 'DV' from all of these class names? Now that they don't extend DocValuesIndexFieldData, I think it's a bit confusing/ unclear what 'DV' refers to.", "author": "jtibshirani", "createdAt": "2020-05-07T18:01:14Z", "path": "server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java", "diffHunk": "@@ -41,10 +41,29 @@\n import org.elasticsearch.search.sort.BucketedSort;\n import org.elasticsearch.search.sort.SortOrder;\n \n-public abstract class AbstractLatLonPointDVIndexFieldData extends DocValuesIndexFieldData\n-    implements IndexGeoPointFieldData {\n+public abstract class AbstractLatLonPointDVIndexFieldData implements IndexGeoPointFieldData {", "originalCommit": "b2cf8d56739a7f4c9e34aa31bf2b14c18865d10a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwOTcyMw==", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r421709723", "bodyText": "Yeah, that seems reasonable, will do.", "author": "not-napoleon", "createdAt": "2020-05-07T18:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5MTc2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "af6c4ef9cd033c197c7396ce878467fae775c4f4", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java b/server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointIndexFieldData.java\nsimilarity index 91%\nrename from server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java\nrename to server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointIndexFieldData.java\nindex adf127bacb5..a8eaef2c57d 100644\n--- a/server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java\n+++ b/server/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointIndexFieldData.java\n\n@@ -41,12 +41,12 @@ import org.elasticsearch.search.MultiValueMode;\n import org.elasticsearch.search.sort.BucketedSort;\n import org.elasticsearch.search.sort.SortOrder;\n \n-public abstract class AbstractLatLonPointDVIndexFieldData implements IndexGeoPointFieldData {\n+public abstract class AbstractLatLonPointIndexFieldData implements IndexGeoPointFieldData {\n \n     protected final Index index;\n     protected final String fieldName;\n \n-    AbstractLatLonPointDVIndexFieldData(Index index, String fieldName) {\n+    AbstractLatLonPointIndexFieldData(Index index, String fieldName) {\n         this.index = index;\n         this.fieldName = fieldName;\n     }\n"}}, {"oid": "af6c4ef9cd033c197c7396ce878467fae775c4f4", "url": "https://github.com/elastic/elasticsearch/commit/af6c4ef9cd033c197c7396ce878467fae775c4f4", "message": "Response to PR feedback", "committedDate": "2020-05-07T21:20:24Z", "type": "commit"}, {"oid": "2f12e2e36a5a588755d9b9e9b61416e5e9510907", "url": "https://github.com/elastic/elasticsearch/commit/2f12e2e36a5a588755d9b9e9b61416e5e9510907", "message": "Merge branch 'master' into vs-refactor-field-cleanup", "committedDate": "2020-05-08T13:43:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5MTU2MA==", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r422191560", "bodyText": "Could the builder return a IndexNumericFieldData?", "author": "nik9000", "createdAt": "2020-05-08T14:56:33Z", "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java", "diffHunk": "@@ -289,8 +289,9 @@ public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower\n                 @Override\n                 public IndexFieldData<?> build(IndexSettings indexSettings, MappedFieldType fieldType, IndexFieldDataCache cache,\n                         CircuitBreakerService breakerService, MapperService mapperService) {\n-                    final IndexNumericFieldData scaledValues = (IndexNumericFieldData) new DocValuesIndexFieldData.Builder()\n-                            .numericType(IndexNumericFieldData.NumericType.LONG)\n+                    final IndexNumericFieldData scaledValues = (IndexNumericFieldData) new SortedNumericIndexFieldData.Builder(", "originalCommit": "2f12e2e36a5a588755d9b9e9b61416e5e9510907", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5MTg2OA==", "url": "https://github.com/elastic/elasticsearch/pull/56372#discussion_r422191868", "bodyText": "Like, not all the builders can, but I'm fairly sure the SortedNumericIndexFieldData builder will only ever build numeric field data.", "author": "nik9000", "createdAt": "2020-05-08T14:57:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5MTU2MA=="}], "type": "inlineReview", "revised_code": {"commit": "2bf349db3b294cf3de0e606fa37a4b71be1b0fa4", "chunk": "diff --git a/modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java b/modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java\nindex 833d12671d8..086487c3a22 100644\n--- a/modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java\n+++ b/modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java\n\n@@ -289,7 +289,7 @@ public class ScaledFloatFieldMapper extends FieldMapper {\n                 @Override\n                 public IndexFieldData<?> build(IndexSettings indexSettings, MappedFieldType fieldType, IndexFieldDataCache cache,\n                         CircuitBreakerService breakerService, MapperService mapperService) {\n-                    final IndexNumericFieldData scaledValues = (IndexNumericFieldData) new SortedNumericIndexFieldData.Builder(\n+                    final IndexNumericFieldData scaledValues = new SortedNumericIndexFieldData.Builder(\n                         IndexNumericFieldData.NumericType.LONG\n                     )\n                             .build(indexSettings, fieldType, cache, breakerService, mapperService);\n"}}, {"oid": "2bf349db3b294cf3de0e606fa37a4b71be1b0fa4", "url": "https://github.com/elastic/elasticsearch/commit/2bf349db3b294cf3de0e606fa37a4b71be1b0fa4", "message": "Response to PR feedback", "committedDate": "2020-05-08T17:20:05Z", "type": "commit"}, {"oid": "38c21ccb0dada08175b9acbaa85d71888863e14f", "url": "https://github.com/elastic/elasticsearch/commit/38c21ccb0dada08175b9acbaa85d71888863e14f", "message": "Merge branch 'master' into vs-refactor-field-cleanup\n\n Conflicts:\n\tserver/src/main/java/org/elasticsearch/index/mapper/GeoPointFieldMapper.java", "committedDate": "2020-05-12T17:11:52Z", "type": "commit"}, {"oid": "fe1f527338580003cf2174872295ae221332b4b6", "url": "https://github.com/elastic/elasticsearch/commit/fe1f527338580003cf2174872295ae221332b4b6", "message": "Merge branch 'master' into vs-refactor-field-cleanup", "committedDate": "2020-05-13T13:15:43Z", "type": "commit"}]}