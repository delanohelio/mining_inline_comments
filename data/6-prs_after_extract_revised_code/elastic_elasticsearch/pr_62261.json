{"pr_number": 62261, "pr_title": "Fix privilege requirement for CCS with Point In Time reader", "pr_createdAt": "2020-09-11T01:36:47Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62261", "timeline": [{"oid": "ca75899fc9153992137340067510daa3922a1804", "url": "https://github.com/elastic/elasticsearch/commit/ca75899fc9153992137340067510daa3922a1804", "message": "Fix permission for CCS with PointInTime", "committedDate": "2020-09-11T01:32:58Z", "type": "commit"}, {"oid": "c0e2ace69f0c94ccfa67820eb2f8b377f6d23694", "url": "https://github.com/elastic/elasticsearch/commit/c0e2ace69f0c94ccfa67820eb2f8b377f6d23694", "message": "Merge remote-tracking branch 'origin/master' into pit-ccs-permission", "committedDate": "2020-09-11T01:58:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTc2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/62261#discussion_r487895766", "bodyText": "I would also exercise the condition that remote indices are wildcards (it could be a random)", "author": "albertzaharovits", "createdAt": "2020-09-14T13:05:07Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "diffHunk": "@@ -479,6 +484,46 @@ public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOExcep\n         verifyNoMoreInteractions(auditTrail);\n     }\n \n+    public void testUserWithNoRolesOpenPointInTimeWithRemoteIndices() {\n+        final boolean hasLocalIndices = randomBoolean();\n+        final String[] indices = new String[]{\n+            hasLocalIndices ? randomAlphaOfLength(5) : \"other_cluster:\" + randomAlphaOfLength(5),", "originalCommit": "c0e2ace69f0c94ccfa67820eb2f8b377f6d23694", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c2f20cf39aac30f504990482f47e5470ed8435d", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java\nindex 03789564047..26ae3f5ce3f 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java\n\n@@ -519,7 +519,7 @@ public class AuthorizationServiceTests extends ESTestCase {\n         mockEmptyMetadata();\n         final String requestId = AuditUtil.getOrGenerateRequestId(threadContext);\n         authorize(authentication, ClosePointInTimeAction.NAME, closePointInTimeRequest);\n-        verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(ClosePointInTimeAction.NAME), eq(closePointInTimeRequest),\n+        verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(indices:data/read/close_point_in_time), eq(closePointInTimeRequest),\n                                          authzInfoRoles(Role.EMPTY.names()));\n         verifyNoMoreInteractions(auditTrail);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTk4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62261#discussion_r487895989", "bodyText": "set this to both values in a for-each.", "author": "albertzaharovits", "createdAt": "2020-09-14T13:05:31Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "diffHunk": "@@ -479,6 +484,46 @@ public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOExcep\n         verifyNoMoreInteractions(auditTrail);\n     }\n \n+    public void testUserWithNoRolesOpenPointInTimeWithRemoteIndices() {\n+        final boolean hasLocalIndices = randomBoolean();", "originalCommit": "c0e2ace69f0c94ccfa67820eb2f8b377f6d23694", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c2f20cf39aac30f504990482f47e5470ed8435d", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java\nindex 03789564047..26ae3f5ce3f 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java\n\n@@ -519,7 +519,7 @@ public class AuthorizationServiceTests extends ESTestCase {\n         mockEmptyMetadata();\n         final String requestId = AuditUtil.getOrGenerateRequestId(threadContext);\n         authorize(authentication, ClosePointInTimeAction.NAME, closePointInTimeRequest);\n-        verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(ClosePointInTimeAction.NAME), eq(closePointInTimeRequest),\n+        verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(indices:data/read/close_point_in_time), eq(closePointInTimeRequest),\n                                          authzInfoRoles(Role.EMPTY.names()));\n         verifyNoMoreInteractions(auditTrail);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkwMTc0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62261#discussion_r487901743", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(ClosePointInTimeAction.NAME), eq(closePointInTimeRequest),\n          \n          \n            \n                    verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(indices:data/read/close_point_in_time), eq(closePointInTimeRequest),\n          \n      \n    \n    \n  \n\nIf you wanna be consistent with the previous test.", "author": "albertzaharovits", "createdAt": "2020-09-14T13:14:07Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java", "diffHunk": "@@ -479,6 +484,46 @@ public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOExcep\n         verifyNoMoreInteractions(auditTrail);\n     }\n \n+    public void testUserWithNoRolesOpenPointInTimeWithRemoteIndices() {\n+        final boolean hasLocalIndices = randomBoolean();\n+        final String[] indices = new String[]{\n+            hasLocalIndices ? randomAlphaOfLength(5) : \"other_cluster:\" + randomAlphaOfLength(5),\n+            \"other_cluster:\" + randomAlphaOfLength(5)\n+        };\n+        final OpenPointInTimeRequest openPointInTimeRequest = new OpenPointInTimeRequest(\n+            indices, OpenPointInTimeRequest.DEFAULT_INDICES_OPTIONS, TimeValue.timeValueMinutes(randomLongBetween(1, 10)),\n+            randomAlphaOfLength(5), randomAlphaOfLength(5)\n+        );\n+        final Authentication authentication = createAuthentication(new User(\"test user\"));\n+        mockEmptyMetadata();\n+        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext);\n+        if (hasLocalIndices) {\n+            assertThrowsAuthorizationException(\n+                () -> authorize(authentication, OpenPointInTimeAction.NAME, openPointInTimeRequest),\n+                \"indices:data/read/open_point_in_time\", \"test user\"\n+            );\n+            verify(auditTrail).accessDenied(eq(requestId), eq(authentication),\n+                                            eq(\"indices:data/read/open_point_in_time\"), eq(openPointInTimeRequest),\n+                                            authzInfoRoles(Role.EMPTY.names()));\n+        } else {\n+            authorize(authentication, OpenPointInTimeAction.NAME, openPointInTimeRequest);\n+            verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(OpenPointInTimeAction.NAME), eq(openPointInTimeRequest),\n+                                             authzInfoRoles(Role.EMPTY.names()));\n+        }\n+        verifyNoMoreInteractions(auditTrail);\n+    }\n+\n+    public void testUserWithNoRolesCanClosePointInTime() {\n+        final ClosePointInTimeRequest closePointInTimeRequest = new ClosePointInTimeRequest(randomAlphaOfLength(8));\n+        final Authentication authentication = createAuthentication(new User(\"test user\"));\n+        mockEmptyMetadata();\n+        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext);\n+        authorize(authentication, ClosePointInTimeAction.NAME, closePointInTimeRequest);\n+        verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(ClosePointInTimeAction.NAME), eq(closePointInTimeRequest),", "originalCommit": "c0e2ace69f0c94ccfa67820eb2f8b377f6d23694", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c2f20cf39aac30f504990482f47e5470ed8435d", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java\nindex 03789564047..26ae3f5ce3f 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java\n\n@@ -519,7 +519,7 @@ public class AuthorizationServiceTests extends ESTestCase {\n         mockEmptyMetadata();\n         final String requestId = AuditUtil.getOrGenerateRequestId(threadContext);\n         authorize(authentication, ClosePointInTimeAction.NAME, closePointInTimeRequest);\n-        verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(ClosePointInTimeAction.NAME), eq(closePointInTimeRequest),\n+        verify(auditTrail).accessGranted(eq(requestId), eq(authentication), eq(indices:data/read/close_point_in_time), eq(closePointInTimeRequest),\n                                          authzInfoRoles(Role.EMPTY.names()));\n         verifyNoMoreInteractions(auditTrail);\n     }\n"}}, {"oid": "494863bf4a4423dda3e5ce5ff408b3feb2103f74", "url": "https://github.com/elastic/elasticsearch/commit/494863bf4a4423dda3e5ce5ff408b3feb2103f74", "message": "Merge remote-tracking branch 'origin/master' into pit-ccs-permission", "committedDate": "2020-09-18T02:17:48Z", "type": "commit"}, {"oid": "0c2f20cf39aac30f504990482f47e5470ed8435d", "url": "https://github.com/elastic/elasticsearch/commit/0c2f20cf39aac30f504990482f47e5470ed8435d", "message": "Apply suggestions from code review\n\nCo-authored-by: Albert Zaharovits <albert.zaharovits@gmail.com>", "committedDate": "2020-09-18T02:33:47Z", "type": "commit"}, {"oid": "0e056c3a8c6aa1d9c7e5c1988197b6454c190923", "url": "https://github.com/elastic/elasticsearch/commit/0e056c3a8c6aa1d9c7e5c1988197b6454c190923", "message": "Merge branch 'pit-ccs-permission' of github.com:ywangd/elasticsearch into pit-ccs-permission", "committedDate": "2020-09-18T02:34:03Z", "type": "commit"}, {"oid": "635619c7d0970a588b7d5fb2a7a653076c05be1d", "url": "https://github.com/elastic/elasticsearch/commit/635619c7d0970a588b7d5fb2a7a653076c05be1d", "message": "address feedback", "committedDate": "2020-09-18T02:43:42Z", "type": "commit"}, {"oid": "67a03a69a2e0e8eaf0260c98145b2ff4d4eac0fa", "url": "https://github.com/elastic/elasticsearch/commit/67a03a69a2e0e8eaf0260c98145b2ff4d4eac0fa", "message": "Fix test", "committedDate": "2020-09-18T03:10:32Z", "type": "commit"}]}