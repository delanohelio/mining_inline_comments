{"pr_number": 58630, "pr_title": "Fix Snapshots Capturing Incomplete Datastreams", "pr_createdAt": "2020-06-27T06:51:09Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58630", "timeline": [{"oid": "fd8d28af36a6d549c5e24135c04d2441092392e7", "url": "https://github.com/elastic/elasticsearch/commit/fd8d28af36a6d549c5e24135c04d2441092392e7", "message": "Fix Snapshots Capturing Incomplete Datastreams\n\nOnly snapshot datastreams that are recorded in `SnapshotInfo` and clean those\nthat aren't from the snapshotted metadata.\nDo not restore all datastreams by default when restoring global metadata, use the same\nmechanics used for indices here.\n\nCloses #58544", "committedDate": "2020-06-27T06:47:50Z", "type": "commit"}, {"oid": "9200324c16facaf62149d63c5619b31c79453a9d", "url": "https://github.com/elastic/elasticsearch/commit/9200324c16facaf62149d63c5619b31c79453a9d", "message": "Merge remote-tracking branch 'elastic/master' into 58544", "committedDate": "2020-06-27T07:04:41Z", "type": "commit"}, {"oid": "b2ab02c2e564884ff2ba0582e5c6f22ae7efa64e", "url": "https://github.com/elastic/elasticsearch/commit/b2ab02c2e564884ff2ba0582e5c6f22ae7efa64e", "message": "cleaner loop", "committedDate": "2020-06-27T07:30:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTE0MA==", "url": "https://github.com/elastic/elasticsearch/pull/58630#discussion_r446501140", "bodyText": "We gotta only restore those data streams actually matched by the restore request, even if we include global state.\nWe really shouldn't be mutating the deserialization result here. Come to think of it, we also shouldn't be deserializing the data streams to a mutable map, that invites all kinds of weird bugs. I'll open a PR to fix that.", "author": "original-brownbear", "createdAt": "2020-06-27T08:27:21Z", "path": "server/src/main/java/org/elasticsearch/snapshots/RestoreService.java", "diffHunk": "@@ -215,9 +215,12 @@ public void restoreSnapshot(final RestoreSnapshotRequest request, final ActionLi\n                     dataStreams = new HashMap<>();\n                 } else {\n                     globalMetadata = repository.getSnapshotGlobalMetadata(snapshotId);\n-                    dataStreams = globalMetadata.dataStreams();\n-                    if (request.includeGlobalState() == false) {\n-                        dataStreams.keySet().retainAll(requestedDataStreams);\n+                    final Map<String, DataStream> dataStreamsInSnapshot = globalMetadata.dataStreams();", "originalCommit": "b2ab02c2e564884ff2ba0582e5c6f22ae7efa64e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0NzU4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/58630#discussion_r446847589", "bodyText": "Come to think of it, we also shouldn't be deserializing the data streams to a mutable map, that invites all kinds of weird bugs.\n\nI don't fully understand. Do you mean that the DataStream instances also need to be copied/cloned? So that the deserialization result cannot be altered at all?", "author": "martijnvg", "createdAt": "2020-06-29T08:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTE0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MDU2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/58630#discussion_r446850561", "bodyText": "Aren't the DataStream instances immutable? If they aren't already I think we should make them immutable.", "author": "original-brownbear", "createdAt": "2020-06-29T08:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTE0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1Mzk2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58630#discussion_r446853966", "bodyText": "In practice they are (all operations that modify a data stream create a new instance), however in order to make it stricter we should wrap the indices list always with Collections.unmodifiableList(...).", "author": "martijnvg", "createdAt": "2020-06-29T08:23:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTE0MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTIxMw==", "url": "https://github.com/elastic/elasticsearch/pull/58630#discussion_r446501213", "bodyText": "Just like for indices we should respect the data streams constraints given by the request and not simply always snapshot all data-streams when doing a global snapshot.", "author": "original-brownbear", "createdAt": "2020-06-27T08:28:11Z", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -230,13 +230,8 @@ public ClusterState execute(ClusterState currentState) {\n                 List<String> indices = Arrays.asList(indexNameExpressionResolver.concreteIndexNames(currentState,\n                     request.indicesOptions(), true, request.indices()));\n \n-                Map<String, DataStream> allDataStreams = currentState.metadata().dataStreams();\n-                List<String> dataStreams;\n-                if (request.includeGlobalState()) {\n-                    dataStreams = new ArrayList<>(allDataStreams.keySet());\n-                } else {\n-                    dataStreams = indexNameExpressionResolver.dataStreamNames(currentState, request.indicesOptions(), request.indices());\n-                }\n+                final List<String> dataStreams =", "originalCommit": "b2ab02c2e564884ff2ba0582e5c6f22ae7efa64e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTQzNg==", "url": "https://github.com/elastic/elasticsearch/pull/58630#discussion_r446501436", "bodyText": "This change is a little ugly because now we filter data streams that aren't part of the snapshot from metadata but not indices. In fact, for indices we could (and probably should) do the same as the index metadata for indices that aren't recorded in SnapshotInfo is not touched by restores anyway and just pointless bytes.\nFor data streams we absolutely have to clean up the metadata though since when writing SnapshotInfo, we use the metadata contents to determine what data streams go into SnapshotInfo.\nIf we don't clean this up here, then data streams not initially request for snapshotting will be part of the snapshot for every snapshot that includes global metadata.", "author": "original-brownbear", "createdAt": "2020-06-27T08:31:08Z", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -354,9 +349,10 @@ private static ShardGenerations buildGenerations(SnapshotsInProgress.Entry snaps\n     }\n \n     private static Metadata metadataForSnapshot(SnapshotsInProgress.Entry snapshot, Metadata metadata) {\n+        final Metadata.Builder builder;", "originalCommit": "b2ab02c2e564884ff2ba0582e5c6f22ae7efa64e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MjE3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/58630#discussion_r446852171", "bodyText": "I don't see another way around this too. Although not a super clean change, but it is needed.", "author": "martijnvg", "createdAt": "2020-06-29T08:20:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTQzNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "d4ca754c83d9aed635b70f0e80ab1a27ecf2b77d", "url": "https://github.com/elastic/elasticsearch/commit/d4ca754c83d9aed635b70f0e80ab1a27ecf2b77d", "message": "shorter", "committedDate": "2020-06-27T08:33:53Z", "type": "commit"}]}