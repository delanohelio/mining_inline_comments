{"pr_number": 66179, "pr_title": "Show -Dlicense.key value in test repro info", "pr_createdAt": "2020-12-10T15:53:21Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66179", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU2ODU4OA==", "url": "https://github.com/elastic/elasticsearch/pull/66179#discussion_r540568588", "bodyText": "This line seems to be duplicated?", "author": "rjernst", "createdAt": "2020-12-10T23:10:20Z", "path": "test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java", "diffHunk": "@@ -181,10 +182,32 @@ private ReproduceErrorMessageBuilder appendESProperties() {\n             appendOpt(\"tests.timezone\", TimeZone.getDefault().getID());\n             appendOpt(\"tests.distribution\", System.getProperty(\"tests.distribution\"));\n             appendOpt(\"runtime.java\", Integer.toString(JavaVersion.current().getVersion().get(0)));\n+            appendOpt(\"runtime.java\", Integer.toString(JavaVersion.current().getVersion().get(0)));", "originalCommit": "f72743165870a2eda2069e981242436baa0a9bb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE2MjUxNg==", "url": "https://github.com/elastic/elasticsearch/pull/66179#discussion_r541162516", "bodyText": "fixed", "author": "breskeby", "createdAt": "2020-12-11T18:59:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU2ODU4OA=="}], "type": "inlineReview", "revised_code": {"commit": "7ad4e9451f3984a44a61d2a38824702e89583ccb", "chunk": "diff --git a/test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java b/test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java\nindex feff40e972d..862526cadd7 100644\n--- a/test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java\n+++ b/test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java\n\n@@ -183,31 +181,11 @@ public class ReproduceInfoPrinter extends RunListener {\n             appendOpt(\"tests.distribution\", System.getProperty(\"tests.distribution\"));\n             appendOpt(\"runtime.java\", Integer.toString(JavaVersion.current().getVersion().get(0)));\n             appendOpt(\"runtime.java\", Integer.toString(JavaVersion.current().getVersion().get(0)));\n-            appendOpt(\"license.key\", relativePath(System.getProperty(\"licence.key\")));\n+            appendOpt(\"license.key\", System.getProperty(\"licence.key\"));\n             appendOpt(ESTestCase.FIPS_SYSPROP, System.getProperty(ESTestCase.FIPS_SYSPROP));\n             return this;\n         }\n \n-        private String relativePath(String pathProperty) {\n-            if(pathProperty == null) {\n-                return null;\n-            }\n-            Path path = PathUtils.get(pathProperty);\n-            if(path.isAbsolute()) {\n-                // try to resolve workspace root from Jenksin WORKSPACE env variable\n-                String workspace = System.getenv(\"WORKSPACE\");\n-                if(workspace == null) {\n-                    // fallback to resolve workspace root from teamcity checkout dir\n-                    workspace = System.getProperty(\"teamcity.build.workingDir\");\n-                }\n-                if(workspace != null) {\n-                    // resolve path relative to workspace root\n-                    return PathUtils.get(workspace).relativize(path).toString();\n-                }\n-            }\n-            return pathProperty;\n-        }\n-\n         public ReproduceErrorMessageBuilder appendClientYamlSuiteProperties() {\n             return appendProperties(REST_TESTS_SUITE, REST_TESTS_BLACKLIST);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MDc5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66179#discussion_r540570792", "bodyText": "Is this necessary once the fix is made in xpack to use Gradle's file resolution to get the path relative to the root project? With that change, and using a relative path in CI, shouldn't the reproduction line should just work for devs copying it from CI to their machines?", "author": "rjernst", "createdAt": "2020-12-10T23:15:14Z", "path": "test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java", "diffHunk": "@@ -181,10 +182,32 @@ private ReproduceErrorMessageBuilder appendESProperties() {\n             appendOpt(\"tests.timezone\", TimeZone.getDefault().getID());\n             appendOpt(\"tests.distribution\", System.getProperty(\"tests.distribution\"));\n             appendOpt(\"runtime.java\", Integer.toString(JavaVersion.current().getVersion().get(0)));\n+            appendOpt(\"runtime.java\", Integer.toString(JavaVersion.current().getVersion().get(0)));\n+            appendOpt(\"license.key\", relativePath(System.getProperty(\"licence.key\")));\n             appendOpt(ESTestCase.FIPS_SYSPROP, System.getProperty(ESTestCase.FIPS_SYSPROP));\n             return this;\n         }\n \n+        private String relativePath(String pathProperty) {", "originalCommit": "f72743165870a2eda2069e981242436baa0a9bb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MjM3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66179#discussion_r540572377", "bodyText": "This also works with having an absolute path passed in the commandline (e.g.on ci)", "author": "breskeby", "createdAt": "2020-12-10T23:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MDc5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MzAwMg==", "url": "https://github.com/elastic/elasticsearch/pull/66179#discussion_r540573002", "bodyText": "But it will not required if we ensure we always pass a relative path here only", "author": "breskeby", "createdAt": "2020-12-10T23:20:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MDc5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MjcxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66179#discussion_r540582711", "bodyText": "I'm just wondering if is necessary at all. It is specifically for CI. If a developer passes an absolute path, it will still work. We just need to ensure we pass a relative path in CI.", "author": "rjernst", "createdAt": "2020-12-10T23:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MDc5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1NzQ1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/66179#discussion_r541157455", "bodyText": "in that case I can remove this", "author": "breskeby", "createdAt": "2020-12-11T18:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MDc5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE2MjYxMA==", "url": "https://github.com/elastic/elasticsearch/pull/66179#discussion_r541162610", "bodyText": "done", "author": "breskeby", "createdAt": "2020-12-11T18:59:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MDc5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7ad4e9451f3984a44a61d2a38824702e89583ccb", "chunk": "diff --git a/test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java b/test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java\nindex feff40e972d..862526cadd7 100644\n--- a/test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java\n+++ b/test/framework/src/main/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java\n\n@@ -183,31 +181,11 @@ public class ReproduceInfoPrinter extends RunListener {\n             appendOpt(\"tests.distribution\", System.getProperty(\"tests.distribution\"));\n             appendOpt(\"runtime.java\", Integer.toString(JavaVersion.current().getVersion().get(0)));\n             appendOpt(\"runtime.java\", Integer.toString(JavaVersion.current().getVersion().get(0)));\n-            appendOpt(\"license.key\", relativePath(System.getProperty(\"licence.key\")));\n+            appendOpt(\"license.key\", System.getProperty(\"licence.key\"));\n             appendOpt(ESTestCase.FIPS_SYSPROP, System.getProperty(ESTestCase.FIPS_SYSPROP));\n             return this;\n         }\n \n-        private String relativePath(String pathProperty) {\n-            if(pathProperty == null) {\n-                return null;\n-            }\n-            Path path = PathUtils.get(pathProperty);\n-            if(path.isAbsolute()) {\n-                // try to resolve workspace root from Jenksin WORKSPACE env variable\n-                String workspace = System.getenv(\"WORKSPACE\");\n-                if(workspace == null) {\n-                    // fallback to resolve workspace root from teamcity checkout dir\n-                    workspace = System.getProperty(\"teamcity.build.workingDir\");\n-                }\n-                if(workspace != null) {\n-                    // resolve path relative to workspace root\n-                    return PathUtils.get(workspace).relativize(path).toString();\n-                }\n-            }\n-            return pathProperty;\n-        }\n-\n         public ReproduceErrorMessageBuilder appendClientYamlSuiteProperties() {\n             return appendProperties(REST_TESTS_SUITE, REST_TESTS_BLACKLIST);\n         }\n"}}, {"oid": "a8a3c266a134b71116158421b39b08d710af1b05", "url": "https://github.com/elastic/elasticsearch/commit/a8a3c266a134b71116158421b39b08d710af1b05", "message": "Show -Dlicense.key value in test repro info\n\n- When a -Dlicense.key sys property is passed to the build we want to consider\nthis in the test reproduction info message\n- absolute Paths tried to be converted to relative paths relative to workspace\nroot to allow simply copy & paste\n- Also fixes a inconsistency for checking license existence in x-pack plugin core build", "committedDate": "2020-12-11T19:13:03Z", "type": "commit"}, {"oid": "7ad4e9451f3984a44a61d2a38824702e89583ccb", "url": "https://github.com/elastic/elasticsearch/commit/7ad4e9451f3984a44a61d2a38824702e89583ccb", "message": "Remove unrequired path relativizer for licence repro info", "committedDate": "2020-12-11T19:13:04Z", "type": "commit"}, {"oid": "70a72aa8e354c0cfbf039c1e477e137e9b12ddf2", "url": "https://github.com/elastic/elasticsearch/commit/70a72aa8e354c0cfbf039c1e477e137e9b12ddf2", "message": "Remove duplicate line in repro output", "committedDate": "2020-12-11T19:13:04Z", "type": "commit"}, {"oid": "70a72aa8e354c0cfbf039c1e477e137e9b12ddf2", "url": "https://github.com/elastic/elasticsearch/commit/70a72aa8e354c0cfbf039c1e477e137e9b12ddf2", "message": "Remove duplicate line in repro output", "committedDate": "2020-12-11T19:13:04Z", "type": "forcePushed"}]}