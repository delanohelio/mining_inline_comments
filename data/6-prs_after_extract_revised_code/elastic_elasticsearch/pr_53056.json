{"pr_number": 53056, "pr_title": "SQL: Fix column size for IP data type", "pr_createdAt": "2020-03-03T15:30:23Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53056", "timeline": [{"oid": "41371a0f891cdc43b5f731459891294fe8f6dc6e", "url": "https://github.com/elastic/elasticsearch/commit/41371a0f891cdc43b5f731459891294fe8f6dc6e", "message": "SQL: Fix column size for IP data type\n\nSet size/displaySize to 45 which is the maximum string for\nan IP (v6), since IPs are returned as strings.\n\nFixes: #52762", "committedDate": "2020-03-03T15:28:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEwMTYxMw==", "url": "https://github.com/elastic/elasticsearch/pull/53056#discussion_r387101613", "bodyText": "DataType.size() could be potentially returned since it's the same value.", "author": "costin", "createdAt": "2020-03-03T15:34:09Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java", "diffHunk": "@@ -462,7 +462,7 @@ public static int defaultPrecision(DataType dataType) {\n             return 3;\n         }\n         if (dataType == IP) {\n-            return 39;\n+            return 45;", "originalCommit": "41371a0f891cdc43b5f731459891294fe8f6dc6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2cd73141e78bccd9a2819e4f567de45f957f29b7", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java\nindex d834e48551a..6c321bea80d 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java\n\n@@ -462,16 +460,16 @@ public class SqlDataTypes {\n             return 3;\n         }\n         if (dataType == IP) {\n-            return 45;\n+            return dataType.size();\n         }\n         if (dataType == BINARY) {\n-            return Integer.MAX_VALUE;\n+            return dataType.size();\n         }\n         if (dataType == OBJECT) {\n-            return 0;\n+            return dataType.size();\n         }\n         if (dataType == NESTED) {\n-            return 0;\n+            return dataType.size();\n         }\n         //\n         // SQL specific\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEwMjAwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/53056#discussion_r387102009", "bodyText": "DataType.size() could be potentially returned since it's the same value.\nIn fact, maybe this approach could be used for other DataTypes as well if applicable - that is whenever size == displaySize", "author": "costin", "createdAt": "2020-03-03T15:34:44Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java", "diffHunk": "@@ -582,7 +582,7 @@ public static int displaySize(DataType dataType) {\n             return 29;\n         }\n         if (dataType == IP) {", "originalCommit": "41371a0f891cdc43b5f731459891294fe8f6dc6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ee9da47c6785591d44d151ff9ac07b4caeaf969", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java\nindex d834e48551a..c08c9c2e7f8 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/SqlDataTypes.java\n\n@@ -582,16 +582,16 @@ public class SqlDataTypes {\n             return 29;\n         }\n         if (dataType == IP) {\n-            return 45;\n+            return defaultPrecision(dataType);\n         }\n         if (dataType == BINARY) {\n-            return Integer.MAX_VALUE;\n+            return defaultPrecision(dataType);\n         }\n         if (dataType == OBJECT) {\n-            return 0;\n+            return defaultPrecision(dataType);\n         }\n         if (dataType == NESTED) {\n-            return 0;\n+            return defaultPrecision(dataType);\n         }\n         //\n         // SQL specific\n"}}, {"oid": "5ee9da47c6785591d44d151ff9ac07b4caeaf969", "url": "https://github.com/elastic/elasticsearch/commit/5ee9da47c6785591d44d151ff9ac07b4caeaf969", "message": "address comments", "committedDate": "2020-03-03T15:46:27Z", "type": "commit"}, {"oid": "2cd73141e78bccd9a2819e4f567de45f957f29b7", "url": "https://github.com/elastic/elasticsearch/commit/2cd73141e78bccd9a2819e4f567de45f957f29b7", "message": "use dataType.size() where applicable", "committedDate": "2020-03-03T15:56:05Z", "type": "commit"}]}