{"pr_number": 62753, "pr_title": "Make TransportNodesAction finishHim Execute on Configured Executor", "pr_createdAt": "2020-09-22T10:13:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62753", "timeline": [{"oid": "27850ff71618fccb8c97a52283dc23588f92e645", "url": "https://github.com/elastic/elasticsearch/commit/27850ff71618fccb8c97a52283dc23588f92e645", "message": "Make TransportNodesAction finishHim Execute on Configured Executor\n\nCurrently, `finishHim` can either execute on the specified executor\n(in the less likely case that the local node request is the last to arrive)\nor on a transport thread.\nIn case of e.g. `org.elasticsearch.action.admin.cluster.stats.TransportClusterStatsAction`\nthis leads to an expensive execution that deserializes all mapping metadata in the cluster\nrunning on the transport thread and destabilizing the cluster. In case of this transport\naction it was specifically moved to the `MANAGEMENT` thread to avoid the high cost of processing\nthe stats requests on the nodes during fan-out but that did not cover the final execution\non the node that received the initial request.", "committedDate": "2020-09-22T10:05:39Z", "type": "commit"}, {"oid": "9a9095fda727c0173d35a1b9eade2b66811b24d4", "url": "https://github.com/elastic/elasticsearch/commit/9a9095fda727c0173d35a1b9eade2b66811b24d4", "message": "Merge remote-tracking branch 'elastic/master' into fix-mapping-monitoring-serialization", "committedDate": "2020-09-24T10:35:46Z", "type": "commit"}, {"oid": "19028898559535391b3c8ba21a12dc104b0e876e", "url": "https://github.com/elastic/elasticsearch/commit/19028898559535391b3c8ba21a12dc104b0e876e", "message": "adjust to be more specific", "committedDate": "2020-09-24T10:55:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3MjE5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62753#discussion_r495872199", "bodyText": "nit: this reintroduces double firing the listener if listener.onResponse fails (will also invoke onFailure now). I am OK with it, since it is a separate effort to come up with a good solution for the pattern you use here - unless you can see an easy way around it.", "author": "henningandersen", "createdAt": "2020-09-28T11:33:28Z", "path": "server/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java", "diffHunk": "@@ -226,15 +256,7 @@ private void onFailure(int idx, String nodeId, Throwable t) {\n         }\n \n         private void finishHim() {\n-            NodesResponse finalResponse;\n-            try {\n-                finalResponse = newResponse(request, responses);\n-            } catch (Exception e) {\n-                logger.debug(\"failed to combine responses from nodes\", e);\n-                listener.onFailure(e);\n-                return;\n-            }\n-            listener.onResponse(finalResponse);\n+            threadPool.executor(finalExecutor).execute(ActionRunnable.supply(listener, () -> newResponse(request, responses)));", "originalCommit": "19028898559535391b3c8ba21a12dc104b0e876e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4MzkxNg==", "url": "https://github.com/elastic/elasticsearch/pull/62753#discussion_r495883916", "bodyText": "I knew you were gonna point that out (really :)). The problem here is, that we really need this safe-guard here I think. Otherwise an exception in listener.onResponse (highly likely a bug in the transport code but still) would lead to the request never getting a response back leaking memory on the caller. We have the same issue when we run this on the same thread actually (the transport handler upstream brings the exception back around to the listener in that case).\n-> no easy fix here for now I'm afraid. But I do think we should look into adding more assertions for this kind of thing to ActionRunnable like you did to ActionListener.map and clean these things up more for sure.", "author": "original-brownbear", "createdAt": "2020-09-28T11:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3MjE5OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "7fba4787d4254e824dd7dfb52294459430790aa0", "url": "https://github.com/elastic/elasticsearch/commit/7fba4787d4254e824dd7dfb52294459430790aa0", "message": "Merge remote-tracking branch 'elastic/master' into fix-mapping-monitoring-serialization", "committedDate": "2020-09-28T11:59:53Z", "type": "commit"}, {"oid": "474d4cbb5b3188b50ad8cbfd31be3be191c4088c", "url": "https://github.com/elastic/elasticsearch/commit/474d4cbb5b3188b50ad8cbfd31be3be191c4088c", "message": "assert not on transport thread", "committedDate": "2020-09-28T12:02:51Z", "type": "commit"}]}