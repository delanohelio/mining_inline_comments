{"pr_number": 59212, "pr_title": "MappedFieldType no longer requires equals/hashCode/clone", "pr_createdAt": "2020-07-08T10:42:23Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59212", "timeline": [{"oid": "0529dc3d4ffa10e83622164e7642828c6bf35e87", "url": "https://github.com/elastic/elasticsearch/commit/0529dc3d4ffa10e83622164e7642828c6bf35e87", "message": "MappedFieldType no longer requires equals/hashCode/clone", "committedDate": "2020-07-08T10:31:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ4OTg2MA==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451489860", "bodyText": "This TODO doesn't make sense now that we don't extend lucene's FieldType", "author": "romseygeek", "createdAt": "2020-07-08T12:04:53Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java", "diffHunk": "@@ -104,32 +90,9 @@ public MappedFieldType(String name, boolean isIndexed, boolean hasDocValues, Tex\n         throw new IllegalArgumentException(\"Fielddata is not supported on field [\" + name() + \"] of type [\" + typeName() + \"]\");\n     }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-        MappedFieldType fieldType = (MappedFieldType) o;\n-\n-        return boost == fieldType.boost &&\n-            docValues == fieldType.docValues &&\n-            Objects.equals(name, fieldType.name) &&\n-            Objects.equals(indexAnalyzer, fieldType.indexAnalyzer) &&\n-            Objects.equals(eagerGlobalOrdinals, fieldType.eagerGlobalOrdinals) &&\n-            Objects.equals(meta, fieldType.meta);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(name, boost, docValues, indexAnalyzer,\n-            eagerGlobalOrdinals, meta);\n-    }\n-\n-    // TODO: we need to override freeze() and add safety checks that all settings are actually set", "originalCommit": "0529dc3d4ffa10e83622164e7642828c6bf35e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MDA0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451790043", "bodyText": "\ud83d\udc4d", "author": "nik9000", "createdAt": "2020-07-08T19:54:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ4OTg2MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5MTUzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451491531", "bodyText": "FieldTypeTestCase extensions that test only equals and hashCode can just be removed entirely.  BinaryFieldType doesn't have any search methods on it, and docvalues are tested in BinaryFieldMapperTests", "author": "romseygeek", "createdAt": "2020-07-08T12:08:15Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/BinaryFieldTypeTests.java", "diffHunk": "@@ -1,29 +0,0 @@\n-/*\n- * Licensed to Elasticsearch under one or more contributor\n- * license agreements. See the NOTICE file distributed with\n- * this work for additional information regarding copyright\n- * ownership. Elasticsearch licenses this file to you under\n- * the Apache License, Version 2.0 (the \"License\"); you may\n- * not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.elasticsearch.index.mapper;\n-\n-import java.util.Map;\n-\n-public class BinaryFieldTypeTests extends FieldTypeTestCase<MappedFieldType> {\n-\n-    @Override\n-    protected MappedFieldType createDefaultFieldType(String name, Map<String, String> meta) {\n-        return new BinaryFieldMapper.BinaryFieldType(name, true, meta);\n-    }\n-}", "originalCommit": "0529dc3d4ffa10e83622164e7642828c6bf35e87", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5MzU3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451493579", "bodyText": "We check that these modifications block merging in TextFieldMapperTests, so we can safely remove them here - this is just checking the equals implementation, which is now gone.", "author": "romseygeek", "createdAt": "2020-07-08T12:11:08Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/TextFieldTypeTests.java", "diffHunk": "@@ -38,47 +38,16 @@\n import org.elasticsearch.common.lucene.BytesRefs;\n import org.elasticsearch.common.unit.Fuzziness;\n import org.elasticsearch.index.mapper.TextFieldMapper.TextFieldType;\n-import org.junit.Before;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n \n import static org.apache.lucene.search.MultiTermQuery.CONSTANT_SCORE_REWRITE;\n import static org.hamcrest.Matchers.equalTo;\n \n-public class TextFieldTypeTests extends FieldTypeTestCase<TextFieldType> {\n-\n-    @Before", "originalCommit": "0529dc3d4ffa10e83622164e7642828c6bf35e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MjcyMg==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451792722", "bodyText": "\ud83d\udc4d. That is a better place for them.", "author": "nik9000", "createdAt": "2020-07-08T19:59:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5MzU3OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NTQ2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451755467", "bodyText": "I don't think this should have changed, now we're creating RankFeatureFieldType (singular not plural)?", "author": "jtibshirani", "createdAt": "2020-07-08T18:47:58Z", "path": "modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/RankFeaturesFieldTypeTests.java", "diffHunk": "@@ -20,17 +20,11 @@\n package org.elasticsearch.index.mapper;\n \n import java.util.Collections;\n-import java.util.Map;\n \n-public class RankFeaturesFieldTypeTests extends FieldTypeTestCase<MappedFieldType> {\n-\n-    @Override\n-    protected MappedFieldType createDefaultFieldType(String name, Map<String, String> meta) {\n-        return new RankFeaturesFieldMapper.RankFeaturesFieldType(name, meta);\n-    }\n+public class RankFeaturesFieldTypeTests extends FieldTypeTestCase {\n \n     public void testIsAggregatable() {\n-        MappedFieldType fieldType = createDefaultFieldType(\"field\", Collections.emptyMap());\n+        MappedFieldType fieldType = new RankFeatureFieldMapper.RankFeatureFieldType(\"field\", Collections.emptyMap(), true);", "originalCommit": "0529dc3d4ffa10e83622164e7642828c6bf35e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMjExOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r452122119", "bodyText": "Oh, good catch!  Autocomplete is not always my friend...", "author": "romseygeek", "createdAt": "2020-07-09T10:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NTQ2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "d06916a84a3b872978ca30f1653adeed5b46c1f8", "chunk": "diff --git a/modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/RankFeaturesFieldTypeTests.java b/modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/RankFeaturesFieldTypeTests.java\nindex 5dcab4b2bbb..c52f3a8c241 100644\n--- a/modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/RankFeaturesFieldTypeTests.java\n+++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/RankFeaturesFieldTypeTests.java\n\n@@ -24,7 +24,7 @@ import java.util.Collections;\n public class RankFeaturesFieldTypeTests extends FieldTypeTestCase {\n \n     public void testIsAggregatable() {\n-        MappedFieldType fieldType = new RankFeatureFieldMapper.RankFeatureFieldType(\"field\", Collections.emptyMap(), true);\n+        MappedFieldType fieldType = new RankFeaturesFieldMapper.RankFeaturesFieldType(\"field\", Collections.emptyMap());\n         assertFalse(fieldType.isAggregatable());\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc4ODIyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451788229", "bodyText": "I'm so happy to see clone go!", "author": "nik9000", "createdAt": "2020-07-08T19:51:07Z", "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeatureFieldMapper.java", "diffHunk": "@@ -103,15 +103,6 @@ public RankFeatureFieldType(String name, Map<String, String> meta, boolean posit\n             setIndexAnalyzer(Lucene.KEYWORD_ANALYZER);\n         }\n \n-        protected RankFeatureFieldType(RankFeatureFieldType ref) {\n-            super(ref);\n-            this.positiveScoreImpact = ref.positiveScoreImpact;\n-        }\n-\n-        public RankFeatureFieldType clone() {", "originalCommit": "0529dc3d4ffa10e83622164e7642828c6bf35e87", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MTMwNw==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451791307", "bodyText": "Yikes! This was never really equality!", "author": "nik9000", "createdAt": "2020-07-08T19:57:12Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -486,21 +483,6 @@ public String toString() {\n         public Query existsQuery(QueryShardContext context) {\n             throw new UnsupportedOperationException();\n         }\n-\n-        @Override\n-        public boolean equals(Object o) {\n-            if (this == o) return true;\n-            if (o == null || getClass() != o.getClass()) return false;\n-            if (!super.equals(o)) return false;\n-            PrefixFieldType that = (PrefixFieldType) o;\n-            return minChars == that.minChars &&", "originalCommit": "0529dc3d4ffa10e83622164e7642828c6bf35e87", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MzE2OQ==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r451793169", "bodyText": "It might be worth dropping this in a followup. It is just about empty now.", "author": "nik9000", "createdAt": "2020-07-08T20:00:46Z", "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldTypeTestCase.java", "diffHunk": "@@ -20,50 +20,16 @@\n \n import org.elasticsearch.index.query.QueryShardContext;\n import org.elasticsearch.test.ESTestCase;\n-import org.elasticsearch.test.EqualsHashCodeTestUtils;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n \n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n /** Base test case for subclasses of MappedFieldType */\n-public abstract class FieldTypeTestCase<T extends MappedFieldType> extends ESTestCase {\n+public abstract class FieldTypeTestCase extends ESTestCase {", "originalCommit": "0529dc3d4ffa10e83622164e7642828c6bf35e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMjkzMw==", "url": "https://github.com/elastic/elasticsearch/pull/59212#discussion_r452122933", "bodyText": "The mock shard contexts are still pretty widely used, so I think it's worth keeping for now.", "author": "romseygeek", "createdAt": "2020-07-09T10:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MzE2OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "99c1860d1519eb3214379c00fad2d869b48af867", "url": "https://github.com/elastic/elasticsearch/commit/99c1860d1519eb3214379c00fad2d869b48af867", "message": "Merge remote-tracking branch 'origin/master' into mapper/fieldtype-equals", "committedDate": "2020-07-09T10:26:30Z", "type": "commit"}, {"oid": "d06916a84a3b872978ca30f1653adeed5b46c1f8", "url": "https://github.com/elastic/elasticsearch/commit/d06916a84a3b872978ca30f1653adeed5b46c1f8", "message": "oops", "committedDate": "2020-07-09T10:31:08Z", "type": "commit"}, {"oid": "49fdc131cd3bd715f9fc56062bf7c1fbf1abf0f1", "url": "https://github.com/elastic/elasticsearch/commit/49fdc131cd3bd715f9fc56062bf7c1fbf1abf0f1", "message": "Merge branch 'master' into mapper/fieldtype-equals", "committedDate": "2020-07-09T17:14:57Z", "type": "commit"}]}