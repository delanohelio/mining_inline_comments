{"pr_number": 63749, "pr_title": "Preserve backing index ordering for data streams", "pr_createdAt": "2020-10-15T14:54:42Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63749", "timeline": [{"oid": "cbf078c8f9c0117b38b3d2b78dc15038cc408c07", "url": "https://github.com/elastic/elasticsearch/commit/cbf078c8f9c0117b38b3d2b78dc15038cc408c07", "message": "Preserve backing index ordering for data streams", "committedDate": "2020-10-15T14:50:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzMzkzOA==", "url": "https://github.com/elastic/elasticsearch/pull/63749#discussion_r505633938", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    backingIndices.add(createIndexMetadata(\"not-in-order-2\", true));\n          \n          \n            \n                    backingIndices.add(createIndexMetadata(\"not-in-order-1\", true));\n          \n          \n            \n                    backingIndices.add(createIndexMetadata(DataStream.getDefaultBackingIndexName(dataStreamName, 3), true));\n          \n          \n            \n                    String[] names = new String[]{\"not-in-order-2\", \"not-in-order-1\", DataStream.getDefaultBackingIndexName(dataStreamName, 3)};\n          \n          \n            \n                    List<IndexMetadata> backingIndices = Arrays.stream(names).map(n -> createIndexMetadata(n, true)).collect(Collectors.toList());", "author": "probakowski", "createdAt": "2020-10-15T15:24:55Z", "path": "server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java", "diffHunk": "@@ -169,6 +169,34 @@ public void testResolveWithMultipleNames() {\n         validateDataStreams(dataStreams, \"logs-mysql-test\");\n     }\n \n+    public void testResolvePreservesBackingIndexOrdering() {\n+        Metadata.Builder builder = Metadata.builder();\n+        String dataStreamName = \"my-data-stream\";\n+        List<IndexMetadata> backingIndices = new ArrayList<>();\n+        backingIndices.add(createIndexMetadata(\"not-in-order-2\", true));\n+        backingIndices.add(createIndexMetadata(\"not-in-order-1\", true));\n+        backingIndices.add(createIndexMetadata(DataStream.getDefaultBackingIndexName(dataStreamName, 3), true));", "originalCommit": "cbf078c8f9c0117b38b3d2b78dc15038cc408c07", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "53dc2c96f6877c951cd21d18e76fa2a3deef7e09", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java b/server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java\nindex f7be222d57f..4200aad7507 100644\n--- a/server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java\n+++ b/server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java\n\n@@ -172,10 +173,8 @@ public class ResolveIndexTests extends ESTestCase {\n     public void testResolvePreservesBackingIndexOrdering() {\n         Metadata.Builder builder = Metadata.builder();\n         String dataStreamName = \"my-data-stream\";\n-        List<IndexMetadata> backingIndices = new ArrayList<>();\n-        backingIndices.add(createIndexMetadata(\"not-in-order-2\", true));\n-        backingIndices.add(createIndexMetadata(\"not-in-order-1\", true));\n-        backingIndices.add(createIndexMetadata(DataStream.getDefaultBackingIndexName(dataStreamName, 3), true));\n+        String[] names = {\"not-in-order-2\", \"not-in-order-1\", DataStream.getDefaultBackingIndexName(dataStreamName, 3)};\n+        List<IndexMetadata> backingIndices = Arrays.stream(names).map(n -> createIndexMetadata(n, true)).collect(Collectors.toList());\n         for (IndexMetadata index : backingIndices) {\n             builder.put(index, false);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzNDExMg==", "url": "https://github.com/elastic/elasticsearch/pull/63749#discussion_r505634112", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(dataStreams.get(0).getBackingIndices().length, equalTo(3));\n          \n          \n            \n                    assertThat(dataStreams.get(0).getBackingIndices()[0], equalTo(backingIndices.get(0).getIndex().getName()));\n          \n          \n            \n                    assertThat(dataStreams.get(0).getBackingIndices()[1], equalTo(backingIndices.get(1).getIndex().getName()));\n          \n          \n            \n                    assertThat(dataStreams.get(0).getBackingIndices()[2], equalTo(backingIndices.get(2).getIndex().getName()));\n          \n          \n            \n                    assertThat(dataStreams.get(0).getBackingIndices(), arrayContaining(names));", "author": "probakowski", "createdAt": "2020-10-15T15:25:07Z", "path": "server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java", "diffHunk": "@@ -169,6 +169,34 @@ public void testResolveWithMultipleNames() {\n         validateDataStreams(dataStreams, \"logs-mysql-test\");\n     }\n \n+    public void testResolvePreservesBackingIndexOrdering() {\n+        Metadata.Builder builder = Metadata.builder();\n+        String dataStreamName = \"my-data-stream\";\n+        List<IndexMetadata> backingIndices = new ArrayList<>();\n+        backingIndices.add(createIndexMetadata(\"not-in-order-2\", true));\n+        backingIndices.add(createIndexMetadata(\"not-in-order-1\", true));\n+        backingIndices.add(createIndexMetadata(DataStream.getDefaultBackingIndexName(dataStreamName, 3), true));\n+        for (IndexMetadata index : backingIndices) {\n+            builder.put(index, false);\n+        }\n+\n+        DataStream ds = new DataStream(dataStreamName, createTimestampField(\"@timestamp\"),\n+            backingIndices.stream().map(IndexMetadata::getIndex).collect(Collectors.toList()));\n+        builder.put(ds);\n+\n+        IndicesOptions indicesOptions = IndicesOptions.LENIENT_EXPAND_OPEN_CLOSED_HIDDEN;\n+        List<ResolvedIndex> indices = new ArrayList<>();\n+        List<ResolvedAlias> aliases = new ArrayList<>();\n+        List<ResolvedDataStream> dataStreams = new ArrayList<>();\n+        TransportAction.resolveIndices(new String[]{\"*\"}, indicesOptions, builder.build(), resolver, indices, aliases, dataStreams, true);\n+\n+        assertThat(dataStreams.size(), equalTo(1));\n+        assertThat(dataStreams.get(0).getBackingIndices().length, equalTo(3));\n+        assertThat(dataStreams.get(0).getBackingIndices()[0], equalTo(backingIndices.get(0).getIndex().getName()));\n+        assertThat(dataStreams.get(0).getBackingIndices()[1], equalTo(backingIndices.get(1).getIndex().getName()));\n+        assertThat(dataStreams.get(0).getBackingIndices()[2], equalTo(backingIndices.get(2).getIndex().getName()));", "originalCommit": "cbf078c8f9c0117b38b3d2b78dc15038cc408c07", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "53dc2c96f6877c951cd21d18e76fa2a3deef7e09", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java b/server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java\nindex f7be222d57f..4200aad7507 100644\n--- a/server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java\n+++ b/server/src/test/java/org/elasticsearch/action/admin/indices/resolve/ResolveIndexTests.java\n\n@@ -172,10 +173,8 @@ public class ResolveIndexTests extends ESTestCase {\n     public void testResolvePreservesBackingIndexOrdering() {\n         Metadata.Builder builder = Metadata.builder();\n         String dataStreamName = \"my-data-stream\";\n-        List<IndexMetadata> backingIndices = new ArrayList<>();\n-        backingIndices.add(createIndexMetadata(\"not-in-order-2\", true));\n-        backingIndices.add(createIndexMetadata(\"not-in-order-1\", true));\n-        backingIndices.add(createIndexMetadata(DataStream.getDefaultBackingIndexName(dataStreamName, 3), true));\n+        String[] names = {\"not-in-order-2\", \"not-in-order-1\", DataStream.getDefaultBackingIndexName(dataStreamName, 3)};\n+        List<IndexMetadata> backingIndices = Arrays.stream(names).map(n -> createIndexMetadata(n, true)).collect(Collectors.toList());\n         for (IndexMetadata index : backingIndices) {\n             builder.put(index, false);\n         }\n"}}, {"oid": "53dc2c96f6877c951cd21d18e76fa2a3deef7e09", "url": "https://github.com/elastic/elasticsearch/commit/53dc2c96f6877c951cd21d18e76fa2a3deef7e09", "message": "review comments", "committedDate": "2020-10-16T15:37:29Z", "type": "commit"}]}