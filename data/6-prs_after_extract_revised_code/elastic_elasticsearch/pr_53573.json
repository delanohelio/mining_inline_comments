{"pr_number": 53573, "pr_title": "SQL: Fix NPE for parameterized LIKE/RLIKE", "pr_createdAt": "2020-03-14T11:58:49Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53573", "timeline": [{"oid": "09d24c77983cd31919706848c0f93ea31ca0a30e", "url": "https://github.com/elastic/elasticsearch/commit/09d24c77983cd31919706848c0f93ea31ca0a30e", "message": "SQL: Fix NPE for parameterized LIKE/RLIKE\n\nFix NPE when `null` is passed as a parameter for a parameterized\npattern of LIKE/RLIKE. e.g.: `field LIKE ?` params=[null]`\nCheck for null pattern in LIKE/RLIKE as for RLIKE (RegexpQuery) we\nget an IllegalArgumentExpression from Lucence but for LIKE\n(WildcardQuery) we get an NPE.\n\nFixes: #53557", "committedDate": "2020-03-14T11:54:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1NjY0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/53573#discussion_r392856645", "bodyText": "Since the pattern always has to be non-null, I think it would be better to report the error at the parser level instead of letting it propagate all the way to the tree which would be invalid anyway...\nJust like w do with pos below by throwing a ParsingException", "author": "costin", "createdAt": "2020-03-16T08:39:08Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java", "diffHunk": "@@ -263,6 +263,9 @@ public LikePattern visitPattern(PatternContext ctx) {\n         }\n \n         String pattern = string(ctx.value);\n+        if (pattern == null) {", "originalCommit": "09d24c77983cd31919706848c0f93ea31ca0a30e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg5MzQ0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/53573#discussion_r392893443", "bodyText": "I thought about it and I kind of liked more the separation of Parsing to an illegalarg case.\nIn my mind null is acceptable in parsing but not for the evaluation of the expression.\nBut if you prefer the ParsingException I can also do.\n@astefan what do you think?", "author": "matriv", "createdAt": "2020-03-16T09:48:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1NjY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkwNTA1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/53573#discussion_r392905051", "bodyText": "Where possible, the arguments should be checked as soon as possible - the whole method checks the validity of the pattern right after parsing - checking its existence is one that was missed.\nI see no advantages of postponing the check.", "author": "costin", "createdAt": "2020-03-16T10:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1NjY0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "676a3a597dc2cd3aac631123d8a7e5b147577d55", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java\nindex d80af708ee9..7c9973d6e40 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java\n\n@@ -264,7 +264,7 @@ abstract class ExpressionBuilder extends IdentifierBuilder {\n \n         String pattern = string(ctx.value);\n         if (pattern == null) {\n-            return null;\n+            throw new ParsingException(source(ctx.value), \"Pattern must not be [null]\");\n         }\n         int pos = pattern.indexOf('*');\n         if (pos >= 0) {\n"}}, {"oid": "676a3a597dc2cd3aac631123d8a7e5b147577d55", "url": "https://github.com/elastic/elasticsearch/commit/676a3a597dc2cd3aac631123d8a7e5b147577d55", "message": "move null check to Parser", "committedDate": "2020-03-16T11:09:23Z", "type": "commit"}, {"oid": "a946dc09d2b5054f5de19f98656c9eaf6d7116a4", "url": "https://github.com/elastic/elasticsearch/commit/a946dc09d2b5054f5de19f98656c9eaf6d7116a4", "message": "remove unused import", "committedDate": "2020-03-16T11:20:25Z", "type": "commit"}]}