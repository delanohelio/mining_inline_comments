{"pr_number": 51669, "pr_title": "Use dedicated cache keys instead of relying on an absolute path", "pr_createdAt": "2020-01-30T12:52:33Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51669", "timeline": [{"oid": "094ce24acaf22bd5277f20b8c28b6efac501f7b5", "url": "https://github.com/elastic/elasticsearch/commit/094ce24acaf22bd5277f20b8c28b6efac501f7b5", "message": "Add CacheKey", "committedDate": "2020-01-30T12:50:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5MzYwNA==", "url": "https://github.com/elastic/elasticsearch/pull/51669#discussion_r373093604", "bodyText": "Could we have an EqualsHashCodeTestUtils#checkEqualsAndHashCode-based test for this?", "author": "DaveCTurner", "createdAt": "2020-01-30T17:38:53Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.searchablesnapshots.cache;\n+\n+import org.elasticsearch.index.shard.ShardId;\n+import org.elasticsearch.repositories.IndexId;\n+import org.elasticsearch.snapshots.SnapshotId;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+\n+public class CacheKey {\n+\n+    private final SnapshotId snapshotId;\n+    private final IndexId indexId;\n+    private final ShardId shardId;\n+    private final Path cacheDir;\n+    private final String fileName;\n+    private final long fileLength;\n+\n+    CacheKey(SnapshotId snapshotId, IndexId indexId, ShardId shardId, Path cacheDir, String fileName, long fileLength) {", "originalCommit": "094ce24acaf22bd5277f20b8c28b6efac501f7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MzMzNA==", "url": "https://github.com/elastic/elasticsearch/pull/51669#discussion_r373153334", "bodyText": "\ud83e\udd26\u200d\u2642\ufe0f Of course!", "author": "tlrx", "createdAt": "2020-01-30T19:38:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5MzYwNA=="}], "type": "inlineReview", "revised_code": {"commit": "504271711a9456353b14364cba4aae161afeadab", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java\nindex afb80845bf7..40ae86a432e 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java\n\n@@ -9,7 +9,6 @@ import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.repositories.IndexId;\n import org.elasticsearch.snapshots.SnapshotId;\n \n-import java.nio.file.Path;\n import java.util.Objects;\n \n public class CacheKey {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5NDI1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51669#discussion_r373094256", "bodyText": "It feels strange to have the length as part of the key. I kinda see that it's here to make some plumbing a bit simpler, but I think I'd still rather move it back out again.", "author": "DaveCTurner", "createdAt": "2020-01-30T17:40:18Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.searchablesnapshots.cache;\n+\n+import org.elasticsearch.index.shard.ShardId;\n+import org.elasticsearch.repositories.IndexId;\n+import org.elasticsearch.snapshots.SnapshotId;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+\n+public class CacheKey {\n+\n+    private final SnapshotId snapshotId;\n+    private final IndexId indexId;\n+    private final ShardId shardId;\n+    private final Path cacheDir;\n+    private final String fileName;\n+    private final long fileLength;", "originalCommit": "094ce24acaf22bd5277f20b8c28b6efac501f7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MzUxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/51669#discussion_r373153515", "bodyText": "Now I look at it again I agree it feels strange. I reverted this.", "author": "tlrx", "createdAt": "2020-01-30T19:38:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5NDI1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "504271711a9456353b14364cba4aae161afeadab", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java\nindex afb80845bf7..40ae86a432e 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java\n\n@@ -9,7 +9,6 @@ import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.repositories.IndexId;\n import org.elasticsearch.snapshots.SnapshotId;\n \n-import java.nio.file.Path;\n import java.util.Objects;\n \n public class CacheKey {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5NTU2MA==", "url": "https://github.com/elastic/elasticsearch/pull/51669#discussion_r373095560", "bodyText": "Similarly cacheDir. In my mind the thing in the cache is the Lucene file, which is uniquely identified by snapshot/index/shard/filename, and cacheDir is a bit of an implementation detail that I feel should be hidden here.", "author": "DaveCTurner", "createdAt": "2020-01-30T17:42:57Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.searchablesnapshots.cache;\n+\n+import org.elasticsearch.index.shard.ShardId;\n+import org.elasticsearch.repositories.IndexId;\n+import org.elasticsearch.snapshots.SnapshotId;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+\n+public class CacheKey {\n+\n+    private final SnapshotId snapshotId;\n+    private final IndexId indexId;\n+    private final ShardId shardId;\n+    private final Path cacheDir;", "originalCommit": "094ce24acaf22bd5277f20b8c28b6efac501f7b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MzU4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51669#discussion_r373153583", "bodyText": "Same here, thanks", "author": "tlrx", "createdAt": "2020-01-30T19:38:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5NTU2MA=="}], "type": "inlineReview", "revised_code": {"commit": "504271711a9456353b14364cba4aae161afeadab", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java\nindex afb80845bf7..40ae86a432e 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheKey.java\n\n@@ -9,7 +9,6 @@ import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.repositories.IndexId;\n import org.elasticsearch.snapshots.SnapshotId;\n \n-import java.nio.file.Path;\n import java.util.Objects;\n \n public class CacheKey {\n"}}, {"oid": "504271711a9456353b14364cba4aae161afeadab", "url": "https://github.com/elastic/elasticsearch/commit/504271711a9456353b14364cba4aae161afeadab", "message": "apply feedback", "committedDate": "2020-01-30T19:38:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4OTE2NA==", "url": "https://github.com/elastic/elasticsearch/pull/51669#discussion_r373289164", "bodyText": "Maybe move this lambda to a method CacheKey#belongsTo(SnapshotId, IndexId, ShardId) (not sure about the name but that's the best I've got)", "author": "DaveCTurner", "createdAt": "2020-01-31T02:17:01Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheDirectory.java", "diffHunk": "@@ -34,19 +37,33 @@\n     private static final int COPY_BUFFER_SIZE = 8192;\n \n     private final CacheService cacheService;\n+    private final SnapshotId snapshotId;\n+    private final IndexId indexId;\n+    private final ShardId shardId;\n     private final Path cacheDir;\n \n-    public CacheDirectory(Directory in, CacheService cacheService, Path cacheDir) throws IOException {\n+    public CacheDirectory(Directory in, CacheService cacheService, Path cacheDir, SnapshotId snapshotId, IndexId indexId, ShardId shardId)\n+        throws IOException {\n         super(in);\n         this.cacheService = Objects.requireNonNull(cacheService);\n         this.cacheDir = Files.createDirectories(cacheDir);\n+        this.snapshotId = Objects.requireNonNull(snapshotId);\n+        this.indexId = Objects.requireNonNull(indexId);\n+        this.shardId = Objects.requireNonNull(shardId);\n+    }\n+\n+    private CacheKey createCacheKey(String fileName) {\n+        return new CacheKey(snapshotId, indexId, shardId, fileName);\n     }\n \n     public void close() throws IOException {\n         super.close();\n         // Ideally we could let the cache evict/remove cached files by itself after the\n         // directory has been closed.\n-        cacheService.removeFromCache(key -> key.startsWith(cacheDir.toString()));\n+        cacheService.removeFromCache(key ->\n+            Objects.equals(key.getSnapshotId(), snapshotId) &&", "originalCommit": "504271711a9456353b14364cba4aae161afeadab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MDE5OA==", "url": "https://github.com/elastic/elasticsearch/pull/51669#discussion_r373370198", "bodyText": "Good idea. I kept the name and added a test in e8afbe7", "author": "tlrx", "createdAt": "2020-01-31T08:49:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4OTE2NA=="}], "type": "inlineReview", "revised_code": {"commit": "e8afbe7956be8027f056d70372920e5db11ca7ef", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheDirectory.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheDirectory.java\nindex 5f5a33c7d5f..24088dbc948 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheDirectory.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/cache/CacheDirectory.java\n\n@@ -60,10 +60,7 @@ public class CacheDirectory extends FilterDirectory {\n         super.close();\n         // Ideally we could let the cache evict/remove cached files by itself after the\n         // directory has been closed.\n-        cacheService.removeFromCache(key ->\n-            Objects.equals(key.getSnapshotId(), snapshotId) &&\n-            Objects.equals(key.getIndexId(), indexId) &&\n-            Objects.equals(key.getShardId(), shardId));\n+        cacheService.removeFromCache(cacheKey -> cacheKey.belongsTo(snapshotId, indexId, shardId));\n     }\n \n     @Override\n"}}, {"oid": "e8afbe7956be8027f056d70372920e5db11ca7ef", "url": "https://github.com/elastic/elasticsearch/commit/e8afbe7956be8027f056d70372920e5db11ca7ef", "message": "BelongsTo", "committedDate": "2020-01-31T08:48:22Z", "type": "commit"}]}