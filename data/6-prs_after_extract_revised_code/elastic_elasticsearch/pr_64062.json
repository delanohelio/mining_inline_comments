{"pr_number": 64062, "pr_title": "Map iteration support for ForEach processor", "pr_createdAt": "2020-10-22T12:43:24Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64062", "timeline": [{"oid": "733bbf6143b02ce0c120cd18aa1497018cb24f5f", "url": "https://github.com/elastic/elasticsearch/commit/733bbf6143b02ce0c120cd18aa1497018cb24f5f", "message": "adds map iteration to ForEach processor", "committedDate": "2020-10-22T12:38:08Z", "type": "commit"}, {"oid": "fcdf0466cf746346238acb808aabdedc691708cd", "url": "https://github.com/elastic/elasticsearch/commit/fcdf0466cf746346238acb808aabdedc691708cd", "message": "Merge branch 'master' into 55215_foreach_over_maps", "committedDate": "2020-10-22T15:17:28Z", "type": "commit"}, {"oid": "cac7c5f1e7d7cb297849e7644575197577a58e05", "url": "https://github.com/elastic/elasticsearch/commit/cac7c5f1e7d7cb297849e7644575197577a58e05", "message": "Merge branch 'master' into 55215_foreach_over_maps", "committedDate": "2020-10-22T16:49:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyNTAwOA==", "url": "https://github.com/elastic/elasticsearch/pull/64062#discussion_r511825008", "bodyText": "Maybe also add a nested for each tests for maps like the existing testNestedForEach() test?", "author": "martijnvg", "createdAt": "2020-10-26T09:33:54Z", "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java", "diffHunk": "@@ -311,6 +312,56 @@ public void testRemovingFromTheSameField() {\n         assertThat(ingestDocument, equalTo(originalIngestDocument));\n     }\n \n+    public void testMapIteration() {\n+        Map<String, Object> mapValue = Map.of(\"foo\", 1, \"bar\", 2, \"baz\", 3);\n+        IngestDocument ingestDocument = new IngestDocument(\"_index\", \"_id\", null, null, null, Map.of(\"field\", mapValue));\n+\n+        List<String> encounteredKeys = new ArrayList<>();\n+        List<Object> encounteredValues = new ArrayList<>();\n+        TestProcessor testProcessor = new TestProcessor(id -> {\n+            String key = (String) id.getIngestMetadata().get(\"_key\");\n+            Object value = id.getIngestMetadata().get(\"_value\");\n+            encounteredKeys.add(key);\n+            encounteredValues.add(value);\n+            if (key.equals(\"bar\")) {\n+                id.setFieldValue(\"_ingest._key\", \"bar2\");\n+            }\n+            if (key.equals(\"baz\")) {\n+                id.setFieldValue(\"_ingest._value\", 33);\n+            }\n+        });\n+        ForEachProcessor processor = new ForEachProcessor(\"_tag\", null, \"field\", testProcessor, true);\n+        processor.execute(ingestDocument, (result, e) -> {});\n+        assertThat(testProcessor.getInvokedCounter(), equalTo(3));\n+        assertThat(encounteredKeys.toArray(), arrayContainingInAnyOrder(\"foo\", \"bar\", \"baz\"));\n+        assertThat(encounteredValues.toArray(), arrayContainingInAnyOrder(1, 2, 3));\n+        assertThat(ingestDocument.getFieldValue(\"field\", Map.class).entrySet().toArray(),\n+            arrayContainingInAnyOrder(Map.entry(\"foo\", 1), Map.entry(\"bar2\", 2), Map.entry(\"baz\", 33)));\n+    }\n+\n+    public void testRemovalOfMapKey() {\n+        Map<String, Object> mapValue = Map.of(\"foo\", 1, \"bar\", 2, \"baz\", 3);\n+        IngestDocument ingestDocument = new IngestDocument(\"_index\", \"_id\", null, null, null, Map.of(\"field\", mapValue));\n+\n+        List<String> encounteredKeys = new ArrayList<>();\n+        List<Object> encounteredValues = new ArrayList<>();\n+        TestProcessor testProcessor = new TestProcessor(id -> {\n+            String key = (String) id.getIngestMetadata().get(\"_key\");\n+            encounteredKeys.add(key);\n+            encounteredValues.add(id.getIngestMetadata().get(\"_value\"));\n+            if (key.equals(\"bar\")) {\n+                id.setFieldValue(\"_ingest._key\", \"\");\n+            }\n+        });\n+        ForEachProcessor processor = new ForEachProcessor(\"_tag\", null, \"field\", testProcessor, true);\n+        processor.execute(ingestDocument, (result, e) -> {});\n+        assertThat(testProcessor.getInvokedCounter(), equalTo(3));\n+        assertThat(encounteredKeys.toArray(), arrayContainingInAnyOrder(\"foo\", \"bar\", \"baz\"));\n+        assertThat(encounteredValues.toArray(), arrayContainingInAnyOrder(1, 2, 3));\n+        assertThat(ingestDocument.getFieldValue(\"field\", Map.class).entrySet().toArray(),\n+            arrayContainingInAnyOrder(Map.entry(\"foo\", 1), Map.entry(\"baz\", 3)));\n+    }\n+", "originalCommit": "cac7c5f1e7d7cb297849e7644575197577a58e05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "207982e8b374519ff9691c06a3e71f97f8f62a55", "chunk": "diff --git a/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java\nindex accc909998d..dfbbd61db0f 100644\n--- a/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java\n+++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java\n\n@@ -362,6 +405,59 @@ public class ForEachProcessorTests extends ESTestCase {\n             arrayContainingInAnyOrder(Map.entry(\"foo\", 1), Map.entry(\"baz\", 3)));\n     }\n \n+    public void testMapIterationWithAsyncProcessor() throws Exception {\n+        Map<String, Object> innerMap1 = new HashMap<>();\n+        innerMap1.put(\"innerMap\", Map.of(\"foo1\", 1, \"bar1\", 2, \"baz1\", 3));\n+        Map<String, Object> innerMap2 = new HashMap<>();\n+        innerMap2.put(\"innerMap\", Map.of(\"foo2\", 4, \"bar2\", 5, \"baz2\", 6));\n+        Map<String, Object> innerMap3 = new HashMap<>();\n+        innerMap3.put(\"innerMap\", Map.of(\"foo3\", 7, \"bar3\", 8, \"baz3\", 9, \"otherKey\", 42));\n+\n+        Map<String, Object> outerMap = Map.of(\"foo\", innerMap1, \"bar\", innerMap2, \"baz\", innerMap3);\n+        IngestDocument ingestDocument = new IngestDocument(\"_index\", \"_id\", null, null, null, Map.of(\"field\", outerMap));\n+\n+        List<String> visitedKeys = new ArrayList<>();\n+        List<Object> visitedValues = new ArrayList<>();\n+        TestAsyncProcessor testProcessor = new TestAsyncProcessor(\n+            doc -> {\n+                String key = (String) doc.getIngestMetadata().get(\"_key\");\n+                Object value = doc.getIngestMetadata().get(\"_value\");\n+                visitedKeys.add(key);\n+                visitedValues.add(value);\n+\n+                // change some of the keys\n+                if (key.startsWith(\"bar\")) {\n+                    doc.setFieldValue(\"_ingest._key\", \"bar2\");\n+                }\n+                // change some of the values\n+                if (key.startsWith(\"baz\")) {\n+                    doc.setFieldValue(\"_ingest._value\", ((Integer) value) * 2);\n+                }\n+            }\n+        );\n+\n+        ForEachProcessor processor = new ForEachProcessor(\n+            \"_tag\", null, \"field\", new ForEachProcessor(\"_tag\", null, \"_ingest._value.innerMap\", testProcessor, false),\n+            false);\n+        processor.execute(ingestDocument, (result, e) -> {});\n+\n+        assertBusy(() -> {\n+            assertThat(testProcessor.getInvokedCounter(), equalTo(10));\n+            assertThat(\n+                visitedKeys.toArray(),\n+                arrayContainingInAnyOrder(\"foo1\", \"bar1\", \"baz1\", \"foo2\", \"bar2\", \"baz2\", \"foo3\", \"bar3\", \"baz3\", \"otherKey\")\n+            );\n+            assertThat(visitedValues.toArray(), arrayContainingInAnyOrder(1, 2, 3, 4, 5, 6, 7, 8, 9, 42));\n+            assertThat(ingestDocument.getFieldValue(\"field\", Map.class).entrySet().toArray(),\n+                arrayContainingInAnyOrder(\n+                    Map.entry(\"foo\", Map.of(\"innerMap\", Map.of(\"foo1\", 1, \"bar2\", 2, \"baz1\", 6))),\n+                    Map.entry(\"bar\", Map.of(\"innerMap\", Map.of(\"foo2\", 4, \"bar2\", 5, \"baz2\", 12))),\n+                    Map.entry(\"baz\", Map.of(\"innerMap\", Map.of(\"foo3\", 7, \"bar2\", 8, \"baz3\", 18, \"otherKey\", 42)))\n+                )\n+            );\n+        });\n+    }\n+\n     private class AsyncUpperCaseProcessor implements Processor {\n \n         private final String field;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyNzE3NA==", "url": "https://github.com/elastic/elasticsearch/pull/64062#discussion_r511827174", "bodyText": "I think we can cast to Map<?, ?> instead? Then the SuppressWarnings can be removed. In order to get the key a cast to String would required, but that shouldn't generate warnings.", "author": "martijnvg", "createdAt": "2020-10-26T09:37:22Z", "path": "modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java", "diffHunk": "@@ -67,20 +67,61 @@ boolean isIgnoreMissing() {\n \n     @Override\n     public void execute(IngestDocument ingestDocument, BiConsumer<IngestDocument, Exception> handler) {\n-        List<?> values = ingestDocument.getFieldValue(field, List.class, ignoreMissing);\n-        if (values == null) {\n+        Object o = ingestDocument.getFieldValue(field, Object.class, ignoreMissing);\n+        if (o == null) {\n             if (ignoreMissing) {\n                 handler.accept(ingestDocument, null);\n             } else {\n                 handler.accept(null, new IllegalArgumentException(\"field [\" + field + \"] is null, cannot loop over its elements.\"));\n             }\n+        } else if (o instanceof Map) {\n+            @SuppressWarnings(\"unchecked\")\n+            Map<String, ?> map = (Map<String, ?>) o;", "originalCommit": "cac7c5f1e7d7cb297849e7644575197577a58e05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "81c94f4eca7ae693b209b9f83bdd4a47f7ed3d20", "chunk": "diff --git a/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java\nindex e83ce1d4a1d..7df7e9725c7 100644\n--- a/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java\n+++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ForEachProcessor.java\n\n@@ -75,10 +75,9 @@ public final class ForEachProcessor extends AbstractProcessor implements Wrappin\n                 handler.accept(null, new IllegalArgumentException(\"field [\" + field + \"] is null, cannot loop over its elements.\"));\n             }\n         } else if (o instanceof Map) {\n-            @SuppressWarnings(\"unchecked\")\n-            Map<String, ?> map = (Map<String, ?>) o;\n-            List<String> keys = new ArrayList<>(map.keySet());\n-            innerExecuteMap(0, new HashMap<String, Object>(map), keys, new HashMap<>(map.size()), ingestDocument, handler);\n+            Map<?, ?> map = (Map<?, ?>) o;\n+            List<?> keys = new ArrayList<>(map.keySet());\n+            innerExecuteMap(0, new HashMap<Object, Object>(map), keys, new HashMap<>(map.size()), ingestDocument, handler);\n         } else if (o instanceof List) {\n             List<?> list = (List<?>) o;\n             innerExecuteList(0, new ArrayList<>(list), new ArrayList<>(list.size()), ingestDocument, handler);\n"}}, {"oid": "81c94f4eca7ae693b209b9f83bdd4a47f7ed3d20", "url": "https://github.com/elastic/elasticsearch/commit/81c94f4eca7ae693b209b9f83bdd4a47f7ed3d20", "message": "remove unchecked cast", "committedDate": "2020-10-26T13:05:02Z", "type": "commit"}, {"oid": "e8d9666ea2c6ede91b0cd3cca992a78b3ade0179", "url": "https://github.com/elastic/elasticsearch/commit/e8d9666ea2c6ede91b0cd3cca992a78b3ade0179", "message": "wip on nested maps", "committedDate": "2020-10-30T19:56:00Z", "type": "commit"}, {"oid": "56e88dda001f915f0f91197120e858e82c8fe7f0", "url": "https://github.com/elastic/elasticsearch/commit/56e88dda001f915f0f91197120e858e82c8fe7f0", "message": "Merge branch 'master' into 55215_foreach_over_maps", "committedDate": "2021-02-19T22:07:27Z", "type": "commit"}, {"oid": "9570c5a897a3422141738ac5c299e7bbfd0f764d", "url": "https://github.com/elastic/elasticsearch/commit/9570c5a897a3422141738ac5c299e7bbfd0f764d", "message": "Merge branch '55215_foreach_over_maps' of https://github.com/danhermann/elasticsearch into 55215_foreach_over_maps", "committedDate": "2021-02-19T22:07:59Z", "type": "commit"}, {"oid": "99a3d8055c8ed43e04e8b47ebac49e4a902fe2b4", "url": "https://github.com/elastic/elasticsearch/commit/99a3d8055c8ed43e04e8b47ebac49e4a902fe2b4", "message": "Merge branch 'master' into 55215_foreach_over_maps", "committedDate": "2021-04-05T18:14:51Z", "type": "commit"}, {"oid": "2b31468483657dd88593bcd893b37a5663a5ba2c", "url": "https://github.com/elastic/elasticsearch/commit/2b31468483657dd88593bcd893b37a5663a5ba2c", "message": "Merge branch '55215_foreach_over_maps' of https://github.com/danhermann/elasticsearch into 55215_foreach_over_maps", "committedDate": "2021-04-05T18:15:25Z", "type": "commit"}, {"oid": "22ca4d464ad9c771d00e72934c2577a87c44fee7", "url": "https://github.com/elastic/elasticsearch/commit/22ca4d464ad9c771d00e72934c2577a87c44fee7", "message": "Merge branch 'master' into 55215_foreach_over_maps", "committedDate": "2021-06-23T21:29:41Z", "type": "commit"}, {"oid": "be7a07d68d52ca9ef3db5587f111260a80463d79", "url": "https://github.com/elastic/elasticsearch/commit/be7a07d68d52ca9ef3db5587f111260a80463d79", "message": "Merge branch '55215_foreach_over_maps' of https://github.com/danhermann/elasticsearch into 55215_foreach_over_maps", "committedDate": "2021-06-23T21:29:50Z", "type": "commit"}, {"oid": "207982e8b374519ff9691c06a3e71f97f8f62a55", "url": "https://github.com/elastic/elasticsearch/commit/207982e8b374519ff9691c06a3e71f97f8f62a55", "message": "fix nested map iteration and add tests", "committedDate": "2021-07-18T00:08:15Z", "type": "commit"}, {"oid": "ae0a0ee0582d79023560a61f5ec7149fa7a0b34b", "url": "https://github.com/elastic/elasticsearch/commit/ae0a0ee0582d79023560a61f5ec7149fa7a0b34b", "message": "simplify tests", "committedDate": "2021-07-18T22:56:58Z", "type": "commit"}, {"oid": "7af1816cbf93c6ea0b1068abc259a59a38ea6211", "url": "https://github.com/elastic/elasticsearch/commit/7af1816cbf93c6ea0b1068abc259a59a38ea6211", "message": "Merge branch 'master' into 55215_foreach_over_maps", "committedDate": "2021-07-19T11:34:05Z", "type": "commit"}]}