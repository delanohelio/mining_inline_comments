{"pr_number": 60683, "pr_title": "Replace AggregatorTestCase#search with AggregatorTestCase#searchAndReduce", "pr_createdAt": "2020-08-04T19:26:31Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60683", "timeline": [{"oid": "cf2422154faa392b608cd860c5999f090f55b863", "url": "https://github.com/elastic/elasticsearch/commit/cf2422154faa392b608cd860c5999f090f55b863", "message": "Replace AggregatorTestCase#search with AggregatorTestCase#searchAndReduce\n\nThis commit removes the ability to test the top level result of an aggregator\nbefore it runs the final reduce. All aggregator tests that use AggregatorTestCase#search\nare rewritten with AggregatorTestCase#searchAndReduce in order to ensure that we test\nthe final output (the one sent to the end user) rather than an intermediary result\nthat could be different.\nThis change also removes spurious commits triggered on top of a random index writer.\nThese commits slow down the tests and are redundant with the commits that the\nrandom index writer performs.", "committedDate": "2020-08-04T19:24:57Z", "type": "commit"}, {"oid": "5453d7e6f9bc722fbeec10e0e427b0895b49198e", "url": "https://github.com/elastic/elasticsearch/commit/5453d7e6f9bc722fbeec10e0e427b0895b49198e", "message": "fix additional tests", "committedDate": "2020-08-04T20:36:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNjk1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465306951", "bodyText": "Is this an actual bug you found while making this change?", "author": "not-napoleon", "createdAt": "2020-08-04T20:20:10Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalVariableWidthHistogram.java", "diffHunk": "@@ -451,7 +450,8 @@ private void mergeBucketsWithPlan(List<Bucket> buckets, List<BucketRange> plan,\n             }\n             toMerge.add(buckets.get(startIdx)); // Don't remove the startIdx bucket because it will be replaced by the merged bucket\n \n-            reduceContext.consumeBucketsAndMaybeBreak(- (toMerge.size() - 1));\n+            int toRemove = toMerge.stream().mapToInt(b -> countInnerBucket(b)+1).sum();", "originalCommit": "cf2422154faa392b608cd860c5999f090f55b863", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NTI2NA==", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465375264", "bodyText": "A minor one, yes. The max bucket count is not accurate when buckets are auto-merged.", "author": "jimczi", "createdAt": "2020-08-04T22:56:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNjk1MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNzc1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465307757", "bodyText": "I think we can remove the entire if block here, and the doReduce for loop.", "author": "not-napoleon", "createdAt": "2020-08-04T20:21:36Z", "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java", "diffHunk": "@@ -104,7 +104,7 @@ public void testRandom() throws Exception {\n                     response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder,\n                         fieldType);\n                 } else {\n-                    response = search(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n+                    response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);", "originalCommit": "cf2422154faa392b608cd860c5999f090f55b863", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NDcwMw==", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465374703", "bodyText": "thanks, I pushed 1dd98d1", "author": "jimczi", "createdAt": "2020-08-04T22:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNzc1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "1dd98d16f924040dc870ab26c8feee62ad65e3ab", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java\nindex 5e59be1a87c..e1b1e951df4 100644\n--- a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java\n+++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java\n\n@@ -98,20 +98,12 @@ public class FilterAggregatorTests extends AggregatorTestCase {\n             QueryBuilder filter = QueryBuilders.termQuery(\"field\", Integer.toString(value));\n             FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\", filter);\n \n-            for (boolean doReduce : new boolean[]{true, false}) {\n-                final InternalFilter response;\n-                if (doReduce) {\n-                    response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder,\n-                        fieldType);\n-                } else {\n-                    response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n-                }\n-                assertEquals(response.getDocCount(), (long) expectedBucketCount[value]);\n-                if (expectedBucketCount[value] > 0) {\n-                    assertTrue(AggregationInspectionHelper.hasValue(response));\n-                } else {\n-                    assertFalse(AggregationInspectionHelper.hasValue(response));\n-                }\n+            final InternalFilter response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n+            assertEquals(response.getDocCount(), (long) expectedBucketCount[value]);\n+            if (expectedBucketCount[value] > 0) {\n+                assertTrue(AggregationInspectionHelper.hasValue(response));\n+            } else {\n+                assertFalse(AggregationInspectionHelper.hasValue(response));\n             }\n         } finally {\n             indexReader.close();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyMjE5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465322197", "bodyText": "let's either update the comment to match the new range, or just delete the comments.  And in the later tests as well.", "author": "not-napoleon", "createdAt": "2020-08-04T20:50:12Z", "path": "server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java", "diffHunk": "@@ -57,7 +57,7 @@ public void testDoubles() throws Exception {\n                 new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), // bucket 0 5\n                 new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), // bucket -5, 0\n                 new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), // bucket 0, 5, 10\n-                new RangeFieldMapper.Range(rangeType, 42.5, 49.3, true, true), // bucket 40, 45\n+                new RangeFieldMapper.Range(rangeType, 22.5, 29.3, true, true), // bucket 40, 45", "originalCommit": "5453d7e6f9bc722fbeec10e0e427b0895b49198e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NDc4OA==", "url": "https://github.com/elastic/elasticsearch/pull/60683#discussion_r465374788", "bodyText": "++, I pushed 1dd98d1", "author": "jimczi", "createdAt": "2020-08-04T22:54:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyMjE5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "1dd98d16f924040dc870ab26c8feee62ad65e3ab", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java\nindex e124b01eb97..312ca43c728 100644\n--- a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java\n+++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java\n\n@@ -57,7 +57,7 @@ public class RangeHistogramAggregatorTests extends AggregatorTestCase {\n                 new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), // bucket 0 5\n                 new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), // bucket -5, 0\n                 new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), // bucket 0, 5, 10\n-                new RangeFieldMapper.Range(rangeType, 22.5, 29.3, true, true), // bucket 40, 45\n+                new RangeFieldMapper.Range(rangeType, 22.5, 29.3, true, true), // bucket 20, 25\n             }) {\n                 Document doc = new Document();\n                 BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range));\n"}}, {"oid": "1dd98d16f924040dc870ab26c8feee62ad65e3ab", "url": "https://github.com/elastic/elasticsearch/commit/1dd98d16f924040dc870ab26c8feee62ad65e3ab", "message": "address review and fix another test", "committedDate": "2020-08-04T22:53:49Z", "type": "commit"}, {"oid": "f11a8cfdefe270f95d36411796ba0759d4c1eb73", "url": "https://github.com/elastic/elasticsearch/commit/f11a8cfdefe270f95d36411796ba0759d4c1eb73", "message": "Merge branch 'master' into aggregator_tests_search_and_reduce", "committedDate": "2020-08-05T05:43:11Z", "type": "commit"}]}