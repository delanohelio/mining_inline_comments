{"pr_number": 53495, "pr_title": "SQL: Fix issue with LIKE/RLIKE as painless script", "pr_createdAt": "2020-03-12T16:50:38Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53495", "timeline": [{"oid": "a47b5bd1eb2bb924554f14d136c6c6bffbda0d4a", "url": "https://github.com/elastic/elasticsearch/commit/a47b5bd1eb2bb924554f14d136c6c6bffbda0d4a", "message": "SQL: Fix issue with LIKE/RLIKE as painless script\n\nAdd missing asScript() implementation for LIKE/RLIKE expressions.\n\nWhen LIKE/RLIKE are used for example in GROUP BY or are wrapped with\nscalar functions in a WHERE clause, the translation must produce a\npainless script which will be executed to implement the correct\nbehaviour and previously this was completely missing, and as a\nconsquence wrong results were silently (no error) returned.\n\nFixes: #53486", "committedDate": "2020-03-12T16:53:57Z", "type": "forcePushed"}, {"oid": "7e8f4feb3df08f7d0e22554531b4d426e14fc02c", "url": "https://github.com/elastic/elasticsearch/commit/7e8f4feb3df08f7d0e22554531b4d426e14fc02c", "message": "SQL: Fix issue with LIKE/RLIKE as painless script\n\nAdd missing asScript() implementation for LIKE/RLIKE expressions.\n\nWhen LIKE/RLIKE are used for example in GROUP BY or are wrapped with\nscalar functions in a WHERE clause, the translation must produce a\npainless script which will be executed to implement the correct\nbehaviour and previously this was completely missing, and as a\nconsquence wrong results were silently (no error) returned.\n\nFixes: #53486", "committedDate": "2020-03-12T16:55:43Z", "type": "commit"}, {"oid": "7e8f4feb3df08f7d0e22554531b4d426e14fc02c", "url": "https://github.com/elastic/elasticsearch/commit/7e8f4feb3df08f7d0e22554531b4d426e14fc02c", "message": "SQL: Fix issue with LIKE/RLIKE as painless script\n\nAdd missing asScript() implementation for LIKE/RLIKE expressions.\n\nWhen LIKE/RLIKE are used for example in GROUP BY or are wrapped with\nscalar functions in a WHERE clause, the translation must produce a\npainless script which will be executed to implement the correct\nbehaviour and previously this was completely missing, and as a\nconsquence wrong results were silently (no error) returned.\n\nFixes: #53486", "committedDate": "2020-03-12T16:55:43Z", "type": "forcePushed"}, {"oid": "68503774af987746eb6945165b5417931f793a12", "url": "https://github.com/elastic/elasticsearch/commit/68503774af987746eb6945165b5417931f793a12", "message": "Merge remote-tracking branch 'upstream/master' into fix-53486", "committedDate": "2020-03-12T18:08:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392187401", "bodyText": "Maybe RegexPattern", "author": "costin", "createdAt": "2020-03-13T12:03:37Z", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java", "diffHunk": "@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.ql.expression.predicate.regex;\n+\n+interface Pattern {", "originalCommit": "68503774af987746eb6945165b5417931f793a12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIxMTkyMw==", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392211923", "bodyText": "I'm not sure, the LikePattern is not 100% regex pattern.", "author": "matriv", "createdAt": "2020-03-13T13:00:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIxMjEwNA==", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392212104", "bodyText": "How about StringMatchPattern?", "author": "matriv", "createdAt": "2020-03-13T13:00:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMDg1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392220856", "bodyText": "Why not StringPattern ?", "author": "costin", "createdAt": "2020-03-13T13:17:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIzNzQzMg==", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392237432", "bodyText": "sure that too!", "author": "matriv", "createdAt": "2020-03-13T13:47:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4NzQwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "987c4b758cc68fff244985ff9b61f79b157b3ef0", "chunk": "diff --git a/x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java b/x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/StringPattern.java\nsimilarity index 93%\nrename from x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java\nrename to x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/StringPattern.java\nindex e0968f5a95c..6dac865b4ac 100644\n--- a/x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/Pattern.java\n+++ b/x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/StringPattern.java\n\n@@ -5,7 +5,7 @@\n  */\n package org.elasticsearch.xpack.ql.expression.predicate.regex;\n \n-interface Pattern {\n+interface StringPattern {\n     /**\n      * Returns the pattern in (Java) regex format.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4Nzc2OA==", "url": "https://github.com/elastic/elasticsearch/pull/53495#discussion_r392187768", "bodyText": "\ud83d\udc4d", "author": "costin", "createdAt": "2020-03-13T12:04:32Z", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/expression/predicate/regex/RegexMatch.java", "diffHunk": "@@ -54,8 +58,30 @@ public boolean foldable() {\n         // right() is not directly foldable in any context but Like can fold it.\n         return field().foldable();\n     }\n-    \n+\n+    @Override\n+    public Boolean fold() {\n+        Object val = field().fold();\n+        return RegexProcessor.RegexOperation.match(val, pattern().asJavaRegex());\n+    }\n+\n     @Override\n+    protected Processor makeProcessor() {\n+        return new RegexProcessor(pattern().asJavaRegex());\n+    }\n+\n+    @Override\n+    public ScriptTemplate asScript() {", "originalCommit": "68503774af987746eb6945165b5417931f793a12", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "987c4b758cc68fff244985ff9b61f79b157b3ef0", "url": "https://github.com/elastic/elasticsearch/commit/987c4b758cc68fff244985ff9b61f79b157b3ef0", "message": "rename iface", "committedDate": "2020-03-13T13:48:49Z", "type": "commit"}, {"oid": "bd81d25e35dc360e8e073150be50a43a1dcf7d8c", "url": "https://github.com/elastic/elasticsearch/commit/bd81d25e35dc360e8e073150be50a43a1dcf7d8c", "message": "Merge remote-tracking branch 'upstream/master' into fix-53486", "committedDate": "2020-03-13T14:04:34Z", "type": "commit"}]}