{"pr_number": 59907, "pr_title": "SQL: Add option to provide the delimiter for the CSV format", "pr_createdAt": "2020-07-20T16:25:20Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59907", "timeline": [{"oid": "b910a899de0eb7375e8bff76bfe5530ca6305f98", "url": "https://github.com/elastic/elasticsearch/commit/b910a899de0eb7375e8bff76bfe5530ca6305f98", "message": "Add option to provide the delimiter to the CSV fmt\n\nThis adds the option to provide the desired character as the separator\nfor the CSV format (the default remains comma).\nA set of characters are excluded though - like CR, LF, `\"` - to avoid\nslipping onto the CSV-dialects slope. The tab is also forbidden, the\nuser needs to choose the \"tsv\" format explicitely.\n\nThe TSV format also gets a needed supplemental escaping, that of the '\\'\ncharacter.", "committedDate": "2020-07-20T16:16:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQ4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r457880482", "bodyText": "I'd say IllegalArgumentException fits better.", "author": "matriv", "createdAt": "2020-07-21T07:04:10Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -109,15 +109,33 @@ protected String eol() {\n      *\n      */\n     CSV() {\n+        private Character delimiter = ',';\n \n         @Override\n-        protected String delimiter() {\n-            return \",\";\n+        protected Character delimiter() {\n+            return delimiter;\n+        }\n+\n+        @Override\n+        protected void setDelimiter(Character delimiter) {\n+            if (delimiter == null) {\n+                throw new UnsupportedOperationException();", "originalCommit": "b910a899de0eb7375e8bff76bfe5530ca6305f98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2Mzg0NA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r458763844", "bodyText": "Makes sense.", "author": "bpintea", "createdAt": "2020-07-22T12:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQ4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java\nindex 77d47aa3a77..9a8b04f90be 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java\n\n@@ -109,28 +111,9 @@ enum TextFormat {\n      *\n      */\n     CSV() {\n-        private Character delimiter = ',';\n-\n         @Override\n         protected Character delimiter() {\n-            return delimiter;\n-        }\n-\n-        @Override\n-        protected void setDelimiter(Character delimiter) {\n-            if (delimiter == null) {\n-                throw new UnsupportedOperationException();\n-            }\n-            switch (delimiter) {\n-                case '\"':\n-                case '\\n':\n-                case '\\r':\n-                    throw new IllegalArgumentException(\"illegal reserved character specified as delimiter [\" + delimiter + \"]\");\n-                case '\\t':\n-                    throw new IllegalArgumentException(\"illegal delimiter [TAB] specified as delimiter for the [CSV] format; \" +\n-                        \"choose the [TSV] format instead\");\n-            }\n-            this.delimiter = delimiter;\n+            return ',';\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MTkyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r457881921", "bodyText": "Minor, a set would be faster.", "author": "matriv", "createdAt": "2020-07-21T07:07:07Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/plugin/TextFormatTests.java", "diffHunk": "@@ -90,7 +92,25 @@ public void testCsvFormatWithRegularData() {\n         assertEquals(\"string,number\\r\\n\" +\n                 \"Along The River Bank,708\\r\\n\" +\n                 \"Mind Train,280\\r\\n\",\n-                text);\n+            text);\n+    }\n+\n+    public void testCsvFormatWithCustomDelimiterRegularData() {\n+        List<Character> forbidden = Arrays.asList('\"', '\\r', '\\n', '\\t');", "originalCommit": "b910a899de0eb7375e8bff76bfe5530ca6305f98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2NDAxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r458764015", "bodyText": "Changed, thanks.", "author": "bpintea", "createdAt": "2020-07-22T12:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MTkyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "chunk": "diff --git a/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/plugin/TextFormatTests.java b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/plugin/TextFormatTests.java\nindex 850ed640a59..c1a2f0620bb 100644\n--- a/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/plugin/TextFormatTests.java\n+++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/plugin/TextFormatTests.java\n\n@@ -95,8 +97,20 @@ public class TextFormatTests extends ESTestCase {\n             text);\n     }\n \n+    public void testCsvFormatNoHeaderWithRegularData() {\n+        String text = CSV.format(reqWithParam(\"header\", \"absent\"), regularData());\n+        assertEquals(\"Along The River Bank,708\\r\\n\" +\n+                \"Mind Train,280\\r\\n\",\n+            text);\n+    }\n+\n+    public void testCsvFormatInvalidHeaderValue() {\n+        Exception e = expectThrows(IllegalArgumentException.class, () -> CSV.format(reqWithParam(\"header\", \"invalid\"), regularData()));\n+        assertEquals(\"illegal value of [header] attribute: [invalid]; allowed values: [absent, present]\", e.getMessage());\n+    }\n+\n     public void testCsvFormatWithCustomDelimiterRegularData() {\n-        List<Character> forbidden = Arrays.asList('\"', '\\r', '\\n', '\\t');\n+        Set<Character> forbidden = Set.of('\"', '\\r', '\\n', '\\t');\n         Character delim = randomValueOtherThanMany(forbidden::contains, () -> randomAlphaOfLength(1).charAt(0));\n         String text = CSV.format(reqWithParam(\"delimiter\", String.valueOf(delim)), regularData());\n         List<String> terms = Arrays.asList(\"string\", \"number\", \"Along The River Bank\", \"708\", \"Mind Train\", \"280\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MzIxMw==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r457883213", "bodyText": "Can we use some static variable for \"delimiter\"?", "author": "matriv", "createdAt": "2020-07-21T07:09:48Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/RestSqlQueryAction.java", "diffHunk": "@@ -124,6 +128,11 @@ public RestResponse buildResponse(SqlQueryResponse response) throws Exception {\n         });\n     }\n \n+    @Override\n+    protected Set<String> responseParams() {\n+        return textFormat == TextFormat.CSV ? Collections.singleton(\"delimiter\") : Collections.emptySet();", "originalCommit": "b910a899de0eb7375e8bff76bfe5530ca6305f98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2NDExNg==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r458764116", "bodyText": "Sure. I've updated along a few other embedded strings, for this change to make sense.", "author": "bpintea", "createdAt": "2020-07-22T12:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MzIxMw=="}], "type": "inlineReview", "revised_code": {"commit": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/RestSqlQueryAction.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/RestSqlQueryAction.java\nindex a97c60ed193..0403e1eb5d3 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/RestSqlQueryAction.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/RestSqlQueryAction.java\n\n@@ -130,7 +133,7 @@ public class RestSqlQueryAction extends BaseRestHandler {\n \n     @Override\n     protected Set<String> responseParams() {\n-        return textFormat == TextFormat.CSV ? Collections.singleton(\"delimiter\") : Collections.emptySet();\n+        return textFormat == TextFormat.CSV ? Set.of(URL_PARAM_DELIMITER, URL_PARAM_HEADER) : Collections.emptySet();\n     }\n \n     @Override\n"}}, {"oid": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "url": "https://github.com/elastic/elasticsearch/commit/6d5b28a776ed071c83caf79ff48f3c8184b65290", "message": "Correct delimiter value propagation. Adress comm.\n\nFix the way the delimiter is being passed around, removing the CSV\nmember - since its instantiation is a singleton - and pushing it through\nfunction arguments.\n\nThe commit fixes a few issues with the \"header\" URL attribute:\n- these was no longer usable, since it wasn't \"consumed\" by\nRestSqlQueryAction before generating the answer (triggering an error\nresponce on use);\n- its value was only checked against \"absent\", so an incorrect value\n(typo like \"abaent\") could have silently generated an unexpected reply.\n- missing\n\nDocumentation for the \"delimiter\" attribute has also been added.", "committedDate": "2020-07-22T12:32:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2Mjc2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459262766", "bodyText": "Why did you add that second argument? I don't see it being used, or am I missing something :) ?", "author": "matriv", "createdAt": "2020-07-23T07:31:00Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -235,7 +247,7 @@ String contentType(RestRequest request) {\n         }\n \n         @Override\n-        String maybeEscape(String value) {\n+        String maybeEscape(String value, Character __) {", "originalCommit": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4NDAxOA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459384018", "bodyText": "The second param of maybeEscape, the delimiter, is only used for the CSV value, but not for the TSV.", "author": "bpintea", "createdAt": "2020-07-23T11:33:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2Mjc2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5MjA4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459392087", "bodyText": "Of course, sorry, I was just confused.", "author": "matriv", "createdAt": "2020-07-23T11:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2Mjc2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2NTg0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459265842", "bodyText": "You could also use Set here, but personally I would use a switch statement on the head.toLowerCase(Locale.ROOT) to return true, false, and default => throw the exception.", "author": "matriv", "createdAt": "2020-07-23T07:38:00Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -186,23 +193,28 @@ String maybeEscape(String value) {\n \n         @Override\n         boolean needsHeader(RestRequest request) {\n-            String header = request.param(\"header\");\n+            String header = request.param(URL_PARAM_HEADER);\n             if (header == null) {\n                 List<String> values = request.getAllHeaderValues(\"Accept\");\n                 if (values != null) {\n                     // header values are separated by `;` so try breaking it down\n                     for (String value : values) {\n                         String[] params = Strings.tokenizeToStringArray(value, \";\");\n                         for (String param : params) {\n-                            if (param.toLowerCase(Locale.ROOT).equals(\"header=absent\")) {\n+                            if (param.toLowerCase(Locale.ROOT).equals(URL_PARAM_HEADER + \"=\" + PARAM_HEADER_ABSENT)) {\n                                 return false;\n                             }\n                         }\n                     }\n                 }\n                 return true;\n             } else {\n-                return !header.toLowerCase(Locale.ROOT).equals(\"absent\");\n+                List<String> allowed = List.of(PARAM_HEADER_ABSENT, PARAM_HEADER_PRESENT);", "originalCommit": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4NDIxMg==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459384212", "bodyText": "Good suggestion, thanks. Fixed.", "author": "bpintea", "createdAt": "2020-07-23T11:33:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2NTg0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2b3c3513053df25352ea8bfd2424c9b31f935954", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java\nindex 9a8b04f90be..6043fd23710 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java\n\n@@ -209,12 +212,12 @@ enum TextFormat {\n                 }\n                 return true;\n             } else {\n-                List<String> allowed = List.of(PARAM_HEADER_ABSENT, PARAM_HEADER_PRESENT);\n-                if (allowed.contains(header.toLowerCase(Locale.ROOT)) == false) {\n-                    throw new IllegalArgumentException(\"illegal value of [\" + URL_PARAM_HEADER + \"] attribute: [\" + header + \"]; \" +\n-                        \"allowed values: \" + allowed);\n+                switch (header.toLowerCase(Locale.ROOT)) {\n+                    case PARAM_HEADER_ABSENT: return false;\n+                    case PARAM_HEADER_PRESENT: return true;\n+                    default: throw new IllegalArgumentException(\"illegal value of [\" + URL_PARAM_HEADER + \"] \" +\n+                        \"attribute: [\" + header + \"]; \" + \"allowed values: [\" + PARAM_HEADER_ABSENT + \", \" + PARAM_HEADER_PRESENT + \"]\");\n                 }\n-                return header.toLowerCase(Locale.ROOT).equals(PARAM_HEADER_ABSENT) == false;\n             }\n         }\n     },\n"}}, {"oid": "2b3c3513053df25352ea8bfd2424c9b31f935954", "url": "https://github.com/elastic/elasticsearch/commit/2b3c3513053df25352ea8bfd2424c9b31f935954", "message": "Adress review comments. Unescape param\n\nThe commit unescapes the deliter param. This is required for the\ndoc-sourced tests.\n\nAlso, implement a switch for param value validation and fix docs.", "committedDate": "2020-07-23T11:25:13Z", "type": "commit"}, {"oid": "d9bcff1282f0d0b0870b13dce66c55d93f3fdabd", "url": "https://github.com/elastic/elasticsearch/commit/d9bcff1282f0d0b0870b13dce66c55d93f3fdabd", "message": "Merge branch 'master' into enh/csv_delimiter", "committedDate": "2020-07-23T11:27:08Z", "type": "commit"}, {"oid": "1b3958decc61d2036c6122a5a66223df9d7ec5ed", "url": "https://github.com/elastic/elasticsearch/commit/1b3958decc61d2036c6122a5a66223df9d7ec5ed", "message": "Update docs/reference/sql/endpoints/rest.asciidoc\n\nCo-authored-by: Marios Trivyzas <matriv@gmail.com>", "committedDate": "2020-07-23T11:55:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTc4OA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r460971788", "bodyText": "I would have kept this method name as is.", "author": "astefan", "createdAt": "2020-07-27T15:23:04Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -162,52 +190,58 @@ String maybeEscape(String value) {\n                 sb.append('\"');\n                 value = sb.toString();\n             }\n+\n             return value;\n         }\n \n         @Override\n-        boolean hasHeader(RestRequest request) {\n-            String header = request.param(\"header\");\n+        boolean needsHeader(RestRequest request) {", "originalCommit": "1b3958decc61d2036c6122a5a66223df9d7ec5ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1MjUwOA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461052508", "bodyText": "My interpretation of what the code does is that it decides if a header is required in the response and not if the RestRequest has a header value at all (either URL attribute or HTTP header value). I.e. for the configuration header=absent the function will still return false, despite the fact that there is actually a header (attribute).\nBut I'm happy to revert or apply a more suggestive name if this be an incorrect interpretation.", "author": "bpintea", "createdAt": "2020-07-27T17:29:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2MDUwOA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461360508", "bodyText": "The way I looked at it is from the request perspective: the request has a header or not, thus the formatting behavior changes based on this. I would argue further and say that the response needs a header (thus a needsHeader method should belong to the SqlQueryResponse object) and not the row-by-row formatting behavior.", "author": "astefan", "createdAt": "2020-07-28T06:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ0OTQ0MA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461449440", "bodyText": "thus a needsHeader method should belong to the SqlQueryResponse object\n\nAgreed.\nI've reverted the change anyways.", "author": "bpintea", "createdAt": "2020-07-28T09:33:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTc4OA=="}], "type": "inlineReview", "revised_code": {"commit": "41c3fbf5f6fe484d56ea42107e395876102deba1", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java\nindex 6043fd23710..96507fa7818 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java\n\n@@ -195,7 +194,7 @@ enum TextFormat {\n         }\n \n         @Override\n-        boolean needsHeader(RestRequest request) {\n+        boolean hasHeader(RestRequest request) {\n             String header = request.param(URL_PARAM_HEADER);\n             if (header == null) {\n                 List<String> values = request.getAllHeaderValues(\"Accept\");\n"}}, {"oid": "41c3fbf5f6fe484d56ea42107e395876102deba1", "url": "https://github.com/elastic/elasticsearch/commit/41c3fbf5f6fe484d56ea42107e395876102deba1", "message": "Address review comments\n\n- rip out anything which isn't Delimiter-related.\n- undo 'hasHeader' method renaming.", "committedDate": "2020-07-28T09:29:10Z", "type": "commit"}, {"oid": "ccf1d866a48ee580cf559e5ec7780918bcd0956c", "url": "https://github.com/elastic/elasticsearch/commit/ccf1d866a48ee580cf559e5ec7780918bcd0956c", "message": "Merge branch 'master' into enh/csv_delimiter", "committedDate": "2020-07-28T09:34:00Z", "type": "commit"}, {"oid": "6d014df9394ae38787235bb9147be7d05897b396", "url": "https://github.com/elastic/elasticsearch/commit/6d014df9394ae38787235bb9147be7d05897b396", "message": "Minor doc update. One more fix revert\n\nUpdate the doc to make it clear that the textual CSV, TSV and TXT\nformats pass the cursor back to the user through the Cursor HTTP header.", "committedDate": "2020-07-29T08:27:34Z", "type": "commit"}, {"oid": "5adc138c20c0e976e4827daae66e1a4611368529", "url": "https://github.com/elastic/elasticsearch/commit/5adc138c20c0e976e4827daae66e1a4611368529", "message": "Merge branch 'master' into enh/csv_delimiter", "committedDate": "2020-07-29T09:04:04Z", "type": "commit"}]}