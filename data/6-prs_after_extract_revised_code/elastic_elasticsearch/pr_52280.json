{"pr_number": 52280, "pr_title": "Remove fixed_auto_queue_size threadpool type", "pr_createdAt": "2020-02-12T17:58:47Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52280", "timeline": [{"oid": "5f9055f1337144983a7be5bdf2ef17db29cdf7d1", "url": "https://github.com/elastic/elasticsearch/commit/5f9055f1337144983a7be5bdf2ef17db29cdf7d1", "message": "Remove fixed_auto_queue_size threadpool type", "committedDate": "2020-02-12T17:41:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQyMzcxNg==", "url": "https://github.com/elastic/elasticsearch/pull/52280#discussion_r378423716", "bodyText": "These stats are still used for adaptive replica selection. This is what I meant when we discussed this about the QueueResizingEsThreadPoolExecutor working for both the little's law part (the part we wanted to remove) as well as for adaptive replica selection.", "author": "dakrone", "createdAt": "2020-02-12T18:10:07Z", "path": "server/src/main/java/org/elasticsearch/search/query/QueryPhase.java", "diffHunk": "@@ -300,12 +297,6 @@ static boolean executeInternal(SearchContext searchContext) throws QueryPhaseExe\n                 restoreTopFieldDocs(queryResult, sortAndFormatsForRewrittenNumericSort);\n             }\n \n-            ExecutorService executor = searchContext.indexShard().getThreadPool().executor(ThreadPool.Names.SEARCH);\n-            if (executor instanceof QueueResizingEsThreadPoolExecutor) {\n-                QueueResizingEsThreadPoolExecutor rExecutor = (QueueResizingEsThreadPoolExecutor) executor;\n-                queryResult.nodeQueueSize(rExecutor.getCurrentQueueSize());\n-                queryResult.serviceTimeEWMA((long) rExecutor.getTaskExecutionEWMA());\n-            }", "originalCommit": "5f9055f1337144983a7be5bdf2ef17db29cdf7d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQyNTc0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/52280#discussion_r378425745", "bodyText": "You're absolutely right. I was too eager to delete code here. Will be interesting to see if any test catches this. Will rework this PR tomorrow.", "author": "ywelsch", "createdAt": "2020-02-12T18:14:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQyMzcxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2NzY0NA==", "url": "https://github.com/elastic/elasticsearch/pull/52280#discussion_r378767644", "bodyText": "I've addressed this now in 382d40b", "author": "ywelsch", "createdAt": "2020-02-13T10:16:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQyMzcxNg=="}], "type": "inlineReview", "revised_code": {"commit": "382d40b2ceb57e7d2dad7e5a0b955654605c78ab", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/query/QueryPhase.java b/server/src/main/java/org/elasticsearch/search/query/QueryPhase.java\nindex 801a2639dd1..f868a0d0970 100644\n--- a/server/src/main/java/org/elasticsearch/search/query/QueryPhase.java\n+++ b/server/src/main/java/org/elasticsearch/search/query/QueryPhase.java\n\n@@ -297,6 +300,13 @@ public class QueryPhase implements SearchPhase {\n                 restoreTopFieldDocs(queryResult, sortAndFormatsForRewrittenNumericSort);\n             }\n \n+            ExecutorService executor = searchContext.indexShard().getThreadPool().executor(ThreadPool.Names.SEARCH);\n+            assert executor instanceof EWMATrackingEsThreadPoolExecutor : executor.getClass().toString();\n+            if (executor instanceof EWMATrackingEsThreadPoolExecutor) {\n+                EWMATrackingEsThreadPoolExecutor rExecutor = (EWMATrackingEsThreadPoolExecutor) executor;\n+                queryResult.nodeQueueSize(rExecutor.getCurrentQueueSize());\n+                queryResult.serviceTimeEWMA((long) rExecutor.getTaskExecutionEWMA());\n+            }\n             return shouldRescore;\n         } catch (Exception e) {\n             throw new QueryPhaseExecutionException(searchContext.shardTarget(), \"Failed to execute main query\", e);\n"}}, {"oid": "382d40b2ceb57e7d2dad7e5a0b955654605c78ab", "url": "https://github.com/elastic/elasticsearch/commit/382d40b2ceb57e7d2dad7e5a0b955654605c78ab", "message": "Remove less", "committedDate": "2020-02-13T09:29:35Z", "type": "commit"}, {"oid": "36e6d4f0fb2de898c07e8aebad6694f75277e9bd", "url": "https://github.com/elastic/elasticsearch/commit/36e6d4f0fb2de898c07e8aebad6694f75277e9bd", "message": "compilation fix", "committedDate": "2020-02-13T10:16:04Z", "type": "commit"}, {"oid": "0b1bdad3c0632d1bb71d10e531cef772b01a022a", "url": "https://github.com/elastic/elasticsearch/commit/0b1bdad3c0632d1bb71d10e531cef772b01a022a", "message": "weaken assertion to accomodate tests that mock threadpool", "committedDate": "2020-02-13T11:08:01Z", "type": "commit"}]}