{"pr_number": 60356, "pr_title": "Increase Timeouts in SLMBlockingIntegTests", "pr_createdAt": "2020-07-29T06:12:53Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60356", "timeline": [{"oid": "ee53fe1126cb99fb2240f08b5467d86c169f77ad", "url": "https://github.com/elastic/elasticsearch/commit/ee53fe1126cb99fb2240f08b5467d86c169f77ad", "message": "Increase Timeouts in SLMBlockingIntegTests\n\nThe retention run goes through a number of steps and can randomly take more than 10s.\n=> increased timeout to 30s like we did in other spots in this test\n\nAlso, noticed that we had a hard wait of 10s in this test, removed it and adjusted following\nbusy assert in a way that can deal with a missing snapshot (from when the assert runs before\nthe snapshot was put into the CS).\n\nCloses #60336", "committedDate": "2020-07-29T06:10:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MTI2OQ==", "url": "https://github.com/elastic/elasticsearch/pull/60356#discussion_r462061269", "bodyText": "Since this runs twice, this saves almost 20s for this test suit overall :)", "author": "original-brownbear", "createdAt": "2020-07-29T06:13:25Z", "path": "x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/slm/SLMSnapshotBlockingIntegTests.java", "diffHunk": "@@ -340,14 +340,18 @@ private void testUnsuccessfulSnapshotRetention(boolean partialSuccess) throws Ex\n             logger.info(\"--> waiting for snapshot to complete\");\n             successfulSnapshotName.set(snapshotResponse.get().getSnapshotName());\n             assertNotNull(successfulSnapshotName.get());\n-            Thread.sleep(TimeValue.timeValueSeconds(10).millis());", "originalCommit": "ee53fe1126cb99fb2240f08b5467d86c169f77ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MTE5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/60356#discussion_r462351199", "bodyText": "Thanks, I think this was something I added for debugging originally and didn't remove properly.", "author": "gwbrown", "createdAt": "2020-07-29T14:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MTI2OQ=="}], "type": "inlineReview", "revised_code": null}]}