{"pr_number": 61779, "pr_title": "Improve reduction of terms aggregations", "pr_createdAt": "2020-09-01T11:56:17Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61779", "timeline": [{"oid": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2", "url": "https://github.com/elastic/elasticsearch/commit/c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2", "message": "Improve reduction of terms aggregations\n\nToday, the terms aggregation reduces multiple aggregations at once using a map\nto group same buckets together. This operation can be costly since it requires\nto lookup every bucket in a global map with no particular order.\nThis commit changes how term buckets are sorted by shards and partial reduces in\norder to be able to reduce results using a merge-sort strategy.\nFor bwc, results are merged with the legacy code if any of the aggregations use\na different sort (if it was returned by a node in prior versions).\n\nRelates #51857", "committedDate": "2020-09-01T11:54:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1ODc0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481158747", "bodyText": "topLevel? Maybe even make this a method one BucketOrder instead of this instanceof stuff?", "author": "nik9000", "createdAt": "2020-09-01T13:59:23Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java", "diffHunk": "@@ -369,6 +369,20 @@ public static boolean isKeyDesc(BucketOrder order) {\n         return isOrder(order, KEY_DESC);\n     }\n \n+    /**\n+     * Return the primary {@link BucketOrder} if the provided <code>order</code>\n+     * is a {@link CompoundOrder}.\n+     */\n+    public static BucketOrder unwrap(BucketOrder order) {", "originalCommit": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMyNjc3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481326777", "bodyText": "I removed the usage of this method in 99bc538", "author": "jimczi", "createdAt": "2020-09-01T17:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1ODc0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "99bc538cad46e88ab35a84ecb32db184fd2890e0", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java b/server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java\nindex 9e3a12d2775..c1e59442836 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java\n\n@@ -369,20 +369,6 @@ public abstract class InternalOrder extends BucketOrder {\n         return isOrder(order, KEY_DESC);\n     }\n \n-    /**\n-     * Return the primary {@link BucketOrder} if the provided <code>order</code>\n-     * is a {@link CompoundOrder}.\n-     */\n-    public static BucketOrder unwrap(BucketOrder order) {\n-        if (order instanceof CompoundOrder) {\n-            // check if its a compound order with the first element that matches\n-            List<BucketOrder> orders = ((CompoundOrder) order).orderElements;\n-            return orders.get(0);\n-        } else {\n-            return order;\n-        }\n-    }\n-\n     /**\n      * Determine if the ordering strategy matches the expected one.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1OTc2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481159762", "bodyText": "isKeyOrder is false here, right?", "author": "nik9000", "createdAt": "2020-09-01T14:00:44Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java", "diffHunk": "@@ -724,8 +727,15 @@ void buildSubAggs(StringTerms.Bucket[][] topBucketsPreOrd) throws IOException {\n \n         @Override\n         StringTerms buildResult(long owningBucketOrd, long otherDocCount, StringTerms.Bucket[] topBuckets) {\n-            return new StringTerms(name, order, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(),\n-                metadata(), format, bucketCountThresholds.getShardSize(), showTermDocCountError,\n+            final BucketOrder reduceOrder;\n+            if (isKeyOrder(order) == false) {\n+                reduceOrder = isKeyOrder(order) ? InternalOrder.unwrap(order) : InternalOrder.key(true);", "originalCommit": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMyNjU0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481326546", "bodyText": "thanks, that's a leftover, I pushed 99bc538", "author": "jimczi", "createdAt": "2020-09-01T17:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1OTc2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "99bc538cad46e88ab35a84ecb32db184fd2890e0", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java\nindex ab981eec633..a81fdc5e8fe 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java\n\n@@ -729,7 +729,7 @@ public class GlobalOrdinalsStringTermsAggregator extends AbstractStringTermsAggr\n         StringTerms buildResult(long owningBucketOrd, long otherDocCount, StringTerms.Bucket[] topBuckets) {\n             final BucketOrder reduceOrder;\n             if (isKeyOrder(order) == false) {\n-                reduceOrder = isKeyOrder(order) ? InternalOrder.unwrap(order) : InternalOrder.key(true);\n+                reduceOrder = InternalOrder.key(true);\n                 Arrays.sort(topBuckets, reduceOrder.comparator());\n             } else {\n                 reduceOrder = order;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE2MTIwNg==", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481161206", "bodyText": "Fine for now, but I feel like we have four or five of these and maybe it'd be worth merging their implementations.", "author": "nik9000", "createdAt": "2020-09-01T14:02:50Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java", "diffHunk": "@@ -189,44 +220,173 @@ protected final void doWriteTo(StreamOutput out) throws IOException {\n     @Override\n     public abstract B getBucketByKey(String term);\n \n-    @Override\n+    private static class IteratorAndCurrent<B extends InternalTerms.Bucket<B>> {", "originalCommit": "c97a1edcd25b0a8ebcee427185e4d3ddc8ef57b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM5OTQwNA==", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r482399404", "bodyText": "+1, I pushed d752ac7", "author": "jimczi", "createdAt": "2020-09-02T20:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE2MTIwNg=="}], "type": "inlineReview", "revised_code": {"commit": "3a45a6136ec355d446579bf7e5ed86e5a65ca772", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java\nindex 43f130e61a4..b3c1ea0109e 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java\n\n@@ -222,13 +222,11 @@ public abstract class InternalTerms<A extends InternalTerms<A, B>, B extends Int\n \n     private static class IteratorAndCurrent<B extends InternalTerms.Bucket<B>> {\n         private final Iterator<B> iterator;\n-        private final long docCountError;\n         private B current;\n \n-        IteratorAndCurrent(Iterator<B> iterator, long docCountError) {\n+        IteratorAndCurrent(Iterator<B> iterator) {\n             this.iterator = iterator;\n             this.current = iterator.next();\n-            this.docCountError = docCountError;\n         }\n     }\n \n"}}, {"oid": "99bc538cad46e88ab35a84ecb32db184fd2890e0", "url": "https://github.com/elastic/elasticsearch/commit/99bc538cad46e88ab35a84ecb32db184fd2890e0", "message": "address feedback", "committedDate": "2020-09-01T17:50:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzODIwMA==", "url": "https://github.com/elastic/elasticsearch/pull/61779#discussion_r481338200", "bodyText": "Leftover?", "author": "nik9000", "createdAt": "2020-09-01T18:13:29Z", "path": "server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java", "diffHunk": "@@ -35,6 +35,7 @@\n import org.elasticsearch.test.ESTestCase;\n import org.elasticsearch.test.InternalAggregationTestCase;\n import org.elasticsearch.test.VersionUtils;\n+import org.junit.Ignore;", "originalCommit": "99bc538cad46e88ab35a84ecb32db184fd2890e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a45a6136ec355d446579bf7e5ed86e5a65ca772", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java b/server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java\nindex 94005240ab3..91b9ae750be 100644\n--- a/server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java\n+++ b/server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java\n\n@@ -35,7 +35,6 @@ import org.elasticsearch.search.aggregations.pipeline.PipelineAggregator;\n import org.elasticsearch.test.ESTestCase;\n import org.elasticsearch.test.InternalAggregationTestCase;\n import org.elasticsearch.test.VersionUtils;\n-import org.junit.Ignore;\n \n import java.io.IOException;\n import java.util.ArrayList;\n"}}, {"oid": "3a45a6136ec355d446579bf7e5ed86e5a65ca772", "url": "https://github.com/elastic/elasticsearch/commit/3a45a6136ec355d446579bf7e5ed86e5a65ca772", "message": "fix the computation of doc_count_error", "committedDate": "2020-09-01T19:11:03Z", "type": "commit"}, {"oid": "f060ccd144d87b6e3be485bad59f93a6f63f92be", "url": "https://github.com/elastic/elasticsearch/commit/f060ccd144d87b6e3be485bad59f93a6f63f92be", "message": "handle empty buckets", "committedDate": "2020-09-01T19:23:03Z", "type": "commit"}, {"oid": "b027d817475714447bbbc0871dac7a96d0474ddd", "url": "https://github.com/elastic/elasticsearch/commit/b027d817475714447bbbc0871dac7a96d0474ddd", "message": "fix serialization test", "committedDate": "2020-09-01T19:56:45Z", "type": "commit"}, {"oid": "163ff53c6d5c2fd800a303b9e2d7f0dea0c97f0a", "url": "https://github.com/elastic/elasticsearch/commit/163ff53c6d5c2fd800a303b9e2d7f0dea0c97f0a", "message": "fix NPE", "committedDate": "2020-09-02T06:56:44Z", "type": "commit"}, {"oid": "d8f3a5d26cf91c4039d49b0d6debff762d3aebf0", "url": "https://github.com/elastic/elasticsearch/commit/d8f3a5d26cf91c4039d49b0d6debff762d3aebf0", "message": "remove version randomization in query search result tests", "committedDate": "2020-09-02T08:02:27Z", "type": "commit"}, {"oid": "646cfb606a0bfc7e1610124946018170c944b642", "url": "https://github.com/elastic/elasticsearch/commit/646cfb606a0bfc7e1610124946018170c944b642", "message": "we can prune the list on partial reduce if the aggregation is ordered by key and not filtered (minDocCount == 0)", "committedDate": "2020-09-02T11:41:42Z", "type": "commit"}, {"oid": "7af5dfb46ea822a010c5949715a701ca9d0be94b", "url": "https://github.com/elastic/elasticsearch/commit/7af5dfb46ea822a010c5949715a701ca9d0be94b", "message": "fix anither it", "committedDate": "2020-09-02T13:07:19Z", "type": "commit"}, {"oid": "038700d00b79a9477d3345d6e71ffca5e4145f74", "url": "https://github.com/elastic/elasticsearch/commit/038700d00b79a9477d3345d6e71ffca5e4145f74", "message": "unused import", "committedDate": "2020-09-02T13:27:31Z", "type": "commit"}, {"oid": "a1958054d4893411ac7f13cfe0abdede8c830c46", "url": "https://github.com/elastic/elasticsearch/commit/a1958054d4893411ac7f13cfe0abdede8c830c46", "message": "Merge branch 'master' into terms_aggs_merge_reduce", "committedDate": "2020-09-02T19:27:12Z", "type": "commit"}, {"oid": "d752ac7c09cea32aa753be06eb99ed628421d61f", "url": "https://github.com/elastic/elasticsearch/commit/d752ac7c09cea32aa753be06eb99ed628421d61f", "message": "generalize IteratorAndCurrent with histograms and terms", "committedDate": "2020-09-02T19:56:52Z", "type": "commit"}, {"oid": "902d2c934e3a09752544f6874600c87ccf9ec523", "url": "https://github.com/elastic/elasticsearch/commit/902d2c934e3a09752544f6874600c87ccf9ec523", "message": "fix assert", "committedDate": "2020-09-02T21:35:05Z", "type": "commit"}, {"oid": "72d2ded4d844e115aa68fe1230dc884413baa73e", "url": "https://github.com/elastic/elasticsearch/commit/72d2ded4d844e115aa68fe1230dc884413baa73e", "message": "missing next", "committedDate": "2020-09-02T22:29:04Z", "type": "commit"}, {"oid": "237c68627a17051ff9c3600ea7e66da8a8628af9", "url": "https://github.com/elastic/elasticsearch/commit/237c68627a17051ff9c3600ea7e66da8a8628af9", "message": "set the right comparator in assert", "committedDate": "2020-09-03T07:43:27Z", "type": "commit"}, {"oid": "ae5d7a8529219635c0ccb0f352c26218d516868a", "url": "https://github.com/elastic/elasticsearch/commit/ae5d7a8529219635c0ccb0f352c26218d516868a", "message": "Merge branch 'master' into terms_aggs_merge_reduce", "committedDate": "2020-09-03T12:53:08Z", "type": "commit"}, {"oid": "2d96c644e791034a705b244d28847090ef840a9b", "url": "https://github.com/elastic/elasticsearch/commit/2d96c644e791034a705b244d28847090ef840a9b", "message": "Merge branch 'master' into terms_aggs_merge_reduce", "committedDate": "2020-09-04T07:56:57Z", "type": "commit"}]}