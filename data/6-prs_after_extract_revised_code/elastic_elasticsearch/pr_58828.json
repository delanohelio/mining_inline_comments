{"pr_number": 58828, "pr_title": "Add basic searchable snapshots usage information", "pr_createdAt": "2020-07-01T12:12:00Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58828", "timeline": [{"oid": "140617ab8a5aa83b27c5d8c67e5fbaef7ba7c44b", "url": "https://github.com/elastic/elasticsearch/commit/140617ab8a5aa83b27c5d8c67e5fbaef7ba7c44b", "message": "Add searchable snapshots usage information", "committedDate": "2020-07-01T12:11:28Z", "type": "commit"}, {"oid": "ea3dfa184f9e872bb768d546ae76806d8fa13d64", "url": "https://github.com/elastic/elasticsearch/commit/ea3dfa184f9e872bb768d546ae76806d8fa13d64", "message": "fix", "committedDate": "2020-07-01T13:57:12Z", "type": "commit"}, {"oid": "7c27e89b33110d9d2edcb6e5e25f1f0d50cf9fc5", "url": "https://github.com/elastic/elasticsearch/commit/7c27e89b33110d9d2edcb6e5e25f1f0d50cf9fc5", "message": "sigh, formatter", "committedDate": "2020-07-01T14:25:52Z", "type": "commit"}, {"oid": "ed5de0155f8a15b405baffa65a6a733662f01e69", "url": "https://github.com/elastic/elasticsearch/commit/ed5de0155f8a15b405baffa65a6a733662f01e69", "message": "Merge branch 'master' into searchsnapusage", "committedDate": "2020-07-02T09:18:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzMTYxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/58828#discussion_r450031615", "bodyText": "Since it can't be disabled, we may as well inline this argument?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    super(XPackField.SEARCHABLE_SNAPSHOTS, available, enabled);\n          \n          \n            \n                    super(XPackField.SEARCHABLE_SNAPSHOTS, available, true);", "author": "DaveCTurner", "createdAt": "2020-07-06T07:26:07Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/searchablesnapshots/SearchableSnapshotFeatureSetUsage.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.searchablesnapshots;\n+\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ToXContent;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.xpack.core.XPackFeatureSet;\n+import org.elasticsearch.xpack.core.XPackField;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+public class SearchableSnapshotFeatureSetUsage extends XPackFeatureSet.Usage {\n+\n+    private final int numberOfSearchableSnapshotIndices;\n+\n+    public SearchableSnapshotFeatureSetUsage(StreamInput input) throws IOException {\n+        super(input);\n+        numberOfSearchableSnapshotIndices = input.readVInt();\n+    }\n+\n+    @Override\n+    public Version getMinimalSupportedVersion() {\n+        return Version.V_8_0_0;\n+    }\n+\n+    @Override\n+    public void writeTo(StreamOutput out) throws IOException {\n+        super.writeTo(out);\n+        out.writeVInt(numberOfSearchableSnapshotIndices);\n+    }\n+\n+    public SearchableSnapshotFeatureSetUsage(boolean available, boolean enabled,\n+                                             int numberOfSearchableSnapshotIndices) {\n+        super(XPackField.SEARCHABLE_SNAPSHOTS, available, enabled);", "originalCommit": "ed5de0155f8a15b405baffa65a6a733662f01e69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5NDIzOA==", "url": "https://github.com/elastic/elasticsearch/pull/58828#discussion_r450194238", "bodyText": "sure, done in af2b703", "author": "ywelsch", "createdAt": "2020-07-06T12:44:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzMTYxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "af2b70304b50b4b62c95b4aa492d3952c7e57eee", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/searchablesnapshots/SearchableSnapshotFeatureSetUsage.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/searchablesnapshots/SearchableSnapshotFeatureSetUsage.java\nindex b802794e82e..76fc31a1597 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/searchablesnapshots/SearchableSnapshotFeatureSetUsage.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/searchablesnapshots/SearchableSnapshotFeatureSetUsage.java\n\n@@ -37,9 +37,9 @@ public class SearchableSnapshotFeatureSetUsage extends XPackFeatureSet.Usage {\n         out.writeVInt(numberOfSearchableSnapshotIndices);\n     }\n \n-    public SearchableSnapshotFeatureSetUsage(boolean available, boolean enabled,\n+    public SearchableSnapshotFeatureSetUsage(boolean available,\n                                              int numberOfSearchableSnapshotIndices) {\n-        super(XPackField.SEARCHABLE_SNAPSHOTS, available, enabled);\n+        super(XPackField.SEARCHABLE_SNAPSHOTS, available, true);\n         this.numberOfSearchableSnapshotIndices = numberOfSearchableSnapshotIndices;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzMzk0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/58828#discussion_r450033949", "bodyText": "Would the tests all still pass even without this vital line? Would be good to have something that checks we do return something other than zero here.", "author": "DaveCTurner", "createdAt": "2020-07-06T07:31:08Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsUsageTransportAction.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.searchablesnapshots;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.support.ActionFilters;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.license.XPackLicenseState;\n+import org.elasticsearch.protocol.xpack.XPackUsageRequest;\n+import org.elasticsearch.tasks.Task;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.elasticsearch.transport.TransportService;\n+import org.elasticsearch.xpack.core.action.XPackUsageFeatureAction;\n+import org.elasticsearch.xpack.core.action.XPackUsageFeatureResponse;\n+import org.elasticsearch.xpack.core.action.XPackUsageFeatureTransportAction;\n+import org.elasticsearch.xpack.core.searchablesnapshots.SearchableSnapshotFeatureSetUsage;\n+\n+public class SearchableSnapshotsUsageTransportAction extends XPackUsageFeatureTransportAction {\n+\n+    private final XPackLicenseState licenseState;\n+\n+    @Inject\n+    public SearchableSnapshotsUsageTransportAction(\n+        TransportService transportService,\n+        ClusterService clusterService,\n+        ThreadPool threadPool,\n+        ActionFilters actionFilters,\n+        IndexNameExpressionResolver indexNameExpressionResolver,\n+        XPackLicenseState licenseState\n+    ) {\n+        super(\n+            XPackUsageFeatureAction.SEARCHABLE_SNAPSHOTS.name(),\n+            transportService,\n+            clusterService,\n+            threadPool,\n+            actionFilters,\n+            indexNameExpressionResolver\n+        );\n+        this.licenseState = licenseState;\n+    }\n+\n+    @Override\n+    protected void masterOperation(\n+        Task task,\n+        XPackUsageRequest request,\n+        ClusterState state,\n+        ActionListener<XPackUsageFeatureResponse> listener\n+    ) {\n+        int numSnapIndices = 0;\n+        for (IndexMetadata indexMetadata : state.metadata()) {\n+            if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexMetadata.getSettings())) {\n+                numSnapIndices++;", "originalCommit": "ed5de0155f8a15b405baffa65a6a733662f01e69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE5MjkxMw==", "url": "https://github.com/elastic/elasticsearch/pull/58828#discussion_r450192913", "bodyText": "I've added a test in 0839e24", "author": "ywelsch", "createdAt": "2020-07-06T12:41:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzMzk0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "af2b70304b50b4b62c95b4aa492d3952c7e57eee", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsUsageTransportAction.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsUsageTransportAction.java\nindex a9cc69fd390..48013ece432 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsUsageTransportAction.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsUsageTransportAction.java\n\n@@ -64,7 +64,6 @@ public class SearchableSnapshotsUsageTransportAction extends XPackUsageFeatureTr\n             new XPackUsageFeatureResponse(\n                 new SearchableSnapshotFeatureSetUsage(\n                     licenseState.isAllowed(XPackLicenseState.Feature.SEARCHABLE_SNAPSHOTS),\n-                    true,\n                     numSnapIndices\n                 )\n             )\n"}}, {"oid": "0839e244675b70c8b38c24ef5bd39acff59ae268", "url": "https://github.com/elastic/elasticsearch/commit/0839e244675b70c8b38c24ef5bd39acff59ae268", "message": "Add usage test", "committedDate": "2020-07-06T12:40:45Z", "type": "commit"}, {"oid": "0838ab71fe378fc7797271f4093d9d3567ef7a28", "url": "https://github.com/elastic/elasticsearch/commit/0838ab71fe378fc7797271f4093d9d3567ef7a28", "message": "Merge remote-tracking branch 'elastic/master' into searchsnapusage", "committedDate": "2020-07-06T12:40:49Z", "type": "commit"}, {"oid": "af2b70304b50b4b62c95b4aa492d3952c7e57eee", "url": "https://github.com/elastic/elasticsearch/commit/af2b70304b50b4b62c95b4aa492d3952c7e57eee", "message": "inline enabled", "committedDate": "2020-07-06T12:43:39Z", "type": "commit"}, {"oid": "8d79687c8918f1baf8e6372347695ca5adca8df5", "url": "https://github.com/elastic/elasticsearch/commit/8d79687c8918f1baf8e6372347695ca5adca8df5", "message": "Merge remote-tracking branch 'elastic/master' into searchsnapusage", "committedDate": "2020-07-06T15:02:51Z", "type": "commit"}]}