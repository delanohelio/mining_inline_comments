{"pr_number": 53132, "pr_title": "VS refactoring: convert Boxplot to new registry", "pr_createdAt": "2020-03-04T19:05:15Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53132", "timeline": [{"oid": "ed6b76cdf90098e693682f22822ced970ac3446d", "url": "https://github.com/elastic/elasticsearch/commit/ed6b76cdf90098e693682f22822ced970ac3446d", "message": "Convert Boxplot to new VS registry", "committedDate": "2020-03-04T19:01:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMzUyMg==", "url": "https://github.com/elastic/elasticsearch/pull/53132#discussion_r387913522", "bodyText": "@talevy showed me that in cases like this, we can use a lambda with a type cast.  Since BoxplotAggregator already just takes a ValuesSource directly (as opposed to needing a cast), I think we can just say (BoxplotAggregationSupplier) BoxplotAggregator::new here.  We'll also need to add the @FunctionalInterface annotation to BoxplotAggregationSupplier.", "author": "not-napoleon", "createdAt": "2020-03-04T20:23:18Z", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/boxplot/BoxplotAggregatorFactory.java", "diffHunk": "@@ -24,6 +29,24 @@\n \n     private final double compression;\n \n+    static void registerAggregators(ValuesSourceRegistry valuesSourceRegistry) {\n+        valuesSourceRegistry.register(BoxplotAggregationBuilder.NAME,\n+            CoreValuesSourceType.NUMERIC, new BoxplotAggregatorSupplier() {\n+                @Override", "originalCommit": "ed6b76cdf90098e693682f22822ced970ac3446d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUwNDY1OA==", "url": "https://github.com/elastic/elasticsearch/pull/53132#discussion_r388504658", "bodyText": "\ud83d\udc4d", "author": "polyfractal", "createdAt": "2020-03-05T19:13:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMzUyMg=="}], "type": "inlineReview", "revised_code": {"commit": "2093d38398a9885fee94c981f5cbf09e149d5f18", "chunk": "diff --git a/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/boxplot/BoxplotAggregatorFactory.java b/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/boxplot/BoxplotAggregatorFactory.java\nindex 08e542f9112..af014cae54b 100644\n--- a/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/boxplot/BoxplotAggregatorFactory.java\n+++ b/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/boxplot/BoxplotAggregatorFactory.java\n\n@@ -31,20 +31,8 @@ public class BoxplotAggregatorFactory extends ValuesSourceAggregatorFactory {\n \n     static void registerAggregators(ValuesSourceRegistry valuesSourceRegistry) {\n         valuesSourceRegistry.register(BoxplotAggregationBuilder.NAME,\n-            CoreValuesSourceType.NUMERIC, new BoxplotAggregatorSupplier() {\n-                @Override\n-                public Aggregator build(String name,\n-                                        ValuesSource valuesSource,\n-                                        DocValueFormat formatter,\n-                                        double compression,\n-                                        SearchContext context,\n-                                        Aggregator parent,\n-                                        List<PipelineAggregator> pipelineAggregators,\n-                                        Map<String, Object> metaData) throws IOException {\n-                    return new BoxplotAggregator(name, valuesSource, formatter, compression, context, parent,\n-                        pipelineAggregators, metaData);\n-                }\n-            });\n+            List.of(CoreValuesSourceType.NUMERIC, CoreValuesSourceType.HISTOGRAM),\n+            (BoxplotAggregatorSupplier) BoxplotAggregator::new);\n     }\n \n     BoxplotAggregatorFactory(String name,\n"}}, {"oid": "2093d38398a9885fee94c981f5cbf09e149d5f18", "url": "https://github.com/elastic/elasticsearch/commit/2093d38398a9885fee94c981f5cbf09e149d5f18", "message": "Add missing HISTOGRAM supported VST, address review comments", "committedDate": "2020-03-05T19:12:48Z", "type": "commit"}, {"oid": "ef30f2e61e53e65445f1fa7de0d60f56a67c260a", "url": "https://github.com/elastic/elasticsearch/commit/ef30f2e61e53e65445f1fa7de0d60f56a67c260a", "message": "checkstyle", "committedDate": "2020-03-05T19:31:04Z", "type": "commit"}]}