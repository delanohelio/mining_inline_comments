{"pr_number": 61255, "pr_title": "Report more details of unobtainable ShardLock", "pr_createdAt": "2020-08-18T09:03:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61255", "timeline": [{"oid": "00666f4a2f2a898556143ff9c3c50b3c227606b5", "url": "https://github.com/elastic/elasticsearch/commit/00666f4a2f2a898556143ff9c3c50b3c227606b5", "message": "Report more details of unobtainable ShardLock\n\nToday a common reason for a `ShardLockObtainFailedException` is when a\nshard is removed from a node and then assigned straight back to it again\nbefore the node has had a chance to shut the previous shard instance\ndown. For instance, this can happen if a node briefly leaves the cluster\nholding a primary with no in-sync replicas.\n\nThe message in this case is typically as follows:\n\n    obtaining shard lock timed out after 5000ms, previous lock details: [shard creation] trying to lock for [shard creation]\n\nThis is pretty hard to interpret, and doesn't raise the important\nquestion: \"why didn't the shard shut down sooner?\"\n\nWith this change we reword the message a bit, report the age of the\nshard lock, and adjust the details to report that the lock is held by a\nclosing shard:\n\n    obtaining shard lock for [starting shard] timed out after [5000ms], lock already held for [closing shard] with age [12345ms]\n\nRelates #38807", "committedDate": "2020-08-18T08:58:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1OTMzMA==", "url": "https://github.com/elastic/elasticsearch/pull/61255#discussion_r472059330", "bodyText": "NIT: setDetails(details);", "author": "original-brownbear", "createdAt": "2020-08-18T09:55:00Z", "path": "server/src/main/java/org/elasticsearch/env/NodeEnvironment.java", "diffHunk": "@@ -854,17 +860,23 @@ private void decWaitCount() {\n         void acquire(long timeoutInMillis, final String details) throws ShardLockObtainFailedException {\n             try {\n                 if (mutex.tryAcquire(timeoutInMillis, TimeUnit.MILLISECONDS)) {\n-                    lockDetails = details;\n+                    lockDetails = Tuple.tuple(System.nanoTime(), details);", "originalCommit": "00666f4a2f2a898556143ff9c3c50b3c227606b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "48bf874ec27eb0a8debd30d6a798331c155249e8", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/env/NodeEnvironment.java b/server/src/main/java/org/elasticsearch/env/NodeEnvironment.java\nindex 208d59cabc7..348de81ade4 100644\n--- a/server/src/main/java/org/elasticsearch/env/NodeEnvironment.java\n+++ b/server/src/main/java/org/elasticsearch/env/NodeEnvironment.java\n\n@@ -860,7 +860,7 @@ public final class NodeEnvironment  implements Closeable {\n         void acquire(long timeoutInMillis, final String details) throws ShardLockObtainFailedException {\n             try {\n                 if (mutex.tryAcquire(timeoutInMillis, TimeUnit.MILLISECONDS)) {\n-                    lockDetails = Tuple.tuple(System.nanoTime(), details);\n+                    setDetails(details);\n                 } else {\n                     final Tuple<Long, String> lockDetails = this.lockDetails; // single volatile read\n                     throw new ShardLockObtainFailedException(shardId,\n"}}, {"oid": "ab94d42dbbc66c46405d911a4483593b0c0acb4a", "url": "https://github.com/elastic/elasticsearch/commit/ab94d42dbbc66c46405d911a4483593b0c0acb4a", "message": "Merge branch 'master' into 2020-08-18-log-shard-lock-age", "committedDate": "2020-08-18T09:59:49Z", "type": "commit"}, {"oid": "48bf874ec27eb0a8debd30d6a798331c155249e8", "url": "https://github.com/elastic/elasticsearch/commit/48bf874ec27eb0a8debd30d6a798331c155249e8", "message": "CR", "committedDate": "2020-08-18T10:00:42Z", "type": "commit"}]}