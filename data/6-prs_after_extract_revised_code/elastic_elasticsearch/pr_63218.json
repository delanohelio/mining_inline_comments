{"pr_number": 63218, "pr_title": "EQL: Remove case_sensitive request option and make eql to be case sensitive by default", "pr_createdAt": "2020-10-03T23:54:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63218", "timeline": [{"oid": "736616bc6bc6ba6457cd549a8431a15944d6ab4b", "url": "https://github.com/elastic/elasticsearch/commit/736616bc6bc6ba6457cd549a8431a15944d6ab4b", "message": "Remove case_sensitive request option\nMake EQL case sensitive by default and adapt some of the string functions\nRemove the case sensitive option from Between string function\nAdd case_insensitive option to term and wildcard queries usage", "committedDate": "2020-10-03T23:47:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1ODM1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63218#discussion_r499358359", "bodyText": "leftover?", "author": "matriv", "createdAt": "2020-10-05T05:54:16Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/expression/function/scalar/string/Between.java", "diffHunk": "@@ -73,12 +73,12 @@ protected TypeResolution resolveType() {\n             return resolution;\n         }\n \n-        resolution = isBoolean(greedy, sourceText(), Expressions.ParamOrdinal.FOURTH);\n-        if (resolution.unresolved()) {\n-            return resolution;\n-        }\n-\n-        return isBoolean(caseSensitive, sourceText(), Expressions.ParamOrdinal.FIFTH);\n+        return isBoolean(greedy, sourceText(), Expressions.ParamOrdinal.FOURTH);\n+//        if (resolution.unresolved()) {", "originalCommit": "736616bc6bc6ba6457cd549a8431a15944d6ab4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU2ODQ1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/63218#discussion_r499568451", "bodyText": "No, I wanted to keep it there on purpose. The way the functions deal with case sensitivity is undecided still.", "author": "astefan", "createdAt": "2020-10-05T12:42:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1ODM1OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQzMDAzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/63218#discussion_r499430031", "bodyText": "Same here - for older version we should write true (always case sensitive).", "author": "costin", "createdAt": "2020-10-05T08:35:03Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/action/EqlSearchRequest.java", "diffHunk": "@@ -312,7 +299,6 @@ public void writeTo(StreamOutput out) throws IOException {\n             out.writeOptionalTimeValue(keepAlive);\n             out.writeBoolean(keepOnCompletion);\n         }\n-        out.writeBoolean(isCaseSensitive);", "originalCommit": "736616bc6bc6ba6457cd549a8431a15944d6ab4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQzMDYyMA==", "url": "https://github.com/elastic/elasticsearch/pull/63218#discussion_r499430620", "bodyText": "This needs to be versions for upgrade scenarios. On the 7.x branch, there should be a :\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    }\n          \n          \n            \n            \t\tif (in.getVersion().before(V.7_10_0)) {\n          \n          \n            \n            \t\t\tin.readBoolean();\n          \n          \n            \n            \t\t}\n          \n      \n    \n    \n  \n\nIn master this won't be a problem since upgrades will happen only from the latest 7.x", "author": "costin", "createdAt": "2020-10-05T08:36:07Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/action/EqlSearchRequest.java", "diffHunk": "@@ -103,7 +100,6 @@ public EqlSearchRequest(StreamInput in) throws IOException {\n             this.keepAlive = in.readOptionalTimeValue();\n             this.keepOnCompletion = in.readBoolean();\n         }", "originalCommit": "736616bc6bc6ba6457cd549a8431a15944d6ab4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}