{"pr_number": 54068, "pr_title": "[Transform] Transform optmize date histogram", "pr_createdAt": "2020-03-24T10:49:53Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54068", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA2Nzc2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397067765", "bodyText": "Suggested change", "author": "benwtrent", "createdAt": "2020-03-24T11:02:44Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -315,9 +345,13 @@ public int hashCode() {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets) {\n-        // no need for an extra range filter as this is already done by checkpoints\n-        return null;\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets, long synchronizationTimestamp) {\n+        if (synchronizationTimestamp > 0) {\n+", "originalCommit": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c2ed35927896e97d43c20c5b45802b21aa71b88", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\nindex 7e50d976854..46d7727791e 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n\n@@ -345,9 +344,12 @@ public class DateHistogramGroupSource extends SingleGroupSource {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets, long synchronizationTimestamp) {\n-        if (synchronizationTimestamp > 0) {\n-\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(\n+        Set<String> changedBuckets,\n+        String synchronizationField,\n+        long synchronizationTimestamp\n+    ) {\n+        if (synchronizationField != null && field != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {\n             return new RangeQueryBuilder(field).gte(rounding.round(synchronizationTimestamp)).format(\"epoch_millis\");\n         } else {\n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4NzE5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397087196", "bodyText": "Do we know if this rounding will always round down? I think we will want it to always round down. If it does not, then it might be prudent to do synchronizationTimestamp - interval.getMilliseconds() in the rounding.", "author": "benwtrent", "createdAt": "2020-03-24T11:38:12Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -315,9 +345,13 @@ public int hashCode() {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets) {\n-        // no need for an extra range filter as this is already done by checkpoints\n-        return null;\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets, long synchronizationTimestamp) {\n+        if (synchronizationTimestamp > 0) {\n+\n+            return new RangeQueryBuilder(field).gte(rounding.round(synchronizationTimestamp)).format(\"epoch_millis\");", "originalCommit": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQzNjAwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397436001", "bodyText": "sorry, forgot to answer: yes it does, this method is used for all histogram aggregations. For getting the next bucket there is nextRoundingValue.", "author": "hendrikmuhs", "createdAt": "2020-03-24T20:21:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4NzE5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9c2ed35927896e97d43c20c5b45802b21aa71b88", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\nindex 7e50d976854..46d7727791e 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n\n@@ -345,9 +344,12 @@ public class DateHistogramGroupSource extends SingleGroupSource {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets, long synchronizationTimestamp) {\n-        if (synchronizationTimestamp > 0) {\n-\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(\n+        Set<String> changedBuckets,\n+        String synchronizationField,\n+        long synchronizationTimestamp\n+    ) {\n+        if (synchronizationField != null && field != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {\n             return new RangeQueryBuilder(field).gte(rounding.round(synchronizationTimestamp)).format(\"epoch_millis\");\n         } else {\n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4OTA5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397089091", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final Rounding.Builder roundingBuilder;\n          \n          \n            \n                    if (timeUnit != null) {\n          \n          \n            \n                        roundingBuilder = new Rounding.Builder(timeUnit);\n          \n          \n            \n            \n          \n          \n            \n                    } else {\n          \n          \n            \n                        roundingBuilder = new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));\n          \n          \n            \n                    }\n          \n          \n            \n                    final Rounding.Builder roundingBuilder = timeUnit != null ? new Rounding.Builder(timeUnit) : new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));", "author": "benwtrent", "createdAt": "2020-03-24T11:41:52Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -195,11 +208,27 @@ private void writeInterval(Interval interval, StreamOutput out) throws IOExcepti\n     private static final ConstructingObjectParser<DateHistogramGroupSource, Void> LENIENT_PARSER = createParser(true);\n \n     private final Interval interval;\n-    private ZoneId timeZone;\n+    private final ZoneId timeZone;\n+    private Rounding rounding;\n \n-    public DateHistogramGroupSource(String field, ScriptConfig scriptConfig, Interval interval) {\n+    public DateHistogramGroupSource(String field, ScriptConfig scriptConfig, Interval interval, ZoneId timeZone) {\n         super(field, scriptConfig);\n         this.interval = interval;\n+        this.timeZone = timeZone;\n+\n+        Rounding.DateTimeUnit timeUnit = DateHistogramAggregationBuilder.DATE_FIELD_UNITS.get(interval.toString());\n+        final Rounding.Builder roundingBuilder;\n+        if (timeUnit != null) {\n+            roundingBuilder = new Rounding.Builder(timeUnit);\n+\n+        } else {\n+            roundingBuilder = new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));\n+        }", "originalCommit": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c2ed35927896e97d43c20c5b45802b21aa71b88", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\nindex 7e50d976854..46d7727791e 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n\n@@ -220,9 +220,8 @@ public class DateHistogramGroupSource extends SingleGroupSource {\n         final Rounding.Builder roundingBuilder;\n         if (timeUnit != null) {\n             roundingBuilder = new Rounding.Builder(timeUnit);\n-\n         } else {\n-            roundingBuilder = new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));\n+            roundingBuilder = new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), interval.getName()));\n         }\n \n         if (timeZone != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEwNTUzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397105531", "bodyText": "It seems we are needlessly adding an if branch. I think we should probably just supply both the synchronizationField and the lastSynchronizationCheckpoint to getIncrementalBucketUpdateFilterQuery.\n(similar comment for the more than one group source entry)", "author": "benwtrent", "createdAt": "2020-03-24T12:12:18Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java", "diffHunk": "@@ -189,44 +189,37 @@ public boolean supportsIncrementalBucketUpdate() {\n         );\n     }\n \n-    public QueryBuilder filterBuckets(Map<String, Set<String>> changedBuckets) {\n-\n-        if (changedBuckets == null || changedBuckets.isEmpty()) {\n-            return null;\n-        }\n+    public QueryBuilder filterBuckets(\n+        Map<String, Set<String>> changedBuckets,\n+        String synchronizationField,\n+        long lastSynchronizationCheckpoint\n+    ) {\n \n         if (config.getGroupConfig().getGroups().size() == 1) {\n             Entry<String, SingleGroupSource> entry = config.getGroupConfig().getGroups().entrySet().iterator().next();\n-            // it should not be possible to get into this code path\n-            assert (entry.getValue().supportsIncrementalBucketUpdate());\n \n             logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());\n-            if (changedBuckets.containsKey(entry.getKey())) {\n-                return entry.getValue().getIncrementalBucketUpdateFilterQuery(changedBuckets.get(entry.getKey()));\n-            } else {\n-                // should never happen\n-                throw new RuntimeException(\"Could not find bucket value for key \" + entry.getKey());\n-            }\n+            Set<String> changedBucketsByGroup = changedBuckets.get(entry.getKey());\n+\n+            // important: the fields must match to apply this optimization\n+            long synchronizationTimestamp = entry.getKey().equals(synchronizationField) ? lastSynchronizationCheckpoint : 0;", "originalCommit": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0NDM3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397144379", "bodyText": "\ud83d\udc4d This is a bug, entry.getKey() returns the name of the group, not the field that is used (entry.getValue().getField()), but I think I will follow your suggestion and pass it in and let the GroupSource decide what to do.", "author": "hendrikmuhs", "createdAt": "2020-03-24T13:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEwNTUzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9c2ed35927896e97d43c20c5b45802b21aa71b88", "chunk": "diff --git a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java\nindex 6863c31cfb7..1e174dbdbad 100644\n--- a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java\n+++ b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java\n\n@@ -194,28 +193,20 @@ public class Pivot {\n         String synchronizationField,\n         long lastSynchronizationCheckpoint\n     ) {\n-\n         if (config.getGroupConfig().getGroups().size() == 1) {\n             Entry<String, SingleGroupSource> entry = config.getGroupConfig().getGroups().entrySet().iterator().next();\n-\n             logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());\n             Set<String> changedBucketsByGroup = changedBuckets.get(entry.getKey());\n-\n-            // important: the fields must match to apply this optimization\n-            long synchronizationTimestamp = entry.getKey().equals(synchronizationField) ? lastSynchronizationCheckpoint : 0;\n-\n-            return entry.getValue().getIncrementalBucketUpdateFilterQuery(changedBucketsByGroup, synchronizationTimestamp);\n+            return entry.getValue()\n+                .getIncrementalBucketUpdateFilterQuery(changedBucketsByGroup, synchronizationField, lastSynchronizationCheckpoint);\n         }\n \n         // else: more than 1 group by, need to nest it\n         BoolQueryBuilder filteredQuery = new BoolQueryBuilder();\n         for (Entry<String, SingleGroupSource> entry : config.getGroupConfig().getGroups().entrySet()) {\n             Set<String> changedBucketsByGroup = changedBuckets.get(entry.getKey());\n-            // important: the fields must match to apply this optimization\n-            long synchronizationTimestamp = entry.getKey().equals(synchronizationField) ? lastSynchronizationCheckpoint : 0;\n-\n             QueryBuilder sourceQueryFilter = entry.getValue()\n-                .getIncrementalBucketUpdateFilterQuery(changedBucketsByGroup, synchronizationTimestamp);\n+                .getIncrementalBucketUpdateFilterQuery(changedBucketsByGroup, synchronizationField, lastSynchronizationCheckpoint);\n             // the source might not define a filter optimization\n             if (sourceQueryFilter != null) {\n                 filteredQuery.filter(sourceQueryFilter);\n"}}, {"oid": "9c2ed35927896e97d43c20c5b45802b21aa71b88", "url": "https://github.com/elastic/elasticsearch/commit/9c2ed35927896e97d43c20c5b45802b21aa71b88", "message": "move synchronizationField into group source", "committedDate": "2020-03-24T21:26:33Z", "type": "forcePushed"}, {"oid": "9690e8098f3a92af61840b0dfd2e219e812fe72e", "url": "https://github.com/elastic/elasticsearch/commit/9690e8098f3a92af61840b0dfd2e219e812fe72e", "message": "make date histogram group source immutable by moving timezone into the constructor", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "99fca93ab41b5e89baee244495b97c8e0619f56e", "url": "https://github.com/elastic/elasticsearch/commit/99fca93ab41b5e89baee244495b97c8e0619f56e", "message": "optimize date_histogram continuous transforms by limiting updates to\nrecent buckets according to sync configuration", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "d7ebaf50d6d5f104090bc3a0e1a4a6e07cd56b38", "url": "https://github.com/elastic/elasticsearch/commit/d7ebaf50d6d5f104090bc3a0e1a4a6e07cd56b38", "message": "remove dead code", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "5eddcdea8a7d82ac41ecb156b467d44a014fada0", "url": "https://github.com/elastic/elasticsearch/commit/5eddcdea8a7d82ac41ecb156b467d44a014fada0", "message": "move synchronizationField into group source", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "e10111b724490c3d3f7391a5ac8b895f50eaf294", "url": "https://github.com/elastic/elasticsearch/commit/e10111b724490c3d3f7391a5ac8b895f50eaf294", "message": "add some more date histogram rounding test cases", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "80d94133ed508acde7634f710f0a03b38f4e168d", "url": "https://github.com/elastic/elasticsearch/commit/80d94133ed508acde7634f710f0a03b38f4e168d", "message": "revert methode rename", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "80d94133ed508acde7634f710f0a03b38f4e168d", "url": "https://github.com/elastic/elasticsearch/commit/80d94133ed508acde7634f710f0a03b38f4e168d", "message": "revert methode rename", "committedDate": "2020-03-26T08:22:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwNTY2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r398505665", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (synchronizationField != null && field != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {\n          \n          \n            \n                    if (synchronizationField != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {", "author": "benwtrent", "createdAt": "2020-03-26T11:38:48Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -315,9 +344,16 @@ public int hashCode() {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets) {\n-        // no need for an extra range filter as this is already done by checkpoints\n-        return null;\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(\n+        Set<String> changedBuckets,\n+        String synchronizationField,\n+        long synchronizationTimestamp\n+    ) {\n+        if (synchronizationField != null && field != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {", "originalCommit": "80d94133ed508acde7634f710f0a03b38f4e168d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f7cd216a0982afe3fa9cb0dd07343506b625ef9a", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\nindex 46d7727791e..f61497e31d3 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n\n@@ -349,7 +349,7 @@ public class DateHistogramGroupSource extends SingleGroupSource {\n         String synchronizationField,\n         long synchronizationTimestamp\n     ) {\n-        if (synchronizationField != null && field != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {\n+        if (synchronizationField != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {\n             return new RangeQueryBuilder(field).gte(rounding.round(synchronizationTimestamp)).format(\"epoch_millis\");\n         } else {\n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwODk3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r398508973", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());\n          \n          \n            \n                        logger.trace(() -> new ParameterizedMessage(\"filter by bucket: {}/{}\", entry.getKey(), entry.getValue().getField()));\n          \n      \n    \n    \n  \n\nnit", "author": "benwtrent", "createdAt": "2020-03-26T11:45:06Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java", "diffHunk": "@@ -189,44 +188,31 @@ public boolean supportsIncrementalBucketUpdate() {\n         );\n     }\n \n-    public QueryBuilder filterBuckets(Map<String, Set<String>> changedBuckets) {\n-\n-        if (changedBuckets == null || changedBuckets.isEmpty()) {\n-            return null;\n-        }\n+    public QueryBuilder filterBuckets(\n+        Map<String, Set<String>> changedBuckets,\n+        String synchronizationField,\n+        long lastSynchronizationCheckpoint\n+    ) {\n+        assert changedBuckets != null;\n \n         if (config.getGroupConfig().getGroups().size() == 1) {\n             Entry<String, SingleGroupSource> entry = config.getGroupConfig().getGroups().entrySet().iterator().next();\n-            // it should not be possible to get into this code path\n-            assert (entry.getValue().supportsIncrementalBucketUpdate());\n-\n             logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());", "originalCommit": "80d94133ed508acde7634f710f0a03b38f4e168d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e4389bf1a6d09ac5fb5d3bb3a61b33fbe52d5f74", "chunk": "diff --git a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java\nindex 6c8b11e3b9c..d11059e97e2 100644\n--- a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java\n+++ b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java\n\n@@ -197,7 +197,7 @@ public class Pivot {\n \n         if (config.getGroupConfig().getGroups().size() == 1) {\n             Entry<String, SingleGroupSource> entry = config.getGroupConfig().getGroups().entrySet().iterator().next();\n-            logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());\n+            logger.trace(() -> new ParameterizedMessage(\"filter by bucket: {}/{}\", entry.getKey(), entry.getValue().getField()));\n             Set<String> changedBucketsByGroup = changedBuckets.get(entry.getKey());\n             return entry.getValue()\n                 .getIncrementalBucketUpdateFilterQuery(changedBucketsByGroup, synchronizationField, lastSynchronizationCheckpoint);\n"}}, {"oid": "e4389bf1a6d09ac5fb5d3bb3a61b33fbe52d5f74", "url": "https://github.com/elastic/elasticsearch/commit/e4389bf1a6d09ac5fb5d3bb3a61b33fbe52d5f74", "message": "Update x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java\n\nCo-Authored-By: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-03-26T13:11:44Z", "type": "commit"}, {"oid": "f7cd216a0982afe3fa9cb0dd07343506b625ef9a", "url": "https://github.com/elastic/elasticsearch/commit/f7cd216a0982afe3fa9cb0dd07343506b625ef9a", "message": "Update x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n\nCo-Authored-By: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-03-26T13:11:57Z", "type": "commit"}, {"oid": "a3595e6c0155143a1dcd3ceca14c0a054e280a33", "url": "https://github.com/elastic/elasticsearch/commit/a3595e6c0155143a1dcd3ceca14c0a054e280a33", "message": "fix import", "committedDate": "2020-03-26T13:43:32Z", "type": "commit"}]}