{"pr_number": 58928, "pr_title": "Improve auditing of API key authentication", "pr_createdAt": "2020-07-02T14:50:47Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58928", "timeline": [{"oid": "9936355067fa98591dc3fc48e1018d0b382b2353", "url": "https://github.com/elastic/elasticsearch/commit/9936355067fa98591dc3fc48e1018d0b382b2353", "message": "WIP", "committedDate": "2020-06-15T09:22:56Z", "type": "commit"}, {"oid": "9d4029bff1a980fbbcddff4b1a5ec753e96aed95", "url": "https://github.com/elastic/elasticsearch/commit/9d4029bff1a980fbbcddff4b1a5ec753e96aed95", "message": "Merge branch 'master' into audit_key_usage", "committedDate": "2020-06-15T15:34:31Z", "type": "commit"}, {"oid": "e337dbef5b58010c2c697cb296d8de9e13327469", "url": "https://github.com/elastic/elasticsearch/commit/e337dbef5b58010c2c697cb296d8de9e13327469", "message": "WIP mhhhmm", "committedDate": "2020-06-15T18:10:10Z", "type": "commit"}, {"oid": "bb4b8eafd4660f178f8ceffe9c98d2fc73792865", "url": "https://github.com/elastic/elasticsearch/commit/bb4b8eafd4660f178f8ceffe9c98d2fc73792865", "message": "WIP mhmm", "committedDate": "2020-06-15T18:20:40Z", "type": "commit"}, {"oid": "df1fee9bce5ddcdf8c826b11c2fef73abfda9387", "url": "https://github.com/elastic/elasticsearch/commit/df1fee9bce5ddcdf8c826b11c2fef73abfda9387", "message": "Nothing here", "committedDate": "2020-06-18T09:57:57Z", "type": "commit"}, {"oid": "0680978a3fbd9c2d7cdfb76f19a46bfce219175d", "url": "https://github.com/elastic/elasticsearch/commit/0680978a3fbd9c2d7cdfb76f19a46bfce219175d", "message": "Merge branch 'master' into audit_key_usage", "committedDate": "2020-06-28T16:09:10Z", "type": "commit"}, {"oid": "f041041f9bc04a9bce3233065d20f05d4fc5761c", "url": "https://github.com/elastic/elasticsearch/commit/f041041f9bc04a9bce3233065d20f05d4fc5761c", "message": "Revert to wrong format", "committedDate": "2020-06-28T16:44:40Z", "type": "commit"}, {"oid": "9092e66b9a6d125eb4928888e6edf7e9a7dddc79", "url": "https://github.com/elastic/elasticsearch/commit/9092e66b9a6d125eb4928888e6edf7e9a7dddc79", "message": "WIP", "committedDate": "2020-06-28T19:05:31Z", "type": "commit"}, {"oid": "39e4e5af2d53a968822b819fb4c1e56e9e82cd74", "url": "https://github.com/elastic/elasticsearch/commit/39e4e5af2d53a968822b819fb4c1e56e9e82cd74", "message": "WIP", "committedDate": "2020-06-29T04:48:50Z", "type": "commit"}, {"oid": "e1b189792a768857c2143f826b2870d9cfae3eea", "url": "https://github.com/elastic/elasticsearch/commit/e1b189792a768857c2143f826b2870d9cfae3eea", "message": "Tests FIX WIP", "committedDate": "2020-06-29T09:02:01Z", "type": "commit"}, {"oid": "3f4883986ec3c628d1539c29d934275277bc9a95", "url": "https://github.com/elastic/elasticsearch/commit/3f4883986ec3c628d1539c29d934275277bc9a95", "message": "Teests compile and AuthenticationServiceTests passes", "committedDate": "2020-06-29T09:50:24Z", "type": "commit"}, {"oid": "55744e5b253ea224f81439155caae34dbd6594cd", "url": "https://github.com/elastic/elasticsearch/commit/55744e5b253ea224f81439155caae34dbd6594cd", "message": "Le tests", "committedDate": "2020-06-29T10:36:53Z", "type": "commit"}, {"oid": "2b5616c8e1dbfcc419db42c2c1b755d7e2e72d8d", "url": "https://github.com/elastic/elasticsearch/commit/2b5616c8e1dbfcc419db42c2c1b755d7e2e72d8d", "message": "Merge branch 'master' into audit_key_usage", "committedDate": "2020-07-01T06:11:48Z", "type": "commit"}, {"oid": "cd24d50c5c9c3e61d4db27d6d8607095ec8395df", "url": "https://github.com/elastic/elasticsearch/commit/cd24d50c5c9c3e61d4db27d6d8607095ec8395df", "message": "Limited role changes", "committedDate": "2020-07-01T10:42:57Z", "type": "commit"}, {"oid": "170cc33746edd34c497c287a3ae46fad9112c682", "url": "https://github.com/elastic/elasticsearch/commit/170cc33746edd34c497c287a3ae46fad9112c682", "message": "Authentication type", "committedDate": "2020-07-01T11:09:15Z", "type": "commit"}, {"oid": "3857df914e8a68e170a98a5b0cec6a3839856434", "url": "https://github.com/elastic/elasticsearch/commit/3857df914e8a68e170a98a5b0cec6a3839856434", "message": "More tests", "committedDate": "2020-07-02T10:06:44Z", "type": "commit"}, {"oid": "34f1bbfea2a32989f82b79c73d0f1446e975366e", "url": "https://github.com/elastic/elasticsearch/commit/34f1bbfea2a32989f82b79c73d0f1446e975366e", "message": "Filter tests", "committedDate": "2020-07-02T14:13:00Z", "type": "commit"}, {"oid": "659f2e8d313e7c64600113a02c92fa1e4a9635b0", "url": "https://github.com/elastic/elasticsearch/commit/659f2e8d313e7c64600113a02c92fa1e4a9635b0", "message": "Merge branch 'master' into audit_key_usage", "committedDate": "2020-07-02T14:19:27Z", "type": "commit"}, {"oid": "ed88ee85aa958d36642f31347a543e93bc3c853a", "url": "https://github.com/elastic/elasticsearch/commit/ed88ee85aa958d36642f31347a543e93bc3c853a", "message": "Revert gradle run file", "committedDate": "2020-07-02T14:51:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA2MDY5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449060699", "bodyText": "This refactoring is necessary because the LimitedRole#names (which is what's used by the audit) reported the names of the role descriptors from the API Key definition. It now returns the names of the owner user roles.", "author": "albertzaharovits", "createdAt": "2020-07-02T14:54:03Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java", "diffHunk": "@@ -27,17 +27,13 @@\n  * provided role.\n  */\n public final class LimitedRole extends Role {\n-    private final Role limitedBy;\n+    private final Role fromRole;\n \n     LimitedRole(String[] names, ClusterPermission cluster, IndicesPermission indices, ApplicationPermission application,\n-            RunAsPermission runAs, Role limitedBy) {\n+            RunAsPermission runAs, Role fromRole) {", "originalCommit": "ed88ee85aa958d36642f31347a543e93bc3c853a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMTg0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449401847", "bodyText": "If the intention is to have LimitedRole#names to report creator's roles instead of the sythetic roles. I wonder whether it would be better to just override Role#names instead of changing it here. This change works as well, but it makes the code hard to read unless you go all the way to change all relevant names:\n\nindicesAccessControl.limitIndicesAccessControl(...)\nlimitedByIndicesAccessControl\nresourcePrivilegesMapForLimitedRole\nEven the class name itself LimitedRole kinda suggests the field of name limitedBy.\n\nWe also may wanna change the order of the conditional checks, e.g.:\nreturn super.checkClusterAction(action, request, authentication) && fromRole.checkClusterAction(action, request, authentication);\n\nIt might be better to check against fromRole first, since common cases would be fromRole having less privileges than the limitedBy role.\nBut I wonder whether all above changes are worthwhile if the goal is just to get the role names of the creator. It might be simpler to just override the names method unless there is some concern that I am missing. Also, this is a remote concern, but if we decide to support derived keys by using multiple limitedBy roles, this change would make it harder to do so.", "author": "ywangd", "createdAt": "2020-07-03T06:37:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA2MDY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg2MzI3NA==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449863274", "bodyText": "If the intention is to have LimitedRole#names to report creator's roles instead of the synthetic roles\n\nThis is the intention indeed.\n\nI wonder whether it would be better to just override Role#names instead of changing it here.\n\nThat was my first intention as well, but here's how the limited role creation looked like:\n    public static LimitedRole createLimitedRole(Role fromRole, Role limitedByRole) {\n        Objects.requireNonNull(limitedByRole, \"limited by role is required to create limited role\");\n        return new LimitedRole(limitedByRole.names(), fromRole.cluster(), fromRole.indices(), fromRole.application(),\n                fromRole.runAs(), limitedByRole);\n    }\n\nAfter I raised the PR I realised I need to invert the conjunctions as you've described and maybe forgot to push that.\nOverriding LimitedRole#names is another option. I can make that work.", "author": "albertzaharovits", "createdAt": "2020-07-05T10:52:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA2MDY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTk0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449899945", "bodyText": "@ywangd I went with your suggestion of:\n\nIt might be simpler to just override the names method unless there is some concern that I am missing\n\nIn a seeparate PR #59041 .", "author": "albertzaharovits", "createdAt": "2020-07-05T17:24:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA2MDY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4MDc5OA==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449980798", "bodyText": "Thanks @albertzaharovits I commented on the other PR.", "author": "ywangd", "createdAt": "2020-07-06T04:43:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA2MDY5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3a8ddbb16bd1842ce87602d2e83d690c82dfbe30", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java\nindex aed7453e94d..91149847879 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/permission/LimitedRole.java\n\n@@ -27,13 +27,17 @@ import java.util.function.Predicate;\n  * provided role.\n  */\n public final class LimitedRole extends Role {\n-    private final Role fromRole;\n+    private final Role limitedBy;\n \n     LimitedRole(String[] names, ClusterPermission cluster, IndicesPermission indices, ApplicationPermission application,\n-            RunAsPermission runAs, Role fromRole) {\n+            RunAsPermission runAs, Role limitedBy) {\n         super(names, cluster, indices, application, runAs);\n-        assert fromRole != null : \"from role is required\";\n-        this.fromRole = fromRole;\n+        assert limitedBy != null : \"limiting role is required\";\n+        this.limitedBy = limitedBy;\n+    }\n+\n+    public Role limitedBy() {\n+        return limitedBy;\n     }\n \n     @Override\n"}}, {"oid": "549083d66c26e01f7ae20eb791a55d7aee7f3e89", "url": "https://github.com/elastic/elasticsearch/commit/549083d66c26e01f7ae20eb791a55d7aee7f3e89", "message": "Checkstyle", "committedDate": "2020-07-02T14:56:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTEzOA==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449071138", "bodyText": "authentication_success is different because it returned the realm inside the realm field instead of user.realm field. It almost makes sense, but the problem is that the user.name could reside in the lookup realm, which is not audited. Also the authn realm name could be _es_api_key which is even less helpful.\nI feel this change is borderline. Happy to discuss it.", "author": "albertzaharovits", "createdAt": "2020-07-02T15:09:23Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java", "diffHunk": "@@ -231,16 +235,19 @@ public LoggingAuditTrail(Settings settings, ClusterService clusterService, Threa\n     }\n \n     @Override\n-    public void authenticationSuccess(String requestId, String realm, User user, RestRequest request) {\n+    public void authenticationSuccess(String requestId, Authentication authentication, RestRequest request) {\n         if (events.contains(AUTHENTICATION_SUCCESS) && eventFilterPolicyRegistry.ignorePredicate()\n-                .test(new AuditEventMetaInfo(Optional.of(user), Optional.of(realm), Optional.empty(), Optional.empty())) == false) {\n+                .test(new AuditEventMetaInfo(\n+                        Optional.of(authentication.getUser()),\n+                        Optional.of(effectiveRealmName(authentication)),\n+                        Optional.empty(),\n+                        Optional.empty())) == false) {\n             final StringMapMessage logEntry = new LogEntryBuilder()\n                     .with(EVENT_TYPE_FIELD_NAME, REST_ORIGIN_FIELD_VALUE)\n                     .with(EVENT_ACTION_FIELD_NAME, \"authentication_success\")\n-                    .with(REALM_FIELD_NAME, realm)", "originalCommit": "ed88ee85aa958d36642f31347a543e93bc3c853a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5ODM5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449398396", "bodyText": "We have quite a few realm related fields:\n\nrealm\nuser.realm\nuser.run_by.realm\nuser.run_as.realm\n\nIs there a valid situation that all four of them would have different meanings? Or should we get rid of one of them, e.g. realm, completely?", "author": "ywangd", "createdAt": "2020-07-03T06:27:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg2Nzc1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449867753", "bodyText": "Is there a valid situation that all four of them would have different meanings?\n\nThe simple answer is no. In general, they each appear in different event types.\nuser.run_as.realm only appears for run_as_granted and run_as_denied events. user.run_by.realm and realm fields are not present for such events. user.realm shows the authenticating realm name.\nFor access_granted and access_denied events, user.* fields always represent the attributes of the effective user. If the user is \"run as\", the user.run_by.* fields show the attributes of the authenticated user.\nrealm is only present for authentication_success and authentication_failed events, but my suggestion, in this PR, is to get rid of it for authentication_success. It is still useful for authentication_failed events, when no other user.* fields are present, because there is no user yet (the user is built after authentication succeeded).\n\nTo clarify, authentication_success currently (before this PR) includes only the realm field from your list, but it also contains the user.name attribute of the user. realm contains the realm that did the authentication, and user.name contains the effective authentication (it could be the looked up username, authentication_success is generated after a possible run_as_granted). In this PR I propose we remove the realm field, and rely on the strategy we use for access_granted authz events, where the user.* fields always represent the attributes of the effective user and user.run_by.* the attributes of the authenticated user.\nAlthough I believe it is a good change, I am pushing for it now because, in order to better support the API Keys, the realm would contain the effective realm name, because the authenticating realm name is not recorded on API key creation. So we cannot easily maintain the current significance of the realm field, and I reckon it's actually better if we remove the field altogether and rely on user.* and user.run_by.* paradigm.", "author": "albertzaharovits", "createdAt": "2020-07-05T11:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYwNTU0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r450605546", "bodyText": "Sorry does ... because the authenticating realm name is not recorded on API key creation mean that we do not currently log API key creation, i.e. we are logging anything that happens after auth flow?\nFor authentication_success, I agree it feels more natural to use the same convention as access_grant etc instead of authentication_fail. My only concern is BWC, i.e. how much friction would it cause to end users by changing the field name in a minor release.", "author": "ywangd", "createdAt": "2020-07-07T04:34:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NjMwMw==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r451386303", "bodyText": "This concerns me, assuming I understand it correctly.\n\nThe BWC issue of removing a field in a minor. I don't think we should do that\nUnder this change, for authentication_success with run-as the realm that did the authentication would be in user.run_by.realm, but for all other cases it would be in user.realm.\n\nI would propose (but I'm open to other options)\n\nKeep the change (below) for withAuthentication(auth) so that we now audit the user.realm and user.run_by.*\nBut also keep the realm field to indicate the realm against which the authentication occurred (so it's always in a single, known field).\nFor API Key authentication, realm should be either _es_api_key or null because authentication didn't occur against a realm", "author": "tvernum", "createdAt": "2020-07-08T08:50:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQyMjEzNA==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r451422134", "bodyText": "Thanks Tim, your understanding matches what I meant and the proposed option sounds good to me.\nAs a parting comment, the realm field now contains redundant information and I would propose we remove it in the next major.", "author": "albertzaharovits", "createdAt": "2020-07-08T09:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3ODYwNg==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r451878606", "bodyText": "Pushed 8aa9068", "author": "albertzaharovits", "createdAt": "2020-07-08T23:24:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4NzI0OA==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r451987248", "bodyText": "As a parting comment, the realm field now contains redundant information and I would propose we remove it in the next major.\n\nI'm not sure - but we can discuss. I have thoughts around the degree of consistency we want between realm_authentication_failed and authentication_success  vs access_granted and authentication_success.\nI presume that realm_authentication_failed will always have a realm field, because there's no other place to record the realm, so even if we remove it from authentication_success it will still exist in the file (/index). Is it better to retain it on authentication_success as well, for clarity? I don't know.", "author": "tvernum", "createdAt": "2020-07-09T06:17:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTEzOA=="}], "type": "inlineReview", "revised_code": {"commit": "7f497d506215fc0f84c6eda3338b5085e5c4db72", "chunk": "diff --git a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java\nindex a5601bcf81c..9279ef69653 100644\n--- a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java\n+++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java\n\n@@ -239,7 +239,7 @@ public class LoggingAuditTrail implements AuditTrail, ClusterStateListener {\n         if (events.contains(AUTHENTICATION_SUCCESS) && eventFilterPolicyRegistry.ignorePredicate()\n                 .test(new AuditEventMetaInfo(\n                         Optional.of(authentication.getUser()),\n-                        Optional.of(effectiveRealmName(authentication)),\n+                        Optional.of(ApiKeyService.getCreatorRealmName(authentication)),\n                         Optional.empty(),\n                         Optional.empty())) == false) {\n             final StringMapMessage logEntry = new LogEntryBuilder()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTU5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449071597", "bodyText": "this tampered_request can now be filtered by ignore policies.", "author": "albertzaharovits", "createdAt": "2020-07-02T15:10:04Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java", "diffHunk": "@@ -571,19 +581,22 @@ public void tamperedRequest(String requestId, String action, TransportRequest tr\n     }\n \n     @Override\n-    public void tamperedRequest(String requestId, User user, String action, TransportRequest transportRequest) {\n+    public void tamperedRequest(String requestId, Authentication authentication, String action, TransportRequest transportRequest) {\n         if (events.contains(TAMPERED_REQUEST)) {\n             final Optional<String[]> indices = indices(transportRequest);\n-            if (eventFilterPolicyRegistry.ignorePredicate()\n-                    .test(new AuditEventMetaInfo(Optional.of(user), Optional.empty(), Optional.empty(), indices)) == false) {\n+            if (eventFilterPolicyRegistry.ignorePredicate().test(new AuditEventMetaInfo(\n+                            Optional.of(authentication.getUser()),\n+                            Optional.of(effectiveRealmName(authentication)),", "originalCommit": "ed88ee85aa958d36642f31347a543e93bc3c853a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f497d506215fc0f84c6eda3338b5085e5c4db72", "chunk": "diff --git a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java\nindex a5601bcf81c..9279ef69653 100644\n--- a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java\n+++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java\n\n@@ -586,7 +586,7 @@ public class LoggingAuditTrail implements AuditTrail, ClusterStateListener {\n             final Optional<String[]> indices = indices(transportRequest);\n             if (eventFilterPolicyRegistry.ignorePredicate().test(new AuditEventMetaInfo(\n                             Optional.of(authentication.getUser()),\n-                            Optional.of(effectiveRealmName(authentication)),\n+                            Optional.of(ApiKeyService.getCreatorRealmName(authentication)),\n                             Optional.empty(),\n                             indices)) == false) {\n                 final StringMapMessage logEntry = new LogEntryBuilder()\n"}}, {"oid": "c22b1b77163f4456e6642e8b0ec39227b690ff54", "url": "https://github.com/elastic/elasticsearch/commit/c22b1b77163f4456e6642e8b0ec39227b690ff54", "message": "nothing to see here", "committedDate": "2020-07-02T21:57:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5MjkzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449392935", "bodyText": "This method is now a duplicate of ApiKeyService#getCreatorRealmName. It is probably better to consolidate them.", "author": "ywangd", "createdAt": "2020-07-03T06:09:27Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java", "diffHunk": "@@ -879,8 +892,13 @@ String toQuotedJsonArray(Object[] values) {\n     }\n \n     private static String effectiveRealmName(Authentication authentication) {\n-        return authentication.getLookedUpBy() != null ? authentication.getLookedUpBy().getName()\n-                : authentication.getAuthenticatedBy().getName();\n+        if (authentication.getLookedUpBy() != null) {\n+            return authentication.getLookedUpBy().getName();\n+        } else if (authentication.getAuthenticationType() == Authentication.AuthenticationType.API_KEY) {\n+            return (String) authentication.getMetadata().get(ApiKeyService.API_KEY_CREATOR_REALM_NAME);\n+        } else {\n+            return authentication.getAuthenticatedBy().getName();\n+        }", "originalCommit": "549083d66c26e01f7ae20eb791a55d7aee7f3e89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg2MzQ1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449863453", "bodyText": "Good suggestion, thank you!", "author": "albertzaharovits", "createdAt": "2020-07-05T10:54:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5MjkzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7f497d506215fc0f84c6eda3338b5085e5c4db72", "chunk": "diff --git a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java\nindex a5601bcf81c..9279ef69653 100644\n--- a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java\n+++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java\n\n@@ -891,16 +892,6 @@ public class LoggingAuditTrail implements AuditTrail, ClusterStateListener {\n         return Optional.empty();\n     }\n \n-    private static String effectiveRealmName(Authentication authentication) {\n-        if (authentication.getLookedUpBy() != null) {\n-            return authentication.getLookedUpBy().getName();\n-        } else if (authentication.getAuthenticationType() == Authentication.AuthenticationType.API_KEY) {\n-            return (String) authentication.getMetadata().get(ApiKeyService.API_KEY_CREATOR_REALM_NAME);\n-        } else {\n-            return authentication.getAuthenticatedBy().getName();\n-        }\n-    }\n-\n     public static void registerSettings(List<Setting<?>> settings) {\n         settings.add(EMIT_HOST_ADDRESS_SETTING);\n         settings.add(EMIT_HOST_NAME_SETTING);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwNTk2MA==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449405960", "bodyText": "I understand these are existing logic and probably not the current focus. But I am troubled by the fact that we have:\n\nuser.xxx\nuser.run_by.xxx\nuser.run_as.xxx\n\nI personally think we could drop user.run_by.xxx. The presence of having user.run_as.xxx fields already give the information that user.xxx fields are run_by. It would be simpler and more consistent imo. Happy to discuss.", "author": "ywangd", "createdAt": "2020-07-03T06:48:44Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/audit/logfile/LoggingAuditTrail.java", "diffHunk": "@@ -797,22 +810,22 @@ LogEntryBuilder withXForwardedFor(ThreadContext threadContext) {\n             return this;\n         }\n \n-        LogEntryBuilder withPrincipal(User user) {\n-            logEntry.with(PRINCIPAL_FIELD_NAME, user.principal());\n-            if (user.isRunAs()) {\n-                logEntry.with(PRINCIPAL_RUN_BY_FIELD_NAME, user.authenticatedUser().principal());\n-            }\n-            return this;\n-        }\n-\n-        LogEntryBuilder withSubject(Authentication authentication) {\n+        LogEntryBuilder withAuthentication(Authentication authentication) {\n             logEntry.with(PRINCIPAL_FIELD_NAME, authentication.getUser().principal());\n-            if (authentication.getUser().isRunAs()) {\n-                logEntry.with(PRINCIPAL_REALM_FIELD_NAME, authentication.getLookedUpBy().getName())\n-                        .with(PRINCIPAL_RUN_BY_FIELD_NAME, authentication.getUser().authenticatedUser().principal())\n-                        .with(PRINCIPAL_RUN_BY_REALM_FIELD_NAME, authentication.getAuthenticatedBy().getName());\n+            logEntry.with(AUTHENTICATION_TYPE_FIELD_NAME, authentication.getAuthenticationType().toString());\n+            if (Authentication.AuthenticationType.API_KEY == authentication.getAuthenticationType()) {\n+                logEntry.with(API_KEY_ID_FIELD_NAME, (String) authentication.getMetadata().get(ApiKeyService.API_KEY_ID_KEY))\n+                        .with(API_KEY_NAME_FIELD_NAME, (String) authentication.getMetadata().get(ApiKeyService.API_KEY_NAME_KEY))\n+                        .with(PRINCIPAL_REALM_FIELD_NAME,\n+                                (String) authentication.getMetadata().get(ApiKeyService.API_KEY_CREATOR_REALM_NAME));\n             } else {\n-                logEntry.with(PRINCIPAL_REALM_FIELD_NAME, authentication.getAuthenticatedBy().getName());\n+                if (authentication.getUser().isRunAs()) {\n+                    logEntry.with(PRINCIPAL_REALM_FIELD_NAME, authentication.getLookedUpBy().getName())\n+                            .with(PRINCIPAL_RUN_BY_FIELD_NAME, authentication.getUser().authenticatedUser().principal())\n+                            .with(PRINCIPAL_RUN_BY_REALM_FIELD_NAME, authentication.getAuthenticatedBy().getName());\n+                } else {\n+                    logEntry.with(PRINCIPAL_REALM_FIELD_NAME, authentication.getAuthenticatedBy().getName());\n+                }", "originalCommit": "549083d66c26e01f7ae20eb791a55d7aee7f3e89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg2NDg3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449864877", "bodyText": "We can discuss this, but I would prefer we don't change it in this PR.\n user.run_as.* is only present for run_as_granted and run_as_failed events. user.run_by.* fields are present in all the other events when the user is \"run as\", so that user.* always (run-as or not) conveys the effective user. I think this is consistent.", "author": "albertzaharovits", "createdAt": "2020-07-05T11:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwNTk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4MDA3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449980075", "bodyText": "Makes sense to use user.* for effective user and user.run_by.* when needed. I also agree that we probably do not wanna change them for this PR. The same applies to my other suggestion about realm. I do think they need to be tidy up, but may not want sequzee them in for upcoming release.", "author": "ywangd", "createdAt": "2020-07-06T04:39:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwNTk2MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "267349fb55b5c01e2bcda1783550a09c8cf83f90", "url": "https://github.com/elastic/elasticsearch/commit/267349fb55b5c01e2bcda1783550a09c8cf83f90", "message": "Merge branch 'master' into audit_key_usage", "committedDate": "2020-07-05T16:28:48Z", "type": "commit"}, {"oid": "3a8ddbb16bd1842ce87602d2e83d690c82dfbe30", "url": "https://github.com/elastic/elasticsearch/commit/3a8ddbb16bd1842ce87602d2e83d690c82dfbe30", "message": "Revert changes to api key roles", "committedDate": "2020-07-05T16:37:32Z", "type": "commit"}, {"oid": "7f497d506215fc0f84c6eda3338b5085e5c4db72", "url": "https://github.com/elastic/elasticsearch/commit/7f497d506215fc0f84c6eda3338b5085e5c4db72", "message": "ApiKeyService#getCreatorRealmName", "committedDate": "2020-07-05T17:42:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMjQ5NA==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449902494", "bodyText": "Moving the auditing of authentication_success down here avoids the unlikely, but confusing case of authentication_success followed by authentication_failed.", "author": "albertzaharovits", "createdAt": "2020-07-05T17:53:10Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java", "diffHunk": "@@ -676,13 +675,13 @@ void finishAuthentication(User finalUser) {\n          * successful\n          */\n         void writeAuthToContext(Authentication authentication) {\n-            request.authenticationSuccess(authentication.getAuthenticatedBy().getName(), authentication.getUser());\n             Runnable action = () -> {\n                 logger.trace(\"Established authentication [{}] for request [{}]\", authentication, request);\n                 listener.onResponse(authentication);\n             };\n             try {\n                 authenticationSerializer.writeToContext(authentication, threadContext);\n+                request.authenticationSuccess(authentication);\n             } catch (Exception e) {", "originalCommit": "7f497d506215fc0f84c6eda3338b5085e5c4db72", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwNTQzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/58928#discussion_r449905435", "bodyText": "mix-in creating an API Key while running-as.", "author": "albertzaharovits", "createdAt": "2020-07-05T18:28:02Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ApiKeyServiceTests.java", "diffHunk": "@@ -148,7 +148,13 @@ public void testAuthenticateWithApiKey() throws Exception {\n         final String id = randomAlphaOfLength(12);\n         final String key = randomAlphaOfLength(16);\n \n-        mockKeyDocument(service, id, key, new User(\"hulk\", \"superuser\"));\n+        final User user;\n+        if (randomBoolean()) {\n+            user = new User(\"hulk\", new String[] { \"superuser\" }, new User(\"authenticated_user\", new String[] { \"other\" }));\n+        } else {\n+            user = new User(\"hulk\", new String[] { \"superuser\" });\n+        }", "originalCommit": "7f497d506215fc0f84c6eda3338b5085e5c4db72", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "06894d1fd0687ed14a239710e98040eafb7441eb", "url": "https://github.com/elastic/elasticsearch/commit/06894d1fd0687ed14a239710e98040eafb7441eb", "message": "Tease out the roles PR", "committedDate": "2020-07-05T18:28:52Z", "type": "commit"}, {"oid": "856eea7a6493c38e222b18991bbddf1033d73e42", "url": "https://github.com/elastic/elasticsearch/commit/856eea7a6493c38e222b18991bbddf1033d73e42", "message": "Checkstyle", "committedDate": "2020-07-05T18:33:25Z", "type": "commit"}, {"oid": "22a16875e53377565091f0f849c4b312f1eb15ce", "url": "https://github.com/elastic/elasticsearch/commit/22a16875e53377565091f0f849c4b312f1eb15ce", "message": "Merge branch 'master' into audit_key_usage", "committedDate": "2020-07-07T20:38:40Z", "type": "commit"}, {"oid": "2977aa1a7ac958d877b4c6dbb70bbbac780c82ef", "url": "https://github.com/elastic/elasticsearch/commit/2977aa1a7ac958d877b4c6dbb70bbbac780c82ef", "message": "Merge branch 'master' into audit_key_usage", "committedDate": "2020-07-07T20:39:12Z", "type": "commit"}, {"oid": "112bfee8a0b45097f39a0fde7c71af2e931f3f18", "url": "https://github.com/elastic/elasticsearch/commit/112bfee8a0b45097f39a0fde7c71af2e931f3f18", "message": "Merge fallout", "committedDate": "2020-07-07T21:05:12Z", "type": "commit"}, {"oid": "0e112ae6f4331a33e054d0d70698adbca6864a42", "url": "https://github.com/elastic/elasticsearch/commit/0e112ae6f4331a33e054d0d70698adbca6864a42", "message": "Checkstyle", "committedDate": "2020-07-08T05:02:02Z", "type": "commit"}, {"oid": "03cc8de97cc75304580823d08c4593f91b580136", "url": "https://github.com/elastic/elasticsearch/commit/03cc8de97cc75304580823d08c4593f91b580136", "message": "Merge branch 'master' into audit_key_usage", "committedDate": "2020-07-08T23:02:31Z", "type": "commit"}, {"oid": "8aa90686381135ce53e56bfd827ae6467b67bfb4", "url": "https://github.com/elastic/elasticsearch/commit/8aa90686381135ce53e56bfd827ae6467b67bfb4", "message": "Review resurrect \"realm\" for authn_success", "committedDate": "2020-07-08T23:22:42Z", "type": "commit"}]}