{"pr_number": 61831, "pr_title": "Ensure validation of the reader context is executed first", "pr_createdAt": "2020-09-02T07:51:14Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61831", "timeline": [{"oid": "b73af3a79bfe62c7a1a2c1d644ade1df74ce3c84", "url": "https://github.com/elastic/elasticsearch/commit/b73af3a79bfe62c7a1a2c1d644ade1df74ce3c84", "message": "Ensure validation of the reader context is executed first\n\nThis change makes sure that we validate the reader context (`SearchOperationListener#validateReaderContext)\nbefore any other operation.\n\nRelates #61446", "committedDate": "2020-09-02T07:46:30Z", "type": "commit"}, {"oid": "159b3a5e0f87ab95ecf4f7f2941f44554ccec307", "url": "https://github.com/elastic/elasticsearch/commit/159b3a5e0f87ab95ecf4f7f2941f44554ccec307", "message": "ensure that reader context are released properly on failures", "committedDate": "2020-09-02T13:04:51Z", "type": "commit"}, {"oid": "d5a6162005e81e592ff181499cb8ca14b7eb8fdf", "url": "https://github.com/elastic/elasticsearch/commit/d5a6162005e81e592ff181499cb8ca14b7eb8fdf", "message": "restore the removal of scroll context on failure", "committedDate": "2020-09-02T19:15:48Z", "type": "commit"}, {"oid": "b9b4c728c870ad59569257cb4738628209f06260", "url": "https://github.com/elastic/elasticsearch/commit/b9b4c728c870ad59569257cb4738628209f06260", "message": "Merge branch 'master' into search_op_listener_validation", "committedDate": "2020-09-02T19:24:48Z", "type": "commit"}, {"oid": "a49d06734e5f4614a5a394176b1033eefcc9fcc1", "url": "https://github.com/elastic/elasticsearch/commit/a49d06734e5f4614a5a394176b1033eefcc9fcc1", "message": "cleanup", "committedDate": "2020-09-02T20:12:02Z", "type": "commit"}, {"oid": "00d2b1db8abd778eeef59c48eb2dc0793bd04062", "url": "https://github.com/elastic/elasticsearch/commit/00d2b1db8abd778eeef59c48eb2dc0793bd04062", "message": "don't release PIT on failure", "committedDate": "2020-09-02T21:19:52Z", "type": "commit"}, {"oid": "f89a0a69f317feabf1745d3b54ea62f9c108bb5b", "url": "https://github.com/elastic/elasticsearch/commit/f89a0a69f317feabf1745d3b54ea62f9c108bb5b", "message": "do not remove scroll context on search rejection", "committedDate": "2020-09-02T22:22:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0OTI3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61831#discussion_r483749277", "bodyText": "++", "author": "dnhatn", "createdAt": "2020-09-04T17:02:26Z", "path": "server/src/main/java/org/elasticsearch/search/internal/LegacyReaderContext.java", "diffHunk": "@@ -61,6 +61,7 @@ public LegacyReaderContext(long id, IndexService indexService, IndexShard indexS\n             if (searcher == null) {\n                 Engine.Searcher delegate = searcherSupplier.acquireSearcher(source);\n                 onClose = delegate::close;\n+                // wrap the searcher so that closing is a noop, the actual closing happens when this context is closed", "originalCommit": "f89a0a69f317feabf1745d3b54ea62f9c108bb5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwMzcxNw==", "url": "https://github.com/elastic/elasticsearch/pull/61831#discussion_r484103717", "bodyText": "@jimczi I looked at this again (while investigating the perf issue). I think we need to double-check with synchronization before acquiring a searcher to avoid leaking it.", "author": "dnhatn", "createdAt": "2020-09-06T19:05:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0OTI3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwMzk4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61831#discussion_r484103987", "bodyText": "Or we can just always addOnClose(delegate) instead.", "author": "dnhatn", "createdAt": "2020-09-06T19:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0OTI3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyOTYxMg==", "url": "https://github.com/elastic/elasticsearch/pull/61831#discussion_r484129612", "bodyText": "I found another issue while investigating the perf issue. We don't have a happens-before relation between the initial search and subsequent scroll requests. The searcher field needs to be volatile; otherwise, we might acquire and wrap searcher more than once.  I've pushed 0c42f9c. Let me know if you are ok with this change.", "author": "dnhatn", "createdAt": "2020-09-06T23:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0OTI3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIzMjc4OA==", "url": "https://github.com/elastic/elasticsearch/pull/61831#discussion_r484232788", "bodyText": "Great catch, thanks!", "author": "jimczi", "createdAt": "2020-09-07T07:27:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0OTI3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0c42f9c0b1740cb75d511118dca90459d9bdc38c", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/internal/LegacyReaderContext.java b/server/src/main/java/org/elasticsearch/search/internal/LegacyReaderContext.java\nindex 98a722a6aba..8f6ccb526cf 100644\n--- a/server/src/main/java/org/elasticsearch/search/internal/LegacyReaderContext.java\n+++ b/server/src/main/java/org/elasticsearch/search/internal/LegacyReaderContext.java\n\n@@ -59,8 +58,8 @@ public class LegacyReaderContext extends ReaderContext {\n             // This ensures that we wrap the searcher's reader with the user's permissions\n             // when they are available.\n             if (searcher == null) {\n-                Engine.Searcher delegate = searcherSupplier.acquireSearcher(source);\n-                onClose = delegate::close;\n+                final Engine.Searcher delegate = searcherSupplier.acquireSearcher(source);\n+                addOnClose(delegate);\n                 // wrap the searcher so that closing is a noop, the actual closing happens when this context is closed\n                 searcher = new Engine.Searcher(delegate.source(), delegate.getDirectoryReader(),\n                     delegate.getSimilarity(), delegate.getQueryCache(), delegate.getQueryCachingPolicy(), () -> {});\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkwMzczNg==", "url": "https://github.com/elastic/elasticsearch/pull/61831#discussion_r483903736", "bodyText": "I know processFailure and markAsUsed do not throw exceptions, but can we use Releases.close() to ensure that we always notify the listener?", "author": "dnhatn", "createdAt": "2020-09-05T03:14:54Z", "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -861,17 +854,38 @@ private void checkKeepAliveLimit(long keepAlive) {\n         }\n     }\n \n-    private void processFailure(ShardSearchRequest request, ReaderContext context, Exception e) {\n-        if (context.singleSession() || request.scroll() != null) {\n+    private <T> ActionListener<T> wrapFailureListener(ActionListener<T> listener, ReaderContext context, Releasable releasable) {\n+        return new ActionListener<>() {\n+            @Override\n+            public void onResponse(T resp) {\n+                releasable.close();\n+                listener.onResponse(resp);\n+            }\n+\n+            @Override\n+            public void onFailure(Exception exc) {\n+                processFailure(context, exc);\n+                releasable.close();\n+                listener.onFailure(exc);", "originalCommit": "f89a0a69f317feabf1745d3b54ea62f9c108bb5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIzMjk3NA==", "url": "https://github.com/elastic/elasticsearch/pull/61831#discussion_r484232974", "bodyText": "++, 16ea240", "author": "jimczi", "createdAt": "2020-09-07T07:28:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkwMzczNg=="}], "type": "inlineReview", "revised_code": {"commit": "16ea240ad54ca1a76da955b934cc91066bdaee11", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/SearchService.java b/server/src/main/java/org/elasticsearch/search/SearchService.java\nindex 118a9c2763f..de303b51446 100644\n--- a/server/src/main/java/org/elasticsearch/search/SearchService.java\n+++ b/server/src/main/java/org/elasticsearch/search/SearchService.java\n\n@@ -858,14 +858,14 @@ public class SearchService extends AbstractLifecycleComponent implements IndexEv\n         return new ActionListener<>() {\n             @Override\n             public void onResponse(T resp) {\n-                releasable.close();\n+                Releasables.close(releasable);\n                 listener.onResponse(resp);\n             }\n \n             @Override\n             public void onFailure(Exception exc) {\n                 processFailure(context, exc);\n-                releasable.close();\n+                Releasables.close(releasable);\n                 listener.onFailure(exc);\n             }\n         };\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkwMzk1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61831#discussion_r483903957", "bodyText": "Nice!", "author": "dnhatn", "createdAt": "2020-09-05T03:18:03Z", "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -420,17 +421,8 @@ public void onResponse(ShardSearchRequest orig) {\n                 }\n \n                 // fork the execution in the search thread pool\n-                runAsync(getExecutor(shard), () -> {\n-                    try (markAsUsed) {\n-                        return executeQueryPhase(orig, task, readerContext);\n-                    }\n-                }, ActionListener.wrap(listener::onResponse, exc -> {\n-                    try (markAsUsed) {\n-                        listener.onFailure(exc);\n-                    } finally {\n-                        processFailure(request, readerContext, exc);\n-                    }\n-                }));\n+                runAsync(getExecutor(shard), () -> executeQueryPhase(orig, task, readerContext),\n+                    wrapFailureListener(listener, readerContext, markAsUsed));", "originalCommit": "f89a0a69f317feabf1745d3b54ea62f9c108bb5b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "0c42f9c0b1740cb75d511118dca90459d9bdc38c", "url": "https://github.com/elastic/elasticsearch/commit/0c42f9c0b1740cb75d511118dca90459d9bdc38c", "message": "Hold searcher in LegacyReaderContext", "committedDate": "2020-09-06T23:40:42Z", "type": "commit"}, {"oid": "a76a767a8341d91162505ad75131a4b6a769ae27", "url": "https://github.com/elastic/elasticsearch/commit/a76a767a8341d91162505ad75131a4b6a769ae27", "message": "stylecheck", "committedDate": "2020-09-06T23:41:37Z", "type": "commit"}, {"oid": "16ea240ad54ca1a76da955b934cc91066bdaee11", "url": "https://github.com/elastic/elasticsearch/commit/16ea240ad54ca1a76da955b934cc91066bdaee11", "message": "apply review feedback", "committedDate": "2020-09-07T07:26:13Z", "type": "commit"}, {"oid": "14b70350d4346fbfcf5f8c4a5549b5bacd56b7f6", "url": "https://github.com/elastic/elasticsearch/commit/14b70350d4346fbfcf5f8c4a5549b5bacd56b7f6", "message": "Merge branch 'master' into search_op_listener_validation", "committedDate": "2020-09-07T07:33:26Z", "type": "commit"}]}