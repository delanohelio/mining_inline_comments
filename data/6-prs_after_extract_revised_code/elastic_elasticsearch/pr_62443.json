{"pr_number": 62443, "pr_title": "Speed up merging when source is disabled.", "pr_createdAt": "2020-09-16T10:36:38Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62443", "timeline": [{"oid": "0db13f2a879594aadc345ace8e016e5860a51830", "url": "https://github.com/elastic/elasticsearch/commit/0db13f2a879594aadc345ace8e016e5860a51830", "message": "Speed up merging when source is disabled.\n\nThe CodecReader wrapper we use to remove the `_recovery_source` field\ndoesn't override `StoredFieldsreader#getMergeInstance`, which has the\nundesired side-effect of preventing the wrapped stored fields reader\nfrom optimizing merging.", "committedDate": "2020-09-16T10:27:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ1OTkxNw==", "url": "https://github.com/elastic/elasticsearch/pull/62443#discussion_r489459917", "bodyText": "Maybe also make getMergeInstance() method abstract here? So that implementors have to think about whether that method should be implemented too?", "author": "martijnvg", "createdAt": "2020-09-16T13:59:14Z", "path": "server/src/main/java/org/elasticsearch/index/engine/RecoverySourcePruneMergePolicy.java", "diffHunk": "@@ -212,38 +196,76 @@ public long ramBytesUsed() {\n             }\n         }\n \n-        private static class FilterStoredFieldsReader extends StoredFieldsReader {\n+        private abstract static class FilterStoredFieldsReader extends StoredFieldsReader {\n \n-            private final StoredFieldsReader fieldsReader;\n+            protected final StoredFieldsReader in;\n \n             FilterStoredFieldsReader(StoredFieldsReader fieldsReader) {\n-                this.fieldsReader = fieldsReader;\n+                this.in = fieldsReader;\n             }\n \n             @Override\n             public long ramBytesUsed() {\n-                return fieldsReader.ramBytesUsed();\n+                return in.ramBytesUsed();\n             }\n \n             @Override\n             public void close() throws IOException {\n-                fieldsReader.close();\n+                in.close();\n             }\n \n             @Override\n             public void visitDocument(int docID, StoredFieldVisitor visitor) throws IOException {\n-                fieldsReader.visitDocument(docID, visitor);\n+                in.visitDocument(docID, visitor);\n             }\n \n             @Override\n-            public StoredFieldsReader clone() {\n-                return fieldsReader.clone();\n-            }\n+            public abstract StoredFieldsReader clone();", "originalCommit": "0db13f2a879594aadc345ace8e016e5860a51830", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3MzQ1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62443#discussion_r489573459", "bodyText": "The consensus on Lucene is that FilterXXX classes should not override methods that have a default implementation in the base class (e.g. FilterLeafReader doesn't override LeafReader#postings), so I tried to be consistent.", "author": "jpountz", "createdAt": "2020-09-16T16:36:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ1OTkxNw=="}], "type": "inlineReview", "revised_code": null}]}