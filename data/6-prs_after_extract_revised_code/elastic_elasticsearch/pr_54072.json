{"pr_number": 54072, "pr_title": "Extract files stored within metadata hash into ByteArrayIndexInputs", "pr_createdAt": "2020-03-24T11:48:08Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54072", "timeline": [{"oid": "f084c7d4ab86c3f7e7161fb99f5485266ca3d1df", "url": "https://github.com/elastic/elasticsearch/commit/f084c7d4ab86c3f7e7161fb99f5485266ca3d1df", "message": "Extract files stored within metadata hash into ByteArrayIndexInputs", "committedDate": "2020-03-24T11:43:10Z", "type": "commit"}, {"oid": "c3e653195ddd0306adc1fc41d916dae081da9bc5", "url": "https://github.com/elastic/elasticsearch/commit/c3e653195ddd0306adc1fc41d916dae081da9bc5", "message": "Merge branch 'feature/searchable-snapshots' into extract-hash-content", "committedDate": "2020-03-24T12:43:26Z", "type": "commit"}, {"oid": "c3c2c51cc47e89e56e674127456508a241c0cc07", "url": "https://github.com/elastic/elasticsearch/commit/c3c2c51cc47e89e56e674127456508a241c0cc07", "message": "Merge branch 'feature/searchable-snapshots' into extract-hash-content", "committedDate": "2020-03-24T12:45:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwMzgxNw==", "url": "https://github.com/elastic/elasticsearch/pull/54072#discussion_r397703817", "bodyText": "I think it'd be better to assert this (inline) in the constructor.", "author": "DaveCTurner", "createdAt": "2020-03-25T09:14:08Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java", "diffHunk": "@@ -98,4 +85,10 @@ private void ensureValidPosition(long position) {\n             throw new IllegalArgumentException(\"Position [\" + position + \"] is invalid\");\n         }\n     }\n+\n+    boolean assertHashIsNotEqualToContent() {", "originalCommit": "c3c2c51cc47e89e56e674127456508a241c0cc07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4NDU3OA==", "url": "https://github.com/elastic/elasticsearch/pull/54072#discussion_r398384578", "bodyText": "Good point", "author": "tlrx", "createdAt": "2020-03-26T08:15:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwMzgxNw=="}], "type": "inlineReview", "revised_code": {"commit": "336457a8dd0be2771e42d7dc4badaa4a65c44883", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java\nindex e790eafaf34..13dc37787b5 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java\n\n@@ -85,10 +86,4 @@ public abstract class BaseSearchableSnapshotIndexInput extends BufferedIndexInpu\n             throw new IllegalArgumentException(\"Position [\" + position + \"] is invalid\");\n         }\n     }\n-\n-    boolean assertHashIsNotEqualToContent() {\n-        assert fileInfo.metadata().hashEqualsContents() == false\n-            : \"this method should only be used with blobs that are NOT stored in metadata's hash field (fileInfo: \" + fileInfo + ')';\n-        return true;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwNzUxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/54072#discussion_r397707515", "bodyText": "It looks like fileInfo.metadata().hash() is not today a slice of the underlying byte array (i.e. it has zero offset and full length) but I don't think we guarantee that in future. I think we should  pass offset and length to the ByteArrayIndexInput constructor just to be sure.", "author": "DaveCTurner", "createdAt": "2020-03-25T09:20:19Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java", "diffHunk": "@@ -221,7 +222,12 @@ public CacheFile getCacheFile(CacheKey cacheKey, long fileLength) throws Excepti\n     @Override\n     public IndexInput openInput(final String name, final IOContext context) throws IOException {\n         ensureOpen();\n+\n         final BlobStoreIndexShardSnapshot.FileInfo fileInfo = fileInfo(name);\n+        if (fileInfo.metadata().hashEqualsContents()) {\n+            return new ByteArrayIndexInput(\"ByteArrayIndexInput(\" + name + ')', fileInfo.metadata().hash().bytes);", "originalCommit": "c3c2c51cc47e89e56e674127456508a241c0cc07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4NTg4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/54072#discussion_r398385886", "bodyText": "Sure", "author": "tlrx", "createdAt": "2020-03-26T08:18:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwNzUxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "336457a8dd0be2771e42d7dc4badaa4a65c44883", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java\nindex f9a578244eb..955a3f43339 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotDirectory.java\n\n@@ -225,7 +226,8 @@ public class SearchableSnapshotDirectory extends BaseDirectory {\n \n         final BlobStoreIndexShardSnapshot.FileInfo fileInfo = fileInfo(name);\n         if (fileInfo.metadata().hashEqualsContents()) {\n-            return new ByteArrayIndexInput(\"ByteArrayIndexInput(\" + name + ')', fileInfo.metadata().hash().bytes);\n+            final BytesRef content = fileInfo.metadata().hash();\n+            return new ByteArrayIndexInput(\"ByteArrayIndexInput(\" + name + ')', content.bytes, content.offset, content.length);\n         }\n \n         final IndexInputStats inputStats = stats.computeIfAbsent(name, n -> createIndexInputStats(fileInfo.length()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwOTgxMw==", "url": "https://github.com/elastic/elasticsearch/pull/54072#discussion_r397709813", "bodyText": "If we move the assertion to the constructor then this isn't necessary.", "author": "DaveCTurner", "createdAt": "2020-03-25T09:24:01Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotIndexInput.java", "diffHunk": "@@ -259,25 +257,8 @@ public String toString() {\n     }\n \n     private InputStream openBlobStream(int part, long pos, long length) throws IOException {\n-        final InputStream stream;\n-        if (fileInfo.metadata().hashEqualsContents() == false) {\n-            stream = blobContainer.readBlob(fileInfo.partName(part), pos, length);\n-        } else {\n-            // extract blob content from metadata hash\n-            final BytesRef data = fileInfo.metadata().hash();\n-            if (part > 0) {\n-                assert fileInfo.numberOfParts() >= part;\n-                for (int i = 0; i < part; i++) {\n-                    pos += fileInfo.partBytes(i);\n-                }\n-            }\n-            if ((pos < 0L) || (length < 0L) || (pos + length > data.bytes.length)) {\n-                throw new IllegalArgumentException(\"Invalid arguments (pos=\" + pos + \", length=\" + length\n-                    + \") for hash content (length=\" + data.bytes.length + ')');\n-            }\n-            stream = new ByteArrayInputStream(data.bytes, Math.toIntExact(pos), Math.toIntExact(length));\n-        }\n-        return stream;\n+        assert assertHashIsNotEqualToContent();", "originalCommit": "c3c2c51cc47e89e56e674127456508a241c0cc07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4NDY1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/54072#discussion_r398384652", "bodyText": "+1", "author": "tlrx", "createdAt": "2020-03-26T08:15:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwOTgxMw=="}], "type": "inlineReview", "revised_code": {"commit": "336457a8dd0be2771e42d7dc4badaa4a65c44883", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotIndexInput.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotIndexInput.java\nindex b7bd394de4c..2bd000df6d9 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotIndexInput.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/SearchableSnapshotIndexInput.java\n\n@@ -257,7 +257,6 @@ public class SearchableSnapshotIndexInput extends BaseSearchableSnapshotIndexInp\n     }\n \n     private InputStream openBlobStream(int part, long pos, long length) throws IOException {\n-        assert assertHashIsNotEqualToContent();\n         return blobContainer.readBlob(fileInfo.partName(part), pos, length);\n     }\n \n"}}, {"oid": "336457a8dd0be2771e42d7dc4badaa4a65c44883", "url": "https://github.com/elastic/elasticsearch/commit/336457a8dd0be2771e42d7dc4badaa4a65c44883", "message": "apply feedback", "committedDate": "2020-03-26T08:26:40Z", "type": "commit"}, {"oid": "52e310588999a101a170f8ca7f2d932c45e3f05f", "url": "https://github.com/elastic/elasticsearch/commit/52e310588999a101a170f8ca7f2d932c45e3f05f", "message": "Merge branch 'feature/searchable-snapshots' into extract-hash-content", "committedDate": "2020-03-26T09:04:48Z", "type": "commit"}]}