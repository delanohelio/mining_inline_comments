{"pr_number": 59027, "pr_title": "[ML] Wait for shards to initialize after creating ML internal indices", "pr_createdAt": "2020-07-03T17:47:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59027", "timeline": [{"oid": "6758c963dec619a94637bfce94683bac72a87566", "url": "https://github.com/elastic/elasticsearch/commit/6758c963dec619a94637bfce94683bac72a87566", "message": "[ML] Wait for shards to initialize after creating ML internal indices\n\nThere have been a few test failures that are likely caused by tests\nperforming actions that use ML indices immediately after the actions\nthat create those ML indices.  Currently this can result in attempts\nto search the newly created index before its shards have initialized.\n\nThis change makes the method that creates the internal ML indices\nthat have been affected by this problem (state and stats) wait for\nthe shards to be initialized before returning.\n\nFixes #54887\nFixes #55221\nFixes #55807\nFixes #57102\nFixes #58841\nFixes #59011", "committedDate": "2020-07-03T17:39:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA1OTQ2NA==", "url": "https://github.com/elastic/elasticsearch/pull/59027#discussion_r450059464", "bodyText": "I think you could replace this call with a more concise client.admin().cluster()::health.", "author": "przemekwitek", "createdAt": "2020-07-06T08:20:46Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java", "diffHunk": "@@ -69,13 +72,38 @@ private MlIndexAndAlias() {}\n      * Adds an {@code alias} to that index if it was created,\n      * or to the index with the highest suffix if the index did not have to be created.\n      * The listener is notified with a {@code boolean} that informs whether the index or the alias were created.\n+     * If the index is created, the listener is not called until the index is ready to use via the supplied alias,\n+     * so that a method that receives a success response from this method can safely use the index immediately.\n      */\n     public static void createIndexAndAliasIfNecessary(Client client,\n                                                       ClusterState clusterState,\n                                                       IndexNameExpressionResolver resolver,\n                                                       String indexPatternPrefix,\n                                                       String alias,\n-                                                      ActionListener<Boolean> listener) {\n+                                                      ActionListener<Boolean> finalListener) {\n+\n+        // If the index and alias were successfully created then wait for the shards of the index that the alias points to be ready\n+        ActionListener<Boolean> waitForShardsListener = ActionListener.wrap(\n+            created -> {\n+                if (created) {\n+                    ClusterHealthRequest healthRequest = Requests.clusterHealthRequest(alias)\n+                        .waitForNoRelocatingShards(true)\n+                        .waitForNoInitializingShards(true);\n+                    executeAsyncWithOrigin(\n+                        client.threadPool().getThreadContext(),\n+                        ML_ORIGIN,\n+                        healthRequest,\n+                        ActionListener.<ClusterHealthResponse>wrap(\n+                            response -> finalListener.onResponse(response.isTimedOut() == false),\n+                            finalListener::onFailure),\n+                        (request, listener) -> client.admin().cluster().health(request, listener)", "originalCommit": "6758c963dec619a94637bfce94683bac72a87566", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b410296cfa2fd2cb994a70546be4617c0de82084", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java\nindex 9848fc16783..6b969a5ed17 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java\n\n@@ -82,22 +82,11 @@ public final class MlIndexAndAlias {\n                                                       String alias,\n                                                       ActionListener<Boolean> finalListener) {\n \n-        // If the index and alias were successfully created then wait for the shards of the index that the alias points to be ready\n-        ActionListener<Boolean> waitForShardsListener = ActionListener.wrap(\n+        // If both the index and alias were successfully created then wait for the shards of the index that the alias points to be ready\n+        ActionListener<Boolean> indexCreatedListener = ActionListener.wrap(\n             created -> {\n                 if (created) {\n-                    ClusterHealthRequest healthRequest = Requests.clusterHealthRequest(alias)\n-                        .waitForNoRelocatingShards(true)\n-                        .waitForNoInitializingShards(true);\n-                    executeAsyncWithOrigin(\n-                        client.threadPool().getThreadContext(),\n-                        ML_ORIGIN,\n-                        healthRequest,\n-                        ActionListener.<ClusterHealthResponse>wrap(\n-                            response -> finalListener.onResponse(response.isTimedOut() == false),\n-                            finalListener::onFailure),\n-                        (request, listener) -> client.admin().cluster().health(request, listener)\n-                    );\n+                    waitForShardsReady(client, alias, finalListener);\n                 } else {\n                     finalListener.onResponse(false);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA2MDEwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59027#discussion_r450060109", "bodyText": "TBH it is always unclear to me how should I name the listener variable: after the action that takes place inside the listener or after the action that invokes the listener in the end?\nIs there any codebase-wide guideline for that?", "author": "przemekwitek", "createdAt": "2020-07-06T08:22:00Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java", "diffHunk": "@@ -69,13 +72,38 @@ private MlIndexAndAlias() {}\n      * Adds an {@code alias} to that index if it was created,\n      * or to the index with the highest suffix if the index did not have to be created.\n      * The listener is notified with a {@code boolean} that informs whether the index or the alias were created.\n+     * If the index is created, the listener is not called until the index is ready to use via the supplied alias,\n+     * so that a method that receives a success response from this method can safely use the index immediately.\n      */\n     public static void createIndexAndAliasIfNecessary(Client client,\n                                                       ClusterState clusterState,\n                                                       IndexNameExpressionResolver resolver,\n                                                       String indexPatternPrefix,\n                                                       String alias,\n-                                                      ActionListener<Boolean> listener) {\n+                                                      ActionListener<Boolean> finalListener) {\n+\n+        // If the index and alias were successfully created then wait for the shards of the index that the alias points to be ready\n+        ActionListener<Boolean> waitForShardsListener = ActionListener.wrap(", "originalCommit": "6758c963dec619a94637bfce94683bac72a87566", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b410296cfa2fd2cb994a70546be4617c0de82084", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java\nindex 9848fc16783..6b969a5ed17 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/MlIndexAndAlias.java\n\n@@ -82,22 +82,11 @@ public final class MlIndexAndAlias {\n                                                       String alias,\n                                                       ActionListener<Boolean> finalListener) {\n \n-        // If the index and alias were successfully created then wait for the shards of the index that the alias points to be ready\n-        ActionListener<Boolean> waitForShardsListener = ActionListener.wrap(\n+        // If both the index and alias were successfully created then wait for the shards of the index that the alias points to be ready\n+        ActionListener<Boolean> indexCreatedListener = ActionListener.wrap(\n             created -> {\n                 if (created) {\n-                    ClusterHealthRequest healthRequest = Requests.clusterHealthRequest(alias)\n-                        .waitForNoRelocatingShards(true)\n-                        .waitForNoInitializingShards(true);\n-                    executeAsyncWithOrigin(\n-                        client.threadPool().getThreadContext(),\n-                        ML_ORIGIN,\n-                        healthRequest,\n-                        ActionListener.<ClusterHealthResponse>wrap(\n-                            response -> finalListener.onResponse(response.isTimedOut() == false),\n-                            finalListener::onFailure),\n-                        (request, listener) -> client.admin().cluster().health(request, listener)\n-                    );\n+                    waitForShardsReady(client, alias, finalListener);\n                 } else {\n                     finalListener.onResponse(false);\n                 }\n"}}, {"oid": "b410296cfa2fd2cb994a70546be4617c0de82084", "url": "https://github.com/elastic/elasticsearch/commit/b410296cfa2fd2cb994a70546be4617c0de82084", "message": "Review comments and fixes", "committedDate": "2020-07-06T10:55:00Z", "type": "commit"}, {"oid": "4499652667f2f9d20175257dc28e4940bb596026", "url": "https://github.com/elastic/elasticsearch/commit/4499652667f2f9d20175257dc28e4940bb596026", "message": "Merge branch 'master' into wait_for_shards_on_index_create", "committedDate": "2020-07-06T10:55:29Z", "type": "commit"}, {"oid": "fb1d2f59d2ef12b250d0258c291c64f3e50abaa6", "url": "https://github.com/elastic/elasticsearch/commit/fb1d2f59d2ef12b250d0258c291c64f3e50abaa6", "message": "Merge branch 'master' into wait_for_shards_on_index_create", "committedDate": "2020-07-06T14:14:41Z", "type": "commit"}]}