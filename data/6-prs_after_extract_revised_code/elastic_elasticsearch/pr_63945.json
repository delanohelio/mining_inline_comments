{"pr_number": 63945, "pr_title": "Distinguish between simple matches with and without the terms index", "pr_createdAt": "2020-10-20T15:14:22Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63945", "timeline": [{"oid": "5e0c1dd04bf82cf8b50c75f76494940080ca2691", "url": "https://github.com/elastic/elasticsearch/commit/5e0c1dd04bf82cf8b50c75f76494940080ca2691", "message": "Distinguish between simple matches with and without the terms index", "committedDate": "2020-10-20T15:05:12Z", "type": "commit"}, {"oid": "172c80336c5d8d5e05dfe61ded8e85b28cb5770d", "url": "https://github.com/elastic/elasticsearch/commit/172c80336c5d8d5e05dfe61ded8e85b28cb5770d", "message": "test should use text field, not long...", "committedDate": "2020-10-20T17:13:45Z", "type": "commit"}, {"oid": "f2037bfce2afeb52b06423b92872599be1170ad7", "url": "https://github.com/elastic/elasticsearch/commit/f2037bfce2afeb52b06423b92872599be1170ad7", "message": "Merge remote-tracking branch 'origin/master' into mapper/numericsearchinfo", "committedDate": "2020-10-21T08:32:16Z", "type": "commit"}, {"oid": "807bae1c7942cdeb8dfc1ab9099a25cdf840a249", "url": "https://github.com/elastic/elasticsearch/commit/807bae1c7942cdeb8dfc1ab9099a25cdf840a249", "message": "sigterms test should not try and use sigtext agg because it indexes longs", "committedDate": "2020-10-21T08:34:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE0ODYyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/63945#discussion_r509148621", "bodyText": "don't we lose coverage with these changes?", "author": "javanna", "createdAt": "2020-10-21T09:57:48Z", "path": "server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java", "diffHunk": "@@ -590,11 +578,7 @@ public void testScriptCaching() throws Exception {\n                 .getMissCount(), equalTo(1L));\n \n         // Ensure that non-scripted requests are cached as normal\n-        if (useSigText) {\n-            r = client().prepareSearch(\"cache_test_idx\").setSize(0).addAggregation(significantText(\"foo\", \"s\")).get();\n-        } else {\n-            r = client().prepareSearch(\"cache_test_idx\").setSize(0).addAggregation(significantTerms(\"foo\").field(\"s\")).get();\n-        }\n+        r = client().prepareSearch(\"cache_test_idx\").setSize(0).addAggregation(significantTerms(\"foo\").field(\"s\")).get();", "originalCommit": "807bae1c7942cdeb8dfc1ab9099a25cdf840a249", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE2MDcxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/63945#discussion_r509160711", "bodyText": "Hm, you're right, I had thought this was just testing a useless agg but actually I should change it instead to also have some text and to run the sigText agg over the text field instead.", "author": "romseygeek", "createdAt": "2020-10-21T10:17:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE0ODYyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI1NDEzMA==", "url": "https://github.com/elastic/elasticsearch/pull/63945#discussion_r509254130", "bodyText": "++", "author": "javanna", "createdAt": "2020-10-21T12:56:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE0ODYyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "1f81fbed3c12f3b47ff5c6039cb0cae5dae6d19d", "chunk": "diff --git a/server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java b/server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java\nindex 955da2fe4cd..a4d90afd1d7 100644\n--- a/server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java\n+++ b/server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java\n\n@@ -578,7 +590,11 @@ public class SignificantTermsSignificanceScoreIT extends ESIntegTestCase {\n                 .getMissCount(), equalTo(1L));\n \n         // Ensure that non-scripted requests are cached as normal\n-        r = client().prepareSearch(\"cache_test_idx\").setSize(0).addAggregation(significantTerms(\"foo\").field(\"s\")).get();\n+        if (useSigText) {\n+            r = client().prepareSearch(\"cache_test_idx\").setSize(0).addAggregation(significantText(\"foo\", \"s\")).get();\n+        } else {\n+            r = client().prepareSearch(\"cache_test_idx\").setSize(0).addAggregation(significantTerms(\"foo\").field(\"s\")).get();\n+        }\n         assertSearchResponse(r);\n \n         assertThat(client().admin().indices().prepareStats(\"cache_test_idx\").setRequestCache(true).get().getTotal().getRequestCache()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE1MDEzMw==", "url": "https://github.com/elastic/elasticsearch/pull/63945#discussion_r509150133", "bodyText": "This seems to have slipped when I double checked all the mappers, maybe it does not have a test so we don't enforce its consistency.", "author": "javanna", "createdAt": "2020-10-21T10:00:19Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/VersionFieldMapper.java", "diffHunk": "@@ -42,7 +42,7 @@\n         public static final VersionFieldType INSTANCE = new VersionFieldType();\n \n         private VersionFieldType() {\n-            super(NAME, false, false, true, TextSearchInfo.SIMPLE_MATCH_ONLY, Collections.emptyMap());\n+            super(NAME, false, false, true, TextSearchInfo.NONE, Collections.emptyMap());", "originalCommit": "807bae1c7942cdeb8dfc1ab9099a25cdf840a249", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE2MDk5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/63945#discussion_r509160993", "bodyText": "Yes, there's no test for VersionFieldMapper - I'll add one as a follow up.", "author": "romseygeek", "createdAt": "2020-10-21T10:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE1MDEzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI1Mzk2MA==", "url": "https://github.com/elastic/elasticsearch/pull/63945#discussion_r509253960", "bodyText": "thank you", "author": "javanna", "createdAt": "2020-10-21T12:56:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE1MDEzMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE1MTk4NA==", "url": "https://github.com/elastic/elasticsearch/pull/63945#discussion_r509151984", "bodyText": "should it be return ft.getTextSearchInfo != NONE && gt.getTextSearchIngo != SIMPLE_MATCH_WITHOUT_TERMS ?", "author": "javanna", "createdAt": "2020-10-21T10:03:20Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorFactory.java", "diffHunk": "@@ -98,6 +99,13 @@ public SignificantTextAggregatorFactory(String name,\n         this.significanceHeuristic = significanceHeuristic;\n     }\n \n+    private static boolean supportsAgg(MappedFieldType ft) {\n+        if (ft.getTextSearchInfo() == TextSearchInfo.NONE) {\n+            return false;\n+        }\n+        return ft.getTextSearchInfo() != TextSearchInfo.SIMPLE_MATCH_WITHOUT_TERMS;", "originalCommit": "807bae1c7942cdeb8dfc1ab9099a25cdf840a249", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE2MTE5MA==", "url": "https://github.com/elastic/elasticsearch/pull/63945#discussion_r509161190", "bodyText": "++", "author": "romseygeek", "createdAt": "2020-10-21T10:18:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE1MTk4NA=="}], "type": "inlineReview", "revised_code": {"commit": "8714356399c179341467ee272c3a21a289029fcd", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorFactory.java b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorFactory.java\nindex 5386e828418..77444aec5a4 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorFactory.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorFactory.java\n\n@@ -100,10 +100,8 @@ public class SignificantTextAggregatorFactory extends AggregatorFactory {\n     }\n \n     private static boolean supportsAgg(MappedFieldType ft) {\n-        if (ft.getTextSearchInfo() == TextSearchInfo.NONE) {\n-            return false;\n-        }\n-        return ft.getTextSearchInfo() != TextSearchInfo.SIMPLE_MATCH_WITHOUT_TERMS;\n+        return ft.getTextSearchInfo() != TextSearchInfo.NONE\n+            && ft.getTextSearchInfo() != TextSearchInfo.SIMPLE_MATCH_WITHOUT_TERMS;\n     }\n \n     @Override\n"}}, {"oid": "1f81fbed3c12f3b47ff5c6039cb0cae5dae6d19d", "url": "https://github.com/elastic/elasticsearch/commit/1f81fbed3c12f3b47ff5c6039cb0cae5dae6d19d", "message": "Revert \"sigterms test should not try and use sigtext agg because it indexes longs\"\n\nThis reverts commit 807bae1c7942cdeb8dfc1ab9099a25cdf840a249.", "committedDate": "2020-10-21T10:19:03Z", "type": "commit"}, {"oid": "8714356399c179341467ee272c3a21a289029fcd", "url": "https://github.com/elastic/elasticsearch/commit/8714356399c179341467ee272c3a21a289029fcd", "message": "keep test coverage; simplify support test", "committedDate": "2020-10-21T10:22:53Z", "type": "commit"}, {"oid": "6adf89ec66416710cf842ca09c5c4e6645b8b44e", "url": "https://github.com/elastic/elasticsearch/commit/6adf89ec66416710cf842ca09c5c4e6645b8b44e", "message": "Merge remote-tracking branch 'origin/master' into mapper/numericsearchinfo", "committedDate": "2020-10-26T16:10:52Z", "type": "commit"}, {"oid": "11fc9d497687fd8df14ec15c132201f38d07d810", "url": "https://github.com/elastic/elasticsearch/commit/11fc9d497687fd8df14ec15c132201f38d07d810", "message": "Merge remote-tracking branch 'origin/master' into mapper/numericsearchinfo", "committedDate": "2020-10-27T10:51:20Z", "type": "commit"}]}