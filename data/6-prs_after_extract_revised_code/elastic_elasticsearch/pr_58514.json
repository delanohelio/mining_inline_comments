{"pr_number": 58514, "pr_title": "Simplify mapping validation for resizing indices.", "pr_createdAt": "2020-06-24T19:30:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58514", "timeline": [{"oid": "330522ac27bdd73c237d64b79ddf8f787dd093ef", "url": "https://github.com/elastic/elasticsearch/commit/330522ac27bdd73c237d64b79ddf8f787dd093ef", "message": "Simplify mapping validation for resizing indices.\n\nWhen creating a target index from a source index, we don't allow for target\nmappings to be specified. This PR simplifies the check that the target mappings\nare empty.\n\nThis refactor will help when implementing composable template merging, since we\nno longer need to resolve + check the target mappings when creating an index\nfrom a template.", "committedDate": "2020-06-24T19:27:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyNDUyMw==", "url": "https://github.com/elastic/elasticsearch/pull/58514#discussion_r445124523", "bodyText": "This new logic looks quite different. The existing logic didn't actually make sense to me:\n\nWe call these 'source metadata mappings', when these are actually target mappings.\nHere we make sure to swap out the type name for the singleton type _doc. But then in validateResize we throw an error if we encounter any mapping besides _default_. So we necessarily throw an error if the mappings are not empty.", "author": "jtibshirani", "createdAt": "2020-06-24T19:34:19Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java", "diffHunk": "@@ -549,22 +549,17 @@ private ClusterState applyCreateIndexRequestWithExistingMetadata(final ClusterSt\n                                                                                             throws Exception {\n         logger.info(\"applying create index request using existing index [{}] metadata\", sourceMetadata.getIndex().getName());\n \n-        final Map<String, Map<String, Object>> mappings;\n-        if (request.mappings().size() == 0) {\n-            mappings = Collections.emptyMap();\n-        } else {\n-            assert request.mappings().size() == 1 : \"expected source metadata mappings to have 1 type but it had: \" + request.mappings();\n-            String sourceMappings = request.mappings().values().iterator().next();\n-            mappings = Collections.singletonMap(MapperService.SINGLE_MAPPING_NAME,\n-                Collections.unmodifiableMap(MapperService.parseMapping(xContentRegistry, sourceMappings)));\n+        if (request.mappings().size() > 0) {", "originalCommit": "330522ac27bdd73c237d64b79ddf8f787dd093ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}