{"pr_number": 66148, "pr_title": "[Transform] randomize integration tests using runtime fields", "pr_createdAt": "2020-12-10T09:42:43Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66148", "timeline": [{"oid": "e3479f6297dfb0b1f75a1119e1e8f6c4ac1f0deb", "url": "https://github.com/elastic/elasticsearch/commit/e3479f6297dfb0b1f75a1119e1e8f6c4ac1f0deb", "message": "randomize integration tests using runtime fields", "committedDate": "2020-12-10T09:17:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxMzkwNA==", "url": "https://github.com/elastic/elasticsearch/pull/66148#discussion_r542313904", "bodyText": "\ud83d\udc4d", "author": "davidkyle", "createdAt": "2020-12-14T11:30:49Z", "path": "x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TransformContinuousIT.java", "diffHunk": "@@ -355,9 +356,66 @@ private void putIndex(String indexName, String dateType, boolean isDataStream) t\n                     .endObject()\n                     .startObject(\"some-timestamp\")\n                     .field(\"type\", dateType)\n+                    .endObject();\n+\n+                builder.endObject(); // properties\n+\n+                // add some runtime fields\n+                builder.startObject(\"runtime\");\n+\n+                builder.startObject(\"metric-rt-2x\")\n+                    .field(\"type\", \"long\")\n+                    .startObject(\"script\")\n+                    .field(\"source\", \"if (params._source.metric != null) {emit(params._source.metric * 2)}\")\n+                    .endObject()\n+                    .endObject()\n+                    .startObject(\"event-upper\")\n+                    .field(\"type\", \"keyword\")\n+                    .startObject(\"script\")\n+                    .field(\"source\", \"if (params._source.event != null) {emit(params._source.event.toUpperCase())}\")\n+                    .endObject()\n+                    .endObject()\n+                    .startObject(\"timestamp-at-runtime\")\n+                    .field(\"type\", \"date\")\n+                    .startObject(\"script\")\n+                    .field(\"source\", \"emit(parse(params._source.get('timestamp')))\")\n                     .endObject()\n                     .endObject()\n+                    .startObject(\"metric-timestamp-5m-earlier\")\n+                    .field(\"type\", \"date\")\n+                    .startObject(\"script\")\n+                    .field(\n+                        \"source\",\n+                        \"if (doc['metric-timestamp'].size()!=0) {emit(doc['metric-timestamp'].value.minus(5, ChronoUnit.MINUTES).toInstant().toEpochMilli())}\"\n+                    )\n+                    .endObject()\n+                    .endObject()\n+                    .startObject(\"some-timestamp-10m-earlier\")\n+                    .field(\"type\", \"date\")\n+                    .startObject(\"script\")\n+                    .field(\n+                        \"source\",\n+                        \"if (doc['some-timestamp'].size()!=0) {emit(doc['some-timestamp'].value.minus(10, ChronoUnit.MINUTES).toInstant().toEpochMilli())}\"\n+                    )\n+                    .endObject()\n                     .endObject();\n+\n+                // random overlay of existing field", "originalCommit": "e3479f6297dfb0b1f75a1119e1e8f6c4ac1f0deb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDE4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/66148#discussion_r542320185", "bodyText": "Shouldn't this be termsField?", "author": "przemekwitek", "createdAt": "2020-12-14T11:41:36Z", "path": "x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TermsGroupByIT.java", "diffHunk": "@@ -55,13 +59,15 @@ public TransformConfig createConfig() {\n \n         PivotConfig.Builder pivotConfigBuilder = new PivotConfig.Builder();\n         pivotConfigBuilder.setGroups(\n-            new GroupConfig.Builder().groupBy(\"event\", new TermsGroupSource.Builder().setField(\"event\").setMissingBucket(missing).build())\n-                .build()\n+            new GroupConfig.Builder().groupBy(\n+                \"event\",", "originalCommit": "e3479f6297dfb0b1f75a1119e1e8f6c4ac1f0deb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxNzg5NA==", "url": "https://github.com/elastic/elasticsearch/pull/66148#discussion_r542417894", "bodyText": "no, this is the output field name, on the next line there is setField(termsField)\nHaving that said, it would be more understandable if input and output use different names", "author": "hendrikmuhs", "createdAt": "2020-12-14T14:17:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDE4NQ=="}], "type": "inlineReview", "revised_code": null}]}