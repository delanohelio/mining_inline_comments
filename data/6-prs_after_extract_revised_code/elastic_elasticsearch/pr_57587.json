{"pr_number": 57587, "pr_title": "Timeout health API on busy master", "pr_createdAt": "2020-06-03T07:54:41Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57587", "timeline": [{"oid": "a3485341558b6f1574b31e41d8b2ecd15fbb6303", "url": "https://github.com/elastic/elasticsearch/commit/a3485341558b6f1574b31e41d8b2ecd15fbb6303", "message": "Timeout health API on busy master\n\nToday `GET _cluster/health?wait_for_events=...&timeout=...` will wait\nindefinitely for the master to process the pending cluster health task,\nignoring the specified timeout. This could take a very long time if the master\nis overloaded. This commit fixes this by adding a timeout to the pending\ncluster health task.", "committedDate": "2020-06-03T07:50:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY2NTg3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57587#discussion_r434665876", "bodyText": "We could maybe use a PlainActionFuture<Void> here and resolve it if keepSubmittingTasks.get() is false or on failure. Then we can just .get() on it at the end of the test and not leak the update task beyond the test time? (also I think we could get some strange test failures without that, where we set false for keep submitting, then leak the task, and get an onFailure when we shut down the cluster after the test?)", "author": "original-brownbear", "createdAt": "2020-06-03T15:42:55Z", "path": "server/src/internalClusterTest/java/org/elasticsearch/cluster/ClusterHealthIT.java", "diffHunk": "@@ -311,4 +312,34 @@ public void testHealthOnMasterFailover() throws Exception {\n             assertSame(responseFuture.get().getStatus(), ClusterHealthStatus.GREEN);\n         }\n     }\n+\n+    public void testWaitForEventsTimesOutIfMasterBusy() {\n+        final AtomicBoolean keepSubmittingTasks = new AtomicBoolean(true);\n+        final ClusterService clusterService = internalCluster().getInstance(ClusterService.class, internalCluster().getMasterName());\n+        clusterService.submitStateUpdateTask(\"looping task\", new ClusterStateUpdateTask(Priority.LOW) {", "originalCommit": "a3485341558b6f1574b31e41d8b2ecd15fbb6303", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxNjgwMg==", "url": "https://github.com/elastic/elasticsearch/pull/57587#discussion_r434716802", "bodyText": "Good point, yes. Also in the other test that submits a looping cluster state task - we're waiting for it to complete assuming everything else goes smoothly but otherwise we don't clean it up, so I adjusted that too. See 40945b7.", "author": "DaveCTurner", "createdAt": "2020-06-03T16:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY2NTg3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "40945b7b860c00b74b864e846ab375823736f351", "chunk": "diff --git a/server/src/internalClusterTest/java/org/elasticsearch/cluster/ClusterHealthIT.java b/server/src/internalClusterTest/java/org/elasticsearch/cluster/ClusterHealthIT.java\nindex 7d8d89cbcd0..7488e24b881 100644\n--- a/server/src/internalClusterTest/java/org/elasticsearch/cluster/ClusterHealthIT.java\n+++ b/server/src/internalClusterTest/java/org/elasticsearch/cluster/ClusterHealthIT.java\n\n@@ -316,6 +325,7 @@ public class ClusterHealthIT extends ESIntegTestCase {\n     public void testWaitForEventsTimesOutIfMasterBusy() {\n         final AtomicBoolean keepSubmittingTasks = new AtomicBoolean(true);\n         final ClusterService clusterService = internalCluster().getInstance(ClusterService.class, internalCluster().getMasterName());\n+        final PlainActionFuture<Void> completionFuture = new PlainActionFuture<>();\n         clusterService.submitStateUpdateTask(\"looping task\", new ClusterStateUpdateTask(Priority.LOW) {\n             @Override\n             public ClusterState execute(ClusterState currentState) {\n"}}, {"oid": "40945b7b860c00b74b864e846ab375823736f351", "url": "https://github.com/elastic/elasticsearch/commit/40945b7b860c00b74b864e846ab375823736f351", "message": "Wait for publication loop to complete before finishing test", "committedDate": "2020-06-03T16:54:51Z", "type": "commit"}]}