{"pr_number": 56094, "pr_title": "Stop Redundantly Serializing ShardId in BulkShardResponse", "pr_createdAt": "2020-05-04T07:03:17Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56094", "timeline": [{"oid": "3f7b8e6ff60901919aab87506343fd4fe5c4af77", "url": "https://github.com/elastic/elasticsearch/commit/3f7b8e6ff60901919aab87506343fd4fe5c4af77", "message": "Stop Redundantly Serializing ShardId in BulkShardResponse\n\nWhen reading/writing the individual doc responses in the context\nof a bulk shard response there is no need to serialize the `ShardId`\nover and over. This can waste a lot of memory when handling large bulk\nrequests.", "committedDate": "2020-05-04T07:00:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1ODMwMA==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419358300", "bodyText": "else fail (if type != 2)?", "author": "DaveCTurner", "createdAt": "2020-05-04T11:02:24Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -359,6 +360,24 @@ public String toString() {\n \n     BulkItemResponse() {}\n \n+    BulkItemResponse(ShardId shardId, StreamInput in) throws IOException {\n+        id = in.readVInt();\n+        opType = OpType.fromId(in.readByte());\n+\n+        byte type = in.readByte();\n+        if (type == 0) {\n+            response = new IndexResponse(shardId, in);\n+        } else if (type == 1) {\n+            response = new DeleteResponse(shardId, in);\n+        } else if (type == 3) { // make 3 instead of 2, because 2 is already in use for 'no responses'\n+            response = new UpdateResponse(shardId, in);\n+        }", "originalCommit": "3f7b8e6ff60901919aab87506343fd4fe5c4af77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTAzMg==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419391032", "bodyText": "Sure added that check :)", "author": "original-brownbear", "createdAt": "2020-05-04T12:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1ODMwMA=="}], "type": "inlineReview", "revised_code": {"commit": "9b083a77a4aaeb0bcf42145d7e89cbf4735abe9b", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java b/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java\nindex 13691eb0fcd..5707e4b2b9a 100644\n--- a/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java\n+++ b/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java\n\n@@ -371,6 +371,8 @@ public class BulkItemResponse implements Writeable, StatusToXContentObject {\n             response = new DeleteResponse(shardId, in);\n         } else if (type == 3) { // make 3 instead of 2, because 2 is already in use for 'no responses'\n             response = new UpdateResponse(shardId, in);\n+        } else if (type != 2) {\n+            throw new IllegalArgumentException(\"Unexpected type [\" + type + \"]\");\n         }\n \n         if (in.readBoolean()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1ODMzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419358339", "bodyText": "else fail?", "author": "DaveCTurner", "createdAt": "2020-05-04T11:02:30Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -489,4 +508,28 @@ public void writeTo(StreamOutput out) throws IOException {\n             failure.writeTo(out);\n         }\n     }\n+\n+    public void writeThin(StreamOutput out) throws IOException {\n+        out.writeVInt(id);\n+        out.writeByte(opType.getId());\n+\n+        if (response == null) {\n+            out.writeByte((byte) 2);\n+        } else {\n+            if (response instanceof IndexResponse) {\n+                out.writeByte((byte) 0);\n+            } else if (response instanceof DeleteResponse) {\n+                out.writeByte((byte) 1);\n+            } else if (response instanceof UpdateResponse) {\n+                out.writeByte((byte) 3); // make 3 instead of 2, because 2 is already in use for 'no responses'\n+            }", "originalCommit": "3f7b8e6ff60901919aab87506343fd4fe5c4af77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTEwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419391105", "bodyText": "Sure, added that check :)", "author": "original-brownbear", "createdAt": "2020-05-04T12:13:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1ODMzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b083a77a4aaeb0bcf42145d7e89cbf4735abe9b", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java b/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java\nindex 13691eb0fcd..5707e4b2b9a 100644\n--- a/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java\n+++ b/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java\n\n@@ -516,13 +514,7 @@ public class BulkItemResponse implements Writeable, StatusToXContentObject {\n         if (response == null) {\n             out.writeByte((byte) 2);\n         } else {\n-            if (response instanceof IndexResponse) {\n-                out.writeByte((byte) 0);\n-            } else if (response instanceof DeleteResponse) {\n-                out.writeByte((byte) 1);\n-            } else if (response instanceof UpdateResponse) {\n-                out.writeByte((byte) 3); // make 3 instead of 2, because 2 is already in use for 'no responses'\n-            }\n+            writeResponseType(out);\n             response.writeThin(out);\n         }\n         if (failure == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419359642", "bodyText": "Can we assert anything about in.getVersion() here? Not looked in detail, but I hope that this constructor will become obsolete after this change is complete.", "author": "DaveCTurner", "createdAt": "2020-05-04T11:05:33Z", "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -130,6 +130,22 @@ public DocWriteResponse(ShardId shardId, String id, long seqNo, long primaryTerm\n         this.result = Objects.requireNonNull(result);\n     }\n \n+    // needed for deserialization\n+    protected DocWriteResponse(ShardId shardId, StreamInput in) throws IOException {\n+        super(in);\n+        this.shardId = shardId;\n+        if (in.getVersion().before(Version.V_8_0_0)) {\n+            String type = in.readString();\n+            assert MapperService.SINGLE_MAPPING_NAME.equals(type) : \"Expected [_doc] but received [\" + type + \"]\";\n+        }\n+        id = in.readString();\n+        version = in.readZLong();\n+        seqNo = in.readZLong();\n+        primaryTerm = in.readVLong();\n+        forcedRefresh = in.readBoolean();\n+        result = Result.readFrom(in);\n+    }\n+\n     // needed for deserialization\n     protected DocWriteResponse(StreamInput in) throws IOException {\n         super(in);", "originalCommit": "3f7b8e6ff60901919aab87506343fd4fe5c4af77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3NjkwNA==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419376904", "bodyText": "Not quite I think. We still have TransportIndexAction which still uses and logically needs the full deserialization on an IndexResponse as far as I can tell and won't go away in 8 right?", "author": "original-brownbear", "createdAt": "2020-05-04T11:44:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4MTQ4OA==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419381488", "bodyText": "Can't we get rid of that yet? It was deprecated over 3 years ago.", "author": "DaveCTurner", "createdAt": "2020-05-04T11:54:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTI0OA==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419391248", "bodyText": "Right in 8 we can ... opening a PR for that sec", "author": "original-brownbear", "createdAt": "2020-05-04T12:14:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwMDUxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419400511", "bodyText": "Urgh nevermind, technically we can remove this now but it's a far from trivial change to do so (we're still using that action all over the place in tests). I don't think I can do that in the short-term.", "author": "original-brownbear", "createdAt": "2020-05-04T12:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQxOTA4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419419083", "bodyText": "Ok, can we mention IndexAction in this method's Javadoc so we keep track of the dependency.", "author": "DaveCTurner", "createdAt": "2020-05-04T13:03:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1OTY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "328e078f44b49f4cada1860a88e5ab26e3853f32", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/DocWriteResponse.java b/server/src/main/java/org/elasticsearch/action/DocWriteResponse.java\nindex b2e400a777f..9ae090cbd6e 100644\n--- a/server/src/main/java/org/elasticsearch/action/DocWriteResponse.java\n+++ b/server/src/main/java/org/elasticsearch/action/DocWriteResponse.java\n\n@@ -146,7 +146,10 @@ public abstract class DocWriteResponse extends ReplicationResponse implements Wr\n         result = Result.readFrom(in);\n     }\n \n-    // needed for deserialization\n+    /**\n+     * Needed for deserialization of single item requests in {@link org.elasticsearch.action.index.IndexAction} and BwC\n+     * deserialization path\n+     */\n     protected DocWriteResponse(StreamInput in) throws IOException {\n         super(in);\n         shardId = new ShardId(in);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MDk2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419360965", "bodyText": "How about something more descriptive than doWrite? writeWithoutShardId? writeDetails?", "author": "DaveCTurner", "createdAt": "2020-05-04T11:08:41Z", "path": "server/src/main/java/org/elasticsearch/action/DocWriteResponse.java", "diffHunk": "@@ -258,10 +274,19 @@ public String getLocation(@Nullable String routing) {\n         return location.toString();\n     }\n \n+    public void writeThin(StreamOutput out) throws IOException {\n+        super.writeTo(out);\n+        doWrite(out);\n+    }\n+\n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n         super.writeTo(out);\n         shardId.writeTo(out);\n+        doWrite(out);\n+    }\n+\n+    private void doWrite(StreamOutput out) throws IOException {", "originalCommit": "3f7b8e6ff60901919aab87506343fd4fe5c4af77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTY5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419391693", "bodyText": "Renamed :)", "author": "original-brownbear", "createdAt": "2020-05-04T12:15:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MDk2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "478595f34d8f2cae3f88f377182b9f803479347f", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/DocWriteResponse.java b/server/src/main/java/org/elasticsearch/action/DocWriteResponse.java\nindex b2e400a777f..95ebd63696f 100644\n--- a/server/src/main/java/org/elasticsearch/action/DocWriteResponse.java\n+++ b/server/src/main/java/org/elasticsearch/action/DocWriteResponse.java\n\n@@ -276,17 +276,17 @@ public abstract class DocWriteResponse extends ReplicationResponse implements Wr\n \n     public void writeThin(StreamOutput out) throws IOException {\n         super.writeTo(out);\n-        doWrite(out);\n+        writeWithoutShardId(out);\n     }\n \n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n         super.writeTo(out);\n         shardId.writeTo(out);\n-        doWrite(out);\n+        writeWithoutShardId(out);\n     }\n \n-    private void doWrite(StreamOutput out) throws IOException {\n+    private void writeWithoutShardId(StreamOutput out) throws IOException {\n         if (out.getVersion().before(Version.V_8_0_0)) {\n             out.writeString(MapperService.SINGLE_MAPPING_NAME);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MzgxOA==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419363818", "bodyText": "This seems to leave BulkItemResponse#writeTo() as dead code that mostly duplicates this. Does that mean that we don't need BulkItemResponse implements Writeable? If so, can you remove that and rename these methods more appropriately?", "author": "DaveCTurner", "createdAt": "2020-05-04T11:15:12Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java", "diffHunk": "@@ -489,4 +508,28 @@ public void writeTo(StreamOutput out) throws IOException {\n             failure.writeTo(out);\n         }\n     }\n+\n+    public void writeThin(StreamOutput out) throws IOException {", "originalCommit": "3f7b8e6ff60901919aab87506343fd4fe5c4af77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4MjkwMg==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419382902", "bodyText": "We're still using it in org.elasticsearch.action.bulk.BulkItemRequest#writeTo (though now that I looked over that, we might not have to ever write the ShardId for that one as well logically because it's always part of a BulkShardRequest which never has null for the ShardId).\nTo me it seems easier to leave it Writable for now so we have the symmetry with the constructor and rename (and not make it a Writable) after working out how to not write the shard id in that last spot as well. (that's easier to do after we clean up the request side of things in #56092 )", "author": "original-brownbear", "createdAt": "2020-05-04T11:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MzgxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQxOTEzNA==", "url": "https://github.com/elastic/elasticsearch/pull/56094#discussion_r419419134", "bodyText": "Ok", "author": "DaveCTurner", "createdAt": "2020-05-04T13:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MzgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "9b083a77a4aaeb0bcf42145d7e89cbf4735abe9b", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java b/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java\nindex 13691eb0fcd..5707e4b2b9a 100644\n--- a/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java\n+++ b/server/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java\n\n@@ -516,13 +514,7 @@ public class BulkItemResponse implements Writeable, StatusToXContentObject {\n         if (response == null) {\n             out.writeByte((byte) 2);\n         } else {\n-            if (response instanceof IndexResponse) {\n-                out.writeByte((byte) 0);\n-            } else if (response instanceof DeleteResponse) {\n-                out.writeByte((byte) 1);\n-            } else if (response instanceof UpdateResponse) {\n-                out.writeByte((byte) 3); // make 3 instead of 2, because 2 is already in use for 'no responses'\n-            }\n+            writeResponseType(out);\n             response.writeThin(out);\n         }\n         if (failure == null) {\n"}}, {"oid": "c70fb36f96262a0f8040bc4450ab376bead0b51e", "url": "https://github.com/elastic/elasticsearch/commit/c70fb36f96262a0f8040bc4450ab376bead0b51e", "message": "Merge remote-tracking branch 'elastic/master' into more-compact-serialization-replication-response", "committedDate": "2020-05-04T11:39:54Z", "type": "commit"}, {"oid": "9b083a77a4aaeb0bcf42145d7e89cbf4735abe9b", "url": "https://github.com/elastic/elasticsearch/commit/9b083a77a4aaeb0bcf42145d7e89cbf4735abe9b", "message": "CR: comments", "committedDate": "2020-05-04T12:13:20Z", "type": "commit"}, {"oid": "478595f34d8f2cae3f88f377182b9f803479347f", "url": "https://github.com/elastic/elasticsearch/commit/478595f34d8f2cae3f88f377182b9f803479347f", "message": "rename", "committedDate": "2020-05-04T12:14:42Z", "type": "commit"}, {"oid": "8e2e09612bd5aa90fa42797b5f96ad5b3fb9954b", "url": "https://github.com/elastic/elasticsearch/commit/8e2e09612bd5aa90fa42797b5f96ad5b3fb9954b", "message": "Merge remote-tracking branch 'elastic/master' into more-compact-serialization-replication-response", "committedDate": "2020-05-04T13:04:57Z", "type": "commit"}, {"oid": "328e078f44b49f4cada1860a88e5ab26e3853f32", "url": "https://github.com/elastic/elasticsearch/commit/328e078f44b49f4cada1860a88e5ab26e3853f32", "message": "javadoc with link", "committedDate": "2020-05-04T13:10:42Z", "type": "commit"}]}