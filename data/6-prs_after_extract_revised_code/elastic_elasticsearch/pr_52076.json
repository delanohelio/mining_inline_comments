{"pr_number": 52076, "pr_title": "ILM fix the init step to actually be retryable", "pr_createdAt": "2020-02-07T19:37:34Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52076", "timeline": [{"oid": "63f377cf618c50deed79ed9da2ffeca2c984485c", "url": "https://github.com/elastic/elasticsearch/commit/63f377cf618c50deed79ed9da2ffeca2c984485c", "message": "ILM fix the init step to actually be retryable\n\nWe marked the `init` ILM step as retryable but our test used `waitUntil`\nwithout an assert so we didn\u2019t catch the fact that we were not actually\nable to retry this step as our ILM state didn\u2019t contain any information\nabout the policy execution (as we were in the process of initialising\nit). \n\nThis commit manually sets the current step to `init` when we\u2019re moving\nthe ilm policy into the ERROR step (this enables us to successfully\nmove to the error step and later retry the step)", "committedDate": "2020-02-07T19:32:38Z", "type": "commit"}, {"oid": "af73584ccd13ce27390374c884ae9f7a1a469b78", "url": "https://github.com/elastic/elasticsearch/commit/af73584ccd13ce27390374c884ae9f7a1a469b78", "message": "ILM assert on the results of `waitUntil`", "committedDate": "2020-02-07T19:34:04Z", "type": "commit"}, {"oid": "6e46ae3519fad62717c1146b4386ec707337e66d", "url": "https://github.com/elastic/elasticsearch/commit/6e46ae3519fad62717c1146b4386ec707337e66d", "message": "Add license header", "committedDate": "2020-02-07T19:46:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376587149", "bodyText": "I'd consider using assertTrue, we have long body here, it's hard to tell what we asserting here. The same applies to all instances below", "author": "probakowski", "createdAt": "2020-02-07T20:16:18Z", "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -1120,26 +1120,26 @@ public void testRolloverStepRetriesUntilRolledOverIndexIsDeleted() throws Except\n         // {@link org.elasticsearch.xpack.core.ilm.ErrorStep} in order to retry the failing step. As {@link #assertBusy}\n         // increases the wait time between calls exponentially, we might miss the window where the policy is on\n         // {@link WaitForRolloverReadyStep} and the move to `attempt-rollover` request will not be successful.\n-        waitUntil(() -> {\n+        assertThat(waitUntil(() -> {", "originalCommit": "6e46ae3519fad62717c1146b4386ec707337e66d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzY0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376613641", "bodyText": "It could be changed to just assertBusy(() -> {...}, 30, TimeUnit.SECONDS) also and use assertions to signal success/failure", "author": "dakrone", "createdAt": "2020-02-07T21:22:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4MzE0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376983147", "bodyText": "I've changed the assertThat(waitUntil(), is(true)) to assertTrue(waitUntil()) but the reason to use waitUntil as opposed to assertBusy is to avoid having this test flake. We are asserting that the failed step and the retry count are bound to particular values. The fact that we want to check the failed step is what we expect it to be means we have to catch ILM in the ERROR step, but with retryable steps ILM keeps moving back and forth between the failing step (on retry) and the ERROR step (when the step execution fails).\nassertBusy increases the wait time exponentially once it gets to 1 second, while waitUntil keeps it at 1 second. This means we're bound to catch ILM in the ERROR step using waitUntil (but with assertBusy we probe the ILM state only at seconds 1, 2, 4, 8 and 16)", "author": "andreidan", "createdAt": "2020-02-10T10:37:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5MDYzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r377190639", "bodyText": "Ahh okay, I see the difference between them now, in that case I agree that assertTrue would be better than assertThat in this case", "author": "dakrone", "createdAt": "2020-02-10T16:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "26a18af8a740f49c0f419058940a33528d38a5af", "chunk": "diff --git a/x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java b/x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java\nindex 9af96d25f72..8282d95de54 100644\n--- a/x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java\n+++ b/x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java\n\n@@ -1120,17 +1120,17 @@ public class TimeSeriesLifecycleActionsIT extends ESRestTestCase {\n         // {@link org.elasticsearch.xpack.core.ilm.ErrorStep} in order to retry the failing step. As {@link #assertBusy}\n         // increases the wait time between calls exponentially, we might miss the window where the policy is on\n         // {@link WaitForRolloverReadyStep} and the move to `attempt-rollover` request will not be successful.\n-        assertThat(waitUntil(() -> {\n+        assertTrue(waitUntil(() -> {\n             try {\n                 return client().performRequest(moveToStepRequest).getStatusLine().getStatusCode() == 200;\n             } catch (IOException e) {\n                 return false;\n             }\n-        }, 30, TimeUnit.SECONDS), is(true));\n+        }, 30, TimeUnit.SECONDS));\n \n         // Similar to above, using {@link #waitUntil} as we want to make sure the `attempt-rollover` step started failing and is being\n         // retried (which means ILM moves back and forth between the `attempt-rollover` step and the `error` step)\n-        assertThat(\"ILM did not start retrying the attempt-rollover step\", waitUntil(() -> {\n+        assertTrue(\"ILM did not start retrying the attempt-rollover step\", waitUntil(() -> {\n             try {\n                 Map<String, Object> explainIndexResponse = explainIndex(index);\n                 String failedStep = (String) explainIndexResponse.get(\"failed_step\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzEyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376613121", "bodyText": "What was the reason for wrapping this in an ElasticsearchException type exception?", "author": "dakrone", "createdAt": "2020-02-07T21:21:18Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -47,13 +47,17 @@ public ClusterState performAction(Index index, ClusterState clusterState) {\n \n         IndexMetaData.Builder indexMetadataBuilder = IndexMetaData.builder(indexMetaData);\n         if (shouldParseIndexName(indexMetaData.getSettings())) {\n-            long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n-            indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n-                .settings(Settings.builder()\n-                    .put(indexMetaData.getSettings())\n-                    .put(LifecycleSettings.LIFECYCLE_ORIGINATION_DATE, parsedOriginationDate)\n-                    .build()\n-                );\n+            try {\n+                long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n+                indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n+                    .settings(Settings.builder()\n+                        .put(indexMetaData.getSettings())\n+                        .put(LifecycleSettings.LIFECYCLE_ORIGINATION_DATE, parsedOriginationDate)\n+                        .build()\n+                    );\n+            } catch (Exception e) {\n+                throw new InitializePolicyException(e.getMessage(), e);", "originalCommit": "6e46ae3519fad62717c1146b4386ec707337e66d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk3NDIyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376974229", "bodyText": "I'm not entirely happy with using an exception for flow control but since we don't have any lifecycle state yet (as we're just initialising the policy) I used this exception to signal the current failing step is the \"init policy step\" when moving the policy into the ERROR step.\nAnother option would be to pass the current step key to IndexLifecycleTransition.moveClusterStateToErrorStep but this seemed more intrusive.", "author": "andreidan", "createdAt": "2020-02-10T10:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzEyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "27708dd32e0184e1e2a6ade8b2c7650bd2bdf99f", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\nindex f3766a34346..b69541ab580 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\n\n@@ -38,16 +43,15 @@ public final class InitializePolicyContextStep extends ClusterStateActionStep {\n             return clusterState;\n         }\n \n-        LifecycleExecutionState lifecycleState = LifecycleExecutionState\n-            .fromIndexMetadata(indexMetaData);\n-\n-        if (lifecycleState.getLifecycleDate() != null) {\n-            return clusterState;\n-        }\n-\n         IndexMetaData.Builder indexMetadataBuilder = IndexMetaData.builder(indexMetaData);\n-        if (shouldParseIndexName(indexMetaData.getSettings())) {\n-            try {\n+        LifecycleExecutionState lifecycleState;\n+        try {\n+            lifecycleState = LifecycleExecutionState.fromIndexMetadata(indexMetaData);\n+            if (lifecycleState.getLifecycleDate() != null) {\n+                return clusterState;\n+            }\n+\n+            if (shouldParseIndexName(indexMetaData.getSettings())) {\n                 long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n                 indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n                     .settings(Settings.builder()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMzk5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r376613993", "bodyText": "I think the assertThat -> waitUntil -> is(true) is a little hard to follow, I think just a single assertBusy() would be better, since you can add the assertions in the body itself rather than returning a boolean?", "author": "dakrone", "createdAt": "2020-02-07T21:23:44Z", "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -1120,26 +1120,26 @@ public void testRolloverStepRetriesUntilRolledOverIndexIsDeleted() throws Except\n         // {@link org.elasticsearch.xpack.core.ilm.ErrorStep} in order to retry the failing step. As {@link #assertBusy}\n         // increases the wait time between calls exponentially, we might miss the window where the policy is on\n         // {@link WaitForRolloverReadyStep} and the move to `attempt-rollover` request will not be successful.\n-        waitUntil(() -> {\n+        assertThat(waitUntil(() -> {\n             try {\n                 return client().performRequest(moveToStepRequest).getStatusLine().getStatusCode() == 200;\n             } catch (IOException e) {\n                 return false;\n             }\n-        }, 30, TimeUnit.SECONDS);\n+        }, 30, TimeUnit.SECONDS), is(true));\n \n         // Similar to above, using {@link #waitUntil} as we want to make sure the `attempt-rollover` step started failing and is being\n         // retried (which means ILM moves back and forth between the `attempt-rollover` step and the `error` step)\n-        waitUntil(() -> {\n+        assertThat(\"ILM did not start retrying the attempt-rollover step\", waitUntil(() -> {", "originalCommit": "6e46ae3519fad62717c1146b4386ec707337e66d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26a18af8a740f49c0f419058940a33528d38a5af", "chunk": "diff --git a/x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java b/x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java\nindex 9af96d25f72..8282d95de54 100644\n--- a/x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java\n+++ b/x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java\n\n@@ -1120,17 +1120,17 @@ public class TimeSeriesLifecycleActionsIT extends ESRestTestCase {\n         // {@link org.elasticsearch.xpack.core.ilm.ErrorStep} in order to retry the failing step. As {@link #assertBusy}\n         // increases the wait time between calls exponentially, we might miss the window where the policy is on\n         // {@link WaitForRolloverReadyStep} and the move to `attempt-rollover` request will not be successful.\n-        assertThat(waitUntil(() -> {\n+        assertTrue(waitUntil(() -> {\n             try {\n                 return client().performRequest(moveToStepRequest).getStatusLine().getStatusCode() == 200;\n             } catch (IOException e) {\n                 return false;\n             }\n-        }, 30, TimeUnit.SECONDS), is(true));\n+        }, 30, TimeUnit.SECONDS));\n \n         // Similar to above, using {@link #waitUntil} as we want to make sure the `attempt-rollover` step started failing and is being\n         // retried (which means ILM moves back and forth between the `attempt-rollover` step and the `error` step)\n-        assertThat(\"ILM did not start retrying the attempt-rollover step\", waitUntil(() -> {\n+        assertTrue(\"ILM did not start retrying the attempt-rollover step\", waitUntil(() -> {\n             try {\n                 Map<String, Object> explainIndexResponse = explainIndex(index);\n                 String failedStep = (String) explainIndexResponse.get(\"failed_step\");\n"}}, {"oid": "26a18af8a740f49c0f419058940a33528d38a5af", "url": "https://github.com/elastic/elasticsearch/commit/26a18af8a740f49c0f419058940a33528d38a5af", "message": "Use assertTrue", "committedDate": "2020-02-10T10:34:32Z", "type": "commit"}, {"oid": "a180e61b5ab07555a40fc415ee643e2c2d1dc3c9", "url": "https://github.com/elastic/elasticsearch/commit/a180e61b5ab07555a40fc415ee643e2c2d1dc3c9", "message": "Merge branch 'master' into ilm-init-step-retryable", "committedDate": "2020-02-10T10:52:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4NjQxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r377686419", "bodyText": "I think we may want to move the try to surround more of the function (for example, the fromIndexMetadata(...) call", "author": "dakrone", "createdAt": "2020-02-11T14:56:59Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -47,13 +47,17 @@ public ClusterState performAction(Index index, ClusterState clusterState) {\n \n         IndexMetaData.Builder indexMetadataBuilder = IndexMetaData.builder(indexMetaData);\n         if (shouldParseIndexName(indexMetaData.getSettings())) {\n-            long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n-            indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n-                .settings(Settings.builder()\n-                    .put(indexMetaData.getSettings())\n-                    .put(LifecycleSettings.LIFECYCLE_ORIGINATION_DATE, parsedOriginationDate)\n-                    .build()\n-                );\n+            try {", "originalCommit": "a180e61b5ab07555a40fc415ee643e2c2d1dc3c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "27708dd32e0184e1e2a6ade8b2c7650bd2bdf99f", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\nindex f3766a34346..b69541ab580 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\n\n@@ -38,16 +43,15 @@ public final class InitializePolicyContextStep extends ClusterStateActionStep {\n             return clusterState;\n         }\n \n-        LifecycleExecutionState lifecycleState = LifecycleExecutionState\n-            .fromIndexMetadata(indexMetaData);\n-\n-        if (lifecycleState.getLifecycleDate() != null) {\n-            return clusterState;\n-        }\n-\n         IndexMetaData.Builder indexMetadataBuilder = IndexMetaData.builder(indexMetaData);\n-        if (shouldParseIndexName(indexMetaData.getSettings())) {\n-            try {\n+        LifecycleExecutionState lifecycleState;\n+        try {\n+            lifecycleState = LifecycleExecutionState.fromIndexMetadata(indexMetaData);\n+            if (lifecycleState.getLifecycleDate() != null) {\n+                return clusterState;\n+            }\n+\n+            if (shouldParseIndexName(indexMetaData.getSettings())) {\n                 long parsedOriginationDate = parseIndexNameAndExtractDate(index.getName());\n                 indexMetadataBuilder.settingsVersion(indexMetaData.getSettingsVersion() + 1)\n                     .settings(Settings.builder()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4NzE5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r377687197", "bodyText": "Can we include the policy name in the exception somewhere? I think that might be helpful if the setting were to change but the error was still there", "author": "dakrone", "createdAt": "2020-02-11T14:58:06Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyException.java", "diffHunk": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.elasticsearch.ElasticsearchException;\n+\n+/**\n+ * Exception thrown when a problem is encountered while initialising an ILM policy for an index.\n+ */\n+public class InitializePolicyException extends ElasticsearchException {\n+\n+    public InitializePolicyException(String msg, Throwable cause, Object... args) {", "originalCommit": "a180e61b5ab07555a40fc415ee643e2c2d1dc3c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "27708dd32e0184e1e2a6ade8b2c7650bd2bdf99f", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyException.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyException.java\nindex 0023931b3f8..8feda10abdb 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyException.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyException.java\n\n@@ -7,12 +7,14 @@ package org.elasticsearch.xpack.core.ilm;\n \n import org.elasticsearch.ElasticsearchException;\n \n+import java.util.Locale;\n+\n /**\n  * Exception thrown when a problem is encountered while initialising an ILM policy for an index.\n  */\n public class InitializePolicyException extends ElasticsearchException {\n \n-    public InitializePolicyException(String msg, Throwable cause, Object... args) {\n-        super(msg, cause, args);\n+    public InitializePolicyException(String policy, String index, Throwable cause) {\n+        super(String.format(Locale.ROOT, \"unable to initialize policy [%s] for index [%s]\", policy, index), cause);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4NzgwNA==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r377687804", "bodyText": "Can you add a comment about why we check for this particular exception here?", "author": "dakrone", "createdAt": "2020-02-11T14:58:55Z", "path": "x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java", "diffHunk": "@@ -133,8 +134,13 @@ static ClusterState moveClusterStateToErrorStep(Index index, ClusterState cluste\n         ElasticsearchException.generateThrowableXContent(causeXContentBuilder, STACKTRACE_PARAMS, cause);\n         causeXContentBuilder.endObject();\n         LifecycleExecutionState currentState = LifecycleExecutionState.fromIndexMetadata(idxMeta);\n-        Step.StepKey currentStep = Objects.requireNonNull(LifecycleExecutionState.getCurrentStepKey(currentState),\n-            \"unable to move to an error step where there is no current step, state: \" + currentState);\n+        Step.StepKey currentStep;\n+        if (cause instanceof InitializePolicyException) {", "originalCommit": "a180e61b5ab07555a40fc415ee643e2c2d1dc3c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8523f21de8ceec8709b5a2938ec471a0dfac3aad", "chunk": "diff --git a/x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java b/x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java\nindex d1b9441f7fc..95b441861bf 100644\n--- a/x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java\n+++ b/x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleTransition.java\n\n@@ -135,6 +135,9 @@ public final class IndexLifecycleTransition {\n         causeXContentBuilder.endObject();\n         LifecycleExecutionState currentState = LifecycleExecutionState.fromIndexMetadata(idxMeta);\n         Step.StepKey currentStep;\n+        // if an error is encountered while initialising the policy the lifecycle execution state will not yet contain any step information\n+        // as we haven't yet initialised the policy, so we'll manually set the current step to be the \"initialize policy\" step so we can\n+        // record the error (and later retry the init policy step)\n         if (cause instanceof InitializePolicyException) {\n             currentStep = InitializePolicyContextStep.KEY;\n         } else {\n"}}, {"oid": "27708dd32e0184e1e2a6ade8b2c7650bd2bdf99f", "url": "https://github.com/elastic/elasticsearch/commit/27708dd32e0184e1e2a6ade8b2c7650bd2bdf99f", "message": "Add policy and index in InitalizePolicyExeeption", "committedDate": "2020-02-12T12:24:54Z", "type": "commit"}, {"oid": "8523f21de8ceec8709b5a2938ec471a0dfac3aad", "url": "https://github.com/elastic/elasticsearch/commit/8523f21de8ceec8709b5a2938ec471a0dfac3aad", "message": "Document moving to error step from the init step", "committedDate": "2020-02-12T12:25:21Z", "type": "commit"}, {"oid": "b609366cdc67b21836d0e8488094ba9b64ce5b65", "url": "https://github.com/elastic/elasticsearch/commit/b609366cdc67b21836d0e8488094ba9b64ce5b65", "message": "ShrunkenIndexCheckStep: Use correct logger", "committedDate": "2020-02-12T12:25:43Z", "type": "commit"}, {"oid": "3355825b3d4947d8fe6b8c55dedfda91aacaf985", "url": "https://github.com/elastic/elasticsearch/commit/3355825b3d4947d8fe6b8c55dedfda91aacaf985", "message": "break in case statement", "committedDate": "2020-02-12T12:42:26Z", "type": "commit"}, {"oid": "d7f0828346f974817e8a8c48020a546911d97cd9", "url": "https://github.com/elastic/elasticsearch/commit/d7f0828346f974817e8a8c48020a546911d97cd9", "message": "Merge branch 'master' into ilm-init-step-retryable", "committedDate": "2020-02-12T13:11:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1NjY0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r378356641", "bodyText": "We don't need to pass the policy in and store it in the step, we can get it directly out of the index metadata (the index.lifecycle.name setting)", "author": "dakrone", "createdAt": "2020-02-12T16:16:04Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -25,8 +27,11 @@\n     public static final StepKey KEY = new StepKey(INITIALIZATION_PHASE, \"init\", \"init\");\n     private static final Logger logger = LogManager.getLogger(InitializePolicyContextStep.class);\n \n-    InitializePolicyContextStep(Step.StepKey key, StepKey nextStepKey) {\n+    private final String policy;\n+\n+    InitializePolicyContextStep(String policy, Step.StepKey key, StepKey nextStepKey) {\n         super(key, nextStepKey);\n+        this.policy = policy;", "originalCommit": "d7f0828346f974817e8a8c48020a546911d97cd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2OTQ2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r378369462", "bodyText": "Ah yes, great point!", "author": "andreidan", "createdAt": "2020-02-12T16:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1NjY0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "04c444c03d7add3ffea66ede07768d8c35eb8392", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\nindex b69541ab580..25c22ee0ea5 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\n\n@@ -27,11 +27,8 @@ public final class InitializePolicyContextStep extends ClusterStateActionStep {\n     public static final StepKey KEY = new StepKey(INITIALIZATION_PHASE, \"init\", \"init\");\n     private static final Logger logger = LogManager.getLogger(InitializePolicyContextStep.class);\n \n-    private final String policy;\n-\n-    InitializePolicyContextStep(String policy, Step.StepKey key, StepKey nextStepKey) {\n+    InitializePolicyContextStep(Step.StepKey key, StepKey nextStepKey) {\n         super(key, nextStepKey);\n-        this.policy = policy;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1NzgyMw==", "url": "https://github.com/elastic/elasticsearch/pull/52076#discussion_r378357823", "bodyText": "If we get the policy id from the index metadata we don't need to add this stuff either, which will be nice.", "author": "dakrone", "createdAt": "2020-02-12T16:17:45Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java", "diffHunk": "@@ -72,4 +80,22 @@ public ClusterState performAction(Index index, ClusterState clusterState) {\n     public boolean isRetryable() {\n         return true;\n     }\n+\n+    String policy() {\n+        return policy;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {", "originalCommit": "d7f0828346f974817e8a8c48020a546911d97cd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04c444c03d7add3ffea66ede07768d8c35eb8392", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\nindex b69541ab580..25c22ee0ea5 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/InitializePolicyContextStep.java\n\n@@ -80,22 +78,4 @@ public final class InitializePolicyContextStep extends ClusterStateActionStep {\n     public boolean isRetryable() {\n         return true;\n     }\n-\n-    String policy() {\n-        return policy;\n-    }\n-\n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (o == null || getClass() != o.getClass()) return false;\n-        if (!super.equals(o)) return false;\n-        InitializePolicyContextStep that = (InitializePolicyContextStep) o;\n-        return policy.equals(that.policy);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(super.hashCode(), policy);\n-    }\n }\n"}}, {"oid": "04c444c03d7add3ffea66ede07768d8c35eb8392", "url": "https://github.com/elastic/elasticsearch/commit/04c444c03d7add3ffea66ede07768d8c35eb8392", "message": "Derive the policy name from the index metadata", "committedDate": "2020-02-12T16:41:00Z", "type": "commit"}, {"oid": "569509156640ae2fcad3f887314a63fe5524d14e", "url": "https://github.com/elastic/elasticsearch/commit/569509156640ae2fcad3f887314a63fe5524d14e", "message": "Remove unused import", "committedDate": "2020-02-12T16:42:02Z", "type": "commit"}]}