{"pr_number": 66718, "pr_title": "[Transform] report last search time in transform stats", "pr_createdAt": "2020-12-21T21:44:44Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66718", "timeline": [{"oid": "a3da0364e2fca0d9c373d7c3c01771592b2716ce", "url": "https://github.com/elastic/elasticsearch/commit/a3da0364e2fca0d9c373d7c3c01771592b2716ce", "message": "report last searched at for stopped transform", "committedDate": "2020-12-22T09:09:24Z", "type": "forcePushed"}, {"oid": "b1bd39a96fb55e800a4d9bc4253643d136a88da5", "url": "https://github.com/elastic/elasticsearch/commit/b1bd39a96fb55e800a4d9bc4253643d136a88da5", "message": "fix tests and unmute HistogramGroupByIT", "committedDate": "2020-12-22T09:21:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3OTgxMg==", "url": "https://github.com/elastic/elasticsearch/pull/66718#discussion_r547179812", "bodyText": "This changes behaviour for changed_last_detected_at. The change seems correct but is it fixing another issue with that not getting updated properly?", "author": "dimitris-athanasiou", "createdAt": "2020-12-22T09:55:14Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -355,6 +357,8 @@ protected void onStart(long now, ActionListener<Boolean> listener) {\n             }));\n         } else {\n             hasSourceChanged = true;\n+            context.setChangesLastSearchedAt(instantOfTrigger);\n+            context.setChangesLastDetectedAt(instantOfTrigger);", "originalCommit": "bd596295acaec91ab4d66e0ab484b2a9cddbad0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MzE5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66718#discussion_r547183192", "bodyText": "yes, the if is \"continuous\" mode, the else is \"batch\". I see no reason why we report  changed_last_detected_at (and changed_last_searched_at) only for continuous but not for batch. This makes it more consistent.", "author": "hendrikmuhs", "createdAt": "2020-12-22T10:02:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3OTgxMg=="}], "type": "inlineReview", "revised_code": {"commit": "b2bd358dbdb7bebc8eac9ea15b13ba69a4d9b061", "chunk": "diff --git a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\nindex 29da1657dc1..b2056d25f94 100644\n--- a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n+++ b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n\n@@ -357,7 +357,7 @@ public abstract class TransformIndexer extends AsyncTwoPhaseIndexer<TransformInd\n             }));\n         } else {\n             hasSourceChanged = true;\n-            context.setChangesLastSearchedAt(instantOfTrigger);\n+            context.setLastSearchedTime(instantOfTrigger);\n             context.setChangesLastDetectedAt(instantOfTrigger);\n             changedSourceListener.onResponse(null);\n         }\n"}}, {"oid": "7d9510f0f111d8401fe96f8eba7dae9a2c75ed46", "url": "https://github.com/elastic/elasticsearch/commit/7d9510f0f111d8401fe96f8eba7dae9a2c75ed46", "message": "fix tests and unmute HistogramGroupByIT", "committedDate": "2021-01-11T09:29:42Z", "type": "forcePushed"}, {"oid": "db46fe0a64ced2f4c2c5f36493382c29c05fb8bd", "url": "https://github.com/elastic/elasticsearch/commit/db46fe0a64ced2f4c2c5f36493382c29c05fb8bd", "message": "change naming to last_search_time", "committedDate": "2021-01-19T10:43:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDEzODQyOA==", "url": "https://github.com/elastic/elasticsearch/pull/66718#discussion_r560138428", "bodyText": "lastSearchTime or lastSearchedTime?\nPlease use the same variable name in both TransformCheckpointingInfo classes.", "author": "przemekwitek", "createdAt": "2021-01-19T12:23:05Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/transform/transforms/TransformCheckpointingInfo.java", "diffHunk": "@@ -49,13 +49,13 @@\n         a -> {\n             long behind = a[2] == null ? 0L : (Long) a[2];\n             Instant changesLastDetectedAt = (Instant) a[3];\n-            Instant changesLastSearchedAt = (Instant) a[4];\n+            Instant lastSearchTime = (Instant) a[4];", "originalCommit": "fe8ee20a5474071b3fc6efa8792413f8759bb19d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bb28ef9229feee9cdd0f98f462b810c25845b909", "chunk": "diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/transform/transforms/TransformCheckpointingInfo.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/transform/transforms/TransformCheckpointingInfo.java\nindex 8a4d0330d76..c501aeb3ebc 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/transform/transforms/TransformCheckpointingInfo.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/transform/transforms/TransformCheckpointingInfo.java\n\n@@ -35,69 +35,56 @@ public class TransformCheckpointingInfo {\n     public static final ParseField NEXT_CHECKPOINT = new ParseField(\"next\", \"in_progress\");\n     public static final ParseField OPERATIONS_BEHIND = new ParseField(\"operations_behind\");\n     public static final ParseField CHANGES_LAST_DETECTED_AT = new ParseField(\"changes_last_detected_at\");\n-    public static final ParseField LAST_SEARCH_TIME = new ParseField(\"last_search_time\");\n+    public static final ParseField CHANGES_LAST_SEARCHED_AT = new ParseField(\"changes_last_searched_at\");\n \n     private final TransformCheckpointStats last;\n     private final TransformCheckpointStats next;\n     private final long operationsBehind;\n     private final Instant changesLastDetectedAt;\n-    private final Instant lastSearchTime;\n-\n-    private static final ConstructingObjectParser<TransformCheckpointingInfo, Void> LENIENT_PARSER = new ConstructingObjectParser<>(\n-        \"transform_checkpointing_info\",\n-        true,\n-        a -> {\n-            long behind = a[2] == null ? 0L : (Long) a[2];\n-            Instant changesLastDetectedAt = (Instant) a[3];\n-            Instant lastSearchTime = (Instant) a[4];\n-            return new TransformCheckpointingInfo(\n-                a[0] == null ? TransformCheckpointStats.EMPTY : (TransformCheckpointStats) a[0],\n-                a[1] == null ? TransformCheckpointStats.EMPTY : (TransformCheckpointStats) a[1],\n-                behind,\n-                changesLastDetectedAt,\n-                lastSearchTime\n-            );\n-        }\n-    );\n+    private final Instant changesLastSearchedAt;\n+\n+    private static final ConstructingObjectParser<TransformCheckpointingInfo, Void> LENIENT_PARSER =\n+            new ConstructingObjectParser<>(\n+                \"transform_checkpointing_info\",\n+                true,\n+                a -> {\n+                        long behind = a[2] == null ? 0L : (Long) a[2];\n+                        Instant changesLastDetectedAt = (Instant)a[3];\n+                        Instant changesLastSearchedAt = (Instant)a[4];\n+                        return new TransformCheckpointingInfo(\n+                            a[0] == null ? TransformCheckpointStats.EMPTY : (TransformCheckpointStats) a[0],\n+                            a[1] == null ? TransformCheckpointStats.EMPTY : (TransformCheckpointStats) a[1],\n+                            behind,\n+                            changesLastDetectedAt,\n+                            changesLastSearchedAt);\n+                    });\n \n     static {\n-        LENIENT_PARSER.declareObject(\n-            ConstructingObjectParser.optionalConstructorArg(),\n-            (p, c) -> TransformCheckpointStats.fromXContent(p),\n-            LAST_CHECKPOINT\n-        );\n-        LENIENT_PARSER.declareObject(\n-            ConstructingObjectParser.optionalConstructorArg(),\n-            (p, c) -> TransformCheckpointStats.fromXContent(p),\n-            NEXT_CHECKPOINT\n-        );\n+        LENIENT_PARSER.declareObject(ConstructingObjectParser.optionalConstructorArg(),\n+                (p, c) -> TransformCheckpointStats.fromXContent(p), LAST_CHECKPOINT);\n+        LENIENT_PARSER.declareObject(ConstructingObjectParser.optionalConstructorArg(),\n+                (p, c) -> TransformCheckpointStats.fromXContent(p), NEXT_CHECKPOINT);\n         LENIENT_PARSER.declareLong(ConstructingObjectParser.optionalConstructorArg(), OPERATIONS_BEHIND);\n-        LENIENT_PARSER.declareField(\n-            ConstructingObjectParser.optionalConstructorArg(),\n+        LENIENT_PARSER.declareField(ConstructingObjectParser.optionalConstructorArg(),\n             p -> TimeUtil.parseTimeFieldToInstant(p, CHANGES_LAST_DETECTED_AT.getPreferredName()),\n             CHANGES_LAST_DETECTED_AT,\n-            ObjectParser.ValueType.VALUE\n-        );\n-        LENIENT_PARSER.declareField(\n-            ConstructingObjectParser.optionalConstructorArg(),\n-            p -> TimeUtil.parseTimeFieldToInstant(p, LAST_SEARCH_TIME.getPreferredName()),\n-            LAST_SEARCH_TIME,\n-            ObjectParser.ValueType.VALUE\n-        );\n+            ObjectParser.ValueType.VALUE);\n+        LENIENT_PARSER.declareField(ConstructingObjectParser.optionalConstructorArg(),\n+            p -> TimeUtil.parseTimeFieldToInstant(p, CHANGES_LAST_SEARCHED_AT.getPreferredName()),\n+            CHANGES_LAST_SEARCHED_AT,\n+            ObjectParser.ValueType.VALUE);\n     }\n \n-    public TransformCheckpointingInfo(\n-        TransformCheckpointStats last,\n-        TransformCheckpointStats next,\n-        long operationsBehind,\n-        Instant changesLastDetectedAt,\n-        Instant lastSearchTime\n-    ) {\n+    public TransformCheckpointingInfo(TransformCheckpointStats last,\n+                                      TransformCheckpointStats next,\n+                                      long operationsBehind,\n+                                      Instant changesLastDetectedAt,\n+                                      Instant changesLastSearchedAt) {\n         this.last = Objects.requireNonNull(last);\n         this.next = Objects.requireNonNull(next);\n         this.operationsBehind = operationsBehind;\n         this.changesLastDetectedAt = changesLastDetectedAt;\n-        this.lastSearchTime = lastSearchTime;\n+        this.changesLastSearchedAt = changesLastSearchedAt;\n     }\n \n     public TransformCheckpointStats getLast() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDc2NDU4MA==", "url": "https://github.com/elastic/elasticsearch/pull/66718#discussion_r560764580", "bodyText": "Just double-checking: Is \"+1\" no longer needed here?", "author": "przemekwitek", "createdAt": "2021-01-20T08:33:07Z", "path": "x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TransformContinuousIT.java", "diffHunk": "@@ -276,7 +275,7 @@ public void testContinousEvents() throws Exception {\n \n             // at random we added between 0 and 999_999ns == (1ms - 1ns) to every data point, so we add 1ms, so every data point is before\n             // the checkpoint\n-            waitUntilTransformsReachedUpperBound(runDate.toEpochMilli() + 1, run);\n+            waitUntilTransformsProcessedNewData(ContinuousTestCase.SYNC_DELAY, run);", "originalCommit": "8015bcc9ef9da676471a184736dfc9d36085d1f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDg2MDIxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66718#discussion_r560860219", "bodyText": "I removed the outdated comment. The test waits according to delay with greaterThan, so it should be fine.", "author": "hendrikmuhs", "createdAt": "2021-01-20T10:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDc2NDU4MA=="}], "type": "inlineReview", "revised_code": {"commit": "17854c8c33161d6f6e9760a68a5ad6ce776c8ce3", "chunk": "diff --git a/x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TransformContinuousIT.java b/x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TransformContinuousIT.java\nindex b6ee678b4cd..59393b0c20b 100644\n--- a/x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TransformContinuousIT.java\n+++ b/x-pack/plugin/transform/qa/multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/transform/integration/continuous/TransformContinuousIT.java\n\n@@ -273,8 +273,6 @@ public class TransformContinuousIT extends ESRestTestCase {\n             // start all transforms, wait until the processed all data and stop them\n             startTransforms();\n \n-            // at random we added between 0 and 999_999ns == (1ms - 1ns) to every data point, so we add 1ms, so every data point is before\n-            // the checkpoint\n             waitUntilTransformsProcessedNewData(ContinuousTestCase.SYNC_DELAY, run);\n             stopTransforms();\n \n"}}, {"oid": "bb28ef9229feee9cdd0f98f462b810c25845b909", "url": "https://github.com/elastic/elasticsearch/commit/bb28ef9229feee9cdd0f98f462b810c25845b909", "message": "add last_searched_at field", "committedDate": "2021-01-20T10:42:07Z", "type": "commit"}, {"oid": "28c0fffd8513e65d89564b9e53e85c6415419134", "url": "https://github.com/elastic/elasticsearch/commit/28c0fffd8513e65d89564b9e53e85c6415419134", "message": "spotless", "committedDate": "2021-01-20T10:42:07Z", "type": "commit"}, {"oid": "2c82086ebde7456bea86043e42015702724a5fb6", "url": "https://github.com/elastic/elasticsearch/commit/2c82086ebde7456bea86043e42015702724a5fb6", "message": "fix tests and unmute HistogramGroupByIT", "committedDate": "2021-01-20T10:42:07Z", "type": "commit"}, {"oid": "cd71929aec0929df22a3ef2d15a0e98bd2212dc3", "url": "https://github.com/elastic/elasticsearch/commit/cd71929aec0929df22a3ef2d15a0e98bd2212dc3", "message": "change naming to last_search_time", "committedDate": "2021-01-20T10:42:08Z", "type": "commit"}, {"oid": "b2bd358dbdb7bebc8eac9ea15b13ba69a4d9b061", "url": "https://github.com/elastic/elasticsearch/commit/b2bd358dbdb7bebc8eac9ea15b13ba69a4d9b061", "message": "fix some more namings", "committedDate": "2021-01-20T10:42:08Z", "type": "commit"}, {"oid": "a2a11acc2d22c73bfafe859b3a584ce92d2d62cb", "url": "https://github.com/elastic/elasticsearch/commit/a2a11acc2d22c73bfafe859b3a584ce92d2d62cb", "message": "fix namings again", "committedDate": "2021-01-20T10:42:08Z", "type": "commit"}, {"oid": "17854c8c33161d6f6e9760a68a5ad6ce776c8ce3", "url": "https://github.com/elastic/elasticsearch/commit/17854c8c33161d6f6e9760a68a5ad6ce776c8ce3", "message": "remove outdated comment", "committedDate": "2021-01-20T10:42:08Z", "type": "commit"}, {"oid": "17854c8c33161d6f6e9760a68a5ad6ce776c8ce3", "url": "https://github.com/elastic/elasticsearch/commit/17854c8c33161d6f6e9760a68a5ad6ce776c8ce3", "message": "remove outdated comment", "committedDate": "2021-01-20T10:42:08Z", "type": "forcePushed"}]}