{"pr_number": 66440, "pr_title": "Allow dynamic port allocation for hdfs fixture", "pr_createdAt": "2020-12-16T12:39:18Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66440", "timeline": [{"oid": "0c6b6be2afb686f8e3e3164a34fa055432534c73", "url": "https://github.com/elastic/elasticsearch/commit/0c6b6be2afb686f8e3e3164a34fa055432534c73", "message": "Allow dynamic port allocation for hdfs fixture\n\nRunning multiple hdfs fixtures in parallel for running integration tests requires\na dynamic port assignment in order to avoid port clashes. This introduces\nthe ability to assign port ranges to gradle projects that can be used\nto allocate dynamically ports used by these projects.\n\nWe apply this dynamic port setup for hdfs fixtures used in\n:x-pack:plugin:searchable-snapshots:qa only at the moment as\ntests sources (rest tests) in :plugins:repository-hdfs still rely on\nhard coded ports", "committedDate": "2020-12-16T12:36:44Z", "type": "commit"}, {"oid": "848e49bbc5caf5c28ad095d0f0a680a1887cdcba", "url": "https://github.com/elastic/elasticsearch/commit/848e49bbc5caf5c28ad095d0f0a680a1887cdcba", "message": "Fix task dependency declaration", "committedDate": "2020-12-16T12:43:03Z", "type": "commit"}, {"oid": "2a6e1a3bf0a39a3c5026a8a2864531550ed5ab77", "url": "https://github.com/elastic/elasticsearch/commit/2a6e1a3bf0a39a3c5026a8a2864531550ed5ab77", "message": "Fix javadoc", "committedDate": "2020-12-16T13:08:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxMTE2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544311162", "bodyText": "Do we need this property, since it's final and initialised to DEFAULT_RANGE_SIZE?", "author": "pugnascotia", "createdAt": "2020-12-16T13:47:55Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.util.ports;\n+\n+import org.gradle.internal.Pair;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class AvailablePortAllocator implements PortAllocator {\n+    public static final int MIN_PRIVATE_PORT = 49152;\n+    public static final int MAX_PRIVATE_PORT = 65535;\n+    public static final int DEFAULT_RANGE_SIZE = 100;\n+\n+    private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n+    private final int rangeSize = DEFAULT_RANGE_SIZE;", "originalCommit": "2a6e1a3bf0a39a3c5026a8a2864531550ed5ab77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxNDYyOA==", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544314628", "bodyText": "not at the moment. going to remove it", "author": "breskeby", "createdAt": "2020-12-16T13:52:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxMTE2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b5dc49c211b48c235e25ffb65fbe8a3e4037f791", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java b/buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java\nindex 9aee372162a..b072ac3798b 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java\n\n@@ -32,7 +32,6 @@ public class AvailablePortAllocator implements PortAllocator {\n     public static final int DEFAULT_RANGE_SIZE = 100;\n \n     private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n-    private final int rangeSize = DEFAULT_RANGE_SIZE;\n \n     private final Lock lock = new ReentrantLock();\n \n"}}, {"oid": "b5dc49c211b48c235e25ffb65fbe8a3e4037f791", "url": "https://github.com/elastic/elasticsearch/commit/b5dc49c211b48c235e25ffb65fbe8a3e4037f791", "message": "Address review feedback\n\n- remove unnecessary field", "committedDate": "2020-12-16T13:54:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NjQ2OA==", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544546468", "bodyText": "What's the motivation for having these port ranges per-project? Why not just allocate a single big block for the entire build?", "author": "mark-vieira", "createdAt": "2020-12-16T18:58:49Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.util.ports;\n+\n+import org.gradle.internal.Pair;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class AvailablePortAllocator implements PortAllocator {\n+    public static final int MIN_PRIVATE_PORT = 49152;\n+    public static final int MAX_PRIVATE_PORT = 65535;\n+    public static final int DEFAULT_RANGE_SIZE = 100;\n+\n+    private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n+\n+    private final Lock lock = new ReentrantLock();\n+\n+    private ReservedPortRangeFactory portRangeFactory = new DefaultReservedPortRangeFactory();\n+\n+    @Override\n+    public int assignPort() {\n+        try {\n+            lock.lock();\n+            return reservePort();\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n+\n+    protected Pair<Integer, Integer> getNextPortRange(int rangeNumber) {", "originalCommit": "b5dc49c211b48c235e25ffb65fbe8a3e4037f791", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3MjQ0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544572442", "bodyText": "I remember we introduced these ranges in gradle too, to make debugging this a bit easier. I don't have hard feelings or strong opinions here. I like the separation between projects though.", "author": "breskeby", "createdAt": "2020-12-16T19:40:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NjQ2OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NzY0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544547642", "bodyText": "From what I can tell assignePort and releasePort are never used. Is there something that needs to be still wired up?", "author": "mark-vieira", "createdAt": "2020-12-16T19:00:34Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/ports/AvailablePortAllocator.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.util.ports;\n+\n+import org.gradle.internal.Pair;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class AvailablePortAllocator implements PortAllocator {\n+    public static final int MIN_PRIVATE_PORT = 49152;\n+    public static final int MAX_PRIVATE_PORT = 65535;\n+    public static final int DEFAULT_RANGE_SIZE = 100;\n+\n+    private final List<ReservedPortRange> reservations = new ArrayList<ReservedPortRange>();\n+\n+    private final Lock lock = new ReentrantLock();\n+\n+    private ReservedPortRangeFactory portRangeFactory = new DefaultReservedPortRangeFactory();\n+\n+    @Override\n+    public int assignPort() {", "originalCommit": "b5dc49c211b48c235e25ffb65fbe8a3e4037f791", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3MDcyOA==", "url": "https://github.com/elastic/elasticsearch/pull/66440#discussion_r544570728", "bodyText": "kind of an oversight. I remove this as it's not used at the moment", "author": "breskeby", "createdAt": "2020-12-16T19:38:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NzY0Mg=="}], "type": "inlineReview", "revised_code": null}]}