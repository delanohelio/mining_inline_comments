{"pr_number": 64705, "pr_title": "Use MapperTestCase for cartesian mappers tests", "pr_createdAt": "2020-11-06T12:53:38Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64705", "timeline": [{"oid": "b0a7c7f71bdc41586b2eb64ee9a02d865302a7aa", "url": "https://github.com/elastic/elasticsearch/commit/b0a7c7f71bdc41586b2eb64ee9a02d865302a7aa", "message": "Use MapperTestCase for cartesian mappers tests", "committedDate": "2020-11-06T12:49:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODczNDg3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/64705#discussion_r518734879", "bodyText": "You can also use the source method, which simplifies this a bit:\nSourceToParse sourceToParser = source(b -> {\n    b.startObject(FIELD_NAME).field(\"x\", 2000.1).field(\"y\", 305.6).endObject();\n});", "author": "romseygeek", "createdAt": "2020-11-06T12:58:36Z", "path": "x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapperTests.java", "diffHunk": "@@ -0,0 +1,279 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.spatial.index.mapper;\n+\n+import org.apache.lucene.util.BytesRef;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.index.mapper.DocumentMapper;\n+import org.elasticsearch.index.mapper.Mapper;\n+import org.elasticsearch.index.mapper.ParsedDocument;\n+import org.elasticsearch.index.mapper.SourceToParse;\n+import org.elasticsearch.xpack.spatial.common.CartesianPoint;\n+\n+import java.io.IOException;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.not;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+public class PointFieldMapperTests extends CartesianFieldMapperTests {\n+\n+    @Override\n+    protected String getFieldName() {\n+        return \"point\";\n+    }\n+\n+    @Override\n+    protected void registerParameters(ParameterChecker checker) throws IOException {\n+        checker.registerConflictCheck(\"doc_values\", b -> b.field(\"doc_values\", false));\n+        checker.registerConflictCheck(\"index\", b -> b.field(\"index\", false));\n+        checker.registerUpdateCheck(b -> b.field(\"ignore_malformed\", true), m -> {\n+            PointFieldMapper gpfm = (PointFieldMapper) m;\n+            assertTrue(gpfm.ignoreMalformed());\n+        });\n+        checker.registerUpdateCheck(b -> b.field(\"ignore_z_value\", false), m -> {\n+            PointFieldMapper gpfm = (PointFieldMapper) m;\n+            assertFalse(gpfm.ignoreZValue());\n+        });\n+    }\n+\n+    public void testValuesStored() throws Exception {\n+        DocumentMapper mapper = createDocumentMapper(fieldMapping(b -> {\n+            b.field(\"type\", \"point\");\n+            b.field(\"store\", true);\n+        }));\n+\n+        SourceToParse sourceToParse = new SourceToParse(\"test\", \"1\",", "originalCommit": "b0a7c7f71bdc41586b2eb64ee9a02d865302a7aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODczNzk5OA==", "url": "https://github.com/elastic/elasticsearch/pull/64705#discussion_r518737998", "bodyText": "I am changing it, I was unhappy with that.", "author": "iverase", "createdAt": "2020-11-06T13:04:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODczNDg3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "d68358741cfe87ac3e8f5403de36bbad1abc70ed", "chunk": "diff --git a/x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapperTests.java b/x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapperTests.java\nindex 93c830b8521..f146e96a5cc 100644\n--- a/x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapperTests.java\n+++ b/x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldMapperTests.java\n\n@@ -6,10 +6,8 @@\n package org.elasticsearch.xpack.spatial.index.mapper;\n \n import org.apache.lucene.util.BytesRef;\n-import org.elasticsearch.common.bytes.BytesReference;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentFactory;\n-import org.elasticsearch.common.xcontent.XContentType;\n import org.elasticsearch.index.mapper.DocumentMapper;\n import org.elasticsearch.index.mapper.Mapper;\n import org.elasticsearch.index.mapper.ParsedDocument;\n"}}, {"oid": "d68358741cfe87ac3e8f5403de36bbad1abc70ed", "url": "https://github.com/elastic/elasticsearch/commit/d68358741cfe87ac3e8f5403de36bbad1abc70ed", "message": "address feedback", "committedDate": "2020-11-06T13:44:51Z", "type": "commit"}, {"oid": "c2d999cf9db857f3372b7046983300d14ecc4b3b", "url": "https://github.com/elastic/elasticsearch/commit/c2d999cf9db857f3372b7046983300d14ecc4b3b", "message": "Merge branch 'master' into cartesianMapperTests", "committedDate": "2020-11-06T14:05:40Z", "type": "commit"}, {"oid": "f01e919de35964a390d78d7ac1a49c1688826201", "url": "https://github.com/elastic/elasticsearch/commit/f01e919de35964a390d78d7ac1a49c1688826201", "message": "Merge branch 'master' into cartesianMapperTests", "committedDate": "2020-11-06T14:35:54Z", "type": "commit"}]}