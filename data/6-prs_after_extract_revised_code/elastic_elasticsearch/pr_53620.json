{"pr_number": 53620, "pr_title": "Add Watcher to available rest resources ", "pr_createdAt": "2020-03-16T17:37:10Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53620", "timeline": [{"oid": "b3979f13d8c6dec4dfbfe6cade69173152e7cb19", "url": "https://github.com/elastic/elasticsearch/commit/b3979f13d8c6dec4dfbfe6cade69173152e7cb19", "message": "Revert \"Revert \"Add Watcher to available rest resources (#53319)\"\"\n\nThis reverts commit 4f48e053f92b2ae7677a2e2ba0e5464ede7128d1.", "committedDate": "2020-03-16T16:29:43Z", "type": "commit"}, {"oid": "6fa7176500c989f11414dfa5d6c44a1e981af364", "url": "https://github.com/elastic/elasticsearch/commit/6fa7176500c989f11414dfa5d6c44a1e981af364", "message": "don't overload configuration names", "committedDate": "2020-03-16T17:12:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NzA1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/53620#discussion_r393857051", "bodyText": "We should probalby not be creating these configurations inside this configuration block. The reason being, because we are using the lazy task creation api, that means that sometimes we create these, and sometimes we don't, depending on the requested task graph. When it comes to configuration API elements, we should always create these or we could get funny errors depending on what tasks you ask to run.", "author": "mark-vieira", "createdAt": "2020-03-17T17:41:11Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java", "diffHunk": "@@ -86,21 +86,29 @@\n     public void apply(Project project) {\n         RestResourcesExtension extension = project.getExtensions().create(EXTENSION_NAME, RestResourcesExtension.class);\n \n+        // tests\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(\"copyYamlTestsTask\", CopyRestTestsTask.class, task -> {\n                 task.includeCore.set(extension.restTests.getIncludeCore());\n                 task.includeXpack.set(extension.restTests.getIncludeXpack());\n-                task.coreConfig = project.getConfigurations().create(\"restTest\");\n+                task.coreConfig = project.getConfigurations().create(\"restTestConfig\");", "originalCommit": "6fa7176500c989f11414dfa5d6c44a1e981af364", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0NTg1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/53620#discussion_r393945857", "bodyText": "thanks, implemented on 287fb72", "author": "jakelandis", "createdAt": "2020-03-17T20:20:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1NzA1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "287fb72ec4ce5984e41cd69de907b1092863b200", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java\nindex d58e19310f56..3cdc4d24dd3c 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java\n\n@@ -87,20 +88,22 @@ public class RestResourcesPlugin implements Plugin<Project> {\n         RestResourcesExtension extension = project.getExtensions().create(EXTENSION_NAME, RestResourcesExtension.class);\n \n         // tests\n+        Configuration testConfig = project.getConfigurations().create(\"restTestConfig\");\n+        Configuration xpackTestConfig = project.getConfigurations().create(\"restXpackTest\");\n+        project.getConfigurations().create(\"restTests\");\n+        project.getConfigurations().create(\"restXpackTests\");\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(\"copyYamlTestsTask\", CopyRestTestsTask.class, task -> {\n                 task.includeCore.set(extension.restTests.getIncludeCore());\n                 task.includeXpack.set(extension.restTests.getIncludeXpack());\n-                task.coreConfig = project.getConfigurations().create(\"restTestConfig\");\n-                project.getConfigurations().maybeCreate(\"restTests\");\n-                project.getConfigurations().maybeCreate(\"restXpackTests\");\n+                task.coreConfig = testConfig;\n                 if (BuildParams.isInternal()) {\n                     // core\n                     Dependency restTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":rest-api-spec\", \"configuration\", \"restTests\"));\n                     project.getDependencies().add(task.coreConfig.getName(), restTestdependency);\n                     // x-pack\n-                    task.xpackConfig = project.getConfigurations().create(\"restXpackTest\");\n+                    task.xpackConfig = xpackTestConfig;\n                     Dependency restXPackTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":x-pack:plugin\", \"configuration\", \"restXpackTests\"));\n                     project.getDependencies().add(task.xpackConfig.getName(), restXPackTestdependency);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1OTI2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/53620#discussion_r393859267", "bodyText": "I'm not particular excited about us hard-coding these mappings. Are we going to have to add something here for every project that shares tests. Also, if we want to get to a point where we can aggregate all xpack tests (as the clients team has asked about) we'll need a more generic solution here likely based on some convention.", "author": "mark-vieira", "createdAt": "2020-03-17T17:44:43Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java", "diffHunk": "@@ -86,21 +86,29 @@\n     public void apply(Project project) {\n         RestResourcesExtension extension = project.getExtensions().create(EXTENSION_NAME, RestResourcesExtension.class);\n \n+        // tests\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(\"copyYamlTestsTask\", CopyRestTestsTask.class, task -> {\n                 task.includeCore.set(extension.restTests.getIncludeCore());\n                 task.includeXpack.set(extension.restTests.getIncludeXpack());\n-                task.coreConfig = project.getConfigurations().create(\"restTest\");\n+                task.coreConfig = project.getConfigurations().create(\"restTestConfig\");\n+                project.getConfigurations().maybeCreate(\"restTests\");\n+                project.getConfigurations().maybeCreate(\"restXpackTests\");\n                 if (BuildParams.isInternal()) {\n+                    // core\n                     Dependency restTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":rest-api-spec\", \"configuration\", \"restTests\"));\n                     project.getDependencies().add(task.coreConfig.getName(), restTestdependency);\n-\n+                    // x-pack\n                     task.xpackConfig = project.getConfigurations().create(\"restXpackTest\");\n                     Dependency restXPackTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":x-pack:plugin\", \"configuration\", \"restXpackTests\"));\n                     project.getDependencies().add(task.xpackConfig.getName(), restXPackTestdependency);\n                     task.dependsOn(task.xpackConfig);\n+                    // watcher", "originalCommit": "6fa7176500c989f11414dfa5d6c44a1e981af364", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4NTEwOA==", "url": "https://github.com/elastic/elasticsearch/pull/53620#discussion_r393985108", "bodyText": "Are we going to have to add something here for every project that shares tests\n\nYeah, as-is unfortunately. I agree this is less then ideal, and will get ugly after a few more of these. If you have any suggestions, I can explore (but preferably in a different PR).", "author": "jakelandis", "createdAt": "2020-03-17T21:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1OTI2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "287fb72ec4ce5984e41cd69de907b1092863b200", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java\nindex d58e19310f56..3cdc4d24dd3c 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java\n\n@@ -87,20 +88,22 @@ public class RestResourcesPlugin implements Plugin<Project> {\n         RestResourcesExtension extension = project.getExtensions().create(EXTENSION_NAME, RestResourcesExtension.class);\n \n         // tests\n+        Configuration testConfig = project.getConfigurations().create(\"restTestConfig\");\n+        Configuration xpackTestConfig = project.getConfigurations().create(\"restXpackTest\");\n+        project.getConfigurations().create(\"restTests\");\n+        project.getConfigurations().create(\"restXpackTests\");\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(\"copyYamlTestsTask\", CopyRestTestsTask.class, task -> {\n                 task.includeCore.set(extension.restTests.getIncludeCore());\n                 task.includeXpack.set(extension.restTests.getIncludeXpack());\n-                task.coreConfig = project.getConfigurations().create(\"restTestConfig\");\n-                project.getConfigurations().maybeCreate(\"restTests\");\n-                project.getConfigurations().maybeCreate(\"restXpackTests\");\n+                task.coreConfig = testConfig;\n                 if (BuildParams.isInternal()) {\n                     // core\n                     Dependency restTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":rest-api-spec\", \"configuration\", \"restTests\"));\n                     project.getDependencies().add(task.coreConfig.getName(), restTestdependency);\n                     // x-pack\n-                    task.xpackConfig = project.getConfigurations().create(\"restXpackTest\");\n+                    task.xpackConfig = xpackTestConfig;\n                     Dependency restXPackTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":x-pack:plugin\", \"configuration\", \"restXpackTests\"));\n                     project.getDependencies().add(task.xpackConfig.getName(), restXPackTestdependency);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg2MDM3MA==", "url": "https://github.com/elastic/elasticsearch/pull/53620#discussion_r393860370", "bodyText": "I think we should just use create instead of maybeCreate and remove any instances in projects that are manually creating these. The risk with the lenient approach is that some project declares this configuration for one purpose, and we see it and use it for a different one. This should be explicit. If you create a conflicting configuration we should error.", "author": "mark-vieira", "createdAt": "2020-03-17T17:46:29Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java", "diffHunk": "@@ -86,21 +86,29 @@\n     public void apply(Project project) {\n         RestResourcesExtension extension = project.getExtensions().create(EXTENSION_NAME, RestResourcesExtension.class);\n \n+        // tests\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(\"copyYamlTestsTask\", CopyRestTestsTask.class, task -> {\n                 task.includeCore.set(extension.restTests.getIncludeCore());\n                 task.includeXpack.set(extension.restTests.getIncludeXpack());\n-                task.coreConfig = project.getConfigurations().create(\"restTest\");\n+                task.coreConfig = project.getConfigurations().create(\"restTestConfig\");\n+                project.getConfigurations().maybeCreate(\"restTests\");\n+                project.getConfigurations().maybeCreate(\"restXpackTests\");", "originalCommit": "6fa7176500c989f11414dfa5d6c44a1e981af364", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0NTkzOA==", "url": "https://github.com/elastic/elasticsearch/pull/53620#discussion_r393945938", "bodyText": "good call, implemented on 287fb72", "author": "jakelandis", "createdAt": "2020-03-17T20:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg2MDM3MA=="}], "type": "inlineReview", "revised_code": {"commit": "287fb72ec4ce5984e41cd69de907b1092863b200", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java\nindex d58e19310f56..3cdc4d24dd3c 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/test/rest/RestResourcesPlugin.java\n\n@@ -87,20 +88,22 @@ public class RestResourcesPlugin implements Plugin<Project> {\n         RestResourcesExtension extension = project.getExtensions().create(EXTENSION_NAME, RestResourcesExtension.class);\n \n         // tests\n+        Configuration testConfig = project.getConfigurations().create(\"restTestConfig\");\n+        Configuration xpackTestConfig = project.getConfigurations().create(\"restXpackTest\");\n+        project.getConfigurations().create(\"restTests\");\n+        project.getConfigurations().create(\"restXpackTests\");\n         Provider<CopyRestTestsTask> copyRestYamlTestTask = project.getTasks()\n             .register(\"copyYamlTestsTask\", CopyRestTestsTask.class, task -> {\n                 task.includeCore.set(extension.restTests.getIncludeCore());\n                 task.includeXpack.set(extension.restTests.getIncludeXpack());\n-                task.coreConfig = project.getConfigurations().create(\"restTestConfig\");\n-                project.getConfigurations().maybeCreate(\"restTests\");\n-                project.getConfigurations().maybeCreate(\"restXpackTests\");\n+                task.coreConfig = testConfig;\n                 if (BuildParams.isInternal()) {\n                     // core\n                     Dependency restTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":rest-api-spec\", \"configuration\", \"restTests\"));\n                     project.getDependencies().add(task.coreConfig.getName(), restTestdependency);\n                     // x-pack\n-                    task.xpackConfig = project.getConfigurations().create(\"restXpackTest\");\n+                    task.xpackConfig = xpackTestConfig;\n                     Dependency restXPackTestdependency = project.getDependencies()\n                         .project(Map.of(\"path\", \":x-pack:plugin\", \"configuration\", \"restXpackTests\"));\n                     project.getDependencies().add(task.xpackConfig.getName(), restXPackTestdependency);\n"}}, {"oid": "287fb72ec4ce5984e41cd69de907b1092863b200", "url": "https://github.com/elastic/elasticsearch/commit/287fb72ec4ce5984e41cd69de907b1092863b200", "message": "move configuration out of task, prefer create over maybcreate", "committedDate": "2020-03-17T20:19:35Z", "type": "commit"}, {"oid": "80da08cc280985dc3ca6d0af51b5d31861cf5220", "url": "https://github.com/elastic/elasticsearch/commit/80da08cc280985dc3ca6d0af51b5d31861cf5220", "message": "Merge branch 'master' into re_introduce_add_watcher_to_rest_resources", "committedDate": "2020-03-17T21:37:27Z", "type": "commit"}]}