{"pr_number": 61355, "pr_title": "Report anonymous roles in authenticate response", "pr_createdAt": "2020-08-20T06:05:10Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61355", "timeline": [{"oid": "4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf", "url": "https://github.com/elastic/elasticsearch/commit/4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf", "message": "Report anonymous roles in authenticate response", "committedDate": "2020-08-20T05:40:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMjczMw==", "url": "https://github.com/elastic/elasticsearch/pull/61355#discussion_r475232733", "bodyText": "This is rather verbose but I don't have any good suggestions to do otherwise and we don't seem to have a generic need for a cloneWithChanges method !", "author": "jkakavas", "createdAt": "2020-08-23T15:30:38Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/action/user/TransportAuthenticateAction.java", "diffHunk": "@@ -43,7 +49,32 @@ protected void doExecute(Task task, AuthenticateRequest request, ActionListener<\n         } else if (SystemUser.is(runAsUser) || XPackUser.is(runAsUser)) {\n             listener.onFailure(new IllegalArgumentException(\"user [\" + runAsUser.principal() + \"] is internal\"));\n         } else {\n-            listener.onResponse(new AuthenticateResponse(authentication));\n+            final User user = authentication.getUser();\n+            final boolean shouldAddAnonymousRoleNames = anonymousUser.enabled() && false == anonymousUser.equals(user)\n+                && authentication.getAuthenticationType() != Authentication.AuthenticationType.API_KEY;\n+            if (shouldAddAnonymousRoleNames) {\n+                final String[] allRoleNames = Stream.concat(\n+                    Stream.of(user.roles()), Stream.of(anonymousUser.roles())).toArray(String[]::new);\n+                listener.onResponse(new AuthenticateResponse(\n+                    new Authentication(", "originalCommit": "4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI4OTkzMA==", "url": "https://github.com/elastic/elasticsearch/pull/61355#discussion_r475289930", "bodyText": "I initially had this logic inside the User class, i.e. User#withRoles with the intention to simply things here. But as you said, there is no generic need for this type of method, which made it seem out of place. So I decided to keep everything in this one class. It is verbose but at least self-contained and hopefully easy to understand.", "author": "ywangd", "createdAt": "2020-08-24T00:39:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMjczMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMjkxNw==", "url": "https://github.com/elastic/elasticsearch/pull/61355#discussion_r475232917", "bodyText": "nit: add a hint that anonymous user is enabled maybe so the test makes more sense when you look at it ?", "author": "jkakavas", "createdAt": "2020-08-23T15:32:33Z", "path": "x-pack/plugin/security/qa/basic-enable-security/src/test/java/org/elasticsearch/xpack/security/EnableSecurityOnBasicLicenseIT.java", "diffHunk": "@@ -132,7 +132,7 @@ private void checkAuthentication() throws IOException {\n         final Map<String, Object> auth = getAsMap(\"/_security/_authenticate\");\n         // From file realm, configured in build.gradle", "originalCommit": "4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI4OTIzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/61355#discussion_r475289239", "bodyText": "Add a comment about anonymous access is configured in build.gradle", "author": "ywangd", "createdAt": "2020-08-24T00:34:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMjkxNw=="}], "type": "inlineReview", "revised_code": {"commit": "15597908fca415807f5bbcf78b1f10f5374d58fb", "chunk": "diff --git a/x-pack/plugin/security/qa/basic-enable-security/src/test/java/org/elasticsearch/xpack/security/EnableSecurityOnBasicLicenseIT.java b/x-pack/plugin/security/qa/basic-enable-security/src/test/java/org/elasticsearch/xpack/security/EnableSecurityOnBasicLicenseIT.java\nindex ab8e50fc766..7d7b1d84a2b 100644\n--- a/x-pack/plugin/security/qa/basic-enable-security/src/test/java/org/elasticsearch/xpack/security/EnableSecurityOnBasicLicenseIT.java\n+++ b/x-pack/plugin/security/qa/basic-enable-security/src/test/java/org/elasticsearch/xpack/security/EnableSecurityOnBasicLicenseIT.java\n\n@@ -132,6 +132,7 @@ public class EnableSecurityOnBasicLicenseIT extends ESRestTestCase {\n         final Map<String, Object> auth = getAsMap(\"/_security/_authenticate\");\n         // From file realm, configured in build.gradle\n         assertThat(ObjectPath.evaluate(auth, \"username\"), equalTo(\"security_test_user\"));\n+        // The anonymous role is granted by anonymous access enabled in build.gradle\n         assertThat(ObjectPath.evaluate(auth, \"roles\"), contains(\"security_test_role\", \"anonymous\"));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMzA2MA==", "url": "https://github.com/elastic/elasticsearch/pull/61355#discussion_r475233060", "bodyText": "nit: this only makes sense in the if branch right?", "author": "jkakavas", "createdAt": "2020-08-23T15:34:11Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportAuthenticateActionTests.java", "diffHunk": "@@ -118,7 +122,33 @@ public void onFailure(Exception e) {\n         });\n \n         assertThat(responseRef.get(), notNullValue());\n-        assertThat(responseRef.get().authentication(), sameInstance(authentication));\n+        if (anonymousUser.enabled()) {\n+            final Authentication auth = responseRef.get().authentication();\n+            final User authUser = auth.getUser();\n+            List.of(authUser.roles()).containsAll(List.of(authentication.getUser().roles()));\n+            List.of(authUser.roles()).containsAll(List.of(anonymousUser.roles()));\n+            assertThat(authUser.authenticatedUser(), sameInstance(user.authenticatedUser()));\n+            assertThat(auth.getAuthenticatedBy(), sameInstance(auth.getAuthenticatedBy()));\n+            assertThat(auth.getLookedUpBy(), sameInstance(auth.getLookedUpBy()));\n+            assertThat(auth.getVersion(), sameInstance(auth.getVersion()));\n+            assertThat(auth.getAuthenticationType(), sameInstance(auth.getAuthenticationType()));\n+            assertThat(auth.getMetadata(), sameInstance(auth.getMetadata()));\n+        } else {\n+            assertThat(responseRef.get().authentication(), sameInstance(authentication));\n+        }\n         assertThat(throwableRef.get(), nullValue());\n     }\n+\n+    private AnonymousUser prepareAnonymousUser() {\n+        final AnonymousUser anonymousUser = mock(AnonymousUser.class);\n+        if (randomBoolean()) {\n+            when(anonymousUser.enabled()).thenReturn(true);\n+        } else {\n+            when(anonymousUser.enabled()).thenReturn(false);\n+        }\n+        final String[] roleNames = randomList(1, 4, () -> randomAlphaOfLengthBetween(4, 12)).toArray(new String[0]);", "originalCommit": "4d2fd93ce6f713f2432c7ee87d3287f81eb3fbcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI4OTI1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/61355#discussion_r475289259", "bodyText": "You right. Thanks", "author": "ywangd", "createdAt": "2020-08-24T00:34:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMzA2MA=="}], "type": "inlineReview", "revised_code": {"commit": "15597908fca415807f5bbcf78b1f10f5374d58fb", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportAuthenticateActionTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportAuthenticateActionTests.java\nindex ff12eee0113..e35db6e794f 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportAuthenticateActionTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportAuthenticateActionTests.java\n\n@@ -143,11 +143,11 @@ public class TransportAuthenticateActionTests extends ESTestCase {\n         final AnonymousUser anonymousUser = mock(AnonymousUser.class);\n         if (randomBoolean()) {\n             when(anonymousUser.enabled()).thenReturn(true);\n+            when(anonymousUser.roles()).thenReturn(\n+                randomList(1, 4, () -> randomAlphaOfLengthBetween(4, 12)).toArray(new String[0]));\n         } else {\n             when(anonymousUser.enabled()).thenReturn(false);\n         }\n-        final String[] roleNames = randomList(1, 4, () -> randomAlphaOfLengthBetween(4, 12)).toArray(new String[0]);\n-        when(anonymousUser.roles()).thenReturn(roleNames);\n         return anonymousUser;\n     }\n \n"}}, {"oid": "15597908fca415807f5bbcf78b1f10f5374d58fb", "url": "https://github.com/elastic/elasticsearch/commit/15597908fca415807f5bbcf78b1f10f5374d58fb", "message": "Address feedback", "committedDate": "2020-08-24T00:40:08Z", "type": "commit"}, {"oid": "b36efcb3b858bd04f9666903f088183ac71826d0", "url": "https://github.com/elastic/elasticsearch/commit/b36efcb3b858bd04f9666903f088183ac71826d0", "message": "Merge remote-tracking branch 'origin/master' into es-47195-anonymous-role-take2", "committedDate": "2020-08-24T00:40:23Z", "type": "commit"}]}