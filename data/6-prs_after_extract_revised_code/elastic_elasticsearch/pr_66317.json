{"pr_number": 66317, "pr_title": "Deprecate the id field for the InvalidateApiKey API ", "pr_createdAt": "2020-12-15T06:10:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66317", "timeline": [{"oid": "e11a8a367ac2b9788f2595dbe2f582508e7590b4", "url": "https://github.com/elastic/elasticsearch/commit/e11a8a367ac2b9788f2595dbe2f582508e7590b4", "message": "working", "committedDate": "2020-12-15T06:05:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3Mzc1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r543073757", "bodyText": "I changed this to have an empty name so that the deprecation message generated by LoggingDeprecationHandler does not include the location of the deprecated id field. The value of location is somehow random in the yml test and makes it impossible to match with the warnings directive. Please let me know if there is another preferred solution.", "author": "ywangd", "createdAt": "2020-12-15T06:12:53Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/rest/action/apikey/RestInvalidateApiKeyAction.java", "diffHunk": "@@ -31,7 +32,7 @@\n  * Rest action to invalidate one or more API keys\n  */\n public final class RestInvalidateApiKeyAction extends ApiKeyBaseRestHandler {\n-    static final ConstructingObjectParser<InvalidateApiKeyRequest, Void> PARSER = new ConstructingObjectParser<>(\"invalidate_api_key\",\n+    static final ConstructingObjectParser<InvalidateApiKeyRequest, Void> PARSER = new ConstructingObjectParser<>(\"\",", "originalCommit": "e11a8a367ac2b9788f2595dbe2f582508e7590b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3ODk4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r543078987", "bodyText": "I don't think we should remove location information that would be useful to clients just to help a yml test.\nDoes the yml test need to care?", "author": "tvernum", "createdAt": "2020-12-15T06:26:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3Mzc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc5MTA5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r543791092", "bodyText": "A warning message is emitted during the yml test that uses the deprecated id field. If not caught, the yml test fails. But there is not existing way we can catch this because:\n\nwarnings directive requires exact match\nThe location value is unstable during the test, it could be [invalidate_api_key][-1:8] Deprecated field ... for one run and [invalidate_api_key][1:4] Deprecated field ... for another, and some other value for the yet another.\n\nI didn't look into why the value is unstable. There could be value in fixing it? But I noticed that none of the deprecate warning messages in our tests care about the location values, i.e. they opt out of showing the location. For example, updateBy query passes null for parser name so that no location would be shown. Also GetDataFeeds does the same thing as well. I could not find any existing examples that try to match these locations. So I assumed it is not important.\nWith above being said, if we do wanna keep the parser name and in turn the location value, we have a few options:\n\nRemove the yml test that uses the deprecated id field. We can have an unit test for the deprecation message.\nOr fix the unstable location value in yaml test. I suspect it is caused by how payload is prepared by the yaml test and the fix could take some time.\nOr enhance the warnings directive so it can match a regex.\n\nI prefer option 1. What do you think? I doubt I am the first person to have this issue given deprecation messages are such a common thing. So maybe I am missing something obvious, please let me know.", "author": "ywangd", "createdAt": "2020-12-16T00:39:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3Mzc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzkwMzM1OA==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r543903358", "bodyText": "I didn't look into why the value is unstable\n\nI assume it's because we randomise the input. The YML Rest tests will randomly send the body in JSON/YAML/SMILE/etc, and might (I can't remember off hand) also randomise the order.\nOption 1 makes sense to me.", "author": "tvernum", "createdAt": "2020-12-16T03:51:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3Mzc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgwNjY4MA==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r544806680", "bodyText": "Option 1 implemented. Also removed the yml test and doc example of using the deprecated id field, which imo is overall benefiical because it's better to not advertise the deprecated usages.", "author": "ywangd", "createdAt": "2020-12-17T04:38:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3Mzc1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c074d0358ef73aa0b00a72bad3c57a834645cf7e", "chunk": "diff --git a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/rest/action/apikey/RestInvalidateApiKeyAction.java b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/rest/action/apikey/RestInvalidateApiKeyAction.java\nindex 0ce30f3216d..506de5e78e7 100644\n--- a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/rest/action/apikey/RestInvalidateApiKeyAction.java\n+++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/rest/action/apikey/RestInvalidateApiKeyAction.java\n\n@@ -32,7 +32,7 @@ import static org.elasticsearch.rest.RestRequest.Method.DELETE;\n  * Rest action to invalidate one or more API keys\n  */\n public final class RestInvalidateApiKeyAction extends ApiKeyBaseRestHandler {\n-    static final ConstructingObjectParser<InvalidateApiKeyRequest, Void> PARSER = new ConstructingObjectParser<>(\"\",\n+    static final ConstructingObjectParser<InvalidateApiKeyRequest, Void> PARSER = new ConstructingObjectParser<>(null,\n             a -> {\n                 return new InvalidateApiKeyRequest((String) a[0], (String) a[1], (String) a[2], (String) a[3],\n                     (a[4] == null) ? false : (Boolean) a[4],\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NjExMA==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r543076110", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"Cannot get a single api key id when there are multiple of them\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"Cannot get a single api key id when multiple ids have been set \" + Arrays.toString(ids));", "author": "tvernum", "createdAt": "2020-12-15T06:19:08Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java", "diffHunk": "@@ -78,8 +104,19 @@ public String getUserName() {\n         return userName;\n     }\n \n+    @Deprecated\n     public String getId() {\n-        return id;\n+        if (ids == null) {\n+            return null;\n+        } else if (ids.length == 1) {\n+            return ids[0];\n+        } else {\n+            throw new IllegalArgumentException(\"Cannot get a single api key id when there are multiple of them\");", "originalCommit": "e11a8a367ac2b9788f2595dbe2f582508e7590b4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "66457d03ebc08bad04a07fb247f325cd4eee4cb4", "chunk": "diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\nindex 597e9ebcd05..b99ca67f2a4 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\n\n@@ -111,7 +111,7 @@ public final class InvalidateApiKeyRequest implements Validatable, ToXContentObj\n         } else if (ids.length == 1) {\n             return ids[0];\n         } else {\n-            throw new IllegalArgumentException(\"Cannot get a single api key id when there are multiple of them\");\n+            throw new IllegalArgumentException(\"Cannot get a single api key id when multiple ids have been set \" + Arrays.toString(ids));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NjM2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r543076365", "bodyText": "Should this be a List instead? Then it can be truly immutable.", "author": "tvernum", "createdAt": "2020-12-15T06:19:42Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java", "diffHunk": "@@ -34,38 +36,62 @@\n \n     private final String realmName;\n     private final String userName;\n-    private final String id;\n+    private final String[] ids;", "originalCommit": "e11a8a367ac2b9788f2595dbe2f582508e7590b4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5c18071675823f04aba3a3e8df8c7d02a7754fc", "chunk": "diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\nindex 597e9ebcd05..a373a1188bf 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\n\n@@ -52,12 +52,12 @@ public final class InvalidateApiKeyRequest implements Validatable, ToXContentObj\n         validateApiKeyIds(apiKeyIds);\n         if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && apiKeyIds == null\n             && Strings.hasText(apiKeyName) == false && ownedByAuthenticatedUser == false) {\n-            throwValidationError(\"One of [api key id, api key name, username, realm name] must be specified if [owner] flag is false\");\n+            throwValidationError(\"One of [api key ids, api key name, username, realm name] must be specified if [owner] flag is false\");\n         }\n         if (apiKeyIds != null || Strings.hasText(apiKeyName)) {\n             if (Strings.hasText(realmName) || Strings.hasText(userName)) {\n                 throwValidationError(\n-                    \"username or realm name must not be specified when the api key id or api key name is specified\");\n+                    \"username or realm name must not be specified when the api key ids or api key name is specified\");\n             }\n         }\n         if (ownedByAuthenticatedUser) {\n"}}, {"oid": "66457d03ebc08bad04a07fb247f325cd4eee4cb4", "url": "https://github.com/elastic/elasticsearch/commit/66457d03ebc08bad04a07fb247f325cd4eee4cb4", "message": "Apply suggestions from code review\n\nCo-authored-by: Tim Vernum <tim@adjective.org>", "committedDate": "2020-12-15T23:52:36Z", "type": "commit"}, {"oid": "bc8fe17e73a658a603139ca676f8e431f87547ff", "url": "https://github.com/elastic/elasticsearch/commit/bc8fe17e73a658a603139ca676f8e431f87547ff", "message": "Merge remote-tracking branch 'origin/master' into deprecate-id-for-invalidate-api-keys", "committedDate": "2020-12-16T00:41:55Z", "type": "commit"}, {"oid": "42675fc5cdaa855cc3d789f320b8631f457a1d5b", "url": "https://github.com/elastic/elasticsearch/commit/42675fc5cdaa855cc3d789f320b8631f457a1d5b", "message": "Fix test failure", "committedDate": "2020-12-16T01:06:11Z", "type": "commit"}, {"oid": "c074d0358ef73aa0b00a72bad3c57a834645cf7e", "url": "https://github.com/elastic/elasticsearch/commit/c074d0358ef73aa0b00a72bad3c57a834645cf7e", "message": "Getting deprecation warning working first before change route", "committedDate": "2020-12-16T04:29:55Z", "type": "commit"}, {"oid": "a5c18071675823f04aba3a3e8df8c7d02a7754fc", "url": "https://github.com/elastic/elasticsearch/commit/a5c18071675823f04aba3a3e8df8c7d02a7754fc", "message": "fix test", "committedDate": "2020-12-16T04:52:58Z", "type": "commit"}, {"oid": "abbc63f1806595fb8de7defc528fca9463ccf746", "url": "https://github.com/elastic/elasticsearch/commit/abbc63f1806595fb8de7defc528fca9463ccf746", "message": "feedback", "committedDate": "2020-12-16T05:11:17Z", "type": "commit"}, {"oid": "73a9aa139f951b4a1cd9421c70e277ad2c357e1c", "url": "https://github.com/elastic/elasticsearch/commit/73a9aa139f951b4a1cd9421c70e277ad2c357e1c", "message": "checkstyle", "committedDate": "2020-12-16T05:18:30Z", "type": "commit"}, {"oid": "dcb7f9957f9c2ea9e4d352f4d1feeec5efd09d94", "url": "https://github.com/elastic/elasticsearch/commit/dcb7f9957f9c2ea9e4d352f4d1feeec5efd09d94", "message": "fix test", "committedDate": "2020-12-16T05:42:55Z", "type": "commit"}, {"oid": "51097f484487a3b67285ca1a3d819a563a8da293", "url": "https://github.com/elastic/elasticsearch/commit/51097f484487a3b67285ca1a3d819a563a8da293", "message": "checkstyle", "committedDate": "2020-12-16T06:10:19Z", "type": "commit"}, {"oid": "b0f91816ae97aedd3afd477177e4cb2b0984fde9", "url": "https://github.com/elastic/elasticsearch/commit/b0f91816ae97aedd3afd477177e4cb2b0984fde9", "message": "Restore location info for deprecated field", "committedDate": "2020-12-17T04:37:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyMjc2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r545522761", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"Cannot get a single api key id when multiple ids have been set \" + ids);\n          \n          \n            \n                        throw new IllegalArgumentException(\"Cannot get a single api key id when multiple ids have been set [\" + Strings.collectionToCommaDelimitedString(ids) + \"]\");\n          \n      \n    \n    \n  \n\nThere's no guarantee that List.toString will be what we want.", "author": "tvernum", "createdAt": "2020-12-18T01:56:27Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java", "diffHunk": "@@ -78,8 +105,19 @@ public String getUserName() {\n         return userName;\n     }\n \n+    @Deprecated\n     public String getId() {\n-        return id;\n+        if (ids == null) {\n+            return null;\n+        } else if (ids.size() == 1) {\n+            return ids.get(0);\n+        } else {\n+            throw new IllegalArgumentException(\"Cannot get a single api key id when multiple ids have been set \" + ids);", "originalCommit": "b0f91816ae97aedd3afd477177e4cb2b0984fde9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "908ec464588b2f6b5b32d1dbd7ef0ffed7622799", "chunk": "diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\nindex 02f4dc4c480..df68a512abb 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\n\n@@ -112,7 +112,7 @@ public final class InvalidateApiKeyRequest implements Validatable, ToXContentObj\n         } else if (ids.size() == 1) {\n             return ids.get(0);\n         } else {\n-            throw new IllegalArgumentException(\"Cannot get a single api key id when multiple ids have been set \" + ids);\n+            throw new IllegalArgumentException(\"Cannot get a single api key id when multiple ids have been set [\" + Strings.collectionToCommaDelimitedString(ids) + \"]\");\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyMjk1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r545522959", "bodyText": "Should this be an immutable copy?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.ids = apiKeyIds;\n          \n          \n            \n                    this.ids = List.copyOf(apiKeyIds);", "author": "tvernum", "createdAt": "2020-12-18T01:57:08Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java", "diffHunk": "@@ -34,38 +37,62 @@\n \n     private final String realmName;\n     private final String userName;\n-    private final String id;\n+    private final List<String> ids;\n     private final String name;\n     private final boolean ownedByAuthenticatedUser;\n \n     // pkg scope for testing\n+    @Deprecated\n     InvalidateApiKeyRequest(@Nullable String realmName, @Nullable String userName, @Nullable String apiKeyId,\n                             @Nullable String apiKeyName, boolean ownedByAuthenticatedUser) {\n-        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && Strings.hasText(apiKeyId) == false\n-                && Strings.hasText(apiKeyName) == false && ownedByAuthenticatedUser == false) {\n-            throwValidationError(\"One of [api key id, api key name, username, realm name] must be specified if [owner] flag is false\");\n+        this(realmName, userName, apiKeyName, ownedByAuthenticatedUser, apiKeyIdToIds(apiKeyId));\n+    }\n+\n+    InvalidateApiKeyRequest(@Nullable String realmName, @Nullable String userName,\n+                            @Nullable String apiKeyName, boolean ownedByAuthenticatedUser, @Nullable List<String> apiKeyIds) {\n+        validateApiKeyIds(apiKeyIds);\n+        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && apiKeyIds == null\n+            && Strings.hasText(apiKeyName) == false && ownedByAuthenticatedUser == false) {\n+            throwValidationError(\"One of [api key id(s), api key name, username, realm name] must be specified if [owner] flag is false\");\n         }\n-        if (Strings.hasText(apiKeyId) || Strings.hasText(apiKeyName)) {\n+        if (apiKeyIds != null || Strings.hasText(apiKeyName)) {\n             if (Strings.hasText(realmName) || Strings.hasText(userName)) {\n                 throwValidationError(\n-                        \"username or realm name must not be specified when the api key id or api key name is specified\");\n+                    \"username or realm name must not be specified when the api key id(s) or api key name is specified\");\n             }\n         }\n         if (ownedByAuthenticatedUser) {\n             if (Strings.hasText(realmName) || Strings.hasText(userName)) {\n                 throwValidationError(\"neither username nor realm-name may be specified when invalidating owned API keys\");\n             }\n         }\n-        if (Strings.hasText(apiKeyId) && Strings.hasText(apiKeyName)) {\n-            throwValidationError(\"only one of [api key id, api key name] can be specified\");\n+        if (apiKeyIds != null && Strings.hasText(apiKeyName)) {\n+            throwValidationError(\"only one of [api key id(s), api key name] can be specified\");\n         }\n         this.realmName = realmName;\n         this.userName = userName;\n-        this.id = apiKeyId;\n+        this.ids = apiKeyIds;", "originalCommit": "b0f91816ae97aedd3afd477177e4cb2b0984fde9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU0MDI5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66317#discussion_r545540291", "bodyText": "Absolutely! Thanks for noticing.", "author": "ywangd", "createdAt": "2020-12-18T02:53:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyMjk1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "908ec464588b2f6b5b32d1dbd7ef0ffed7622799", "chunk": "diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\nindex 02f4dc4c480..df68a512abb 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/security/InvalidateApiKeyRequest.java\n\n@@ -71,7 +71,7 @@ public final class InvalidateApiKeyRequest implements Validatable, ToXContentObj\n         }\n         this.realmName = realmName;\n         this.userName = userName;\n-        this.ids = apiKeyIds;\n+        this.ids = List.copyOf(apiKeyIds);\n         this.name = apiKeyName;\n         this.ownedByAuthenticatedUser = ownedByAuthenticatedUser;\n     }\n"}}, {"oid": "908ec464588b2f6b5b32d1dbd7ef0ffed7622799", "url": "https://github.com/elastic/elasticsearch/commit/908ec464588b2f6b5b32d1dbd7ef0ffed7622799", "message": "Apply suggestions from code review\n\nCo-authored-by: Tim Vernum <tim@adjective.org>", "committedDate": "2020-12-18T02:54:37Z", "type": "commit"}, {"oid": "57d9e3e0a38f8919b1fa20fd45765621c3b12449", "url": "https://github.com/elastic/elasticsearch/commit/57d9e3e0a38f8919b1fa20fd45765621c3b12449", "message": "more tweak", "committedDate": "2020-12-18T02:57:25Z", "type": "commit"}, {"oid": "0cf39fc15116d8ab94d01deb9c4e3d6e1e29b348", "url": "https://github.com/elastic/elasticsearch/commit/0cf39fc15116d8ab94d01deb9c4e3d6e1e29b348", "message": "fix test", "committedDate": "2020-12-18T03:40:45Z", "type": "commit"}]}