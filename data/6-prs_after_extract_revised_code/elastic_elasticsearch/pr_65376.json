{"pr_number": 65376, "pr_title": "Remove Unused IndexShardOperationPermits#blockOperations", "pr_createdAt": "2020-11-23T16:07:33Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65376", "timeline": [{"oid": "9fb63b0aff45d7ec0a3bbb4563a48e3c121b1147", "url": "https://github.com/elastic/elasticsearch/commit/9fb63b0aff45d7ec0a3bbb4563a48e3c121b1147", "message": "Remove Unused IndexShardOperationPermits#blockOperations\n\nFollow up to #64098, this method was only used in tests now so this PR removes\nit.", "committedDate": "2020-11-23T16:06:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyMjQzOA==", "url": "https://github.com/elastic/elasticsearch/pull/65376#discussion_r528822438", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Immediately delays operations and on another thread waits for in-flight operations to finish and then acquires all permits. When all\n          \n          \n            \n                 * Immediately delays operations and uses the {@link executor} to wait for in-flight operations to finish and then acquires all permits. When all", "author": "DaveCTurner", "createdAt": "2020-11-23T16:11:21Z", "path": "server/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java", "diffHunk": "@@ -88,30 +87,6 @@ public void close() {\n         closed = true;\n     }\n \n-    /**\n-     * Wait for in-flight operations to finish and executes {@code onBlocked} under the guarantee that no new operations are started. Queues\n-     * operations that are occurring in the meanwhile and runs them once {@code onBlocked} has executed.\n-     *\n-     * @param timeout   the maximum time to wait for the in-flight operations block\n-     * @param timeUnit  the time unit of the {@code timeout} argument\n-     * @param onBlocked the action to run once the block has been acquired\n-     * @param <E>       the type of checked exception thrown by {@code onBlocked}\n-     * @throws InterruptedException      if calling thread is interrupted\n-     * @throws TimeoutException          if timed out waiting for in-flight operations to finish\n-     * @throws IndexShardClosedException if operation permit has been closed\n-     */\n-    <E extends Exception> void blockOperations(\n-            final long timeout,\n-            final TimeUnit timeUnit,\n-            final CheckedRunnable<E> onBlocked) throws InterruptedException, TimeoutException, E {\n-        delayOperations();\n-        try (Releasable ignored = acquireAll(timeout, timeUnit)) {\n-            onBlocked.run();\n-        } finally {\n-            releaseDelayedOperations();\n-        }\n-    }\n-\n     /**\n      * Immediately delays operations and on another thread waits for in-flight operations to finish and then acquires all permits. When all", "originalCommit": "9fb63b0aff45d7ec0a3bbb4563a48e3c121b1147", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39bf01cee3c8d0a2ce2b97c82452a3e60eb62c94", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java b/server/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java\nindex f774d86051e..6b7805968e0 100644\n--- a/server/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java\n+++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java\n\n@@ -88,18 +88,18 @@ final class IndexShardOperationPermits implements Closeable {\n     }\n \n     /**\n-     * Immediately delays operations and on another thread waits for in-flight operations to finish and then acquires all permits. When all\n-     * permits are acquired, the provided {@link ActionListener} is called under the guarantee that no new operations are started. Delayed\n-     * operations are run once the {@link Releasable} is released or if a failure occurs while acquiring all permits; in this case the\n-     * {@code onFailure} handler will be invoked after delayed operations are released.\n+     * Immediately delays operations and uses the {@code executor} to wait for in-flight operations to finish and then acquires all\n+     * permits. When all permits are acquired, the provided {@link ActionListener} is called under the guarantee that no new operations are\n+     * started. Delayed operations are run once the {@link Releasable} is released or if a failure occurs while acquiring all permits; in\n+     * this case the {@code onFailure} handler will be invoked after delayed operations are released.\n      *\n      * @param onAcquired {@link ActionListener} that is invoked once acquisition is successful or failed\n      * @param timeout    the maximum time to wait for the in-flight operations block\n      * @param timeUnit   the time unit of the {@code timeout} argument\n      * @param executor   executor on which to wait for in-flight operations to finish and acquire all permits\n      */\n-    public void asyncBlockOperations(final ActionListener<Releasable> onAcquired, final long timeout, final TimeUnit timeUnit,\n-                                     String executor)  {\n+    public void blockOperations(final ActionListener<Releasable> onAcquired, final long timeout, final TimeUnit timeUnit,\n+                                String executor)  {\n         delayOperations();\n         threadPool.executor(executor).execute(new AbstractRunnable() {\n \n"}}, {"oid": "6b9663c481a5b9305cb9dd998a8d9b2b80f71ec5", "url": "https://github.com/elastic/elasticsearch/commit/6b9663c481a5b9305cb9dd998a8d9b2b80f71ec5", "message": "Merge remote-tracking branch 'elastic/master' into drop-blocking-permit-blocking", "committedDate": "2020-11-24T07:37:42Z", "type": "commit"}, {"oid": "39bf01cee3c8d0a2ce2b97c82452a3e60eb62c94", "url": "https://github.com/elastic/elasticsearch/commit/39bf01cee3c8d0a2ce2b97c82452a3e60eb62c94", "message": "CR: rename and fix javadoc", "committedDate": "2020-11-24T07:41:54Z", "type": "commit"}]}