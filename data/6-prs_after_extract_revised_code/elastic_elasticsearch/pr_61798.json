{"pr_number": 61798, "pr_title": "Allow [null] values in [null_value]", "pr_createdAt": "2020-09-01T15:34:54Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61798", "timeline": [{"oid": "811dfc8510f84917ae2e74fb7f9413a10991c051", "url": "https://github.com/elastic/elasticsearch/commit/811dfc8510f84917ae2e74fb7f9413a10991c051", "message": "Allow [null] values in [null_value]", "committedDate": "2020-09-01T15:23:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NzMxNg==", "url": "https://github.com/elastic/elasticsearch/pull/61798#discussion_r481247316", "bodyText": "\ud83d\udc4d These are quite useful and I could see us wanting them, say, in the AggregatorTestCase to make it very easy to index with a mapping.", "author": "nik9000", "createdAt": "2020-09-01T15:52:05Z", "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/MapperServiceTestCase.java", "diffHunk": "@@ -0,0 +1,179 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.analysis.standard.StandardAnalyzer;\n+import org.apache.lucene.index.IndexReader;\n+import org.apache.lucene.index.IndexWriterConfig;\n+import org.apache.lucene.index.RandomIndexWriter;\n+import org.apache.lucene.store.Directory;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.common.CheckedConsumer;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.compress.CompressedXContent;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.common.xcontent.json.JsonXContent;\n+import org.elasticsearch.index.IndexSettings;\n+import org.elasticsearch.index.analysis.AnalyzerScope;\n+import org.elasticsearch.index.analysis.IndexAnalyzers;\n+import org.elasticsearch.index.analysis.NamedAnalyzer;\n+import org.elasticsearch.index.query.QueryShardContext;\n+import org.elasticsearch.index.similarity.SimilarityService;\n+import org.elasticsearch.indices.IndicesModule;\n+import org.elasticsearch.indices.mapper.MapperRegistry;\n+import org.elasticsearch.plugins.MapperPlugin;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.script.ScriptService;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.Map;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.emptyMap;\n+import static java.util.stream.Collectors.toList;\n+import static org.mockito.Matchers.anyObject;\n+import static org.mockito.Matchers.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public abstract class MapperServiceTestCase extends ESTestCase {", "originalCommit": "811dfc8510f84917ae2e74fb7f9413a10991c051", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}