{"pr_number": 51515, "pr_title": "Add warnings for invalid realm order config (#51195)", "pr_createdAt": "2020-01-28T05:18:33Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51515", "timeline": [{"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7", "url": "https://github.com/elastic/elasticsearch/commit/803bdaa662b273fef6af8a78923d700acdeb45f7", "message": "Add warnings for invalid realm order config (#51195)\n\nIssue warnings for both missing realm order and duplicated realm orders.\nThe changes are to help users prepare for migration to next major\nrelease.", "committedDate": "2020-01-28T05:12:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxOTE0OA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r371719148", "bodyText": "Not sure what url should be used here. The breaking change page will only be available once 8.0 is released?", "author": "ywangd", "createdAt": "2020-01-28T10:26:08Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));\n+\n+        if (false == Strings.hasText(orderNotConfiguredRealms)) {\n+            return null;\n+        }\n+\n+        final String details = String.format(\n+            Locale.ROOT,\n+            \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+            orderNotConfiguredRealms);\n+        return new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3ODgwMA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r371778800", "bodyText": "There should be a link to the deprecation snippet, which is still to be added in this PR, seee my other comment #51515 (comment) .", "author": "albertzaharovits", "createdAt": "2020-01-28T12:42:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxOTE0OA=="}], "type": "inlineReview", "revised_code": {"commit": "0afe29951390c27bbc54f76295fd5d6fe0555e46", "chunk": "diff --git a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\nindex 1852c2b6863..d161659d7d0 100644\n--- a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n+++ b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n\n@@ -45,7 +45,7 @@ class NodeDeprecationChecks {\n         final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n                 .stream()\n                 .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n-                .map(e -> e.getKey().getName())\n+                .map(e -> RealmSettings.realmSettingPrefix(e.getKey()) + RealmSettings.ORDER_SETTING_KEY)\n                 .collect(Collectors.joining(\"; \"));\n \n         if (false == Strings.hasText(orderNotConfiguredRealms)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3OTc0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372179747", "bodyText": "I think you want to use Settings.hasValue instead here.", "author": "tvernum", "createdAt": "2020-01-29T04:06:39Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNDQ4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372324481", "bodyText": "Updated", "author": "ywangd", "createdAt": "2020-01-29T11:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3OTc0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0afe29951390c27bbc54f76295fd5d6fe0555e46", "chunk": "diff --git a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\nindex 1852c2b6863..d161659d7d0 100644\n--- a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n+++ b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n\n@@ -45,7 +45,7 @@ class NodeDeprecationChecks {\n         final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n                 .stream()\n                 .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n-                .map(e -> e.getKey().getName())\n+                .map(e -> RealmSettings.realmSettingPrefix(e.getKey()) + RealmSettings.ORDER_SETTING_KEY)\n                 .collect(Collectors.joining(\"; \"));\n \n         if (false == Strings.hasText(orderNotConfiguredRealms)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MTQ1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372181451", "bodyText": "We would typically refer to the whole setting key in these sorts of deprecation warnings.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .map(e -> e.getKey().getName())\n          \n          \n            \n                            .map(e -> RealmSettings.realmSettingPrefix(e.getKey()) + RealmSettings.ORDER_SETTING_KEY)", "author": "tvernum", "createdAt": "2020-01-29T04:17:58Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0afe29951390c27bbc54f76295fd5d6fe0555e46", "chunk": "diff --git a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\nindex 1852c2b6863..d161659d7d0 100644\n--- a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n+++ b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n\n@@ -45,7 +45,7 @@ class NodeDeprecationChecks {\n         final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n                 .stream()\n                 .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n-                .map(e -> e.getKey().getName())\n+                .map(e -> RealmSettings.realmSettingPrefix(e.getKey()) + RealmSettings.ORDER_SETTING_KEY)\n                 .collect(Collectors.joining(\"; \"));\n \n         if (false == Strings.hasText(orderNotConfiguredRealms)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4Mjc2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372182762", "bodyText": "I'd prefer to collect them in a Set instead of a String. No signficant reason, it just seems \"cleaner\" to me.", "author": "tvernum", "createdAt": "2020-01-29T04:26:06Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNTY1MA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372325650", "bodyText": "Done", "author": "ywangd", "createdAt": "2020-01-29T11:20:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4Mjc2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0afe29951390c27bbc54f76295fd5d6fe0555e46", "chunk": "diff --git a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\nindex 1852c2b6863..d161659d7d0 100644\n--- a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n+++ b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n\n@@ -45,7 +45,7 @@ class NodeDeprecationChecks {\n         final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n                 .stream()\n                 .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n-                .map(e -> e.getKey().getName())\n+                .map(e -> RealmSettings.realmSettingPrefix(e.getKey()) + RealmSettings.ORDER_SETTING_KEY)\n                 .collect(Collectors.joining(\"; \"));\n \n         if (false == Strings.hasText(orderNotConfiguredRealms)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MzY3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372183672", "bodyText": "Per comments on the PR itself, we'll need to provide a URL here.", "author": "tvernum", "createdAt": "2020-01-29T04:29:48Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));\n+\n+        if (false == Strings.hasText(orderNotConfiguredRealms)) {\n+            return null;\n+        }\n+\n+        final String details = String.format(\n+            Locale.ROOT,\n+            \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+            orderNotConfiguredRealms);\n+        return new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0OTcwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372349709", "bodyText": "Updated the doc file and added the corresponding URL here.", "author": "ywangd", "createdAt": "2020-01-29T12:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MzY3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0afe29951390c27bbc54f76295fd5d6fe0555e46", "chunk": "diff --git a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\nindex 1852c2b6863..d161659d7d0 100644\n--- a/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n+++ b/x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n\n@@ -45,7 +45,7 @@ class NodeDeprecationChecks {\n         final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n                 .stream()\n                 .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n-                .map(e -> e.getKey().getName())\n+                .map(e -> RealmSettings.realmSettingPrefix(e.getKey()) + RealmSettings.ORDER_SETTING_KEY)\n                 .collect(Collectors.joining(\"; \"));\n \n         if (false == Strings.hasText(orderNotConfiguredRealms)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDI0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372184247", "bodyText": "I'd like an inverse test as well - that realms with an order don't trigger an issue.", "author": "tvernum", "createdAt": "2020-01-29T04:30:55Z", "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "diffHunk": "@@ -60,4 +62,48 @@ public void testCheckProcessors() {\n         assertSettingDeprecationsAndWarnings(new Setting<?>[]{EsExecutors.PROCESSORS_SETTING});\n     }\n \n+    public void testCheckMissingRealmOrders() {", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNjQ5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372326497", "bodyText": "Added one test for correct realm order configs (2 realms of different orders)", "author": "ywangd", "createdAt": "2020-01-29T11:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDI0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "661d554a3f8a2a413503e855caf9014d645c9754", "chunk": "diff --git a/x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java b/x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java\nindex 123b1c624e2..ac4345a2ac1 100644\n--- a/x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java\n+++ b/x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java\n\n@@ -63,11 +67,15 @@ public class NodeDeprecationChecksTests extends ESTestCase {\n     }\n \n     public void testCheckMissingRealmOrders() {\n-        String realmName = randomAlphaOfLengthBetween(4, 12);\n-        String realmType = randomAlphaOfLengthBetween(4, 12);\n+        final RealmConfig.RealmIdentifier invalidRealm =\n+            new RealmConfig.RealmIdentifier(randomAlphaOfLengthBetween(4, 12), randomAlphaOfLengthBetween(4, 12));\n+        final RealmConfig.RealmIdentifier validRealm =\n+            new RealmConfig.RealmIdentifier(randomAlphaOfLengthBetween(4, 12), randomAlphaOfLengthBetween(4, 12));\n         final Settings settings =\n             Settings.builder()\n-                .put(\"xpack.security.authc.realms.\" + realmType + \".\" + realmName + \".enabled\", \"true\").build();\n+                .put(\"xpack.security.authc.realms.\" + invalidRealm.getType() + \".\" + invalidRealm.getName() + \".enabled\", \"true\")\n+                .put(\"xpack.security.authc.realms.\" + validRealm.getType() + \".\" + validRealm.getName() + \".order\", randomInt())\n+                .build();\n \n         final PluginsAndModules pluginsAndModules = new PluginsAndModules(Collections.emptyList(), Collections.emptyList());\n         final List<DeprecationIssue> deprecationIssues =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDQ0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372184445", "bodyText": "Can we add another realm with order + 1 and verify that it isn't reported.", "author": "tvernum", "createdAt": "2020-01-29T04:31:25Z", "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "diffHunk": "@@ -60,4 +62,48 @@ public void testCheckProcessors() {\n         assertSettingDeprecationsAndWarnings(new Setting<?>[]{EsExecutors.PROCESSORS_SETTING});\n     }\n \n+    public void testCheckMissingRealmOrders() {\n+        String realmName = randomAlphaOfLengthBetween(4, 12);\n+        String realmType = randomAlphaOfLengthBetween(4, 12);\n+        final Settings settings =\n+            Settings.builder()\n+                .put(\"xpack.security.authc.realms.\" + realmType + \".\" + realmName + \".enabled\", \"true\").build();\n+\n+        final PluginsAndModules pluginsAndModules = new PluginsAndModules(Collections.emptyList(), Collections.emptyList());\n+        final List<DeprecationIssue> deprecationIssues =\n+            DeprecationChecks.filterChecks(DeprecationChecks.NODE_SETTINGS_CHECKS, c -> c.apply(settings, pluginsAndModules));\n+\n+        assertEquals(1, deprecationIssues.size());\n+        assertEquals(new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",\n+            String.format(\n+                Locale.ROOT,\n+                \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+                realmName\n+            )\n+        ), deprecationIssues.get(0));\n+    }\n+\n+    public void testCheckUniqueRealmOrders() {\n+        final int order = randomInt();\n+        final Settings settings = Settings.builder()\n+            .put(\"xpack.security.authc.realms.\"\n+                + randomAlphaOfLengthBetween(4, 12) + \".\" + randomAlphaOfLengthBetween(4, 12) + \".order\", order)\n+            .put(\"xpack.security.authc.realms.\" \n+                + randomAlphaOfLengthBetween(4, 12) + \".\" + randomAlphaOfLengthBetween(4, 12) + \".order\", order)", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzMDU3OA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372330578", "bodyText": "Yes we should. The test cases are not exhaustive. I have updated them to have better coverage.", "author": "ywangd", "createdAt": "2020-01-29T11:32:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDQ0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "661d554a3f8a2a413503e855caf9014d645c9754", "chunk": "diff --git a/x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java b/x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java\nindex 123b1c624e2..ac4345a2ac1 100644\n--- a/x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java\n+++ b/x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java\n\n@@ -63,11 +67,15 @@ public class NodeDeprecationChecksTests extends ESTestCase {\n     }\n \n     public void testCheckMissingRealmOrders() {\n-        String realmName = randomAlphaOfLengthBetween(4, 12);\n-        String realmType = randomAlphaOfLengthBetween(4, 12);\n+        final RealmConfig.RealmIdentifier invalidRealm =\n+            new RealmConfig.RealmIdentifier(randomAlphaOfLengthBetween(4, 12), randomAlphaOfLengthBetween(4, 12));\n+        final RealmConfig.RealmIdentifier validRealm =\n+            new RealmConfig.RealmIdentifier(randomAlphaOfLengthBetween(4, 12), randomAlphaOfLengthBetween(4, 12));\n         final Settings settings =\n             Settings.builder()\n-                .put(\"xpack.security.authc.realms.\" + realmType + \".\" + realmName + \".enabled\", \"true\").build();\n+                .put(\"xpack.security.authc.realms.\" + invalidRealm.getType() + \".\" + invalidRealm.getName() + \".enabled\", \"true\")\n+                .put(\"xpack.security.authc.realms.\" + validRealm.getType() + \".\" + validRealm.getName() + \".order\", randomInt())\n+                .build();\n \n         final PluginsAndModules pluginsAndModules = new PluginsAndModules(Collections.emptyList(), Collections.emptyList());\n         final List<DeprecationIssue> deprecationIssues =\n"}}, {"oid": "1c7790c1c9957856ee2751786a6cbdcdf091fe1b", "url": "https://github.com/elastic/elasticsearch/commit/1c7790c1c9957856ee2751786a6cbdcdf091fe1b", "message": "Merge branch '7.x' into es-37614-realm-order-7.x", "committedDate": "2020-01-29T10:54:55Z", "type": "commit"}, {"oid": "0afe29951390c27bbc54f76295fd5d6fe0555e46", "url": "https://github.com/elastic/elasticsearch/commit/0afe29951390c27bbc54f76295fd5d6fe0555e46", "message": "Update x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n\nCo-Authored-By: Tim Vernum <tim@adjective.org>", "committedDate": "2020-01-29T11:04:50Z", "type": "commit"}, {"oid": "d7ee0a537a85e329d068e2dfdc61d14c1dcb7d8e", "url": "https://github.com/elastic/elasticsearch/commit/d7ee0a537a85e329d068e2dfdc61d14c1dcb7d8e", "message": "Merge branch 'es-37614-realm-order-7.x' of github.com:ywangd/elasticsearch into es-37614-realm-order-7.x", "committedDate": "2020-01-29T11:05:34Z", "type": "commit"}, {"oid": "661d554a3f8a2a413503e855caf9014d645c9754", "url": "https://github.com/elastic/elasticsearch/commit/661d554a3f8a2a413503e855caf9014d645c9754", "message": "Address feedbacks", "committedDate": "2020-01-29T12:17:02Z", "type": "commit"}, {"oid": "c3aa41ec091f1bb46c91616ed29d92751c1a1009", "url": "https://github.com/elastic/elasticsearch/commit/c3aa41ec091f1bb46c91616ed29d92751c1a1009", "message": "Merge remote-tracking branch 'origin/7.x' into es-37614-realm-order-7.x", "committedDate": "2020-01-30T13:19:52Z", "type": "commit"}, {"oid": "cc45614884f5310207bd84de22b219745e87481f", "url": "https://github.com/elastic/elasticsearch/commit/cc45614884f5310207bd84de22b219745e87481f", "message": "Add deprecation loggings for realm order", "committedDate": "2020-01-30T13:20:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1NjkzNw==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r373256937", "bodyText": "One comment if we keep this: Generally we create one static DeprecationLogger for each class similar to the regular logger. It's not too much overhead to create new ones but it's still creating a few unnecessary objects.", "author": "gwbrown", "createdAt": "2020-01-30T23:57:50Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -236,6 +247,25 @@ public Realm realm(String name) {\n         if (Strings.hasText(duplicateRealms)) {\n             throw new IllegalArgumentException(\"Found multiple realms configured with the same name: \" + duplicateRealms + \"\");\n         }\n+\n+        if (missingOrderRealmSettingKeys.size() > 0) {\n+            new DeprecationLogger(logger).deprecated(\"Found realms without order config: [{}]. \" +\n+                \"In next major release, node will fail to start with missing realm order.\",\n+                String.join(\"; \", missingOrderRealmSettingKeys)\n+            );\n+        }\n+        final List<String> duplicatedRealmOrderSettingKeys = orderToRealmOrderSettingKeys.entrySet()\n+                .stream()\n+                .filter(e -> e.getValue().size() > 1)\n+                .map(e -> e.getKey() + \": \" + String.join(\",\", e.getValue()))\n+                .sorted()\n+                .collect(Collectors.toList());\n+        if (false == duplicatedRealmOrderSettingKeys.isEmpty()) {\n+            new DeprecationLogger(logger).deprecated(\"Found multiple realms configured with the same order: [{}]. \" +", "originalCommit": "cc45614884f5310207bd84de22b219745e87481f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2Njg4OA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r373266888", "bodyText": "Updated", "author": "ywangd", "createdAt": "2020-01-31T00:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1NjkzNw=="}], "type": "inlineReview", "revised_code": {"commit": "d95353da427686c0365ca635500ffbce0fb65e77", "chunk": "diff --git a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java\nindex ba180fd17fd..f46e82b11a2 100644\n--- a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java\n+++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java\n\n@@ -248,23 +249,7 @@ public class Realms implements Iterable<Realm> {\n             throw new IllegalArgumentException(\"Found multiple realms configured with the same name: \" + duplicateRealms + \"\");\n         }\n \n-        if (missingOrderRealmSettingKeys.size() > 0) {\n-            new DeprecationLogger(logger).deprecated(\"Found realms without order config: [{}]. \" +\n-                \"In next major release, node will fail to start with missing realm order.\",\n-                String.join(\"; \", missingOrderRealmSettingKeys)\n-            );\n-        }\n-        final List<String> duplicatedRealmOrderSettingKeys = orderToRealmOrderSettingKeys.entrySet()\n-                .stream()\n-                .filter(e -> e.getValue().size() > 1)\n-                .map(e -> e.getKey() + \": \" + String.join(\",\", e.getValue()))\n-                .sorted()\n-                .collect(Collectors.toList());\n-        if (false == duplicatedRealmOrderSettingKeys.isEmpty()) {\n-            new DeprecationLogger(logger).deprecated(\"Found multiple realms configured with the same order: [{}]. \" +\n-                    \"In next major release, node will fail to start with duplicated realm order.\",\n-                String.join(\"; \", duplicatedRealmOrderSettingKeys));\n-        }\n+        logDeprecationIfFound(missingOrderRealmSettingKeys, orderToRealmOrderSettingKeys);\n \n         return realms;\n     }\n"}}, {"oid": "d95353da427686c0365ca635500ffbce0fb65e77", "url": "https://github.com/elastic/elasticsearch/commit/d95353da427686c0365ca635500ffbce0fb65e77", "message": "Update to address feedback", "committedDate": "2020-01-31T00:35:46Z", "type": "commit"}]}