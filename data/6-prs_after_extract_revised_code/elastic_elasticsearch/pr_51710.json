{"pr_number": 51710, "pr_title": "Plumb ValuesSourceRegistry through to QuerySearchContext", "pr_createdAt": "2020-01-30T22:25:09Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51710", "timeline": [{"oid": "f961b487349951a010151396e7892ab58920586f", "url": "https://github.com/elastic/elasticsearch/commit/f961b487349951a010151396e7892ab58920586f", "message": "Get the VSRegistry from QueryShardContext", "committedDate": "2020-01-30T18:29:10Z", "type": "commit"}, {"oid": "d6a91c43c435f49a7d6fdbb9ec829417f177118c", "url": "https://github.com/elastic/elasticsearch/commit/d6a91c43c435f49a7d6fdbb9ec829417f177118c", "message": "Pass VSRegistry into QueryShardContext", "committedDate": "2020-01-30T20:03:17Z", "type": "commit"}, {"oid": "716781dd994e7e7fe55b2ec0b44103ac92e5c617", "url": "https://github.com/elastic/elasticsearch/commit/716781dd994e7e7fe55b2ec0b44103ac92e5c617", "message": "Wire all the way back to search module", "committedDate": "2020-01-30T20:57:18Z", "type": "commit"}, {"oid": "efb82478d23d7fac5df2104eb7ffd312caa3399b", "url": "https://github.com/elastic/elasticsearch/commit/efb82478d23d7fac5df2104eb7ffd312caa3399b", "message": "ValuesSourceRegistry member for SearchModule", "committedDate": "2020-01-30T21:26:58Z", "type": "commit"}, {"oid": "bd1286601096be4a9ec59bd169296b113e886185", "url": "https://github.com/elastic/elasticsearch/commit/bd1286601096be4a9ec59bd169296b113e886185", "message": "Clean up other uses of VSRegistry.getInstance", "committedDate": "2020-01-30T22:03:09Z", "type": "commit"}, {"oid": "80797fa3c204127b8922960986ad627ac881fd31", "url": "https://github.com/elastic/elasticsearch/commit/80797fa3c204127b8922960986ad627ac881fd31", "message": "Get rid of singleton & weird atomic init guards", "committedDate": "2020-01-30T22:18:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5NzAyNA==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375397024", "bodyText": "I think the old indentation was easier to read.", "author": "nik9000", "createdAt": "2020-02-05T17:22:59Z", "path": "server/src/main/java/org/elasticsearch/index/IndexModule.java", "diffHunk": "@@ -382,21 +383,21 @@ public static Type defaultStoreType(final boolean allowMmap) {\n     }\n \n     public IndexService newIndexService(\n-            IndexService.IndexCreationContext indexCreationContext,\n-            NodeEnvironment environment,\n-            NamedXContentRegistry xContentRegistry,\n-            IndexService.ShardStoreDeleter shardStoreDeleter,\n-            CircuitBreakerService circuitBreakerService,\n-            BigArrays bigArrays,\n-            ThreadPool threadPool,\n-            ScriptService scriptService,\n-            ClusterService clusterService,\n-            Client client,\n-            IndicesQueryCache indicesQueryCache,\n-            MapperRegistry mapperRegistry,\n-            IndicesFieldDataCache indicesFieldDataCache,\n-            NamedWriteableRegistry namedWriteableRegistry,\n-            BooleanSupplier idFieldDataEnabled)\n+        IndexService.IndexCreationContext indexCreationContext,\n+        NodeEnvironment environment,\n+        NamedXContentRegistry xContentRegistry,\n+        IndexService.ShardStoreDeleter shardStoreDeleter,\n+        CircuitBreakerService circuitBreakerService,\n+        BigArrays bigArrays,\n+        ThreadPool threadPool,\n+        ScriptService scriptService,\n+        ClusterService clusterService,\n+        Client client,\n+        IndicesQueryCache indicesQueryCache,\n+        MapperRegistry mapperRegistry,\n+        IndicesFieldDataCache indicesFieldDataCache,\n+        NamedWriteableRegistry namedWriteableRegistry,\n+        BooleanSupplier idFieldDataEnabled, ValuesSourceRegistry valuesSourceRegistry)", "originalCommit": "80797fa3c204127b8922960986ad627ac881fd31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQxNDQ5MA==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375414490", "bodyText": "Yeah, not sure what happened here.  This is neither the old indentation, nor the format we're standardizing on.  I'll fix it.", "author": "not-napoleon", "createdAt": "2020-02-05T17:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5NzAyNA=="}], "type": "inlineReview", "revised_code": {"commit": "0fcb81accb4067db488800ce6d53257b83eef787", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/IndexModule.java b/server/src/main/java/org/elasticsearch/index/IndexModule.java\nindex 64e16ac91f9..1577ff59411 100644\n--- a/server/src/main/java/org/elasticsearch/index/IndexModule.java\n+++ b/server/src/main/java/org/elasticsearch/index/IndexModule.java\n\n@@ -382,23 +382,21 @@ public final class IndexModule {\n         }\n     }\n \n-    public IndexService newIndexService(\n-        IndexService.IndexCreationContext indexCreationContext,\n-        NodeEnvironment environment,\n-        NamedXContentRegistry xContentRegistry,\n-        IndexService.ShardStoreDeleter shardStoreDeleter,\n-        CircuitBreakerService circuitBreakerService,\n-        BigArrays bigArrays,\n-        ThreadPool threadPool,\n-        ScriptService scriptService,\n-        ClusterService clusterService,\n-        Client client,\n-        IndicesQueryCache indicesQueryCache,\n-        MapperRegistry mapperRegistry,\n-        IndicesFieldDataCache indicesFieldDataCache,\n-        NamedWriteableRegistry namedWriteableRegistry,\n-        BooleanSupplier idFieldDataEnabled, ValuesSourceRegistry valuesSourceRegistry)\n-        throws IOException {\n+    public IndexService newIndexService(IndexService.IndexCreationContext indexCreationContext,\n+                                        NodeEnvironment environment,\n+                                        NamedXContentRegistry xContentRegistry,\n+                                        IndexService.ShardStoreDeleter shardStoreDeleter,\n+                                        CircuitBreakerService circuitBreakerService,\n+                                        BigArrays bigArrays,\n+                                        ThreadPool threadPool,\n+                                        ScriptService scriptService,\n+                                        ClusterService clusterService,\n+                                        Client client,\n+                                        IndicesQueryCache indicesQueryCache,\n+                                        MapperRegistry mapperRegistry,\n+                                        IndicesFieldDataCache indicesFieldDataCache,\n+                                        NamedWriteableRegistry namedWriteableRegistry,\n+                                        BooleanSupplier idFieldDataEnabled, ValuesSourceRegistry valuesSourceRegistry) throws IOException {\n         final IndexEventListener eventListener = freeze();\n         Function<IndexService, CheckedFunction<DirectoryReader, DirectoryReader, IOException>> readerWrapperFactory =\n             indexReaderWrapper.get() == null ? (shard) -> null : indexReaderWrapper.get();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5NzQ0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375397446", "bodyText": "It look like someone was going with one arg per line here.", "author": "nik9000", "createdAt": "2020-02-05T17:23:48Z", "path": "server/src/main/java/org/elasticsearch/indices/IndicesService.java", "diffHunk": "@@ -239,12 +241,13 @@ public IndicesService(Settings settings, PluginsService pluginsService, NodeEnvi\n                           IndexScopedSettings indexScopedSettings, CircuitBreakerService circuitBreakerService, BigArrays bigArrays,\n                           ScriptService scriptService, ClusterService clusterService, Client client, MetaStateService metaStateService,\n                           Collection<Function<IndexSettings, Optional<EngineFactory>>> engineFactoryProviders,\n-                          Map<String, IndexStorePlugin.DirectoryFactory> directoryFactories) {\n+                          Map<String, IndexStorePlugin.DirectoryFactory> directoryFactories, ValuesSourceRegistry valuesSourceRegistry) {", "originalCommit": "80797fa3c204127b8922960986ad627ac881fd31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQxNTUxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375415515", "bodyText": "I'm a little confused by this comment - are you saying this should be one line per arg? I think that's what the new auto-formatting would do.", "author": "not-napoleon", "createdAt": "2020-02-05T17:59:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5NzQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ3MjgyNA==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375472824", "bodyText": "When I first looked it at I thought that was what it was and you hadn't followed. On second look it wasn't. Sorry! Ignore me.", "author": "nik9000", "createdAt": "2020-02-05T19:50:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5NzQ0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5NzYwNg==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375397606", "bodyText": "Leftover TODO?", "author": "nik9000", "createdAt": "2020-02-05T17:24:06Z", "path": "server/src/main/java/org/elasticsearch/search/SearchModule.java", "diffHunk": "@@ -298,6 +299,8 @@\n      */\n     public SearchModule(Settings settings, List<SearchPlugin> plugins) {\n         this.settings = settings;\n+        //TODO: constructor call goes here", "originalCommit": "80797fa3c204127b8922960986ad627ac881fd31", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fcb81accb4067db488800ce6d53257b83eef787", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/SearchModule.java b/server/src/main/java/org/elasticsearch/search/SearchModule.java\nindex c7ec7fb26b4..69068fce5c7 100644\n--- a/server/src/main/java/org/elasticsearch/search/SearchModule.java\n+++ b/server/src/main/java/org/elasticsearch/search/SearchModule.java\n\n@@ -299,7 +299,6 @@ public class SearchModule {\n      */\n     public SearchModule(Settings settings, List<SearchPlugin> plugins) {\n         this.settings = settings;\n-        //TODO: constructor call goes here\n         this.valuesSourceRegistry = new ValuesSourceRegistry();\n         registerSuggesters(plugins);\n         highlighters = setupHighlighters(settings, plugins);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5ODExNQ==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375398115", "bodyText": "Do you still like the idea of changing the ctor to take an Iterable? Is that a thing for a follow up change?", "author": "nik9000", "createdAt": "2020-02-05T17:25:12Z", "path": "server/src/main/java/org/elasticsearch/search/SearchModule.java", "diffHunk": "@@ -298,6 +299,8 @@\n      */\n     public SearchModule(Settings settings, List<SearchPlugin> plugins) {\n         this.settings = settings;\n+        //TODO: constructor call goes here\n+        this.valuesSourceRegistry = new ValuesSourceRegistry();", "originalCommit": "80797fa3c204127b8922960986ad627ac881fd31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQxODU0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375418546", "bodyText": "I didn't see a clean way to do this.  We already manually list all the aggregations once in registerAggregations, and that still feels like the right place to hook in the values source mappings for each aggregation.  To do that in the constructor, I'd basically need to duplicate that list.  I thought briefly about some kind of visitor pattern to cover both uses, but it seemed like a lot of boiler plate that didn't add any clarity.  If you've got a good idea for how we could make this cleaner, I'm happy to work with you on it, but I don't see a better way than what we're doing now.", "author": "not-napoleon", "createdAt": "2020-02-05T18:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5ODExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ3MzE3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375473179", "bodyText": "I think it is cool to merge as is and grab that in a follow up. Would it be ok if I gave it a shot myself once this is in?", "author": "nik9000", "createdAt": "2020-02-05T19:51:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5ODExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ3ODI4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51710#discussion_r375478286", "bodyText": "Absolutely!", "author": "not-napoleon", "createdAt": "2020-02-05T20:01:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5ODExNQ=="}], "type": "inlineReview", "revised_code": {"commit": "0fcb81accb4067db488800ce6d53257b83eef787", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/SearchModule.java b/server/src/main/java/org/elasticsearch/search/SearchModule.java\nindex c7ec7fb26b4..69068fce5c7 100644\n--- a/server/src/main/java/org/elasticsearch/search/SearchModule.java\n+++ b/server/src/main/java/org/elasticsearch/search/SearchModule.java\n\n@@ -299,7 +299,6 @@ public class SearchModule {\n      */\n     public SearchModule(Settings settings, List<SearchPlugin> plugins) {\n         this.settings = settings;\n-        //TODO: constructor call goes here\n         this.valuesSourceRegistry = new ValuesSourceRegistry();\n         registerSuggesters(plugins);\n         highlighters = setupHighlighters(settings, plugins);\n"}}, {"oid": "0fcb81accb4067db488800ce6d53257b83eef787", "url": "https://github.com/elastic/elasticsearch/commit/0fcb81accb4067db488800ce6d53257b83eef787", "message": "response to PR feedback", "committedDate": "2020-02-05T18:25:27Z", "type": "commit"}, {"oid": "f342c4c09f4b57b88fa556e7e2194cde369cef0c", "url": "https://github.com/elastic/elasticsearch/commit/f342c4c09f4b57b88fa556e7e2194cde369cef0c", "message": "Merge feature branch", "committedDate": "2020-02-07T15:34:05Z", "type": "commit"}, {"oid": "1fb0c29ed03a070b94363d156e7ce0c0f67353aa", "url": "https://github.com/elastic/elasticsearch/commit/1fb0c29ed03a070b94363d156e7ce0c0f67353aa", "message": "fix percentiles", "committedDate": "2020-02-07T16:19:29Z", "type": "commit"}]}