{"pr_number": 54386, "pr_title": "Fix updating include_in_parent/include_in_root of nested field.", "pr_createdAt": "2020-03-29T15:15:21Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54386", "timeline": [{"oid": "4847553468baa8820dc7f070fb59501bccbeaf7e", "url": "https://github.com/elastic/elasticsearch/commit/4847553468baa8820dc7f070fb59501bccbeaf7e", "message": "Fix updating include_in_parent/include_in_root of nested field throws no error", "committedDate": "2020-03-29T15:07:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4NDU0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54386#discussion_r400384545", "bodyText": "I think it would be clearer to check this directly in the doMerge method, near the place where we ensure that the nested setting doesn't change on line 454. We could even factor out a method like checkNestedParameters(Nested mergeWith) that performs all the relevant checks.\nI'm not sure why we decided to call checkEnabledFieldChange within the loop instead of directly in doMerge as we do for the other parameters. I'll follow up on that separately.", "author": "jtibshirani", "createdAt": "2020-03-30T17:56:07Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java", "diffHunk": "@@ -490,6 +490,16 @@ private static void checkEnabledFieldChange(ObjectMapper mergeWith, Mapper merge\n                 final String path = mergeWith.fullPath() + \".\" + mergeWithObjectMapper.simpleName() + \".enabled\";\n                 throw new MapperException(\"Can't update attribute for type [\" + path + \"] in index mapping\");\n             }\n+\n+            if (mergeIntoObjectMapper.nested().isIncludeInParent() != mergeWithObjectMapper.nested().isIncludeInParent()) {", "originalCommit": "4847553468baa8820dc7f070fb59501bccbeaf7e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f995fb7743d997088959648907879ad07e946198", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java\nindex e42ec8107af..b1ec7d0361c 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java\n\n@@ -481,28 +484,6 @@ public class ObjectMapper extends Mapper implements Cloneable {\n         }\n     }\n \n-    private static void checkEnabledFieldChange(ObjectMapper mergeWith, Mapper mergeWithMapper, Mapper mergeIntoMapper) {\n-        if (mergeIntoMapper instanceof ObjectMapper && mergeWithMapper instanceof ObjectMapper) {\n-            final ObjectMapper mergeIntoObjectMapper = (ObjectMapper) mergeIntoMapper;\n-            final ObjectMapper mergeWithObjectMapper = (ObjectMapper) mergeWithMapper;\n-\n-            if (mergeIntoObjectMapper.isEnabled() != mergeWithObjectMapper.isEnabled()) {\n-                final String path = mergeWith.fullPath() + \".\" + mergeWithObjectMapper.simpleName() + \".enabled\";\n-                throw new MapperException(\"Can't update attribute for type [\" + path + \"] in index mapping\");\n-            }\n-\n-            if (mergeIntoObjectMapper.nested().isIncludeInParent() != mergeWithObjectMapper.nested().isIncludeInParent()) {\n-                final String path = mergeWith.fullPath() + \".\" + mergeWithObjectMapper.simpleName() + \".include_in_parent\";\n-                throw new MapperException(\"Can't update attribute for type [\" + path + \"] in index mapping\");\n-            }\n-\n-            if (mergeIntoObjectMapper.nested().isIncludeInRoot() != mergeWithObjectMapper.nested().isIncludeInRoot()) {\n-                final String path = mergeWith.fullPath() + \".\" + mergeWithObjectMapper.simpleName() + \".include_in_root\";\n-                throw new MapperException(\"Can't update attribute for type [\" + path + \"] in index mapping\");\n-            }\n-        }\n-    }\n-\n     @Override\n     public ObjectMapper updateFieldType(Map<String, MappedFieldType> fullNameToFieldType) {\n         List<Mapper> updatedMappers = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4OTA0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54386#discussion_r400389043", "bodyText": "I think a message like this would be clearer: \"The [include_in_parent] parameter can't be updated for the nested object mapping [user].\"", "author": "jtibshirani", "createdAt": "2020-03-30T18:03:24Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java", "diffHunk": "@@ -490,6 +490,16 @@ private static void checkEnabledFieldChange(ObjectMapper mergeWith, Mapper merge\n                 final String path = mergeWith.fullPath() + \".\" + mergeWithObjectMapper.simpleName() + \".enabled\";\n                 throw new MapperException(\"Can't update attribute for type [\" + path + \"] in index mapping\");\n             }\n+\n+            if (mergeIntoObjectMapper.nested().isIncludeInParent() != mergeWithObjectMapper.nested().isIncludeInParent()) {\n+                final String path = mergeWith.fullPath() + \".\" + mergeWithObjectMapper.simpleName() + \".include_in_parent\";\n+                throw new MapperException(\"Can't update attribute for type [\" + path + \"] in index mapping\");", "originalCommit": "4847553468baa8820dc7f070fb59501bccbeaf7e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f995fb7743d997088959648907879ad07e946198", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java\nindex e42ec8107af..b1ec7d0361c 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java\n\n@@ -481,28 +484,6 @@ public class ObjectMapper extends Mapper implements Cloneable {\n         }\n     }\n \n-    private static void checkEnabledFieldChange(ObjectMapper mergeWith, Mapper mergeWithMapper, Mapper mergeIntoMapper) {\n-        if (mergeIntoMapper instanceof ObjectMapper && mergeWithMapper instanceof ObjectMapper) {\n-            final ObjectMapper mergeIntoObjectMapper = (ObjectMapper) mergeIntoMapper;\n-            final ObjectMapper mergeWithObjectMapper = (ObjectMapper) mergeWithMapper;\n-\n-            if (mergeIntoObjectMapper.isEnabled() != mergeWithObjectMapper.isEnabled()) {\n-                final String path = mergeWith.fullPath() + \".\" + mergeWithObjectMapper.simpleName() + \".enabled\";\n-                throw new MapperException(\"Can't update attribute for type [\" + path + \"] in index mapping\");\n-            }\n-\n-            if (mergeIntoObjectMapper.nested().isIncludeInParent() != mergeWithObjectMapper.nested().isIncludeInParent()) {\n-                final String path = mergeWith.fullPath() + \".\" + mergeWithObjectMapper.simpleName() + \".include_in_parent\";\n-                throw new MapperException(\"Can't update attribute for type [\" + path + \"] in index mapping\");\n-            }\n-\n-            if (mergeIntoObjectMapper.nested().isIncludeInRoot() != mergeWithObjectMapper.nested().isIncludeInRoot()) {\n-                final String path = mergeWith.fullPath() + \".\" + mergeWithObjectMapper.simpleName() + \".include_in_root\";\n-                throw new MapperException(\"Can't update attribute for type [\" + path + \"] in index mapping\");\n-            }\n-        }\n-    }\n-\n     @Override\n     public ObjectMapper updateFieldType(Map<String, MappedFieldType> fullNameToFieldType) {\n         List<Mapper> updatedMappers = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5Mzc3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54386#discussion_r400393775", "bodyText": "It's great that you put together a real unit test. But for consistency with the rest of this class and how we currently test mapping behavior, we should perform these checks using higher-level services like MapperService. You can take a look at testParentObjectMapperAreNested in this class for a simple example. The test case testLimitOfNestedFieldsPerIndex shows how to merge in a new mapping.", "author": "jtibshirani", "createdAt": "2020-03-30T18:10:59Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java", "diffHunk": "@@ -742,4 +743,36 @@ public void testReorderParent() throws IOException {\n         assertThat(doc.docs().get(1).get(\"nested1.field2\"), equalTo(\"4\"));\n         assertThat(doc.docs().get(2).get(\"field\"), equalTo(\"value\"));\n     }\n+\n+    public void testMergeNestedMappings() {", "originalCommit": "4847553468baa8820dc7f070fb59501bccbeaf7e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c7f1746f4298831be1edef26dc1cb3501a9e173", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java b/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java\nindex 1ee4103ba43..9942247cbb2 100644\n--- a/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java\n\n@@ -744,35 +743,39 @@ public class NestedObjectMapperTests extends ESSingleNodeTestCase {\n         assertThat(doc.docs().get(2).get(\"field\"), equalTo(\"value\"));\n     }\n \n-    public void testMergeNestedMappings() {\n-        final Settings indexSettings = Settings.builder().put(SETTING_VERSION_CREATED, Version.CURRENT).build();\n-        final Mapper.BuilderContext context = new Mapper.BuilderContext(indexSettings, new ContentPath());\n+    public void testMergeNestedMappings() throws  IOException {\n+        MapperService mapperService = createIndex(\"index1\", Settings.EMPTY, jsonBuilder().startObject()\n+            .startObject(\"properties\")\n+                .startObject(\"nested1\")\n+                    .field(\"type\", \"nested\")\n+                .endObject()\n+            .endObject().endObject()).mapperService();\n+        ObjectMapper objectMapper1 = mapperService.getObjectMapper(\"nested1\");\n \n-        ObjectMapper.Nested nested = ObjectMapper.Nested.newNested(false,false);\n-        final ObjectMapper nestedMapper = new ObjectMapper.Builder(\"nested1\").nested(nested).build(context);\n-        final TextFieldMapper.TextFieldType fieldType = new TextFieldMapper.TextFieldType();\n-        final TextFieldMapper fieldMapper = new TextFieldMapper(\"field1\", fieldType, fieldType, -1, null,\n-            indexSettings, FieldMapper.MultiFields.empty(), FieldMapper.CopyTo.empty());\n-        nestedMapper.putMapper(fieldMapper);\n-        final RootObjectMapper rootObjectMapper = new RootObjectMapper.Builder(\"type1\").build(context);\n-        rootObjectMapper.putMapper(nestedMapper);\n+        mapperService = createIndex(\"index2\", Settings.EMPTY, jsonBuilder().startObject()\n+            .startObject(\"properties\")\n+                .startObject(\"nested1\")\n+                    .field(\"type\", \"nested\")\n+                    .field(\"include_in_parent\", true)\n+                .endObject()\n+            .endObject().endObject()).mapperService();\n+        ObjectMapper objectMapper2 = mapperService.getObjectMapper(\"nested1\");\n \n         // cannot update `include_in_parent` dynamically\n-        ObjectMapper.Nested newNested1 = ObjectMapper.Nested.newNested(true,false);\n-        final ObjectMapper newNestedMapper1 = new ObjectMapper.Builder(\"nested1\").nested(newNested1).build(context);\n-        newNestedMapper1.putMapper(fieldMapper);\n-        final RootObjectMapper mergeWith1 = new RootObjectMapper.Builder(\"type1\").build(context);\n-        mergeWith1.putMapper(newNestedMapper1);\n-        MapperException e1 = expectThrows(MapperException.class, () -> rootObjectMapper.merge(mergeWith1));\n-        assertEquals(\"Can't update attribute for type [type1.nested1.include_in_parent] in index mapping\", e1.getMessage());\n+        MapperException e1 = expectThrows(MapperException.class, () -> objectMapper1.merge(objectMapper2));\n+        assertEquals(\"The [include_in_parent] parameter can't be updated for the nested object mapping [nested1].\", e1.getMessage());\n+\n+        mapperService = createIndex(\"index3\", Settings.EMPTY, jsonBuilder().startObject()\n+            .startObject(\"properties\")\n+                .startObject(\"nested1\")\n+                    .field(\"type\", \"nested\")\n+                    .field(\"include_in_root\", true)\n+                .endObject()\n+            .endObject().endObject()).mapperService();\n+        ObjectMapper objectMapper3 = mapperService.getObjectMapper(\"nested1\");\n \n         // cannot update `include_in_root` dynamically\n-        ObjectMapper.Nested newNested2 = ObjectMapper.Nested.newNested(false,true);\n-        final ObjectMapper newNestedMapper2 = new ObjectMapper.Builder(\"nested1\").nested(newNested2).build(context);\n-        newNestedMapper2.putMapper(fieldMapper);\n-        final RootObjectMapper mergeWith2 = new RootObjectMapper.Builder(\"type1\").build(context);\n-        mergeWith2.putMapper(newNestedMapper2);\n-        MapperException e2 = expectThrows(MapperException.class, () -> rootObjectMapper.merge(mergeWith2));\n-        assertEquals(\"Can't update attribute for type [type1.nested1.include_in_root] in index mapping\", e2.getMessage());\n+        MapperException e2 = expectThrows(MapperException.class, () -> objectMapper1.merge(objectMapper3));\n+        assertEquals(\"The [include_in_root] parameter can't be updated for the nested object mapping [nested1].\", e2.getMessage());\n     }\n }\n"}}, {"oid": "f995fb7743d997088959648907879ad07e946198", "url": "https://github.com/elastic/elasticsearch/commit/f995fb7743d997088959648907879ad07e946198", "message": "Merge remote-tracking branch 'origin/master' into patch#53792", "committedDate": "2020-04-04T06:33:51Z", "type": "commit"}, {"oid": "8c7f1746f4298831be1edef26dc1cb3501a9e173", "url": "https://github.com/elastic/elasticsearch/commit/8c7f1746f4298831be1edef26dc1cb3501a9e173", "message": "modify the test method", "committedDate": "2020-04-04T09:47:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3Njk3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/54386#discussion_r406376977", "bodyText": "Instead of creating two different indices, then merging the object mappers, I think it would be more realistic to create one index, then call MapperService.merge with a mapping update. You can look at testLimitOfNestedFieldsPerIndex in this class for an example of how to perform the merge.", "author": "jtibshirani", "createdAt": "2020-04-09T17:54:47Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java", "diffHunk": "@@ -742,4 +742,40 @@ public void testReorderParent() throws IOException {\n         assertThat(doc.docs().get(1).get(\"nested1.field2\"), equalTo(\"4\"));\n         assertThat(doc.docs().get(2).get(\"field\"), equalTo(\"value\"));\n     }\n+\n+    public void testMergeNestedMappings() throws  IOException {\n+        MapperService mapperService = createIndex(\"index1\", Settings.EMPTY, jsonBuilder().startObject()", "originalCommit": "8c7f1746f4298831be1edef26dc1cb3501a9e173", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "009da6a702329d28e1721e0a53542e519c962167", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java b/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java\nindex 9942247cbb2..3b929090a62 100644\n--- a/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java\n\n@@ -743,39 +743,42 @@ public class NestedObjectMapperTests extends ESSingleNodeTestCase {\n         assertThat(doc.docs().get(2).get(\"field\"), equalTo(\"value\"));\n     }\n \n-    public void testMergeNestedMappings() throws  IOException {\n+    public void testMergeNestedMappings() throws IOException {\n         MapperService mapperService = createIndex(\"index1\", Settings.EMPTY, jsonBuilder().startObject()\n             .startObject(\"properties\")\n                 .startObject(\"nested1\")\n                     .field(\"type\", \"nested\")\n                 .endObject()\n             .endObject().endObject()).mapperService();\n-        ObjectMapper objectMapper1 = mapperService.getObjectMapper(\"nested1\");\n \n-        mapperService = createIndex(\"index2\", Settings.EMPTY, jsonBuilder().startObject()\n-            .startObject(\"properties\")\n-                .startObject(\"nested1\")\n-                    .field(\"type\", \"nested\")\n-                    .field(\"include_in_parent\", true)\n-                .endObject()\n-            .endObject().endObject()).mapperService();\n-        ObjectMapper objectMapper2 = mapperService.getObjectMapper(\"nested1\");\n+        Function<String, String> mapping1 = type -> {\n+            try {\n+                return Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(type).startObject(\"properties\")\n+                    .startObject(\"nested1\").field(\"type\", \"nested\").field(\"include_in_parent\", true)\n+                    .endObject().endObject().endObject().endObject());\n+            } catch (IOException e) {\n+                throw new UncheckedIOException(e);\n+            }\n+        };\n \n         // cannot update `include_in_parent` dynamically\n-        MapperException e1 = expectThrows(MapperException.class, () -> objectMapper1.merge(objectMapper2));\n+        MapperException e1 = expectThrows(MapperException.class, () -> mapperService.merge(\"type\",\n+            new CompressedXContent(mapping1.apply(\"type\")), MergeReason.MAPPING_UPDATE));\n         assertEquals(\"The [include_in_parent] parameter can't be updated for the nested object mapping [nested1].\", e1.getMessage());\n \n-        mapperService = createIndex(\"index3\", Settings.EMPTY, jsonBuilder().startObject()\n-            .startObject(\"properties\")\n-                .startObject(\"nested1\")\n-                    .field(\"type\", \"nested\")\n-                    .field(\"include_in_root\", true)\n-                .endObject()\n-            .endObject().endObject()).mapperService();\n-        ObjectMapper objectMapper3 = mapperService.getObjectMapper(\"nested1\");\n+        Function<String, String> mapping2 = type -> {\n+            try {\n+                return Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(type).startObject(\"properties\")\n+                    .startObject(\"nested1\").field(\"type\", \"nested\").field(\"include_in_root\", true)\n+                    .endObject().endObject().endObject().endObject());\n+            } catch (IOException e) {\n+                throw new UncheckedIOException(e);\n+            }\n+        };\n \n         // cannot update `include_in_root` dynamically\n-        MapperException e2 = expectThrows(MapperException.class, () -> objectMapper1.merge(objectMapper3));\n+        MapperException e2 = expectThrows(MapperException.class, () -> mapperService.merge(\"type\",\n+            new CompressedXContent(mapping2.apply(\"type\")), MergeReason.MAPPING_UPDATE));\n         assertEquals(\"The [include_in_root] parameter can't be updated for the nested object mapping [nested1].\", e2.getMessage());\n     }\n }\n"}}, {"oid": "77bdee97891ed232e54d32d1305f160e4b440e92", "url": "https://github.com/elastic/elasticsearch/commit/77bdee97891ed232e54d32d1305f160e4b440e92", "message": "Merge remote-tracking branch 'origin/master' into patch#53792", "committedDate": "2020-04-10T09:40:10Z", "type": "commit"}, {"oid": "009da6a702329d28e1721e0a53542e519c962167", "url": "https://github.com/elastic/elasticsearch/commit/009da6a702329d28e1721e0a53542e519c962167", "message": "Modify test code for the change", "committedDate": "2020-04-10T13:14:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyODU5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/54386#discussion_r406828597", "bodyText": "Let's try to simplify the definition of mapping1 and mapping2:\n\nWe can remove the 'supplier' function, and just define a String mapping directly.\nThere's no need to catch and rewrap the IOException, since this method includes throws IOException in its signature.\n\nI see that you took inspiration from testLimitOfNestedFieldsPerIndex -- apologies that the method wasn't the best example.", "author": "jtibshirani", "createdAt": "2020-04-10T16:14:05Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java", "diffHunk": "@@ -742,4 +742,43 @@ public void testReorderParent() throws IOException {\n         assertThat(doc.docs().get(1).get(\"nested1.field2\"), equalTo(\"4\"));\n         assertThat(doc.docs().get(2).get(\"field\"), equalTo(\"value\"));\n     }\n+\n+    public void testMergeNestedMappings() throws IOException {\n+        MapperService mapperService = createIndex(\"index1\", Settings.EMPTY, jsonBuilder().startObject()\n+            .startObject(\"properties\")\n+                .startObject(\"nested1\")\n+                    .field(\"type\", \"nested\")\n+                .endObject()\n+            .endObject().endObject()).mapperService();\n+\n+        Function<String, String> mapping1 = type -> {", "originalCommit": "009da6a702329d28e1721e0a53542e519c962167", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2MTIwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/54386#discussion_r409461209", "bodyText": "OK, I will change that.", "author": "gaobinlong", "createdAt": "2020-04-16T10:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyODU5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "addca5de628cebbfb583f0414f64bddce3262ee3", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java b/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java\nindex 3b929090a62..661306aea4f 100644\n--- a/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java\n\n@@ -751,34 +751,22 @@ public class NestedObjectMapperTests extends ESSingleNodeTestCase {\n                 .endObject()\n             .endObject().endObject()).mapperService();\n \n-        Function<String, String> mapping1 = type -> {\n-            try {\n-                return Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(type).startObject(\"properties\")\n-                    .startObject(\"nested1\").field(\"type\", \"nested\").field(\"include_in_parent\", true)\n-                    .endObject().endObject().endObject().endObject());\n-            } catch (IOException e) {\n-                throw new UncheckedIOException(e);\n-            }\n-        };\n+        String mapping1 = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\")\n+            .startObject(\"nested1\").field(\"type\", \"nested\").field(\"include_in_parent\", true)\n+            .endObject().endObject().endObject().endObject());\n \n         // cannot update `include_in_parent` dynamically\n         MapperException e1 = expectThrows(MapperException.class, () -> mapperService.merge(\"type\",\n-            new CompressedXContent(mapping1.apply(\"type\")), MergeReason.MAPPING_UPDATE));\n+            new CompressedXContent(mapping1), MergeReason.MAPPING_UPDATE));\n         assertEquals(\"The [include_in_parent] parameter can't be updated for the nested object mapping [nested1].\", e1.getMessage());\n \n-        Function<String, String> mapping2 = type -> {\n-            try {\n-                return Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(type).startObject(\"properties\")\n-                    .startObject(\"nested1\").field(\"type\", \"nested\").field(\"include_in_root\", true)\n-                    .endObject().endObject().endObject().endObject());\n-            } catch (IOException e) {\n-                throw new UncheckedIOException(e);\n-            }\n-        };\n+        String mapping2 = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\")\n+            .startObject(\"nested1\").field(\"type\", \"nested\").field(\"include_in_root\", true)\n+            .endObject().endObject().endObject().endObject());\n \n         // cannot update `include_in_root` dynamically\n         MapperException e2 = expectThrows(MapperException.class, () -> mapperService.merge(\"type\",\n-            new CompressedXContent(mapping2.apply(\"type\")), MergeReason.MAPPING_UPDATE));\n+            new CompressedXContent(mapping2), MergeReason.MAPPING_UPDATE));\n         assertEquals(\"The [include_in_root] parameter can't be updated for the nested object mapping [nested1].\", e2.getMessage());\n     }\n }\n"}}, {"oid": "addca5de628cebbfb583f0414f64bddce3262ee3", "url": "https://github.com/elastic/elasticsearch/commit/addca5de628cebbfb583f0414f64bddce3262ee3", "message": "Modify the test code", "committedDate": "2020-04-16T12:14:57Z", "type": "commit"}, {"oid": "4a8ac95ec2da1f6045716c93a1c691e4ffe30cfc", "url": "https://github.com/elastic/elasticsearch/commit/4a8ac95ec2da1f6045716c93a1c691e4ffe30cfc", "message": "Merge remote-tracking branch 'origin/master' into patch#53792", "committedDate": "2020-04-16T14:02:53Z", "type": "commit"}]}