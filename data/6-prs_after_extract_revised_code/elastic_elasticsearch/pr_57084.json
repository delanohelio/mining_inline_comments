{"pr_number": 57084, "pr_title": "Serialize Outbound Message on Flush", "pr_createdAt": "2020-05-23T13:52:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57084", "timeline": [{"oid": "e710ff2b3d2b3c81fe69fb70895cd869278b9aba", "url": "https://github.com/elastic/elasticsearch/commit/e710ff2b3d2b3c81fe69fb70895cd869278b9aba", "message": "Serialize Outbound Message on Flush\n\nFollow up to #56961:\n\nWe can be a little more efficient than just serializing at the IO loop by serializing\nonly when we flush to a channel. This has the advantage that we don't serialize a long\nqueue of messages for a channel that isn't writable for a longer period of time (unstable network,\nactually writing large volumes of data, etc.).\nAlso, this further reduces the time for which we hold on to the write buffer for a message,\nmaking allocations because of an empty page cache recycler pool less likely.", "committedDate": "2020-05-23T13:50:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwMTkxOA==", "url": "https://github.com/elastic/elasticsearch/pull/57084#discussion_r431001918", "bodyText": "Can we assert context == null here?", "author": "DaveCTurner", "createdAt": "2020-05-27T10:01:33Z", "path": "modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java", "diffHunk": "@@ -190,13 +190,23 @@ private void failQueuedWrites() {\n \n     private static final class WriteOperation {\n \n-        private final ByteBuf buf;\n+        private ByteBuf buf;\n+\n+        private OutboundHandler.SendContext context;\n \n         private final ChannelPromise promise;\n \n-        WriteOperation(ByteBuf buf, ChannelPromise promise) {\n-            this.buf = buf;\n+        WriteOperation(OutboundHandler.SendContext context, ChannelPromise promise) {\n+            this.context = context;\n             this.promise = promise;\n         }\n+\n+        ByteBuf buffer() throws IOException {\n+            if (buf == null) {\n+                buf = Netty4Utils.toByteBuf(context.get());\n+                context = null;\n+            }", "originalCommit": "e710ff2b3d2b3c81fe69fb70895cd869278b9aba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyMDM3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/57084#discussion_r431020379", "bodyText": "Sure thing, added it. But yes, all of this is happening on a single IO thread thread so this is all safe I think :)", "author": "original-brownbear", "createdAt": "2020-05-27T10:35:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwMTkxOA=="}], "type": "inlineReview", "revised_code": {"commit": "643ee55f4d320b269b27d1907fa8a5ef94190c03", "chunk": "diff --git a/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java\nindex fa1eba3cd3c..99f199690e4 100644\n--- a/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java\n+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java\n\n@@ -206,6 +206,7 @@ final class Netty4MessageChannelHandler extends ChannelDuplexHandler {\n                 buf = Netty4Utils.toByteBuf(context.get());\n                 context = null;\n             }\n+            assert context == null;\n             return buf;\n         }\n     }\n"}}, {"oid": "42e64f2a22733d1efc50dff659bad225f43ad0a4", "url": "https://github.com/elastic/elasticsearch/commit/42e64f2a22733d1efc50dff659bad225f43ad0a4", "message": "Merge remote-tracking branch 'elastic/master' into even-lazier-writes", "committedDate": "2020-05-27T10:26:40Z", "type": "commit"}, {"oid": "f376491c45f7a73d97a1973efed749d802a89981", "url": "https://github.com/elastic/elasticsearch/commit/f376491c45f7a73d97a1973efed749d802a89981", "message": "Merge remote-tracking branch 'elastic/master' into even-lazier-writes", "committedDate": "2020-05-27T10:27:07Z", "type": "commit"}, {"oid": "643ee55f4d320b269b27d1907fa8a5ef94190c03", "url": "https://github.com/elastic/elasticsearch/commit/643ee55f4d320b269b27d1907fa8a5ef94190c03", "message": "CR: add assertion", "committedDate": "2020-05-27T10:34:08Z", "type": "commit"}]}