{"pr_number": 55931, "pr_title": "Make SAME Pool on DeterministicTaskQueue more Realistic", "pr_createdAt": "2020-04-29T12:53:09Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55931", "timeline": [{"oid": "78a73f62f275f33b396c06e3c45052a1ee9d37de", "url": "https://github.com/elastic/elasticsearch/commit/78a73f62f275f33b396c06e3c45052a1ee9d37de", "message": "Make SAME Pool on DeterministicTaskQueue more Realistic\n\nBy forking off the `SAME` pool tasks and executing them in random order,\nwe are actually creating unrealisticc scenarios and missing the actual order\nof operations (whatever task that puts the task on the `SAME` queue will always\nrun before the `SAME` queued task will be executed currently).\nAlso, added caching for the executors. It doesn't matter much, but saves some objects\nand makes debugging a little easier because executor object ids make more sense.", "committedDate": "2020-04-29T12:47:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwOTIzOA==", "url": "https://github.com/elastic/elasticsearch/pull/55931#discussion_r417309238", "bodyText": "Could we instead return EsExecutors.newDirectExecutorService(); if Names.SAME.equals(name)?\nShould we also return the same (non-direct) executor service each time too rather than constructing a new one each time?", "author": "DaveCTurner", "createdAt": "2020-04-29T13:22:41Z", "path": "test/framework/src/main/java/org/elasticsearch/cluster/coordination/DeterministicTaskQueue.java", "diffHunk": "@@ -323,12 +326,13 @@ public ThreadPoolStats stats() {\n \n             @Override\n             public ExecutorService generic() {\n-                return getExecutorService(runnableWrapper);\n+                return executor(Names.GENERIC);\n             }\n \n             @Override\n             public ExecutorService executor(String name) {\n-                return getExecutorService(runnableWrapper);\n+                return executors.computeIfAbsent(name, key -> getExecutorService(runnableWrapper,\n+                        Names.SAME.equals(key) ? Runnable::run : DeterministicTaskQueue.this::scheduleNow));", "originalCommit": "78a73f62f275f33b396c06e3c45052a1ee9d37de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxMjk0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/55931#discussion_r417312945", "bodyText": "Should we also return the same (non-direct) executor service each time too rather than constructing a new one each time?\n\nI mean for all other names, your change to cache them by name looks good but I don't think we need to distinguish the non-direct executors from each other either.", "author": "DaveCTurner", "createdAt": "2020-04-29T13:27:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwOTIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxNjQ0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/55931#discussion_r417316445", "bodyText": "Yea you're right on both points. Much simpler now :)", "author": "original-brownbear", "createdAt": "2020-04-29T13:32:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwOTIzOA=="}], "type": "inlineReview", "revised_code": {"commit": "2d5c57e13e434c927cf15c09b542e81d5b12b43c", "chunk": "diff --git a/test/framework/src/main/java/org/elasticsearch/cluster/coordination/DeterministicTaskQueue.java b/test/framework/src/main/java/org/elasticsearch/cluster/coordination/DeterministicTaskQueue.java\nindex 2ff08d2f9fe..40af0b9737a 100644\n--- a/test/framework/src/main/java/org/elasticsearch/cluster/coordination/DeterministicTaskQueue.java\n+++ b/test/framework/src/main/java/org/elasticsearch/cluster/coordination/DeterministicTaskQueue.java\n\n@@ -331,8 +330,7 @@ public class DeterministicTaskQueue {\n \n             @Override\n             public ExecutorService executor(String name) {\n-                return executors.computeIfAbsent(name, key -> getExecutorService(runnableWrapper,\n-                        Names.SAME.equals(key) ? Runnable::run : DeterministicTaskQueue.this::scheduleNow));\n+                return Names.SAME.equals(name) ? EsExecutors.newDirectExecutorService() : forkingExecutor;\n             }\n \n             @Override\n"}}, {"oid": "2d5c57e13e434c927cf15c09b542e81d5b12b43c", "url": "https://github.com/elastic/elasticsearch/commit/2d5c57e13e434c927cf15c09b542e81d5b12b43c", "message": "CR: simpler", "committedDate": "2020-04-29T13:31:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxNzM2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/55931#discussion_r417317362", "bodyText": "\ud83d\udc4d", "author": "DaveCTurner", "createdAt": "2020-04-29T13:33:44Z", "path": "test/framework/src/main/java/org/elasticsearch/cluster/coordination/DeterministicTaskQueue.java", "diffHunk": "@@ -323,12 +325,12 @@ public ThreadPoolStats stats() {\n \n             @Override\n             public ExecutorService generic() {\n-                return getExecutorService(runnableWrapper);\n+                return executor(Names.GENERIC);\n             }\n \n             @Override\n             public ExecutorService executor(String name) {\n-                return getExecutorService(runnableWrapper);\n+                return Names.SAME.equals(name) ? EsExecutors.newDirectExecutorService() : forkingExecutor;", "originalCommit": "2d5c57e13e434c927cf15c09b542e81d5b12b43c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "37b2d895c1cadd31a2a3f4a0ed67b68987c43c68", "url": "https://github.com/elastic/elasticsearch/commit/37b2d895c1cadd31a2a3f4a0ed67b68987c43c68", "message": "Merge remote-tracking branch 'elastic/master' into same-on-deterministic-queue", "committedDate": "2020-04-29T13:34:54Z", "type": "commit"}, {"oid": "a7e25e0065ccc2bc58847c71e5885ec063ec05e5", "url": "https://github.com/elastic/elasticsearch/commit/a7e25e0065ccc2bc58847c71e5885ec063ec05e5", "message": "CR: test", "committedDate": "2020-04-29T13:40:04Z", "type": "commit"}, {"oid": "a1eec015b95d064c9e885631c148a7149c3e9c2b", "url": "https://github.com/elastic/elasticsearch/commit/a1eec015b95d064c9e885631c148a7149c3e9c2b", "message": "Merge remote-tracking branch 'elastic/master' into same-on-deterministic-queue", "committedDate": "2020-04-29T18:26:26Z", "type": "commit"}]}