{"pr_number": 53397, "pr_title": "Fix pre-sorting of shards in the can_match phase", "pr_createdAt": "2020-03-11T12:07:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53397", "timeline": [{"oid": "1775d19d59277ccbaa4c22338c9684f6e4907126", "url": "https://github.com/elastic/elasticsearch/commit/1775d19d59277ccbaa4c22338c9684f6e4907126", "message": "Fix pre-sorting of shards in the can_match phase\n\nThis commit fixes a bug on sorted queries with a primary sort field\nthat uses different types in the requested indices. In this scenario\nthe returned min/max values to sort the shards are not comparable so\nwe should avoid the sorting rather than throwing an obscure exception.", "committedDate": "2020-03-11T12:06:03Z", "type": "commit"}, {"oid": "f9eea0ee20e8bdc057983e68f6bfc7eb63914466", "url": "https://github.com/elastic/elasticsearch/commit/f9eea0ee20e8bdc057983e68f6bfc7eb63914466", "message": "unused imports", "committedDate": "2020-03-11T12:19:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3NjQ0NA==", "url": "https://github.com/elastic/elasticsearch/pull/53397#discussion_r391076444", "bodyText": "It's slightly confusing that we use getMin for the initial getClass and then getMax. Use getMin all the time maybe?", "author": "jpountz", "createdAt": "2020-03-11T15:54:51Z", "path": "server/src/main/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhase.java", "diffHunk": "@@ -128,7 +126,18 @@ protected SearchPhase getNextPhase(SearchPhaseResults<CanMatchResponse> results,\n     }\n \n     private static boolean shouldSortShards(MinAndMax<?>[] minAndMaxes) {\n-        return Arrays.stream(minAndMaxes).anyMatch(Objects::nonNull);\n+        Class<?> clazz = null;\n+        for (MinAndMax<?> minAndMax : minAndMaxes) {\n+            if (clazz == null) {\n+                clazz = minAndMax == null ? null : minAndMax.getMin().getClass();\n+            } else if (minAndMax != null && clazz != minAndMax.getMax().getClass()) {", "originalCommit": "f9eea0ee20e8bdc057983e68f6bfc7eb63914466", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3Mjg0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/53397#discussion_r391872849", "bodyText": "++, I pushed ef3df35", "author": "jimczi", "createdAt": "2020-03-12T20:20:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3NjQ0NA=="}], "type": "inlineReview", "revised_code": {"commit": "ef3df35c1d9c57d31187e0c02c1b07c69b1250dc", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhase.java b/server/src/main/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhase.java\nindex 32f1e733b1b..70eeb2a811e 100644\n--- a/server/src/main/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhase.java\n+++ b/server/src/main/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhase.java\n\n@@ -130,7 +130,7 @@ final class CanMatchPreFilterSearchPhase extends AbstractSearchAsyncAction<CanMa\n         for (MinAndMax<?> minAndMax : minAndMaxes) {\n             if (clazz == null) {\n                 clazz = minAndMax == null ? null : minAndMax.getMin().getClass();\n-            } else if (minAndMax != null && clazz != minAndMax.getMax().getClass()) {\n+            } else if (minAndMax != null && clazz != minAndMax.getMin().getClass()) {\n                 // we don't support sort values that mix different types (e.g.: long/double, numeric/keyword).\n                 // TODO: we could fail the request because there is a high probability\n                 //  that the merging of topdocs will fail later for the same reason ?\n"}}, {"oid": "14185e6d4dc5334693e5eade31b41587d4f3b8d8", "url": "https://github.com/elastic/elasticsearch/commit/14185e6d4dc5334693e5eade31b41587d4f3b8d8", "message": "Merge branch 'master' into bugs/can_match_phase_sort_clazz", "committedDate": "2020-03-12T20:18:55Z", "type": "commit"}, {"oid": "ef3df35c1d9c57d31187e0c02c1b07c69b1250dc", "url": "https://github.com/elastic/elasticsearch/commit/ef3df35c1d9c57d31187e0c02c1b07c69b1250dc", "message": "address review", "committedDate": "2020-03-12T20:19:37Z", "type": "commit"}]}