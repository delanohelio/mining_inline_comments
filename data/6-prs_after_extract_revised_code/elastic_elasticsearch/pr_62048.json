{"pr_number": 62048, "pr_title": "[ML] Add support for date_nanos fields in find_file_structure", "pr_createdAt": "2020-09-07T10:46:37Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62048", "timeline": [{"oid": "80d1da50892bd9f61a2f47030172e4b9365576cc", "url": "https://github.com/elastic/elasticsearch/commit/80d1da50892bd9f61a2f47030172e4b9365576cc", "message": "[ML] Add support for date_nanos fields in find_file_structure\n\nNow that #61324 is merged it is possible for the find_file_structure\nendpoint to suggest using date_nanos fields for timestamps where\nthe timestamp format provides greater than millisecond accuracy.", "committedDate": "2020-09-07T10:46:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2NDM0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/62048#discussion_r484364347", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                                               boolean needClientTimezone, boolean needNanosecondPrecision) {\n          \n          \n            \n                                                                               boolean needClientTimezone,\n          \n          \n            \n                                                                               boolean needNanosecondPrecision) {", "author": "przemekwitek", "createdAt": "2020-09-07T11:10:52Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/FileStructureUtils.java", "diffHunk": "@@ -397,13 +398,14 @@ static boolean isMoreLikelyTextThanKeyword(String str) {\n      * @param timestampFormats Timestamp formats to be used for parsing {@code timestampField}.\n      *                         May be <code>null</code> if {@code timestampField} is also <code>null</code>.\n      * @param needClientTimezone Is the timezone of the client supplying data to ingest required to uniquely parse the timestamp?\n+     * @param needNanosecondPrecision Does the timestamp have more than millisecond accuracy?\n      * @return The ingest pipeline definition, or <code>null</code> if none is required.\n      */\n     public static Map<String, Object> makeIngestPipelineDefinition(String grokPattern, Map<String, String> customGrokPatternDefinitions,\n                                                                    Map<String, Object> csvProcessorSettings,\n                                                                    Map<String, Object> mappingsForConversions,\n                                                                    String timestampField, List<String> timestampFormats,\n-                                                                   boolean needClientTimezone) {\n+                                                                   boolean needClientTimezone, boolean needNanosecondPrecision) {", "originalCommit": "80d1da50892bd9f61a2f47030172e4b9365576cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "60564577b6e21a8549c3e5b9f6d7ae5c46746f8d", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/FileStructureUtils.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/FileStructureUtils.java\nindex 6434ecb6bce..5cb3d2dc9e1 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/FileStructureUtils.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/FileStructureUtils.java\n\n@@ -405,7 +405,8 @@ public final class FileStructureUtils {\n                                                                    Map<String, Object> csvProcessorSettings,\n                                                                    Map<String, Object> mappingsForConversions,\n                                                                    String timestampField, List<String> timestampFormats,\n-                                                                   boolean needClientTimezone, boolean needNanosecondPrecision) {\n+                                                                   boolean needClientTimezone,\n+                                                                   boolean needNanosecondPrecision) {\n \n         if (grokPattern == null && csvProcessorSettings == null && timestampField == null) {\n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2ODY4NA==", "url": "https://github.com/elastic/elasticsearch/pull/62048#discussion_r484368684", "bodyText": "Just double-checking: can there be a quotation inside another quotation?", "author": "przemekwitek", "createdAt": "2020-09-07T11:20:07Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimestampFormatFinder.java", "diffHunk": "@@ -1285,6 +1313,38 @@ static boolean requiresTimezoneDependentParsing(String format, String matchedDat\n             }\n         }\n \n+        static boolean matchHasNanosecondPrecision(String format, String matchedDate) {\n+            switch (format) {\n+                case \"ISO8601\":\n+                    Matcher matcher = FRACTIONAL_SECOND_INTERPRETER.matcher(matchedDate);\n+                    return matcher.find() && matcher.group(2).length() > 3;\n+                case \"UNIX_MS\":\n+                case \"UNIX\":\n+                    return false;\n+                case \"TAI64N\":\n+                    return true;\n+                default:\n+                    boolean notQuoted = true;\n+                    int consecutiveSs = 0;\n+                    for (int pos = 0; pos < format.length(); ++pos) {\n+                        char curChar = format.charAt(pos);\n+                        if (curChar == '\\'') {", "originalCommit": "80d1da50892bd9f61a2f47030172e4b9365576cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc5ODQzMA==", "url": "https://github.com/elastic/elasticsearch/pull/62048#discussion_r484798430", "bodyText": "A literal ' is specified by two consecutive single quotes - see https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html.  This means that no special logic is needed in this method.  If there is a literal single quote then this method will treat it as an empty literal section, which is technically wrong but achieves the desired effect.\nBut since this is quite subtle I will add a comment to say what is going on.", "author": "droberts195", "createdAt": "2020-09-08T09:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2ODY4NA=="}], "type": "inlineReview", "revised_code": {"commit": "5eae96a9aba6d2bac2b3d023801227fb20bd233b", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimestampFormatFinder.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimestampFormatFinder.java\nindex ece0c8695e6..8a3cbde2fab 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimestampFormatFinder.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimestampFormatFinder.java\n\n@@ -1329,6 +1329,11 @@ public final class TimestampFormatFinder {\n                     for (int pos = 0; pos < format.length(); ++pos) {\n                         char curChar = format.charAt(pos);\n                         if (curChar == '\\'') {\n+                            // Literal single quotes are escaped by using two consecutive single quotes.\n+                            // Technically this code does the wrong thing in this case, as it flips quoting\n+                            // from off to on or on to off and then back.  However, since by definition there\n+                            // is nothing in between the consecutive single quotes in this case, the net\n+                            // effect is correct and good enough for what this method is doing.\n                             notQuoted = !notQuoted;\n                             consecutiveSs = 0;\n                         } else if (notQuoted) {\n"}}, {"oid": "60564577b6e21a8549c3e5b9f6d7ae5c46746f8d", "url": "https://github.com/elastic/elasticsearch/commit/60564577b6e21a8549c3e5b9f6d7ae5c46746f8d", "message": "Update x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/FileStructureUtils.java\n\nCo-authored-by: Przemys\u0142aw Witek <przemyslaw.witek@elastic.co>", "committedDate": "2020-09-07T11:35:34Z", "type": "commit"}, {"oid": "dfca33d6639f465f04e9afe1b8c8a0bd9d34137e", "url": "https://github.com/elastic/elasticsearch/commit/dfca33d6639f465f04e9afe1b8c8a0bd9d34137e", "message": "Merge branch 'master' into date_nanos_in_structure_finder", "committedDate": "2020-09-08T09:58:50Z", "type": "commit"}, {"oid": "98f5d67eff41673999ba51053575795ecc432c79", "url": "https://github.com/elastic/elasticsearch/commit/98f5d67eff41673999ba51053575795ecc432c79", "message": "Merge branch 'date_nanos_in_structure_finder' of github.com:droberts195/elasticsearch into date_nanos_in_structure_finder", "committedDate": "2020-09-08T09:59:15Z", "type": "commit"}, {"oid": "5eae96a9aba6d2bac2b3d023801227fb20bd233b", "url": "https://github.com/elastic/elasticsearch/commit/5eae96a9aba6d2bac2b3d023801227fb20bd233b", "message": "Add a comment to clarify how literal single quotes are parsed", "committedDate": "2020-09-08T10:18:28Z", "type": "commit"}]}