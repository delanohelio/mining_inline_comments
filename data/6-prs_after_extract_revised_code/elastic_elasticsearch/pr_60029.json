{"pr_number": 60029, "pr_title": "Standardize script field's rejection error", "pr_createdAt": "2020-07-21T23:10:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60029", "timeline": [{"oid": "41263556ac491322608faf2578cf1b7834935b34", "url": "https://github.com/elastic/elasticsearch/commit/41263556ac491322608faf2578cf1b7834935b34", "message": "Standardize script field's rejection error\n\nThis standardizes the exception type thrown when attempting to build a\nquery on a script field that it doesn't support. It also replaces the\nfield type `[script]` in the error message with whatever the runtime type\nis.", "committedDate": "2020-07-21T23:07:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2MTU5MA==", "url": "https://github.com/elastic/elasticsearch/pull/60029#discussion_r458661590", "bodyText": "To be more accurate, the field is of type script and its runtime_type is keyword, long etc. Can we expand and say it is a script field with runtime_type etc. ?", "author": "javanna", "createdAt": "2020-07-22T09:29:57Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "diffHunk": "@@ -49,6 +60,90 @@ public final boolean isAggregatable() {\n         return true;\n     }\n \n+    public abstract Query termsQuery(List<?> values, QueryShardContext context);\n+\n+    public abstract Query rangeQuery(\n+        Object lowerTerm,\n+        Object upperTerm,\n+        boolean includeLower,\n+        boolean includeUpper,\n+        ShapeRelation relation,\n+        ZoneId timeZone,\n+        DateMathParser parser,\n+        QueryShardContext context\n+    );\n+\n+    public Query fuzzyQuery(\n+        Object value,\n+        Fuzziness fuzziness,\n+        int prefixLength,\n+        int maxExpansions,\n+        boolean transpositions,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(\n+            \"Can only use fuzzy queries on keyword and text fields - not on [\" + name() + \"] which is of type [\" + runtimeType() + \"]\"\n+        );\n+    }\n+\n+    public Query prefixQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(\n+            \"Can only use prefix queries on keyword, text and wildcard fields - not on [\"\n+                + name()\n+                + \"] which is of type [\"\n+                + runtimeType()\n+                + \"]\"\n+        );\n+    }\n+\n+    public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(\n+            \"Can only use wildcard queries on keyword, text and wildcard fields - not on [\"\n+                + name()\n+                + \"] which is of type [\"\n+                + runtimeType()\n+                + \"]\"\n+        );\n+    }\n+\n+    public Query regexpQuery(\n+        String value,\n+        int flags,\n+        int maxDeterminizedStates,\n+        MultiTermQuery.RewriteMethod method,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(\n+            \"Can only use regexp queries on keyword and text fields - not on [\" + name() + \"] which is of type [\" + runtimeType() + \"]\"", "originalCommit": "41263556ac491322608faf2578cf1b7834935b34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MDUyNA==", "url": "https://github.com/elastic/elasticsearch/pull/60029#discussion_r458980524", "bodyText": "\ud83d\udc4d", "author": "nik9000", "createdAt": "2020-07-22T17:59:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2MTU5MA=="}], "type": "inlineReview", "revised_code": {"commit": "628163c7575d9d42b07477e5c9eef3ca3b2790c0", "chunk": "diff --git a/x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java b/x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java\nindex 710d6bc1e53..f616f5799c4 100644\n--- a/x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java\n+++ b/x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java\n\n@@ -81,29 +81,15 @@ abstract class AbstractScriptMappedFieldType extends MappedFieldType {\n         boolean transpositions,\n         QueryShardContext context\n     ) {\n-        throw new IllegalArgumentException(\n-            \"Can only use fuzzy queries on keyword and text fields - not on [\" + name() + \"] which is of type [\" + runtimeType() + \"]\"\n-        );\n+        throw new IllegalArgumentException(unsupported(\"fuzzy\", \"keyword and text\"));\n     }\n \n     public Query prefixQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n-        throw new IllegalArgumentException(\n-            \"Can only use prefix queries on keyword, text and wildcard fields - not on [\"\n-                + name()\n-                + \"] which is of type [\"\n-                + runtimeType()\n-                + \"]\"\n-        );\n+        throw new IllegalArgumentException(unsupported(\"prefix\", \"keyword, text and wildcard\"));\n     }\n \n     public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n-        throw new IllegalArgumentException(\n-            \"Can only use wildcard queries on keyword, text and wildcard fields - not on [\"\n-                + name()\n-                + \"] which is of type [\"\n-                + runtimeType()\n-                + \"]\"\n-        );\n+        throw new IllegalArgumentException(unsupported(\"wildcard\", \"keyword, text and wildcard\"));\n     }\n \n     public Query regexpQuery(\n"}}, {"oid": "098f6ddb9e24a163636e74d5e4f22be3cd5469f6", "url": "https://github.com/elastic/elasticsearch/commit/098f6ddb9e24a163636e74d5e4f22be3cd5469f6", "message": "Merge branch 'feature/runtime_fields' into script_field_consistent_rejection", "committedDate": "2020-07-22T17:59:37Z", "type": "commit"}, {"oid": "628163c7575d9d42b07477e5c9eef3ca3b2790c0", "url": "https://github.com/elastic/elasticsearch/commit/628163c7575d9d42b07477e5c9eef3ca3b2790c0", "message": "Update error messages", "committedDate": "2020-07-22T18:12:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk5ODk0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/60029#discussion_r458998949", "bodyText": "don't hardcode script :) we are going to rename it and if you use the existing constant renaming will be easier", "author": "javanna", "createdAt": "2020-07-22T18:31:18Z", "path": "x-pack/plugin/runtime-fields/src/main/java/org/elasticsearch/xpack/runtimefields/mapper/AbstractScriptMappedFieldType.java", "diffHunk": "@@ -49,6 +60,71 @@ public final boolean isAggregatable() {\n         return true;\n     }\n \n+    public abstract Query termsQuery(List<?> values, QueryShardContext context);\n+\n+    public abstract Query rangeQuery(\n+        Object lowerTerm,\n+        Object upperTerm,\n+        boolean includeLower,\n+        boolean includeUpper,\n+        ShapeRelation relation,\n+        ZoneId timeZone,\n+        DateMathParser parser,\n+        QueryShardContext context\n+    );\n+\n+    public Query fuzzyQuery(\n+        Object value,\n+        Fuzziness fuzziness,\n+        int prefixLength,\n+        int maxExpansions,\n+        boolean transpositions,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(unsupported(\"fuzzy\", \"keyword and text\"));\n+    }\n+\n+    public Query prefixQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(unsupported(\"prefix\", \"keyword, text and wildcard\"));\n+    }\n+\n+    public Query wildcardQuery(String value, MultiTermQuery.RewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(unsupported(\"wildcard\", \"keyword, text and wildcard\"));\n+    }\n+\n+    public Query regexpQuery(\n+        String value,\n+        int flags,\n+        int maxDeterminizedStates,\n+        MultiTermQuery.RewriteMethod method,\n+        QueryShardContext context\n+    ) {\n+        throw new IllegalArgumentException(unsupported(\"regexp\", \"keyword and text\"));\n+    }\n+\n+    public abstract Query existsQuery(QueryShardContext context);\n+\n+    public Query phraseQuery(TokenStream stream, int slop, boolean enablePositionIncrements) throws IOException {\n+        throw new IllegalArgumentException(unsupported(\"phrase\", \"text\"));\n+    }\n+\n+    public Query multiPhraseQuery(TokenStream stream, int slop, boolean enablePositionIncrements) throws IOException {\n+        throw new IllegalArgumentException(unsupported(\"phrase\", \"text\"));\n+    }\n+\n+    public Query phrasePrefixQuery(TokenStream stream, int slop, int maxExpansions) throws IOException {\n+        throw new IllegalArgumentException(unsupported(\"phrase prefix\", \"text\"));\n+    }\n+\n+    public SpanQuery spanPrefixQuery(String value, SpanMultiTermQueryWrapper.SpanRewriteMethod method, QueryShardContext context) {\n+        throw new IllegalArgumentException(unsupported(\"span prefix\", \"text\"));\n+    }\n+\n+    private String unsupported(String query, String supported) {\n+        String thisField = \"[\" + name() + \"] which is of type [script] with runtime_type [\" + runtimeType() + \"]\";", "originalCommit": "628163c7575d9d42b07477e5c9eef3ca3b2790c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}