{"pr_number": 56291, "pr_title": "ITV2: disallow duplicate dynamic templates", "pr_createdAt": "2020-05-06T16:10:20Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56291", "timeline": [{"oid": "bb2b69ed2b736dd8e7ccb180b2abfbcd773367be", "url": "https://github.com/elastic/elasticsearch/commit/bb2b69ed2b736dd8e7ccb180b2abfbcd773367be", "message": "ITV2: disallow duplicate dynamic templates\n\nDynamic templates can contain multiple templates with the same name. This\ncommit changes the way V2 index templates mappings are resolved to add\ndeduplication of dynamic templates when resolving the mappings, by having\nthe last dynamic templates override the ones defined with the same name\nearlier in the `dynamic_templates` array.", "committedDate": "2020-05-06T16:06:02Z", "type": "commit"}, {"oid": "21794c1000c56f21973efc53c2b995ed0b99231c", "url": "https://github.com/elastic/elasticsearch/commit/21794c1000c56f21973efc53c2b995ed0b99231c", "message": "Filter duplicate dynamic templates\n\nThis filters duplicate dynamic templates when merging different component\ntemplates that specify the same dynamic template and when merging the\nmappings specified in the request with the ones in the index template.", "committedDate": "2020-05-07T13:03:00Z", "type": "commit"}, {"oid": "21be73196972dca88a7ecc9e36cd2d8f4fce3295", "url": "https://github.com/elastic/elasticsearch/commit/21be73196972dca88a7ecc9e36cd2d8f4fce3295", "message": "Merge branch 'master' into dedup_dynamic_templates", "committedDate": "2020-05-07T13:12:57Z", "type": "commit"}, {"oid": "27b528d8ebf1f8e104a768733d2eb91637d5232a", "url": "https://github.com/elastic/elasticsearch/commit/27b528d8ebf1f8e104a768733d2eb91637d5232a", "message": "Fix line length", "committedDate": "2020-05-07T13:38:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5NjgxMA==", "url": "https://github.com/elastic/elasticsearch/pull/56291#discussion_r421596810", "bodyText": "I think we can encapsulate this logic into a method to make it a bit clearer what's going on, perhaps something like:\nnonProperties = removeDuplicatedDynamicTemplates(nonProperties, innerTemplateNonProperties);\n\nThen the same method can be used below (where these lines are almost identical except for the maps passed in).", "author": "dakrone", "createdAt": "2020-05-07T15:31:35Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java", "diffHunk": "@@ -576,6 +577,18 @@ private ClusterState applyCreateIndexRequestWithExistingMetadata(final ClusterSt\n                 Map<String, Object> innerTemplateNonProperties = new HashMap<>(innerTemplateMapping);\n                 Map<String, Object> maybeProperties = (Map<String, Object>) innerTemplateNonProperties.remove(\"properties\");\n \n+                List<Map<String, Object>> innerTemplateDynamicTemplates = (List<Map<String, Object>>) innerTemplateNonProperties.get(\n+                    \"dynamic_templates\");\n+                List<Map<String, Object>> previouslySeenDynamicTemplates =\n+                    (List<Map<String, Object>>) nonProperties.get(\"dynamic_templates\");\n+                // we want \"later\" defined dynamic templates to override the previously seen ones with the same name\n+                List<Map<String, Object>> filteredDefaultDynamicTemplates =\n+                    removeAll(previouslySeenDynamicTemplates, innerTemplateDynamicTemplates);\n+\n+                if (filteredDefaultDynamicTemplates != previouslySeenDynamicTemplates) {\n+                    nonProperties.put(\"dynamic_templates\", filteredDefaultDynamicTemplates);\n+                }", "originalCommit": "27b528d8ebf1f8e104a768733d2eb91637d5232a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc42cda10a8910ce9eb66d7152ccc64ced7f29c9", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java b/server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java\nindex 4900e05bcff..300b7b8be66 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java\n\n@@ -577,18 +577,7 @@ public class MetadataCreateIndexService {\n                 Map<String, Object> innerTemplateNonProperties = new HashMap<>(innerTemplateMapping);\n                 Map<String, Object> maybeProperties = (Map<String, Object>) innerTemplateNonProperties.remove(\"properties\");\n \n-                List<Map<String, Object>> innerTemplateDynamicTemplates = (List<Map<String, Object>>) innerTemplateNonProperties.get(\n-                    \"dynamic_templates\");\n-                List<Map<String, Object>> previouslySeenDynamicTemplates =\n-                    (List<Map<String, Object>>) nonProperties.get(\"dynamic_templates\");\n-                // we want \"later\" defined dynamic templates to override the previously seen ones with the same name\n-                List<Map<String, Object>> filteredDefaultDynamicTemplates =\n-                    removeAll(previouslySeenDynamicTemplates, innerTemplateDynamicTemplates);\n-\n-                if (filteredDefaultDynamicTemplates != previouslySeenDynamicTemplates) {\n-                    nonProperties.put(\"dynamic_templates\", filteredDefaultDynamicTemplates);\n-                }\n-\n+                nonProperties = removeDuplicatedDynamicTemplates(nonProperties, innerTemplateNonProperties);\n                 XContentHelper.mergeDefaults(innerTemplateNonProperties, nonProperties);\n                 nonProperties = innerTemplateNonProperties;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5NzM0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/56291#discussion_r421597345", "bodyText": "Maybe call this removeOverlapping to make it a bit clearer what it's doing?", "author": "dakrone", "createdAt": "2020-05-07T15:32:25Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java", "diffHunk": "@@ -598,11 +623,78 @@ private ClusterState applyCreateIndexRequestWithExistingMetadata(final ClusterSt\n             }\n         }\n \n-        Map<String, Object> finalMappings = new HashMap<>(nonProperties);\n+        Map<String, Object> finalMappings = dedupDynamicTemplates(nonProperties);\n         finalMappings.put(\"properties\", properties);\n         return Collections.singletonMap(MapperService.SINGLE_MAPPING_NAME, finalMappings);\n     }\n \n+    /**\n+     * Removes all the items from the first list that are already present in the second list\n+     *\n+     * Similar to {@link List#removeAll(Collection)} but the list parameters are not modified.\n+     *\n+     * This expects both list values to be Maps of size one and the \"contains\" operation that will determine if a value\n+     * from the second list is present in the first list (and be removed from the first list) is based on key name.\n+     *\n+     * eg.\n+     *      removeAll([ {\"key1\" : {}}, {\"key2\" : {}} ], [ {\"key1\" : {}}, {\"key3\" : {}} ])\n+     * Returns:\n+     *     [ {\"key2\" : {}} ]\n+     */\n+    private static List<Map<String, Object>> removeAll(List<Map<String, Object>> first, List<Map<String, Object>> second) {", "originalCommit": "27b528d8ebf1f8e104a768733d2eb91637d5232a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc42cda10a8910ce9eb66d7152ccc64ced7f29c9", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java b/server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java\nindex 4900e05bcff..300b7b8be66 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java\n\n@@ -628,6 +606,29 @@ public class MetadataCreateIndexService {\n         return Collections.singletonMap(MapperService.SINGLE_MAPPING_NAME, finalMappings);\n     }\n \n+    /**\n+     * Removes the already seen/processed dynamic templates from the {@param previouslySeenMapping} if they are defined (we're\n+     * identifying the dynamic templates based on the name only, *not* on the full definition) in the {@param newMapping} we are about to\n+     * process (and merge)\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    private static Map<String, Object> removeDuplicatedDynamicTemplates(Map<String, Object> previouslySeenMapping,\n+                                                                        Map<String, Object> newMapping) {\n+        Map<String, Object> result = new HashMap<>(previouslySeenMapping);\n+        List<Map<String, Object>> newDynamicTemplates = (List<Map<String, Object>>) newMapping.get(\"dynamic_templates\");\n+        List<Map<String, Object>> previouslySeenDynamicTemplates =\n+            (List<Map<String, Object>>) previouslySeenMapping.get(\"dynamic_templates\");\n+\n+        List<Map<String, Object>> filteredDynamicTemplates = removeOverlapping(previouslySeenDynamicTemplates, newDynamicTemplates);\n+\n+        // if we removed any mappings from the previously seen ones, we'll re-add them on merge time, see\n+        // {@link XContentHelper#mergeDefaults}, so update the result to contain the filtered ones\n+        if (filteredDynamicTemplates != previouslySeenDynamicTemplates) {\n+            result.put(\"dynamic_templates\", filteredDynamicTemplates);\n+        }\n+        return result;\n+    }\n+\n     /**\n      * Removes all the items from the first list that are already present in the second list\n      *\n"}}, {"oid": "cc42cda10a8910ce9eb66d7152ccc64ced7f29c9", "url": "https://github.com/elastic/elasticsearch/commit/cc42cda10a8910ce9eb66d7152ccc64ced7f29c9", "message": "Extract method and re-name removeAll", "committedDate": "2020-05-07T15:45:15Z", "type": "commit"}, {"oid": "d449e8f6da1b6b72bd7f242675bc583184ae0afa", "url": "https://github.com/elastic/elasticsearch/commit/d449e8f6da1b6b72bd7f242675bc583184ae0afa", "message": "Update doc", "committedDate": "2020-05-07T15:46:25Z", "type": "commit"}]}