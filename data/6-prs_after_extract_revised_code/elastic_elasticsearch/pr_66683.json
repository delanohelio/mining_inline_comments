{"pr_number": 66683, "pr_title": "Add Ability to Write a BytesReference to Azure BlobContainer", "pr_createdAt": "2020-12-21T10:43:40Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66683", "timeline": [{"oid": "753d841e5da2f1d78d08a7c20bb0d301063b2f32", "url": "https://github.com/elastic/elasticsearch/commit/753d841e5da2f1d78d08a7c20bb0d301063b2f32", "message": "Add Ability to Write a BytesReference to Azure and GCP BlobContainer", "committedDate": "2020-12-21T11:22:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg3MjUwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66683#discussion_r551872509", "bodyText": "BytesReference.toBytes(bytes) just copies all the bytes in most cases when working from anything that I'm afraid. Maybe we could use com.google.cloud.storage.Storage#createFrom(com.google.cloud.storage.BlobInfo, java.io.InputStream, int, com.google.cloud.storage.Storage.BlobWriteOption...) instead and use the stream we can get out of the BytesReference which won't do any copying?", "author": "original-brownbear", "createdAt": "2021-01-05T11:23:46Z", "path": "plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java", "diffHunk": "@@ -226,6 +227,11 @@ InputStream readBlob(String blobName, long position, long length) throws IOExcep\n         }\n     }\n \n+    public void writeBlob(String blobName, BytesReference bytes, boolean failIfAlreadyExists) throws IOException {\n+        final BlobInfo blobInfo = BlobInfo.newBuilder(bucketName, blobName).build();\n+        executePutMultipartBlob(blobInfo, failIfAlreadyExists, BytesReference.toBytes(bytes));", "originalCommit": "753d841e5da2f1d78d08a7c20bb0d301063b2f32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkyODA4NA==", "url": "https://github.com/elastic/elasticsearch/pull/66683#discussion_r551928084", "bodyText": "Sadly Storage#createFrom perform multiples copies \ud83e\udd26. The alternative, Storage#writer(com.google.cloud.storage.BlobInfo, com.google.cloud.storage.Storage.BlobWriteOption...) performs multiple copies too. I'm not sure if we should apply the optimization for GCP?", "author": "fcofdez", "createdAt": "2021-01-05T13:23:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg3MjUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk5MjM2OA==", "url": "https://github.com/elastic/elasticsearch/pull/66683#discussion_r551992368", "bodyText": "Urgh yea you're right GCP does crazy stuff there either way it seems. I'd say let's just fix Azure then and think about GCP at low priority in a follow up :)", "author": "original-brownbear", "createdAt": "2021-01-05T15:11:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg3MjUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAwODkxMA==", "url": "https://github.com/elastic/elasticsearch/pull/66683#discussion_r552008910", "bodyText": "I'll revert the changes for GCP \ud83d\udc4d", "author": "fcofdez", "createdAt": "2021-01-05T15:36:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg3MjUwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b499644bc2f7701703bf7856c84e7dd3fab0e81f", "chunk": "diff --git a/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java b/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java\nindex 44d028deed3..803a3b8e80c 100644\n--- a/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java\n+++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java\n\n@@ -227,11 +226,6 @@ class GoogleCloudStorageBlobStore implements BlobStore {\n         }\n     }\n \n-    public void writeBlob(String blobName, BytesReference bytes, boolean failIfAlreadyExists) throws IOException {\n-        final BlobInfo blobInfo = BlobInfo.newBuilder(bucketName, blobName).build();\n-        executePutMultipartBlob(blobInfo, failIfAlreadyExists, BytesReference.toBytes(bytes));\n-    }\n-\n     /**\n      * Writes a blob in the specific bucket\n      *  @param inputStream content of the blob to be written\n"}}, {"oid": "b499644bc2f7701703bf7856c84e7dd3fab0e81f", "url": "https://github.com/elastic/elasticsearch/commit/b499644bc2f7701703bf7856c84e7dd3fab0e81f", "message": "Add Ability to Write a BytesReference to Azure BlobContainer", "committedDate": "2021-01-05T18:23:10Z", "type": "commit"}, {"oid": "b499644bc2f7701703bf7856c84e7dd3fab0e81f", "url": "https://github.com/elastic/elasticsearch/commit/b499644bc2f7701703bf7856c84e7dd3fab0e81f", "message": "Add Ability to Write a BytesReference to Azure BlobContainer", "committedDate": "2021-01-05T18:23:10Z", "type": "forcePushed"}]}