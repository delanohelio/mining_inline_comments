{"pr_number": 66268, "pr_title": "QL: Verify filter's condition type", "pr_createdAt": "2020-12-14T16:24:46Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66268", "timeline": [{"oid": "6a243239af64f3e975a661745a2d0a6f2a240d08", "url": "https://github.com/elastic/elasticsearch/commit/6a243239af64f3e975a661745a2d0a6f2a240d08", "message": "Verify filter's condition type\n\nThis adds a check in the verifier to check if filter's condition is of a\nboolean type and fail the request otherwise.", "committedDate": "2020-12-14T16:14:20Z", "type": "commit"}, {"oid": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d", "url": "https://github.com/elastic/elasticsearch/commit/e91fd4b80d5be5c2ce665836b985ae1b35846c4d", "message": "Fix: check type resolution before type's val\n\nMake sure a fields's type is available before checking it's value.", "committedDate": "2020-12-14T16:52:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MTM5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542551393", "bodyText": "Filtering only works on bool hence why I recommend renaming it to checkFilterConditionType", "author": "costin", "createdAt": "2020-12-14T17:05:45Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -626,6 +628,15 @@ private static boolean checkGroupMatch(Expression e, Node<?> source, List<Expres\n         return false;\n     }\n \n+    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {", "originalCommit": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "807b1f047324de09adc27c383085f011e4f1bab7", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\nindex ef2233c1a9d..9d247509f49 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\n\n@@ -628,11 +628,11 @@ public final class Verifier {\n         return false;\n     }\n \n-    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {\n+    private static void checkFilterConditionType(LogicalPlan p, Set<Failure> localFailures) {\n         if (p instanceof Filter) {\n             Expression condition = ((Filter) p).condition();\n-            if (condition.resolved() && condition.dataType() != BOOLEAN) {\n-                localFailures.add(fail(condition, \"Cannot filter by non-boolean expression of type [{}]\", condition.dataType()));\n+            if (condition.dataType() != BOOLEAN) {\n+                localFailures.add(fail(condition, \"Condition expression needs to be boolean, found [{}]\", condition.dataType()));\n             }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MTkzNA==", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542551934", "bodyText": "No need to check if the condition is resolved, this has already been checked before - these checks get applied only if the plan is fully resolved.", "author": "costin", "createdAt": "2020-12-14T17:06:31Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -626,6 +628,15 @@ private static boolean checkGroupMatch(Expression e, Node<?> source, List<Expres\n         return false;\n     }\n \n+    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {\n+        if (p instanceof Filter) {\n+            Expression condition = ((Filter) p).condition();\n+            if (condition.resolved() && condition.dataType() != BOOLEAN) {", "originalCommit": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4MDU1NA==", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542680554", "bodyText": "Right, this follows after checking against unresolved nodes (and even a comment about it!). Thanks, fixed.", "author": "bpintea", "createdAt": "2020-12-14T19:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MTkzNA=="}], "type": "inlineReview", "revised_code": {"commit": "807b1f047324de09adc27c383085f011e4f1bab7", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\nindex ef2233c1a9d..9d247509f49 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\n\n@@ -628,11 +628,11 @@ public final class Verifier {\n         return false;\n     }\n \n-    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {\n+    private static void checkFilterConditionType(LogicalPlan p, Set<Failure> localFailures) {\n         if (p instanceof Filter) {\n             Expression condition = ((Filter) p).condition();\n-            if (condition.resolved() && condition.dataType() != BOOLEAN) {\n-                localFailures.add(fail(condition, \"Cannot filter by non-boolean expression of type [{}]\", condition.dataType()));\n+            if (condition.dataType() != BOOLEAN) {\n+                localFailures.add(fail(condition, \"Condition expression needs to be boolean, found [{}]\", condition.dataType()));\n             }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1NDAyMg==", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542554022", "bodyText": "Maybe Condition expression needs to be boolean, found [{}]. Remove the notion of filter which is not something the user declares.", "author": "costin", "createdAt": "2020-12-14T17:09:08Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -626,6 +628,15 @@ private static boolean checkGroupMatch(Expression e, Node<?> source, List<Expres\n         return false;\n     }\n \n+    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {\n+        if (p instanceof Filter) {\n+            Expression condition = ((Filter) p).condition();\n+            if (condition.resolved() && condition.dataType() != BOOLEAN) {\n+                localFailures.add(fail(condition, \"Cannot filter by non-boolean expression of type [{}]\", condition.dataType()));", "originalCommit": "e91fd4b80d5be5c2ce665836b985ae1b35846c4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4MDY3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66268#discussion_r542680671", "bodyText": "Changed.", "author": "bpintea", "createdAt": "2020-12-14T19:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1NDAyMg=="}], "type": "inlineReview", "revised_code": {"commit": "807b1f047324de09adc27c383085f011e4f1bab7", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\nindex ef2233c1a9d..9d247509f49 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\n\n@@ -628,11 +628,11 @@ public final class Verifier {\n         return false;\n     }\n \n-    private static void checkBooleanFiltering(LogicalPlan p, Set<Failure> localFailures) {\n+    private static void checkFilterConditionType(LogicalPlan p, Set<Failure> localFailures) {\n         if (p instanceof Filter) {\n             Expression condition = ((Filter) p).condition();\n-            if (condition.resolved() && condition.dataType() != BOOLEAN) {\n-                localFailures.add(fail(condition, \"Cannot filter by non-boolean expression of type [{}]\", condition.dataType()));\n+            if (condition.dataType() != BOOLEAN) {\n+                localFailures.add(fail(condition, \"Condition expression needs to be boolean, found [{}]\", condition.dataType()));\n             }\n         }\n     }\n"}}, {"oid": "807b1f047324de09adc27c383085f011e4f1bab7", "url": "https://github.com/elastic/elasticsearch/commit/807b1f047324de09adc27c383085f011e4f1bab7", "message": "Adress review comments\n\n- remove superfluous resolution check.\n- rename a method.", "committedDate": "2020-12-14T19:25:20Z", "type": "commit"}, {"oid": "96db9546ee7fa927ad843a5b5e55e159204c630c", "url": "https://github.com/elastic/elasticsearch/commit/96db9546ee7fa927ad843a5b5e55e159204c630c", "message": "Extract common SQL-EQL verifier code into class\n\nMove checkFilterConditionType() into it's own QL class, VerifierChecks.", "committedDate": "2020-12-15T09:30:48Z", "type": "commit"}, {"oid": "b4b8c17c7653bc73ffeb88ed73595a719cb7210b", "url": "https://github.com/elastic/elasticsearch/commit/b4b8c17c7653bc73ffeb88ed73595a719cb7210b", "message": "Merge branch 'master' into feat/verify_non_boolean_cond", "committedDate": "2020-12-15T14:29:50Z", "type": "commit"}, {"oid": "640ce29879b59d1fac2306d95723456877276296", "url": "https://github.com/elastic/elasticsearch/commit/640ce29879b59d1fac2306d95723456877276296", "message": "Remove now obsolete test\n\nRemove now obsolete test.", "committedDate": "2020-12-15T15:17:08Z", "type": "commit"}]}