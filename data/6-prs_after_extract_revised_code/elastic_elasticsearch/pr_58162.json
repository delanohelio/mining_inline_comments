{"pr_number": 58162, "pr_title": "Make FieldTypeLookup immutable", "pr_createdAt": "2020-06-16T09:56:59Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58162", "timeline": [{"oid": "97b5dcc95a7535637c3387aba62d7bad2403af0f", "url": "https://github.com/elastic/elasticsearch/commit/97b5dcc95a7535637c3387aba62d7bad2403af0f", "message": "Make FieldTypeLookup immutable", "committedDate": "2020-06-16T09:49:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2Mzk2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/58162#discussion_r441763961", "bodyText": "Could we simplify to this?\nthis.mappers = newMappers;\nthis.aliasToConcreteName = aliasToConcreteName;\n\nand remove the inline initialization above?", "author": "jtibshirani", "createdAt": "2020-06-17T18:55:39Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/DynamicKeyFieldTypeLookup.java", "diffHunk": "@@ -36,34 +34,20 @@\n  * Flattened object fields live in the 'mapper-flattened' module.\n  */\n class DynamicKeyFieldTypeLookup {\n-    private final CopyOnWriteHashMap<String, DynamicKeyFieldMapper> mappers;\n-    private final Map<String, String> aliasToConcreteName;\n+    private final Map<String, DynamicKeyFieldMapper> mappers = new HashMap<>();\n+    private final Map<String, String> aliasToConcreteName = new HashMap<>();\n \n     /**\n      * The maximum field depth of any dynamic key mapper. Allows us to stop searching for\n      * a dynamic key mapper as soon as we've passed the maximum possible field depth.\n      */\n     private final int maxKeyDepth;\n \n-    DynamicKeyFieldTypeLookup() {\n-        this.mappers = new CopyOnWriteHashMap<>();\n-        this.aliasToConcreteName = Collections.emptyMap();\n-        this.maxKeyDepth = 0;\n-    }\n-\n-    private DynamicKeyFieldTypeLookup(CopyOnWriteHashMap<String, DynamicKeyFieldMapper> mappers,\n-                                      Map<String, String> aliasToConcreteName,\n-                                      int maxKeyDepth) {\n-        this.mappers = mappers;\n-        this.aliasToConcreteName = aliasToConcreteName;\n-        this.maxKeyDepth = maxKeyDepth;\n-    }\n-\n-    DynamicKeyFieldTypeLookup copyAndAddAll(Map<String, DynamicKeyFieldMapper> newMappers,\n-                                            Map<String, String> aliasToConcreteName) {\n-        CopyOnWriteHashMap<String, DynamicKeyFieldMapper> combinedMappers = this.mappers.copyAndPutAll(newMappers);\n-        int maxKeyDepth = getMaxKeyDepth(combinedMappers, aliasToConcreteName);\n-        return new DynamicKeyFieldTypeLookup(combinedMappers, aliasToConcreteName, maxKeyDepth);\n+    DynamicKeyFieldTypeLookup(Map<String, DynamicKeyFieldMapper> newMappers,\n+                              Map<String, String> aliasToConcreteName) {\n+        this.mappers.putAll(newMappers);", "originalCommit": "97b5dcc95a7535637c3387aba62d7bad2403af0f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "02ad75a834006c3722da8047ccce919287a3ccd0", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/DynamicKeyFieldTypeLookup.java b/server/src/main/java/org/elasticsearch/index/mapper/DynamicKeyFieldTypeLookup.java\nindex c9acd3daca2..73f903747e4 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/DynamicKeyFieldTypeLookup.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/DynamicKeyFieldTypeLookup.java\n\n@@ -34,8 +33,8 @@ import java.util.Map;\n  * Flattened object fields live in the 'mapper-flattened' module.\n  */\n class DynamicKeyFieldTypeLookup {\n-    private final Map<String, DynamicKeyFieldMapper> mappers = new HashMap<>();\n-    private final Map<String, String> aliasToConcreteName = new HashMap<>();\n+    private final Map<String, DynamicKeyFieldMapper> mappers;\n+    private final Map<String, String> aliasToConcreteName;\n \n     /**\n      * The maximum field depth of any dynamic key mapper. Allows us to stop searching for\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2NDQ4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/58162#discussion_r441764489", "bodyText": "indentation is off here", "author": "jtibshirani", "createdAt": "2020-06-17T18:56:09Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/FieldTypeLookup.java", "diffHunk": "@@ -19,64 +19,39 @@\n \n package org.elasticsearch.index.mapper;\n \n-import org.elasticsearch.common.collect.CopyOnWriteHashMap;\n import org.elasticsearch.common.collect.Iterators;\n import org.elasticsearch.common.regex.Regex;\n \n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Map;\n-import java.util.Objects;\n import java.util.Set;\n \n /**\n  * An immutable container for looking up {@link MappedFieldType}s by their name.\n  */\n class FieldTypeLookup implements Iterable<MappedFieldType> {\n \n-    final CopyOnWriteHashMap<String, MappedFieldType> fullNameToFieldType;\n-    private final CopyOnWriteHashMap<String, String> aliasToConcreteName;\n+    private final Map<String, MappedFieldType> fullNameToFieldType = new HashMap<>();\n+    private final Map<String, String> aliasToConcreteName = new HashMap<>();\n     private final DynamicKeyFieldTypeLookup dynamicKeyLookup;\n \n-\n     FieldTypeLookup() {\n-        fullNameToFieldType = new CopyOnWriteHashMap<>();\n-        aliasToConcreteName = new CopyOnWriteHashMap<>();\n-        dynamicKeyLookup = new DynamicKeyFieldTypeLookup();\n-    }\n-\n-    private FieldTypeLookup(CopyOnWriteHashMap<String, MappedFieldType> fullNameToFieldType,\n-                            CopyOnWriteHashMap<String, String> aliasToConcreteName,\n-                            DynamicKeyFieldTypeLookup dynamicKeyLookup) {\n-        this.fullNameToFieldType = fullNameToFieldType;\n-        this.aliasToConcreteName = aliasToConcreteName;\n-        this.dynamicKeyLookup = dynamicKeyLookup;\n+        this(Collections.emptyList(), Collections.emptyList());\n     }\n \n-    /**\n-     * Return a new instance that contains the union of this instance and the field types\n-     * from the provided mappers. If a field already exists, its field type will be updated\n-     * to use the new type from the given field mapper. Similarly if an alias already\n-     * exists, it will be updated to reference the field type from the new mapper.\n-     */\n-    public FieldTypeLookup copyAndAddAll(Collection<FieldMapper> fieldMappers,\n-                                         Collection<FieldAliasMapper> fieldAliasMappers) {\n+    FieldTypeLookup(Collection<FieldMapper> fieldMappers,\n+                           Collection<FieldAliasMapper> fieldAliasMappers) {", "originalCommit": "97b5dcc95a7535637c3387aba62d7bad2403af0f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "02ad75a834006c3722da8047ccce919287a3ccd0", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/FieldTypeLookup.java b/server/src/main/java/org/elasticsearch/index/mapper/FieldTypeLookup.java\nindex 43ba85f2213..f4529b4643f 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/FieldTypeLookup.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/FieldTypeLookup.java\n\n@@ -44,7 +44,7 @@ class FieldTypeLookup implements Iterable<MappedFieldType> {\n     }\n \n     FieldTypeLookup(Collection<FieldMapper> fieldMappers,\n-                           Collection<FieldAliasMapper> fieldAliasMappers) {\n+                    Collection<FieldAliasMapper> fieldAliasMappers) {\n \n         Map<String, DynamicKeyFieldMapper> dynamicKeyMappers = new HashMap<>();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NjgxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/58162#discussion_r441776811", "bodyText": "I think we can initialize in-line now?\nFieldTypeLookup newFieldTypes = new FieldTypeLookup(...)", "author": "jtibshirani", "createdAt": "2020-06-17T19:16:15Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "diffHunk": "@@ -362,11 +362,11 @@ private synchronized DocumentMapper internalMerge(DocumentMapper mapper, MergeRe\n         Collections.addAll(fieldMappers, metadataMappers);\n         MapperUtils.collect(newMapper.mapping().root(), objectMappers, fieldMappers, fieldAliasMappers);\n \n-        MapperMergeValidator.validateNewMappers(objectMappers, fieldMappers, fieldAliasMappers, fieldTypes);\n+        MapperMergeValidator.validateNewMappers(objectMappers, fieldMappers, fieldAliasMappers);\n         checkPartitionedIndexConstraints(newMapper);\n \n         // update lookup data-structures\n-        fieldTypes = fieldTypes.copyAndAddAll(fieldMappers, fieldAliasMappers);\n+        fieldTypes = new FieldTypeLookup(fieldMappers, fieldAliasMappers);", "originalCommit": "97b5dcc95a7535637c3387aba62d7bad2403af0f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "02ad75a834006c3722da8047ccce919287a3ccd0", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java\nindex 99dbb5bd0f3..40f044eef74 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java\n\n@@ -366,7 +365,7 @@ public class MapperService extends AbstractIndexComponent implements Closeable {\n         checkPartitionedIndexConstraints(newMapper);\n \n         // update lookup data-structures\n-        fieldTypes = new FieldTypeLookup(fieldMappers, fieldAliasMappers);\n+        FieldTypeLookup newFieldTypes = new FieldTypeLookup(fieldMappers, fieldAliasMappers);\n \n         for (ObjectMapper objectMapper : objectMappers) {\n             if (fullPathObjectMappers == this.fullPathObjectMappers) {\n"}}, {"oid": "269c02d11c4b14776966a19f97dc3770d04cf1fb", "url": "https://github.com/elastic/elasticsearch/commit/269c02d11c4b14776966a19f97dc3770d04cf1fb", "message": "Merge remote-tracking branch 'origin/master' into mapper/fieldtypelookup", "committedDate": "2020-06-18T10:29:51Z", "type": "commit"}, {"oid": "02ad75a834006c3722da8047ccce919287a3ccd0", "url": "https://github.com/elastic/elasticsearch/commit/02ad75a834006c3722da8047ccce919287a3ccd0", "message": "feedback", "committedDate": "2020-06-18T11:01:25Z", "type": "commit"}]}