{"pr_number": 65191, "pr_title": "Reimplement QuotaAwarePath.toFile()", "pr_createdAt": "2020-11-18T11:32:20Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65191", "timeline": [{"oid": "3006ad30a3e4abc7d7a0df72b17aa5bbe98fa402", "url": "https://github.com/elastic/elasticsearch/commit/3006ad30a3e4abc7d7a0df72b17aa5bbe98fa402", "message": "Reimplement QuotaAwarePath.toFile()\n\nAn issue was observed where calling `QuotaAwarePath.toFile()` caused\n`UnsupportedOperationException: Path not associated with default file\nsystem.` Replacing the implementation with that of the interface's\ndefault implementation in a later JDK prevents the exception.\n\nAs to why, I suspect that whatever implementation was being called\nbefore, or the location of that code, caused an incorrect default\nfilesystem to be picked for comparison.", "committedDate": "2020-11-18T11:25:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxNDc0OA==", "url": "https://github.com/elastic/elasticsearch/pull/65191#discussion_r526414748", "bodyText": "In master we simply don't override this method at all, instead implicitly delegating to the default implementation on the Path interface. Is there a reason we can't just do that here instead of duplicating this?", "author": "mark-vieira", "createdAt": "2020-11-18T20:56:05Z", "path": "plugins/quota-aware-fs/src/main/java/org/elasticsearch/fs/quotaaware/QuotaAwarePath.java", "diffHunk": "@@ -179,7 +180,11 @@ public Path toRealPath(LinkOption... options) throws IOException {\n     @SuppressForbidden(reason = \"Implementation required by super type\")\n     @Override\n     public File toFile() {", "originalCommit": "3006ad30a3e4abc7d7a0df72b17aa5bbe98fa402", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgzNTg2OA==", "url": "https://github.com/elastic/elasticsearch/pull/65191#discussion_r526835868", "bodyText": "As I understand it, 7.x compiles against an older version of the JDK, where Path.toFile() doesn't have a default implementation, so we have to provide an implementation (Cloud has the same issue), even though the runtime JDK provides one. All I did was take the default implementation and paste it into the 7.x source. That means that the same code ends up being run in any case, except now a delegate.toFile() call is removed, and that seems to change the context enough to fix the problem.\nI managed to replicate the problem that @mieciu found by running the an ES configuration from him against 7.x. I then iterated on the plugin source until the problem went away.", "author": "pugnascotia", "createdAt": "2020-11-19T12:28:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxNDc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NjA1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/65191#discussion_r527076051", "bodyText": "Ah yes, you are absolutely right. So yes, in 7.x the minimum runtime version is Java 8 (vs Java 11 for master), so when we compile (although we compile using a  Java 14 JDK) we use --release 8 so we \"effectively\" compile against the Java 8 APIs. The bundled runtime JDK includes an implementation here, but we support folks running with a Java 8 JRE so we can't rely on that.\nLGTM.", "author": "mark-vieira", "createdAt": "2020-11-19T17:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxNDc0OA=="}], "type": "inlineReview", "revised_code": null}]}