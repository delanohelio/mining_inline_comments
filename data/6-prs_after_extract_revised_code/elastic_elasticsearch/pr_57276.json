{"pr_number": 57276, "pr_title": "Allow index filtering in field capabilities API", "pr_createdAt": "2020-05-28T11:59:37Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57276", "timeline": [{"oid": "37cc341e7da0292bdfb2f42992b7d59f6f32f51e", "url": "https://github.com/elastic/elasticsearch/commit/37cc341e7da0292bdfb2f42992b7d59f6f32f51e", "message": "Add index filtering in field capabilities API\n\nThis change allows to use an `index_filter` in the\nfield capabilities API. Indices are filtered from\nthe response if the provided query rewrites to `match_none`\non every shard:\n\n````\nGET metrics-*\n{\n  \"index_filter\": {\n    \"bool\": {\n      \"must\": [\n        \"range\": {\n          \"@timestamp\": {\n            \"gt\": \"2019\"\n          }\n        }\n      }\n  }\n}\n````\n\nThe filtering is done on a best-effort basis, it uses the can match phase\nto rewrite queries to `match_none` instead of fully executing the request.\nThe first shard that can match the filter is used to create the field\ncapabilities response for the entire index.\n\nCloses #56195", "committedDate": "2020-05-28T11:54:58Z", "type": "commit"}, {"oid": "d2a9388313997a70b22f48ce0f7a06526fd5b306", "url": "https://github.com/elastic/elasticsearch/commit/d2a9388313997a70b22f48ce0f7a06526fd5b306", "message": "fix off-by one", "committedDate": "2020-05-28T12:55:46Z", "type": "commit"}, {"oid": "b03d48eda8458298159d07ea7e3036d008f7f518", "url": "https://github.com/elastic/elasticsearch/commit/b03d48eda8458298159d07ea7e3036d008f7f518", "message": "fix yml test", "committedDate": "2020-05-28T13:15:45Z", "type": "commit"}, {"oid": "54d33fa30e0e12eece4db9c06f515336a4e7631b", "url": "https://github.com/elastic/elasticsearch/commit/54d33fa30e0e12eece4db9c06f515336a4e7631b", "message": "fix cross cluster propagation of index filter", "committedDate": "2020-05-28T17:39:47Z", "type": "commit"}, {"oid": "b405e1314e7e5ee404820a719d924260734e501b", "url": "https://github.com/elastic/elasticsearch/commit/b405e1314e7e5ee404820a719d924260734e501b", "message": "Merge branch 'master' into field_caps_index_filter", "committedDate": "2020-05-28T17:40:22Z", "type": "commit"}, {"oid": "f15106e246be8e3b201ea39082c8c56f75ceea30", "url": "https://github.com/elastic/elasticsearch/commit/f15106e246be8e3b201ea39082c8c56f75ceea30", "message": "fix  typo in doc", "committedDate": "2020-05-28T17:44:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI5ODE3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57276#discussion_r432298176", "bodyText": "PUT? shouldn't it be a POST?", "author": "jpountz", "createdAt": "2020-05-29T07:16:18Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java", "diffHunk": "@@ -521,13 +521,17 @@ static Request explain(ExplainRequest explainRequest) throws IOException {\n         return request;\n     }\n \n-    static Request fieldCaps(FieldCapabilitiesRequest fieldCapabilitiesRequest) {\n-        Request request = new Request(HttpGet.METHOD_NAME, endpoint(fieldCapabilitiesRequest.indices(), \"_field_caps\"));\n+    static Request fieldCaps(FieldCapabilitiesRequest fieldCapabilitiesRequest) throws IOException {\n+        String methodName = fieldCapabilitiesRequest.indexFilter() != null ? HttpPut.METHOD_NAME  : HttpGet.METHOD_NAME;", "originalCommit": "f15106e246be8e3b201ea39082c8c56f75ceea30", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fb3007c0832b7a5eb604e76978fb0047d70ecd61", "chunk": "diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java\nindex bc4809250f2..c12eb5011ed 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java\n\n@@ -522,7 +522,7 @@ final class RequestConverters {\n     }\n \n     static Request fieldCaps(FieldCapabilitiesRequest fieldCapabilitiesRequest) throws IOException {\n-        String methodName = fieldCapabilitiesRequest.indexFilter() != null ? HttpPut.METHOD_NAME  : HttpGet.METHOD_NAME;\n+        String methodName = fieldCapabilitiesRequest.indexFilter() != null ? HttpPost.METHOD_NAME  : HttpGet.METHOD_NAME;\n         Request request = new Request(methodName, endpoint(fieldCapabilitiesRequest.indices(), \"_field_caps\"));\n \n         Params params = new Params();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMDE4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57276#discussion_r432310181", "bodyText": "It's a pre-existing issue but I'd rather like that we use readOptionalWriteable for symmetry with writeTo, which uses writeOptionalWriteable. Or change the write logic to write booleans.", "author": "jpountz", "createdAt": "2020-05-29T07:42:11Z", "path": "server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesIndexRequest.java", "diffHunk": "@@ -19,36 +19,58 @@\n \n package org.elasticsearch.action.fieldcaps;\n \n+import org.elasticsearch.Version;\n+import org.elasticsearch.action.ActionRequest;\n import org.elasticsearch.action.ActionRequestValidationException;\n+import org.elasticsearch.action.IndicesRequest;\n import org.elasticsearch.action.OriginalIndices;\n import org.elasticsearch.action.support.IndicesOptions;\n-import org.elasticsearch.action.support.single.shard.SingleShardRequest;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.index.shard.ShardId;\n \n import java.io.IOException;\n+import java.util.Objects;\n \n-public class FieldCapabilitiesIndexRequest extends SingleShardRequest<FieldCapabilitiesIndexRequest> {\n+public class FieldCapabilitiesIndexRequest extends ActionRequest implements IndicesRequest {\n \n+    public static final IndicesOptions INDICES_OPTIONS = IndicesOptions.strictSingleIndexNoExpandForbidClosed();\n+\n+    private final String index;\n     private final String[] fields;\n     private final OriginalIndices originalIndices;\n+    private final QueryBuilder indexFilter;\n+    private final long nowInMillis;\n+\n+    private ShardId shardId;\n \n     // For serialization\n     FieldCapabilitiesIndexRequest(StreamInput in) throws IOException {\n         super(in);\n+        if (in.readBoolean()) {\n+            shardId = new ShardId(in);\n+        }", "originalCommit": "f15106e246be8e3b201ea39082c8c56f75ceea30", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM3OTE5MA==", "url": "https://github.com/elastic/elasticsearch/pull/57276#discussion_r432379190", "bodyText": "++, I pushed fb3007c", "author": "jimczi", "createdAt": "2020-05-29T09:52:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMDE4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "fb3007c0832b7a5eb604e76978fb0047d70ecd61", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesIndexRequest.java b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesIndexRequest.java\nindex 89d7f6633e1..29aaf24a02f 100644\n--- a/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesIndexRequest.java\n+++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesIndexRequest.java\n\n@@ -48,9 +48,7 @@ public class FieldCapabilitiesIndexRequest extends ActionRequest implements Indi\n     // For serialization\n     FieldCapabilitiesIndexRequest(StreamInput in) throws IOException {\n         super(in);\n-        if (in.readBoolean()) {\n-            shardId = new ShardId(in);\n-        }\n+        shardId = in.readOptionalWriteable(ShardId::new);\n         index = in.readOptionalString();\n         fields = in.readStringArray();\n         originalIndices = OriginalIndices.readOriginalIndices(in);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNTAwNg==", "url": "https://github.com/elastic/elasticsearch/pull/57276#discussion_r432315006", "bodyText": "question: in what cases would the current timestamp already be set?", "author": "jpountz", "createdAt": "2020-05-29T07:51:44Z", "path": "server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java", "diffHunk": "@@ -67,6 +67,7 @@ public TransportFieldCapabilitiesAction(TransportService transportService, Clust\n \n     @Override\n     protected void doExecute(Task task, FieldCapabilitiesRequest request, final ActionListener<FieldCapabilitiesResponse> listener) {\n+        long nowInMillis = request.nowInMillis() == null ? System.currentTimeMillis() : request.nowInMillis();", "originalCommit": "f15106e246be8e3b201ea39082c8c56f75ceea30", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM3ODg3OA==", "url": "https://github.com/elastic/elasticsearch/pull/57276#discussion_r432378878", "bodyText": "If the action is executed by a cross cluster search. See https://github.com/elastic/elasticsearch/pull/57276/files?file-filters%5B%5D=.java#diff-7bbfa44263f4c8fc5d8620e78cfe088bR130.\nI added a comment in fb3007c", "author": "jimczi", "createdAt": "2020-05-29T09:52:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNTAwNg=="}], "type": "inlineReview", "revised_code": {"commit": "fb3007c0832b7a5eb604e76978fb0047d70ecd61", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java\nindex 353bac8161d..55b92b74754 100644\n--- a/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java\n+++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java\n\n@@ -67,6 +67,7 @@ public class TransportFieldCapabilitiesAction extends HandledTransportAction<Fie\n \n     @Override\n     protected void doExecute(Task task, FieldCapabilitiesRequest request, final ActionListener<FieldCapabilitiesResponse> listener) {\n+        // retrieve the initial timestamp in case the action is a cross cluster search\n         long nowInMillis = request.nowInMillis() == null ? System.currentTimeMillis() : request.nowInMillis();\n         final ClusterState clusterState = clusterService.state();\n         final Map<String, OriginalIndices> remoteClusterIndices = remoteClusterService.groupIndices(request.indicesOptions(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0NjgzMg==", "url": "https://github.com/elastic/elasticsearch/pull/57276#discussion_r432346832", "bodyText": "Saying \"replica\" confused me because it made me think that we might check multiple copies of the same shard in some cases, while the below logic suggests that we just check one copy for every shard until we find one that matches. Should this comment say \"shard\" instead of \"replica\" in this comment?", "author": "jpountz", "createdAt": "2020-05-29T08:52:29Z", "path": "server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java", "diffHunk": "@@ -117,16 +151,160 @@ protected FieldCapabilitiesIndexResponse shardOperation(final FieldCapabilitiesI\n                 }\n             }\n         }\n-        return new FieldCapabilitiesIndexResponse(shardId.getIndexName(), responseMap);\n+        return new FieldCapabilitiesIndexResponse(request.index(), responseMap, true);\n     }\n \n-    @Override\n-    protected Writeable.Reader<FieldCapabilitiesIndexResponse> getResponseReader() {\n-        return FieldCapabilitiesIndexResponse::new;\n+    private boolean canMatchShard(FieldCapabilitiesIndexRequest req) throws IOException {\n+        if (req.indexFilter() == null || req.indexFilter() instanceof MatchAllQueryBuilder) {\n+            return true;\n+        }\n+        assert req.nowInMillis() != 0L;\n+        ShardSearchRequest searchRequest = new ShardSearchRequest(req.shardId(), req.nowInMillis(), AliasFilter.EMPTY);\n+        searchRequest.source(new SearchSourceBuilder().query(req.indexFilter()));\n+        return searchService.canMatch(searchRequest).canMatch();\n     }\n \n-    @Override\n-    protected ClusterBlockException checkRequestBlock(ClusterState state, InternalRequest request) {\n-        return state.blocks().indexBlockedException(ClusterBlockLevel.METADATA_READ, request.concreteIndex());\n+    private ClusterBlockException checkGlobalBlock(ClusterState state) {\n+        return state.blocks().globalBlockedException(ClusterBlockLevel.READ);\n+    }\n+\n+    private ClusterBlockException checkRequestBlock(ClusterState state, String concreteIndex) {\n+        return state.blocks().indexBlockedException(ClusterBlockLevel.READ, concreteIndex);\n+    }\n+\n+    /**\n+     * An action that executes on each shard until it finds a replica that can match the provided", "originalCommit": "f15106e246be8e3b201ea39082c8c56f75ceea30", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM3ODk2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57276#discussion_r432378966", "bodyText": "++, I pushed fb3007c", "author": "jimczi", "createdAt": "2020-05-29T09:52:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0NjgzMg=="}], "type": "inlineReview", "revised_code": {"commit": "fb3007c0832b7a5eb604e76978fb0047d70ecd61", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java\nindex c444cf1401b..e7661c4219f 100644\n--- a/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java\n+++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java\n\n@@ -173,8 +173,8 @@ public class TransportFieldCapabilitiesIndexAction\n     }\n \n     /**\n-     * An action that executes on each shard until it finds a replica that can match the provided\n-     * {@link FieldCapabilitiesIndexRequest#indexFilter()}. In which case the replica is used\n+     * An action that executes on each shard sequentially until it finds one that can match the provided\n+     * {@link FieldCapabilitiesIndexRequest#indexFilter()}. In which case the shard is used\n      * to create the final {@link FieldCapabilitiesIndexResponse}.\n      */\n     class AsyncShardsAction {\n"}}, {"oid": "fb3007c0832b7a5eb604e76978fb0047d70ecd61", "url": "https://github.com/elastic/elasticsearch/commit/fb3007c0832b7a5eb604e76978fb0047d70ecd61", "message": "address review", "committedDate": "2020-05-29T09:49:36Z", "type": "commit"}, {"oid": "178eeff60651094b3fbe05a7bca2db769c46fd63", "url": "https://github.com/elastic/elasticsearch/commit/178eeff60651094b3fbe05a7bca2db769c46fd63", "message": "Merge branch 'master' into field_caps_index_filter", "committedDate": "2020-05-29T09:50:07Z", "type": "commit"}, {"oid": "6a4b34f3ae2334fbe2ae6a53fc02d40f421aac97", "url": "https://github.com/elastic/elasticsearch/commit/6a4b34f3ae2334fbe2ae6a53fc02d40f421aac97", "message": "fix wrong comment", "committedDate": "2020-05-29T10:24:12Z", "type": "commit"}, {"oid": "47020ee3ea922f5ce13bf798af8f0324e3176749", "url": "https://github.com/elastic/elasticsearch/commit/47020ee3ea922f5ce13bf798af8f0324e3176749", "message": "fix yml test take 2", "committedDate": "2020-05-29T12:00:10Z", "type": "commit"}, {"oid": "7c123ea95ccfb074e6fcbeb68050f82fed7a9699", "url": "https://github.com/elastic/elasticsearch/commit/7c123ea95ccfb074e6fcbeb68050f82fed7a9699", "message": "_routing => routing", "committedDate": "2020-05-29T14:15:02Z", "type": "commit"}, {"oid": "1c576cfde7abc3d1638f5c364b50c7e899210bac", "url": "https://github.com/elastic/elasticsearch/commit/1c576cfde7abc3d1638f5c364b50c7e899210bac", "message": "Merge branch 'master' into field_caps_index_filter", "committedDate": "2020-06-03T07:43:30Z", "type": "commit"}, {"oid": "5adce4e73c3f8c7515f002db74ea26ad39964192", "url": "https://github.com/elastic/elasticsearch/commit/5adce4e73c3f8c7515f002db74ea26ad39964192", "message": "address review", "committedDate": "2020-06-03T07:44:32Z", "type": "commit"}]}