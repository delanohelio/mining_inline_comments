{"pr_number": 61093, "pr_title": "Use native Gradle support for --release flag", "pr_createdAt": "2020-08-13T13:16:52Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61093", "timeline": [{"oid": "b3f9b29f1ecfdfcd5d10744d314c587ceb468e9c", "url": "https://github.com/elastic/elasticsearch/commit/b3f9b29f1ecfdfcd5d10744d314c587ceb468e9c", "message": "Use native Gradle support for --release flag\n\n- With Gradle 6.6 we can use the native support for the --release compile options", "committedDate": "2020-08-13T13:16:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEzOTUzMA==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470139530", "bodyText": "Should we use a Provider here so we an avoid any future issues of configuration ordering if individual modules override target compatibility version?", "author": "mark-vieira", "createdAt": "2020-08-13T17:52:10Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -173,21 +173,14 @@ public static void configureCompile(Project project) {\n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n \n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n                 final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileOptions.getRelease().set(Integer.parseInt(targetCompatibilityVersion.getMajorVersion()));", "originalCommit": "b3f9b29f1ecfdfcd5d10744d314c587ceb468e9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE4MzI3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470183277", "bodyText": "strictly speaking not required as this is done in an afterEvaluate block, BUT it brings use closer to getting rid of that   afterEvaluate . On it.", "author": "breskeby", "createdAt": "2020-08-13T19:05:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEzOTUzMA=="}], "type": "inlineReview", "revised_code": {"commit": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java\nindex c9281fb5cd7..86526ec1fb2 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java\n\n@@ -172,19 +163,26 @@ public class ElasticsearchJavaPlugin implements Plugin<Project> {\n \n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n-\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compileOptions.getRelease().set(Integer.parseInt(targetCompatibilityVersion.getMajorVersion()));\n+                compileTask.getConventionMapping().map(\"sourceCompatibility\", () -> java.getSourceCompatibility().toString());\n+                compileTask.getConventionMapping().map(\"targetCompatibility\", () -> java.getTargetCompatibility().toString());\n+                compileOptions.getRelease().set(releaseVersionProviderFromCompileTask(project, compileTask));\n             });\n             // also apply release flag to groovy, which is used in build-tools\n             project.getTasks().withType(GroovyCompile.class).configureEach(compileTask -> {\n                 // TODO: this probably shouldn't apply to groovy at all?\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compileTask.getOptions().getRelease().set(Integer.parseInt(targetCompatibilityVersion.getMajorVersion()));\n+                compileTask.setSourceCompatibility(compileTask.getSourceCompatibility());\n+                compileTask.getOptions().getRelease().set(releaseVersionProviderFromCompileTask(project, compileTask));\n             });\n         });\n     }\n \n+    private static Provider<Integer> releaseVersionProviderFromCompileTask(Project project, AbstractCompile compileTask) {\n+        return project.provider(() -> {\n+            JavaVersion javaVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n+            return Integer.parseInt(javaVersion.getMajorVersion());\n+        });\n+    }\n+\n     /**\n      * Apply runtime classpath input normalization so that changes in JAR manifests don't break build cacheability\n      */\n"}}, {"oid": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47", "url": "https://github.com/elastic/elasticsearch/commit/4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47", "message": "Add test coverage for release flag handling\n\n- use provider api", "committedDate": "2020-08-13T20:33:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMTk4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470231987", "bodyText": "just removed unused code", "author": "breskeby", "createdAt": "2020-08-13T20:35:10Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -140,14 +139,6 @@ public static void configureCompile(Project project) {\n         java.setSourceCompatibility(BuildParams.getMinimumRuntimeVersion());\n         java.setTargetCompatibility(BuildParams.getMinimumRuntimeVersion());\n \n-        Function<File, String> canonicalPath = file -> {\n-            try {\n-                return file.getCanonicalPath();\n-            } catch (IOException e) {\n-                throw new GradleException(\"Failed to get canonical path for \" + file, e);\n-            }\n-        };\n-", "originalCommit": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMjIwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470232205", "bodyText": "TODO: discuss workaround and fix for the need with gradle core team", "author": "breskeby", "createdAt": "2020-08-13T20:35:35Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -172,26 +163,26 @@ public static void configureCompile(Project project) {\n \n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n-\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileTask.getConventionMapping().map(\"sourceCompatibility\", () -> java.getSourceCompatibility().toString());", "originalCommit": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ2Nzg4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470467887", "bodyText": "raised this issue in the gradle slack channel: https://gradle-community.slack.com/archives/CA7UM03V3/p1597391556271600", "author": "breskeby", "createdAt": "2020-08-14T07:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMjIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUxNTI5MA==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470515290", "bodyText": "gradle/gradle#14141", "author": "breskeby", "createdAt": "2020-08-14T09:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMjIwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "cd0ce06b08e1245b8387011d1c3ef67043f2dba5", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java\nindex 86526ec1fb2..a4a89aa9f25 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java\n\n@@ -170,7 +170,6 @@ public class ElasticsearchJavaPlugin implements Plugin<Project> {\n             // also apply release flag to groovy, which is used in build-tools\n             project.getTasks().withType(GroovyCompile.class).configureEach(compileTask -> {\n                 // TODO: this probably shouldn't apply to groovy at all?\n-                compileTask.setSourceCompatibility(compileTask.getSourceCompatibility());\n                 compileTask.getOptions().getRelease().set(releaseVersionProviderFromCompileTask(project, compileTask));\n             });\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMzMwMw==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470233303", "bodyText": "TODO: the only left reason for this afterEvaluate is that compileOptions.get/setArguments(...) is not using the provider api. Discuss this and maybe raise a ticket at gradle core.", "author": "breskeby", "createdAt": "2020-08-13T20:37:36Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -140,14 +139,6 @@ public static void configureCompile(Project project) {\n         java.setSourceCompatibility(BuildParams.getMinimumRuntimeVersion());\n         java.setTargetCompatibility(BuildParams.getMinimumRuntimeVersion());\n \n-        Function<File, String> canonicalPath = file -> {\n-            try {\n-                return file.getCanonicalPath();\n-            } catch (IOException e) {\n-                throw new GradleException(\"Failed to get canonical path for \" + file, e);\n-            }\n-        };\n-\n         project.afterEvaluate(p -> {", "originalCommit": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ2OTI1MA==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470469250", "bodyText": "no concrete plans from the gradle core team except \"Before the heat death of the universe, yes.\"", "author": "breskeby", "createdAt": "2020-08-14T07:56:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzMzMwMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "cd0ce06b08e1245b8387011d1c3ef67043f2dba5", "url": "https://github.com/elastic/elasticsearch/commit/cd0ce06b08e1245b8387011d1c3ef67043f2dba5", "message": "Minor cleanup", "committedDate": "2020-08-13T20:38:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzNDAyNw==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470234027", "bodyText": "What is this line doing exactly? Are we just overriding the default convention mapping?", "author": "mark-vieira", "createdAt": "2020-08-13T20:39:05Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java", "diffHunk": "@@ -172,26 +163,26 @@ public static void configureCompile(Project project) {\n \n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n-\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n-\n+                compileTask.getConventionMapping().map(\"sourceCompatibility\", () -> java.getSourceCompatibility().toString());\n+                compileTask.getConventionMapping().map(\"targetCompatibility\", () -> java.getTargetCompatibility().toString());\n+                compileOptions.getRelease().set(releaseVersionProviderFromCompileTask(project, compileTask));\n             });\n             // also apply release flag to groovy, which is used in build-tools\n             project.getTasks().withType(GroovyCompile.class).configureEach(compileTask -> {\n-\n                 // TODO: this probably shouldn't apply to groovy at all?\n-                // TODO: use native Gradle support for --release when available (cf. https://github.com/gradle/gradle/issues/2510)\n-                final JavaVersion targetCompatibilityVersion = JavaVersion.toVersion(compileTask.getTargetCompatibility());\n-                final List<String> compilerArgs = compileTask.getOptions().getCompilerArgs();\n-                compilerArgs.add(\"--release\");\n-                compilerArgs.add(targetCompatibilityVersion.getMajorVersion());\n+                compileTask.setSourceCompatibility(compileTask.getSourceCompatibility());", "originalCommit": "4bbb01ea8616e3bc7e50c770d21b3a6e0b02dc47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzNTE2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/61093#discussion_r470235166", "bodyText": "oversight. already removed. The --release value is only taken for JavaCompile tasks", "author": "breskeby", "createdAt": "2020-08-13T20:41:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzNDAyNw=="}], "type": "inlineReview", "revised_code": {"commit": "c7858358c4fc511c31d5fa90ebb1a8427d53c2d5", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java\nindex 86526ec1fb2..fe74470aa7b 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchJavaPlugin.java\n\n@@ -163,6 +164,7 @@ public class ElasticsearchJavaPlugin implements Plugin<Project> {\n \n                 compileOptions.setEncoding(\"UTF-8\");\n                 compileOptions.setIncremental(true);\n+                // TODO Discuss this required workaround with the Gradle team\n                 compileTask.getConventionMapping().map(\"sourceCompatibility\", () -> java.getSourceCompatibility().toString());\n                 compileTask.getConventionMapping().map(\"targetCompatibility\", () -> java.getTargetCompatibility().toString());\n                 compileOptions.getRelease().set(releaseVersionProviderFromCompileTask(project, compileTask));\n"}}, {"oid": "c7858358c4fc511c31d5fa90ebb1a8427d53c2d5", "url": "https://github.com/elastic/elasticsearch/commit/c7858358c4fc511c31d5fa90ebb1a8427d53c2d5", "message": "Add todo comments", "committedDate": "2020-08-13T20:40:07Z", "type": "commit"}, {"oid": "f48e1f601939b548cb04d1d8d928ab4fcb0863e2", "url": "https://github.com/elastic/elasticsearch/commit/f48e1f601939b548cb04d1d8d928ab4fcb0863e2", "message": "Fix formatting", "committedDate": "2020-08-13T20:59:10Z", "type": "commit"}, {"oid": "08fcda928d94138d5fe1a0eb48822e0846e9b228", "url": "https://github.com/elastic/elasticsearch/commit/08fcda928d94138d5fe1a0eb48822e0846e9b228", "message": "Update comment with gradle bug reference", "committedDate": "2020-08-14T09:27:10Z", "type": "commit"}, {"oid": "73e2655b717769f9232f3fe697c1b9fcb70a23f5", "url": "https://github.com/elastic/elasticsearch/commit/73e2655b717769f9232f3fe697c1b9fcb70a23f5", "message": "Fix imports", "committedDate": "2020-08-14T12:39:47Z", "type": "commit"}]}