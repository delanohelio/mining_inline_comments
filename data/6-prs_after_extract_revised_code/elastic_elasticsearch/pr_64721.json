{"pr_number": 64721, "pr_title": "Ignore media ranges when parsing", "pr_createdAt": "2020-11-06T14:56:50Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64721", "timeline": [{"oid": "15898630785fc5654c50c2fbff6ede5dfdbc1a24", "url": "https://github.com/elastic/elasticsearch/commit/15898630785fc5654c50c2fbff6ede5dfdbc1a24", "message": "Ignore media ranges when parsing\n\nBrowsers are sending media ranges with quality factors on Accept header.\nWe should ignore the value and responde with applicaiton/json\n\ncloses #64689\nrelates #51816", "committedDate": "2020-11-06T14:54:59Z", "type": "commit"}, {"oid": "6e0a96217632f4a21cbf72d863b603a5ad0edf99", "url": "https://github.com/elastic/elasticsearch/commit/6e0a96217632f4a21cbf72d863b603a5ad0edf99", "message": "Merge remote-tracking branch 'upstream/master' into compat/ignore_media_ranges", "committedDate": "2020-11-06T14:58:46Z", "type": "commit"}, {"oid": "d3dba4790078ebe0aa53ef0e40442dcac357980c", "url": "https://github.com/elastic/elasticsearch/commit/d3dba4790078ebe0aa53ef0e40442dcac357980c", "message": "remove unused const", "committedDate": "2020-11-06T15:14:57Z", "type": "commit"}, {"oid": "86fa70dd48aebc57cc2136d2474ad9109b888986", "url": "https://github.com/elastic/elasticsearch/commit/86fa70dd48aebc57cc2136d2474ad9109b888986", "message": "nullcheck", "committedDate": "2020-11-06T16:02:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MzQ1OA==", "url": "https://github.com/elastic/elasticsearch/pull/64721#discussion_r518893458", "bodyText": "I think this should be moved down to and checked against elements[0] instead of the whole headerValue. A parameter could have a comma. Probably not..but slightly more correct.", "author": "jakelandis", "createdAt": "2020-11-06T17:20:42Z", "path": "libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ParsedMediaType.java", "diffHunk": "@@ -63,18 +58,19 @@ public String mediaTypeWithoutParameters() {\n \n     /**\n      * Parses a header value into it's parts.\n-     * follows https://tools.ietf.org/html/rfc7231#section-3.1.1.1 but allows only single media type and do not support quality factors\n+     * follows https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n+     * but allows only single media type. Media ranges will be ignored (treated as not provided)\n      * Note: parsing can return null, but it will throw exceptions once https://github.com/elastic/elasticsearch/issues/63080 is done\n-     * Do not rely on nulls\n+     * TODO Do not rely on nulls\n      *\n      * @return a {@link ParsedMediaType} if the header could be parsed.\n      * @throws IllegalArgumentException if the header is malformed\n      */\n     public static ParsedMediaType parseMediaType(String headerValue) {\n-        if (DEFAULT_ACCEPT_STRING.equals(headerValue) || \"*/*\".equals(headerValue)) {\n-            return null;\n-        }\n         if (headerValue != null) {\n+            if (isMediaRange(headerValue) || \"*/*\".equals(headerValue)) {\n+                return null;\n+            }", "originalCommit": "86fa70dd48aebc57cc2136d2474ad9109b888986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkxOTk3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64721#discussion_r518919971", "bodyText": "If we check for element[0] we could not check against something like text/HTML;q=0, application/json\nMedia range is a coma separated list where each media type can have a list of parameters after semicolon .\nComma (delimiters at all) are not allowed within media type name or parameters", "author": "pgomulka", "createdAt": "2020-11-06T18:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MzQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk4NDAxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/64721#discussion_r518984019", "bodyText": "OK ..that makes sense. sorry for the noise.\nhowever...minor clarification your values for the parameters may be quoted which can contain any ASCII char   accept-extension = \";\" token [ \"=\" ( token | quoted-string ) ] however, this is very unlikely to encounter a comma there", "author": "jakelandis", "createdAt": "2020-11-06T20:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MzQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYxNTU3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64721#discussion_r519615573", "bodyText": "ah.. you are totally right. I did not look into quoted string part. Indeed this can contain a comma.\nAnd CVS could be a media type that would like to have it.\nwe don't support that at the moment, but at some point I think it would make sense that we do.", "author": "pgomulka", "createdAt": "2020-11-09T08:02:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MzQ1OA=="}], "type": "inlineReview", "revised_code": null}]}