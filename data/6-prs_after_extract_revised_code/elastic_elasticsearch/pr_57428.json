{"pr_number": 57428, "pr_title": "SQL: Implement TOP as an alternative to LIMIT", "pr_createdAt": "2020-06-01T14:43:50Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57428", "timeline": [{"oid": "8936653316afeeedd4f30bbec6415e77144c80fc", "url": "https://github.com/elastic/elasticsearch/commit/8936653316afeeedd4f30bbec6415e77144c80fc", "message": "SQL: Implement TOP as an alternative to LIMIT\n\nAdd basic support for `TOP X` as a synonym to LIMIT X which is used\nby [MS-SQL server](https://docs.microsoft.com/en-us/sql/t-sql/queries/top-transact-sql?view=sql-server-ver15),\ne.g.:\n\n```\nSELECT TOP 5 a, b, c FROM test\n```\n\nTOP in SQL server also supports the `PERCENTAGE` amd `WITH TIES`\nkeywords which this implementation doesn't.\n\nDon't allow usage of both TOP and LIMIT in the same query.\n\nRefers to #41195", "committedDate": "2020-06-01T14:42:30Z", "type": "commit"}, {"oid": "64a40539bfa2d78c1b356384c43fb941dd873aa6", "url": "https://github.com/elastic/elasticsearch/commit/64a40539bfa2d78c1b356384c43fb941dd873aa6", "message": "update docs", "committedDate": "2020-06-01T15:18:07Z", "type": "commit"}, {"oid": "4563cf8beb4b18fb7171bd6402c0388ad2d19e44", "url": "https://github.com/elastic/elasticsearch/commit/4563cf8beb4b18fb7171bd6402c0388ad2d19e44", "message": "fix tests", "committedDate": "2020-06-01T16:12:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM1NTMxMw==", "url": "https://github.com/elastic/elasticsearch/pull/57428#discussion_r433355313", "bodyText": "I'd prefer calling the method simply limit - it's not really wrapping but instead adding a new node to the tree.", "author": "costin", "createdAt": "2020-06-01T16:42:03Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java", "diffHunk": "@@ -243,4 +258,8 @@ public LogicalPlan visitTableName(TableNameContext ctx) {\n         TableIdentifier tableIdentifier = visitTableIdentifier(ctx.tableIdentifier());\n         return new UnresolvedRelation(source(ctx), tableIdentifier, alias, ctx.FROZEN() != null);\n     }\n+\n+    private Limit wrapWithLimit(LogicalPlan plan, Source source, Token limit) {", "originalCommit": "4563cf8beb4b18fb7171bd6402c0388ad2d19e44", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15e739f5ffc00d0aa377b794e16ca699034ab490", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\nindex d1fc4372777..66ff17b2ff5 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\n\n@@ -259,7 +256,7 @@ abstract class LogicalPlanBuilder extends ExpressionBuilder {\n         return new UnresolvedRelation(source(ctx), tableIdentifier, alias, ctx.FROZEN() != null);\n     }\n \n-    private Limit wrapWithLimit(LogicalPlan plan, Source source, Token limit) {\n+    private Limit limit(LogicalPlan plan, Source source, Token limit) {\n         return new Limit(source, new Literal(source, Integer.parseInt(limit.getText()), DataTypes.INTEGER), plan);\n     }\n }\n"}}, {"oid": "15e739f5ffc00d0aa377b794e16ca699034ab490", "url": "https://github.com/elastic/elasticsearch/commit/15e739f5ffc00d0aa377b794e16ca699034ab490", "message": "address feedback", "committedDate": "2020-06-01T17:20:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5OTY5NA==", "url": "https://github.com/elastic/elasticsearch/pull/57428#discussion_r433399694", "bodyText": "Why not combining all three conditions in the same if?  More readable this way?", "author": "astefan", "createdAt": "2020-06-01T18:05:30Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java", "diffHunk": "@@ -155,6 +158,15 @@ else if (!selectTarget.isEmpty()) {\n         if (ctx.setQuantifier() != null && ctx.setQuantifier().DISTINCT() != null) {\n             query = new Distinct(source(ctx.setQuantifier()), query);\n         }\n+\n+        // TOP\n+        SqlBaseParser.TopClauseContext topClauseContext = ctx.topClause();\n+        if (topClauseContext != null) {", "originalCommit": "15e739f5ffc00d0aa377b794e16ca699034ab490", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ce1f5a86e4b4cf8d980a47ac98adb94293e0fe2a", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\nindex 66ff17b2ff5..ecef484005f 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\n\n@@ -161,10 +162,8 @@ abstract class LogicalPlanBuilder extends ExpressionBuilder {\n \n         // TOP\n         SqlBaseParser.TopClauseContext topClauseContext = ctx.topClause();\n-        if (topClauseContext != null) {\n-            if (topClauseContext.top != null && topClauseContext.INTEGER_VALUE() != null) {\n-                query = limit(query, source(topClauseContext), topClauseContext.top);\n-            }\n+        if (topClauseContext != null && topClauseContext.top != null && topClauseContext.INTEGER_VALUE() != null) {\n+            query = limit(query, source(topClauseContext), topClauseContext.top);\n         }\n \n         return query;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQxMjk3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57428#discussion_r433412972", "bodyText": "I would rephrase the error a bit - TOP and LIMIT are not allowed in the same query - use one or the other.", "author": "costin", "createdAt": "2020-06-01T18:31:07Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java", "diffHunk": "@@ -105,8 +105,11 @@ public LogicalPlan visitQueryNoWith(QueryNoWithContext ctx) {\n         if (limitClause != null) {\n             Token limit = limitClause.limit;\n             if (limit != null && limitClause.INTEGER_VALUE() != null) {\n-                plan = new Limit(source(limitClause), new Literal(source(limitClause),\n-                        Integer.parseInt(limit.getText()), DataTypes.INTEGER), plan);\n+                if (plan instanceof Limit) {\n+                    throw new ParsingException(source(limitClause), \"Cannot use both TOP and LIMIT in the same query\");", "originalCommit": "15e739f5ffc00d0aa377b794e16ca699034ab490", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ce1f5a86e4b4cf8d980a47ac98adb94293e0fe2a", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\nindex 66ff17b2ff5..ecef484005f 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\n\n@@ -106,7 +106,8 @@ abstract class LogicalPlanBuilder extends ExpressionBuilder {\n             Token limit = limitClause.limit;\n             if (limit != null && limitClause.INTEGER_VALUE() != null) {\n                 if (plan instanceof Limit) {\n-                    throw new ParsingException(source(limitClause), \"Cannot use both TOP and LIMIT in the same query\");\n+                    throw new ParsingException(source(limitClause),\n+                        \"TOP and LIMIT are not allowed in the same query - use one or the other\");\n                 } else {\n                     plan = limit(plan, source(limitClause), limit);\n                 }\n"}}, {"oid": "ce1f5a86e4b4cf8d980a47ac98adb94293e0fe2a", "url": "https://github.com/elastic/elasticsearch/commit/ce1f5a86e4b4cf8d980a47ac98adb94293e0fe2a", "message": "address comments", "committedDate": "2020-06-01T18:38:11Z", "type": "commit"}]}