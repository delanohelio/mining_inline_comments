{"pr_number": 59591, "pr_title": "[Transform] add support for missing bucket", "pr_createdAt": "2020-07-15T08:36:56Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59591", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM0MjcwMg==", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r459342702", "bodyText": "Is this enforced anywhere in the config parsing?\nAnd do the randomTransformConfig methods in the tests enforce this?  I guess if they choose completely random field names for each section of the config then it's highly unlikely the time field in the sync config would randomly be the same as the time field for the date histogram.  So maybe this problem can be ignored.", "author": "droberts195", "createdAt": "2020-07-23T10:04:06Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/CompositeBucketsChangeCollector.java", "diffHunk": "@@ -175,7 +227,10 @@ public boolean collectChanges(Collection<? extends Bucket> buckets) {\n \n         @Override\n         public QueryBuilder filterByChanges(long lastCheckpointTimestamp, long nextcheckpointTimestamp) {\n+\n             if (isSynchronizationField && lastCheckpointTimestamp > 0) {\n+                // missing bucket can't be enabled as it would be an illegal combination", "originalCommit": "fc3d3f9920409666e8b4d28b679c7788726c1c07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3Mzg3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r459373877", "bodyText": "good spot!\nI should instead disable the isSynchronizationField optimization on line 214 in case missingBucket == true:\nthis.isSynchronizationField = isSynchronizationField && (missingBucket == false);", "author": "hendrikmuhs", "createdAt": "2020-07-23T11:10:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM0MjcwMg=="}], "type": "inlineReview", "revised_code": {"commit": "7a4b5315a89888014f0ac5ee044fe3aee9fbfb57", "chunk": "diff --git a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/CompositeBucketsChangeCollector.java b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/CompositeBucketsChangeCollector.java\nindex 9aec06e7fb3..09cb528e0f4 100644\n--- a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/CompositeBucketsChangeCollector.java\n+++ b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/CompositeBucketsChangeCollector.java\n\n@@ -228,8 +244,7 @@ public class CompositeBucketsChangeCollector implements ChangeCollector {\n         @Override\n         public QueryBuilder filterByChanges(long lastCheckpointTimestamp, long nextcheckpointTimestamp) {\n \n-            if (isSynchronizationField && lastCheckpointTimestamp > 0) {\n-                // missing bucket can't be enabled as it would be an illegal combination\n+            if (applyOptimizationForSyncField && lastCheckpointTimestamp > 0) {\n                 assert missingBucket == false;\n                 return new RangeQueryBuilder(sourceFieldName).gte(rounding.round(lastCheckpointTimestamp)).format(\"epoch_millis\");\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUyOTE4MA==", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r461529180", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        + \"this transform might run slow, please check your configuration.\",\n          \n          \n            \n                                        + \"this transform might run slowly, please check your configuration.\",", "author": "benwtrent", "createdAt": "2020-07-28T12:08:10Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -347,6 +347,21 @@ protected void initializeFunction() {\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n+\n+            if (changeCollector.isOptimized() == false) {\n+                logger.warn(\n+                    new ParameterizedMessage(\n+                        \"[{}] could not find any optimizations for continuous execution, \"\n+                            + \"this transform might run slow, please check your configuration.\",", "originalCommit": "2d71db41306a660215b4fec9e661ac648c7d84d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "224728b4529d9b2224f393c11ead8c9d4a813af9", "chunk": "diff --git a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\nindex 79e60fa9813..64b083328ba 100644\n--- a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n+++ b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n\n@@ -347,21 +347,6 @@ public abstract class TransformIndexer extends AsyncTwoPhaseIndexer<TransformInd\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n-\n-            if (changeCollector.isOptimized() == false) {\n-                logger.warn(\n-                    new ParameterizedMessage(\n-                        \"[{}] could not find any optimizations for continuous execution, \"\n-                            + \"this transform might run slow, please check your configuration.\",\n-                        getJobId()\n-                    )\n-                );\n-                auditor.warning(\n-                    getJobId(),\n-                    \"could not find any optimizations for continuous execution, \"\n-                        + \"this transform might run slow, please check your configuration.\"\n-                );\n-            }\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUyOTMwNw==", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r461529307", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    + \"this transform might run slow, please check your configuration.\"\n          \n          \n            \n                                    + \"this transform might run slowly, please check your configuration.\"", "author": "benwtrent", "createdAt": "2020-07-28T12:08:22Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -347,6 +347,21 @@ protected void initializeFunction() {\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n+\n+            if (changeCollector.isOptimized() == false) {\n+                logger.warn(\n+                    new ParameterizedMessage(\n+                        \"[{}] could not find any optimizations for continuous execution, \"\n+                            + \"this transform might run slow, please check your configuration.\",\n+                        getJobId()\n+                    )\n+                );\n+                auditor.warning(\n+                    getJobId(),\n+                    \"could not find any optimizations for continuous execution, \"\n+                        + \"this transform might run slow, please check your configuration.\"", "originalCommit": "2d71db41306a660215b4fec9e661ac648c7d84d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "224728b4529d9b2224f393c11ead8c9d4a813af9", "chunk": "diff --git a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\nindex 79e60fa9813..64b083328ba 100644\n--- a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n+++ b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n\n@@ -347,21 +347,6 @@ public abstract class TransformIndexer extends AsyncTwoPhaseIndexer<TransformInd\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n-\n-            if (changeCollector.isOptimized() == false) {\n-                logger.warn(\n-                    new ParameterizedMessage(\n-                        \"[{}] could not find any optimizations for continuous execution, \"\n-                            + \"this transform might run slow, please check your configuration.\",\n-                        getJobId()\n-                    )\n-                );\n-                auditor.warning(\n-                    getJobId(),\n-                    \"could not find any optimizations for continuous execution, \"\n-                        + \"this transform might run slow, please check your configuration.\"\n-                );\n-            }\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUyOTc0MA==", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r461529740", "bodyText": "It would be nice to say which pivot values are causing the the optimization to be false. Each collector could respond with a reason.", "author": "benwtrent", "createdAt": "2020-07-28T12:09:16Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -347,6 +347,21 @@ protected void initializeFunction() {\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n+\n+            if (changeCollector.isOptimized() == false) {\n+                logger.warn(\n+                    new ParameterizedMessage(\n+                        \"[{}] could not find any optimizations for continuous execution, \"\n+                            + \"this transform might run slow, please check your configuration.\",\n+                        getJobId()\n+                    )\n+                );\n+                auditor.warning(", "originalCommit": "2d71db41306a660215b4fec9e661ac648c7d84d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExNzc0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/59591#discussion_r462117741", "bodyText": "created #60364 to follow up on this", "author": "hendrikmuhs", "createdAt": "2020-07-29T08:10:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUyOTc0MA=="}], "type": "inlineReview", "revised_code": {"commit": "224728b4529d9b2224f393c11ead8c9d4a813af9", "chunk": "diff --git a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\nindex 79e60fa9813..64b083328ba 100644\n--- a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n+++ b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n\n@@ -347,21 +347,6 @@ public abstract class TransformIndexer extends AsyncTwoPhaseIndexer<TransformInd\n \n         if (isContinuous()) {\n             changeCollector = function.buildChangeCollector(getConfig().getSyncConfig().getField());\n-\n-            if (changeCollector.isOptimized() == false) {\n-                logger.warn(\n-                    new ParameterizedMessage(\n-                        \"[{}] could not find any optimizations for continuous execution, \"\n-                            + \"this transform might run slow, please check your configuration.\",\n-                        getJobId()\n-                    )\n-                );\n-                auditor.warning(\n-                    getJobId(),\n-                    \"could not find any optimizations for continuous execution, \"\n-                        + \"this transform might run slow, please check your configuration.\"\n-                );\n-            }\n         }\n     }\n \n"}}, {"oid": "224728b4529d9b2224f393c11ead8c9d4a813af9", "url": "https://github.com/elastic/elasticsearch/commit/224728b4529d9b2224f393c11ead8c9d4a813af9", "message": "add parser support for missing bucket", "committedDate": "2020-07-29T08:20:47Z", "type": "commit"}, {"oid": "76d91ebf9a2981bb691c83a46a36e464bb04b10d", "url": "https://github.com/elastic/elasticsearch/commit/76d91ebf9a2981bb691c83a46a36e464bb04b10d", "message": "checkstyle", "committedDate": "2020-07-29T08:20:47Z", "type": "commit"}, {"oid": "f5f87c9af11e7907d29d315f0ebfb6967018c9ca", "url": "https://github.com/elastic/elasticsearch/commit/f5f87c9af11e7907d29d315f0ebfb6967018c9ca", "message": "fix tests", "committedDate": "2020-07-29T08:20:47Z", "type": "commit"}, {"oid": "23e9f1ed997b2e89189752651c8b99f949ac36dd", "url": "https://github.com/elastic/elasticsearch/commit/23e9f1ed997b2e89189752651c8b99f949ac36dd", "message": "add a test for missing_bucket + progress", "committedDate": "2020-07-29T08:20:47Z", "type": "commit"}, {"oid": "12b6728f6b00348972c19c09bf608c8e15351623", "url": "https://github.com/elastic/elasticsearch/commit/12b6728f6b00348972c19c09bf608c8e15351623", "message": "rename variable", "committedDate": "2020-07-29T08:20:47Z", "type": "commit"}, {"oid": "a06e41383da475d14e430b718ca5ef0cd5339d4d", "url": "https://github.com/elastic/elasticsearch/commit/a06e41383da475d14e430b718ca5ef0cd5339d4d", "message": "test explicit value in continuous transform test", "committedDate": "2020-07-29T08:20:47Z", "type": "commit"}, {"oid": "eda805b0820ef109b12456ad566aa8bfab76156c", "url": "https://github.com/elastic/elasticsearch/commit/eda805b0820ef109b12456ad566aa8bfab76156c", "message": "expand tests for missing bucket", "committedDate": "2020-07-29T08:20:47Z", "type": "commit"}, {"oid": "67489cd6fd56113e0030957646dae0e2871d20fe", "url": "https://github.com/elastic/elasticsearch/commit/67489cd6fd56113e0030957646dae0e2871d20fe", "message": "re-factor createReviewsIndex", "committedDate": "2020-07-29T08:20:47Z", "type": "commit"}, {"oid": "7a4b5315a89888014f0ac5ee044fe3aee9fbfb57", "url": "https://github.com/elastic/elasticsearch/commit/7a4b5315a89888014f0ac5ee044fe3aee9fbfb57", "message": "add a performance warning if transform in continuous mode could not be optimized", "committedDate": "2020-07-29T08:21:20Z", "type": "commit"}, {"oid": "a3475127fb4ef6af66a85b0ff3948927b8d38514", "url": "https://github.com/elastic/elasticsearch/commit/a3475127fb4ef6af66a85b0ff3948927b8d38514", "message": "checkstyle", "committedDate": "2020-07-29T08:21:20Z", "type": "commit"}, {"oid": "95c7ac2322438e0f5dc22fe3396b44d95b97f2ac", "url": "https://github.com/elastic/elasticsearch/commit/95c7ac2322438e0f5dc22fe3396b44d95b97f2ac", "message": "Update x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n\nCo-authored-by: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-07-29T08:21:20Z", "type": "commit"}, {"oid": "c288bb72bfab33dde149717da435b3c05ba75c01", "url": "https://github.com/elastic/elasticsearch/commit/c288bb72bfab33dde149717da435b3c05ba75c01", "message": "Update x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n\nCo-authored-by: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-07-29T08:21:20Z", "type": "commit"}, {"oid": "c288bb72bfab33dde149717da435b3c05ba75c01", "url": "https://github.com/elastic/elasticsearch/commit/c288bb72bfab33dde149717da435b3c05ba75c01", "message": "Update x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java\n\nCo-authored-by: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-07-29T08:21:20Z", "type": "forcePushed"}]}