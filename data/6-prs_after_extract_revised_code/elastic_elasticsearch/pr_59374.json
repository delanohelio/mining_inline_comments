{"pr_number": 59374, "pr_title": "Remove Snapshot INIT Step (#55918)", "pr_createdAt": "2020-07-12T21:36:05Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59374", "timeline": [{"oid": "480199df158de7e7e28cf955e6bcdd86f7c91cde", "url": "https://github.com/elastic/elasticsearch/commit/480199df158de7e7e28cf955e6bcdd86f7c91cde", "message": "Remove Snapshot INIT Step (#55918)\n\nWith #55773 the snapshot INIT state step has become obsolete. We can set up the snapshot directly in one single step to simplify the state machine.\n\nThis is a big help for building concurrent snapshots because it allows us to establish a deterministic order of operations between snapshot create and delete operations since all of their entries now contain a repository generation. With this change simple queuing up of snapshot operations can and will be added in a follow-up.", "committedDate": "2020-07-12T21:35:22Z", "type": "commit"}, {"oid": "81e2b9bfebe037b3cb055cb383c6d5a2d8621f33", "url": "https://github.com/elastic/elasticsearch/commit/81e2b9bfebe037b3cb055cb383c6d5a2d8621f33", "message": "backport missing piece", "committedDate": "2020-07-13T08:37:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwNTEyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453505129", "bodyText": "This and the other *Legacy method rename (and the way they're selectively called from the transport action) is the only real difference between this commit and the original one that went into master. I realize that it is a little dirty to just duplicate everything and keep the old path code unchanged but IMO this is the easiest way to bring in the remaining snapshot back-ports cleanly.", "author": "original-brownbear", "createdAt": "2020-07-13T09:08:32Z", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -173,11 +173,13 @@ public SnapshotsService(Settings settings, ClusterService clusterService, IndexN\n     /**\n      * Same as {@link #createSnapshot(CreateSnapshotRequest, ActionListener)} but invokes its callback on completion of\n      * the snapshot.\n+     * Note: This method is only used in clusters that contain a node older than {@link #NO_REPO_INITIALIZE_VERSION} to ensure a backwards\n+     * compatible path for initializing the snapshot in the repository is executed.\n      *\n      * @param request snapshot request\n      * @param listener snapshot completion listener\n      */\n-    public void executeSnapshot(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n+    public void executeSnapshotLegacy(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {", "originalCommit": "81e2b9bfebe037b3cb055cb383c6d5a2d8621f33", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7135972ff6bada81d0ca047570c1022b3b9f3f84", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java b/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java\nindex a689981a8f7..42191a09eee 100644\n--- a/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java\n+++ b/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java\n\n@@ -180,7 +180,7 @@ public class SnapshotsService extends AbstractLifecycleComponent implements Clus\n      * @param listener snapshot completion listener\n      */\n     public void executeSnapshotLegacy(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n-        createSnapshot(request,\n+        createSnapshotLegacy(request,\n             ActionListener.wrap(snapshot -> addListener(snapshot, ActionListener.map(listener, Tuple::v2)), listener::onFailure));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyOTM2MA==", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453529360", "bodyText": "Should this be createSnapshotLegacy?\nIs this covered by testing?", "author": "ywelsch", "createdAt": "2020-07-13T09:47:56Z", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java", "diffHunk": "@@ -173,11 +173,13 @@ public SnapshotsService(Settings settings, ClusterService clusterService, IndexN\n     /**\n      * Same as {@link #createSnapshot(CreateSnapshotRequest, ActionListener)} but invokes its callback on completion of\n      * the snapshot.\n+     * Note: This method is only used in clusters that contain a node older than {@link #NO_REPO_INITIALIZE_VERSION} to ensure a backwards\n+     * compatible path for initializing the snapshot in the repository is executed.\n      *\n      * @param request snapshot request\n      * @param listener snapshot completion listener\n      */\n-    public void executeSnapshot(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n+    public void executeSnapshotLegacy(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n         createSnapshot(request,", "originalCommit": "81e2b9bfebe037b3cb055cb383c6d5a2d8621f33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU1MjkwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453552909", "bodyText": "This is covered by mixed cluster tests yes. createSnapshotLegacy is already taken for the non-blocking path, I just figured I'd stick with the naming from the original methods for both here.", "author": "original-brownbear", "createdAt": "2020-07-13T10:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyOTM2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU2NTc5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453565791", "bodyText": "I'm confused. Why is the executeSnapshotLegacy method not delegating to createSnapshotLegacy?", "author": "ywelsch", "createdAt": "2020-07-13T10:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyOTM2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3MTMyNA==", "url": "https://github.com/elastic/elasticsearch/pull/59374#discussion_r453571324", "bodyText": "\ud83e\udd26 ok now I get it. Sorry. Sadly we don't have a test that would've caught the issue from this mistake and I don't see an easy way to add one. What we'd need is a BwC disruption test where we fail over from new version to old version master while the snapshot is in progress. I'm starting to think we should have that but I don't see a quick way of setting this up since all the BwC tests are rest tests right now and we don't have any way of using the mock repository with those.\n=> Just fixed it for now.", "author": "original-brownbear", "createdAt": "2020-07-13T11:04:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyOTM2MA=="}], "type": "inlineReview", "revised_code": {"commit": "7135972ff6bada81d0ca047570c1022b3b9f3f84", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java b/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java\nindex a689981a8f7..42191a09eee 100644\n--- a/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java\n+++ b/server/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java\n\n@@ -180,7 +180,7 @@ public class SnapshotsService extends AbstractLifecycleComponent implements Clus\n      * @param listener snapshot completion listener\n      */\n     public void executeSnapshotLegacy(final CreateSnapshotRequest request, final ActionListener<SnapshotInfo> listener) {\n-        createSnapshot(request,\n+        createSnapshotLegacy(request,\n             ActionListener.wrap(snapshot -> addListener(snapshot, ActionListener.map(listener, Tuple::v2)), listener::onFailure));\n     }\n \n"}}, {"oid": "7135972ff6bada81d0ca047570c1022b3b9f3f84", "url": "https://github.com/elastic/elasticsearch/commit/7135972ff6bada81d0ca047570c1022b3b9f3f84", "message": "CR: facepalm", "committedDate": "2020-07-13T11:02:17Z", "type": "commit"}]}