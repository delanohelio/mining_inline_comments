{"pr_number": 55342, "pr_title": "Add explicit generation member to data streams", "pr_createdAt": "2020-04-16T19:04:46Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55342", "timeline": [{"oid": "06a58ba709daf634db84b1b5515e087989648ab2", "url": "https://github.com/elastic/elasticsearch/commit/06a58ba709daf634db84b1b5515e087989648ab2", "message": "add generation member, derive current write index from generation, DRY backing index naming logic", "committedDate": "2020-04-16T19:00:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5MDc2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/55342#discussion_r409790767", "bodyText": "maybe statically import getBackingIndexName(...) for readability?", "author": "martijnvg", "createdAt": "2020-04-16T19:16:23Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java", "diffHunk": "@@ -264,12 +264,15 @@ private boolean isNonEmpty(List<IndexMetadata> idxMetas) {\n         private final List<IndexMetadata> dataStreamIndices;\n         private final IndexMetadata writeIndex;\n \n-        public DataStream(org.elasticsearch.cluster.metadata.DataStream dataStream,\n-                          List<IndexMetadata> dataStreamIndices, IndexMetadata writeIndex) {\n+        public DataStream(org.elasticsearch.cluster.metadata.DataStream dataStream, List<IndexMetadata> dataStreamIndices) {\n             this.dataStream = dataStream;\n             this.dataStreamIndices = List.copyOf(dataStreamIndices);\n-            this.writeIndex = writeIndex;\n-            assert dataStreamIndices.contains(writeIndex);\n+            this.writeIndex =  dataStreamIndices.stream()\n+                .filter(index -> index.getIndex().getName().equals(\n+                    org.elasticsearch.cluster.metadata.DataStream.getBackingIndexName(dataStream.getName(), dataStream.getGeneration())))", "originalCommit": "06a58ba709daf634db84b1b5515e087989648ab2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4e8958a48e2b89ec4b0d0c7a18ecd0f108e9fe6d", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java\nindex cde7e005e2b..a10a6fc4d27 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexAbstraction.java\n\n@@ -268,8 +269,7 @@ public interface IndexAbstraction {\n             this.dataStream = dataStream;\n             this.dataStreamIndices = List.copyOf(dataStreamIndices);\n             this.writeIndex =  dataStreamIndices.stream()\n-                .filter(index -> index.getIndex().getName().equals(\n-                    org.elasticsearch.cluster.metadata.DataStream.getBackingIndexName(dataStream.getName(), dataStream.getGeneration())))\n+                .filter(index -> index.getIndex().getName().equals(getBackingIndexName(dataStream.getName(), dataStream.getGeneration())))\n                 .findFirst()\n                 .orElse(null);\n             assert writeIndex != null;\n"}}, {"oid": "4e8958a48e2b89ec4b0d0c7a18ecd0f108e9fe6d", "url": "https://github.com/elastic/elasticsearch/commit/4e8958a48e2b89ec4b0d0c7a18ecd0f108e9fe6d", "message": "static import", "committedDate": "2020-04-16T19:24:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAwMzk4MA==", "url": "https://github.com/elastic/elasticsearch/pull/55342#discussion_r410003980", "bodyText": "I wonder if we should simply keep this (and the IndexAbstraction.DataStream constructor) as it was, except to add an assertion that the generation we have should match the name of the last index in the list. I think we want that to hold true anyway?", "author": "henningandersen", "createdAt": "2020-04-17T05:44:45Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -1384,7 +1384,7 @@ public Metadata build() {\n \n                     IndexMetadata writeIndex = backingIndices.get(backingIndices.size() - 1);", "originalCommit": "4e8958a48e2b89ec4b0d0c7a18ecd0f108e9fe6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1NjcwMw==", "url": "https://github.com/elastic/elasticsearch/pull/55342#discussion_r410156703", "bodyText": "I agree that the backing index list should have a defined order and that we can simplify the validation that the generation matches the last name in the list.\nIf you're also suggesting that we keep the separate writeIndex parameter on the IndexAbstraction.DataStream constructor, I don't see why that would continue to be necessary since the value for the writeIndex parameter would always be backingIndices.get(backingIndices.size() - 1)?", "author": "danhermann", "createdAt": "2020-04-17T11:15:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAwMzk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE2MjM3MA==", "url": "https://github.com/elastic/elasticsearch/pull/55342#discussion_r410162370", "bodyText": "Ah yes, you are right, we do not need to keep that.", "author": "henningandersen", "createdAt": "2020-04-17T11:28:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAwMzk4MA=="}], "type": "inlineReview", "revised_code": {"commit": "6590f7c2dc58f9c68228266fac67ddb010638f64", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java b/server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java\nindex 8bab2520f46..1dab1cc05fe 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java\n\n@@ -1382,7 +1382,6 @@ public class Metadata implements Iterable<IndexMetadata>, Diffable<Metadata>, To\n                     assert backingIndices.isEmpty() == false;\n                     assert backingIndices.contains(null) == false;\n \n-                    IndexMetadata writeIndex = backingIndices.get(backingIndices.size() - 1);\n                     IndexAbstraction existing = indicesLookup.put(dataStream.getName(),\n                         new IndexAbstraction.DataStream(dataStream, backingIndices));\n                     if (existing != null) {\n"}}, {"oid": "6590f7c2dc58f9c68228266fac67ddb010638f64", "url": "https://github.com/elastic/elasticsearch/commit/6590f7c2dc58f9c68228266fac67ddb010638f64", "message": "review comments", "committedDate": "2020-04-17T11:43:28Z", "type": "commit"}, {"oid": "a3fd9576cb186bb141f8afe84c97397998453b46", "url": "https://github.com/elastic/elasticsearch/commit/a3fd9576cb186bb141f8afe84c97397998453b46", "message": "fix tests", "committedDate": "2020-04-17T12:50:01Z", "type": "commit"}]}