{"pr_number": 60465, "pr_title": "Format support for script doc fields", "pr_createdAt": "2020-07-30T15:26:06Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60465", "timeline": [{"oid": "1ef23c6f94690e546370dac7d7f38fd33a54f103", "url": "https://github.com/elastic/elasticsearch/commit/1ef23c6f94690e546370dac7d7f38fd33a54f103", "message": "format support for script doc fields\n\nAdds `format` and `locale` support to `runtime_script` fields,\nspecifically those with the `runtime_type` of `date`. Others\n`runtime_type`s will return an error if provided with those parameters.", "committedDate": "2020-07-30T15:22:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NDUxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/60465#discussion_r463464519", "bodyText": "nit: I think that looking at this error message, there is a slight change that it makes users think that the specific value they provided for the format parameter is not supported, more than providing any format. same for locale. Maybe we can rephrase it?", "author": "javanna", "createdAt": "2020-07-31T08:03:02Z", "path": "x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeScriptFieldMapperTests.java", "diffHunk": "@@ -145,6 +148,51 @@ public void testDate() throws IOException {\n         assertEquals(Strings.toString(mapping(\"date\")), Strings.toString(mapperService.documentMapper()));\n     }\n \n+    public void testDateWithFormat() throws IOException {\n+        CheckedSupplier<XContentBuilder, IOException> mapping = () -> mapping(\"date\", b -> b.field(\"format\", \"yyyy-MM-dd\"));\n+        MapperService mapperService = createIndex(\"test\", Settings.EMPTY, mapping.get()).mapperService();\n+        FieldMapper mapper = (FieldMapper) mapperService.documentMapper().mappers().getMapper(\"field\");\n+        assertThat(mapper, instanceOf(RuntimeScriptFieldMapper.class));\n+        assertEquals(Strings.toString(mapping.get()), Strings.toString(mapperService.documentMapper()));\n+    }\n+\n+    public void testDateWithLocale() throws IOException {\n+        CheckedSupplier<XContentBuilder, IOException> mapping = () -> mapping(\"date\", b -> b.field(\"locale\", \"en_GB\"));\n+        MapperService mapperService = createIndex(\"test\", Settings.EMPTY, mapping.get()).mapperService();\n+        FieldMapper mapper = (FieldMapper) mapperService.documentMapper().mappers().getMapper(\"field\");\n+        assertThat(mapper, instanceOf(RuntimeScriptFieldMapper.class));\n+        assertEquals(Strings.toString(mapping.get()), Strings.toString(mapperService.documentMapper()));\n+    }\n+\n+    public void testDateWithLocaleAndFormat() throws IOException {\n+        CheckedSupplier<XContentBuilder, IOException> mapping = () -> mapping(\n+            \"date\",\n+            b -> b.field(\"format\", \"yyyy-MM-dd\").field(\"locale\", \"en_GB\")\n+        );\n+        MapperService mapperService = createIndex(\"test\", Settings.EMPTY, mapping.get()).mapperService();\n+        FieldMapper mapper = (FieldMapper) mapperService.documentMapper().mappers().getMapper(\"field\");\n+        assertThat(mapper, instanceOf(RuntimeScriptFieldMapper.class));\n+        assertEquals(Strings.toString(mapping.get()), Strings.toString(mapperService.documentMapper()));\n+    }\n+\n+    public void testNonDateWithFormat() throws IOException {\n+        String runtimeType = randomValueOtherThan(\"date\", () -> randomFrom(runtimeTypes));\n+        Exception e = expectThrows(\n+            MapperParsingException.class,\n+            () -> createIndex(\"test\", Settings.EMPTY, mapping(runtimeType, b -> b.field(\"format\", \"yyyy-MM-dd\")))\n+        );\n+        assertThat(e.getMessage(), equalTo(\"Failed to parse mapping: format not supported by runtime_type [\" + runtimeType + \"]\"));", "originalCommit": "1ef23c6f94690e546370dac7d7f38fd33a54f103", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b1c02f6b189cc60a771c6b184e4199b169718107", "chunk": "diff --git a/x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeScriptFieldMapperTests.java b/x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeScriptFieldMapperTests.java\nindex 7527c0ebc9f..3782d7b6384 100644\n--- a/x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeScriptFieldMapperTests.java\n+++ b/x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/RuntimeScriptFieldMapperTests.java\n\n@@ -181,7 +181,7 @@ public class RuntimeScriptFieldMapperTests extends ESSingleNodeTestCase {\n             MapperParsingException.class,\n             () -> createIndex(\"test\", Settings.EMPTY, mapping(runtimeType, b -> b.field(\"format\", \"yyyy-MM-dd\")))\n         );\n-        assertThat(e.getMessage(), equalTo(\"Failed to parse mapping: format not supported by runtime_type [\" + runtimeType + \"]\"));\n+        assertThat(e.getMessage(), equalTo(\"Failed to parse mapping: format can not be specified for runtime_type [\" + runtimeType + \"]\"));\n     }\n \n     public void testNonDateWithLocale() throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NDk1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/60465#discussion_r463464957", "bodyText": "would it make sense to have some duel tests between concrete dates and runtime dates to make sure that formatting and locale are applied the same way?", "author": "javanna", "createdAt": "2020-07-31T08:04:02Z", "path": "x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/mapper/ScriptDateMappedFieldTypeTests.java", "diffHunk": "@@ -373,4 +430,9 @@ private void checkExpensiveQuery(BiConsumer<ScriptDateMappedFieldType, QueryShar\n             equalTo(\"queries cannot be executed against [runtime_script] fields while [search.allow_expensive_queries] is set to [false].\")\n         );\n     }\n+\n+    private void checkBadDate(ThrowingRunnable queryBuilder) {\n+        Exception e = expectThrows(ElasticsearchParseException.class, queryBuilder);\n+        assertThat(e.getMessage(), containsString(\"failed to parse date field\"));\n+    }", "originalCommit": "1ef23c6f94690e546370dac7d7f38fd33a54f103", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcxMDI5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/60465#discussion_r463710292", "bodyText": "Yeah!", "author": "nik9000", "createdAt": "2020-07-31T16:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NDk1Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "b1c02f6b189cc60a771c6b184e4199b169718107", "url": "https://github.com/elastic/elasticsearch/commit/b1c02f6b189cc60a771c6b184e4199b169718107", "message": "Change error message", "committedDate": "2020-07-31T17:14:01Z", "type": "commit"}, {"oid": "8f40cb446bf1e6c51e552c8f002b85073508af68", "url": "https://github.com/elastic/elasticsearch/commit/8f40cb446bf1e6c51e552c8f002b85073508af68", "message": "Add duel tests", "committedDate": "2020-07-31T17:31:18Z", "type": "commit"}]}