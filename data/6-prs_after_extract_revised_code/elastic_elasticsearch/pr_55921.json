{"pr_number": 55921, "pr_title": "[ML] fix auto-upgrade service so that it runs when indices are available", "pr_createdAt": "2020-04-29T11:04:28Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55921", "timeline": [{"oid": "1cb8eb2e0595a93ec35a939201f671a147e0438d", "url": "https://github.com/elastic/elasticsearch/commit/1cb8eb2e0595a93ec35a939201f671a147e0438d", "message": "[ML] fix auto-upgrade service so that it runs when indices are available", "committedDate": "2020-04-29T11:01:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3ODE1MA==", "url": "https://github.com/elastic/elasticsearch/pull/55921#discussion_r417478150", "bodyText": "Should we do this after we check for completed or currently_updating actions? Those isAbleToRun checks will be more expensive.", "author": "dimitris-athanasiou", "createdAt": "2020-04-29T17:13:41Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlAutoUpdateService.java", "diffHunk": "@@ -42,13 +45,17 @@ public MlAutoUpdateService(ThreadPool threadPool, List<UpdateAction> updateActio\n \n     @Override\n     public void clusterChanged(ClusterChangedEvent event) {\n+        if (event.state().blocks().hasGlobalBlock(GatewayService.STATE_NOT_RECOVERED_BLOCK)) {\n+            return;\n+        }\n         if (event.localNodeMaster() == false) {\n             return;\n         }\n \n         Version minNodeVersion = event.state().getNodes().getMinNodeVersion();\n         final List<UpdateAction> toRun = updateActions.stream()\n             .filter(action -> action.isMinNodeVersionSupported(minNodeVersion))\n+            .filter(action -> action.isAbleToRun(event.state()))", "originalCommit": "1cb8eb2e0595a93ec35a939201f671a147e0438d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4MzE1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/55921#discussion_r417483153", "bodyText": "Definitely, let me fix the filter ordering.", "author": "benwtrent", "createdAt": "2020-04-29T17:21:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3ODE1MA=="}], "type": "inlineReview", "revised_code": {"commit": "b8ce88ef4fb6e65f565a2f27e80f9367e05f0d58", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlAutoUpdateService.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlAutoUpdateService.java\nindex 359d26a6b1d..b4eaa78bd98 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlAutoUpdateService.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/MlAutoUpdateService.java\n\n@@ -54,17 +54,20 @@ public class MlAutoUpdateService implements ClusterStateListener {\n \n         Version minNodeVersion = event.state().getNodes().getMinNodeVersion();\n         final List<UpdateAction> toRun = updateActions.stream()\n-            .filter(action -> action.isMinNodeVersionSupported(minNodeVersion))\n-            .filter(action -> action.isAbleToRun(event.state()))\n             .filter(action -> completedUpdates.contains(action.getName()) == false)\n+            .filter(action -> action.isMinNodeVersionSupported(minNodeVersion))\n             .filter(action -> currentlyUpdating.add(action.getName()))\n             .collect(Collectors.toList());\n         threadPool.executor(MachineLearning.UTILITY_THREAD_POOL_NAME).execute(\n-            () -> toRun.forEach(this::runUpdate)\n+            () -> toRun.forEach(action -> runUpdate(action, event.state()))\n         );\n     }\n \n-    private void runUpdate(UpdateAction action) {\n+    private void runUpdate(UpdateAction action, ClusterState state) {\n+        if (action.isAbleToRun(state) == false) {\n+            this.currentlyUpdating.remove(action.getName());\n+            return;\n+        }\n         try {\n             logger.debug(() -> new ParameterizedMessage(\"[{}] starting executing update action\", action.getName()));\n             action.runUpdate();\n"}}, {"oid": "b8ce88ef4fb6e65f565a2f27e80f9367e05f0d58", "url": "https://github.com/elastic/elasticsearch/commit/b8ce88ef4fb6e65f565a2f27e80f9367e05f0d58", "message": "moving isAbleToRun check to utility thread pool;", "committedDate": "2020-04-29T17:28:31Z", "type": "commit"}, {"oid": "5a48a5cab90bbd8bf1dadff2beda8c6d2c90388d", "url": "https://github.com/elastic/elasticsearch/commit/5a48a5cab90bbd8bf1dadff2beda8c6d2c90388d", "message": "Revert \"moving isAbleToRun check to utility thread pool;\"\n\nThis reverts commit b8ce88ef4fb6e65f565a2f27e80f9367e05f0d58.", "committedDate": "2020-04-29T18:36:57Z", "type": "commit"}, {"oid": "6f45b709f7be57252f1bf23dbf7ca9d83dbc958a", "url": "https://github.com/elastic/elasticsearch/commit/6f45b709f7be57252f1bf23dbf7ca9d83dbc958a", "message": "fixing isAbleToRun to be after already ran check", "committedDate": "2020-04-29T18:37:28Z", "type": "commit"}]}