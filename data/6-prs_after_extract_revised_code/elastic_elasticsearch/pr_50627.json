{"pr_number": 50627, "pr_title": "Clean up wire test case a bit", "pr_createdAt": "2020-01-03T21:27:25Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50627", "timeline": [{"oid": "9270ac76839cc14e8bf478b98cc4077d1bd965a2", "url": "https://github.com/elastic/elasticsearch/commit/9270ac76839cc14e8bf478b98cc4077d1bd965a2", "message": "Clean up wire test case a bit\n\n* Adds JavaDoc to `AbstractWireTestCase` and\n`AbstractWireSerializingTestCase` so it is more obvious you should prefer\nthe latter if you have a choice\n* Moves the `instanceReader` method out of `AbstractWireTestCase` becaue\nit is no longer used.\n* Marks a bunch of methods final so it is more obvious which classes are\nfor what.\n* Cleans up the side effects of the above.", "committedDate": "2020-01-03T21:36:51Z", "type": "commit"}, {"oid": "9270ac76839cc14e8bf478b98cc4077d1bd965a2", "url": "https://github.com/elastic/elasticsearch/commit/9270ac76839cc14e8bf478b98cc4077d1bd965a2", "message": "Clean up wire test case a bit\n\n* Adds JavaDoc to `AbstractWireTestCase` and\n`AbstractWireSerializingTestCase` so it is more obvious you should prefer\nthe latter if you have a choice\n* Moves the `instanceReader` method out of `AbstractWireTestCase` becaue\nit is no longer used.\n* Marks a bunch of methods final so it is more obvious which classes are\nfor what.\n* Cleans up the side effects of the above.", "committedDate": "2020-01-03T21:36:51Z", "type": "forcePushed"}, {"oid": "02cf58668186464dd8bd16cc389989ed25d0bb6e", "url": "https://github.com/elastic/elasticsearch/commit/02cf58668186464dd8bd16cc389989ed25d0bb6e", "message": "Checkstyle", "committedDate": "2020-01-03T22:00:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3NzYyOA==", "url": "https://github.com/elastic/elasticsearch/pull/50627#discussion_r362977628", "bodyText": "is there a reason why AbstractWireSerializingTestCase is not preferred? from a bystander's point of view, I see ListCursor is Writeable", "author": "talevy", "createdAt": "2020-01-03T22:08:58Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/session/ListCursorTests.java", "diffHunk": "@@ -7,15 +7,14 @@\n \n import org.elasticsearch.Version;\n import org.elasticsearch.common.io.stream.NamedWriteableRegistry;\n-import org.elasticsearch.common.io.stream.Writeable.Reader;\n-import org.elasticsearch.test.AbstractWireSerializingTestCase;\n+import org.elasticsearch.test.AbstractWireTestCase;\n \n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n-public class ListCursorTests extends AbstractWireSerializingTestCase<ListCursor> {\n+public class ListCursorTests extends AbstractWireTestCase<ListCursor> {", "originalCommit": "02cf58668186464dd8bd16cc389989ed25d0bb6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3ODQwNg==", "url": "https://github.com/elastic/elasticsearch/pull/50627#discussion_r362978406", "bodyText": "This is the one time that we override how the copying is done. I made that method final to make it more clear what is going on. This is the one case of collateral damage.", "author": "nik9000", "createdAt": "2020-01-03T22:12:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3NzYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3ODg3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/50627#discussion_r362978875", "bodyText": "++", "author": "talevy", "createdAt": "2020-01-03T22:14:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3NzYyOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3Nzc3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/50627#discussion_r362977775", "bodyText": "Is Geometry the only user of this?", "author": "talevy", "createdAt": "2020-01-03T22:09:29Z", "path": "test/framework/src/main/java/org/elasticsearch/test/AbstractWireTestCase.java", "diffHunk": "@@ -27,6 +27,10 @@\n import java.io.IOException;\n import java.util.Collections;\n \n+/**", "originalCommit": "02cf58668186464dd8bd16cc389989ed25d0bb6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3ODY5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/50627#discussion_r362978699", "bodyText": "SQL also uses it.", "author": "nik9000", "createdAt": "2020-01-03T22:13:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3Nzc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3ODk4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/50627#discussion_r362978989", "bodyText": "right, I suppose the previous comment answers that. guess its surface area is small, but provides enough utility! thanks", "author": "talevy", "createdAt": "2020-01-03T22:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3Nzc3NQ=="}], "type": "inlineReview", "revised_code": null}]}