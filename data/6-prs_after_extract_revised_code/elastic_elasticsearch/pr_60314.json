{"pr_number": 60314, "pr_title": "[ML] Remove unnecessary version constraints", "pr_createdAt": "2020-07-28T16:24:46Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60314", "timeline": [{"oid": "5a214ad3a5f6e4d84170cf3d80779fb1a605f718", "url": "https://github.com/elastic/elasticsearch/commit/5a214ad3a5f6e4d84170cf3d80779fb1a605f718", "message": "[ML] Remove unnecessary version constraints\n\nRemove checks on version numbers from the serialisation code that are no longer necessary in the 8.0.0 branch", "committedDate": "2020-07-28T16:15:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcxNTIyNg==", "url": "https://github.com/elastic/elasticsearch/pull/60314#discussion_r461715226", "bodyText": "For this file it is probably worth leaving the BWC code in master for a bit longer.  It's very complex and would be a nasty shock for someone seeing it for the first time on a backport to 7.x.", "author": "droberts195", "createdAt": "2020-07-28T16:30:29Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetDataFrameAnalyticsStatsAction.java", "diffHunk": "@@ -193,26 +192,13 @@ public Stats(StreamInput in) throws IOException {\n                 id = in.readString();\n                 state = DataFrameAnalyticsState.fromStream(in);\n                 failureReason = in.readOptionalString();\n-                if (in.getVersion().before(Version.V_7_4_0)) {\n-                    progress = readProgressFromLegacy(state, in);", "originalCommit": "5a214ad3a5f6e4d84170cf3d80779fb1a605f718", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4c04f7e0e8a654ca47ba7064b12fc5143eca5a9", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetDataFrameAnalyticsStatsAction.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetDataFrameAnalyticsStatsAction.java\nindex b293afa4cc0..d3a941994d3 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetDataFrameAnalyticsStatsAction.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/GetDataFrameAnalyticsStatsAction.java\n\n@@ -192,13 +193,26 @@ public class GetDataFrameAnalyticsStatsAction extends ActionType<GetDataFrameAna\n                 id = in.readString();\n                 state = DataFrameAnalyticsState.fromStream(in);\n                 failureReason = in.readOptionalString();\n-\n-                progress = in.readList(PhaseProgress::new);\n-\n-                dataCounts = new DataCounts(in);\n-                memoryUsage = new MemoryUsage(in);\n-                analysisStats = in.readOptionalNamedWriteable(AnalysisStats.class);\n-\n+                if (in.getVersion().before(Version.V_7_4_0)) {\n+                    progress = readProgressFromLegacy(state, in);\n+                } else {\n+                    progress = in.readList(PhaseProgress::new);\n+                }\n+                if (in.getVersion().onOrAfter(Version.V_7_7_0)) {\n+                    dataCounts = new DataCounts(in);\n+                } else {\n+                    dataCounts = null;\n+                }\n+                if (in.getVersion().onOrAfter(Version.V_7_7_0)) {\n+                    memoryUsage = new MemoryUsage(in);\n+                } else {\n+                    memoryUsage = null;\n+                }\n+                if (in.getVersion().onOrAfter(Version.V_7_7_0)) {\n+                    analysisStats = in.readOptionalNamedWriteable(AnalysisStats.class);\n+                } else {\n+                    analysisStats = null;\n+                }\n                 node = in.readOptionalWriteable(DiscoveryNode::new);\n                 assignmentExplanation = in.readOptionalString();\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyMTAzNg==", "url": "https://github.com/elastic/elasticsearch/pull/60314#discussion_r461721036", "bodyText": "As above, this is very complex and it would be useful for anyone changing it on the master branch to be aware the complexity exists in 7.x.  So it's probably best to leave this file untouched until closer to 8.0 feature freeze too.", "author": "droberts195", "createdAt": "2020-07-28T16:40:04Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/InternalInferModelAction.java", "diffHunk": "@@ -72,18 +67,7 @@ public Request(StreamInput in) throws IOException {\n             super(in);\n             this.modelId = in.readString();\n             this.objectsToInfer = Collections.unmodifiableList(in.readList(StreamInput::readMap));\n-            if (in.getVersion().onOrAfter(Version.V_7_8_0)) {\n-                this.update = in.readNamedWriteable(InferenceConfigUpdate.class);\n-            } else {\n-                InferenceConfig oldConfig = in.readNamedWriteable(InferenceConfig.class);\n-                if (oldConfig instanceof RegressionConfig) {\n-                    this.update = RegressionConfigUpdate.fromConfig((RegressionConfig)oldConfig);\n-                } else if (oldConfig instanceof ClassificationConfig) {\n-                    this.update = ClassificationConfigUpdate.fromConfig((ClassificationConfig) oldConfig);\n-                } else {\n-                    throw new IOException(\"Unexpected configuration type [\" + oldConfig.getName() + \"]\");\n-                }\n-            }", "originalCommit": "5a214ad3a5f6e4d84170cf3d80779fb1a605f718", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4c04f7e0e8a654ca47ba7064b12fc5143eca5a9", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/InternalInferModelAction.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/InternalInferModelAction.java\nindex d60d2813762..abb6cfb06b1 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/InternalInferModelAction.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/InternalInferModelAction.java\n\n@@ -67,7 +72,18 @@ public class InternalInferModelAction extends ActionType<InternalInferModelActio\n             super(in);\n             this.modelId = in.readString();\n             this.objectsToInfer = Collections.unmodifiableList(in.readList(StreamInput::readMap));\n-            this.update = in.readNamedWriteable(InferenceConfigUpdate.class);\n+            if (in.getVersion().onOrAfter(Version.V_7_8_0)) {\n+                this.update = in.readNamedWriteable(InferenceConfigUpdate.class);\n+            } else {\n+                InferenceConfig oldConfig = in.readNamedWriteable(InferenceConfig.class);\n+                if (oldConfig instanceof RegressionConfig) {\n+                    this.update = RegressionConfigUpdate.fromConfig((RegressionConfig)oldConfig);\n+                } else if (oldConfig instanceof ClassificationConfig) {\n+                    this.update = ClassificationConfigUpdate.fromConfig((ClassificationConfig) oldConfig);\n+                } else {\n+                    throw new IOException(\"Unexpected configuration type [\" + oldConfig.getName() + \"]\");\n+                }\n+            }\n             this.previouslyLicensed = in.readBoolean();\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyMjk5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/60314#discussion_r461722996", "bodyText": "There's no need to have a separate local variable now.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    out.writeEnum(toWrite);\n          \n          \n            \n                    out.writeEnum(this);\n          \n      \n    \n    \n  \n\nplus delete the line DataFrameAnalyticsState toWrite = this;", "author": "droberts195", "createdAt": "2020-07-28T16:43:12Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsState.java", "diffHunk": "@@ -29,11 +28,7 @@ public static DataFrameAnalyticsState fromStream(StreamInput in) throws IOExcept\n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n         DataFrameAnalyticsState toWrite = this;\n-        if (out.getVersion().before(Version.V_7_5_0) && toWrite == STARTING) {\n-            // Before 7.5.0 there was no STARTING state and jobs for which\n-            // tasks existed but were unassigned were considered STOPPED\n-            toWrite = STOPPED;\n-        }\n+\n         out.writeEnum(toWrite);", "originalCommit": "5a214ad3a5f6e4d84170cf3d80779fb1a605f718", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4c04f7e0e8a654ca47ba7064b12fc5143eca5a9", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsState.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsState.java\nindex 110cac4b617..086b02ae9a8 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsState.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsState.java\n\n@@ -27,9 +27,7 @@ public enum DataFrameAnalyticsState implements Writeable {\n \n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n-        DataFrameAnalyticsState toWrite = this;\n-\n-        out.writeEnum(toWrite);\n+        out.writeEnum(this);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyOTE1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/60314#discussion_r461729156", "bodyText": "This needs to stay.  The 7.5 here is embedded in the config document, not the node version.  Unless we do something else 8.x will still have to cope with configs created in 7.5 and before.", "author": "droberts195", "createdAt": "2020-07-28T16:53:02Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsConfigTests.java", "diffHunk": "@@ -468,24 +451,6 @@ public void testToXContent_GivenAnalysisWithRandomizeSeedAndVersionIsCurrent() t\n         }\n     }\n \n-    public void testToXContent_GivenAnalysisWithRandomizeSeedAndVersionIsBeforeItWasIntroduced() throws IOException {", "originalCommit": "5a214ad3a5f6e4d84170cf3d80779fb1a605f718", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4c04f7e0e8a654ca47ba7064b12fc5143eca5a9", "chunk": "diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsConfigTests.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsConfigTests.java\nindex 82bf9652e3e..8068d03456b 100644\n--- a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsConfigTests.java\n+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/DataFrameAnalyticsConfigTests.java\n\n@@ -451,6 +468,24 @@ public class DataFrameAnalyticsConfigTests extends AbstractBWCSerializationTestC\n         }\n     }\n \n+    public void testToXContent_GivenAnalysisWithRandomizeSeedAndVersionIsBeforeItWasIntroduced() throws IOException {\n+        Regression regression = new Regression(\"foo\");\n+        assertThat(regression.getRandomizeSeed(), is(notNullValue()));\n+\n+        DataFrameAnalyticsConfig config = new DataFrameAnalyticsConfig.Builder()\n+            .setVersion(Version.V_7_5_0)\n+            .setId(\"test_config\")\n+            .setSource(new DataFrameAnalyticsSource(new String[] {\"source_index\"}, null, null))\n+            .setDest(new DataFrameAnalyticsDest(\"dest_index\", null))\n+            .setAnalysis(regression)\n+            .build();\n+\n+        try (XContentBuilder builder = JsonXContent.contentBuilder()) {\n+            config.toXContent(builder, ToXContent.EMPTY_PARAMS);\n+            String json = Strings.toString(builder);\n+            assertThat(json, not(containsString(\"randomize_seed\")));\n+        }\n+    }\n \n     public void testExtractJobIdFromDocId() {\n         assertThat(DataFrameAnalyticsConfig.extractJobIdFromDocId(\"data_frame_analytics_config-foo\"), equalTo(\"foo\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyOTg0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/60314#discussion_r461729841", "bodyText": "As with outlier detection, the version here is in the config, not the current node version, so this should stay.", "author": "droberts195", "createdAt": "2020-07-28T16:54:09Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/ClassificationTests.java", "diffHunk": "@@ -299,16 +299,6 @@ public void testGetExplicitlyMappedFields() {\n             equalTo(Collections.singletonMap(\"results.feature_importance\", MapUtils.featureImportanceMapping())));\n     }\n \n-    public void testToXContent_GivenVersionBeforeRandomizeSeedWasIntroduced() throws IOException {", "originalCommit": "5a214ad3a5f6e4d84170cf3d80779fb1a605f718", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4c04f7e0e8a654ca47ba7064b12fc5143eca5a9", "chunk": "diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/ClassificationTests.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/ClassificationTests.java\nindex 9e8e5cae00e..00a8ddf54d0 100644\n--- a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/ClassificationTests.java\n+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/ClassificationTests.java\n\n@@ -299,6 +299,16 @@ public class ClassificationTests extends AbstractBWCSerializationTestCase<Classi\n             equalTo(Collections.singletonMap(\"results.feature_importance\", MapUtils.featureImportanceMapping())));\n     }\n \n+    public void testToXContent_GivenVersionBeforeRandomizeSeedWasIntroduced() throws IOException {\n+        Classification classification = createRandom();\n+        assertThat(classification.getRandomizeSeed(), is(notNullValue()));\n+\n+        try (XContentBuilder builder = JsonXContent.contentBuilder()) {\n+            classification.toXContent(builder, new ToXContent.MapParams(Collections.singletonMap(\"version\", \"7.5.0\")));\n+            String json = Strings.toString(builder);\n+            assertThat(json, not(containsString(\"randomize_seed\")));\n+        }\n+    }\n \n     public void testToXContent_GivenVersionAfterRandomizeSeedWasIntroduced() throws IOException {\n         Classification classification = createRandom();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMDIxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/60314#discussion_r461730219", "bodyText": "As with outlier detection, the version here is in the config, not the current node version, so this should stay.", "author": "droberts195", "createdAt": "2020-07-28T16:54:50Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/RegressionTests.java", "diffHunk": "@@ -221,17 +221,6 @@ public void testExtractJobIdFromStateDoc() {\n         assertThat(Regression.extractJobIdFromStateDoc(\"noop\"), is(nullValue()));\n     }\n \n-    public void testToXContent_GivenVersionBeforeRandomizeSeedWasIntroduced() throws IOException {", "originalCommit": "5a214ad3a5f6e4d84170cf3d80779fb1a605f718", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4c04f7e0e8a654ca47ba7064b12fc5143eca5a9", "chunk": "diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/RegressionTests.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/RegressionTests.java\nindex 3c96c1af2e0..29820b883a7 100644\n--- a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/RegressionTests.java\n+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/analyses/RegressionTests.java\n\n@@ -221,6 +221,17 @@ public class RegressionTests extends AbstractBWCSerializationTestCase<Regression\n         assertThat(Regression.extractJobIdFromStateDoc(\"noop\"), is(nullValue()));\n     }\n \n+    public void testToXContent_GivenVersionBeforeRandomizeSeedWasIntroduced() throws IOException {\n+        Regression regression = createRandom();\n+        assertThat(regression.getRandomizeSeed(), is(notNullValue()));\n+\n+        try (XContentBuilder builder = JsonXContent.contentBuilder()) {\n+            regression.toXContent(builder, new ToXContent.MapParams(Collections.singletonMap(\"version\", \"7.5.0\")));\n+            String json = Strings.toString(builder);\n+            assertThat(json, not(containsString(\"randomize_seed\")));\n+        }\n+    }\n+\n     public void testToXContent_GivenVersionAfterRandomizeSeedWasIntroduced() throws IOException {\n         Regression regression = createRandom();\n         assertThat(regression.getRandomizeSeed(), is(notNullValue()));\n"}}, {"oid": "c4c04f7e0e8a654ca47ba7064b12fc5143eca5a9", "url": "https://github.com/elastic/elasticsearch/commit/c4c04f7e0e8a654ca47ba7064b12fc5143eca5a9", "message": "[ML] Attending to code review comments\n\nReverting the more complex changes as these are best dealt with after\n8.0.0 feature freeze.", "committedDate": "2020-07-30T13:42:25Z", "type": "commit"}, {"oid": "d37bacde7b2e7a29f8f39a774f26f846fb323a7e", "url": "https://github.com/elastic/elasticsearch/commit/d37bacde7b2e7a29f8f39a774f26f846fb323a7e", "message": "Merge branch 'master' of github.com:elasticsearch/elasticsearch into remove_version_constraints", "committedDate": "2020-07-30T13:49:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3MjcxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/60314#discussion_r463572719", "bodyText": "nit: a space has accidentally been removed from this line", "author": "droberts195", "createdAt": "2020-07-31T12:09:04Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobNodeSelector.java", "diffHunk": "@@ -82,10 +81,7 @@ public JobNodeSelector(ClusterState clusterState, String jobId, String taskName,\n \n     public PersistentTasksCustomMetadata.Assignment selectNode(int dynamicMaxOpenJobs, int maxConcurrentJobAllocations,\n                                                                int maxMachineMemoryPercent, boolean isMemoryTrackerRecentlyRefreshed) {\n-        // TODO: remove in 8.0.0\n-        boolean allNodesHaveDynamicMaxWorkers = clusterState.getNodes().getMinNodeVersion().onOrAfter(Version.V_7_2_0);\n-\n-        // Try to allocate jobs according to memory usage, but if that's not possible (maybe due to a mixed version cluster or maybe\n+       // Try to allocate jobs according to memory usage, but if that's not possible (maybe due to a mixed version cluster or maybe", "originalCommit": "d37bacde7b2e7a29f8f39a774f26f846fb323a7e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9e662a43c919eca0cb7e3a139d206d75b3681c22", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobNodeSelector.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobNodeSelector.java\nindex b4af1d89490..570168b328e 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobNodeSelector.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/JobNodeSelector.java\n\n@@ -81,7 +81,7 @@ public class JobNodeSelector {\n \n     public PersistentTasksCustomMetadata.Assignment selectNode(int dynamicMaxOpenJobs, int maxConcurrentJobAllocations,\n                                                                int maxMachineMemoryPercent, boolean isMemoryTrackerRecentlyRefreshed) {\n-       // Try to allocate jobs according to memory usage, but if that's not possible (maybe due to a mixed version cluster or maybe\n+        // Try to allocate jobs according to memory usage, but if that's not possible (maybe due to a mixed version cluster or maybe\n         // because of some weird OS problem) then fall back to the old mechanism of only considering numbers of assigned jobs\n         boolean allocateByMemory = isMemoryTrackerRecentlyRefreshed;\n         if (isMemoryTrackerRecentlyRefreshed == false) {\n"}}, {"oid": "9e662a43c919eca0cb7e3a139d206d75b3681c22", "url": "https://github.com/elastic/elasticsearch/commit/9e662a43c919eca0cb7e3a139d206d75b3681c22", "message": "[ML] Further review comments\n\nReinstating accidentally removed space", "committedDate": "2020-07-31T12:14:18Z", "type": "commit"}, {"oid": "62125afbf2088b2500184aa002864337c39b7df1", "url": "https://github.com/elastic/elasticsearch/commit/62125afbf2088b2500184aa002864337c39b7df1", "message": "Merge branch 'master' of github.com:elasticsearch/elasticsearch into remove_version_constraints", "committedDate": "2020-07-31T14:36:03Z", "type": "commit"}]}