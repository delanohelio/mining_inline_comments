{"pr_number": 62771, "pr_title": "Implement Shard Snapshot Clone Logic", "pr_createdAt": "2020-09-22T14:19:23Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62771", "timeline": [{"oid": "2b92e4ae3be9093ecc8f26cf6373bf82c9c2d726", "url": "https://github.com/elastic/elasticsearch/commit/2b92e4ae3be9093ecc8f26cf6373bf82c9c2d726", "message": "Implement Shard Snapshot Clone Logic\n\nFirst part of the snapshot clone logic that implements the snapshot clone functionality on\nthe repository level.", "committedDate": "2020-09-22T14:16:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc3NjY5NA==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r492776694", "bodyText": "This class is obviously not necessary here (aside from introducing the type for the API), it'll play a more central role in the state machine.", "author": "original-brownbear", "createdAt": "2020-09-22T14:24:04Z", "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryShardId.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.repositories;\n+\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a shard snapshot in a repository.\n+ */\n+public final class RepositoryShardId implements Writeable {", "originalCommit": "2b92e4ae3be9093ecc8f26cf6373bf82c9c2d726", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "62425bd4ccd701b958c7cb69e19dbdd9aef7f83d", "url": "https://github.com/elastic/elasticsearch/commit/62425bd4ccd701b958c7cb69e19dbdd9aef7f83d", "message": "Merge remote-tracking branch 'elastic/master' into clone-shard-logic", "committedDate": "2020-09-22T14:40:38Z", "type": "commit"}, {"oid": "3392d84a1832b4a7b17e77abb2b5db6a9dd3af25", "url": "https://github.com/elastic/elasticsearch/commit/3392d84a1832b4a7b17e77abb2b5db6a9dd3af25", "message": "Merge remote-tracking branch 'elastic/master' into clone-shard-logic", "committedDate": "2020-09-22T15:35:58Z", "type": "commit"}, {"oid": "3cc039d40df7c1358d113b79f8e10f97b6b0682d", "url": "https://github.com/elastic/elasticsearch/commit/3cc039d40df7c1358d113b79f8e10f97b6b0682d", "message": "Merge remote-tracking branch 'elastic/master' into clone-shard-logic", "committedDate": "2020-09-23T09:21:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0ODgzNw==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495748837", "bodyText": "Nit: maybe targetSnapshotName -> cloneSnapshotName ?", "author": "tlrx", "createdAt": "2020-09-28T07:47:07Z", "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "diffHunk": "@@ -386,6 +386,19 @@ public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<File\n         this.incrementalSize = incrementalSize;\n     }\n \n+    /**\n+     * Creates a new instance has a different name and zero incremental file counts but is identical to this instance in terms of the files\n+     * it references.\n+     *\n+     * @param targetSnapshotName target snapshot name\n+     * @param startTime          time the clone operation on the repository was started\n+     * @param time               time it took to create the clone\n+     */\n+    public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {", "originalCommit": "3cc039d40df7c1358d113b79f8e10f97b6b0682d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5MTY5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495791693", "bodyText": "Hmm :) Frankly I like \"target\" better, leaves less room for ambiguity. With \"clone\" it's never quite clear if it's the source or the target IMO since by definition \"clone\" is a somewhat symmetric thing?", "author": "original-brownbear", "createdAt": "2020-09-28T09:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0ODgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxMjIyMw==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495812223", "bodyText": "Sure - I said \"maybe\" :)", "author": "tlrx", "createdAt": "2020-09-28T09:38:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0ODgzNw=="}], "type": "inlineReview", "revised_code": {"commit": "37c18f87026e6ae038f170470f32f9955cc79d54", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java\nindex ce15600e5c1..497a3147c7c 100644\n--- a/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java\n+++ b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java\n\n@@ -395,8 +395,7 @@ public class BlobStoreIndexShardSnapshot implements ToXContentFragment {\n      * @param time               time it took to create the clone\n      */\n     public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {\n-        return new BlobStoreIndexShardSnapshot(\n-                targetSnapshotName, indexVersion, indexFiles, startTime, time, 0, 0);\n+        return new BlobStoreIndexShardSnapshot(targetSnapshotName, indexVersion, indexFiles, startTime, time, 0, 0);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0OTMwNg==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495749306", "bodyText": "Can fit on a single line I think", "author": "tlrx", "createdAt": "2020-09-28T07:48:06Z", "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java", "diffHunk": "@@ -386,6 +386,19 @@ public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<File\n         this.incrementalSize = incrementalSize;\n     }\n \n+    /**\n+     * Creates a new instance has a different name and zero incremental file counts but is identical to this instance in terms of the files\n+     * it references.\n+     *\n+     * @param targetSnapshotName target snapshot name\n+     * @param startTime          time the clone operation on the repository was started\n+     * @param time               time it took to create the clone\n+     */\n+    public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {\n+        return new BlobStoreIndexShardSnapshot(\n+                targetSnapshotName, indexVersion, indexFiles, startTime, time, 0, 0);", "originalCommit": "3cc039d40df7c1358d113b79f8e10f97b6b0682d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5MDI4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495790282", "bodyText": "++ damn Idea's variable name overlay :D", "author": "original-brownbear", "createdAt": "2020-09-28T09:00:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0OTMwNg=="}], "type": "inlineReview", "revised_code": {"commit": "37c18f87026e6ae038f170470f32f9955cc79d54", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java\nindex ce15600e5c1..497a3147c7c 100644\n--- a/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java\n+++ b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java\n\n@@ -395,8 +395,7 @@ public class BlobStoreIndexShardSnapshot implements ToXContentFragment {\n      * @param time               time it took to create the clone\n      */\n     public BlobStoreIndexShardSnapshot asClone(String targetSnapshotName, long startTime, long time) {\n-        return new BlobStoreIndexShardSnapshot(\n-                targetSnapshotName, indexVersion, indexFiles, startTime, time, 0, 0);\n+        return new BlobStoreIndexShardSnapshot(targetSnapshotName, indexVersion, indexFiles, startTime, time, 0, 0);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1MDg3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495750875", "bodyText": "Maybe add the source name in the message?", "author": "tlrx", "createdAt": "2020-09-28T07:51:08Z", "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java", "diffHunk": "@@ -95,6 +95,30 @@ private BlobStoreIndexShardSnapshots(Map<String, FileInfo> files, List<SnapshotF\n         this.physicalFiles = unmodifiableMap(mapBuilder);\n     }\n \n+    /**\n+     * Create a new instance that has a new snapshot by name {@code target} added which shares all files with the snapshot of name\n+     * {@code source}.\n+     *\n+     * @param source source snapshot name\n+     * @param target target snapshot name\n+     * @return new instance with added cloned snapshot\n+     */\n+    public BlobStoreIndexShardSnapshots withClone(String source, String target) {\n+        SnapshotFiles sourceFiles = null;\n+        for (SnapshotFiles shardSnapshot : shardSnapshots) {\n+            if (shardSnapshot.snapshot().equals(source)) {\n+                sourceFiles = shardSnapshot;\n+                break;\n+            }\n+        }\n+        if (sourceFiles == null) {\n+            throw new IllegalArgumentException(\"unknown source\");", "originalCommit": "3cc039d40df7c1358d113b79f8e10f97b6b0682d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "37c18f87026e6ae038f170470f32f9955cc79d54", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java\nindex aa8eb0d33ea..ccaea663889 100644\n--- a/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java\n+++ b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshots.java\n\n@@ -112,7 +112,7 @@ public class BlobStoreIndexShardSnapshots implements Iterable<SnapshotFiles>, To\n             }\n         }\n         if (sourceFiles == null) {\n-            throw new IllegalArgumentException(\"unknown source\");\n+            throw new IllegalArgumentException(\"unknown source [\" + source + \"]\");\n         }\n         final List<SnapshotFiles> updated = new ArrayList<>(shardSnapshots);\n         updated.add(sourceFiles.withSnapshotName(target));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1ODM0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495758345", "bodyText": "I think we should check and fail that the repository is not read-only?", "author": "tlrx", "createdAt": "2020-09-28T08:05:04Z", "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -397,6 +398,64 @@ public TimeValue timeout() {\n         }, onFailure));\n     }\n \n+    @Override\n+    public void cloneShardSnapshot(SnapshotId source, SnapshotId target, RepositoryShardId shardId,\n+                                   @Nullable String shardGeneration, ActionListener<String> listener) {\n+        final IndexId index = shardId.index();", "originalCommit": "3cc039d40df7c1358d113b79f8e10f97b6b0682d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4ODkwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495788905", "bodyText": "We currently don't do that for snapshotShard but I guess it might be nice to have that safety measure here as well :) I'll add it to both places.", "author": "original-brownbear", "createdAt": "2020-09-28T08:58:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1ODM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxMTg3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62771#discussion_r495811873", "bodyText": "Yes I think we should", "author": "tlrx", "createdAt": "2020-09-28T09:37:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1ODM0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "37c18f87026e6ae038f170470f32f9955cc79d54", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java b/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java\nindex b457f004b25..f201e43a0e3 100644\n--- a/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java\n+++ b/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java\n\n@@ -401,6 +401,10 @@ public abstract class BlobStoreRepository extends AbstractLifecycleComponent imp\n     @Override\n     public void cloneShardSnapshot(SnapshotId source, SnapshotId target, RepositoryShardId shardId,\n                                    @Nullable String shardGeneration, ActionListener<String> listener) {\n+        if (isReadOnly()) {\n+            listener.onFailure(new RepositoryException(metadata.name(), \"cannot clone shard snapshot on a readonly repository\"));\n+            return;\n+        }\n         final IndexId index = shardId.index();\n         final int shardNum = shardId.shardId();\n         final Executor executor = threadPool.executor(ThreadPool.Names.SNAPSHOT);\n"}}, {"oid": "57a92215ea8014bfc218bed6272fd49638dd3d02", "url": "https://github.com/elastic/elasticsearch/commit/57a92215ea8014bfc218bed6272fd49638dd3d02", "message": "Merge remote-tracking branch 'elastic/master' into clone-shard-logic", "committedDate": "2020-09-28T08:58:00Z", "type": "commit"}, {"oid": "37c18f87026e6ae038f170470f32f9955cc79d54", "url": "https://github.com/elastic/elasticsearch/commit/37c18f87026e6ae038f170470f32f9955cc79d54", "message": "CR: comments", "committedDate": "2020-09-28T09:03:38Z", "type": "commit"}]}