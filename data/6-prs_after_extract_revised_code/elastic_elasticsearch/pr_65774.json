{"pr_number": 65774, "pr_title": "[ML] make InferenceIngestIT more lenient when checking cache miss counts", "pr_createdAt": "2020-12-02T20:00:36Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65774", "timeline": [{"oid": "52d69d69479d10ab489d238106b8dbecb7e4ca0a", "url": "https://github.com/elastic/elasticsearch/commit/52d69d69479d10ab489d238106b8dbecb7e4ca0a", "message": "[ML] make InferenceIngestIT more lenient when checking cache miss counts", "committedDate": "2020-12-02T19:58:47Z", "type": "commit"}, {"oid": "9500f9abaa08f56f4070daa201b236a3285f5a75", "url": "https://github.com/elastic/elasticsearch/commit/9500f9abaa08f56f4070daa201b236a3285f5a75", "message": "test fix", "committedDate": "2020-12-02T21:30:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc5MTI1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/65774#discussion_r534791253", "bodyText": "If I see correctly, the pattern of parsing the response and verifying getInferenceCount is repeated 4 times.\nPlease consider extracting the snippet to a separate method parameterized by the expected inference count.", "author": "przemekwitek", "createdAt": "2020-12-03T07:19:07Z", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java", "diffHunk": "@@ -135,13 +144,23 @@ public void testPathologicalPipelineCreationAndDeletion() throws Exception {\n             try {\n                 Response statsResponse = client().performRequest(new Request(\"GET\",\n                     \"_ml/trained_models/\" + classificationModelId + \"/_stats\"));\n-                String response = EntityUtils.toString(statsResponse.getEntity());\n-                assertThat(response, containsString(\"\\\"inference_count\\\":10\"));\n-                assertThat(response, containsString(\"\\\"cache_miss_count\\\":30\"));\n+                try (XContentParser parser = createParser(JsonXContent.jsonXContent, statsResponse.getEntity().getContent())) {", "originalCommit": "9500f9abaa08f56f4070daa201b236a3285f5a75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b30be89598a7a4e14ec058791e38c28a6b9d20cc", "chunk": "diff --git a/x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java b/x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java\nindex 5d7194f9423..cafcd81e12b 100644\n--- a/x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java\n+++ b/x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/InferenceIngestIT.java\n\n@@ -142,25 +142,8 @@ public class InferenceIngestIT extends ESRestTestCase {\n         assertThat(EntityUtils.toString(searchResponse.getEntity()), containsString(\"\\\"value\\\":10\"));\n         assertBusy(() -> {\n             try {\n-                Response statsResponse = client().performRequest(new Request(\"GET\",\n-                    \"_ml/trained_models/\" + classificationModelId + \"/_stats\"));\n-                try (XContentParser parser = createParser(JsonXContent.jsonXContent, statsResponse.getEntity().getContent())) {\n-                    GetTrainedModelsStatsResponse response = GetTrainedModelsStatsResponse.fromXContent(parser);\n-                    assertThat(response.getTrainedModelStats(), hasSize(1));\n-                    TrainedModelStats trainedModelStats = response.getTrainedModelStats().get(0);\n-                    assertThat(trainedModelStats.getInferenceStats(), is(notNullValue()));\n-                    assertThat(trainedModelStats.getInferenceStats().getInferenceCount(), equalTo(10L));\n-                    assertThat(trainedModelStats.getInferenceStats().getCacheMissCount(), greaterThan(0L));\n-                }\n-                statsResponse = client().performRequest(new Request(\"GET\", \"_ml/trained_models/\" + regressionModelId + \"/_stats\"));\n-                try (XContentParser parser = createParser(JsonXContent.jsonXContent, statsResponse.getEntity().getContent())) {\n-                    GetTrainedModelsStatsResponse response = GetTrainedModelsStatsResponse.fromXContent(parser);\n-                    assertThat(response.getTrainedModelStats(), hasSize(1));\n-                    TrainedModelStats trainedModelStats = response.getTrainedModelStats().get(0);\n-                    assertThat(trainedModelStats.getInferenceStats(), is(notNullValue()));\n-                    assertThat(trainedModelStats.getInferenceStats().getInferenceCount(), equalTo(10L));\n-                    assertThat(trainedModelStats.getInferenceStats().getCacheMissCount(), greaterThan(0L));\n-                }\n+                assertStatsWithCacheMisses(classificationModelId, 10L);\n+                assertStatsWithCacheMisses(regressionModelId, 10L);\n             } catch (ResponseException ex) {\n                 //this could just mean shard failures.\n                 fail(ex.getMessage());\n"}}, {"oid": "b30be89598a7a4e14ec058791e38c28a6b9d20cc", "url": "https://github.com/elastic/elasticsearch/commit/b30be89598a7a4e14ec058791e38c28a6b9d20cc", "message": "addressing pr comment", "committedDate": "2020-12-03T12:17:45Z", "type": "commit"}, {"oid": "cd7ba3c6402ffb91f5538e473c8385b024c7dc2d", "url": "https://github.com/elastic/elasticsearch/commit/cd7ba3c6402ffb91f5538e473c8385b024c7dc2d", "message": "Update InferenceIngestIT.java", "committedDate": "2020-12-03T13:00:06Z", "type": "commit"}]}