{"pr_number": 51072, "pr_title": "[Transform] Improve force stop robustness in case of an error", "pr_createdAt": "2020-01-15T21:50:19Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51072", "timeline": [{"oid": "dde880a23e86a966534ec63fc50205345874df83", "url": "https://github.com/elastic/elasticsearch/commit/dde880a23e86a966534ec63fc50205345874df83", "message": "make it possible to stop dangling transforms", "committedDate": "2020-01-15T19:53:04Z", "type": "commit"}, {"oid": "77df1c75c3edcef04fe723e1266a82f3522efe5a", "url": "https://github.com/elastic/elasticsearch/commit/77df1c75c3edcef04fe723e1266a82f3522efe5a", "message": "test task removal after internal index deletion", "committedDate": "2020-01-15T21:36:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyNDg1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51072#discussion_r367324856", "bodyText": "I wonder if we dangling is a bit vague here for users. Should we rephrase to Detected transforms [{0}] without matching configs?", "author": "dimitris-athanasiou", "createdAt": "2020-01-16T09:54:46Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java", "diffHunk": "@@ -17,6 +17,7 @@\n             \"Interrupted while waiting for transform [{0}] to stop\";\n     public static final String REST_PUT_TRANSFORM_EXISTS = \"Transform with id [{0}] already exists\";\n     public static final String REST_UNKNOWN_TRANSFORM = \"Transform with id [{0}] could not be found\";\n+    public static final String REST_STOP_TRANSFORM_WITHOUT_CONFIG = \"Detected dangling transforms [{0}]. Use force to stop/delete them.\";", "originalCommit": "77df1c75c3edcef04fe723e1266a82f3522efe5a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "557b0bef5f73b1cc328473314b7bc52f48b91390", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java\nindex b35a9a39d2a..912f7032fe3 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/TransformMessages.java\n\n@@ -17,7 +17,8 @@ public class TransformMessages {\n             \"Interrupted while waiting for transform [{0}] to stop\";\n     public static final String REST_PUT_TRANSFORM_EXISTS = \"Transform with id [{0}] already exists\";\n     public static final String REST_UNKNOWN_TRANSFORM = \"Transform with id [{0}] could not be found\";\n-    public static final String REST_STOP_TRANSFORM_WITHOUT_CONFIG = \"Detected dangling transforms [{0}]. Use force to stop/delete them.\";\n+    public static final String REST_STOP_TRANSFORM_WITHOUT_CONFIG =\n+            \"Detected transforms with no config [{0}]. Use force to stop/delete them.\";\n     public static final String REST_PUT_TRANSFORM_FAILED_TO_VALIDATE_CONFIGURATION =\n             \"Failed to validate configuration\";\n     public static final String REST_PUT_FAILED_PERSIST_TRANSFORM_CONFIGURATION = \"Failed to persist transform configuration\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyODAxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/51072#discussion_r367328011", "bodyText": "Could transformId be \"foo-*\"? If yes, then this is not going to work.", "author": "dimitris-athanasiou", "createdAt": "2020-01-16T10:00:54Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java", "diffHunk": "@@ -127,6 +134,25 @@ static void validateTaskState(ClusterState state, List<String> transformIds, boo\n         }\n     }\n \n+    static Tuple<Set<String>, Set<String>> findTasksWithoutConfig(ClusterState state, String transformId) {\n+        PersistentTasksCustomMetaData tasks = state.metaData().custom(PersistentTasksCustomMetaData.TYPE);\n+\n+        Set<String> taskIds = new HashSet<>();\n+        Set<String> executorNodes = new HashSet<>();\n+\n+        Predicate<PersistentTask<?>> taskMatcher = Strings.isAllOrWildcard(new String[] { transformId }) ? t -> true : t -> {\n+            TransformTaskParams transformParams = (TransformTaskParams) t.getParams();\n+            return transformParams.getId().equals(transformId);", "originalCommit": "77df1c75c3edcef04fe723e1266a82f3522efe5a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM4OTU5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51072#discussion_r367389595", "bodyText": "yes, that was my intention. In this situation I think you either have 1 transform that is broken or you want to rest everything. Supporting such patterns makes it very complicated and its dangerous, too.\nHowever, I will add a check and throw an exception if someone tries to call it with \"my_id*\".", "author": "hendrikmuhs", "createdAt": "2020-01-16T12:24:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyODAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5Mzk3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51072#discussion_r367393975", "bodyText": "hmm, this gets complicated. I changed my mind and will allow it.", "author": "hendrikmuhs", "createdAt": "2020-01-16T12:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyODAxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "557b0bef5f73b1cc328473314b7bc52f48b91390", "chunk": "diff --git a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java\nindex 9bfa8763f43..4cea47c3992 100644\n--- a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java\n+++ b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java\n\n@@ -142,7 +143,7 @@ public class TransportStopTransformAction extends TransportTasksAction<Transform\n \n         Predicate<PersistentTask<?>> taskMatcher = Strings.isAllOrWildcard(new String[] { transformId }) ? t -> true : t -> {\n             TransformTaskParams transformParams = (TransformTaskParams) t.getParams();\n-            return transformParams.getId().equals(transformId);\n+            return Regex.simpleMatch(transformId, transformParams.getId());\n         };\n \n         for (PersistentTasksCustomMetaData.PersistentTask<?> pTask : tasks.findTasks(TransformField.TASK_NAME, taskMatcher)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMzMDA1OA==", "url": "https://github.com/elastic/elasticsearch/pull/51072#discussion_r367330058", "bodyText": "Rename to runningTasksAndNodes? Just so it's clear what's what when we later get each part of the tuple.", "author": "dimitris-athanasiou", "createdAt": "2020-01-16T10:05:09Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java", "diffHunk": "@@ -160,7 +186,31 @@ protected void doExecute(Task task, Request request, ActionListener<Response> li\n                     request.setExpandedIds(new HashSet<>(hitsAndIds.v2()));\n                     request.setNodes(TransformNodes.transformTaskNodes(hitsAndIds.v2(), state));\n                     super.doExecute(task, request, finalListener);\n-                }, listener::onFailure)\n+                }, e -> {\n+                    if (e instanceof ResourceNotFoundException) {\n+                        Tuple<Set<String>, Set<String>> runningTasks = findTasksWithoutConfig(state, request.getId());", "originalCommit": "77df1c75c3edcef04fe723e1266a82f3522efe5a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "557b0bef5f73b1cc328473314b7bc52f48b91390", "chunk": "diff --git a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java\nindex 9bfa8763f43..4cea47c3992 100644\n--- a/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java\n+++ b/x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportStopTransformAction.java\n\n@@ -188,20 +189,20 @@ public class TransportStopTransformAction extends TransportTasksAction<Transform\n                     super.doExecute(task, request, finalListener);\n                 }, e -> {\n                     if (e instanceof ResourceNotFoundException) {\n-                        Tuple<Set<String>, Set<String>> runningTasks = findTasksWithoutConfig(state, request.getId());\n-                        if (runningTasks.v1().isEmpty()) {\n+                        Tuple<Set<String>, Set<String>> runningTasksAndNodes = findTasksWithoutConfig(state, request.getId());\n+                        if (runningTasksAndNodes.v1().isEmpty()) {\n                             listener.onFailure(e);\n                             // found transforms without a config\n                         } else if (request.isForce()) {\n-                            request.setExpandedIds(runningTasks.v1());\n-                            request.setNodes(runningTasks.v2().toArray(new String[0]));\n+                            request.setExpandedIds(runningTasksAndNodes.v1());\n+                            request.setNodes(runningTasksAndNodes.v2().toArray(new String[0]));\n                             super.doExecute(task, request, finalListener);\n                         } else {\n                             listener.onFailure(\n                                 new ElasticsearchStatusException(\n                                     TransformMessages.getMessage(\n                                         TransformMessages.REST_STOP_TRANSFORM_WITHOUT_CONFIG,\n-                                        Strings.arrayToCommaDelimitedString(runningTasks.v1().toArray(new String[0]))\n+                                        Strings.arrayToCommaDelimitedString(runningTasksAndNodes.v1().toArray(new String[0]))\n                                     ),\n                                     RestStatus.CONFLICT\n                                 )\n"}}, {"oid": "557b0bef5f73b1cc328473314b7bc52f48b91390", "url": "https://github.com/elastic/elasticsearch/commit/557b0bef5f73b1cc328473314b7bc52f48b91390", "message": "apply review suggestions", "committedDate": "2020-01-16T12:44:05Z", "type": "commit"}]}