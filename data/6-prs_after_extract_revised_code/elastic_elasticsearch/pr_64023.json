{"pr_number": 64023, "pr_title": "Replace usages of 'flat object' with 'flattened'.", "pr_createdAt": "2020-10-21T21:25:20Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64023", "timeline": [{"oid": "913408601a88e8f08978ef724fed3d207919c3a2", "url": "https://github.com/elastic/elasticsearch/commit/913408601a88e8f08978ef724fed3d207919c3a2", "message": "Replace usages of 'flat object' with 'flattened'.", "committedDate": "2020-10-21T21:23:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk1MjY3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/64023#discussion_r509952675", "bodyText": "nit: remove extra whitespace", "author": "romseygeek", "createdAt": "2020-10-22T07:53:35Z", "path": "x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java", "diffHunk": "@@ -44,25 +44,25 @@ public void testIndexedValueForSearch() {\n     }\n \n     public void testTermQuery() {\n-        KeyedFlatObjectFieldType ft = createFieldType();\n+        KeyedFlattenedFieldType ft = createFieldType();\n \n         Query expected = new TermQuery(new Term(\"field\", \"key\\0value\"));\n         assertEquals(expected, ft.termQuery(\"value\", null));\n \n         expected = AutomatonQueries.caseInsensitiveTermQuery(new Term(\"field\", \"key\\0value\"));\n         assertEquals(expected, ft.termQueryCaseInsensitive(\"value\", null));\n- \n-        \n-        \n-        KeyedFlatObjectFieldType unsearchable = new KeyedFlatObjectFieldType(\"field\", false, true, \"key\",\n+", "originalCommit": "913408601a88e8f08978ef724fed3d207919c3a2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5332d90ddb5f92a5b1138948229dba875e13139f", "chunk": "diff --git a/x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java b/x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java\nindex bca5362819e..41939e985a7 100644\n--- a/x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java\n+++ b/x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java\n\n@@ -52,8 +52,6 @@ public class KeyedFlattenedFieldTypeTests extends FieldTypeTestCase {\n         expected = AutomatonQueries.caseInsensitiveTermQuery(new Term(\"field\", \"key\\0value\"));\n         assertEquals(expected, ft.termQueryCaseInsensitive(\"value\", null));\n \n-\n-\n         KeyedFlattenedFieldType unsearchable = new KeyedFlattenedFieldType(\"field\", false, true, \"key\",\n             false, Collections.emptyMap());\n         IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk1Mjg2OA==", "url": "https://github.com/elastic/elasticsearch/pull/64023#discussion_r509952868", "bodyText": "nit: remove extra whitespace", "author": "romseygeek", "createdAt": "2020-10-22T07:53:58Z", "path": "x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java", "diffHunk": "@@ -77,38 +77,38 @@ public void testTermsQuery() {\n     }\n \n     public void testExistsQuery() {\n-        KeyedFlatObjectFieldType ft = createFieldType();\n+        KeyedFlattenedFieldType ft = createFieldType();\n \n         Query expected = new PrefixQuery(new Term(\"field\", \"key\\0\"));\n         assertEquals(expected, ft.existsQuery(null));\n     }\n \n     public void testPrefixQuery() {\n-        KeyedFlatObjectFieldType ft = createFieldType();\n+        KeyedFlattenedFieldType ft = createFieldType();\n \n         Query expected = new PrefixQuery(new Term(\"field\", \"key\\0val\"));\n         assertEquals(expected, ft.prefixQuery(\"val\", MultiTermQuery.CONSTANT_SCORE_REWRITE, false, MOCK_QSC));\n \n         expected = AutomatonQueries.caseInsensitivePrefixQuery(new Term(\"field\", \"key\\0vAl\"));\n         assertEquals(expected, ft.prefixQuery(\"vAl\", MultiTermQuery.CONSTANT_SCORE_REWRITE, true, MOCK_QSC));\n-        \n-        \n+", "originalCommit": "913408601a88e8f08978ef724fed3d207919c3a2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5332d90ddb5f92a5b1138948229dba875e13139f", "chunk": "diff --git a/x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java b/x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java\nindex bca5362819e..41939e985a7 100644\n--- a/x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java\n+++ b/x-pack/plugin/mapper-flattened/src/test/java/org/elasticsearch/xpack/flattened/mapper/KeyedFlattenedFieldTypeTests.java\n\n@@ -92,7 +90,6 @@ public class KeyedFlattenedFieldTypeTests extends FieldTypeTestCase {\n         expected = AutomatonQueries.caseInsensitivePrefixQuery(new Term(\"field\", \"key\\0vAl\"));\n         assertEquals(expected, ft.prefixQuery(\"vAl\", MultiTermQuery.CONSTANT_SCORE_REWRITE, true, MOCK_QSC));\n \n-\n         ElasticsearchException ee = expectThrows(ElasticsearchException.class,\n                 () -> ft.prefixQuery(\"val\", MultiTermQuery.CONSTANT_SCORE_REWRITE, false, MOCK_QSC_DISALLOW_EXPENSIVE));\n         assertEquals(\"[prefix] queries cannot be executed when 'search.allow_expensive_queries' is set to false. \" +\n"}}, {"oid": "5332d90ddb5f92a5b1138948229dba875e13139f", "url": "https://github.com/elastic/elasticsearch/commit/5332d90ddb5f92a5b1138948229dba875e13139f", "message": "Remove extra whitespace.", "committedDate": "2020-10-22T20:40:14Z", "type": "commit"}, {"oid": "627afb3a08ce3a8e4ba46e6f59a0a33cf602ed86", "url": "https://github.com/elastic/elasticsearch/commit/627afb3a08ce3a8e4ba46e6f59a0a33cf602ed86", "message": "Merge remote-tracking branch 'upstream/master' into flattened-fields", "committedDate": "2020-10-22T20:46:57Z", "type": "commit"}]}