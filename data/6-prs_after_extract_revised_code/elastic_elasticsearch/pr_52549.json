{"pr_number": 52549, "pr_title": "reduce bytes used when serializing Extent", "pr_createdAt": "2020-02-20T01:45:18Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52549", "timeline": [{"oid": "3881c7d339953c6a28ba2d0c843da1473f823031", "url": "https://github.com/elastic/elasticsearch/commit/3881c7d339953c6a28ba2d0c843da1473f823031", "message": "reduce bytes used when serializing Extent", "committedDate": "2020-02-20T01:43:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3NjYyMw==", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382176623", "bodyText": "should we encode negLeft directly instead of its delta with posRight, i.e. output.writeVInt(-this.negLeft);", "author": "jpountz", "createdAt": "2020-02-20T18:23:38Z", "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "diffHunk": "@@ -165,15 +167,15 @@ void writeCompressed(ByteBuffersDataOutput output) throws IOException {\n         switch (type) {\n             case NONE_SET : break;\n             case POSITIVE_SET:\n-                output.writeVInt(this.posRight);\n+                output.writeVInt(this.posLeft);\n                 output.writeVLong((long) this.posRight - this.posLeft);\n                 break;\n             case NEGATIVE_SET:\n-                output.writeInt(this.negRight);\n+                output.writeVInt(-this.negRight);\n                 output.writeVLong((long) this.negRight - this.negLeft);\n                 break;\n             case CROSSES_LAT_AXIS:\n-                output.writeInt(this.posRight);\n+                output.writeVInt(this.posRight);\n                 output.writeVLong((long) this.posRight - this.negLeft);", "originalCommit": "3881c7d339953c6a28ba2d0c843da1473f823031", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE5MjMwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382192309", "bodyText": "I suppose the range of values are comparable for both. I'll update to write VInt. thanks for the suggestion!", "author": "talevy", "createdAt": "2020-02-20T18:54:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3NjYyMw=="}], "type": "inlineReview", "revised_code": {"commit": "e2a63595ebbcf6f02bd7ca3ba06cbf13246fe06f", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/geo/Extent.java b/server/src/main/java/org/elasticsearch/common/geo/Extent.java\nindex 4d6f540ed74..c466adafb2c 100644\n--- a/server/src/main/java/org/elasticsearch/common/geo/Extent.java\n+++ b/server/src/main/java/org/elasticsearch/common/geo/Extent.java\n\n@@ -176,14 +176,16 @@ public class Extent {\n                 break;\n             case CROSSES_LAT_AXIS:\n                 output.writeVInt(this.posRight);\n-                output.writeVLong((long) this.posRight - this.negLeft);\n+                output.writeVInt(-this.negLeft);\n                 break;\n-            default:\n+            case ALL_SET:\n                 output.writeVInt(this.posRight);\n                 output.writeVLong((long) this.posRight - this.posLeft);\n-                output.writeInt(this.negRight);\n+                output.writeVInt(-this.negRight);\n                 output.writeVLong((long) this.negRight - this.negLeft);\n                 break;\n+            default:\n+                throw new IllegalArgumentException(\"invalid extent values-set byte read [\" + type + \"]\");\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMDkzOA==", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382200938", "bodyText": "we should probably update ALL_SET to have the same logic as POSITIVE_SET and NEGATIVE_SET combined?", "author": "jpountz", "createdAt": "2020-02-20T19:10:30Z", "path": "server/src/main/java/org/elasticsearch/common/geo/Extent.java", "diffHunk": "@@ -115,29 +115,31 @@ static void readFromCompressed(ByteArrayDataInput input, Extent extent) {\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case POSITIVE_SET:\n-                posRight = input.readVInt();\n-                posLeft =  Math.toIntExact(posRight - input.readVLong());\n+                posLeft = input.readVInt();\n+                posRight =  Math.toIntExact(input.readVLong() + posLeft);\n                 negLeft = Integer.MAX_VALUE;\n                 negRight = Integer.MIN_VALUE;\n                 break;\n             case NEGATIVE_SET:\n-                negRight = input.readInt();\n+                negRight = -input.readVInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());\n                 posLeft = Integer.MAX_VALUE;\n                 posRight = Integer.MIN_VALUE;\n                 break;\n             case CROSSES_LAT_AXIS:\n-                posRight = input.readInt();\n+                posRight = input.readVInt();\n                 negLeft = Math.toIntExact(posRight - input.readVLong());\n                 posLeft = 0;\n                 negRight = 0;\n                 break;\n-            default:\n+            case ALL_SET:\n                 posRight = input.readVInt();\n                 posLeft =  Math.toIntExact(posRight - input.readVLong());\n                 negRight = input.readInt();\n                 negLeft = Math.toIntExact(negRight - input.readVLong());", "originalCommit": "3881c7d339953c6a28ba2d0c843da1473f823031", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5NzQxNA==", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382297414", "bodyText": "updated to what I think you meant", "author": "talevy", "createdAt": "2020-02-20T22:36:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMDkzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU2OTc0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382569745", "bodyText": "Actually I was thinking of doing this:\n                posLeft = input.readVInt();\n                posRight =  Math.toIntExact(input.readVLong() + posLeft);\n                negRight = -input.readVInt();\n                negLeft = Math.toIntExact(negRight - input.readVLong());\n\nThere is no reason to serialize posLeft/posRight differently in the POSITIVE_SET case or in the ALL_SET case? And likewise for negLeft/negRight in the NEGATIVE_SET or ALL_SET cases?", "author": "jpountz", "createdAt": "2020-02-21T13:03:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMDkzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NTI2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/52549#discussion_r382785266", "bodyText": "my bad. I misunderstood. will update thanks", "author": "talevy", "createdAt": "2020-02-21T20:15:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMDkzOA=="}], "type": "inlineReview", "revised_code": {"commit": "e2a63595ebbcf6f02bd7ca3ba06cbf13246fe06f", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/geo/Extent.java b/server/src/main/java/org/elasticsearch/common/geo/Extent.java\nindex 4d6f540ed74..c466adafb2c 100644\n--- a/server/src/main/java/org/elasticsearch/common/geo/Extent.java\n+++ b/server/src/main/java/org/elasticsearch/common/geo/Extent.java\n\n@@ -128,15 +128,15 @@ public class Extent {\n                 break;\n             case CROSSES_LAT_AXIS:\n                 posRight = input.readVInt();\n-                negLeft = Math.toIntExact(posRight - input.readVLong());\n+                negLeft = -input.readVInt();\n                 posLeft = 0;\n                 negRight = 0;\n                 break;\n             case ALL_SET:\n                 posRight = input.readVInt();\n                 posLeft =  Math.toIntExact(posRight - input.readVLong());\n-                negRight = input.readInt();\n-                negLeft = Math.toIntExact(negRight - input.readVLong());\n+                negRight = -input.readVInt();\n+                negLeft =  Math.toIntExact(negRight - input.readVLong());\n                 break;\n             default:\n                 throw new IllegalArgumentException(\"invalid extent values-set byte read [\" + type + \"]\");\n"}}, {"oid": "e2a63595ebbcf6f02bd7ca3ba06cbf13246fe06f", "url": "https://github.com/elastic/elasticsearch/commit/e2a63595ebbcf6f02bd7ca3ba06cbf13246fe06f", "message": "update more", "committedDate": "2020-02-20T22:35:21Z", "type": "commit"}, {"oid": "4ae6128341dae33f3f5f44bb261730aed8da7236", "url": "https://github.com/elastic/elasticsearch/commit/4ae6128341dae33f3f5f44bb261730aed8da7236", "message": "remove whitespace", "committedDate": "2020-02-20T22:36:16Z", "type": "commit"}, {"oid": "f0e81e37248f21c5cd89c3185dffe4b349c0b65b", "url": "https://github.com/elastic/elasticsearch/commit/f0e81e37248f21c5cd89c3185dffe4b349c0b65b", "message": "more cleanup", "committedDate": "2020-02-21T20:18:00Z", "type": "commit"}, {"oid": "4f4cc843ce59d21eb99e34fd2508125dc50f4657", "url": "https://github.com/elastic/elasticsearch/commit/4f4cc843ce59d21eb99e34fd2508125dc50f4657", "message": "Merge remote-tracking branch 'elastic/geoshape-doc-values' into gdv-adrien1", "committedDate": "2020-02-24T16:30:26Z", "type": "commit"}]}