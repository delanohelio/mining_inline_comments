{"pr_number": 53810, "pr_title": "Handle properly indexing rectangles that crosses the dateline", "pr_createdAt": "2020-03-19T15:31:45Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53810", "timeline": [{"oid": "30721c240014afa9c7751c06d500a250177740b4", "url": "https://github.com/elastic/elasticsearch/commit/30721c240014afa9c7751c06d500a250177740b4", "message": "Handle properly indexing rectangles that crosses the dateline", "committedDate": "2020-03-19T15:28:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MjE5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/53810#discussion_r395682195", "bodyText": "Maybe be better to stick with X, Y or Lat, Lon for clarity.", "author": "imotov", "createdAt": "2020-03-20T14:41:57Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/GeoShapeIndexer.java", "diffHunk": "@@ -261,7 +262,15 @@ public Void visit(Polygon polygon) {\n \n         @Override\n         public Void visit(Rectangle r) {\n-            addFields(LatLonShape.createIndexableFields(name, GeoShapeUtils.toLucenePolygon(r)));\n+            if (r.getMinLon() > r.getMaxLon()) {\n+                Rectangle left = new Rectangle(r.getMaxX(), GeoUtils.MAX_LON, r.getMaxY(), r.getMinY());\n+                addFields(LatLonShape.createIndexableFields(name, GeoShapeUtils.toLucenePolygon(left)));\n+                Rectangle right = new Rectangle(GeoUtils.MIN_LON, r.getMaxLon(), r.getMaxY(), r.getMinY());", "originalCommit": "30721c240014afa9c7751c06d500a250177740b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY5MDA1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/53810#discussion_r395690052", "bodyText": "True! I will go for Lat / Lon", "author": "iverase", "createdAt": "2020-03-20T14:53:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MjE5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6cb8bc697c87a360073f9b239afebe189a40cbe6", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/GeoShapeIndexer.java b/server/src/main/java/org/elasticsearch/index/mapper/GeoShapeIndexer.java\nindex 4eca7087acb..4dc368612c9 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/GeoShapeIndexer.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/GeoShapeIndexer.java\n\n@@ -263,9 +263,9 @@ public final class GeoShapeIndexer implements AbstractGeometryFieldMapper.Indexe\n         @Override\n         public Void visit(Rectangle r) {\n             if (r.getMinLon() > r.getMaxLon()) {\n-                Rectangle left = new Rectangle(r.getMaxX(), GeoUtils.MAX_LON, r.getMaxY(), r.getMinY());\n+                Rectangle left = new Rectangle(r.getMinLon(), GeoUtils.MAX_LON, r.getMaxLat(), r.getMinLat());\n                 addFields(LatLonShape.createIndexableFields(name, GeoShapeUtils.toLucenePolygon(left)));\n-                Rectangle right = new Rectangle(GeoUtils.MIN_LON, r.getMaxLon(), r.getMaxY(), r.getMinY());\n+                Rectangle right = new Rectangle(GeoUtils.MIN_LON, r.getMaxLon(), r.getMaxLat(), r.getMinLat());\n                 addFields(LatLonShape.createIndexableFields(name, GeoShapeUtils.toLucenePolygon(right)));\n \n             } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4NDQ1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/53810#discussion_r395684452", "bodyText": "Could you add a unit test to GeometryIndexerTests for that use case as well?", "author": "imotov", "createdAt": "2020-03-20T14:45:24Z", "path": "server/src/test/java/org/elasticsearch/search/geo/GeoShapeQueryTests.java", "diffHunk": "@@ -791,4 +791,24 @@ public void testDistanceQuery() throws Exception {\n             .get();\n         assertEquals(0, response.getHits().getTotalHits().value);\n     }\n+\n+    public void testIndexRectangleSpanningDateLine() throws Exception {", "originalCommit": "30721c240014afa9c7751c06d500a250177740b4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "6cb8bc697c87a360073f9b239afebe189a40cbe6", "url": "https://github.com/elastic/elasticsearch/commit/6cb8bc697c87a360073f9b239afebe189a40cbe6", "message": "use Lat / Lon consistently", "committedDate": "2020-03-20T15:50:59Z", "type": "commit"}, {"oid": "10591385108a95e5c959a09096822d703c8725ba", "url": "https://github.com/elastic/elasticsearch/commit/10591385108a95e5c959a09096822d703c8725ba", "message": "add test in GeometryIndexerTests", "committedDate": "2020-03-20T16:05:32Z", "type": "commit"}]}