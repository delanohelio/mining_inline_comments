{"pr_number": 61124, "pr_title": "#60750 Added Composable  Index Template Builder", "pr_createdAt": "2020-08-13T21:41:26Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61124", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxNDc1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61124#discussion_r480214757", "bodyText": "The code doesn't compile, that should be return new ComposableIndexTemplate(this). Also as mentioned above we should use one of the existing constructors.", "author": "swallez", "createdAt": "2020-08-31T15:40:26Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "diffHunk": "@@ -294,4 +299,55 @@ public int hashCode() {\n             return DataStreamTemplate.class.hashCode();\n         }\n     }\n+    \n+    public static class Builder{\n+    \t\n+    \tprivate List<String> indexPatterns;\n+        private Template template;\n+        private List<String> componentTemplates;\n+        private Long priority;\n+        private Long version;\n+        private Map<String, Object> metadata;\n+        private DataStreamTemplate dataStreamTemplate;\n+        \n+        \n+        public Builder indexPatterns(List<String> indexPatterns) { \n+        \tthis.indexPatterns = indexPatterns;\n+        \treturn this;\n+        }\n+        \n+        public Builder template(Template template) { \n+        \tthis.template = template;\n+        \treturn this;\n+        }\n+        \n+        public Builder componentTemplates(List<String> componentTemplates) { \n+        \tthis.componentTemplates = componentTemplates;\n+        \treturn this;\n+        }\n+        \n+        public Builder priority(Long priority) { \n+        \tthis.priority = priority;\n+        \treturn this;\n+        }\n+        \n+        public Builder version(Long version) { \n+        \tthis.version = version;\n+        \treturn this;\n+        }\n+        \n+        public Builder metadata(Map<String, Object> metadata) { \n+        \tthis.metadata = metadata;\n+        \treturn this;\n+        }\n+        \n+        public Builder dataStreamTemplate(DataStreamTemplate dataStreamTemplate) { \n+        \tthis.dataStreamTemplate = dataStreamTemplate;\n+        \treturn this;\n+        }\n+        \n+        public ComposableIndexTemplate build() { \n+        \treturn ComposableIndexTemplate(this);", "originalCommit": "14c9b78a1a2dc6b9aaf983c719f20a054cf8b519", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzExNzQzNA==", "url": "https://github.com/elastic/elasticsearch/pull/61124#discussion_r487117434", "bodyText": "Done.", "author": "antrix190", "createdAt": "2020-09-11T15:21:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxNDc1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4b85ec0b4613509412ec151d41999526c1d0d842", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java b/server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java\nindex e41af1c20f6..14bd47d87ee 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java\n\n@@ -291,17 +337,18 @@ public class ComposableIndexTemplate extends AbstractDiffable<ComposableIndexTem\n         @Override\n         public boolean equals(Object o) {\n             if (this == o) return true;\n-            return o != null && getClass() == o.getClass();\n+            if (o == null || getClass() != o.getClass()) return false;\n+            DataStreamTemplate that = (DataStreamTemplate) o;\n+            return hidden == that.hidden;\n         }\n \n         @Override\n         public int hashCode() {\n-            return DataStreamTemplate.class.hashCode();\n+            return Objects.hash(hidden);\n         }\n     }\n     \n     public static class Builder{\n-    \t\n     \tprivate List<String> indexPatterns;\n         private Template template;\n         private List<String> componentTemplates;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxODM3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/61124#discussion_r480218371", "bodyText": "If you look at other uses of the builder pattern, their build method calls one of the regular constructors of the class. This avoids having to add an additional constructor just for the builder.", "author": "swallez", "createdAt": "2020-08-31T15:43:23Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "diffHunk": "@@ -104,6 +104,11 @@ public ComposableIndexTemplate(List<String> indexPatterns, @Nullable Template te\n         this(indexPatterns, template, componentTemplates, priority, version, metadata, null);\n     }\n \n+    public ComposableIndexTemplate(Builder builder) { ", "originalCommit": "14c9b78a1a2dc6b9aaf983c719f20a054cf8b519", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzExNzY5OA==", "url": "https://github.com/elastic/elasticsearch/pull/61124#discussion_r487117698", "bodyText": "Agreed. Reused existing constructor.", "author": "antrix190", "createdAt": "2020-09-11T15:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxODM3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4b85ec0b4613509412ec151d41999526c1d0d842", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java b/server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java\nindex e41af1c20f6..14bd47d87ee 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java\n\n@@ -101,17 +107,18 @@ public class ComposableIndexTemplate extends AbstractDiffable<ComposableIndexTem\n \n     public ComposableIndexTemplate(List<String> indexPatterns, @Nullable Template template, @Nullable List<String> componentTemplates,\n                                    @Nullable Long priority, @Nullable Long version, @Nullable Map<String, Object> metadata) {\n-        this(indexPatterns, template, componentTemplates, priority, version, metadata, null);\n+        this(indexPatterns, template, componentTemplates, priority, version, metadata, null, null);\n+    }\n+\n+    public ComposableIndexTemplate(List<String> indexPatterns, @Nullable Template template, @Nullable List<String> componentTemplates,\n+        @Nullable Long priority, @Nullable Long version, @Nullable Map<String, Object> metadata,\n+        @Nullable DataStreamTemplate dataStreamTemplate) {\n+        this(indexPatterns, template, componentTemplates, priority, version, metadata, dataStreamTemplate, null);\n     }\n \n-    public ComposableIndexTemplate(Builder builder) { \n-    \tthis(builder.indexPatterns,builder.template,builder.componentTemplates,\n-    \t\t\tbuilder.priority,builder.version,builder.metadata,builder.dataStreamTemplate);\n-    } \n-    \n     public ComposableIndexTemplate(List<String> indexPatterns, @Nullable Template template, @Nullable List<String> componentTemplates,\n                                    @Nullable Long priority, @Nullable Long version, @Nullable Map<String, Object> metadata,\n-                                   @Nullable DataStreamTemplate dataStreamTemplate) {\n+                                   @Nullable DataStreamTemplate dataStreamTemplate, @Nullable Boolean allowAutoCreate) {\n         this.indexPatterns = indexPatterns;\n         this.template = template;\n         this.componentTemplates = componentTemplates;\n"}}, {"oid": "4b85ec0b4613509412ec151d41999526c1d0d842", "url": "https://github.com/elastic/elasticsearch/commit/4b85ec0b4613509412ec151d41999526c1d0d842", "message": "#60750 Modified AutoCreateActionTests to use ComposableIndexTemplate.Builder", "committedDate": "2020-12-21T21:15:52Z", "type": "forcePushed"}, {"oid": "60aba6577a8f19498536683d9a7d687100f8ecde", "url": "https://github.com/elastic/elasticsearch/commit/60aba6577a8f19498536683d9a7d687100f8ecde", "message": "Added Composable  Index Template Builder", "committedDate": "2020-12-21T23:24:17Z", "type": "commit"}, {"oid": "60aba6577a8f19498536683d9a7d687100f8ecde", "url": "https://github.com/elastic/elasticsearch/commit/60aba6577a8f19498536683d9a7d687100f8ecde", "message": "Added Composable  Index Template Builder", "committedDate": "2020-12-21T23:24:17Z", "type": "forcePushed"}, {"oid": "eeed715240875643300c5edeafff29536a14be02", "url": "https://github.com/elastic/elasticsearch/commit/eeed715240875643300c5edeafff29536a14be02", "message": "#60750 Modifying test cases to use ComposableIndexTemplate.Builder", "committedDate": "2020-12-22T11:03:27Z", "type": "commit"}, {"oid": "e915b069e5fdf8b61bb3a2c1e624ae9022ed72f2", "url": "https://github.com/elastic/elasticsearch/commit/e915b069e5fdf8b61bb3a2c1e624ae9022ed72f2", "message": "#60750 Checkstyle test fix", "committedDate": "2020-12-22T12:08:30Z", "type": "commit"}, {"oid": "57dfdca88fe939a7bd12d20930d0e39258c8e1e1", "url": "https://github.com/elastic/elasticsearch/commit/57dfdca88fe939a7bd12d20930d0e39258c8e1e1", "message": "Merge branch 'master' into master", "committedDate": "2021-01-07T17:19:07Z", "type": "commit"}, {"oid": "31135f2d6f7be5ea1ff36ceac9e7b132753ec496", "url": "https://github.com/elastic/elasticsearch/commit/31135f2d6f7be5ea1ff36ceac9e7b132753ec496", "message": "Merge branch 'master' into master", "committedDate": "2021-01-11T15:28:23Z", "type": "commit"}]}