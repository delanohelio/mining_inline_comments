{"pr_number": 63688, "pr_title": "[ML] fix inference binary classification predication label and feature importance", "pr_createdAt": "2020-10-14T16:16:59Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63688", "timeline": [{"oid": "4794183b84071f867273e967348e7f47a7930626", "url": "https://github.com/elastic/elasticsearch/commit/4794183b84071f867273e967348e7f47a7930626", "message": "[ML] fix feature importance calculation for binary classification", "committedDate": "2020-10-14T16:08:31Z", "type": "commit"}, {"oid": "19875609d0fbb62a77016a0ace9441c22459aa12", "url": "https://github.com/elastic/elasticsearch/commit/19875609d0fbb62a77016a0ace9441c22459aa12", "message": "fixing boolean lable transformation", "committedDate": "2020-10-15T14:10:27Z", "type": "commit"}, {"oid": "b15d05d129719d3db13083437a55fbe76122862e", "url": "https://github.com/elastic/elasticsearch/commit/b15d05d129719d3db13083437a55fbe76122862e", "message": "fixing test", "committedDate": "2020-10-15T14:45:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYwNTQ2MA==", "url": "https://github.com/elastic/elasticsearch/pull/63688#discussion_r505605460", "bodyText": "There is one place where this might cause a mistake.\nLets assume the class labels are something that are NOT true or false, taco and hamburger for classes 0 and 1 respectively\nIf the user SPECIFICALLY selects the boolean prediction value type on inference, it will flag as follows:\ntaco will be false (since it starts with t but is not the word true)\nhamburger will be true (since it doesn't start with t or f, we revert to the class number).\nTo me, this is acceptable, as the user would have to specify the boolean result type. Knowing their classes labels were NOT actually boolean :/.", "author": "benwtrent", "createdAt": "2020-10-15T14:49:41Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "diffHunk": "@@ -52,22 +52,25 @@ public Object transformPredictedValue(Double value, String stringRep) {\n             case STRING:\n                 return stringRep == null ? value.toString() : stringRep;\n             case BOOLEAN:\n-                if ((areClose(value, 1.0D) || areClose(value, 0.0D)) == false) {\n-                    throw new IllegalArgumentException(\n-                        \"Cannot transform numbers other than 0.0 or 1.0 to boolean. Provided number [\" + value + \"]\");\n+                if (isNumberQuickCheck(stringRep)) {\n+                    try {\n+                        // 1 is true, 0 is false\n+                        return Integer.parseInt(stringRep) == 1;\n+                    } catch (NumberFormatException nfe) {\n+                        // do nothing, allow fall through to final fromDouble\n+                    }\n+                } else if (isBoolQuickCheck(stringRep)) { // if we start with t/f case insensitive, it indicates boolean string", "originalCommit": "b15d05d129719d3db13083437a55fbe76122862e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "26a9fbdff03ae20d73ac7c084ac4f786d8f7acf7", "url": "https://github.com/elastic/elasticsearch/commit/26a9fbdff03ae20d73ac7c084ac4f786d8f7acf7", "message": "fixing tests", "committedDate": "2020-10-15T15:24:57Z", "type": "commit"}]}