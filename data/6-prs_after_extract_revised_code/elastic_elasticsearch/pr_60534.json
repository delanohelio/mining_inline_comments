{"pr_number": 60534, "pr_title": "Increase timeout in testFollowIndexWithConcurrentMappingChanges", "pr_createdAt": "2020-07-31T16:41:01Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60534", "timeline": [{"oid": "010b8449efdf7c834d809614d1c0f026278fa2c1", "url": "https://github.com/elastic/elasticsearch/commit/010b8449efdf7c834d809614d1c0f026278fa2c1", "message": "Increase timeout in testFollowIndexWithConcurrentMappingChanges", "committedDate": "2020-07-31T16:35:29Z", "type": "commit"}, {"oid": "28df2179221d568c563c2c57c4bc693b03d88e33", "url": "https://github.com/elastic/elasticsearch/commit/28df2179221d568c563c2c57c4bc693b03d88e33", "message": "oops", "committedDate": "2020-07-31T16:41:57Z", "type": "commit"}, {"oid": "19fd2badcb18bbe3831815840086d7cad50aac99", "url": "https://github.com/elastic/elasticsearch/commit/19fd2badcb18bbe3831815840086d7cad50aac99", "message": "fix logging", "committedDate": "2020-08-02T17:03:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3NTc1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/60534#discussion_r464475757", "bodyText": "This is not blocking for the result?", "author": "ywelsch", "createdAt": "2020-08-03T15:08:28Z", "path": "x-pack/plugin/ccr/src/internalClusterTest/java/org/elasticsearch/xpack/ccr/IndexFollowingIT.java", "diffHunk": "@@ -248,38 +248,23 @@ public void testFollowIndexWithConcurrentMappingChanges() throws Exception {\n         final int firstBatchNumDocs = randomIntBetween(2, 64);\n         logger.info(\"Indexing [{}] docs as first batch\", firstBatchNumDocs);\n         for (int i = 0; i < firstBatchNumDocs; i++) {\n-            final String source = String.format(Locale.ROOT, \"{\\\"f\\\":%d}\", i);\n-            leaderClient().prepareIndex(\"index1\").setId(Integer.toString(i)).setSource(source, XContentType.JSON).get();\n+            leaderClient().prepareIndex(\"index1\").setId(Integer.toString(i)).setSource(\"f\", i).get();\n         }\n \n         AtomicBoolean isRunning = new AtomicBoolean(true);\n \n         // Concurrently index new docs with mapping changes\n+        int numFields = between(10, 20);\n         Thread thread = new Thread(() -> {\n-            int docID = 10000;\n-            char[] chars = \"abcdeghijklmnopqrstuvwxyz\".toCharArray();\n-            for (char c : chars) {\n+            int numDocs = between(10, 200);\n+            for (int i = 0; i < numDocs; i++) {\n                 if (isRunning.get() == false) {\n                     break;\n                 }\n-                final String source;\n-                long valueToPutInDoc = randomLongBetween(0, 50000);\n-                if (randomBoolean()) {\n-                    source = String.format(Locale.ROOT, \"{\\\"%c\\\":%d}\", c, valueToPutInDoc);\n-                } else {\n-                    source = String.format(Locale.ROOT, \"{\\\"%c\\\":\\\"%d\\\"}\", c, valueToPutInDoc);\n-                }\n-                for (int i = 1; i < 10; i++) {\n-                    if (isRunning.get() == false) {\n-                        break;\n-                    }\n-                    leaderClient().prepareIndex(\"index1\").setId(Long.toString(docID++)).setSource(source, XContentType.JSON).get();\n-                    if (rarely()) {\n-                        leaderClient().admin().indices().prepareFlush(\"index1\").setForce(true).get();\n-                    }\n-                }\n-                if (between(0, 100) < 20) {\n-                    leaderClient().admin().indices().prepareFlush(\"index1\").setForce(false).setWaitIfOngoing(false).get();\n+                final String field = \"f-\" + between(1, numFields);\n+                leaderClient().prepareIndex(\"index1\").setSource(field, between(0, 1000)).get();\n+                if (rarely()) {\n+                    leaderClient().admin().indices().prepareFlush(\"index1\").setWaitIfOngoing(false).setForce(false).execute();", "originalCommit": "19fd2badcb18bbe3831815840086d7cad50aac99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4767f458ed5db2c1b8fd1da011ccfb0f2f94167", "chunk": "diff --git a/x-pack/plugin/ccr/src/internalClusterTest/java/org/elasticsearch/xpack/ccr/IndexFollowingIT.java b/x-pack/plugin/ccr/src/internalClusterTest/java/org/elasticsearch/xpack/ccr/IndexFollowingIT.java\nindex d2e769843e3..21e93c0e8ef 100644\n--- a/x-pack/plugin/ccr/src/internalClusterTest/java/org/elasticsearch/xpack/ccr/IndexFollowingIT.java\n+++ b/x-pack/plugin/ccr/src/internalClusterTest/java/org/elasticsearch/xpack/ccr/IndexFollowingIT.java\n\n@@ -264,7 +264,7 @@ public class IndexFollowingIT extends CcrIntegTestCase {\n                 final String field = \"f-\" + between(1, numFields);\n                 leaderClient().prepareIndex(\"index1\").setSource(field, between(0, 1000)).get();\n                 if (rarely()) {\n-                    leaderClient().admin().indices().prepareFlush(\"index1\").setWaitIfOngoing(false).setForce(false).execute();\n+                    leaderClient().admin().indices().prepareFlush(\"index1\").setWaitIfOngoing(false).setForce(false).get();\n                 }\n             }\n         });\n"}}, {"oid": "c59db7ce65d81d21b9e68a7a3e7770baf22d7a57", "url": "https://github.com/elastic/elasticsearch/commit/c59db7ce65d81d21b9e68a7a3e7770baf22d7a57", "message": "Merge branch 'master' into fix-ccr-mapping-test", "committedDate": "2020-08-03T15:35:52Z", "type": "commit"}, {"oid": "a4767f458ed5db2c1b8fd1da011ccfb0f2f94167", "url": "https://github.com/elastic/elasticsearch/commit/a4767f458ed5db2c1b8fd1da011ccfb0f2f94167", "message": "blocking flush", "committedDate": "2020-08-03T15:36:28Z", "type": "commit"}]}