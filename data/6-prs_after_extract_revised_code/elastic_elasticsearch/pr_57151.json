{"pr_number": 57151, "pr_title": "Remove Mapper.updateFieldType()", "pr_createdAt": "2020-05-26T14:43:28Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57151", "timeline": [{"oid": "7982cf7f3ecfac7336f645fc47f7836bd315afb3", "url": "https://github.com/elastic/elasticsearch/commit/7982cf7f3ecfac7336f645fc47f7836bd315afb3", "message": "Remove Mapper.updateFieldType() (#56986)\n\nWhen we had multiple mapping types, an update to a field in one type had to be\npropagated to the same field in all other types. This was done using the\nMapper.updateFieldType() method, called at the end of a merge. However, now\nthat we only have a single type per index, this method is unnecessary and can\nbe removed.\n\nRelates to #41059", "committedDate": "2020-05-26T14:37:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2OTA0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57151#discussion_r430469046", "bodyText": "This was testing dead code - we would never update a mapping against a separate type, because the update mappings code already ensures that all updates use the same type name.", "author": "romseygeek", "createdAt": "2020-05-26T14:45:56Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java", "diffHunk": "@@ -436,106 +436,6 @@ public void testComplexArray() throws Exception {\n                 .endObject().endObject().endObject()), serialize(update));\n     }\n \n-    public void testReuseExistingMappings() throws IOException, Exception {", "originalCommit": "7982cf7f3ecfac7336f645fc47f7836bd315afb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU4ODgwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57151#discussion_r430588801", "bodyText": "It would be good to match what we have on master (it's easier to reason about, and makes backport conflicts less likely). On master we've modified the test to focus on a single type -- we could apply the same change here.", "author": "jtibshirani", "createdAt": "2020-05-26T17:36:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2OTA0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f332d13c7af7243b19303b950f69eb72d0d69961", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java b/server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java\nindex 334ab205015..b349c612dff 100644\n--- a/server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java\n\n@@ -436,6 +433,39 @@ public class DynamicMappingTests extends ESSingleNodeTestCase {\n                 .endObject().endObject().endObject()), serialize(update));\n     }\n \n+    public void testReuseExistingMappings() throws Exception {\n+\n+        IndexService indexService = createIndex(\"test\", Settings.EMPTY, \"type\",\n+            \"my_field1\", \"type=text,store=true\",\n+            \"my_field2\", \"type=integer,store=false\",\n+            \"my_field3\", \"type=long,doc_values=false\",\n+            \"my_field4\", \"type=float,index=false\",\n+            \"my_field5\", \"type=double,store=true\",\n+            \"my_field6\", \"type=date,doc_values=false\",\n+            \"my_field7\", \"type=boolean,doc_values=false\");\n+\n+        // Even if the dynamic type of our new field is long, we already have a mapping for the same field\n+        // of type string so it should be mapped as a string\n+        DocumentMapper newMapper = indexService.mapperService().documentMapperWithAutoCreate(\"type\").getDocumentMapper();\n+        Mapper update = parse(newMapper, indexService.mapperService().documentMapperParser(),\n+            XContentFactory.jsonBuilder().startObject()\n+                .field(\"my_field1\", 42)\n+                .field(\"my_field2\", 43)\n+                .field(\"my_field3\", 44)\n+                .field(\"my_field4\", 45)\n+                .field(\"my_field5\", 46)\n+                .field(\"my_field6\", Instant.now().toEpochMilli())\n+                .field(\"my_field7\", true)\n+                .endObject());\n+        assertNull(update);\n+\n+        MapperParsingException e = expectThrows(MapperParsingException.class, () -> {\n+            parse(newMapper, indexService.mapperService().documentMapperParser(),\n+                XContentFactory.jsonBuilder().startObject().field(\"my_field2\", \"foobar\").endObject());\n+        });\n+        assertThat(e.getMessage(), containsString(\"failed to parse field [my_field2] of type [integer]\"));\n+    }\n+\n     public void testMixTemplateMultiFieldAndMappingReuse() throws Exception {\n         IndexService indexService = createIndex(\"test\");\n         XContentBuilder mappings1 = jsonBuilder().startObject()\n"}}, {"oid": "085ddb40790fec28975ba6ba35a2cc10c76fcf74", "url": "https://github.com/elastic/elasticsearch/commit/085ddb40790fec28975ba6ba35a2cc10c76fcf74", "message": "precommit", "committedDate": "2020-05-26T15:11:21Z", "type": "commit"}, {"oid": "a317831b9d1d20c5efc4d564555e690497cc08cb", "url": "https://github.com/elastic/elasticsearch/commit/a317831b9d1d20c5efc4d564555e690497cc08cb", "message": "aggregator test", "committedDate": "2020-05-26T16:03:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU4MjY4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57151#discussion_r430582682", "bodyText": "Same question here about whether this change is important.", "author": "jtibshirani", "createdAt": "2020-05-26T17:25:43Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "diffHunk": "@@ -559,29 +547,16 @@ static void validateTypeName(String type) {\n         }\n         if (newMapper != null) {\n             this.mapper = newMapper;\n+            this.fieldTypes = fieldTypes;", "originalCommit": "a317831b9d1d20c5efc4d564555e690497cc08cb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f332d13c7af7243b19303b950f69eb72d0d69961", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java\nindex 7358e9e3e17..42eddec756d 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java\n\n@@ -547,10 +550,10 @@ public class MapperService extends AbstractIndexComponent implements Closeable {\n         }\n         if (newMapper != null) {\n             this.mapper = newMapper;\n-            this.fieldTypes = fieldTypes;\n-            this.hasNested = hasNested;\n-            this.fullPathObjectMappers = fullPathObjectMappers;\n         }\n+        this.fieldTypes = fieldTypes;\n+        this.hasNested = hasNested;\n+        this.fullPathObjectMappers = fullPathObjectMappers;\n \n         assert results.values().stream().allMatch(this::assertSerialization);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU4Mzk0OA==", "url": "https://github.com/elastic/elasticsearch/pull/57151#discussion_r430583948", "bodyText": "I'm wondering if this change is important, where we no longer wrap in an unmodifiable map. If not we could restore it to make the PR more targeted/ precise.", "author": "jtibshirani", "createdAt": "2020-05-26T17:27:53Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "diffHunk": "@@ -530,18 +530,6 @@ static void validateTypeName(String type) {\n         }\n         checkIndexSortCompatibility(indexSettings.getIndexSortConfig(), hasNested);\n \n-        if (newMapper != null) {\n-            DocumentMapper updatedDocumentMapper = newMapper.updateFieldType(fieldTypes.fullNameToFieldType);\n-            if (updatedDocumentMapper != newMapper) {\n-                // update both mappers and result\n-                newMapper = updatedDocumentMapper;\n-                results.put(updatedDocumentMapper.type(), updatedDocumentMapper);\n-            }\n-        }\n-\n-        // make structures immutable\n-        results = Collections.unmodifiableMap(results);", "originalCommit": "a317831b9d1d20c5efc4d564555e690497cc08cb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f332d13c7af7243b19303b950f69eb72d0d69961", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java\nindex 7358e9e3e17..42eddec756d 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java\n\n@@ -530,6 +530,9 @@ public class MapperService extends AbstractIndexComponent implements Closeable {\n         }\n         checkIndexSortCompatibility(indexSettings.getIndexSortConfig(), hasNested);\n \n+        // make structures immutable\n+        results = Collections.unmodifiableMap(results);\n+\n         if (reason == MergeReason.MAPPING_UPDATE_PREFLIGHT) {\n             return results;\n         }\n"}}, {"oid": "f332d13c7af7243b19303b950f69eb72d0d69961", "url": "https://github.com/elastic/elasticsearch/commit/f332d13c7af7243b19303b950f69eb72d0d69961", "message": "feedback", "committedDate": "2020-05-26T19:59:36Z", "type": "commit"}]}