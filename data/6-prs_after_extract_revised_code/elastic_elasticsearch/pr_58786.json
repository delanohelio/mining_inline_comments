{"pr_number": 58786, "pr_title": "Re-enable support for array-valued geo_shape fields.", "pr_createdAt": "2020-06-30T21:20:03Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58786", "timeline": [{"oid": "f9a976d01c3b744f886c933e7c44e5ed835150bf", "url": "https://github.com/elastic/elasticsearch/commit/f9a976d01c3b744f886c933e7c44e5ed835150bf", "message": "Re-enable support for array-valued geo_shape fields.\n\nA regression in the mapping code led to geo_shape no longer supporting\narray-valued fields. This commit fixes this support and adds an integration\ntest to make sure this problem does not return!", "committedDate": "2020-06-30T21:16:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5MzQzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/58786#discussion_r447993435", "bodyText": "This test could also instead live in GeoShapeFieldMapperTests, which is closer to a unit test suite. It seems common to test document parsing logic in *FieldMapperTests.", "author": "jtibshirani", "createdAt": "2020-06-30T21:36:21Z", "path": "server/src/internalClusterTest/java/org/elasticsearch/search/geo/GeoShapeIntegrationIT.java", "diffHunk": "@@ -136,6 +136,34 @@ public void testIgnoreMalformed() throws Exception {\n         assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L));\n     }\n \n+    /**\n+     * Test that geo_shape field can parse input as an array of values.\n+     */\n+    public void testArrayOfGeoShapeParsing() throws Exception {", "originalCommit": "f9a976d01c3b744f886c933e7c44e5ed835150bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5NjM3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/58786#discussion_r447996373", "bodyText": "will do!", "author": "talevy", "createdAt": "2020-06-30T21:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5MzQzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ea931afc11b1739816c71879cceb353201165ff", "chunk": "diff --git a/server/src/internalClusterTest/java/org/elasticsearch/search/geo/GeoShapeIntegrationIT.java b/server/src/internalClusterTest/java/org/elasticsearch/search/geo/GeoShapeIntegrationIT.java\nindex 0bf60bdcc1b..1ecc508fb34 100644\n--- a/server/src/internalClusterTest/java/org/elasticsearch/search/geo/GeoShapeIntegrationIT.java\n+++ b/server/src/internalClusterTest/java/org/elasticsearch/search/geo/GeoShapeIntegrationIT.java\n\n@@ -136,34 +136,6 @@ public class GeoShapeIntegrationIT extends ESIntegTestCase {\n         assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L));\n     }\n \n-    /**\n-     * Test that geo_shape field can parse input as an array of values.\n-     */\n-    public void testArrayOfGeoShapeParsing() throws Exception {\n-        // create index\n-        assertAcked(client().admin().indices().prepareCreate(\"test\").setMapping(\"shape\", \"type=geo_shape\").get());\n-        ensureGreen();\n-\n-        // test self crossing ccw poly not crossing dateline\n-        String arrayOfPoints = Strings.toString(XContentFactory.jsonBuilder()\n-            .startObject()\n-            .startArray(\"shape\")\n-                .startObject()\n-                    .field(\"type\", \"Point\")\n-                    .startArray(\"coordinates\").value(176.0).value(15.0).endArray()\n-                .endObject()\n-                .startObject()\n-                    .field(\"type\", \"Point\")\n-                    .startArray(\"coordinates\").value(76.0).value(-15.0).endArray()\n-                .endObject()\n-            .endArray()\n-            .endObject()\n-        );\n-        indexRandom(true, client().prepareIndex(\"test\").setId(\"0\").setSource(arrayOfPoints, XContentType.JSON));\n-        SearchResponse searchResponse = client().prepareSearch(\"test\").setQuery(matchAllQuery()).get();\n-        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L));\n-    }\n-\n     public void testMappingUpdate() throws Exception {\n         // create index\n         assertAcked(client().admin().indices().prepareCreate(\"test\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5NDMyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/58786#discussion_r447994325", "bodyText": "I think we need to remove this override and instead  have GeoPointFieldMapper and PointFieldMapper implement it and return true?", "author": "jtibshirani", "createdAt": "2020-06-30T21:38:22Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -285,7 +285,7 @@ protected void parseCreateField(ParseContext context) throws IOException {\n \n     @Override\n     public final boolean parsesArrayValue() {", "originalCommit": "f9a976d01c3b744f886c933e7c44e5ed835150bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5NjI0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/58786#discussion_r447996243", "bodyText": "woops. jumped on that too fast. you're right", "author": "talevy", "createdAt": "2020-06-30T21:42:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5NDMyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ea931afc11b1739816c71879cceb353201165ff", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java\nindex 1f23f0093ab..50f0c7a8c54 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java\n\n@@ -283,11 +283,6 @@ public abstract class AbstractGeometryFieldMapper<Parsed, Processed> extends Fie\n     protected abstract void addDocValuesFields(String name, Processed geometry, List<IndexableField> fields, ParseContext context);\n     protected abstract void addMultiFields(ParseContext context, Processed geometry) throws IOException;\n \n-    @Override\n-    public final boolean parsesArrayValue() {\n-        return false;\n-    }\n-\n     /** parsing logic for geometry indexing */\n     @Override\n     public void parse(ParseContext context) throws IOException {\n"}}, {"oid": "fbdc79e90e7d8a1c41d24d35cde27dd1920c101d", "url": "https://github.com/elastic/elasticsearch/commit/fbdc79e90e7d8a1c41d24d35cde27dd1920c101d", "message": "Merge remote-tracking branch 'elastic/master' into fixgeoshapearray", "committedDate": "2020-07-01T17:51:44Z", "type": "commit"}, {"oid": "9ea931afc11b1739816c71879cceb353201165ff", "url": "https://github.com/elastic/elasticsearch/commit/9ea931afc11b1739816c71879cceb353201165ff", "message": "move test to unit tests and resolve overriding method", "committedDate": "2020-07-01T21:17:28Z", "type": "commit"}, {"oid": "a2b82d2258dfa181a3f5c30665844c90b01717ff", "url": "https://github.com/elastic/elasticsearch/commit/a2b82d2258dfa181a3f5c30665844c90b01717ff", "message": "fix last minute change", "committedDate": "2020-07-01T22:50:34Z", "type": "commit"}, {"oid": "cdfdb4f3ce36cfad11d9e10e65ee69bdb7ad8994", "url": "https://github.com/elastic/elasticsearch/commit/cdfdb4f3ce36cfad11d9e10e65ee69bdb7ad8994", "message": "add unit tests for geoshape-with-doc-values and legacy", "committedDate": "2020-07-02T15:30:16Z", "type": "commit"}]}