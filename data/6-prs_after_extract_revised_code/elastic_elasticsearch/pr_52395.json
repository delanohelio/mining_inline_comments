{"pr_number": 52395, "pr_title": "Optimize FilterStreamInput for Network Reads", "pr_createdAt": "2020-02-16T14:19:49Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52395", "timeline": [{"oid": "d461333f207befb0c48e030f59344cf4e2d0c641", "url": "https://github.com/elastic/elasticsearch/commit/d461333f207befb0c48e030f59344cf4e2d0c641", "message": "Optimize FilterStreamInput for Network Reads\n\nWhen `FilterStreamInput` wraps a Netty `ByteBuf` based stream it\ndid not forward the bulk primitive reads to the delegate.\nThese are optimized on the delegate but if they're not forwarded\nthen the delegate will be called e.g. 4 times to read an `int`.\nThis happens for essentially all network reads prior to this\nchange because they all run from a `NamedWritableAwareStreamInput`.", "committedDate": "2020-02-16T14:16:10Z", "type": "commit"}, {"oid": "fc7bb78cd97eef42d9a73045f0bd2085094bf4f6", "url": "https://github.com/elastic/elasticsearch/commit/fc7bb78cd97eef42d9a73045f0bd2085094bf4f6", "message": "fix buffer check sum stream", "committedDate": "2020-02-16T15:01:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkwOTkwOA==", "url": "https://github.com/elastic/elasticsearch/pull/52395#discussion_r379909908", "bodyText": "I think even for short this is better than the previous solution. It certainly is when reading from a Netty ByteBuf backed buffer since we save one round of bounds checks.", "author": "original-brownbear", "createdAt": "2020-02-16T15:06:25Z", "path": "server/src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamInput.java", "diffHunk": "@@ -70,6 +70,30 @@ public void readBytes(byte[] b, int offset, int len) throws IOException {\n         digest.update(b, offset, len);\n     }\n \n+    private static final ThreadLocal<byte[]> buffer = ThreadLocal.withInitial(() -> new byte[8]);\n+\n+    @Override\n+    public short readShort() throws IOException {\n+        final byte[] buf = buffer.get();", "originalCommit": "fc7bb78cd97eef42d9a73045f0bd2085094bf4f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8ee9ef54783a0ee916b7219f60c46d5331b9d03", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamInput.java b/server/src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamInput.java\nindex 5440ff3fcbf5..fa37991d82c0 100644\n--- a/server/src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamInput.java\n+++ b/server/src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamInput.java\n\n@@ -91,7 +91,7 @@ public final class BufferedChecksumStreamInput extends FilterStreamInput {\n         final byte[] buf = buffer.get();\n         readBytes(buf, 0, 8);\n         return (((long) (((buf[0] & 0xFF) << 24) | ((buf[1] & 0xFF) << 16) | ((buf[2] & 0xFF) << 8) | (buf[3] & 0xFF))) << 32)\n-            | (((buf[4] & 0xFF) << 24) | ((buf[5] & 0xFF) << 16) | ((buf[6] & 0xFF) << 8) | (buf[7] & 0xFF) & 0xFFFFFFFFL);\n+            | ((((buf[4] & 0xFF) << 24) | ((buf[5] & 0xFF) << 16) | ((buf[6] & 0xFF) << 8) | (buf[7] & 0xFF)) & 0xFFFFFFFFL);\n     }\n \n     @Override\n"}}, {"oid": "c8ee9ef54783a0ee916b7219f60c46d5331b9d03", "url": "https://github.com/elastic/elasticsearch/commit/c8ee9ef54783a0ee916b7219f60c46d5331b9d03", "message": "fix", "committedDate": "2020-02-16T15:12:06Z", "type": "commit"}]}