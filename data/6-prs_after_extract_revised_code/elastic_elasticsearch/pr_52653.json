{"pr_number": 52653, "pr_title": "Allow freezing searchable snapshots", "pr_createdAt": "2020-02-21T17:15:20Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52653", "timeline": [{"oid": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5", "url": "https://github.com/elastic/elasticsearch/commit/2ca67a80b987e9d1a2f58ad75f942e160678e6c5", "message": "Allow freezing searchable snapshots\n\nToday it does not work to freeze an index restored as a searchable snapshot,\nbecause both features try and supply their own `Engine` implementation. However\na searchable snapshot works with both a `ReadOnlyEngine` and a `FrozenEngine`,\nso we can check to see if the searchable snapshot is frozen and, if so, avoid\nsupplying a second `Engine` in that case.", "committedDate": "2020-02-21T17:10:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDI0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r382704247", "bodyText": "Not sure about introducing this string literal here, vs adding a dependency on the frozen-indices module and referring to the setting directly.", "author": "DaveCTurner", "createdAt": "2020-02-21T17:16:20Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -111,7 +111,8 @@ public void onRepositoriesModule(RepositoriesModule repositoriesModule) {\n \n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n-        if (SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY.equals(INDEX_STORE_TYPE_SETTING.get(indexSettings.getSettings()))) {\n+        if (SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY.equals(INDEX_STORE_TYPE_SETTING.get(indexSettings.getSettings()))\n+                && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {", "originalCommit": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExMzg3NA==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r383113874", "bodyText": "I would prefer to avoid the dependency and just use the String literal (we have other such cases in our code base).\nI also wonder if we need to handle closed replicated snapshot indices (i.e. use NoOpEngine for those).", "author": "ywelsch", "createdAt": "2020-02-24T07:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEyMDkyMA==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r385120920", "bodyText": "We already bypass this mechanism for closed indices:\n\n  \n    \n      elasticsearch/server/src/main/java/org/elasticsearch/indices/IndicesService.java\n    \n    \n        Lines 622 to 627\n      in\n      0d1e67d\n    \n    \n    \n    \n\n        \n          \n           private EngineFactory getEngineFactory(final IndexSettings idxSettings) { \n        \n\n        \n          \n               final IndexMetaData indexMetaData = idxSettings.getIndexMetaData(); \n        \n\n        \n          \n               if (indexMetaData != null && indexMetaData.getState() == IndexMetaData.State.CLOSE) { \n        \n\n        \n          \n                   // NoOpEngine takes precedence as long as the index is closed \n        \n\n        \n          \n                   return NoOpEngine::new; \n        \n\n        \n          \n               } \n        \n    \n  \n\n\nI added a test case showing that closing and reopening a searchable snapshot index does work.", "author": "DaveCTurner", "createdAt": "2020-02-27T13:21:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDI0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8e0a73a897b4f27c9ae27f1a59e28d23569f3a49", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\nindex 755453a90d4..9b5b88d7fd8 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n\n@@ -106,7 +106,7 @@ public class SearchableSnapshots extends Plugin implements IndexStorePlugin, Rep\n     @Override\n     public Map<String, DirectoryFactory> getDirectoryFactories() {\n         return Map.of(SearchableSnapshotRepository.SNAPSHOT_DIRECTORY_FACTORY_KEY,\n-            SearchableSnapshotRepository.newDirectoryFactory(repositoriesService::get, cacheService::get));\n+            SearchableSnapshotRepository.newDirectoryFactory(repositoriesService::get, cacheService::get, System::nanoTime));\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDczMA==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r382704730", "bodyText": "Similarly, not sure this is appropriate in terms of dependencies but I figured these interdependencies were ok for tests.", "author": "DaveCTurner", "createdAt": "2020-02-21T17:17:25Z", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java", "diffHunk": "@@ -21,14 +22,17 @@\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.indices.recovery.RecoveryState;\n import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.protocol.xpack.frozen.FreezeRequest;\n import org.elasticsearch.snapshots.SnapshotInfo;\n import org.elasticsearch.test.ESIntegTestCase;\n+import org.elasticsearch.xpack.core.frozen.action.FreezeIndexAction;\n+import org.elasticsearch.xpack.frozen.FrozenIndices;", "originalCommit": "2ca67a80b987e9d1a2f58ad75f942e160678e6c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNDEzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r383114139", "bodyText": "For tests, it's ok I think", "author": "ywelsch", "createdAt": "2020-02-24T07:36:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyNDM1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r383124355", "bodyText": "I think it's OK too, but I'd like to avoid adding too many test conditionals to this test. Maybe we could test this in AbstractSearchableSnapshotsRestTestCase instead?", "author": "tlrx", "createdAt": "2020-02-24T08:13:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExMzU0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r385113543", "bodyText": "Ok, I moved the tests to the REST suite.", "author": "DaveCTurner", "createdAt": "2020-02-27T13:06:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDczMA=="}], "type": "inlineReview", "revised_code": {"commit": "206856afbb63c689dd4639b695a2ef78259456d5", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java b/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java\nindex 76a2ee17ca3..cf4526ba9a8 100644\n--- a/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java\n+++ b/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotsIntegTests.java\n\n@@ -22,10 +22,8 @@ import org.elasticsearch.index.IndexModule;\n import org.elasticsearch.index.IndexSettings;\n import org.elasticsearch.indices.recovery.RecoveryState;\n import org.elasticsearch.plugins.Plugin;\n-import org.elasticsearch.protocol.xpack.frozen.FreezeRequest;\n import org.elasticsearch.snapshots.SnapshotInfo;\n import org.elasticsearch.test.ESIntegTestCase;\n-import org.elasticsearch.xpack.core.frozen.action.FreezeIndexAction;\n import org.elasticsearch.xpack.frozen.FrozenIndices;\n import org.elasticsearch.xpack.searchablesnapshots.cache.CacheService;\n \n"}}, {"oid": "2774b7fb103220e533213817ef627b2c702ef110", "url": "https://github.com/elastic/elasticsearch/commit/2774b7fb103220e533213817ef627b2c702ef110", "message": "Missed by git add", "committedDate": "2020-02-21T17:32:15Z", "type": "commit"}, {"oid": "206856afbb63c689dd4639b695a2ef78259456d5", "url": "https://github.com/elastic/elasticsearch/commit/206856afbb63c689dd4639b695a2ef78259456d5", "message": "Move to  REST tests", "committedDate": "2020-02-27T12:30:38Z", "type": "commit"}, {"oid": "8e0a73a897b4f27c9ae27f1a59e28d23569f3a49", "url": "https://github.com/elastic/elasticsearch/commit/8e0a73a897b4f27c9ae27f1a59e28d23569f3a49", "message": "Merge branch 'feature/searchable-snapshots' into 2020-02-21-freeze-searchable-snapshots", "committedDate": "2020-02-27T12:31:04Z", "type": "commit"}, {"oid": "3f0cca1a69bf14d81ae042efe46605f1c75ed237", "url": "https://github.com/elastic/elasticsearch/commit/3f0cca1a69bf14d81ae042efe46605f1c75ed237", "message": "Revert", "committedDate": "2020-02-27T13:04:55Z", "type": "commit"}, {"oid": "9e3d4bf3774803c19237df7edbd662e7d277b8f7", "url": "https://github.com/elastic/elasticsearch/commit/9e3d4bf3774803c19237df7edbd662e7d277b8f7", "message": "Merge branch 'feature/searchable-snapshots' into 2020-02-21-freeze-searchable-snapshots", "committedDate": "2020-02-27T13:26:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5OTMxMA==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r386299310", "bodyText": "Can you assertOK() this?", "author": "tlrx", "createdAt": "2020-03-02T10:07:25Z", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java", "diffHunk": "@@ -154,6 +127,71 @@ public void testSearchableSnapshots() throws Exception {\n             searchableSnapshotStats.size(), equalTo(numberOfShards));\n     }\n \n+    public void testSearchResults() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, randomFrom(Boolean.TRUE, Boolean.FALSE, null));\n+            }\n+        });\n+    }\n+\n+    public void testSearchResultsWhenFrozen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request freezeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_freeze\");\n+            client().performRequest(freezeRequest);", "originalCommit": "9e3d4bf3774803c19237df7edbd662e7d277b8f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b10dd743e969eb30a7b6699bab2525365ca2184f", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java b/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java\nindex 2639355637e..3449abcab11 100644\n--- a/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java\n+++ b/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java\n\n@@ -138,7 +138,7 @@ public abstract class AbstractSearchableSnapshotsRestTestCase extends ESRestTest\n     public void testSearchResultsWhenFrozen() throws Exception {\n         runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n             final Request freezeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_freeze\");\n-            client().performRequest(freezeRequest);\n+            assertOK(client().performRequest(freezeRequest));\n             ensureGreen(restoredIndexName);\n             for (int i = 0; i < 10; i++) {\n                 assertSearchResults(restoredIndexName, numDocs, Boolean.FALSE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5OTQ4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r386299481", "bodyText": "Can you assertOK() this?", "author": "tlrx", "createdAt": "2020-03-02T10:07:44Z", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java", "diffHunk": "@@ -154,6 +127,71 @@ public void testSearchableSnapshots() throws Exception {\n             searchableSnapshotStats.size(), equalTo(numberOfShards));\n     }\n \n+    public void testSearchResults() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, randomFrom(Boolean.TRUE, Boolean.FALSE, null));\n+            }\n+        });\n+    }\n+\n+    public void testSearchResultsWhenFrozen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request freezeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_freeze\");\n+            client().performRequest(freezeRequest);\n+            ensureGreen(restoredIndexName);\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, Boolean.FALSE);\n+            }\n+        });\n+    }\n+\n+    public void testCloseAndReopen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request closeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_close\");\n+            client().performRequest(closeRequest);", "originalCommit": "9e3d4bf3774803c19237df7edbd662e7d277b8f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b10dd743e969eb30a7b6699bab2525365ca2184f", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java b/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java\nindex 2639355637e..3449abcab11 100644\n--- a/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java\n+++ b/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java\n\n@@ -138,7 +138,7 @@ public abstract class AbstractSearchableSnapshotsRestTestCase extends ESRestTest\n     public void testSearchResultsWhenFrozen() throws Exception {\n         runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n             final Request freezeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_freeze\");\n-            client().performRequest(freezeRequest);\n+            assertOK(client().performRequest(freezeRequest));\n             ensureGreen(restoredIndexName);\n             for (int i = 0; i < 10; i++) {\n                 assertSearchResults(restoredIndexName, numDocs, Boolean.FALSE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5OTUyMA==", "url": "https://github.com/elastic/elasticsearch/pull/52653#discussion_r386299520", "bodyText": "Can you assertOK() this?", "author": "tlrx", "createdAt": "2020-03-02T10:07:48Z", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java", "diffHunk": "@@ -154,6 +127,71 @@ public void testSearchableSnapshots() throws Exception {\n             searchableSnapshotStats.size(), equalTo(numberOfShards));\n     }\n \n+    public void testSearchResults() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, randomFrom(Boolean.TRUE, Boolean.FALSE, null));\n+            }\n+        });\n+    }\n+\n+    public void testSearchResultsWhenFrozen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request freezeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_freeze\");\n+            client().performRequest(freezeRequest);\n+            ensureGreen(restoredIndexName);\n+            for (int i = 0; i < 10; i++) {\n+                assertSearchResults(restoredIndexName, numDocs, Boolean.FALSE);\n+            }\n+        });\n+    }\n+\n+    public void testCloseAndReopen() throws Exception {\n+        runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n+            final Request closeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_close\");\n+            client().performRequest(closeRequest);\n+            ensureGreen(restoredIndexName);\n+\n+            final Request openRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_open\");\n+            client().performRequest(openRequest);", "originalCommit": "9e3d4bf3774803c19237df7edbd662e7d277b8f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b10dd743e969eb30a7b6699bab2525365ca2184f", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java b/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java\nindex 2639355637e..3449abcab11 100644\n--- a/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java\n+++ b/x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/xpack/searchablesnapshots/AbstractSearchableSnapshotsRestTestCase.java\n\n@@ -138,7 +138,7 @@ public abstract class AbstractSearchableSnapshotsRestTestCase extends ESRestTest\n     public void testSearchResultsWhenFrozen() throws Exception {\n         runSearchableSnapshotsTest((restoredIndexName, numDocs) -> {\n             final Request freezeRequest = new Request(HttpPost.METHOD_NAME, restoredIndexName + \"/_freeze\");\n-            client().performRequest(freezeRequest);\n+            assertOK(client().performRequest(freezeRequest));\n             ensureGreen(restoredIndexName);\n             for (int i = 0; i < 10; i++) {\n                 assertSearchResults(restoredIndexName, numDocs, Boolean.FALSE);\n"}}, {"oid": "b10dd743e969eb30a7b6699bab2525365ca2184f", "url": "https://github.com/elastic/elasticsearch/commit/b10dd743e969eb30a7b6699bab2525365ca2184f", "message": "AssertOK", "committedDate": "2020-03-02T10:15:38Z", "type": "commit"}, {"oid": "bc85c2549b91d244ae22b54d01baf30b07c3c114", "url": "https://github.com/elastic/elasticsearch/commit/bc85c2549b91d244ae22b54d01baf30b07c3c114", "message": "Merge branch 'feature/searchable-snapshots' into 2020-02-21-freeze-searchable-snapshots", "committedDate": "2020-03-02T10:47:20Z", "type": "commit"}]}