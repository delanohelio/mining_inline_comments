{"pr_number": 66836, "pr_title": "Fix testIncorrectPasswordHashingAlgorithm", "pr_createdAt": "2020-12-28T16:15:04Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66836", "timeline": [{"oid": "530c4d6b7866c836c541398009736a654cf6c159", "url": "https://github.com/elastic/elasticsearch/commit/530c4d6b7866c836c541398009736a654cf6c159", "message": "Fix testIncorrectPasswordHashingAlgorithm\n\nthat the hasher selected for hashing in the beginning of the tests is\nnot the same that is set in passwordHashingSettings for the test to\nmake sense.\n\nResolve: #66824", "committedDate": "2020-12-28T16:05:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwNDM0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66836#discussion_r549404347", "bodyText": "These still can be the same as the one returned by getFastHashingAlgorithmForTest. We need to use a randomFrom in both places with different contents", "author": "jkakavas", "createdAt": "2020-12-28T16:20:01Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportChangePasswordActionTests.java", "diffHunk": "@@ -169,7 +169,7 @@ public void testIncorrectPasswordHashingAlgorithm() {\n         TransportService transportService = new TransportService(Settings.EMPTY, mock(Transport.class), null,\n             TransportService.NOOP_TRANSPORT_INTERCEPTOR, x -> null, null, Collections.emptySet());\n         Settings passwordHashingSettings = Settings.builder().put(XPackSettings.PASSWORD_HASHING_ALGORITHM.getKey(),\n-            randomFrom(\"pbkdf2_50000\", \"pbkdf2_100000\", \"bcrypt11\", \"bcrypt8\", \"bcrypt\")).build();\n+            randomFrom(\"pbkdf2_50000\", \"pbkdf2_100000\", \"bcrypt11\", \"bcrypt8\", \"bcrypt4\")).build();", "originalCommit": "530c4d6b7866c836c541398009736a654cf6c159", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwNjM2NA==", "url": "https://github.com/elastic/elasticsearch/pull/66836#discussion_r549406364", "bodyText": "I take the comment back:) still leave this up to Yang but I think we should use two randomFrom either way to make sure this won't fail if we ever  change the implementation of getFastHashingAlgorithmForTest", "author": "jkakavas", "createdAt": "2020-12-28T16:26:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwNDM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1NjUyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66836#discussion_r549556529", "bodyText": "Or randomOtherThan ? (drive by comment, I haven't checked the underlying logic)", "author": "tvernum", "createdAt": "2020-12-29T03:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwNDM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU3ODkzNA==", "url": "https://github.com/elastic/elasticsearch/pull/66836#discussion_r549578934", "bodyText": "I've looked now.\nI'd propose:\n        final String systemHash = randomValueOtherThan(\n            hasher.name().toLowerCase(Locale.ROOT),\n            () -> randomFrom(\"pbkdf2_50000\", \"pbkdf2_100000\", \"bcrypt11\", \"bcrypt8\", \"bcrypt\"));\n        Settings passwordHashingSettings = Settings.builder().put(XPackSettings.PASSWORD_HASHING_ALGORITHM.getKey(), systemHash).build();", "author": "tvernum", "createdAt": "2020-12-29T06:02:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwNDM0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "faba91a5603b75076e37c71488c2b1f3cb58173f", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportChangePasswordActionTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportChangePasswordActionTests.java\nindex 1e3396f0f4c..8071ededf0c 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportChangePasswordActionTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/TransportChangePasswordActionTests.java\n\n@@ -168,8 +169,10 @@ public class TransportChangePasswordActionTests extends ESTestCase {\n         final AtomicReference<ActionResponse.Empty> responseRef = new AtomicReference<>();\n         TransportService transportService = new TransportService(Settings.EMPTY, mock(Transport.class), null,\n             TransportService.NOOP_TRANSPORT_INTERCEPTOR, x -> null, null, Collections.emptySet());\n-        Settings passwordHashingSettings = Settings.builder().put(XPackSettings.PASSWORD_HASHING_ALGORITHM.getKey(),\n-            randomFrom(\"pbkdf2_50000\", \"pbkdf2_100000\", \"bcrypt11\", \"bcrypt8\", \"bcrypt4\")).build();\n+        final String systemHash = randomValueOtherThan(\n+            hasher.name().toLowerCase(Locale.ROOT),\n+            () -> randomFrom(\"pbkdf2_50000\", \"pbkdf2_100000\", \"bcrypt11\", \"bcrypt8\", \"bcrypt\"));\n+        Settings passwordHashingSettings = Settings.builder().put(XPackSettings.PASSWORD_HASHING_ALGORITHM.getKey(), systemHash).build();\n         TransportChangePasswordAction action = new TransportChangePasswordAction(passwordHashingSettings, transportService,\n             mock(ActionFilters.class), usersStore);\n         action.doExecute(mock(Task.class), request, new ActionListener<>() {\n"}}, {"oid": "faba91a5603b75076e37c71488c2b1f3cb58173f", "url": "https://github.com/elastic/elasticsearch/commit/faba91a5603b75076e37c71488c2b1f3cb58173f", "message": "Fix testIncorrectPasswordHashingAlgorithm\n\nChanging to use randomOtherThan instead\n\nResolve: #66824", "committedDate": "2020-12-29T08:37:56Z", "type": "commit"}]}