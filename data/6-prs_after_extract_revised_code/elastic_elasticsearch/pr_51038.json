{"pr_number": 51038, "pr_title": "Block too many concurrent mapping updates", "pr_createdAt": "2020-01-15T12:42:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51038", "timeline": [{"oid": "15fb96d35f687cc1988e63d68461745d7d2f3af6", "url": "https://github.com/elastic/elasticsearch/commit/15fb96d35f687cc1988e63d68461745d7d2f3af6", "message": "Block too many concurrent mapping updates", "committedDate": "2020-01-15T12:34:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg2NjQ4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51038#discussion_r366866482", "bodyText": "Sadly, this changes exception handling to renotify onFailure if onResponse fails. Not sure if it is important here, but I would opt to keep the explicit listener until #50886 is merged.", "author": "henningandersen", "createdAt": "2020-01-15T13:11:04Z", "path": "server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java", "diffHunk": "@@ -68,18 +81,62 @@ public void setClient(Client client) {\n      * potentially waiting for a master node to be available.\n      */\n     public void updateMappingOnMaster(Index index, Mapping mappingUpdate, ActionListener<Void> listener) {\n+        final RunOnce release = new RunOnce(() -> semaphore.release());\n+        try {\n+            semaphore.acquire();\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            listener.onFailure(e);\n+            return;\n+        }\n+        boolean successFullySent = false;\n+        try {\n+            sendUpdateMapping(index, mappingUpdate, ActionListener.runBefore(listener, release::run));\n+            successFullySent = true;\n+        } finally {\n+            if (successFullySent == false) {\n+                release.run();\n+            }\n+        }\n+    }\n+\n+    // used by tests\n+    int blockedThreads() {\n+        return semaphore.getQueueLength();\n+    }\n+\n+    // can be overridden by tests\n+    protected void sendUpdateMapping(Index index, Mapping mappingUpdate, ActionListener<Void> listener) {\n         client.preparePutMapping().setConcreteIndex(index).setSource(mappingUpdate.toString(), XContentType.JSON)\n             .setMasterNodeTimeout(dynamicMappingUpdateTimeout).setTimeout(TimeValue.ZERO)\n-            .execute(new ActionListener<>() {\n-                @Override\n-                public void onResponse(AcknowledgedResponse acknowledgedResponse) {\n-                    listener.onResponse(null);\n-                }\n+            .execute(ActionListener.map(listener, resp -> null));", "originalCommit": "15fb96d35f687cc1988e63d68461745d7d2f3af6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1bb6533083b138801e5506872a35bfe6e9e6d6a0", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java b/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java\nindex 817fdba9022..f1051bca36c 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java\n\n@@ -109,7 +110,17 @@ public class MappingUpdatedAction {\n     protected void sendUpdateMapping(Index index, Mapping mappingUpdate, ActionListener<Void> listener) {\n         client.preparePutMapping().setConcreteIndex(index).setSource(mappingUpdate.toString(), XContentType.JSON)\n             .setMasterNodeTimeout(dynamicMappingUpdateTimeout).setTimeout(TimeValue.ZERO)\n-            .execute(ActionListener.map(listener, resp -> null));\n+            .execute(new ActionListener<>() {\n+                @Override\n+                public void onResponse(AcknowledgedResponse acknowledgedResponse) {\n+                    listener.onResponse(null);\n+                }\n+\n+                @Override\n+                public void onFailure(Exception e) {\n+                    listener.onFailure(e);\n+                }\n+            });\n     }\n \n     static class AdjustableSemaphore extends Semaphore {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg2NzczNQ==", "url": "https://github.com/elastic/elasticsearch/pull/51038#discussion_r366867735", "bodyText": "nit: I think this comment is unnecessary (but feel free to leave it in)", "author": "henningandersen", "createdAt": "2020-01-15T13:14:00Z", "path": "server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java", "diffHunk": "@@ -68,18 +81,62 @@ public void setClient(Client client) {\n      * potentially waiting for a master node to be available.\n      */\n     public void updateMappingOnMaster(Index index, Mapping mappingUpdate, ActionListener<Void> listener) {\n+        final RunOnce release = new RunOnce(() -> semaphore.release());\n+        try {\n+            semaphore.acquire();\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            listener.onFailure(e);\n+            return;\n+        }\n+        boolean successFullySent = false;\n+        try {\n+            sendUpdateMapping(index, mappingUpdate, ActionListener.runBefore(listener, release::run));\n+            successFullySent = true;\n+        } finally {\n+            if (successFullySent == false) {\n+                release.run();\n+            }\n+        }\n+    }\n+\n+    // used by tests\n+    int blockedThreads() {\n+        return semaphore.getQueueLength();\n+    }\n+\n+    // can be overridden by tests\n+    protected void sendUpdateMapping(Index index, Mapping mappingUpdate, ActionListener<Void> listener) {\n         client.preparePutMapping().setConcreteIndex(index).setSource(mappingUpdate.toString(), XContentType.JSON)\n             .setMasterNodeTimeout(dynamicMappingUpdateTimeout).setTimeout(TimeValue.ZERO)\n-            .execute(new ActionListener<>() {\n-                @Override\n-                public void onResponse(AcknowledgedResponse acknowledgedResponse) {\n-                    listener.onResponse(null);\n-                }\n+            .execute(ActionListener.map(listener, resp -> null));\n+    }\n+\n+    static class AdjustableSemaphore extends Semaphore {\n \n-                @Override\n-                public void onFailure(Exception e) {\n-                    listener.onFailure(e);\n+        private final Object maxPermitsMutex = new Object();\n+        private int maxPermits;\n+\n+        // sets the number of initial maximum permits", "originalCommit": "15fb96d35f687cc1988e63d68461745d7d2f3af6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1bb6533083b138801e5506872a35bfe6e9e6d6a0", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java b/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java\nindex 817fdba9022..f1051bca36c 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java\n\n@@ -109,7 +110,17 @@ public class MappingUpdatedAction {\n     protected void sendUpdateMapping(Index index, Mapping mappingUpdate, ActionListener<Void> listener) {\n         client.preparePutMapping().setConcreteIndex(index).setSource(mappingUpdate.toString(), XContentType.JSON)\n             .setMasterNodeTimeout(dynamicMappingUpdateTimeout).setTimeout(TimeValue.ZERO)\n-            .execute(ActionListener.map(listener, resp -> null));\n+            .execute(new ActionListener<>() {\n+                @Override\n+                public void onResponse(AcknowledgedResponse acknowledgedResponse) {\n+                    listener.onResponse(null);\n+                }\n+\n+                @Override\n+                public void onFailure(Exception e) {\n+                    listener.onFailure(e);\n+                }\n+            });\n     }\n \n     static class AdjustableSemaphore extends Semaphore {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg2NzgwOA==", "url": "https://github.com/elastic/elasticsearch/pull/51038#discussion_r366867808", "bodyText": "nit: I think this comment is unnecessary (but feel free to leave it in)", "author": "henningandersen", "createdAt": "2020-01-15T13:14:12Z", "path": "server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java", "diffHunk": "@@ -68,18 +81,62 @@ public void setClient(Client client) {\n      * potentially waiting for a master node to be available.\n      */\n     public void updateMappingOnMaster(Index index, Mapping mappingUpdate, ActionListener<Void> listener) {\n+        final RunOnce release = new RunOnce(() -> semaphore.release());\n+        try {\n+            semaphore.acquire();\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            listener.onFailure(e);\n+            return;\n+        }\n+        boolean successFullySent = false;\n+        try {\n+            sendUpdateMapping(index, mappingUpdate, ActionListener.runBefore(listener, release::run));\n+            successFullySent = true;\n+        } finally {\n+            if (successFullySent == false) {\n+                release.run();\n+            }\n+        }\n+    }\n+\n+    // used by tests\n+    int blockedThreads() {\n+        return semaphore.getQueueLength();\n+    }\n+\n+    // can be overridden by tests\n+    protected void sendUpdateMapping(Index index, Mapping mappingUpdate, ActionListener<Void> listener) {\n         client.preparePutMapping().setConcreteIndex(index).setSource(mappingUpdate.toString(), XContentType.JSON)\n             .setMasterNodeTimeout(dynamicMappingUpdateTimeout).setTimeout(TimeValue.ZERO)\n-            .execute(new ActionListener<>() {\n-                @Override\n-                public void onResponse(AcknowledgedResponse acknowledgedResponse) {\n-                    listener.onResponse(null);\n-                }\n+            .execute(ActionListener.map(listener, resp -> null));\n+    }\n+\n+    static class AdjustableSemaphore extends Semaphore {\n \n-                @Override\n-                public void onFailure(Exception e) {\n-                    listener.onFailure(e);\n+        private final Object maxPermitsMutex = new Object();\n+        private int maxPermits;\n+\n+        // sets the number of initial maximum permits\n+        AdjustableSemaphore(int maxPermits, boolean fair) {\n+            super(maxPermits, fair);\n+            this.maxPermits = maxPermits;\n+        }\n+\n+        // adjust the number of maximum permits", "originalCommit": "15fb96d35f687cc1988e63d68461745d7d2f3af6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1bb6533083b138801e5506872a35bfe6e9e6d6a0", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java b/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java\nindex 817fdba9022..f1051bca36c 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java\n\n@@ -109,7 +110,17 @@ public class MappingUpdatedAction {\n     protected void sendUpdateMapping(Index index, Mapping mappingUpdate, ActionListener<Void> listener) {\n         client.preparePutMapping().setConcreteIndex(index).setSource(mappingUpdate.toString(), XContentType.JSON)\n             .setMasterNodeTimeout(dynamicMappingUpdateTimeout).setTimeout(TimeValue.ZERO)\n-            .execute(ActionListener.map(listener, resp -> null));\n+            .execute(new ActionListener<>() {\n+                @Override\n+                public void onResponse(AcknowledgedResponse acknowledgedResponse) {\n+                    listener.onResponse(null);\n+                }\n+\n+                @Override\n+                public void onFailure(Exception e) {\n+                    listener.onFailure(e);\n+                }\n+            });\n     }\n \n     static class AdjustableSemaphore extends Semaphore {\n"}}, {"oid": "1bb6533083b138801e5506872a35bfe6e9e6d6a0", "url": "https://github.com/elastic/elasticsearch/commit/1bb6533083b138801e5506872a35bfe6e9e6d6a0", "message": "review comments", "committedDate": "2020-01-15T13:56:26Z", "type": "commit"}, {"oid": "c4ebd1f8834b25e49e3a07ab2d0059e80ea5f406", "url": "https://github.com/elastic/elasticsearch/commit/c4ebd1f8834b25e49e3a07ab2d0059e80ea5f406", "message": "fix test", "committedDate": "2020-01-15T13:56:34Z", "type": "commit"}]}