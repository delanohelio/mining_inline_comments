{"pr_number": 59959, "pr_title": "Cleanup and optimize More Serialization Spots", "pr_createdAt": "2020-07-21T11:00:24Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59959", "timeline": [{"oid": "8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3", "url": "https://github.com/elastic/elasticsearch/commit/8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3", "message": "Cleanup and optimize More Serialization Spots\n\nSame as #59626 for a few more spots.", "committedDate": "2020-07-21T10:58:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NDEyMg==", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458394122", "bodyText": "Since i is typically an integer, maybe use mapIn or something like that?", "author": "rjernst", "createdAt": "2020-07-21T21:18:55Z", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsResponse.java", "diffHunk": "@@ -61,23 +60,18 @@\n \n     GetFieldMappingsResponse(StreamInput in) throws IOException {\n         super(in);\n-        int size = in.readVInt();\n-        Map<String, Map<String, FieldMappingMetadata>> indexMapBuilder = new HashMap<>(size);\n-        for (int i = 0; i < size; i++) {\n-            String index = in.readString();\n-            if (in.getVersion().before(Version.V_8_0_0)) {\n-                int typesSize = in.readVInt();\n+        mappings = unmodifiableMap(in.readMap(StreamInput::readString, i -> {", "originalCommit": "8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNzYwNA==", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458607604", "bodyText": "Makes sense, renamed :)", "author": "original-brownbear", "createdAt": "2020-07-22T07:59:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NDEyMg=="}], "type": "inlineReview", "revised_code": {"commit": "bf77da242db2784b3d592796c250b41bb458489e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsResponse.java b/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsResponse.java\nindex 8053b78fd14..647766d27c8 100644\n--- a/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsResponse.java\n+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsResponse.java\n\n@@ -60,17 +60,17 @@ public class GetFieldMappingsResponse extends ActionResponse implements ToXConte\n \n     GetFieldMappingsResponse(StreamInput in) throws IOException {\n         super(in);\n-        mappings = unmodifiableMap(in.readMap(StreamInput::readString, i -> {\n-            if (i.getVersion().before(Version.V_8_0_0)) {\n-                int typesSize = i.readVInt();\n+        mappings = unmodifiableMap(in.readMap(StreamInput::readString, mapIn -> {\n+            if (mapIn.getVersion().before(Version.V_8_0_0)) {\n+                int typesSize = mapIn.readVInt();\n                 assert typesSize == 1 || typesSize == 0 : \"Expected 0 or 1 types but got \" + typesSize;\n                 if (typesSize == 0) {\n                     return Collections.emptyMap();\n                 }\n-                i.readString(); // type\n+                mapIn.readString(); // type\n             }\n-            return unmodifiableMap(\n-                    i.readMap(StreamInput::readString, inpt -> new FieldMappingMetadata(inpt.readString(), inpt.readBytesReference())));\n+            return unmodifiableMap(mapIn.readMap(StreamInput::readString,\n+                    inpt -> new FieldMappingMetadata(inpt.readString(), inpt.readBytesReference())));\n         }));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NTE4MA==", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458395180", "bodyText": "Since this PR is labeled to be backported to 7.10, shouldn't we keep this as is so the backport is easy, and cleanup in a separate change just for master?", "author": "rjernst", "createdAt": "2020-07-21T21:21:02Z", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java", "diffHunk": "@@ -213,21 +211,16 @@ public int compareTo(StoreStatus other) {\n      * Single node failure while retrieving shard store information\n      */\n     public static class Failure extends DefaultShardOperationFailedException {\n-        private String nodeId;\n+        private final String nodeId;\n \n         public Failure(String nodeId, String index, int shardId, Throwable reason) {\n             super(index, shardId, reason);\n             this.nodeId = nodeId;\n         }\n \n         private Failure(StreamInput in) throws IOException {\n-            if (in.getVersion().before(Version.V_7_4_0)) {", "originalCommit": "8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNzkwMw==", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458607903", "bodyText": "Makes sense, less noisy I'll batch this with a few other cleanups of outdated version handling in master soon :)", "author": "original-brownbear", "createdAt": "2020-07-22T08:00:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NTE4MA=="}], "type": "inlineReview", "revised_code": {"commit": "bf77da242db2784b3d592796c250b41bb458489e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java b/server/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java\nindex ae589a62728..e38ca159d0a 100644\n--- a/server/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java\n+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java\n\n@@ -211,7 +212,7 @@ public class IndicesShardStoresResponse extends ActionResponse implements ToXCon\n      * Single node failure while retrieving shard store information\n      */\n     public static class Failure extends DefaultShardOperationFailedException {\n-        private final String nodeId;\n+        private String nodeId;\n \n         public Failure(String nodeId, String index, int shardId, Throwable reason) {\n             super(index, shardId, reason);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NTkzOA==", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r458395938", "bodyText": "ditto on making this change in a dedicated PR for master only", "author": "rjernst", "createdAt": "2020-07-21T21:22:35Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java", "diffHunk": "@@ -950,9 +950,7 @@ public void writeTo(StreamOutput out) throws IOException {\n         coordinationMetadata.writeTo(out);\n         writeSettingsToStream(transientSettings, out);\n         writeSettingsToStream(persistentSettings, out);\n-        if (out.getVersion().onOrAfter(Version.V_7_3_0)) {", "originalCommit": "8b7ec6d59ce4b0c36120fc8321805dcc4cb4d5e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bf77da242db2784b3d592796c250b41bb458489e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java b/server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java\nindex 0bedec7180d..bf71d7d3b49 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/Metadata.java\n\n@@ -950,7 +950,9 @@ public class Metadata implements Iterable<IndexMetadata>, Diffable<Metadata>, To\n         coordinationMetadata.writeTo(out);\n         writeSettingsToStream(transientSettings, out);\n         writeSettingsToStream(persistentSettings, out);\n-        hashesOfConsistentSettings.writeTo(out);\n+        if (out.getVersion().onOrAfter(Version.V_7_3_0)) {\n+            hashesOfConsistentSettings.writeTo(out);\n+        }\n         out.writeVInt(indices.size());\n         for (IndexMetadata indexMetadata : this) {\n             indexMetadata.writeTo(out);\n"}}, {"oid": "30a9b158d32c9b14939ab8b3ab985b025a82c604", "url": "https://github.com/elastic/elasticsearch/commit/30a9b158d32c9b14939ab8b3ab985b025a82c604", "message": "Merge remote-tracking branch 'elastic/master' into cleanup-some-serialization-3", "committedDate": "2020-07-22T07:37:46Z", "type": "commit"}, {"oid": "bf77da242db2784b3d592796c250b41bb458489e", "url": "https://github.com/elastic/elasticsearch/commit/bf77da242db2784b3d592796c250b41bb458489e", "message": "CR: comments", "committedDate": "2020-07-22T07:58:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczNDg5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r461734892", "bodyText": "Maybe this should exist in MappingMetadata, rather than a random response class?", "author": "rjernst", "createdAt": "2020-07-28T17:02:28Z", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsResponse.java", "diffHunk": "@@ -69,6 +69,10 @@ public GetMappingsResponse(ImmutableOpenMap<String, MappingMetadata> mappings) {\n \n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n+        writeMappingMetadata(out, mappings);\n+    }\n+\n+    public static void writeMappingMetadata(StreamOutput out, ImmutableOpenMap<String, MappingMetadata> mappings) throws IOException {", "originalCommit": "bf77da242db2784b3d592796c250b41bb458489e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MjM1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/59959#discussion_r461792351", "bodyText": "++", "author": "original-brownbear", "createdAt": "2020-07-28T18:39:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczNDg5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "254cca8a7c3600b391e458eb140f118ab3ae3402", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsResponse.java b/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsResponse.java\nindex 91dda4cde6d..c1470060b5e 100644\n--- a/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsResponse.java\n+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsResponse.java\n\n@@ -69,23 +69,7 @@ public class GetMappingsResponse extends ActionResponse implements ToXContentFra\n \n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n-        writeMappingMetadata(out, mappings);\n-    }\n-\n-    public static void writeMappingMetadata(StreamOutput out, ImmutableOpenMap<String, MappingMetadata> mappings) throws IOException {\n-        out.writeMap(mappings, StreamOutput::writeString, out.getVersion().before(Version.V_8_0_0) ? (o, v) -> {\n-                    o.writeVInt(v == MappingMetadata.EMPTY_MAPPINGS ? 0 : 1);\n-                    if (v != MappingMetadata.EMPTY_MAPPINGS) {\n-                        o.writeString(MapperService.SINGLE_MAPPING_NAME);\n-                        v.writeTo(o);\n-                    }\n-                } : (o, v) -> {\n-                    o.writeBoolean(v != MappingMetadata.EMPTY_MAPPINGS);\n-                    if (v != MappingMetadata.EMPTY_MAPPINGS) {\n-                        v.writeTo(o);\n-                    }\n-                }\n-        );\n+        MappingMetadata.writeMappingMetadata(out, mappings);\n     }\n \n     @Override\n"}}, {"oid": "355223c0dced77b4b170beb9d797ae85fd35aa7b", "url": "https://github.com/elastic/elasticsearch/commit/355223c0dced77b4b170beb9d797ae85fd35aa7b", "message": "Merge remote-tracking branch 'elastic/master' into cleanup-some-serialization-3", "committedDate": "2020-07-28T17:43:13Z", "type": "commit"}, {"oid": "254cca8a7c3600b391e458eb140f118ab3ae3402", "url": "https://github.com/elastic/elasticsearch/commit/254cca8a7c3600b391e458eb140f118ab3ae3402", "message": "move things around", "committedDate": "2020-07-28T17:47:53Z", "type": "commit"}]}