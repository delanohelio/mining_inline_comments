{"pr_number": 65925, "pr_title": "Expose timestamp field type on coordinator node", "pr_createdAt": "2020-12-07T07:46:48Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65925", "timeline": [{"oid": "8b25ecb72a378ec62e3900e70cb0a821ba83e717", "url": "https://github.com/elastic/elasticsearch/commit/8b25ecb72a378ec62e3900e70cb0a821ba83e717", "message": "Expose timestamp field type on coordinator node (#65873)\n\nToday a coordinating node does not have (easy) access to the mappings\nfor the indices for the searches it wishes to coordinate. This means it\ncan't properly interpret a timestamp range filter in a query and must\ninvolve a copy of every shard in at least the `can_match` phase. It\ntherefore cannot cope with cases when shards are temporarily not started\neven if those shards are irrelevant to the search.\n\nThis commit captures the mapping of the `@timestamp` field for indices\nwhich expose a timestamp range in their index metadata.", "committedDate": "2020-12-07T07:44:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI5MzkyMA==", "url": "https://github.com/elastic/elasticsearch/pull/65925#discussion_r537293920", "bodyText": "@pgomulka I've asked for you to take a look at this backport because this test is having trouble with locales and older JDK versions and I think you have expertise in this area. As far as I can tell, the behaviour difference is in JDK8, hence this line, but it'd be good if you could give it a quick look and see if there are any other gotchas here. I'm ok with skipping the check that we parse the non-English string in JDK8, it's not really the point of this PR it's just a good way to test it.\nThe rest of the PR is already reviewed, it's just this one test that needs attention.", "author": "DaveCTurner", "createdAt": "2020-12-07T07:49:37Z", "path": "x-pack/plugin/frozen-indices/src/internalClusterTest/java/org/elasticsearch/index/engine/FrozenIndexIT.java", "diffHunk": "@@ -97,4 +103,73 @@ public void testTimestampRangeRecalculatedOnStalePrimaryAllocation() throws IOEx\n         assertThat(timestampFieldRange.getMax(), equalTo(Instant.parse(\"2010-01-06T02:03:04.567Z\").getMillis()));\n     }\n \n+    public void testTimestampFieldTypeExposedByAllIndicesServices() throws Exception {\n+        internalCluster().startNodes(between(2, 4));\n+\n+        final String locale;\n+        final String date;\n+\n+        final boolean isJdk8 = JavaVersion.current().getVersion().get(0) == 8; // JDK8 doesn't reliably know French", "originalCommit": "8b25ecb72a378ec62e3900e70cb0a821ba83e717", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM3MjcxMg==", "url": "https://github.com/elastic/elasticsearch/pull/65925#discussion_r537372712", "bodyText": "things to bear in mind is what locales are supported with -Dlocale.providers=COMPAT in newer jdks. French is a safe choice. For instance here https://www.oracle.com/java/technologies/javase/java9locales.html see The locales supported by the COMPAT provider are as follows.\nI think it should be ok to use jdk8 same way as jkd9+. If it fails we could look into a reproduction line.\nBut also agree comparing jdk behaviour is not the point of this test .", "author": "pgomulka", "createdAt": "2020-12-07T09:56:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI5MzkyMA=="}], "type": "inlineReview", "revised_code": null}]}