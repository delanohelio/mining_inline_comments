{"pr_number": 59816, "pr_title": "Remaining queries for long script field", "pr_createdAt": "2020-07-17T21:26:17Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59816", "timeline": [{"oid": "fe19bfbff58571100abae9797369dbc32d8927df", "url": "https://github.com/elastic/elasticsearch/commit/fe19bfbff58571100abae9797369dbc32d8927df", "message": "Remaining queries for long script field\n\nAdds the `terms` and `range` queries for `long` typed `script` fields.\nIt also fixes a bug in a few of `toString` tests for `keyword` typed\n`script` fields.", "committedDate": "2020-07-17T21:22:50Z", "type": "commit"}, {"oid": "462e937dcdf0c5c2575a2491ac4a9ab4dbbe19ff", "url": "https://github.com/elastic/elasticsearch/commit/462e937dcdf0c5c2575a2491ac4a9ab4dbbe19ff", "message": "Ooops", "committedDate": "2020-07-17T21:44:52Z", "type": "commit"}, {"oid": "1f8bbf38f7fdb9a5f8c076a2759636d5fca819af", "url": "https://github.com/elastic/elasticsearch/commit/1f8bbf38f7fdb9a5f8c076a2759636d5fca819af", "message": "oops", "committedDate": "2020-07-20T13:55:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwNjcwMg==", "url": "https://github.com/elastic/elasticsearch/pull/59816#discussion_r457406702", "bodyText": "functions are cool, but couldn't we have a shared method that does the boiler-plate range conversion, which is called when creating the lucene query?", "author": "javanna", "createdAt": "2020-07-20T13:54:54Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/NumberFieldMapper.java", "diffHunk": "@@ -906,6 +880,51 @@ public static long objectToLong(Object value, boolean coerce) {\n             String stringValue = (value instanceof BytesRef) ? ((BytesRef) value).utf8ToString() : value.toString();\n             return Numbers.toLong(stringValue, coerce);\n         }\n+\n+        @FunctionalInterface\n+        public interface RangeQueryBuilder {", "originalCommit": "462e937dcdf0c5c2575a2491ac4a9ab4dbbe19ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwNzU1MA==", "url": "https://github.com/elastic/elasticsearch/pull/59816#discussion_r457407550", "bodyText": "potentially, that could even be pushed upstream? I would love to not have changes to this mapper as part of the feature branch, if possible.", "author": "javanna", "createdAt": "2020-07-20T13:55:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwNjcwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQxMzk0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59816#discussion_r457413942", "bodyText": "I think Elasticsearch is mostly responsible for the Object to long stuff. I don't think that is something Lucene wants but I could certainly be wrong.\n\nI would love to not have changes to this mapper as part of the feature branch, if possible.\n\nI could copy and paste the code but I think that'd be dangerous as it'd get out of sync if someone made a chance to the mapper.\n\nfunctions are cool, but couldn't we have a shared method that does the boiler-plate range conversion, which is called when creating the lucene query?\n\nI think that is what this is. I could probably write it in a way that doesn't use the functional interface if you'd prefer, but it'll be a little more jumbled. It might still be more clear just because we avoid the indirection.", "author": "nik9000", "createdAt": "2020-07-20T14:02:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwNjcwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyMDgyMg==", "url": "https://github.com/elastic/elasticsearch/pull/59816#discussion_r457420822", "bodyText": "maybe I was not too careful looking, but it looked like you were calling the function last in the method, which made me think that you could rather have one method to convert the ranges, though what is the return type of that method going to be? Maybe I start to see how a function simplifies it. I don't have a strong opinion. Maybe make it a BiFunction ?", "author": "javanna", "createdAt": "2020-07-20T14:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwNjcwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3NTAyNA==", "url": "https://github.com/elastic/elasticsearch/pull/59816#discussion_r457475024", "bodyText": "I've pushed a BiFunction. Do you think that is better?", "author": "nik9000", "createdAt": "2020-07-20T15:08:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwNjcwMg=="}], "type": "inlineReview", "revised_code": {"commit": "b3ea16ea5e2b84360bdd7313079a8278b3e305e1", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/NumberFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/NumberFieldMapper.java\nindex 2ec047ab58b..9edf0f0a8a7 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/NumberFieldMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/NumberFieldMapper.java\n\n@@ -881,10 +882,6 @@ public class NumberFieldMapper extends FieldMapper {\n             return Numbers.toLong(stringValue, coerce);\n         }\n \n-        @FunctionalInterface\n-        public interface RangeQueryBuilder {\n-            Query build(long lower, long upper);\n-        }\n         /**\n          * Processes query bounds into {@code long}s and delegates the\n          * provided {@code builder} to build a range query.\n"}}, {"oid": "b3ea16ea5e2b84360bdd7313079a8278b3e305e1", "url": "https://github.com/elastic/elasticsearch/commit/b3ea16ea5e2b84360bdd7313079a8278b3e305e1", "message": "BiFunction", "committedDate": "2020-07-20T15:05:03Z", "type": "commit"}]}