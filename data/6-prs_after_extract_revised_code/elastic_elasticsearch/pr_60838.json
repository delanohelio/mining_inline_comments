{"pr_number": 60838, "pr_title": "Disable sort optimization on search collapsing", "pr_createdAt": "2020-08-06T16:55:43Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60838", "timeline": [{"oid": "0555c3d9a4dec901b57fc5a22b86077ef4598294", "url": "https://github.com/elastic/elasticsearch/commit/0555c3d9a4dec901b57fc5a22b86077ef4598294", "message": "Disable sort optimization on search collapsing\n\nCollapse search queries that sort by a field can throw\nan ArrayStoreException due to a bug in the [sort optimization](https://github.com/elastic/elasticsearch/pull/51852)\nintroduced in 7.7.0. Search collapsing were not supposed to\nbe eligible for this sort optimization so this change explicitly\nfilters them from this new feature.", "committedDate": "2020-08-06T16:54:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3MDk3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/60838#discussion_r466570977", "bodyText": "should it be equals instead, such as queryResult.topDocs().topDocs.getClass().equals(TopFieldDocs.class)) ?", "author": "mayya-sharipova", "createdAt": "2020-08-06T17:25:49Z", "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "diffHunk": "@@ -93,7 +93,8 @@ protected void onShardResult(SearchPhaseResult result, SearchShardIterator shard\n         if (queryResult.isNull() == false\n                 // disable sort optims for scroll requests because they keep track of the last bottom doc locally (per shard)\n                 && getRequest().scroll() == null\n-                && queryResult.topDocs().topDocs instanceof TopFieldDocs) {\n+                && queryResult.topDocs() != null\n+                && queryResult.topDocs().topDocs.getClass() == TopFieldDocs.class) {", "originalCommit": "0555c3d9a4dec901b57fc5a22b86077ef4598294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NzcyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/60838#discussion_r466597729", "bodyText": "that's equivalent.  We use == in other places rather than equals so I'd prefer to remain consistent ?", "author": "jimczi", "createdAt": "2020-08-06T18:13:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3MDk3Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3NzQ1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/60838#discussion_r466577459", "bodyText": "Are we repeating these 2 lines here?", "author": "mayya-sharipova", "createdAt": "2020-08-06T17:37:07Z", "path": "server/src/test/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncActionTests.java", "diffHunk": "@@ -163,6 +188,8 @@ public void run() {\n         }\n         assertThat(phase.sortedTopDocs.scoreDocs.length, equalTo(1));\n         assertThat(phase.sortedTopDocs.scoreDocs[0], instanceOf(FieldDoc.class));\n+        assertThat(phase.sortedTopDocs.scoreDocs.length, equalTo(1));", "originalCommit": "0555c3d9a4dec901b57fc5a22b86077ef4598294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5MzkzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/60838#discussion_r466593935", "bodyText": "yes this is leftover, thanks", "author": "jimczi", "createdAt": "2020-08-06T18:06:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3NzQ1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "bef0730e7c6e97e66bfd7bdc5d9c9d285ee6e9db", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncActionTests.java b/server/src/test/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncActionTests.java\nindex dbc015da3b8..cc48a60a725 100644\n--- a/server/src/test/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncActionTests.java\n+++ b/server/src/test/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncActionTests.java\n\n@@ -188,8 +188,6 @@ public class SearchQueryThenFetchAsyncActionTests extends ESTestCase {\n         }\n         assertThat(phase.sortedTopDocs.scoreDocs.length, equalTo(1));\n         assertThat(phase.sortedTopDocs.scoreDocs[0], instanceOf(FieldDoc.class));\n-        assertThat(phase.sortedTopDocs.scoreDocs.length, equalTo(1));\n-        assertThat(phase.sortedTopDocs.scoreDocs[0], instanceOf(FieldDoc.class));\n         assertThat(((FieldDoc) phase.sortedTopDocs.scoreDocs[0]).fields.length, equalTo(1));\n         assertThat(((FieldDoc) phase.sortedTopDocs.scoreDocs[0]).fields[0], equalTo(0));\n     }\n"}}, {"oid": "bef0730e7c6e97e66bfd7bdc5d9c9d285ee6e9db", "url": "https://github.com/elastic/elasticsearch/commit/bef0730e7c6e97e66bfd7bdc5d9c9d285ee6e9db", "message": "remove leftover", "committedDate": "2020-08-06T18:14:21Z", "type": "commit"}]}