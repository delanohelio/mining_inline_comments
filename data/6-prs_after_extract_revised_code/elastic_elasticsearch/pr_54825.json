{"pr_number": 54825, "pr_title": " Merge feature/searchable-snapshots branch into 7.x (#54803) ", "pr_createdAt": "2020-04-06T16:15:06Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54825", "timeline": [{"oid": "f108eb118a27a0bc1f136f0ff307d14f804a0fb7", "url": "https://github.com/elastic/elasticsearch/commit/f108eb118a27a0bc1f136f0ff307d14f804a0fb7", "message": "Merge feature/searchable-snapshots branch into master (#54803)\n\nThis commit merges the searchable-snapshots feature branch into master.\nSee #54803 for the complete list of squashed commits.\n\nCo-authored-by: David Turner <david.turner@elastic.co>\nCo-authored-by: Yannick Welsch <yannick@welsch.lu>\nCo-authored-by: Lee Hinman <dakrone@users.noreply.github.com>\nCo-authored-by: Andrei Dan <andrei.dan@elastic.co>", "committedDate": "2020-04-06T15:02:42Z", "type": "commit"}, {"oid": "6f50c92d692b2b75c630ee0e892d5188caad20c1", "url": "https://github.com/elastic/elasticsearch/commit/6f50c92d692b2b75c630ee0e892d5188caad20c1", "message": "Fix stuff after cherry-picking", "committedDate": "2020-04-06T16:05:54Z", "type": "commit"}, {"oid": "a114549697dc92f5f46a76c4ec71b2d398515f8d", "url": "https://github.com/elastic/elasticsearch/commit/a114549697dc92f5f46a76c4ec71b2d398515f8d", "message": "Mute testDeleteActionDeletesSearchableSnapshot (#54818)", "committedDate": "2020-04-06T16:06:35Z", "type": "commit"}, {"oid": "48cbca1de43357e71f0a3f4d905e12be28235ec4", "url": "https://github.com/elastic/elasticsearch/commit/48cbca1de43357e71f0a3f4d905e12be28235ec4", "message": "Tests: only build the IndexMetadata once", "committedDate": "2020-04-06T20:35:27Z", "type": "commit"}, {"oid": "50186b25808001d6b94cef17bc4e3492f679450a", "url": "https://github.com/elastic/elasticsearch/commit/50186b25808001d6b94cef17bc4e3492f679450a", "message": "Fix TimeSeriesLifecycleActionsIT", "committedDate": "2020-04-06T21:17:22Z", "type": "commit"}, {"oid": "aae12bb7a299da5ac7206d1504537dbeb0823586", "url": "https://github.com/elastic/elasticsearch/commit/aae12bb7a299da5ac7206d1504537dbeb0823586", "message": "Set missing feature flag in searchable snapshots QA Azure test (#54861)", "committedDate": "2020-04-07T09:08:00Z", "type": "commit"}, {"oid": "6f330e3a0b5f83190f1a2a89b845e05279d61a85", "url": "https://github.com/elastic/elasticsearch/commit/6f330e3a0b5f83190f1a2a89b845e05279d61a85", "message": "Fix serialization bug in SearchableSnapshotsStatsResponse (#54864)\n\nSearchableSnapshotsStatsResponse is missing the serialization of \r\nthe list of SearchableSnapshotShardStats", "committedDate": "2020-04-07T09:10:59Z", "type": "commit"}, {"oid": "bf72c02644164c707253b0f9636081efb9b5b2b1", "url": "https://github.com/elastic/elasticsearch/commit/bf72c02644164c707253b0f9636081efb9b5b2b1", "message": "Adjust skip versions in YAML tests", "committedDate": "2020-04-07T09:13:45Z", "type": "commit"}, {"oid": "a51955f3b5823b7f8017576b6f1026e2ea149316", "url": "https://github.com/elastic/elasticsearch/commit/a51955f3b5823b7f8017576b6f1026e2ea149316", "message": "Adjust Transport client settings and plugins", "committedDate": "2020-04-07T09:13:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MDIzNg==", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404690236", "bodyText": "@andreidan Version has been adjusted here", "author": "tlrx", "createdAt": "2020-04-07T10:04:51Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DeleteAction.java", "diffHunk": "@@ -5,38 +5,63 @@\n  */\n package org.elasticsearch.xpack.core.ilm;\n \n+import org.elasticsearch.Version;\n import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.ParseField;\n import org.elasticsearch.common.Strings;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n-import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentParser;\n \n import java.io.IOException;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.Objects;\n \n /**\n  * A {@link LifecycleAction} which deletes the index.\n  */\n public class DeleteAction implements LifecycleAction {\n     public static final String NAME = \"delete\";\n \n-    private static final ObjectParser<DeleteAction, Void> PARSER = new ObjectParser<>(NAME, DeleteAction::new);\n+    public static final ParseField DELETE_SEARCHABLE_SNAPSHOT_FIELD = new ParseField(\"delete_searchable_snapshot\");\n+\n+    private static final ConstructingObjectParser<DeleteAction, Void> PARSER = new ConstructingObjectParser<>(NAME,\n+        a -> new DeleteAction(a[0] == null ? true : (boolean) a[0]));\n+\n+    static {\n+        PARSER.declareBoolean(ConstructingObjectParser.optionalConstructorArg(), DELETE_SEARCHABLE_SNAPSHOT_FIELD);\n+    }\n \n     public static DeleteAction parse(XContentParser parser) {\n         return PARSER.apply(parser, null);\n     }\n \n+    private final boolean deleteSearchableSnapshot;\n+\n     public DeleteAction() {\n+        this(true);\n+    }\n+\n+    public DeleteAction(boolean deleteSearchableSnapshot) {\n+        this.deleteSearchableSnapshot = deleteSearchableSnapshot;\n     }\n \n     public DeleteAction(StreamInput in) throws IOException {\n+        if (in.getVersion().onOrAfter(Version.V_7_8_0)) {", "originalCommit": "a51955f3b5823b7f8017576b6f1026e2ea149316", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MDMzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404690335", "bodyText": "@andreidan Version has been adjusted here", "author": "tlrx", "createdAt": "2020-04-07T10:05:02Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/DeleteAction.java", "diffHunk": "@@ -5,38 +5,63 @@\n  */\n package org.elasticsearch.xpack.core.ilm;\n \n+import org.elasticsearch.Version;\n import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.ParseField;\n import org.elasticsearch.common.Strings;\n import org.elasticsearch.common.io.stream.StreamInput;\n import org.elasticsearch.common.io.stream.StreamOutput;\n-import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n import org.elasticsearch.common.xcontent.XContentBuilder;\n import org.elasticsearch.common.xcontent.XContentParser;\n \n import java.io.IOException;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.Objects;\n \n /**\n  * A {@link LifecycleAction} which deletes the index.\n  */\n public class DeleteAction implements LifecycleAction {\n     public static final String NAME = \"delete\";\n \n-    private static final ObjectParser<DeleteAction, Void> PARSER = new ObjectParser<>(NAME, DeleteAction::new);\n+    public static final ParseField DELETE_SEARCHABLE_SNAPSHOT_FIELD = new ParseField(\"delete_searchable_snapshot\");\n+\n+    private static final ConstructingObjectParser<DeleteAction, Void> PARSER = new ConstructingObjectParser<>(NAME,\n+        a -> new DeleteAction(a[0] == null ? true : (boolean) a[0]));\n+\n+    static {\n+        PARSER.declareBoolean(ConstructingObjectParser.optionalConstructorArg(), DELETE_SEARCHABLE_SNAPSHOT_FIELD);\n+    }\n \n     public static DeleteAction parse(XContentParser parser) {\n         return PARSER.apply(parser, null);\n     }\n \n+    private final boolean deleteSearchableSnapshot;\n+\n     public DeleteAction() {\n+        this(true);\n+    }\n+\n+    public DeleteAction(boolean deleteSearchableSnapshot) {\n+        this.deleteSearchableSnapshot = deleteSearchableSnapshot;\n     }\n \n     public DeleteAction(StreamInput in) throws IOException {\n+        if (in.getVersion().onOrAfter(Version.V_7_8_0)) {\n+            this.deleteSearchableSnapshot = in.readBoolean();\n+        } else {\n+            this.deleteSearchableSnapshot = true;\n+        }\n     }\n \n     @Override\n     public void writeTo(StreamOutput out) throws IOException {\n+        if (out.getVersion().onOrAfter(Version.V_7_8_0)) {", "originalCommit": "a51955f3b5823b7f8017576b6f1026e2ea149316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMzg2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404733865", "bodyText": "Thanks @tlrx", "author": "andreidan", "createdAt": "2020-04-07T11:23:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MDMzNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MzY1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404693653", "bodyText": "This change means that we register these actions whether the feature flag is enabled or not, which I think we should avoid. Can we revert this?", "author": "DaveCTurner", "createdAt": "2020-04-07T10:10:33Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -237,15 +237,11 @@ public void onIndexModule(IndexModule indexModule) {\n \n     @Override\n     public List<ActionHandler<? extends ActionRequest, ? extends ActionResponse>> getActions() {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {", "originalCommit": "a51955f3b5823b7f8017576b6f1026e2ea149316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwODQwMw==", "url": "https://github.com/elastic/elasticsearch/pull/54825#discussion_r404708403", "bodyText": "I've been confused by the TransportClient for which I thought we should not force a system prop to be present to load the appropriate actions.\nBut the feature flag will be removed at some point, so we don't really care. I reverted this.", "author": "tlrx", "createdAt": "2020-04-07T10:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MzY1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "cba13d20c41222472c67fe1758c9a3815f02bdec", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\nindex 792545b5f95..35ea168dfd9 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n\n@@ -237,11 +230,15 @@ public class SearchableSnapshots extends Plugin implements IndexStorePlugin, Rep\n \n     @Override\n     public List<ActionHandler<? extends ActionRequest, ? extends ActionResponse>> getActions() {\n-        return org.elasticsearch.common.collect.List.of(\n-            new ActionHandler<>(SearchableSnapshotsStatsAction.INSTANCE, TransportSearchableSnapshotsStatsAction.class),\n-            new ActionHandler<>(ClearSearchableSnapshotsCacheAction.INSTANCE, TransportClearSearchableSnapshotsCacheAction.class),\n-            new ActionHandler<>(MountSearchableSnapshotAction.INSTANCE, TransportMountSearchableSnapshotAction.class)\n-        );\n+        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED) {\n+            return org.elasticsearch.common.collect.List.of(\n+                new ActionHandler<>(SearchableSnapshotsStatsAction.INSTANCE, TransportSearchableSnapshotsStatsAction.class),\n+                new ActionHandler<>(ClearSearchableSnapshotsCacheAction.INSTANCE, TransportClearSearchableSnapshotsCacheAction.class),\n+                new ActionHandler<>(MountSearchableSnapshotAction.INSTANCE, TransportMountSearchableSnapshotAction.class)\n+            );\n+        } else {\n+            return org.elasticsearch.common.collect.List.of();\n+        }\n     }\n \n     public List<RestHandler> getRestHandlers(\n"}}, {"oid": "cba13d20c41222472c67fe1758c9a3815f02bdec", "url": "https://github.com/elastic/elasticsearch/commit/cba13d20c41222472c67fe1758c9a3815f02bdec", "message": "apply feedback", "committedDate": "2020-04-07T10:34:41Z", "type": "commit"}]}