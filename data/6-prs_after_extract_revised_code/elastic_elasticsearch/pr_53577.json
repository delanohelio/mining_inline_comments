{"pr_number": 53577, "pr_title": "Improve performance of shards limits decider", "pr_createdAt": "2020-03-14T18:31:52Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53577", "timeline": [{"oid": "74593557772eab9d4f754567a29366aa97a1bcd4", "url": "https://github.com/elastic/elasticsearch/commit/74593557772eab9d4f754567a29366aa97a1bcd4", "message": "Improve performance of shards limits decider\n\nOn clusters with a large number of shards, the shards limits allocation\ndecider can exhibit poor performance leading to timeouts applying\ncluster state updates. This occurs because for every shard, we do a loop\nto count the number of shards on the node, and the number of shards for\nthe index of the shard. This is roughly quadratic in the number of\nshards. This loop is not necessary, since we already have a O(1) method\nto count the number of non-relocating shards on a node, and with this\ncommit we add some infrastructure to RoutingNode to make counting the\nnumber of shards per index O(1).", "committedDate": "2020-03-14T18:30:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5NDU4OA==", "url": "https://github.com/elastic/elasticsearch/pull/53577#discussion_r394594588", "bodyText": "Could we make this simpler by:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        shards.values().stream().collect(Collectors.groupingBy(ShardRouting::index));\n          \n          \n            \n                    assert shardsByIndex.size() == shardRoutingsByIndex.size();\n          \n          \n            \n                    assert shardsByIndex.keySet().containsAll(shardRoutingsByIndex.keySet());\n          \n          \n            \n                    assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().size() == shardRoutingsByIndex.get(e.getKey()).size());\n          \n          \n            \n                    assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().containsAll(shardRoutingsByIndex.get(e.getKey())));\n          \n          \n            \n                        shards.values().stream().collect(Collectors.groupingBy(ShardRouting::index, Collectors.toSet()));\n          \n          \n            \n                    assert shardRoutingsByIndex.equals(shardsByIndex);", "author": "henningandersen", "createdAt": "2020-03-18T19:39:05Z", "path": "server/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java", "diffHunk": "@@ -316,6 +343,13 @@ private boolean invariant() {\n         assert relocatingShards.size() == shardRoutingsRelocating.size();\n         assert relocatingShards.containsAll(shardRoutingsRelocating);\n \n+        final Map<Index, List<ShardRouting>> shardRoutingsByIndex =\n+            shards.values().stream().collect(Collectors.groupingBy(ShardRouting::index));\n+        assert shardsByIndex.size() == shardRoutingsByIndex.size();\n+        assert shardsByIndex.keySet().containsAll(shardRoutingsByIndex.keySet());\n+        assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().size() == shardRoutingsByIndex.get(e.getKey()).size());\n+        assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().containsAll(shardRoutingsByIndex.get(e.getKey())));", "originalCommit": "74593557772eab9d4f754567a29366aa97a1bcd4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1a1cd184705f0cb076657d6794f96761900d616", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java b/server/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java\nindex e48f5d289b4..8532e74a4a6 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java\n\n@@ -344,11 +344,8 @@ public class RoutingNode implements Iterable<ShardRouting> {\n         assert relocatingShards.containsAll(shardRoutingsRelocating);\n \n         final Map<Index, List<ShardRouting>> shardRoutingsByIndex =\n-            shards.values().stream().collect(Collectors.groupingBy(ShardRouting::index));\n-        assert shardsByIndex.size() == shardRoutingsByIndex.size();\n-        assert shardsByIndex.keySet().containsAll(shardRoutingsByIndex.keySet());\n-        assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().size() == shardRoutingsByIndex.get(e.getKey()).size());\n-        assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().containsAll(shardRoutingsByIndex.get(e.getKey())));\n+            shards.values().stream().collect(Collectors.groupingBy(ShardRouting::index, Collectors.toSet()));\n+        assert shardRoutingsByIndex.equals(shardsByIndex);\n \n         return true;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5ODgzNA==", "url": "https://github.com/elastic/elasticsearch/pull/53577#discussion_r394598834", "bodyText": "nit: missing space\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        TestShardRouting.newShardRouting(\"test2\", 0, \"node-1\", \"node-2\",false, ShardRoutingState.RELOCATING);\n          \n          \n            \n                        TestShardRouting.newShardRouting(\"test2\", 0, \"node-1\", \"node-2\", false, ShardRoutingState.RELOCATING);", "author": "henningandersen", "createdAt": "2020-03-18T19:47:38Z", "path": "server/src/test/java/org/elasticsearch/cluster/routing/RoutingNodeTests.java", "diffHunk": "@@ -115,4 +116,17 @@ public void testNumberOfOwningShards() {\n         assertThat(routingNode.numberOfOwningShards(), equalTo(2));\n     }\n \n+    public void testNumberOfOwningShardsForIndex() {\n+        final ShardRouting test1Shard0 =\n+            TestShardRouting.newShardRouting(\"test1\", 0, \"node-1\", false, ShardRoutingState.STARTED);\n+        final ShardRouting test2Shard0 =\n+            TestShardRouting.newShardRouting(\"test2\", 0, \"node-1\", \"node-2\",false, ShardRoutingState.RELOCATING);", "originalCommit": "74593557772eab9d4f754567a29366aa97a1bcd4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "08c989428d54bc85eb691a2849bd90a61fd8b1c8", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/cluster/routing/RoutingNodeTests.java b/server/src/test/java/org/elasticsearch/cluster/routing/RoutingNodeTests.java\nindex 8fac4ee2214..5cde6459e93 100644\n--- a/server/src/test/java/org/elasticsearch/cluster/routing/RoutingNodeTests.java\n+++ b/server/src/test/java/org/elasticsearch/cluster/routing/RoutingNodeTests.java\n\n@@ -120,7 +120,7 @@ public class RoutingNodeTests extends ESTestCase {\n         final ShardRouting test1Shard0 =\n             TestShardRouting.newShardRouting(\"test1\", 0, \"node-1\", false, ShardRoutingState.STARTED);\n         final ShardRouting test2Shard0 =\n-            TestShardRouting.newShardRouting(\"test2\", 0, \"node-1\", \"node-2\",false, ShardRoutingState.RELOCATING);\n+            TestShardRouting.newShardRouting(\"test2\", 0, \"node-1\", \"node-2\", false, ShardRoutingState.RELOCATING);\n         routingNode.add(test1Shard0);\n         routingNode.add(test2Shard0);\n         assertThat(routingNode.numberOfOwningShardsForIndex(new Index(\"test\", IndexMetaData.INDEX_UUID_NA_VALUE)), equalTo(2));\n"}}, {"oid": "f1a1cd184705f0cb076657d6794f96761900d616", "url": "https://github.com/elastic/elasticsearch/commit/f1a1cd184705f0cb076657d6794f96761900d616", "message": "Update server/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java\n\nCo-Authored-By: Henning Andersen <33268011+henningandersen@users.noreply.github.com>", "committedDate": "2020-03-18T20:15:12Z", "type": "commit"}, {"oid": "08c989428d54bc85eb691a2849bd90a61fd8b1c8", "url": "https://github.com/elastic/elasticsearch/commit/08c989428d54bc85eb691a2849bd90a61fd8b1c8", "message": "Update server/src/test/java/org/elasticsearch/cluster/routing/RoutingNodeTests.java\n\nCo-Authored-By: Henning Andersen <33268011+henningandersen@users.noreply.github.com>", "committedDate": "2020-03-18T20:15:19Z", "type": "commit"}, {"oid": "92507c0b55127d17a52c86025f7e5e26720f109a", "url": "https://github.com/elastic/elasticsearch/commit/92507c0b55127d17a52c86025f7e5e26720f109a", "message": "Merge branch 'master' into shard-limits-allocation-decider-performance", "committedDate": "2020-03-18T20:18:47Z", "type": "commit"}, {"oid": "209504bc55d51597c48585716b9c97b945ca63f4", "url": "https://github.com/elastic/elasticsearch/commit/209504bc55d51597c48585716b9c97b945ca63f4", "message": "Fix compilation", "committedDate": "2020-03-18T20:28:48Z", "type": "commit"}]}