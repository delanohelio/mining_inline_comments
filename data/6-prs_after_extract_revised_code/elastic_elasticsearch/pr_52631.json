{"pr_number": 52631, "pr_title": "[ML] Handle failed datafeed in MlDistributedFailureIT", "pr_createdAt": "2020-02-21T10:45:58Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52631", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU0MTgyOA==", "url": "https://github.com/elastic/elasticsearch/pull/52631#discussion_r382541828", "bodyText": "The problem with this is that if task == null then the test isn't doing what it's supposed to be doing, which is testing that you can stop an unassigned stopping datafeed.\nSince this happens so rarely we could put the whole test in a loop and retry a few times if this situation occurs.\nBut if you don't want to do that then it would be better to use assumeFalse(\"Test setup did not create the required conditions\", task == null); because then at least the test will be reported as having been skipped rather than silently succeeding when it didn't test what it was supposed to test.", "author": "droberts195", "createdAt": "2020-02-21T11:52:34Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java", "diffHunk": "@@ -245,19 +245,24 @@ public void testCloseUnassignedFailedJobAndStopUnassignedStoppingDatafeed() thro\n         // stopping.\n         PersistentTasksCustomMetaData tasks = clusterService().state().getMetaData().custom(PersistentTasksCustomMetaData.TYPE);\n         PersistentTasksCustomMetaData.PersistentTask<?> task = MlTasks.getDatafeedTask(datafeedId, tasks);\n-        UpdatePersistentTaskStatusAction.Request updatePersistentTaskStatusRequest =\n-            new UpdatePersistentTaskStatusAction.Request(task.getId(), task.getAllocationId(), DatafeedState.STOPPING);\n-        PersistentTaskResponse updatePersistentTaskStatusResponse =\n-            client().execute(UpdatePersistentTaskStatusAction.INSTANCE, updatePersistentTaskStatusRequest).actionGet();\n-        assertNotNull(updatePersistentTaskStatusResponse.getTask());\n \n-        // Confirm the datafeed state is now stopping - this may take a while to update in cluster state\n-        assertBusy(() -> {\n-            GetDatafeedsStatsAction.Request datafeedStatsRequest = new GetDatafeedsStatsAction.Request(datafeedId);\n-            GetDatafeedsStatsAction.Response datafeedStatsResponse =\n-                client().execute(GetDatafeedsStatsAction.INSTANCE, datafeedStatsRequest).actionGet();\n-            assertEquals(DatafeedState.STOPPING, datafeedStatsResponse.getResponse().results().get(0).getDatafeedState());\n-        });\n+        // It is possible that the datafeed has already detected the job failure and\n+        // terminated itself. In this happens there is no task\n+        if (task != null) {", "originalCommit": "aea69cbace5e1904b59a799dadd215a292438508", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNzk4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/52631#discussion_r382707981", "bodyText": "I think assumeFalse is best, retry adds complexity to an already complicated piece of code. The test could fail for any number of reasons some including general infrastructure problems retrying would add noise.\nLooking at the test, in the setup it waits for the datafeed to complete before closing the job which should have prevented flush happening after the job failed.\n\n  \n    \n      elasticsearch/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java\n    \n    \n         Line 215\n      in\n      071b60d\n    \n    \n    \n    \n\n        \n          \n           waitForDatafeed(jobId, numDocs1); \n        \n    \n  \n\n\nwaitForDatafeed waits for the data counts to be indexed which the datafeed does asynchronously before flushing the job. It is amazing that the race between the writing the datacounts and calling flush is sometimes lost to a thread doing an assertBusy searching the index for the new datacounts and then failing the job but that is whats happening here. This is so unlikely (the first time its been reported) it's not worth rewriting the test.", "author": "davidkyle", "createdAt": "2020-02-21T17:24:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU0MTgyOA=="}], "type": "inlineReview", "revised_code": {"commit": "f61e53e1948e889fec48d90279ecdf7e4868519f", "chunk": "diff --git a/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java\nindex 1243b574265..048e8d8f911 100644\n--- a/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java\n+++ b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java\n\n@@ -247,22 +247,24 @@ public class MlDistributedFailureIT extends BaseMlIntegTestCase {\n         PersistentTasksCustomMetaData.PersistentTask<?> task = MlTasks.getDatafeedTask(datafeedId, tasks);\n \n         // It is possible that the datafeed has already detected the job failure and\n-        // terminated itself. In this happens there is no task\n-        if (task != null) {\n-            UpdatePersistentTaskStatusAction.Request updatePersistentTaskStatusRequest =\n-                    new UpdatePersistentTaskStatusAction.Request(task.getId(), task.getAllocationId(), DatafeedState.STOPPING);\n-            PersistentTaskResponse updatePersistentTaskStatusResponse =\n-                    client().execute(UpdatePersistentTaskStatusAction.INSTANCE, updatePersistentTaskStatusRequest).actionGet();\n-            assertNotNull(updatePersistentTaskStatusResponse.getTask());\n-\n-            // Confirm the datafeed state is now stopping - this may take a while to update in cluster state\n-            assertBusy(() -> {\n-                GetDatafeedsStatsAction.Request datafeedStatsRequest = new GetDatafeedsStatsAction.Request(datafeedId);\n-                GetDatafeedsStatsAction.Response datafeedStatsResponse =\n-                        client().execute(GetDatafeedsStatsAction.INSTANCE, datafeedStatsRequest).actionGet();\n-                assertEquals(DatafeedState.STOPPING, datafeedStatsResponse.getResponse().results().get(0).getDatafeedState());\n-            });\n-        }\n+        // terminated itself. In this happens there is no persistent task to stop\n+        assumeFalse(\"The datafeed task is null most likely because the datafeed detected the job had failed. \" +\n+                \"This is expected to happen extremely rarely but the test cannot continue in these circumstances.\", task == null);\n+\n+        UpdatePersistentTaskStatusAction.Request updatePersistentTaskStatusRequest =\n+                new UpdatePersistentTaskStatusAction.Request(task.getId(), task.getAllocationId(), DatafeedState.STOPPING);\n+        PersistentTaskResponse updatePersistentTaskStatusResponse =\n+                client().execute(UpdatePersistentTaskStatusAction.INSTANCE, updatePersistentTaskStatusRequest).actionGet();\n+        assertNotNull(updatePersistentTaskStatusResponse.getTask());\n+\n+        // Confirm the datafeed state is now stopping - this may take a while to update in cluster state\n+        assertBusy(() -> {\n+            GetDatafeedsStatsAction.Request datafeedStatsRequest = new GetDatafeedsStatsAction.Request(datafeedId);\n+            GetDatafeedsStatsAction.Response datafeedStatsResponse =\n+                    client().execute(GetDatafeedsStatsAction.INSTANCE, datafeedStatsRequest).actionGet();\n+            assertEquals(DatafeedState.STOPPING, datafeedStatsResponse.getResponse().results().get(0).getDatafeedState());\n+        });\n+\n \n         // Stop the node running the failed job/stopping datafeed\n         ensureGreen(); // replicas must be assigned, otherwise we could lose a whole index\n"}}, {"oid": "08ec002b705363cb5c76d34887d9c23a7ff5dcef", "url": "https://github.com/elastic/elasticsearch/commit/08ec002b705363cb5c76d34887d9c23a7ff5dcef", "message": "Handle case where datafeed has stopped", "committedDate": "2020-02-24T10:56:43Z", "type": "commit"}, {"oid": "f61e53e1948e889fec48d90279ecdf7e4868519f", "url": "https://github.com/elastic/elasticsearch/commit/f61e53e1948e889fec48d90279ecdf7e4868519f", "message": "assume false", "committedDate": "2020-02-24T10:56:43Z", "type": "commit"}, {"oid": "f61e53e1948e889fec48d90279ecdf7e4868519f", "url": "https://github.com/elastic/elasticsearch/commit/f61e53e1948e889fec48d90279ecdf7e4868519f", "message": "assume false", "committedDate": "2020-02-24T10:56:43Z", "type": "forcePushed"}]}