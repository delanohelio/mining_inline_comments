{"pr_number": 65896, "pr_title": "Add minimum compatibility version to SearchRequest", "pr_createdAt": "2020-12-04T16:12:50Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65896", "timeline": [{"oid": "1c41a9c07b764090260b82677dbb5503dbded1a3", "url": "https://github.com/elastic/elasticsearch/commit/1c41a9c07b764090260b82677dbb5503dbded1a3", "message": "Adds a minimum version parameter to the SearchRequest, not exposed\nto REST. The minimum version helps failing a request if any shards\ninvolved in the search do not meet the compatibility requirements\n(all shards need to have a version equal or later than the minimum\nversion provided).", "committedDate": "2020-12-04T16:08:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1NjkwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537656909", "bodyText": "Can you move this to AbstractSearchAsyncAction#getConnection ?  There's nothing that prevents to check the version there.", "author": "jimczi", "createdAt": "2020-12-07T16:45:13Z", "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "diffHunk": "@@ -80,7 +84,11 @@ protected void executePhaseOnShard(final SearchShardIterator shardIt,\n                                        final SearchShardTarget shard,\n                                        final SearchActionListener<SearchPhaseResult> listener) {\n         ShardSearchRequest request = rewriteShardSearchRequest(super.buildShardSearchRequest(shardIt));\n-        getSearchTransport().sendExecuteQuery(getConnection(shard.getClusterAlias(), shard.getNodeId()), request, getTask(), listener);\n+        Transport.Connection conn = getConnection(shard.getClusterAlias(), shard.getNodeId());", "originalCommit": "1c41a9c07b764090260b82677dbb5503dbded1a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2bcb4aad4ed2c63f3fe23017da5fdd6b3bb9df88", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java b/server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java\nindex 74a07684b1e..79f5e5ca957 100644\n--- a/server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java\n+++ b/server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java\n\n@@ -84,11 +80,7 @@ class SearchQueryThenFetchAsyncAction extends AbstractSearchAsyncAction<SearchPh\n                                        final SearchShardTarget shard,\n                                        final SearchActionListener<SearchPhaseResult> listener) {\n         ShardSearchRequest request = rewriteShardSearchRequest(super.buildShardSearchRequest(shardIt));\n-        Transport.Connection conn = getConnection(shard.getClusterAlias(), shard.getNodeId());\n-        if (minVersion != null && conn.getVersion().before(minVersion)) {\n-            throw new VersionMismatchException(\"One of the shards is incompatible with the required minimum version [{}]\", minVersion);\n-        }\n-        getSearchTransport().sendExecuteQuery(conn, request, getTask(), listener);\n+        getSearchTransport().sendExecuteQuery(getConnection(shard.getClusterAlias(), shard.getNodeId()), request, getTask(), listener);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1Nzc0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537657741", "bodyText": "conn can be null too so you'll need to handle this case.", "author": "jimczi", "createdAt": "2020-12-07T16:46:20Z", "path": "server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java", "diffHunk": "@@ -80,7 +84,11 @@ protected void executePhaseOnShard(final SearchShardIterator shardIt,\n                                        final SearchShardTarget shard,\n                                        final SearchActionListener<SearchPhaseResult> listener) {\n         ShardSearchRequest request = rewriteShardSearchRequest(super.buildShardSearchRequest(shardIt));\n-        getSearchTransport().sendExecuteQuery(getConnection(shard.getClusterAlias(), shard.getNodeId()), request, getTask(), listener);\n+        Transport.Connection conn = getConnection(shard.getClusterAlias(), shard.getNodeId());\n+        if (minVersion != null && conn.getVersion().before(minVersion)) {", "originalCommit": "1c41a9c07b764090260b82677dbb5503dbded1a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2bcb4aad4ed2c63f3fe23017da5fdd6b3bb9df88", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java b/server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java\nindex 74a07684b1e..79f5e5ca957 100644\n--- a/server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java\n+++ b/server/src/main/java/org/elasticsearch/action/search/SearchQueryThenFetchAsyncAction.java\n\n@@ -84,11 +80,7 @@ class SearchQueryThenFetchAsyncAction extends AbstractSearchAsyncAction<SearchPh\n                                        final SearchShardTarget shard,\n                                        final SearchActionListener<SearchPhaseResult> listener) {\n         ShardSearchRequest request = rewriteShardSearchRequest(super.buildShardSearchRequest(shardIt));\n-        Transport.Connection conn = getConnection(shard.getClusterAlias(), shard.getNodeId());\n-        if (minVersion != null && conn.getVersion().before(minVersion)) {\n-            throw new VersionMismatchException(\"One of the shards is incompatible with the required minimum version [{}]\", minVersion);\n-        }\n-        getSearchTransport().sendExecuteQuery(conn, request, getTask(), listener);\n+        getSearchTransport().sendExecuteQuery(getConnection(shard.getClusterAlias(), shard.getNodeId()), request, getTask(), listener);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1ODg1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537658851", "bodyText": "You need to start with 8.0.0 and adapt the checks after the backport", "author": "jimczi", "createdAt": "2020-12-07T16:47:35Z", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -214,6 +226,9 @@ public SearchRequest(StreamInput in) throws IOException {\n             finalReduce = true;\n         }\n         ccsMinimizeRoundtrips = in.readBoolean();\n+        if (in.getVersion().onOrAfter(Version.V_7_11_0)) {", "originalCommit": "1c41a9c07b764090260b82677dbb5503dbded1a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2bcb4aad4ed2c63f3fe23017da5fdd6b3bb9df88", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\nindex f4fefd8eba2..ffe517ac65d 100644\n--- a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n+++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n\n@@ -226,7 +226,7 @@ public class SearchRequest extends ActionRequest implements IndicesRequest.Repla\n             finalReduce = true;\n         }\n         ccsMinimizeRoundtrips = in.readBoolean();\n-        if (in.getVersion().onOrAfter(Version.V_7_11_0)) {\n+        if (in.getVersion().onOrAfter(Version.V_8_0_0)) {\n             minVersion = Version.readVersion(in);\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1ODk0NA==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537658944", "bodyText": "same here", "author": "jimczi", "createdAt": "2020-12-07T16:47:42Z", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -241,7 +256,9 @@ public void writeTo(StreamOutput out) throws IOException {\n             out.writeBoolean(finalReduce);\n         }\n         out.writeBoolean(ccsMinimizeRoundtrips);\n-\n+        if (out.getVersion().onOrAfter(Version.V_7_11_0)) {", "originalCommit": "1c41a9c07b764090260b82677dbb5503dbded1a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2bcb4aad4ed2c63f3fe23017da5fdd6b3bb9df88", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\nindex f4fefd8eba2..ffe517ac65d 100644\n--- a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n+++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n\n@@ -256,7 +256,7 @@ public class SearchRequest extends ActionRequest implements IndicesRequest.Repla\n             out.writeBoolean(finalReduce);\n         }\n         out.writeBoolean(ccsMinimizeRoundtrips);\n-        if (out.getVersion().onOrAfter(Version.V_7_11_0)) {\n+        if (out.getVersion().onOrAfter(Version.V_8_0_0)) {\n             Version.writeVersion(minVersion, out);\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1OTk3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537659979", "bodyText": "You don't need to check the minimum version if it's equal to the minimum compatible version (default value).", "author": "jimczi", "createdAt": "2020-12-07T16:49:03Z", "path": "server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java", "diffHunk": "@@ -210,6 +210,10 @@ public final void run() {\n                     throw new SearchPhaseExecutionException(getName(), msg, null, ShardSearchFailure.EMPTY_ARRAY);\n                 }\n             }\n+            if (checkMinimumVersion(shardsIts) == false) {", "originalCommit": "1c41a9c07b764090260b82677dbb5503dbded1a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2bcb4aad4ed2c63f3fe23017da5fdd6b3bb9df88", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java b/server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java\nindex c503ce5b4e6..87a8c520078 100644\n--- a/server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java\n+++ b/server/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java\n\n@@ -210,9 +210,11 @@ abstract class AbstractSearchAsyncAction<Result extends SearchPhaseResult> exten\n                     throw new SearchPhaseExecutionException(getName(), msg, null, ShardSearchFailure.EMPTY_ARRAY);\n                 }\n             }\n-            if (checkMinimumVersion(shardsIts) == false) {\n-                throw new VersionMismatchException(\"One of the shards is incompatible with the required minimum version [{}]\",\n-                    request.minVersion());\n+            if (Version.CURRENT.minimumCompatibilityVersion().equals(request.minVersion()) == false) {\n+                if (checkMinimumVersion(shardsIts) == false) {\n+                    throw new VersionMismatchException(\"One of the shards is incompatible with the required minimum version [{}]\",\n+                        request.minVersion());\n+                }\n             }\n             for (int index = 0; index < shardsIts.size(); index++) {\n                 final SearchShardIterator shardRoutings = shardsIts.get(index);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY2MDU3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r537660579", "bodyText": "For now it's just a 8.0.0 exception, you'll need to adapt the version after the backport", "author": "jimczi", "createdAt": "2020-12-07T16:49:46Z", "path": "server/src/main/java/org/elasticsearch/ElasticsearchException.java", "diffHunk": "@@ -1047,7 +1047,12 @@ public String toString() {\n                 org.elasticsearch.transport.NoSeedNodeLeftException.class,\n                 org.elasticsearch.transport.NoSeedNodeLeftException::new,\n                 160,\n-                Version.V_7_10_0);\n+                Version.V_7_10_0),\n+        VERSION_MISMATCH_EXCEPTION(\n+                org.elasticsearch.action.search.VersionMismatchException.class,\n+                org.elasticsearch.action.search.VersionMismatchException::new,\n+                161,\n+                Version.V_7_11_0);", "originalCommit": "1c41a9c07b764090260b82677dbb5503dbded1a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2bcb4aad4ed2c63f3fe23017da5fdd6b3bb9df88", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/ElasticsearchException.java b/server/src/main/java/org/elasticsearch/ElasticsearchException.java\nindex dccc11e1f9e..6f190e91603 100644\n--- a/server/src/main/java/org/elasticsearch/ElasticsearchException.java\n+++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java\n\n@@ -1052,7 +1052,7 @@ public class ElasticsearchException extends RuntimeException implements ToXConte\n                 org.elasticsearch.action.search.VersionMismatchException.class,\n                 org.elasticsearch.action.search.VersionMismatchException::new,\n                 161,\n-                Version.V_7_11_0);\n+                Version.V_8_0_0);\n \n         final Class<? extends ElasticsearchException> exceptionClass;\n         final CheckedFunction<StreamInput, ? extends ElasticsearchException, IOException> constructor;\n"}}, {"oid": "2bcb4aad4ed2c63f3fe23017da5fdd6b3bb9df88", "url": "https://github.com/elastic/elasticsearch/commit/2bcb4aad4ed2c63f3fe23017da5fdd6b3bb9df88", "message": "Address reviews", "committedDate": "2020-12-07T23:02:03Z", "type": "commit"}, {"oid": "df89dccf95b0a5a1ed20b66f627ff32459b0b492", "url": "https://github.com/elastic/elasticsearch/commit/df89dccf95b0a5a1ed20b66f627ff32459b0b492", "message": "Merge branch 'master' of https://github.com/elastic/elasticsearch into 63304_part1", "committedDate": "2020-12-07T23:07:58Z", "type": "commit"}, {"oid": "5410f2612ff331afa3c06fc9ca96afa40899072a", "url": "https://github.com/elastic/elasticsearch/commit/5410f2612ff331afa3c06fc9ca96afa40899072a", "message": "Adjustment after merge", "committedDate": "2020-12-08T00:15:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1NTg4MA==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r538155880", "bodyText": "You could reuse the subSearchRequest above and just add a nullable minCompatibleShardNode argument ? That makes sense to me because we need to set ccsMinimizeRoundtrips to false there too and these sub search requests are meant for internal use (using the transport client only).\nShould we add also a check that the min version is greater or equals than the minimum compatibility version ?", "author": "jimczi", "createdAt": "2020-12-08T09:01:56Z", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -157,6 +159,16 @@ static SearchRequest subSearchRequest(SearchRequest originalSearchRequest, Strin\n         return new SearchRequest(originalSearchRequest, indices, clusterAlias, absoluteStartMillis, finalReduce);\n     }\n \n+    public static SearchRequest withMinimumVersion(SearchRequest searchRequest, Version minVersion) {", "originalCommit": "5410f2612ff331afa3c06fc9ca96afa40899072a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1ODI1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r538158252", "bodyText": "We should also ensure that ccsMinimizeRoundtrips is set to false, otherwise the check will not be applied on the remote cluster. We can force the value here searchRequest.cssMinimizeRountrips(false) but we should also verify the final value in SearchRequest#validate.", "author": "jimczi", "createdAt": "2020-12-08T09:05:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1NTg4MA=="}], "type": "inlineReview", "revised_code": {"commit": "137c089c279992563141f6e8ec00d31c9c21e160", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\nindex ffe517ac65d..41c428a1b79 100644\n--- a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n+++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n\n@@ -142,21 +145,25 @@ public class SearchRequest extends ActionRequest implements IndicesRequest.Repla\n      * Used when a {@link SearchRequest} is created and executed as part of a cross-cluster search request\n      * performing reduction on each cluster in order to minimize network round-trips between the coordinating node and the remote clusters.\n      *\n+     * @param parentTaskId the parent taskId of the original search request\n      * @param originalSearchRequest the original search request\n      * @param indices the indices to search against\n      * @param clusterAlias the alias to prefix index names with in the returned search results\n      * @param absoluteStartMillis the absolute start time to be used on the remote clusters to ensure that the same value is used\n      * @param finalReduce whether the reduction should be final or not\n      */\n-    static SearchRequest subSearchRequest(SearchRequest originalSearchRequest, String[] indices,\n+    static SearchRequest subSearchRequest(TaskId parentTaskId, SearchRequest originalSearchRequest, String[] indices,\n                                           String clusterAlias, long absoluteStartMillis, boolean finalReduce) {\n+        Objects.requireNonNull(parentTaskId, \"parentTaskId must be specified\");\n         Objects.requireNonNull(originalSearchRequest, \"search request must not be null\");\n         validateIndices(indices);\n         Objects.requireNonNull(clusterAlias, \"cluster alias must not be null\");\n         if (absoluteStartMillis < 0) {\n             throw new IllegalArgumentException(\"absoluteStartMillis must not be negative but was [\" + absoluteStartMillis + \"]\");\n         }\n-        return new SearchRequest(originalSearchRequest, indices, clusterAlias, absoluteStartMillis, finalReduce);\n+        final SearchRequest request = new SearchRequest(originalSearchRequest, indices, clusterAlias, absoluteStartMillis, finalReduce);\n+        request.setParentTask(parentTaskId);\n+        return request;\n     }\n \n     public static SearchRequest withMinimumVersion(SearchRequest searchRequest, Version minVersion) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE2NDk0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r538164949", "bodyText": "Maybe rename to something more explicit: minCompatibleShardNode ?", "author": "jimczi", "createdAt": "2020-12-08T09:14:47Z", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -319,6 +336,9 @@ long getAbsoluteStartMillis() {\n         return absoluteStartMillis;\n     }\n ", "originalCommit": "5410f2612ff331afa3c06fc9ca96afa40899072a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c262054708d2ed0b343a0b15b7aa91731c1e6d9c", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\nindex ffe517ac65d..d0b937d4604 100644\n--- a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n+++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n\n@@ -336,9 +354,19 @@ public class SearchRequest extends ActionRequest implements IndicesRequest.Repla\n         return absoluteStartMillis;\n     }\n \n-    Version minVersion() {\n-        return minVersion;\n+    /**\n+     * Returns the minimum compatible shard version the search request needs to run on. If the version is null, then there are no\n+     * restrictions imposed on shards versions part of this search.\n+     */\n+    @Nullable\n+    public Version minCompatibleShardNode() {\n+        return minCompatibleShardNode;\n+    }\n+\n+    public void setMinCompatibleShardNode(Version minCompatibleShardNode) {\n+        this.minCompatibleShardNode = minCompatibleShardNode;\n     }\n+\n     /**\n      * Sets the indices the search will be executed on.\n      */\n"}}, {"oid": "137c089c279992563141f6e8ec00d31c9c21e160", "url": "https://github.com/elastic/elasticsearch/commit/137c089c279992563141f6e8ec00d31c9c21e160", "message": "Merge branch 'master' of https://github.com/elastic/elasticsearch into 63304_part1", "committedDate": "2021-01-04T13:29:03Z", "type": "commit"}, {"oid": "c262054708d2ed0b343a0b15b7aa91731c1e6d9c", "url": "https://github.com/elastic/elasticsearch/commit/c262054708d2ed0b343a0b15b7aa91731c1e6d9c", "message": "Add min_compatible_shard_node as request parameter", "committedDate": "2021-01-04T13:31:58Z", "type": "commit"}, {"oid": "7c6ab18b46496268a40562f729fa25f970964c94", "url": "https://github.com/elastic/elasticsearch/commit/7c6ab18b46496268a40562f729fa25f970964c94", "message": "Small fixes", "committedDate": "2021-01-04T16:16:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQzODU4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r551438587", "bodyText": "Should we switch to a Boolean with a default value of null ? This way we can decide the default value depending on whether the minCompatibleShardNode is set or not ? It feels wrong that you have to explicitly disable this option when using minCompatibleShardNode. It should be done automatically unless the user sets the ccsMinimizeRoundtrips value explicitly.", "author": "jimczi", "createdAt": "2021-01-04T16:52:44Z", "path": "server/src/main/java/org/elasticsearch/action/search/SearchRequest.java", "diffHunk": "@@ -97,6 +97,9 @@\n \n     private boolean ccsMinimizeRoundtrips = true;", "originalCommit": "7c6ab18b46496268a40562f729fa25f970964c94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjUxMTIzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/65896#discussion_r552511235", "bodyText": "@jimczi I've made the change, but slightly different from your suggestion as it wasn't easy to enforce a certain value for ccsMinimizeRoundtrips in all cases. Thus, I've removed the setter and kept as the sole option of setting minCompatibleShardNode for a search request - a constructor (which will also set ccsMinimizeRoundtrips).", "author": "astefan", "createdAt": "2021-01-06T11:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQzODU4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e677515ac8434089adb584b68a078d695be7e3c3", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\nindex d0b937d4604..0f47074cc73 100644\n--- a/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n+++ b/server/src/main/java/org/elasticsearch/action/search/SearchRequest.java\n\n@@ -95,7 +95,7 @@ public class SearchRequest extends ActionRequest implements IndicesRequest.Repla\n \n     private Integer preFilterShardSize;\n \n-    private boolean ccsMinimizeRoundtrips = true;\n+    private Boolean ccsMinimizeRoundtrips;\n \n     @Nullable\n     private Version minCompatibleShardNode;\n"}}, {"oid": "e677515ac8434089adb584b68a078d695be7e3c3", "url": "https://github.com/elastic/elasticsearch/commit/e677515ac8434089adb584b68a078d695be7e3c3", "message": "Address reviews", "committedDate": "2021-01-05T15:31:49Z", "type": "commit"}, {"oid": "e85c0b53d39180dba1c13b0b143cb13100830846", "url": "https://github.com/elastic/elasticsearch/commit/e85c0b53d39180dba1c13b0b143cb13100830846", "message": "Merge branch 'master' of https://github.com/elastic/elasticsearch into 63304_part1", "committedDate": "2021-01-05T16:11:09Z", "type": "commit"}, {"oid": "9a9a919757489493fc98b87b89d1bdbfeb5072b0", "url": "https://github.com/elastic/elasticsearch/commit/9a9a919757489493fc98b87b89d1bdbfeb5072b0", "message": "Differentiate between pre 7.12.0 mixed version cluster tests and post.", "committedDate": "2021-01-12T17:07:45Z", "type": "commit"}, {"oid": "b1acef2ca2f3c267959ae75df1e06f3952087b18", "url": "https://github.com/elastic/elasticsearch/commit/b1acef2ca2f3c267959ae75df1e06f3952087b18", "message": "Disable bwc tests.", "committedDate": "2021-01-12T17:15:20Z", "type": "commit"}, {"oid": "3ef1cd093a77524cd3c50da4957056e92d73d8aa", "url": "https://github.com/elastic/elasticsearch/commit/3ef1cd093a77524cd3c50da4957056e92d73d8aa", "message": "Merge branch 'master' of https://github.com/elastic/elasticsearch into 63304_part1", "committedDate": "2021-01-12T17:15:52Z", "type": "commit"}, {"oid": "d51a352fd7cdad48f561b17ae6ab89bee88b9094", "url": "https://github.com/elastic/elasticsearch/commit/d51a352fd7cdad48f561b17ae6ab89bee88b9094", "message": "Re-enable bwc tests", "committedDate": "2021-01-12T17:39:13Z", "type": "commit"}, {"oid": "54365b78becf3f0431b4e6e723f4c65adb867469", "url": "https://github.com/elastic/elasticsearch/commit/54365b78becf3f0431b4e6e723f4c65adb867469", "message": "Just to please the bwc checks, since the code is not in 7.x yet,\nuse 8.0.0 as the version to test against.", "committedDate": "2021-01-12T21:53:23Z", "type": "commit"}, {"oid": "6eadbde276cc28bab8eabe30cdc06f95b87751d4", "url": "https://github.com/elastic/elasticsearch/commit/6eadbde276cc28bab8eabe30cdc06f95b87751d4", "message": "Merge branch 'master' of https://github.com/elastic/elasticsearch into 63304_part1", "committedDate": "2021-01-12T21:53:52Z", "type": "commit"}]}