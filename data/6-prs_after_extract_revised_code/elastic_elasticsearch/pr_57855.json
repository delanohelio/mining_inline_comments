{"pr_number": 57855, "pr_title": "Add support for a 'format' option in fields retrieval.", "pr_createdAt": "2020-06-09T01:26:23Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57855", "timeline": [{"oid": "2120a2930fc1e525191d708ad13464a8406a0c2b", "url": "https://github.com/elastic/elasticsearch/commit/2120a2930fc1e525191d708ad13464a8406a0c2b", "message": "Pull FieldAndFormat into its own top-level class.", "committedDate": "2020-06-09T01:17:50Z", "type": "commit"}, {"oid": "1f5b92b7329b874c80e7b70597b58466942da0c5", "url": "https://github.com/elastic/elasticsearch/commit/1f5b92b7329b874c80e7b70597b58466942da0c5", "message": "Only include non-empty field lists in the response.", "committedDate": "2020-06-09T01:17:59Z", "type": "commit"}, {"oid": "a7d9c08a439ed7b668669d5c9d3778b65b21d0e1", "url": "https://github.com/elastic/elasticsearch/commit/a7d9c08a439ed7b668669d5c9d3778b65b21d0e1", "message": "Pass formats to FieldValueRetriever.", "committedDate": "2020-06-09T01:17:59Z", "type": "commit"}, {"oid": "51b7de7954546c576001b683e2f724974143abc0", "url": "https://github.com/elastic/elasticsearch/commit/51b7de7954546c576001b683e2f724974143abc0", "message": "Add support for passing a custom date format.", "committedDate": "2020-06-09T01:18:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMTA1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57855#discussion_r437421051", "bodyText": "I'd prefer to avoid this one day, but for now it is cool. And, I think it'd be a bit overboard to try and avoid it now. If I did want to avoid it maybe something like:\npublic Function<Object, String> sourceParser(String format);\n\nI don't know. Just thinking out loud. Not needed now.", "author": "nik9000", "createdAt": "2020-06-09T13:35:05Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java", "diffHunk": "@@ -628,12 +628,16 @@ protected void parseCreateField(ParseContext context) throws IOException {\n     }\n \n     @Override\n-    public String parseSourceValue(Object value) {\n+    public String parseSourceValue(Object value, String format) {\n         String date = value.toString();\n         long timestamp = fieldType().parse(date);\n-\n         ZonedDateTime dateTime = fieldType().resolution().toInstant(timestamp).atZone(ZoneOffset.UTC);\n-        return fieldType().dateTimeFormatter().format(dateTime);\n+\n+        DateFormatter dateTimeFormatter = fieldType().dateTimeFormatter();\n+        if (format != null) {\n+            dateTimeFormatter = DateFormatter.forPattern(format).withLocale(dateTimeFormatter.locale());", "originalCommit": "51b7de7954546c576001b683e2f724974143abc0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyNDI3NA==", "url": "https://github.com/elastic/elasticsearch/pull/57855#discussion_r437524274", "bodyText": "I agree, instead of a function we could even introduce an object like SourceValueParser. This could also help clean up some of the fragility around the dual lookupValues and parseSourceValue methods. It did feel like overkill to do this refactor now, though.", "author": "jtibshirani", "createdAt": "2020-06-09T15:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMTA1MQ=="}], "type": "inlineReview", "revised_code": null}]}