{"pr_number": 54805, "pr_title": "ILM stop step execution if writeIndex is false", "pr_createdAt": "2020-04-06T13:05:22Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54805", "timeline": [{"oid": "67a9cb9c20cae3e8d90d2192ecf0caaf452e606e", "url": "https://github.com/elastic/elasticsearch/commit/67a9cb9c20cae3e8d90d2192ecf0caaf452e606e", "message": "ILM stop step execution if writeIndex is false", "committedDate": "2020-04-06T13:04:10Z", "type": "commit"}, {"oid": "6b29eadf5625588a1c1daaa12c097ff8384cb02e", "url": "https://github.com/elastic/elasticsearch/commit/6b29eadf5625588a1c1daaa12c097ff8384cb02e", "message": "Drop empty line", "committedDate": "2020-04-06T13:06:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNDY1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/54805#discussion_r404314659", "bodyText": "This test does not fail if you comment out the return; in the production code above, which I would expect it to. I think we need some more thorough verification here.", "author": "gwbrown", "createdAt": "2020-04-06T18:52:10Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java", "diffHunk": "@@ -209,6 +213,64 @@ public void onFailure(Exception e) {\n         Mockito.verify(indicesClient, Mockito.only()).rolloverIndex(Mockito.any(), Mockito.any());\n     }\n \n+    public void testPerformActionWriteIndexIsFalse() {", "originalCommit": "6b29eadf5625588a1c1daaa12c097ff8384cb02e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0NTkxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/54805#discussion_r414645919", "bodyText": "thanks for the suggestion, adding a verify on the client mock", "author": "andreidan", "createdAt": "2020-04-24T15:02:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNDY1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4a47a05fda5c6faab7e8996ce05167581ed07dc7", "chunk": "diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java\nindex 5eddc1521f3..0c13a17a332 100644\n--- a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java\n+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java\n\n@@ -210,7 +208,7 @@ public class WaitForRolloverReadyStepTests extends AbstractStepTestCase<WaitForR\n             }\n         }, MASTER_TIMEOUT);\n \n-        Mockito.verify(indicesClient, Mockito.only()).rolloverIndex(Mockito.any(), Mockito.any());\n+        verify(indicesClient, Mockito.only()).rolloverIndex(Mockito.any(), Mockito.any());\n     }\n \n     public void testPerformActionWriteIndexIsFalse() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNjIzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/54805#discussion_r404316239", "bodyText": "I think this would be more readable if the object was separated out rather than having an anonymous inner class inline.  We have VerifyingClient private classes in a few test suites, might be worth using a similar approach here (assuming this test remains here rather than being folded into testEvaluateCondition as suggested above).", "author": "gwbrown", "createdAt": "2020-04-06T18:54:49Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java", "diffHunk": "@@ -209,6 +213,64 @@ public void onFailure(Exception e) {\n         Mockito.verify(indicesClient, Mockito.only()).rolloverIndex(Mockito.any(), Mockito.any());\n     }\n \n+    public void testPerformActionWriteIndexIsFalse() {\n+        String alias = randomAlphaOfLength(5);\n+        IndexMetadata indexMetadata = IndexMetadata.builder(randomAlphaOfLength(10))\n+            .putAlias(AliasMetadata.builder(alias).writeIndex(false))\n+            .settings(settings(Version.CURRENT)\n+                .put(RolloverAction.LIFECYCLE_ROLLOVER_ALIAS, alias))\n+            .numberOfShards(randomIntBetween(1, 5)).numberOfReplicas(randomIntBetween(0, 5)).build();\n+\n+        WaitForRolloverReadyStep step = createRandomInstance();\n+        step.evaluateCondition(indexMetadata, new AsyncWaitStep.Listener() {\n+\n+            @Override\n+            public void onResponse(boolean complete, ToXContentObject infomationContext) {\n+                fail(\"expecting failure as the write index must be set to true or null\");\n+            }\n+\n+            @Override\n+            public void onFailure(Exception e) {\n+                assertThat(e.getMessage(), is(String.format(Locale.ROOT, \"index [%s] is not the write index for alias [%s]\",\n+                    indexMetadata.getIndex().getName(), alias)));\n+            }\n+        }, MASTER_TIMEOUT);\n+    }\n+\n+    public void testPerformActionWriteIndexIsNullOrTrue() {\n+        String alias = randomAlphaOfLength(5);\n+        IndexMetadata indexMetadata = IndexMetadata.builder(randomAlphaOfLength(10))\n+            .putAlias(AliasMetadata.builder(alias).writeIndex(randomFrom(true, null)))\n+            .settings(settings(Version.CURRENT)\n+                .put(RolloverAction.LIFECYCLE_ROLLOVER_ALIAS, alias))\n+            .numberOfShards(randomIntBetween(1, 5)).numberOfReplicas(randomIntBetween(0, 5)).build();\n+\n+        try (NoOpClient noOpClient = new NoOpClient(getTestName()) {\n+            @Override\n+            protected <Request extends ActionRequest, Response extends ActionResponse> void doExecute(ActionType<Response> action,\n+                                                                                                      Request request,\n+                                                                                                      ActionListener<Response> listener) {\n+                listener.onResponse((Response) new RolloverResponse(null, null, Map.of(\"condition\", true), true, true, true, true));\n+            }\n+        }) {", "originalCommit": "6b29eadf5625588a1c1daaa12c097ff8384cb02e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4a47a05fda5c6faab7e8996ce05167581ed07dc7", "chunk": "diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java\nindex 5eddc1521f3..0c13a17a332 100644\n--- a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java\n+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java\n\n@@ -210,7 +208,7 @@ public class WaitForRolloverReadyStepTests extends AbstractStepTestCase<WaitForR\n             }\n         }, MASTER_TIMEOUT);\n \n-        Mockito.verify(indicesClient, Mockito.only()).rolloverIndex(Mockito.any(), Mockito.any());\n+        verify(indicesClient, Mockito.only()).rolloverIndex(Mockito.any(), Mockito.any());\n     }\n \n     public void testPerformActionWriteIndexIsFalse() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxODk5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54805#discussion_r404318995", "bodyText": "Why not modify testEvaluateCondition to randomly set the writeIndex flag, rather than having a whole separate test case? Or even parameterizing testEvaluateCondition and running it once with each option?", "author": "gwbrown", "createdAt": "2020-04-06T18:59:30Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java", "diffHunk": "@@ -209,6 +213,64 @@ public void onFailure(Exception e) {\n         Mockito.verify(indicesClient, Mockito.only()).rolloverIndex(Mockito.any(), Mockito.any());\n     }\n \n+    public void testPerformActionWriteIndexIsFalse() {\n+        String alias = randomAlphaOfLength(5);\n+        IndexMetadata indexMetadata = IndexMetadata.builder(randomAlphaOfLength(10))\n+            .putAlias(AliasMetadata.builder(alias).writeIndex(false))\n+            .settings(settings(Version.CURRENT)\n+                .put(RolloverAction.LIFECYCLE_ROLLOVER_ALIAS, alias))\n+            .numberOfShards(randomIntBetween(1, 5)).numberOfReplicas(randomIntBetween(0, 5)).build();\n+\n+        WaitForRolloverReadyStep step = createRandomInstance();\n+        step.evaluateCondition(indexMetadata, new AsyncWaitStep.Listener() {\n+\n+            @Override\n+            public void onResponse(boolean complete, ToXContentObject infomationContext) {\n+                fail(\"expecting failure as the write index must be set to true or null\");\n+            }\n+\n+            @Override\n+            public void onFailure(Exception e) {\n+                assertThat(e.getMessage(), is(String.format(Locale.ROOT, \"index [%s] is not the write index for alias [%s]\",\n+                    indexMetadata.getIndex().getName(), alias)));\n+            }\n+        }, MASTER_TIMEOUT);\n+    }\n+\n+    public void testPerformActionWriteIndexIsNullOrTrue() {", "originalCommit": "6b29eadf5625588a1c1daaa12c097ff8384cb02e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0ODIyOA==", "url": "https://github.com/elastic/elasticsearch/pull/54805#discussion_r414648228", "bodyText": "good shout! (I like to see unit tests as specification, collapse them and just by reading the test names understand what the invariants are, but in this case I think it makes sense to drop the extra test) Thanks for the suggestion", "author": "andreidan", "createdAt": "2020-04-24T15:05:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxODk5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "4a47a05fda5c6faab7e8996ce05167581ed07dc7", "chunk": "diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java\nindex 5eddc1521f3..0c13a17a332 100644\n--- a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java\n+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ilm/WaitForRolloverReadyStepTests.java\n\n@@ -210,7 +208,7 @@ public class WaitForRolloverReadyStepTests extends AbstractStepTestCase<WaitForR\n             }\n         }, MASTER_TIMEOUT);\n \n-        Mockito.verify(indicesClient, Mockito.only()).rolloverIndex(Mockito.any(), Mockito.any());\n+        verify(indicesClient, Mockito.only()).rolloverIndex(Mockito.any(), Mockito.any());\n     }\n \n     public void testPerformActionWriteIndexIsFalse() {\n"}}, {"oid": "dd8be6957599a96b45f15dad4cecf71599e6ef53", "url": "https://github.com/elastic/elasticsearch/commit/dd8be6957599a96b45f15dad4cecf71599e6ef53", "message": "Merge branch 'master' into ilm-stop-step-exec", "committedDate": "2020-04-19T14:36:08Z", "type": "commit"}, {"oid": "f181342186eec0e609bf96bc118f5cc463595e88", "url": "https://github.com/elastic/elasticsearch/commit/f181342186eec0e609bf96bc118f5cc463595e88", "message": "Merge branch 'master' into ilm-stop-step-exec", "committedDate": "2020-04-24T13:23:12Z", "type": "commit"}, {"oid": "4a47a05fda5c6faab7e8996ce05167581ed07dc7", "url": "https://github.com/elastic/elasticsearch/commit/4a47a05fda5c6faab7e8996ce05167581ed07dc7", "message": "Use null/true writeIndex in testEvaluate, drop extra test, verify client interaction", "committedDate": "2020-04-24T15:08:25Z", "type": "commit"}, {"oid": "3f0aebb02beb4df14b9f839e2f69a8e422f398a3", "url": "https://github.com/elastic/elasticsearch/commit/3f0aebb02beb4df14b9f839e2f69a8e422f398a3", "message": "Add new line for readability", "committedDate": "2020-04-24T15:10:14Z", "type": "commit"}]}