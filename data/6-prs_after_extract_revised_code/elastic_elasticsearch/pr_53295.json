{"pr_number": 53295, "pr_title": "Perform evaluation in multiple steps when necessary", "pr_createdAt": "2020-03-09T16:54:22Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53295", "timeline": [{"oid": "367be5e6b09108f8fa735b80b39667e914635078", "url": "https://github.com/elastic/elasticsearch/commit/367be5e6b09108f8fa735b80b39667e914635078", "message": "Perform evaluation in multiple steps when necessary", "committedDate": "2020-03-10T14:54:20Z", "type": "forcePushed"}, {"oid": "77da3a1fdf7c09bed361f5df2e2ade0d5f6d5604", "url": "https://github.com/elastic/elasticsearch/commit/77da3a1fdf7c09bed361f5df2e2ade0d5f6d5604", "message": "Perform evaluation in multiple steps when necessary", "committedDate": "2020-03-11T06:37:57Z", "type": "forcePushed"}, {"oid": "1ab682cc5648487ff5628c83ced61ef7d7d0c3ee", "url": "https://github.com/elastic/elasticsearch/commit/1ab682cc5648487ff5628c83ced61ef7d7d0c3ee", "message": "Perform evaluation in multiple steps when necessary", "committedDate": "2020-03-11T06:52:45Z", "type": "forcePushed"}, {"oid": "baff92b35539844df5bfe987f04b5cd9675540c8", "url": "https://github.com/elastic/elasticsearch/commit/baff92b35539844df5bfe987f04b5cd9675540c8", "message": "Perform evaluation in multiple steps when necessary", "committedDate": "2020-03-11T07:05:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg2OTk4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53295#discussion_r390869986", "bodyText": "I think it's unusual to build a new Settings object that contains just one setting and pass that around in the production code.  It is passed through three layers of other objects, so in the future this could create confusion for maintainers of the innermost classes about what settings are available.  It makes me wonder if to avoid risk of future mistakes you should introduce a new class, say EvaluationParameters that has a member for each required parameter, so it will start off with just maxBuckets.  (Alternatively maxBuckets could just be passed through the three layers as an int, but I guess you were trying to future proof this so that fewer changes are needed when a second dynamic setting needs to be passed.  A bespoke class solves this while avoiding confusion about exactly which settings are included.)", "author": "droberts195", "createdAt": "2020-03-11T10:19:25Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportEvaluateDataFrameAction.java", "diffHunk": "@@ -48,7 +66,9 @@ protected void doExecute(Task task, EvaluateDataFrameAction.Request request,\n             listener::onFailure\n         );\n \n-        EvaluationExecutor evaluationExecutor = new EvaluationExecutor(threadPool, client, request);\n+        // Create a collection of settings to be used by evaluation metrics. Once passed to {@link EvaluationExecutor}, it is immutable.\n+        Settings settings = Settings.builder().put(MAX_BUCKET_SETTING.getKey(), maxBuckets.get()).build();", "originalCommit": "baff92b35539844df5bfe987f04b5cd9675540c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg4NTc3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/53295#discussion_r390885775", "bodyText": "It is passed through three layers of other objects, so in the future this could create confusion for maintainers of the innermost classes about what settings are available\n\nTotally agree. Initially I tried to pass the whole settings object but I couldn't find a way to fetch the current version of it from clusterService.\n\nyou should introduce a new class, say EvaluationParameters that has a member for each required parameter, so it will start off with just maxBuckets.\n\nGood idea, will do that.\n\nI guess you were trying to future proof this so that fewer changes are needed when a second dynamic setting needs to be passed.\n\nExactly, that was my intention.", "author": "przemekwitek", "createdAt": "2020-03-11T10:47:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg2OTk4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwNjEwMA==", "url": "https://github.com/elastic/elasticsearch/pull/53295#discussion_r390906100", "bodyText": "This is now done.\nPTAL", "author": "przemekwitek", "createdAt": "2020-03-11T11:27:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg2OTk4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d8576046b03efc5925195b680fa407a17c88b5a2", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportEvaluateDataFrameAction.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportEvaluateDataFrameAction.java\nindex 9c2e9d2de0c..c6d92413dd3 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportEvaluateDataFrameAction.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportEvaluateDataFrameAction.java\n\n@@ -66,9 +64,9 @@ public class TransportEvaluateDataFrameAction extends HandledTransportAction<Eva\n             listener::onFailure\n         );\n \n-        // Create a collection of settings to be used by evaluation metrics. Once passed to {@link EvaluationExecutor}, it is immutable.\n-        Settings settings = Settings.builder().put(MAX_BUCKET_SETTING.getKey(), maxBuckets.get()).build();\n-        EvaluationExecutor evaluationExecutor = new EvaluationExecutor(threadPool, client, settings, request);\n+        // Create an immutable collection of parameters to be used by evaluation metrics.\n+        EvaluationParameters parameters = new EvaluationParameters(maxBuckets.get());\n+        EvaluationExecutor evaluationExecutor = new EvaluationExecutor(threadPool, client, parameters, request);\n         evaluationExecutor.execute(resultsListener);\n     }\n \n"}}, {"oid": "d8576046b03efc5925195b680fa407a17c88b5a2", "url": "https://github.com/elastic/elasticsearch/commit/d8576046b03efc5925195b680fa407a17c88b5a2", "message": "Introduce EvaluationParameters class and its unit tests", "committedDate": "2020-03-11T11:22:28Z", "type": "forcePushed"}, {"oid": "778e54067195d498e4c80053deade00145e2d4aa", "url": "https://github.com/elastic/elasticsearch/commit/778e54067195d498e4c80053deade00145e2d4aa", "message": "Perform evaluation in multiple steps when necessary", "committedDate": "2020-03-11T12:23:24Z", "type": "commit"}, {"oid": "5b2b8b9c14e3cde6652a1d363c5796b267decb56", "url": "https://github.com/elastic/elasticsearch/commit/5b2b8b9c14e3cde6652a1d363c5796b267decb56", "message": "Introduce EvaluationParameters class and its unit tests", "committedDate": "2020-03-11T12:23:24Z", "type": "commit"}, {"oid": "0e13a82665b6e732ce170b8ed31f648fb1f1e2a5", "url": "https://github.com/elastic/elasticsearch/commit/0e13a82665b6e732ce170b8ed31f648fb1f1e2a5", "message": "Add field comment", "committedDate": "2020-03-11T12:23:24Z", "type": "commit"}, {"oid": "0e13a82665b6e732ce170b8ed31f648fb1f1e2a5", "url": "https://github.com/elastic/elasticsearch/commit/0e13a82665b6e732ce170b8ed31f648fb1f1e2a5", "message": "Add field comment", "committedDate": "2020-03-11T12:23:24Z", "type": "forcePushed"}]}