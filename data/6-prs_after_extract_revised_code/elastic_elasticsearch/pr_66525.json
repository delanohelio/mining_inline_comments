{"pr_number": 66525, "pr_title": "Remove ban parent-task BWC", "pr_createdAt": "2020-12-17T14:44:09Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66525", "timeline": [{"oid": "2c4286f7cfafd12db1cbcedeeccd368c2a59cec5", "url": "https://github.com/elastic/elasticsearch/commit/2c4286f7cfafd12db1cbcedeeccd368c2a59cec5", "message": "Remove ban parent-task BWC", "committedDate": "2020-12-17T14:38:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2MjMzMw==", "url": "https://github.com/elastic/elasticsearch/pull/66525#discussion_r545162333", "bodyText": "So good \ud83c\udf89", "author": "DaveCTurner", "createdAt": "2020-12-17T15:08:11Z", "path": "server/src/main/java/org/elasticsearch/tasks/TaskManager.java", "diffHunk": "@@ -502,21 +482,6 @@ public String toString() {\n     @Override\n     public void applyClusterState(ClusterChangedEvent event) {\n         lastDiscoveryNodes = event.state().getNodes();\n-        if (event.nodesRemoved()) {\n-            synchronized (bannedParents) {\n-                lastDiscoveryNodes = event.state().getNodes();\n-                // Remove all bans that were registered by nodes that are no longer in the cluster state", "originalCommit": "2c4286f7cfafd12db1cbcedeeccd368c2a59cec5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2NzU0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66525#discussion_r545167542", "bodyText": "Hmm this test seems somewhat useful, although I see that it's not quite valid any more. Can we make it valid again by, say, closing the connections from the \"removed\" nodes?", "author": "DaveCTurner", "createdAt": "2020-12-17T15:14:55Z", "path": "server/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/CancellableTasksTests.java", "diffHunk": "@@ -376,101 +372,6 @@ public void testRegisterAndExecuteChildTaskWhileParentTaskIsBeingCanceled() thro\n         assertTrue(\"onChildTasksCompleted() is not invoked\", latch.await(1, TimeUnit.SECONDS));\n     }\n \n-    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/66518\")\n-    public void testTaskCancellationOnCoordinatingNodeLeavingTheCluster() throws Exception {", "originalCommit": "2c4286f7cfafd12db1cbcedeeccd368c2a59cec5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI0MjE3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66525#discussion_r545242171", "bodyText": "+1, I fixed it in 5b57123", "author": "dnhatn", "createdAt": "2020-12-17T16:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2NzU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2MjI4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66525#discussion_r545262287", "bodyText": "The adjusted test fails for me after a few iterations. Not reproducibly, otherwise I'd share a seed, but hopefully you can see this too.", "author": "DaveCTurner", "createdAt": "2020-12-17T17:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2NzU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2Nzc0MA==", "url": "https://github.com/elastic/elasticsearch/pull/66525#discussion_r545267740", "bodyText": "Thanks for checking. I will run it a few hundred iterations.", "author": "dnhatn", "createdAt": "2020-12-17T17:27:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2NzU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzNDU1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66525#discussion_r545534559", "bodyText": "I pushed the fix in ff8b89c", "author": "dnhatn", "createdAt": "2020-12-18T02:35:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2NzU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5b5712314964bc1131eb932c63353ad3fcb38167", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/CancellableTasksTests.java b/server/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/CancellableTasksTests.java\nindex fafe119d384..40e32e48e68 100644\n--- a/server/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/CancellableTasksTests.java\n+++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/CancellableTasksTests.java\n\n@@ -372,6 +373,91 @@ public class CancellableTasksTests extends TaskManagerTestCase {\n         assertTrue(\"onChildTasksCompleted() is not invoked\", latch.await(1, TimeUnit.SECONDS));\n     }\n \n+    public void testTaskCancelledWhenConnectionClose() throws Exception {\n+        setupTestNodes(Settings.EMPTY);\n+        connectNodes(testNodes);\n+        CountDownLatch responseLatch = new CountDownLatch(1);\n+        final AtomicReference<NodesResponse> responseReference = new AtomicReference<>();\n+        final AtomicReference<Throwable> throwableReference = new AtomicReference<>();\n+        int blockedNodesCount = randomIntBetween(0, nodesCount - 1);\n+\n+        // We shouldn't block on the first node since it's leaving the cluster anyway so it doesn't matter\n+        List<TestNode> blockOnNodes = randomSubsetOf(blockedNodesCount, Arrays.copyOfRange(testNodes, 1, nodesCount));\n+        Task mainTask = startCancellableTestNodesAction(true, Arrays.asList(testNodes), blockOnNodes,\n+            new CancellableNodesRequest(\"Test Request\"), new\n+                ActionListener<NodesResponse>() {\n+                    @Override\n+                    public void onResponse(NodesResponse listTasksResponse) {\n+                        responseReference.set(listTasksResponse);\n+                        responseLatch.countDown();\n+                    }\n+\n+                    @Override\n+                    public void onFailure(Exception e) {\n+                        throwableReference.set(e);\n+                        responseLatch.countDown();\n+                    }\n+                }\n+        );\n+\n+        String mainNode = testNodes[0].getNodeId();\n+\n+        // Make sure that tasks are running\n+        ListTasksResponse listTasksResponse = ActionTestUtils.executeBlocking(\n+            testNodes[randomIntBetween(0, testNodes.length - 1)].transportListTasksAction,\n+            new ListTasksRequest().setParentTaskId(new TaskId(mainNode, mainTask.getId())));\n+        assertThat(listTasksResponse.getTasks().size(), greaterThanOrEqualTo(blockOnNodes.size()));\n+\n+        // Simulate connections close\n+        if (randomBoolean()) {\n+            for (int i = 1; i < testNodes.length; i++) {\n+                testNodes[i].transportService.disconnectFromNode(testNodes[0].discoveryNode());\n+            }\n+            if (randomBoolean()) {\n+                logger.info(\"--> Simulate issuing cancel request on the node that is about to leave the cluster\");\n+                // Simulate issuing cancel request on the node that is about to leave the cluster\n+                CancelTasksRequest request = new CancelTasksRequest();\n+                request.setReason(\"Testing Cancellation\");\n+                request.setTaskId(new TaskId(testNodes[0].getNodeId(), mainTask.getId()));\n+                // And send the cancellation request to a random node\n+                CancelTasksResponse response = ActionTestUtils.executeBlocking(testNodes[0].transportCancelTasksAction, request);\n+                logger.info(\"--> Done simulating issuing cancel request on the node that is about to leave the cluster\");\n+                // This node still thinks that's part of the cluster, so cancelling should look successful\n+                assertThat(response.getTasks().size(), lessThanOrEqualTo(1));\n+                assertThat(response.getTaskFailures().size(), lessThanOrEqualTo(1));\n+                assertThat(response.getTaskFailures().size() + response.getTasks().size(), lessThanOrEqualTo(1));\n+            }\n+        }\n+\n+        if (randomBoolean()) {\n+            testNodes[0].close();\n+        } else {\n+            for (TestNode blockOnNode : blockOnNodes) {\n+                if (randomBoolean()) {\n+                    testNodes[0].transportService.disconnectFromNode(blockOnNode.discoveryNode());\n+                } else {\n+                    testNodes[0].transportService.getConnection(blockOnNode.discoveryNode()).close();\n+                }\n+            }\n+        }\n+\n+        assertBusy(() -> {\n+            // Make sure that tasks are no longer running\n+            ListTasksResponse listTasksResponse1 = ActionTestUtils.executeBlocking(\n+                testNodes[randomIntBetween(1, testNodes.length - 1)].transportListTasksAction,\n+                new ListTasksRequest().setTaskId(new TaskId(mainNode, mainTask.getId())));\n+            assertEquals(0, listTasksResponse1.getTasks().size());\n+        });\n+\n+        // Wait for clean up\n+        responseLatch.await();\n+        assertBusy(() -> {\n+            for (int i = 0; i < testNodes.length; i++) {\n+                assertEquals(\"No bans on the node \" + i, 0, testNodes[i].transportService.getTaskManager().getBanCount());\n+            }\n+        });\n+    }\n+\n     public void testNonExistingTaskCancellation() throws Exception {\n         setupTestNodes(Settings.EMPTY);\n         connectNodes(testNodes);\n"}}, {"oid": "5b5712314964bc1131eb932c63353ad3fcb38167", "url": "https://github.com/elastic/elasticsearch/commit/5b5712314964bc1131eb932c63353ad3fcb38167", "message": "fix test", "committedDate": "2020-12-17T16:49:48Z", "type": "commit"}, {"oid": "6a365608e904f52cf664c0bcedfe07fc8915fe65", "url": "https://github.com/elastic/elasticsearch/commit/6a365608e904f52cf664c0bcedfe07fc8915fe65", "message": "Merge branch 'master' into remove-bwc-task-ban", "committedDate": "2020-12-17T16:50:22Z", "type": "commit"}, {"oid": "ff8b89cb1cbd6e4d689f2f9bffacb5ce3620ffa3", "url": "https://github.com/elastic/elasticsearch/commit/ff8b89cb1cbd6e4d689f2f9bffacb5ce3620ffa3", "message": "fix test", "committedDate": "2020-12-18T02:33:25Z", "type": "commit"}, {"oid": "54ab491cf1bd3d6338f17363b5b41c858c2d5b9b", "url": "https://github.com/elastic/elasticsearch/commit/54ab491cf1bd3d6338f17363b5b41c858c2d5b9b", "message": "Merge branch 'master' into remove-bwc-task-ban", "committedDate": "2020-12-18T02:34:12Z", "type": "commit"}]}