{"pr_number": 54121, "pr_title": "[ML] prefer secondary authorization header for data[feed|frame] authz", "pr_createdAt": "2020-03-24T19:00:58Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54121", "timeline": [{"oid": "30cfb12b7dc91c147567e4ca66b635f012df4a01", "url": "https://github.com/elastic/elasticsearch/commit/30cfb12b7dc91c147567e4ca66b635f012df4a01", "message": "[ML] prefer secondary authorization header for data[feed|frame] authz", "committedDate": "2020-03-24T19:00:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5MjU4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54121#discussion_r397392585", "bodyText": "@tvernum I made this public so that it is accessible to the ML plugin", "author": "benwtrent", "createdAt": "2020-03-24T19:01:37Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/support/SecondaryAuthentication.java", "diffHunk": "@@ -24,7 +24,7 @@\n  */\n public class SecondaryAuthentication {\n \n-    private static final String THREAD_CTX_KEY = \"_xpack_security_secondary_authc\";\n+    public static final String THREAD_CTX_KEY = \"_xpack_security_secondary_authc\";", "originalCommit": "30cfb12b7dc91c147567e4ca66b635f012df4a01", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4674ffaf3e11e14088f178dc5e426688bb996a05", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/support/SecondaryAuthentication.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/support/SecondaryAuthentication.java\nindex c7e3165e515..213c94e7dad 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/support/SecondaryAuthentication.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/support/SecondaryAuthentication.java\n\n@@ -24,7 +25,7 @@ import java.util.function.Function;\n  */\n public class SecondaryAuthentication {\n \n-    public static final String THREAD_CTX_KEY = \"_xpack_security_secondary_authc\";\n+    private static final String THREAD_CTX_KEY = \"_xpack_security_secondary_authc\";\n \n     private final SecurityContext securityContext;\n     private final Authentication authentication;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDg2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54121#discussion_r397394861", "bodyText": "@tvernum We are storing _xpack_security_secondary_authc as the primary auth for some of our tasks. This way we \"prefer\" the secondary auth if it was provided.\nIs simply replacing _xpack_security_authentication with the contents of _xpack_security_secondary_authc acceptable? Or are there technical limitations/details that I am missing?", "author": "benwtrent", "createdAt": "2020-03-24T19:05:39Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/AuthHeadersExtractor.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.ml.utils;\n+\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.xpack.core.ClientHelper;\n+import org.elasticsearch.xpack.core.security.authc.AuthenticationField;\n+import org.elasticsearch.xpack.core.security.authc.support.SecondaryAuthentication;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+public final class AuthHeadersExtractor {\n+\n+    private AuthHeadersExtractor() {}\n+\n+    public static Map<String, String> extractAuthHeadersAndPreferSecondaryAuth(ThreadContext context) {\n+        Map<String, String> threadHeaders = context.getHeaders();\n+        if (threadHeaders == null || threadHeaders.isEmpty()) {\n+            return new HashMap<>();\n+        }\n+\n+        Map<String, String> headers = threadHeaders.entrySet().stream()\n+            .filter(e -> ClientHelper.SECURITY_HEADER_FILTERS.contains(e.getKey()))\n+            .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n+        String secondaryAuth = headers.get(SecondaryAuthentication.THREAD_CTX_KEY);\n+        if (secondaryAuth != null) {\n+            headers.put(AuthenticationField.AUTHENTICATION_KEY, secondaryAuth);\n+        }\n+        return headers;", "originalCommit": "30cfb12b7dc91c147567e4ca66b635f012df4a01", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA3NDQzMw==", "url": "https://github.com/elastic/elasticsearch/pull/54121#discussion_r401074433", "bodyText": "Following the test you did yesterday this looks like it works as intended now.", "author": "droberts195", "createdAt": "2020-03-31T17:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA0Nzc5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54121#discussion_r402047791", "bodyText": "This isn't how I expected you would do it...\nI had presumed that you would activate the secondary authentication so that it became the only authentication and then just do what you've always done.\nSomething like:\nRunnable body = () -> {\n   final Map<String, String> headers = threadPool.getThreadContext().getHeaders();   \n   datafeedConfigProvider.updateDatefeedConfig(\n            request.getUpdate().getId(),\n            request.getUpdate(),\n            headers,\n            jobConfigProvider::validateDatafeedJob,\n            ActionListener.wrap(\n                updatedConfig -> listener.onResponse(new PutDatafeedAction.Response(updatedConfig)),\n                listener::onFailure));\n};\nSecondaryAuthentication secondaryAuth = SecondaryAuthentication.readFromContext(securityContext);\nif (secondaryAuth != null) {\n body = secondaryAuth.wrap(body);\n}\nbody.run();\n\nWe could definitely, reduce some of that boilerplate and move it into SecondaryAuthentication if it would help, but the above is how I expected secondary auth to be used.", "author": "tvernum", "createdAt": "2020-04-02T04:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1OTc1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/54121#discussion_r402259759", "bodyText": "@tvernum we need the headers to be respected by _search and apply the roles that are stored in that context.\nDo the other APIs respect secondary auth headers?\nAnother pain point is BWC. As a 'new' datafeed created with secondary auth headers could be used on an 'old' node. Then security would know nothing of the secondary auth concept and the datafeed would fail.", "author": "benwtrent", "createdAt": "2020-04-02T12:03:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2NzU1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/54121#discussion_r402267556", "bodyText": "Ah, I think I understand. secondaryAuth.wrap changes the stored headers so that the secondary auth header becomes the Authorization header.\nSeems more idiomatic than iterating a map :). Let experiment and see if I can get it to work this way.", "author": "benwtrent", "createdAt": "2020-04-02T12:18:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDg2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d06ae0579cddffd697d5f08f38768a243186bec6", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/AuthHeadersExtractor.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/AuthHeadersExtractor.java\nindex cea6d99e56a..cef34407333 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/AuthHeadersExtractor.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/AuthHeadersExtractor.java\n\n@@ -28,7 +28,7 @@ public final class AuthHeadersExtractor {\n         Map<String, String> headers = threadHeaders.entrySet().stream()\n             .filter(e -> ClientHelper.SECURITY_HEADER_FILTERS.contains(e.getKey()))\n             .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n-        String secondaryAuth = headers.get(SecondaryAuthentication.THREAD_CTX_KEY);\n+        String secondaryAuth = headers.remove(SecondaryAuthentication.THREAD_CTX_KEY);\n         if (secondaryAuth != null) {\n             headers.put(AuthenticationField.AUTHENTICATION_KEY, secondaryAuth);\n         }\n"}}, {"oid": "740e6667956ca7e3e0fbb89ba82e71b692675dbe", "url": "https://github.com/elastic/elasticsearch/commit/740e6667956ca7e3e0fbb89ba82e71b692675dbe", "message": "Merge branch 'master' into feature/ml-allow-secondary-auth-header", "committedDate": "2020-03-24T19:12:14Z", "type": "commit"}, {"oid": "d06ae0579cddffd697d5f08f38768a243186bec6", "url": "https://github.com/elastic/elasticsearch/commit/d06ae0579cddffd697d5f08f38768a243186bec6", "message": "removing secondary auth header when storing and preferring it as primary", "committedDate": "2020-03-30T19:29:03Z", "type": "commit"}, {"oid": "f821505ba013548873a1924e4d486c9eedeab425", "url": "https://github.com/elastic/elasticsearch/commit/f821505ba013548873a1924e4d486c9eedeab425", "message": "Merge branch 'master' into feature/ml-allow-secondary-auth-header", "committedDate": "2020-03-30T19:33:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA3NTE5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54121#discussion_r401075195", "bodyText": "nit: 3 s's", "author": "droberts195", "createdAt": "2020-03-31T17:07:38Z", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsRestIT.java", "diffHunk": "@@ -544,6 +544,46 @@ public void testInsufficientSearchPrivilegesOnPreview() throws Exception {\n                 containsString(\"[indices:data/read/field_caps] is unauthorized for user [ml_admin]\"));\n     }\n \n+    public void testSecondaryAuthSearchPrivilegesLookBack() throws Exception {\n+        setupDataAccessRole(\"airline-data\");\n+        String jobId = \"secondary-privs-put-job\";\n+        createJob(jobId, \"airline.keyword\");\n+        String datafeedId = \"datafeed-\" + jobId;\n+        // Primary auth header does not have accesss, but secondary auth does", "originalCommit": "f821505ba013548873a1924e4d486c9eedeab425", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ed4cff3448bed284fbf6d0c3726044fa9cdf557", "chunk": "diff --git a/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsRestIT.java b/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsRestIT.java\nindex 0899e4a8729..01e6a77bd73 100644\n--- a/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsRestIT.java\n+++ b/x-pack/plugin/ml/qa/native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/DatafeedJobsRestIT.java\n\n@@ -549,7 +549,7 @@ public class DatafeedJobsRestIT extends ESRestTestCase {\n         String jobId = \"secondary-privs-put-job\";\n         createJob(jobId, \"airline.keyword\");\n         String datafeedId = \"datafeed-\" + jobId;\n-        // Primary auth header does not have accesss, but secondary auth does\n+        // Primary auth header does not have access, but secondary auth does\n         new DatafeedBuilder(datafeedId, jobId, \"airline-data\")\n                 .setAuthHeader(BASIC_AUTH_VALUE_ML_ADMIN)\n                 .setSecondaryAuthHeader(BASIC_AUTH_VALUE_ML_ADMIN_WITH_SOME_DATA_ACCESS)\n"}}, {"oid": "3ed4cff3448bed284fbf6d0c3726044fa9cdf557", "url": "https://github.com/elastic/elasticsearch/commit/3ed4cff3448bed284fbf6d0c3726044fa9cdf557", "message": "Update DatafeedJobsRestIT.java", "committedDate": "2020-03-31T18:24:52Z", "type": "commit"}, {"oid": "23578d393f4d5d5f04b280d83f1dd937dae7ec7a", "url": "https://github.com/elastic/elasticsearch/commit/23578d393f4d5d5f04b280d83f1dd937dae7ec7a", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-allow-secondary-auth-header", "committedDate": "2020-04-02T12:25:58Z", "type": "commit"}, {"oid": "4674ffaf3e11e14088f178dc5e426688bb996a05", "url": "https://github.com/elastic/elasticsearch/commit/4674ffaf3e11e14088f178dc5e426688bb996a05", "message": "adjusting how secondary auth headers are added", "committedDate": "2020-04-02T13:03:47Z", "type": "commit"}, {"oid": "4b93bd5bbeac647aeb96485170d0ac79a514aabb", "url": "https://github.com/elastic/elasticsearch/commit/4b93bd5bbeac647aeb96485170d0ac79a514aabb", "message": "fixing minor things", "committedDate": "2020-04-02T13:08:29Z", "type": "commit"}, {"oid": "b7be96d277ae3733d61c822b7ceebac993e9dbfc", "url": "https://github.com/elastic/elasticsearch/commit/b7be96d277ae3733d61c822b7ceebac993e9dbfc", "message": "reverting unnecessary change", "committedDate": "2020-04-02T13:18:41Z", "type": "commit"}]}