{"pr_number": 54134, "pr_title": "Define lifecycle tasks for running different types of packaging tests", "pr_createdAt": "2020-03-24T22:05:22Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54134", "timeline": [{"oid": "f8c7bd2645b87de675d0f2e57e24ccd5e3370a41", "url": "https://github.com/elastic/elasticsearch/commit/f8c7bd2645b87de675d0f2e57e24ccd5e3370a41", "message": "Define lifecycle tasks for running different types of packaging tests", "committedDate": "2020-03-24T21:59:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5MzA5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54134#discussion_r397493095", "bodyText": "When would this not be present? Shouldn't that be an error?", "author": "rjernst", "createdAt": "2020-03-24T22:12:12Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java", "diffHunk": "@@ -108,10 +109,18 @@ public void apply(Project project) {\n         TaskProvider<Copy> copyUpgradeTask = configureCopyUpgradeTask(project, upgradeVersion, upgradeDir);\n         TaskProvider<Copy> copyPluginsTask = configureCopyPluginsTask(project, pluginsDir);\n \n+        // Create lifecycle tasks so we can run all tests of a given type\n+        Map<ElasticsearchDistribution.Type, TaskProvider<?>> lifecyleTasks = new HashMap<>();\n+        lifecyleTasks.put(Type.DOCKER, project.getTasks().register(\"destructiveDistroTest#docker\"));\n+        lifecyleTasks.put(Type.ARCHIVE, project.getTasks().register(\"destructiveDistroTest#archives\"));\n+        lifecyleTasks.put(Type.DEB, project.getTasks().register(\"destructiveDistroTest#packages\"));\n+        lifecyleTasks.put(Type.RPM, lifecyleTasks.get(Type.DEB));\n+\n         TaskProvider<Task> destructiveDistroTest = project.getTasks().register(\"destructiveDistroTest\");\n         for (ElasticsearchDistribution distribution : distributions) {\n             TaskProvider<?> destructiveTask = configureDistroTest(project, distribution, dockerSupport);\n             destructiveDistroTest.configure(t -> t.dependsOn(destructiveTask));\n+            Optional.ofNullable(lifecyleTasks.get(distribution.getType())).ifPresent(p -> p.configure(t -> t.dependsOn(destructiveTask)));", "originalCommit": "f8c7bd2645b87de675d0f2e57e24ccd5e3370a41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5NTkwMw==", "url": "https://github.com/elastic/elasticsearch/pull/54134#discussion_r397495903", "bodyText": "Yeah, you're right. I had initially anticipated something like the integ test zip type, but we aren't testing that here. And if we do add a type we would probably want this to explode rather than silently ignore. I've removed the optional wrapper here.", "author": "mark-vieira", "createdAt": "2020-03-24T22:18:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5MzA5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "328837a41044073756dff5bab5ef562899fe8d1e", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java\nindex 958eb3811b4..bb73fe326f3 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java\n\n@@ -111,16 +111,16 @@ public class DistroTestPlugin implements Plugin<Project> {\n \n         // Create lifecycle tasks so we can run all tests of a given type\n         Map<ElasticsearchDistribution.Type, TaskProvider<?>> lifecyleTasks = new HashMap<>();\n-        lifecyleTasks.put(Type.DOCKER, project.getTasks().register(\"destructiveDistroTest#docker\"));\n-        lifecyleTasks.put(Type.ARCHIVE, project.getTasks().register(\"destructiveDistroTest#archives\"));\n-        lifecyleTasks.put(Type.DEB, project.getTasks().register(\"destructiveDistroTest#packages\"));\n+        lifecyleTasks.put(Type.DOCKER, project.getTasks().register(\"destructiveDistroTest.docker\"));\n+        lifecyleTasks.put(Type.ARCHIVE, project.getTasks().register(\"destructiveDistroTest.archives\"));\n+        lifecyleTasks.put(Type.DEB, project.getTasks().register(\"destructiveDistroTest.packages\"));\n         lifecyleTasks.put(Type.RPM, lifecyleTasks.get(Type.DEB));\n \n         TaskProvider<Task> destructiveDistroTest = project.getTasks().register(\"destructiveDistroTest\");\n         for (ElasticsearchDistribution distribution : distributions) {\n             TaskProvider<?> destructiveTask = configureDistroTest(project, distribution, dockerSupport);\n             destructiveDistroTest.configure(t -> t.dependsOn(destructiveTask));\n-            Optional.ofNullable(lifecyleTasks.get(distribution.getType())).ifPresent(p -> p.configure(t -> t.dependsOn(destructiveTask)));\n+            lifecyleTasks.get(distribution.getType()).configure(t -> t.dependsOn(destructiveTask));\n         }\n         Map<String, TaskProvider<?>> batsTests = new HashMap<>();\n         configureBatsTest(project, \"plugins\", distributionsDir, copyDistributionsTask, copyPluginsTask).configure(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5MzQ3NA==", "url": "https://github.com/elastic/elasticsearch/pull/54134#discussion_r397493474", "bodyText": "We've used . as the separator in the rest of the tasks in this plugin. Can we reuse that here? It is easier when typing out the task name to not need to add quotes as # requires.", "author": "rjernst", "createdAt": "2020-03-24T22:13:03Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java", "diffHunk": "@@ -108,10 +109,18 @@ public void apply(Project project) {\n         TaskProvider<Copy> copyUpgradeTask = configureCopyUpgradeTask(project, upgradeVersion, upgradeDir);\n         TaskProvider<Copy> copyPluginsTask = configureCopyPluginsTask(project, pluginsDir);\n \n+        // Create lifecycle tasks so we can run all tests of a given type\n+        Map<ElasticsearchDistribution.Type, TaskProvider<?>> lifecyleTasks = new HashMap<>();\n+        lifecyleTasks.put(Type.DOCKER, project.getTasks().register(\"destructiveDistroTest#docker\"));", "originalCommit": "f8c7bd2645b87de675d0f2e57e24ccd5e3370a41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5NjAxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/54134#discussion_r397496015", "bodyText": "Replaced # with ..", "author": "mark-vieira", "createdAt": "2020-03-24T22:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5MzQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "328837a41044073756dff5bab5ef562899fe8d1e", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java\nindex 958eb3811b4..bb73fe326f3 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java\n\n@@ -111,16 +111,16 @@ public class DistroTestPlugin implements Plugin<Project> {\n \n         // Create lifecycle tasks so we can run all tests of a given type\n         Map<ElasticsearchDistribution.Type, TaskProvider<?>> lifecyleTasks = new HashMap<>();\n-        lifecyleTasks.put(Type.DOCKER, project.getTasks().register(\"destructiveDistroTest#docker\"));\n-        lifecyleTasks.put(Type.ARCHIVE, project.getTasks().register(\"destructiveDistroTest#archives\"));\n-        lifecyleTasks.put(Type.DEB, project.getTasks().register(\"destructiveDistroTest#packages\"));\n+        lifecyleTasks.put(Type.DOCKER, project.getTasks().register(\"destructiveDistroTest.docker\"));\n+        lifecyleTasks.put(Type.ARCHIVE, project.getTasks().register(\"destructiveDistroTest.archives\"));\n+        lifecyleTasks.put(Type.DEB, project.getTasks().register(\"destructiveDistroTest.packages\"));\n         lifecyleTasks.put(Type.RPM, lifecyleTasks.get(Type.DEB));\n \n         TaskProvider<Task> destructiveDistroTest = project.getTasks().register(\"destructiveDistroTest\");\n         for (ElasticsearchDistribution distribution : distributions) {\n             TaskProvider<?> destructiveTask = configureDistroTest(project, distribution, dockerSupport);\n             destructiveDistroTest.configure(t -> t.dependsOn(destructiveTask));\n-            Optional.ofNullable(lifecyleTasks.get(distribution.getType())).ifPresent(p -> p.configure(t -> t.dependsOn(destructiveTask)));\n+            lifecyleTasks.get(distribution.getType()).configure(t -> t.dependsOn(destructiveTask));\n         }\n         Map<String, TaskProvider<?>> batsTests = new HashMap<>();\n         configureBatsTest(project, \"plugins\", distributionsDir, copyDistributionsTask, copyPluginsTask).configure(\n"}}, {"oid": "328837a41044073756dff5bab5ef562899fe8d1e", "url": "https://github.com/elastic/elasticsearch/commit/328837a41044073756dff5bab5ef562899fe8d1e", "message": "Address review feedback", "committedDate": "2020-03-24T22:17:54Z", "type": "commit"}, {"oid": "6f64c4b590b638050db0823e156f5beb5376d737", "url": "https://github.com/elastic/elasticsearch/commit/6f64c4b590b638050db0823e156f5beb5376d737", "message": "Remove unused import", "committedDate": "2020-03-24T22:24:11Z", "type": "commit"}, {"oid": "d1735f52e8e360b97549a73e264c42c9f656623f", "url": "https://github.com/elastic/elasticsearch/commit/d1735f52e8e360b97549a73e264c42c9f656623f", "message": "Add lifecycle tasks for Vagrant distro tests as well", "committedDate": "2020-03-25T22:26:00Z", "type": "commit"}, {"oid": "28013e6a029900fe3b51d8d3f66ea243e07af1d5", "url": "https://github.com/elastic/elasticsearch/commit/28013e6a029900fe3b51d8d3f66ea243e07af1d5", "message": "Merge branch 'master' into distro-test-lifecycle-tasks", "committedDate": "2020-03-25T22:40:10Z", "type": "commit"}]}