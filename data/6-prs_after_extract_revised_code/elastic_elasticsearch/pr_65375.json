{"pr_number": 65375, "pr_title": "SourceValueFetcher should check all possible source fields", "pr_createdAt": "2020-11-23T16:02:18Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65375", "timeline": [{"oid": "38a6e6691e9a315adb45b614b7b6dec8efba7020", "url": "https://github.com/elastic/elasticsearch/commit/38a6e6691e9a315adb45b614b7b6dec8efba7020", "message": "SourceValueFetcher should check all possible source fields", "committedDate": "2020-11-23T15:59:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxMzA5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/65375#discussion_r528913097", "bodyText": "We could move this to FieldFetcherTests, so all field retrieval tests are in one place. It already has a case around copy_to.", "author": "jtibshirani", "createdAt": "2020-11-23T18:31:17Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java", "diffHunk": "@@ -635,4 +642,34 @@ public void testCopyFromMultiField() {\n         assertThat(e.getMessage(),\n             Matchers.containsString(\"[copy_to] may not be used to copy from a multi-field: [field.bar]\"));\n     }\n+\n+    public void testCopyToValueFetching() throws IOException {", "originalCommit": "38a6e6691e9a315adb45b614b7b6dec8efba7020", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ab0f480f3548788cc1568aafc3333de011854aa", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java b/server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java\nindex 3ef7e75fdbc..3becd15cc3f 100644\n--- a/server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java\n\n@@ -642,34 +635,4 @@ public class CopyToMapperTests extends MapperServiceTestCase {\n         assertThat(e.getMessage(),\n             Matchers.containsString(\"[copy_to] may not be used to copy from a multi-field: [field.bar]\"));\n     }\n-\n-    public void testCopyToValueFetching() throws IOException {\n-        MapperService ms = createMapperService(mapping(b -> {\n-            b.startObject(\"source\");\n-            {\n-                b.field(\"type\", \"text\");\n-                b.field(\"copy_to\", \"dest\");\n-            }\n-            b.endObject();\n-            b.startObject(\"dest\");\n-            {\n-                b.field(\"type\", \"text\");\n-            }\n-            b.endObject();\n-        }));\n-\n-        ParsedDocument doc = ms.documentMapper().parse(source(b -> b.field(\"source\", \"source text\")));\n-\n-        withLuceneIndex(ms, iw -> iw.addDocuments(doc.docs()), ir -> {\n-            QueryShardContext qsc = mock(QueryShardContext.class);\n-            when(qsc.sourcePath(anyString())).thenAnswer(i -> ms.sourcePath((String)i.getArguments()[0]));\n-            MappedFieldType fieldType = ms.fieldType(\"dest\");\n-            ValueFetcher valueFetcher = fieldType.valueFetcher(qsc, null);\n-            SourceLookup sourceLookup = new SourceLookup();\n-            sourceLookup.setSegmentAndDocument(ir.leaves().get(0), 0);\n-            List<Object> values = valueFetcher.fetchValues(sourceLookup);\n-            assertThat(values.stream().map(Object::toString).collect(Collectors.toList()),\n-                contains(\"source text\"));\n-        });\n-    }\n }\n"}}, {"oid": "9ab0f480f3548788cc1568aafc3333de011854aa", "url": "https://github.com/elastic/elasticsearch/commit/9ab0f480f3548788cc1568aafc3333de011854aa", "message": "Move test to FieldFetcherTests", "committedDate": "2020-11-24T10:35:41Z", "type": "commit"}, {"oid": "2f11293f449e425e1a66e3fbb454aa389bf12e16", "url": "https://github.com/elastic/elasticsearch/commit/2f11293f449e425e1a66e3fbb454aa389bf12e16", "message": "Merge branch 'master' into fetch-copy-fields", "committedDate": "2020-11-24T11:18:05Z", "type": "commit"}]}