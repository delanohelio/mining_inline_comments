{"pr_number": 61183, "pr_title": "Some Optimizations around BytesArray", "pr_createdAt": "2020-08-17T06:30:50Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61183", "timeline": [{"oid": "7500c7257c2d5878031ca18e0d03178b25a53745", "url": "https://github.com/elastic/elasticsearch/commit/7500c7257c2d5878031ca18e0d03178b25a53745", "message": "Some Optimizations around BytesArray\n\n* Faster `equals` and `hashCode` for `BytesArray` which is nice since with this change we use it for the search cache\n* Lighter `StreamInput` for `BytesArray` that should save memory and some indirection relative to the one on the abstract bytes reference\n* Lighter `writeTo` implementation\n* Build a `BytesArray` instead of a PagedBytesReference whenever possible to save indirection and memory", "committedDate": "2020-08-17T06:29:41Z", "type": "commit"}, {"oid": "269e6546f703ec5e35cd36726cd96ac033c36598", "url": "https://github.com/elastic/elasticsearch/commit/269e6546f703ec5e35cd36726cd96ac033c36598", "message": "fix", "committedDate": "2020-08-17T07:23:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI4OTk4MA==", "url": "https://github.com/elastic/elasticsearch/pull/61183#discussion_r471289980", "bodyText": "I think this is well worth the optimization to not allocating anything for equals and hashCode since we use BytesArray as keys in request caches.", "author": "original-brownbear", "createdAt": "2020-08-17T07:25:01Z", "path": "server/src/main/java/org/elasticsearch/common/bytes/BytesArray.java", "diffHunk": "@@ -67,6 +71,33 @@ public int length() {\n         return length;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        // NOOP override to satisfy Checkstyle's EqualsHashCode\n+        return super.hashCode();\n+    }\n+\n+    @Override\n+    protected int calculateHashCode() {\n+        int result = 1;\n+        for (int i = 0; i < length; i++) {\n+            result = 31 * result + bytes[offset + i];\n+        }\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        if (this == other) {\n+            return true;\n+        }\n+        if (other instanceof BytesArray) {", "originalCommit": "7500c7257c2d5878031ca18e0d03178b25a53745", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0f447eb7428f9b4654b22ee6a0226cb17586216b", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/bytes/BytesArray.java b/server/src/main/java/org/elasticsearch/common/bytes/BytesArray.java\nindex a3d5d51d2f2..14917b43807 100644\n--- a/server/src/main/java/org/elasticsearch/common/bytes/BytesArray.java\n+++ b/server/src/main/java/org/elasticsearch/common/bytes/BytesArray.java\n\n@@ -77,15 +77,6 @@ public final class BytesArray extends AbstractBytesReference {\n         return super.hashCode();\n     }\n \n-    @Override\n-    protected int calculateHashCode() {\n-        int result = 1;\n-        for (int i = 0; i < length; i++) {\n-            result = 31 * result + bytes[offset + i];\n-        }\n-        return result;\n-    }\n-\n     @Override\n     public boolean equals(Object other) {\n         if (this == other) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5MDQ2OA==", "url": "https://github.com/elastic/elasticsearch/pull/61183#discussion_r471290468", "bodyText": "Taking advantage of the now cheaper writeTo for the BytesArray + this is always cheaper since we never cleverly batch up writes from multiple components anyway", "author": "original-brownbear", "createdAt": "2020-08-17T07:25:53Z", "path": "server/src/main/java/org/elasticsearch/common/bytes/CompositeBytesReference.java", "diffHunk": "@@ -187,6 +188,13 @@ public BytesRef next() throws IOException {\n         };\n     }\n \n+    @Override\n+    public void writeTo(OutputStream os) throws IOException {\n+        for (BytesReference reference : references) {", "originalCommit": "269e6546f703ec5e35cd36726cd96ac033c36598", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5MDg5MA==", "url": "https://github.com/elastic/elasticsearch/pull/61183#discussion_r471290890", "bodyText": "Why have another step going to the byte[] through ByteArray when we don't have to, especially with the new optimizations for that case in here.", "author": "original-brownbear", "createdAt": "2020-08-17T07:26:46Z", "path": "server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java", "diffHunk": "@@ -39,11 +39,18 @@\n     private final int offset;\n     private final int length;\n \n-    public PagedBytesReference(ByteArray byteArray, int length) {\n-        this(byteArray, 0, length);\n+    public static BytesReference of(ByteArray byteArray, int length) {\n+        if (length == 0) {\n+            return BytesArray.EMPTY;\n+        }\n+        if (byteArray.hasArray()) {\n+            return new BytesArray(byteArray.array(), 0, length);", "originalCommit": "269e6546f703ec5e35cd36726cd96ac033c36598", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25afc12af530bf4717fd0ebd056299b8956d39b3", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java b/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java\nindex 83092510e63..51cd96906dd 100644\n--- a/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java\n+++ b/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java\n\n@@ -39,17 +39,7 @@ public class PagedBytesReference extends AbstractBytesReference {\n     private final int offset;\n     private final int length;\n \n-    public static BytesReference of(ByteArray byteArray, int length) {\n-        if (length == 0) {\n-            return BytesArray.EMPTY;\n-        }\n-        if (byteArray.hasArray()) {\n-            return new BytesArray(byteArray.array(), 0, length);\n-        }\n-        return new PagedBytesReference(byteArray, 0, length);\n-    }\n-\n-    private PagedBytesReference(ByteArray byteArray, int from, int length) {\n+    PagedBytesReference(ByteArray byteArray, int from, int length) {\n         assert byteArray.hasArray() == false;\n         this.byteArray = byteArray;\n         this.offset = from;\n"}}, {"oid": "7f3f7ed986da0770397386bb951f5a45aa9dc4ae", "url": "https://github.com/elastic/elasticsearch/commit/7f3f7ed986da0770397386bb951f5a45aa9dc4ae", "message": "obsolete null check", "committedDate": "2020-08-17T07:30:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM4MzA0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/61183#discussion_r471383041", "bodyText": "assert false here, we shouldn't be calling this?", "author": "DaveCTurner", "createdAt": "2020-08-17T10:21:06Z", "path": "server/src/main/java/org/elasticsearch/common/util/BigByteArray.java", "diffHunk": "@@ -127,6 +127,16 @@ public void fill(long fromIndex, long toIndex, byte value) {\n         }\n     }\n \n+    @Override\n+    public boolean hasArray() {\n+        return false;\n+    }\n+\n+    @Override\n+    public byte[] array() {\n+        throw new UnsupportedOperationException();", "originalCommit": "7f3f7ed986da0770397386bb951f5a45aa9dc4ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM5MzE3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/61183#discussion_r471393172", "bodyText": "++", "author": "original-brownbear", "createdAt": "2020-08-17T10:40:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM4MzA0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ae645bc6cfd20d227bfceee3beaef67bc41d887e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/util/BigByteArray.java b/server/src/main/java/org/elasticsearch/common/util/BigByteArray.java\nindex d5a82a82e00..f9eee9eb7d3 100644\n--- a/server/src/main/java/org/elasticsearch/common/util/BigByteArray.java\n+++ b/server/src/main/java/org/elasticsearch/common/util/BigByteArray.java\n\n@@ -134,6 +134,7 @@ final class BigByteArray extends AbstractBigArray implements ByteArray {\n \n     @Override\n     public byte[] array() {\n+        assert false;\n         throw new UnsupportedOperationException();\n     }\n \n"}}, {"oid": "0f739cb620c06e4218af35fc579ddaa93bf0dc5c", "url": "https://github.com/elastic/elasticsearch/commit/0f739cb620c06e4218af35fc579ddaa93bf0dc5c", "message": "Merge remote-tracking branch 'elastic/master' into bytes-array-optimizations", "committedDate": "2020-08-17T10:38:58Z", "type": "commit"}, {"oid": "ae645bc6cfd20d227bfceee3beaef67bc41d887e", "url": "https://github.com/elastic/elasticsearch/commit/ae645bc6cfd20d227bfceee3beaef67bc41d887e", "message": "assert false", "committedDate": "2020-08-17T10:39:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0NjY1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/61183#discussion_r472546652", "bodyText": "Why did this change?", "author": "tbrooks8", "createdAt": "2020-08-18T23:22:39Z", "path": "server/src/test/java/org/elasticsearch/common/io/stream/BytesStreamsTests.java", "diffHunk": "@@ -796,7 +796,7 @@ public void testReadCorruptedArraySize() throws IOException {\n                     assertEquals(i, ints[i]);\n                 }\n                 EOFException eofException = expectThrows(EOFException.class, () -> streamInput.readIntArray());\n-                assertEquals(\"tried to read: 100 bytes but only 40 remaining\", eofException.getMessage());\n+                assertEquals(\"tried to read: 100 bytes but this stream is limited to: 82\", eofException.getMessage());", "originalCommit": "ae645bc6cfd20d227bfceee3beaef67bc41d887e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc4NDQ1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61183#discussion_r472784457", "bodyText": "It's a different stream now. Instead of BytesReferenceStream which generated the previous exception message it's backed by a ByteArrayInputStream now.", "author": "original-brownbear", "createdAt": "2020-08-19T07:05:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0NjY1Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "24be3e7ae6fbbcec357b61cfb356916ea2cf3deb", "url": "https://github.com/elastic/elasticsearch/commit/24be3e7ae6fbbcec357b61cfb356916ea2cf3deb", "message": "Merge remote-tracking branch 'elastic/master' into bytes-array-optimizations", "committedDate": "2020-08-19T07:06:13Z", "type": "commit"}, {"oid": "0f447eb7428f9b4654b22ee6a0226cb17586216b", "url": "https://github.com/elastic/elasticsearch/commit/0f447eb7428f9b4654b22ee6a0226cb17586216b", "message": "revert hashcode change", "committedDate": "2020-08-19T07:22:10Z", "type": "commit"}, {"oid": "33ecd9c2608ad0cbfeae2781fc5a2f202b1eb3e1", "url": "https://github.com/elastic/elasticsearch/commit/33ecd9c2608ad0cbfeae2781fc5a2f202b1eb3e1", "message": "Merge remote-tracking branch 'elastic/master' into bytes-array-optimizations", "committedDate": "2020-08-19T09:41:23Z", "type": "commit"}, {"oid": "25afc12af530bf4717fd0ebd056299b8956d39b3", "url": "https://github.com/elastic/elasticsearch/commit/25afc12af530bf4717fd0ebd056299b8956d39b3", "message": "CR: less trappy page BR construction", "committedDate": "2020-08-19T10:06:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkyMzk2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/61183#discussion_r472923961", "bodyText": "Just to remind me when I inevitably trip over this in future...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assert byteArray.hasArray() == false;\n          \n          \n            \n                    assert byteArray.hasArray() == false : \"use BytesReference#fromByteArray\";", "author": "DaveCTurner", "createdAt": "2020-08-19T10:22:56Z", "path": "server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java", "diffHunk": "@@ -39,11 +39,8 @@\n     private final int offset;\n     private final int length;\n \n-    public PagedBytesReference(ByteArray byteArray, int length) {\n-        this(byteArray, 0, length);\n-    }\n-\n-    private PagedBytesReference(ByteArray byteArray, int from, int length) {\n+    PagedBytesReference(ByteArray byteArray, int from, int length) {\n+        assert byteArray.hasArray() == false;", "originalCommit": "25afc12af530bf4717fd0ebd056299b8956d39b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b47de757bb73ad61d6c744a6940958089a8a2bb", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java b/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java\nindex 51cd96906dd..34a21eb28cf 100644\n--- a/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java\n+++ b/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java\n\n@@ -40,7 +40,7 @@ public class PagedBytesReference extends AbstractBytesReference {\n     private final int length;\n \n     PagedBytesReference(ByteArray byteArray, int from, int length) {\n-        assert byteArray.hasArray() == false;\n+        assert byteArray.hasArray() == false : \"use BytesReference#fromByteArray\";\n         this.byteArray = byteArray;\n         this.offset = from;\n         this.length = length;\n"}}, {"oid": "6b47de757bb73ad61d6c744a6940958089a8a2bb", "url": "https://github.com/elastic/elasticsearch/commit/6b47de757bb73ad61d6c744a6940958089a8a2bb", "message": "Update server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java\n\nCo-authored-by: David Turner <david.turner@elastic.co>", "committedDate": "2020-08-19T10:37:03Z", "type": "commit"}, {"oid": "34e1580db4dd8a69710d215dc109cf6a34911411", "url": "https://github.com/elastic/elasticsearch/commit/34e1580db4dd8a69710d215dc109cf6a34911411", "message": "Merge remote-tracking branch 'elastic/master' into bytes-array-optimizations", "committedDate": "2020-08-24T17:21:38Z", "type": "commit"}, {"oid": "34e1580db4dd8a69710d215dc109cf6a34911411", "url": "https://github.com/elastic/elasticsearch/commit/34e1580db4dd8a69710d215dc109cf6a34911411", "message": "Merge remote-tracking branch 'elastic/master' into bytes-array-optimizations", "committedDate": "2020-08-24T17:21:38Z", "type": "forcePushed"}]}