{"pr_number": 53752, "pr_title": "Report parser name and location in XContent deprecation warnings", "pr_createdAt": "2020-03-18T17:15:15Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53752", "timeline": [{"oid": "88f6ad100ac887dbea91e2803e0303087a98db2e", "url": "https://github.com/elastic/elasticsearch/commit/88f6ad100ac887dbea91e2803e0303087a98db2e", "message": "Report parser name and location in XContent deprecation warnings", "committedDate": "2020-03-18T17:12:39Z", "type": "commit"}, {"oid": "b716af4292661b6bf0dffc0b3720f849d2fc0ca7", "url": "https://github.com/elastic/elasticsearch/commit/b716af4292661b6bf0dffc0b3720f849d2fc0ca7", "message": "test fix", "committedDate": "2020-03-18T17:46:52Z", "type": "commit"}, {"oid": "d070a61ea17af1f86948efab2fb5e8c4e424ad95", "url": "https://github.com/elastic/elasticsearch/commit/d070a61ea17af1f86948efab2fb5e8c4e424ad95", "message": "warnings context for ml", "committedDate": "2020-03-18T17:56:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MDQ3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/53752#discussion_r394890471", "bodyText": "The only suggestion I'd make is about whether it's possible to consolidate the log messages. For example:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (parserName != null) {\n          \n          \n            \n                        deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, expected [{}] instead\",\n          \n          \n            \n                            parserName, location.get(), usedName, modernName);\n          \n          \n            \n                    } else {\n          \n          \n            \n                        deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n          \n          \n            \n                    }\n          \n          \n            \n                    String prefix = parserName == null ? \"\" :\n          \n          \n            \n                        \"[\" + parserName + \"][\" + location.get() + \"] \";\n          \n          \n            \n                    deprecationLogger.deprecated(\"{}Deprecated field [{}] used, expected [{}] instead\", prefix, usedName, modernName);", "author": "pugnascotia", "createdAt": "2020-03-19T09:26:27Z", "path": "server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java", "diffHunk": "@@ -49,17 +51,33 @@ private LoggingDeprecationHandler() {\n     }\n \n     @Override\n-    public void usedDeprecatedName(String usedName, String modernName) {\n-        deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n+    public void usedDeprecatedName(String parserName, Supplier<XContentLocation> location, String usedName, String modernName) {\n+        if (parserName != null) {\n+            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, expected [{}] instead\",\n+                parserName, location.get(), usedName, modernName);\n+        } else {\n+            deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n+        }", "originalCommit": "d070a61ea17af1f86948efab2fb5e8c4e424ad95", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e0a74921aaa3390ffc8039b786f90e8d3dc88400", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java b/server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java\nindex 4ff35024868..74249af9516 100644\n--- a/server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java\n+++ b/server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java\n\n@@ -52,30 +52,24 @@ public class LoggingDeprecationHandler implements DeprecationHandler {\n \n     @Override\n     public void usedDeprecatedName(String parserName, Supplier<XContentLocation> location, String usedName, String modernName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, expected [{}] instead\",\n-                parserName, location.get(), usedName, modernName);\n-        } else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{}Deprecated field [{}] used, expected [{}] instead\",\n+            prefix, usedName, modernName);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName, String replacedWith) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, replaced by [{}]\",\n-                parserName, location.get(), usedName, replacedWith);\n-        }\n-        else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, replaced by [{}]\", usedName, replacedWith);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{} Deprecated field [{}] used, replaced by [{}]\",\n+            prefix, usedName, replacedWith);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, this field is unused and will be removed entirely\",\n-                parserName, location.get(), usedName);\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        if (true) {\n+            deprecationLogger.deprecated(\"{}Deprecated field [{}] used, this field is unused and will be removed entirely\",\n+                prefix, usedName);\n         } else {\n             deprecationLogger.deprecated(\"Deprecated field [{}] used, this field is unused and will be removed entirely\", usedName);\n         }\n"}}, {"oid": "e0a74921aaa3390ffc8039b786f90e8d3dc88400", "url": "https://github.com/elastic/elasticsearch/commit/e0a74921aaa3390ffc8039b786f90e8d3dc88400", "message": "feedback, tests", "committedDate": "2020-03-19T09:44:21Z", "type": "commit"}, {"oid": "95b20db90e896ab637a57a3aec3f6e6ef958edbc", "url": "https://github.com/elastic/elasticsearch/commit/95b20db90e896ab637a57a3aec3f6e6ef958edbc", "message": "no really", "committedDate": "2020-03-19T09:59:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzA2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/53752#discussion_r394927067", "bodyText": "This doesn't look right \ud83e\udd14", "author": "pugnascotia", "createdAt": "2020-03-19T10:28:49Z", "path": "server/src/main/java/org/elasticsearch/common/xcontent/LoggingDeprecationHandler.java", "diffHunk": "@@ -52,30 +52,24 @@ private LoggingDeprecationHandler() {\n \n     @Override\n     public void usedDeprecatedName(String parserName, Supplier<XContentLocation> location, String usedName, String modernName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, expected [{}] instead\",\n-                parserName, location.get(), usedName, modernName);\n-        } else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, expected [{}] instead\", usedName, modernName);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{}Deprecated field [{}] used, expected [{}] instead\",\n+            prefix, usedName, modernName);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName, String replacedWith) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, replaced by [{}]\",\n-                parserName, location.get(), usedName, replacedWith);\n-        }\n-        else {\n-            deprecationLogger.deprecated(\"Deprecated field [{}] used, replaced by [{}]\", usedName, replacedWith);\n-        }\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        deprecationLogger.deprecated(\"{} Deprecated field [{}] used, replaced by [{}]\",\n+            prefix, usedName, replacedWith);\n     }\n \n     @Override\n     public void usedDeprecatedField(String parserName, Supplier<XContentLocation> location, String usedName) {\n-        if (parserName != null) {\n-            deprecationLogger.deprecated(\"[{}][{}] Deprecated field [{}] used, this field is unused and will be removed entirely\",\n-                parserName, location.get(), usedName);\n+        String prefix = parserName == null ? \"\" : \"[\" + parserName + \"][\" + location.get() + \"] \";\n+        if (true) {", "originalCommit": "e0a74921aaa3390ffc8039b786f90e8d3dc88400", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzU2OQ==", "url": "https://github.com/elastic/elasticsearch/pull/53752#discussion_r394927569", "bodyText": "It wasn't!", "author": "romseygeek", "createdAt": "2020-03-19T10:29:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzY3MA==", "url": "https://github.com/elastic/elasticsearch/pull/53752#discussion_r394927670", "bodyText": "Sorry, out-of-date diff \ud83d\ude05", "author": "pugnascotia", "createdAt": "2020-03-19T10:29:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyNzA2Nw=="}], "type": "inlineReview", "revised_code": null}]}