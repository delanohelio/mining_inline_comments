{"pr_number": 52918, "pr_title": "Vs refactor wire up ranges and date ranges", "pr_createdAt": "2020-02-27T20:10:49Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52918", "timeline": [{"oid": "3b48465228474d76935d991bf859a3e0ce056f3b", "url": "https://github.com/elastic/elasticsearch/commit/3b48465228474d76935d991bf859a3e0ce056f3b", "message": "Initial wire up - tests still failing", "committedDate": "2020-02-27T18:08:49Z", "type": "commit"}, {"oid": "8098ec5058f9e1bd2ca9a93e6cf5ddcacedc3dc7", "url": "https://github.com/elastic/elasticsearch/commit/8098ec5058f9e1bd2ca9a93e6cf5ddcacedc3dc7", "message": "Fix exception messages in tests", "committedDate": "2020-02-27T20:08:14Z", "type": "commit"}, {"oid": "c67b57e7e99f8249c99f5aa6e3c640f99a862d73", "url": "https://github.com/elastic/elasticsearch/commit/c67b57e7e99f8249c99f5aa6e3c640f99a862d73", "message": "Merge branch 'feature/extensible-values-source' into vs-refactor-wire-up-ranges-and-date-ranges", "committedDate": "2020-03-02T17:15:07Z", "type": "commit"}, {"oid": "ae2a4b1bfc1fcdf15e4fd08519a19b743bc6d43a", "url": "https://github.com/elastic/elasticsearch/commit/ae2a4b1bfc1fcdf15e4fd08519a19b743bc6d43a", "message": "Merge branch 'feature/extensible-values-source' into vs-refactor-wire-up-ranges-and-date-ranges", "committedDate": "2020-03-02T23:07:39Z", "type": "commit"}, {"oid": "1efc5e68d96bfd91fb92c7633465120e9a792701", "url": "https://github.com/elastic/elasticsearch/commit/1efc5e68d96bfd91fb92c7633465120e9a792701", "message": "Merge branch 'feature/extensible-values-source' into vs-refactor-wire-up-ranges-and-date-ranges", "committedDate": "2020-03-03T19:53:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzczNTY5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/52918#discussion_r387735697", "bodyText": "Is Boolean range a valid concept?", "author": "csoulios", "createdAt": "2020-03-04T15:20:41Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java", "diffHunk": "@@ -42,20 +46,44 @@\n     private final InternalRange.Factory<?, ?> rangeFactory;\n     private final R[] ranges;\n     private final boolean keyed;\n+    private final String aggregationTypeName;\n \n+    public static void registerAggregators(ValuesSourceRegistry valuesSourceRegistry, String aggregationName) {\n+        valuesSourceRegistry.register(aggregationName,\n+            List.of(CoreValuesSourceType.NUMERIC, CoreValuesSourceType.DATE, CoreValuesSourceType.BOOLEAN),", "originalCommit": "1efc5e68d96bfd91fb92c7633465120e9a792701", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxOTExNw==", "url": "https://github.com/elastic/elasticsearch/pull/52918#discussion_r387919117", "bodyText": "That's a really good question.  I think master will let you do this, which is why I included it, but I agree it's kind of a nonsense operation. My strategy so far has been to keep these things supported for now, and after we merge have a conversation about what we want to do long term with these cases.", "author": "not-napoleon", "createdAt": "2020-03-04T20:35:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzczNTY5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "60dca7c1d42add089266689783df4e5090d2468f", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java\nindex 7d182767c0a..6e7974f68d6 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java\n\n@@ -51,7 +51,7 @@ public class AbstractRangeAggregatorFactory<R extends Range> extends ValuesSourc\n     public static void registerAggregators(ValuesSourceRegistry valuesSourceRegistry, String aggregationName) {\n         valuesSourceRegistry.register(aggregationName,\n             List.of(CoreValuesSourceType.NUMERIC, CoreValuesSourceType.DATE, CoreValuesSourceType.BOOLEAN),\n-            new RangeAggregationSupplier() {\n+            new RangeAggregatorSupplier() {\n                 @Override\n                 public Aggregator build(String name,\n                                         AggregatorFactories factories,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzczOTM4NA==", "url": "https://github.com/elastic/elasticsearch/pull/52918#discussion_r387739384", "bodyText": "Copy-paste nit: Exception message should read RangeAggregationSupplier, not HistogramAggregatorSupplier.", "author": "csoulios", "createdAt": "2020-03-04T15:25:58Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java", "diffHunk": "@@ -73,13 +101,14 @@ protected Aggregator doCreateInternal(ValuesSource valuesSource,\n                                             boolean collectsFromSingleBucket,\n                                             List<PipelineAggregator> pipelineAggregators,\n                                             Map<String, Object> metaData) throws IOException {\n-        if (valuesSource instanceof Numeric == false) {\n-            throw new AggregationExecutionException(\"ValuesSource type \" + valuesSource.toString() + \"is not supported for aggregation \" +\n-            this.name());\n+\n+        AggregatorSupplier aggregatorSupplier = queryShardContext.getValuesSourceRegistry().getAggregator(config.valueSourceType(),\n+            aggregationTypeName);\n+        if (aggregatorSupplier instanceof RangeAggregationSupplier == false) {\n+            throw new AggregationExecutionException(\"Registry miss-match - expected HistogramAggregatorSupplier, found [\" +", "originalCommit": "1efc5e68d96bfd91fb92c7633465120e9a792701", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxOTIwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/52918#discussion_r387919201", "bodyText": "Thanks, will fix.", "author": "not-napoleon", "createdAt": "2020-03-04T20:35:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzczOTM4NA=="}], "type": "inlineReview", "revised_code": {"commit": "60dca7c1d42add089266689783df4e5090d2468f", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java\nindex 7d182767c0a..6e7974f68d6 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeAggregatorFactory.java\n\n@@ -104,11 +104,11 @@ public class AbstractRangeAggregatorFactory<R extends Range> extends ValuesSourc\n \n         AggregatorSupplier aggregatorSupplier = queryShardContext.getValuesSourceRegistry().getAggregator(config.valueSourceType(),\n             aggregationTypeName);\n-        if (aggregatorSupplier instanceof RangeAggregationSupplier == false) {\n-            throw new AggregationExecutionException(\"Registry miss-match - expected HistogramAggregatorSupplier, found [\" +\n+        if (aggregatorSupplier instanceof RangeAggregatorSupplier == false) {\n+            throw new AggregationExecutionException(\"Registry miss-match - expected RangeAggregatorSupplier, found [\" +\n                 aggregatorSupplier.getClass().toString() + \"]\");\n         }\n-        return ((RangeAggregationSupplier)aggregatorSupplier).build(name, factories, (Numeric) valuesSource, config.format(), rangeFactory,\n+        return ((RangeAggregatorSupplier)aggregatorSupplier).build(name, factories, (Numeric) valuesSource, config.format(), rangeFactory,\n             ranges, keyed, searchContext, parent, pipelineAggregators, metaData);\n     }\n }\n"}}, {"oid": "60dca7c1d42add089266689783df4e5090d2468f", "url": "https://github.com/elastic/elasticsearch/commit/60dca7c1d42add089266689783df4e5090d2468f", "message": "fixed error message, supplier name", "committedDate": "2020-03-04T20:52:33Z", "type": "commit"}]}