{"pr_number": 54814, "pr_title": "Add RepositoriesService to createComponents() args", "pr_createdAt": "2020-04-06T14:31:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54814", "timeline": [{"oid": "40db591e00381a3cad67c7702e51309ac4e267e4", "url": "https://github.com/elastic/elasticsearch/commit/40db591e00381a3cad67c7702e51309ac4e267e4", "message": "Add RepositoriesService to createComponents() args\n\nToday we pass the `RepositoriesService` to the searchable snapshots plugin\nduring the initialization of the `RepositoryModule`, forcing the plugin to be a\n`RepositoryPlugin` even though it does not implement any repositories.\n\nAfter discussion we decided it best for now to pass this in via\n`Plugin#createComponents` instead, pending some future work in which plugins\ncan depend on services more dynamically.", "committedDate": "2020-04-06T14:30:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTE5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/54814#discussion_r404991196", "bodyText": "component creation (ie services created by plugins) should happen almost last within node initialization. I don't think we should be passing in a Supplier. Instead, we should move the call to createComponents down later, so that we have the RepositoriesService.", "author": "rjernst", "createdAt": "2020-04-07T17:36:14Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java", "diffHunk": "@@ -115,7 +116,8 @@ public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<\n                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,\n                                                NamedXContentRegistry xContentRegistry, Environment environment,\n                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry,\n-                                               IndexNameExpressionResolver expressionResolver) {\n+                                               IndexNameExpressionResolver expressionResolver,\n+                                               Supplier<RepositoriesService> repositoriesServiceSupplier) {", "originalCommit": "40db591e00381a3cad67c7702e51309ac4e267e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzODMzNg==", "url": "https://github.com/elastic/elasticsearch/pull/54814#discussion_r405338336", "bodyText": "I tried this (see b2b5333) but e.g. XPackPlugin requires us to call createComponents before initialising ActionModule:\n\u00bb  org.elasticsearch.bootstrap.StartupException: java.lang.IllegalStateException: SSL Service is not constructed yet | \u00a0\n-- | --\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:174) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:161) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:127) ~[elasticsearch-cli-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.cli.Command.main(Command.java:90) ~[elasticsearch-cli-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:126) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:92) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  Caused by: java.lang.IllegalStateException: SSL Service is not constructed yet | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.xpack.core.XPackPlugin.getSharedSslService(XPackPlugin.java:162) ~[?:?] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.xpack.security.Security.getSslService(Security.java:339) ~[?:?] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.xpack.security.Security.getRestHandlerWrapper(Security.java:980) ~[?:?] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.action.ActionModule.<init>(ActionModule.java:455) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.node.Node.<init>(Node.java:468) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.node.Node.<init>(Node.java:256) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Bootstrap$5.<init>(Bootstrap.java:225) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:225) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:387) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:170) ~[elasticsearch-8.0.0-SNAPSHOT.jar:8.0.0-SNAPSHOT] | \u00a0\n\u00a0 | \u00bb  \t... 6 more\n\nWe need the ActionModule to create the TransportService and we need a TransportService to create the RepositoriesService, so we seem to be stuck.", "author": "DaveCTurner", "createdAt": "2020-04-08T08:12:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwMTEyOA==", "url": "https://github.com/elastic/elasticsearch/pull/54814#discussion_r406401128", "bodyText": "Thanks for trying, @DaveCTurner. The action module part is avoidable by tweaking when the security rest wrapper invokes getSslService(), but the aggressive creation of transport doesn't seem to be resolvable, at least for now. This is all a result of the odd sharing of the ssl service across xpack plugins. I'll take this as a TODO to investigate how we can clean this up with other plugin/node initialization cleanup work.", "author": "rjernst", "createdAt": "2020-04-09T18:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTE5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b2b53332800d512c546a61f461c9997e3441d392", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java\nindex 9188a3fedd1..4e1d981db3e 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java\n\n@@ -116,8 +116,7 @@ public final class PainlessPlugin extends Plugin implements ScriptPlugin, Extens\n                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,\n                                                NamedXContentRegistry xContentRegistry, Environment environment,\n                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry,\n-                                               IndexNameExpressionResolver expressionResolver,\n-                                               Supplier<RepositoriesService> repositoriesServiceSupplier) {\n+                                               IndexNameExpressionResolver expressionResolver, RepositoriesService repositoriesService) {\n         // this is a hack to bind the painless script engine in guice (all components are added to guice), so that\n         // the painless context api. this is a temporary measure until transport actions do no require guice\n         return Collections.singletonList(painlessScriptEngine.get());\n"}}, {"oid": "b2b53332800d512c546a61f461c9997e3441d392", "url": "https://github.com/elastic/elasticsearch/commit/b2b53332800d512c546a61f461c9997e3441d392", "message": "Create components later, no need for supplier", "committedDate": "2020-04-08T07:44:41Z", "type": "commit"}, {"oid": "5b41c580316484665325c97ec8be887c3319f78c", "url": "https://github.com/elastic/elasticsearch/commit/5b41c580316484665325c97ec8be887c3319f78c", "message": "Merge branch 'master' into 2020-04-06-initialize-repositories-service-in-createcomponents", "committedDate": "2020-04-08T07:46:05Z", "type": "commit"}, {"oid": "57e8286003a62773fd97ab0722602c346dff01c1", "url": "https://github.com/elastic/elasticsearch/commit/57e8286003a62773fd97ab0722602c346dff01c1", "message": "Revert \"Create components later, no need for supplier\"\n\nThis reverts commit b2b53332800d512c546a61f461c9997e3441d392.", "committedDate": "2020-04-08T08:23:46Z", "type": "commit"}, {"oid": "23217794cd493d99f8b50ee740bb74b3c3a38e97", "url": "https://github.com/elastic/elasticsearch/commit/23217794cd493d99f8b50ee740bb74b3c3a38e97", "message": "Merge branch 'master' into 2020-04-06-initialize-repositories-service-in-createcomponents", "committedDate": "2020-04-16T13:30:56Z", "type": "commit"}]}