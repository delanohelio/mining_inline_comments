{"pr_number": 59106, "pr_title": "Validate Data Streams reference a template on composable template update", "pr_createdAt": "2020-07-06T22:49:50Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59106", "timeline": [{"oid": "c9346f8408579595f571549c491c9c520013f87b", "url": "https://github.com/elastic/elasticsearch/commit/c9346f8408579595f571549c491c9c520013f87b", "message": "Validate Data Streams reference a template on composable template update\n\nThis commit adds validation that when a composable index template is updated, there are no data\nstreams that are unreferenced by templates. While it is still possible to have data streams without\na backing template (through snapshot restoration), this reduces the chance of getting in to that\nscenario.\n\nRelates to #53100", "committedDate": "2020-07-06T22:45:04Z", "type": "commit"}, {"oid": "df9a48af23ce2fd5716ee4b78842bb473881be85", "url": "https://github.com/elastic/elasticsearch/commit/df9a48af23ce2fd5716ee4b78842bb473881be85", "message": "Only throw exception when number of unreferenced data streams increases", "committedDate": "2020-07-07T15:50:55Z", "type": "commit"}, {"oid": "91dc38d378946036bccea6d6a0644bc57e5e7bc4", "url": "https://github.com/elastic/elasticsearch/commit/91dc38d378946036bccea6d6a0644bc57e5e7bc4", "message": "Merge branch 'master' into ds-validate-data-stream-still-referenced", "committedDate": "2020-07-07T16:03:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4Mjk3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59106#discussion_r450982972", "bodyText": "maybe add a unit test that tests with a cluster state with no templates, but a few data streams and then\nadding a template shoudl still work. This to simulate the restore scenario?", "author": "martijnvg", "createdAt": "2020-07-07T16:13:07Z", "path": "server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java", "diffHunk": "@@ -1062,6 +1064,83 @@ public void testPutExistingComposableTemplateIsNoop() throws Exception {\n         assertThat(metadataIndexTemplateService.addIndexTemplateV2(state, false, \"foo\", template), equalTo(state));\n     }\n \n+    public void testUnreferencedDataStreamsWhenAddingTemplate() throws Exception {", "originalCommit": "91dc38d378946036bccea6d6a0644bc57e5e7bc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk5MTUxMg==", "url": "https://github.com/elastic/elasticsearch/pull/59106#discussion_r450991512", "bodyText": "\ud83d\udc4d I re-organized this test so that it has that behavior", "author": "dakrone", "createdAt": "2020-07-07T16:26:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4Mjk3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1995235e5a94e765b39d7637e0bad9871f574abe", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java b/server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java\nindex 88e70561989..cbf258da8e3 100644\n--- a/server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java\n+++ b/server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java\n\n@@ -1067,19 +1067,31 @@ public class MetadataIndexTemplateServiceTests extends ESSingleNodeTestCase {\n     public void testUnreferencedDataStreamsWhenAddingTemplate() throws Exception {\n         ClusterState state = ClusterState.EMPTY_STATE;\n         final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n+        state = ClusterState.builder(state)\n+            .metadata(Metadata.builder(state.metadata())\n+                .put(new DataStream(\"unreferenced\",\n+                    new DataStream.TimestampField(\"@timestamp\", Collections.singletonMap(\"type\", \"date\")),\n+                    Collections.singletonList(new Index(\".ds-unreferenced-000001\", \"uuid2\"))))\n+                .put(IndexMetadata.builder(\".ds-unreferenced-000001\")\n+                    .settings(Settings.builder()\n+                        .put(IndexMetadata.SETTING_INDEX_UUID, \"uuid2\")\n+                        .put(IndexMetadata.SETTING_NUMBER_OF_SHARDS, 1)\n+                        .put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 0)\n+                        .put(IndexMetadata.SETTING_VERSION_CREATED, Version.CURRENT)\n+                        .build()))\n+                .build())\n+            .build();\n \n         ComposableIndexTemplate template = new ComposableIndexTemplate(Collections.singletonList(\"logs-*-*\"), null, null,\n             100L, null, null, new ComposableIndexTemplate.DataStreamTemplate(\"@timestamp\"));\n \n         state = service.addIndexTemplateV2(state, false, \"logs\", template);\n+\n         ClusterState stateWithDS = ClusterState.builder(state)\n             .metadata(Metadata.builder(state.metadata())\n                 .put(new DataStream(\"logs-mysql-default\",\n                     new DataStream.TimestampField(\"@timestamp\", Collections.singletonMap(\"type\", \"date\")),\n                     Collections.singletonList(new Index(\".ds-logs-mysql-default-000001\", \"uuid\"))))\n-                .put(new DataStream(\"unreferenced\",\n-                    new DataStream.TimestampField(\"@timestamp\", Collections.singletonMap(\"type\", \"date\")),\n-                    Collections.singletonList(new Index(\".ds-unreferenced-000001\", \"uuid2\"))))\n                 .put(IndexMetadata.builder(\".ds-logs-mysql-default-000001\")\n                     .settings(Settings.builder()\n                         .put(IndexMetadata.SETTING_INDEX_UUID, \"uuid\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4ODk0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59106#discussion_r450988947", "bodyText": "If we read the data streams inside this function we can make it static. What do you think?", "author": "andreidan", "createdAt": "2020-07-07T16:22:41Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java", "diffHunk": "@@ -520,35 +521,43 @@ public ClusterState addIndexTemplateV2(final ClusterState currentState, final bo\n      */\n     private static void validateDataStreamsStillReferenced(ClusterState state, String templateName,\n                                                            ComposableIndexTemplate newTemplate) {\n-\n         final Set<String> dataStreams = state.metadata().dataStreams().keySet();\n \n-        // Generate a metadata as if the new template were actually in the cluster state\n-        final Metadata metadataWithoutTemplate = Metadata.builder(state.metadata()).put(templateName, newTemplate).build();\n-        final Set<String> dataStreamsWithoutTemplates = new HashSet<>();\n-        // For each data stream that we have, see whether it's covered by a different\n-        // template (which is great), or whether it's now uncovered by any template\n-        for (String dataStream : dataStreams) {\n-            final String matchingTemplate = findV2Template(metadataWithoutTemplate, dataStream, false);\n-            if (matchingTemplate == null) {\n-                dataStreamsWithoutTemplates.add(dataStream);\n-            } else {\n-                // We found a template that still matches, great! Buuuuttt... check whether it\n-                // is a data stream template, as it's only useful if it has a data stream definition\n-                if (metadataWithoutTemplate.templatesV2().get(matchingTemplate).getDataStreamTemplate() == null) {\n-                    dataStreamsWithoutTemplates.add(dataStream);\n+        Function<Metadata, Set<String>> findUnreferencedDataStreams = meta -> {", "originalCommit": "df9a48af23ce2fd5716ee4b78842bb473881be85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk5MjQ3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/59106#discussion_r450992471", "bodyText": "I don't think it makes too big of a difference (the Function part is simply for re-using the code), if you think it would be better, I can split it into a separate static function though?", "author": "dakrone", "createdAt": "2020-07-07T16:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4ODk0Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "1995235e5a94e765b39d7637e0bad9871f574abe", "url": "https://github.com/elastic/elasticsearch/commit/1995235e5a94e765b39d7637e0bad9871f574abe", "message": "Re-organize test so that an existing unreferenced template is present\n\nWhen adding first template", "committedDate": "2020-07-07T16:26:11Z", "type": "commit"}]}