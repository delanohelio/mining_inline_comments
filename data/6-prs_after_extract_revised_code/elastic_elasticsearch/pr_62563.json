{"pr_number": 62563, "pr_title": "[ML] all multiple wildcard values for GET Calendars, Events, and DELETE forecasts", "pr_createdAt": "2020-09-17T16:08:25Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62563", "timeline": [{"oid": "358cab62df28d70ae0651d01770b0692ecb20ab7", "url": "https://github.com/elastic/elasticsearch/commit/358cab62df28d70ae0651d01770b0692ecb20ab7", "message": "[ML] all multiple wildcard values for GET Calendars, Events, and DELETE forecasts", "committedDate": "2020-09-17T16:08:07Z", "type": "commit"}, {"oid": "afd70dea349f18ee81d0c41aa35b5fc75d911b58", "url": "https://github.com/elastic/elasticsearch/commit/afd70dea349f18ee81d0c41aa35b5fc75d911b58", "message": "fixing string split logic", "committedDate": "2020-09-17T16:49:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1MTc2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/62563#discussion_r490851761", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This adds a new filter to the passed `boolQueryBuilder`.", "author": "davidkyle", "createdAt": "2020-09-18T10:25:22Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/QueryBuilderHelper.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.ml.utils;\n+\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.regex.Regex;\n+import org.elasticsearch.index.query.BoolQueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.index.query.TermsQueryBuilder;\n+import org.elasticsearch.index.query.WildcardQueryBuilder;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+public final class QueryBuilderHelper {\n+\n+    private QueryBuilderHelper() { }\n+\n+    /**\n+     * Helper function for adding OR type queries for a given identity field.\n+     *\n+     * This adds a new filter to the passed `boolQueryBuilder`.", "originalCommit": "afd70dea349f18ee81d0c41aa35b5fc75d911b58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4746211e618d2e132c6a79338ecced26ac04dd2b", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/QueryBuilderHelper.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/QueryBuilderHelper.java\nindex bd870a9e6c8..811fb742ad9 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/QueryBuilderHelper.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/utils/QueryBuilderHelper.java\n\n@@ -24,8 +24,6 @@ public final class QueryBuilderHelper {\n     /**\n      * Helper function for adding OR type queries for a given identity field.\n      *\n-     * This adds a new filter to the passed `boolQueryBuilder`.\n-     *\n      * The filter consists of should clauses (i.e. \"or\" boolean queries).\n      *\n      * - When a token is a wildcard token, a wildcard query is added\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1OTQ4MA==", "url": "https://github.com/elastic/elasticsearch/pull/62563#discussion_r490859480", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResultsFilterBuilder resourceTokenFilers(String fieldName, String[] tokens) {\n          \n          \n            \n                public ResultsFilterBuilder resourceTokenFilters(String fieldName, String[] tokens) {", "author": "davidkyle", "createdAt": "2020-09-18T10:41:00Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/ResultsFilterBuilder.java", "diffHunk": "@@ -88,6 +89,11 @@ public ResultsFilterBuilder term(String fieldName, String fieldValue) {\n         return this;\n     }\n \n+    public ResultsFilterBuilder resourceTokenFilers(String fieldName, String[] tokens) {", "originalCommit": "afd70dea349f18ee81d0c41aa35b5fc75d911b58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4746211e618d2e132c6a79338ecced26ac04dd2b", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/ResultsFilterBuilder.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/ResultsFilterBuilder.java\nindex ef5fb8efdd0..287aa9d22a3 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/ResultsFilterBuilder.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/ResultsFilterBuilder.java\n\n@@ -89,7 +89,7 @@ public class ResultsFilterBuilder {\n         return this;\n     }\n \n-    public ResultsFilterBuilder resourceTokenFilers(String fieldName, String[] tokens) {\n+    public ResultsFilterBuilder resourceTokenFilters(String fieldName, String[] tokens) {\n         QueryBuilderHelper.buildTokenFilterQuery(fieldName, tokens).ifPresent(this::addQuery);\n         return this;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg2Mjg0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/62563#discussion_r490862845", "bodyText": "The GET request docs will need updating to add the standard description of a wildcard-able ID parameter\n\"comma-separated list of calendar Ids and wildcard expressions. You can get all by using _all, or * or by omitting the ID\"", "author": "davidkyle", "createdAt": "2020-09-18T10:48:19Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetCalendarsAction.java", "diffHunk": "@@ -34,35 +31,18 @@ public TransportGetCalendarsAction(TransportService transportService, ActionFilt\n \n     @Override\n     protected void doExecute(Task task, GetCalendarsAction.Request request, ActionListener<GetCalendarsAction.Response> listener) {\n-        final String calendarId = request.getCalendarId();\n-        if (request.getCalendarId() != null && Strings.isAllOrWildcard(request.getCalendarId()) == false) {\n-            getCalendar(calendarId, listener);\n-        } else {\n-            PageParams pageParams = request.getPageParams();\n-            if (pageParams == null) {\n-                pageParams = PageParams.defaultParams();\n-            }\n-            getCalendars(pageParams, listener);\n+        final String[] calendarIds = Strings.splitStringByCommaToArray(request.getCalendarId());", "originalCommit": "afd70dea349f18ee81d0c41aa35b5fc75d911b58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "138b9d108f22336ac2750d3a88ab41c4f4f100c8", "url": "https://github.com/elastic/elasticsearch/commit/138b9d108f22336ac2750d3a88ab41c4f4f100c8", "message": "fixing calendars test", "committedDate": "2020-09-18T12:26:13Z", "type": "commit"}, {"oid": "4746211e618d2e132c6a79338ecced26ac04dd2b", "url": "https://github.com/elastic/elasticsearch/commit/4746211e618d2e132c6a79338ecced26ac04dd2b", "message": "addressing pr comments", "committedDate": "2020-09-18T12:33:22Z", "type": "commit"}, {"oid": "8323f01b887096b27648686761accbf0b86c502b", "url": "https://github.com/elastic/elasticsearch/commit/8323f01b887096b27648686761accbf0b86c502b", "message": "Merge branch 'master' into feature/ml-unifying-api-id-behavior", "committedDate": "2020-09-18T12:48:57Z", "type": "commit"}]}