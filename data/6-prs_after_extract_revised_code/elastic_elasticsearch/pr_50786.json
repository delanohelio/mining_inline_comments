{"pr_number": 50786, "pr_title": "Auto-format buildSrc", "pr_createdAt": "2020-01-09T10:57:36Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50786", "timeline": [{"oid": "b028a2aaec1a91ec32aab647279b91014ea2b8fe", "url": "https://github.com/elastic/elasticsearch/commit/b028a2aaec1a91ec32aab647279b91014ea2b8fe", "message": "Auto-format buildSrc\n\nOpt-in buildSrc for automatic formatting. This required a config tweak\nin order to pick up all the Java sources, and as a result more files are\nnow found in the Enrich plugin, that were previously missed.", "committedDate": "2020-01-09T10:52:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNjIzMw==", "url": "https://github.com/elastic/elasticsearch/pull/50786#discussion_r364706233", "bodyText": "maybe just remove this empty statement?", "author": "martijnvg", "createdAt": "2020-01-09T12:11:51Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java", "diffHunk": "@@ -135,7 +135,8 @@ void finalizeValues() {\n         }\n         version.finalizeValue();\n         platform.finalizeValue();\n-        vendor.finalizeValue();;\n+        vendor.finalizeValue();\n+        ;", "originalCommit": "b028a2aaec1a91ec32aab647279b91014ea2b8fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f00f2f37d7855c92b99baea29a927596e4b8473", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java b/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java\nindex 37a8edddfb1..12f0a8e8e9c 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java\n\n@@ -136,7 +136,6 @@ public class Jdk implements Buildable, Iterable<File> {\n         version.finalizeValue();\n         platform.finalizeValue();\n         vendor.finalizeValue();\n-        ;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5ODgxMg==", "url": "https://github.com/elastic/elasticsearch/pull/50786#discussion_r364898812", "bodyText": "If the formatter is going to force these statements on a newline them I'm apt to just make this a proper if block and put the break/return statement in brackets. We do this in a number of places.", "author": "mark-vieira", "createdAt": "2020-01-09T18:40:11Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/JdkDownloadPlugin.java", "diffHunk": "@@ -235,39 +243,37 @@ public void execute(Task t) {\n             extractTask = rootProject.getTasks().register(extractTaskName, SymbolicLinkPreservingUntarTask.class, task -> {\n                 task.getTarFile().set(jdkConfiguration.getSingleFile());\n                 task.getExtractPath().set(extractPath);\n-                task.setTransform(\n-                    name -> {\n-                        /*\n-                         * We want to remove up to the and including the jdk-.* relative paths. That is a JDK archive is structured as:\n-                         *   jdk-12.0.1/\n-                         *   jdk-12.0.1/Contents\n-                         *   ...\n-                         *\n-                         * and we want to remove the leading jdk-12.0.1. Note however that there could also be a leading ./ as in\n-                         *   ./\n-                         *   ./jdk-12.0.1/\n-                         *   ./jdk-12.0.1/Contents\n-                         *\n-                         * so we account for this and search the path components until we find the jdk-12.0.1, and strip the leading\n-                         * components.\n-                         */\n-                        final Path entryName = Paths.get(name);\n-                        int index = 0;\n-                        for (; index < entryName.getNameCount(); index++) {\n-                            if (entryName.getName(index).toString().matches(\"jdk-.*\")) break;\n-                        }\n-                        if (index + 1 >= entryName.getNameCount()) {\n-                            // this happens on the top-level directories in the archive, which we are removing\n-                            return null;\n-                        }\n-                        // finally remove the top-level directories from the output path\n-                        return entryName.subpath(index + 1, entryName.getNameCount());\n-                    });\n+                task.setTransform(name -> {\n+                    /*\n+                     * We want to remove up to the and including the jdk-.* relative paths. That is a JDK archive is structured as:\n+                     *   jdk-12.0.1/\n+                     *   jdk-12.0.1/Contents\n+                     *   ...\n+                     *\n+                     * and we want to remove the leading jdk-12.0.1. Note however that there could also be a leading ./ as in\n+                     *   ./\n+                     *   ./jdk-12.0.1/\n+                     *   ./jdk-12.0.1/Contents\n+                     *\n+                     * so we account for this and search the path components until we find the jdk-12.0.1, and strip the leading\n+                     * components.\n+                     */\n+                    final Path entryName = Paths.get(name);\n+                    int index = 0;\n+                    for (; index < entryName.getNameCount(); index++) {\n+                        if (entryName.getName(index).toString().matches(\"jdk-.*\"))", "originalCommit": "b028a2aaec1a91ec32aab647279b91014ea2b8fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f00f2f37d7855c92b99baea29a927596e4b8473", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/JdkDownloadPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/JdkDownloadPlugin.java\nindex 2e49630b11d..b1895727949 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/JdkDownloadPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/JdkDownloadPlugin.java\n\n@@ -261,8 +261,9 @@ public class JdkDownloadPlugin implements Plugin<Project> {\n                     final Path entryName = Paths.get(name);\n                     int index = 0;\n                     for (; index < entryName.getNameCount(); index++) {\n-                        if (entryName.getName(index).toString().matches(\"jdk-.*\"))\n+                        if (entryName.getName(index).toString().matches(\"jdk-.*\")) {\n                             break;\n+                        }\n                     }\n                     if (index + 1 >= entryName.getNameCount()) {\n                         // this happens on the top-level directories in the archive, which we are removing\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkyMDQ0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/50786#discussion_r364920449", "bodyText": "This is a bit odd, maybe we should just make this a while(true)?", "author": "mark-vieira", "createdAt": "2020-01-09T19:29:18Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/http/WaitForHttpResource.java", "diffHunk": "@@ -112,7 +112,7 @@ public boolean wait(int durationInMs) throws GeneralSecurityException, Interrupt\n             ssl = null;\n         }\n         IOException failure = null;\n-        for (; ; ) {\n+        for (;;) {", "originalCommit": "b028a2aaec1a91ec32aab647279b91014ea2b8fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f00f2f37d7855c92b99baea29a927596e4b8473", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/http/WaitForHttpResource.java b/buildSrc/src/main/java/org/elasticsearch/gradle/http/WaitForHttpResource.java\nindex af8cd7afed6..db805b26cdc 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/http/WaitForHttpResource.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/http/WaitForHttpResource.java\n\n@@ -112,7 +112,7 @@ public class WaitForHttpResource {\n             ssl = null;\n         }\n         IOException failure = null;\n-        for (;;) {\n+        while (true) {\n             try {\n                 checkResource(ssl);\n                 return true;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkyMzY4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/50786#discussion_r364923681", "bodyText": "\ud83e\udd26\u200d\u2642", "author": "mark-vieira", "createdAt": "2020-01-09T19:36:49Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/info/GlobalBuildInfoPlugin.java", "diffHunk": "@@ -140,9 +142,11 @@ private static String findJavaHome(String version) {\n         String versionedJavaHome = System.getenv(getJavaHomeEnvVarName(version));\n         if (versionedJavaHome == null) {\n             throw new GradleException(\n-                \"$\" + getJavaHomeEnvVarName(version) + \" must be set to build Elasticsearch. \" +\n-                    \"Note that if the variable was just set you might have to run `./gradlew --stop` for \" +\n-                    \"it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.\"\n+                \"$\"", "originalCommit": "b028a2aaec1a91ec32aab647279b91014ea2b8fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f00f2f37d7855c92b99baea29a927596e4b8473", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/info/GlobalBuildInfoPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/info/GlobalBuildInfoPlugin.java\nindex e2741173169..5d200a107c3 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/info/GlobalBuildInfoPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/info/GlobalBuildInfoPlugin.java\n\n@@ -141,13 +141,16 @@ public class GlobalBuildInfoPlugin implements Plugin<Project> {\n     private static String findJavaHome(String version) {\n         String versionedJavaHome = System.getenv(getJavaHomeEnvVarName(version));\n         if (versionedJavaHome == null) {\n-            throw new GradleException(\n-                \"$\"\n-                    + getJavaHomeEnvVarName(version)\n-                    + \" must be set to build Elasticsearch. \"\n-                    + \"Note that if the variable was just set you might have to run `./gradlew --stop` for \"\n-                    + \"it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.\"\n+            final String exceptionMessage = String.format(\n+                Locale.ROOT,\n+                \"$%s must be set to build Elasticsearch. \"\n+                    + \"Note that if the variable was just set you \"\n+                    + \"might have to run `./gradlew --stop` for \"\n+                    + \"it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.\",\n+                getJavaHomeEnvVarName(version)\n             );\n+\n+            throw new GradleException(exceptionMessage);\n         }\n         return versionedJavaHome;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkyNDE1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/50786#discussion_r364924155", "bodyText": "Ok, some of these are just getting ridiculous. Not sure if it makes sense to do as part of this PR, or a follow up, but we should just come back and use String.format() for a lot of these complicated exception messages.", "author": "mark-vieira", "createdAt": "2020-01-09T19:37:55Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/DependencyLicensesTask.java", "diffHunk": "@@ -270,9 +271,18 @@ private void checkSha(File jar, String jarName, Set<File> shaFiles) throws NoSuc\n \n         if (expectedSha.equals(sha) == false) {\n             throw new GradleException(\n-                \"SHA has changed! Expected \" + expectedSha + \" for \" + jarName + \" but got \" + sha + \". \" +\n-                    \"\\nThis usually indicates a corrupt dependency cache or artifacts changed upstream.\" +\n-                    \"\\nEither wipe your cache, fix the upstream artifact, or delete \" + shaFile + \" and run updateShas\");\n+                \"SHA has changed! Expected \"", "originalCommit": "b028a2aaec1a91ec32aab647279b91014ea2b8fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f00f2f37d7855c92b99baea29a927596e4b8473", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/precommit/DependencyLicensesTask.java b/buildSrc/src/main/java/org/elasticsearch/gradle/precommit/DependencyLicensesTask.java\nindex 210dc274119..e6d147b8ee6 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/precommit/DependencyLicensesTask.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/precommit/DependencyLicensesTask.java\n\n@@ -270,19 +271,18 @@ public class DependencyLicensesTask extends DefaultTask {\n         String sha = getSha1(jar);\n \n         if (expectedSha.equals(sha) == false) {\n-            throw new GradleException(\n-                \"SHA has changed! Expected \"\n-                    + expectedSha\n-                    + \" for \"\n-                    + jarName\n-                    + \" but got \"\n-                    + sha\n-                    + \". \"\n+            final String exceptionMessage = String.format(\n+                Locale.ROOT,\n+                \"SHA has changed! Expected %s for %s but got %s.\"\n                     + \"\\nThis usually indicates a corrupt dependency cache or artifacts changed upstream.\"\n-                    + \"\\nEither wipe your cache, fix the upstream artifact, or delete \"\n-                    + shaFile\n-                    + \" and run updateShas\"\n+                    + \"\\nEither wipe your cache, fix the upstream artifact, or delete %s and run updateShas\",\n+                expectedSha,\n+                jarName,\n+                sha,\n+                shaFile\n             );\n+\n+            throw new GradleException(exceptionMessage);\n         }\n         shaFiles.remove(shaFile);\n     }\n"}}, {"oid": "9f00f2f37d7855c92b99baea29a927596e4b8473", "url": "https://github.com/elastic/elasticsearch/commit/9f00f2f37d7855c92b99baea29a927596e4b8473", "message": "Address review comments\n\nMost notably, replace a number of String concatentations with\nString.format().", "committedDate": "2020-01-13T11:13:35Z", "type": "commit"}, {"oid": "71335131693f249394a593254eac17196fdc7f02", "url": "https://github.com/elastic/elasticsearch/commit/71335131693f249394a593254eac17196fdc7f02", "message": "Merge remote-tracking branch 'upstream/master' into format-build-src", "committedDate": "2020-01-15T09:57:51Z", "type": "commit"}]}