{"pr_number": 51501, "pr_title": "Disable diagnostic trust manager in tests", "pr_createdAt": "2020-01-27T21:07:16Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51501", "timeline": [{"oid": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "url": "https://github.com/elastic/elasticsearch/commit/1e8552cc884b1638596c1cda94b8d8f311efdbb4", "message": "Disable diagnostic trust manager in tests\n\nThis commit sets `xpack.security.ssl.diagnose.trust` to false in all\nof our tests when running in FIPS 140 mode and when settings objects\nare used to create an instance of the SSLService. This is needed\nin 7.x because setting xpack.security.ssl.diagnose.trust to true\nwraps SunJSSE TrustManager with our own DiagnosticTrustManager and\nthis is not allowed when SunJSSE is in FIPS mode.\nAn alternative would be to set xpack.security.fips.enabled to\ntrue which would also implicitly disable\nxpack.security.ssl.diagnose.trust but would have additional effects\n(would require that we set PBKDF2 for password hashing algorithm in\nall test clusters, would prohibit using JKS keystores in nodes even\nif relevant tests have been muted in FIPS mode etc.)\n\nRelates: #49900\nResoles: #51268", "committedDate": "2020-01-27T20:54:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTIxNg==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619216", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:47:47Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java", "diffHunk": "@@ -144,4 +145,12 @@ public void testBootstrapCheckWithClosedSecuredSetting() throws Exception {\n         secureSettings.close();\n         assertThat(check.check(createTestContext(settings, null)).isFailure(), Matchers.equalTo(expectFail));\n     }\n+\n+    private Settings.Builder getSettingsBuilder(){\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java\nindex bfefbea5379..66aff9abcb4 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java\n\n@@ -146,9 +146,9 @@ public class PkiRealmBootstrapCheckTests extends AbstractBootstrapCheckTestCase\n         assertThat(check.check(createTestContext(settings, null)).isFailure(), Matchers.equalTo(expectFail));\n     }\n \n-    private Settings.Builder getSettingsBuilder(){\n+    private Settings.Builder getSettingsBuilder() {\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return builder;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTI1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619256", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:48:01Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityTests.java", "diffHunk": "@@ -98,10 +98,14 @@\n         if (security != null) {\n             throw new IllegalStateException(\"Security object already exists (\" + security + \")\");\n         }\n-        Settings settings = Settings.builder()\n+        Settings.Builder builder = Settings.builder()\n             .put(\"xpack.security.enabled\", true)\n             .put(testSettings)\n-            .put(\"path.home\", createTempDir()).build();\n+            .put(\"path.home\", createTempDir());\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityTests.java\nindex 902c4c23fd5..57f34496fc9 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityTests.java\n\n@@ -102,7 +102,7 @@ public class SecurityTests extends ESTestCase {\n             .put(\"xpack.security.enabled\", true)\n             .put(testSettings)\n             .put(\"path.home\", createTempDir());\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings settings = builder.build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTMyNA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619324", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (inFipsJvm()){\n          \n          \n            \n                        if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:48:19Z", "path": "test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java", "diffHunk": "@@ -1112,6 +1113,9 @@ public Client client(Node node, String clusterName) {\n                 .put(\"logger.prefix\", nodeSettings.get(\"logger.prefix\", \"\"))\n                 .put(\"logger.level\", nodeSettings.get(\"logger.level\", \"INFO\"))\n                 .put(settings);\n+            if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java b/test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java\nindex 168cc0a1273..2259c1448a9 100644\n--- a/test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java\n+++ b/test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java\n\n@@ -1113,7 +1113,7 @@ public final class InternalTestCluster extends TestCluster {\n                 .put(\"logger.prefix\", nodeSettings.get(\"logger.prefix\", \"\"))\n                 .put(\"logger.level\", nodeSettings.get(\"logger.level\", \"INFO\"))\n                 .put(settings);\n-            if (inFipsJvm()){\n+            if (inFipsJvm()) {\n                 builder.put(\"xpack.security.ssl.diagnose.trust\", false);\n             }\n             if (NetworkModule.TRANSPORT_TYPE_SETTING.exists(settings)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTM3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619373", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static Settings possiblyDisableTlsDiagnostic(Settings settings){\n          \n          \n            \n                private static Settings possiblyDisableTlsDiagnostic(Settings settings) {", "author": "tvernum", "createdAt": "2020-01-28T05:48:31Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java", "diffHunk": "@@ -51,4 +52,12 @@ public void close() {\n             }\n         }\n     }\n+\n+    private static Settings possiblyDisableTlsDiagnostic(Settings settings){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java\nindex 9a92b34a3e3..9d6d6435939 100644\n--- a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java\n+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java\n\n@@ -53,9 +53,9 @@ public class TestXPackTransportClient extends TransportClient {\n         }\n     }\n \n-    private static Settings possiblyDisableTlsDiagnostic(Settings settings){\n+    private static Settings possiblyDisableTlsDiagnostic(Settings settings) {\n         Settings.Builder builder = Settings.builder().put(settings);\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return builder.build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTM5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619395", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:48:40Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java", "diffHunk": "@@ -51,4 +52,12 @@ public void close() {\n             }\n         }\n     }\n+\n+    private static Settings possiblyDisableTlsDiagnostic(Settings settings){\n+        Settings.Builder builder = Settings.builder().put(settings);\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java\nindex 9a92b34a3e3..9d6d6435939 100644\n--- a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java\n+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/TestXPackTransportClient.java\n\n@@ -53,9 +53,9 @@ public class TestXPackTransportClient extends TransportClient {\n         }\n     }\n \n-    private static Settings possiblyDisableTlsDiagnostic(Settings settings){\n+    private static Settings possiblyDisableTlsDiagnostic(Settings settings) {\n         Settings.Builder builder = Settings.builder().put(settings);\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return builder.build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTQzMg==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619432", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:48:53Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java", "diffHunk": "@@ -246,6 +246,9 @@ protected Settings nodeSettings(int nodeOrdinal) {\n         builder.put(LicenseService.SELF_GENERATED_LICENSE_TYPE.getKey(), \"trial\");\n         builder.put(NetworkModule.TRANSPORT_TYPE_KEY, randomBoolean() ? SecurityField.NAME4 : SecurityField.NIO);\n         builder.put(NetworkModule.HTTP_TYPE_KEY, randomBoolean() ? SecurityField.NAME4 : SecurityField.NIO);\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java\nindex 8299bd00dd8..abc468d05dc 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java\n\n@@ -246,7 +246,7 @@ public abstract class SecurityIntegTestCase extends ESIntegTestCase {\n         builder.put(LicenseService.SELF_GENERATED_LICENSE_TYPE.getKey(), \"trial\");\n         builder.put(NetworkModule.TRANSPORT_TYPE_KEY, randomBoolean() ? SecurityField.NAME4 : SecurityField.NIO);\n         builder.put(NetworkModule.HTTP_TYPE_KEY, randomBoolean() ? SecurityField.NAME4 : SecurityField.NIO);\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings.Builder customBuilder = Settings.builder().put(customSettings);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTQ1MA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619450", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:49:04Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java", "diffHunk": "@@ -147,6 +147,9 @@ public Settings nodeSettings(int nodeOrdinal) {\n                 .put(\"xpack.security.authc.realms.\" + FileRealmSettings.TYPE + \".file.order\", 0)\n                 .put(\"xpack.security.authc.realms.\" + NativeRealmSettings.TYPE + \".index.order\", \"1\")\n                 .put(\"xpack.license.self_generated.type\", \"trial\");\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java\nindex 51bb206c8ca..146e5728a70 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java\n\n@@ -147,7 +147,7 @@ public class SecuritySettingsSource extends NodeConfigurationSource {\n                 .put(\"xpack.security.authc.realms.\" + FileRealmSettings.TYPE + \".file.order\", 0)\n                 .put(\"xpack.security.authc.realms.\" + NativeRealmSettings.TYPE + \".index.order\", \"1\")\n                 .put(\"xpack.license.self_generated.type\", \"trial\");\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(\"xpack.security.ssl.diagnose.trust\", false);\n         }\n         addNodeSSLSettings(builder);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTUxNw==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619517", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:49:25Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySingleNodeTestCase.java", "diffHunk": "@@ -167,6 +168,9 @@ protected Settings nodeSettings() {\n         builder.put(LicenseService.SELF_GENERATED_LICENSE_TYPE.getKey(), \"trial\");\n         builder.put(\"transport.type\", \"security4\");\n         builder.put(\"path.home\", customSecuritySettingsSource.nodePath(0));\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b48d57e25fa716b421d1cf43cf7687896658e288", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySingleNodeTestCase.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySingleNodeTestCase.java\nindex 4e37af7b1b4..ec612a99054 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySingleNodeTestCase.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySingleNodeTestCase.java\n\n@@ -168,7 +168,7 @@ public abstract class SecuritySingleNodeTestCase extends ESSingleNodeTestCase {\n         builder.put(LicenseService.SELF_GENERATED_LICENSE_TYPE.getKey(), \"trial\");\n         builder.put(\"transport.type\", \"security4\");\n         builder.put(\"path.home\", customSecuritySettingsSource.nodePath(0));\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings.Builder customBuilder = Settings.builder().put(customSettings);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTU0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619549", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Settings.Builder getSettingsBuilder(){\n          \n          \n            \n                private Settings.Builder getSettingsBuilder() {", "author": "tvernum", "createdAt": "2020-01-28T05:49:35Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java", "diffHunk": "@@ -144,4 +145,12 @@ public void testBootstrapCheckWithClosedSecuredSetting() throws Exception {\n         secureSettings.close();\n         assertThat(check.check(createTestContext(settings, null)).isFailure(), Matchers.equalTo(expectFail));\n     }\n+\n+    private Settings.Builder getSettingsBuilder(){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java\nindex bfefbea5379..66aff9abcb4 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/PkiRealmBootstrapCheckTests.java\n\n@@ -146,9 +146,9 @@ public class PkiRealmBootstrapCheckTests extends AbstractBootstrapCheckTestCase\n         assertThat(check.check(createTestContext(settings, null)).isFailure(), Matchers.equalTo(expectFail));\n     }\n \n-    private Settings.Builder getSettingsBuilder(){\n+    private Settings.Builder getSettingsBuilder() {\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return builder;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTU4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619583", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:49:46Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/oidc/TransportOpenIdConnectLogoutActionTests.java", "diffHunk": "@@ -92,7 +92,11 @@ public void setup() throws Exception {\n             .put(XPackSettings.TOKEN_SERVICE_ENABLED_SETTING.getKey(), true)\n             .put(\"path.home\", createTempDir())\n             .build();\n-        final Settings sslSettings = Settings.builder()\n+        Settings.Builder sslSettingsBuilder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/oidc/TransportOpenIdConnectLogoutActionTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/oidc/TransportOpenIdConnectLogoutActionTests.java\nindex 50e1170eaf1..91e0c4f7a24 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/oidc/TransportOpenIdConnectLogoutActionTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/oidc/TransportOpenIdConnectLogoutActionTests.java\n\n@@ -93,7 +93,7 @@ public class TransportOpenIdConnectLogoutActionTests extends OpenIdConnectTestCa\n             .put(\"path.home\", createTempDir())\n             .build();\n         Settings.Builder sslSettingsBuilder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             sslSettingsBuilder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         final Settings sslSettings = sslSettingsBuilder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTYwNA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619604", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:49:53Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java", "diffHunk": "@@ -70,7 +71,11 @@ public void testCommandLineHttpClientCanExecuteAndReturnCorrectResultUsingSSLSet\n     }\n \n     public void testGetDefaultURLFailsWithHelpfulMessage() {\n-        Settings settings = Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java\nindex 9e9320d4691..52f33087959 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java\n\n@@ -72,7 +72,7 @@ public class CommandLineHttpClientTests extends ESTestCase {\n \n     public void testGetDefaultURLFailsWithHelpfulMessage() {\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings settings = builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTYzMA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619630", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:50:02Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java", "diffHunk": "@@ -87,7 +92,11 @@ private MockWebServer createMockWebServer() {\n     private Settings.Builder getHttpSslSettings() {\n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.secure_key_passphrase\", \"testnode\");\n-        return Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java\nindex 9e9320d4691..52f33087959 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/esnative/tool/CommandLineHttpClientTests.java\n\n@@ -93,7 +93,7 @@ public class CommandLineHttpClientTests extends ESTestCase {\n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.secure_key_passphrase\", \"testnode\");\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTY0OA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619648", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:50:12Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/ActiveDirectoryRealmTests.java", "diffHunk": "@@ -142,7 +143,11 @@ public void start() throws Exception {\n         }\n         threadPool = new TestThreadPool(\"active directory realm tests\");\n         resourceWatcherService = new ResourceWatcherService(Settings.EMPTY, threadPool);\n-        globalSettings = Settings.builder().put(\"path.home\", createTempDir()).build();\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/ActiveDirectoryRealmTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/ActiveDirectoryRealmTests.java\nindex 281c0e496d6..997a1ed1015 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/ActiveDirectoryRealmTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/ActiveDirectoryRealmTests.java\n\n@@ -144,7 +144,7 @@ public class ActiveDirectoryRealmTests extends ESTestCase {\n         threadPool = new TestThreadPool(\"active directory realm tests\");\n         resourceWatcherService = new ResourceWatcherService(Settings.EMPTY, threadPool);\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         globalSettings = builder.put(\"path.home\", createTempDir()).build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTY4MA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619680", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:50:22Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapRealmTests.java", "diffHunk": "@@ -98,7 +99,11 @@\n     public void init() throws Exception {\n         threadPool = new TestThreadPool(\"ldap realm tests\");\n         resourceWatcherService = new ResourceWatcherService(Settings.EMPTY, threadPool);\n-        defaultGlobalSettings = Settings.builder().put(\"path.home\", createTempDir()).build();\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapRealmTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapRealmTests.java\nindex 7c475a98cff..f8a958a2ad8 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapRealmTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapRealmTests.java\n\n@@ -100,7 +100,7 @@ public class LdapRealmTests extends LdapTestCase {\n         threadPool = new TestThreadPool(\"ldap realm tests\");\n         resourceWatcherService = new ResourceWatcherService(Settings.EMPTY, threadPool);\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         defaultGlobalSettings = builder.put(\"path.home\", createTempDir()).build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTcyMA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619720", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:50:32Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapSessionFactoryTests.java", "diffHunk": "@@ -59,7 +60,11 @@ public void setup() throws Exception {\n         final Path origCa = getDataPath(\"/org/elasticsearch/xpack/security/authc/ldap/support/ldap-ca.crt\");\n         ldapCaPath = createTempFile();\n         Files.copy(origCa, ldapCaPath, StandardCopyOption.REPLACE_EXISTING);\n-        globalSettings = Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapSessionFactoryTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapSessionFactoryTests.java\nindex 49555bab0aa..31ebdf2317b 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapSessionFactoryTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapSessionFactoryTests.java\n\n@@ -61,7 +61,7 @@ public class LdapSessionFactoryTests extends LdapTestCase {\n         ldapCaPath = createTempFile();\n         Files.copy(origCa, ldapCaPath, StandardCopyOption.REPLACE_EXISTING);\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         globalSettings = builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTc1MA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619750", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:50:41Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapUserSearchSessionFactoryTests.java", "diffHunk": "@@ -62,8 +63,11 @@ public void init() throws Exception {\n          * If we re-use an SSLContext, previously connected sessions can get re-established which breaks hostname\n          * verification tests since a re-established connection does not perform hostname verification.\n          */\n-\n-        globalSettings = Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapUserSearchSessionFactoryTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapUserSearchSessionFactoryTests.java\nindex 7625bbaf3a1..99eec57292d 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapUserSearchSessionFactoryTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/LdapUserSearchSessionFactoryTests.java\n\n@@ -64,7 +64,7 @@ public class LdapUserSearchSessionFactoryTests extends LdapTestCase {\n          * verification tests since a re-established connection does not perform hostname verification.\n          */\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         globalSettings = builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTc4OA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619788", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:50:52Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/LdapTestCase.java", "diffHunk": "@@ -172,6 +172,9 @@ public static Settings buildLdapSettings(RealmConfig.RealmIdentifier realmId, St\n         if (serverSetType != null) {\n             builder.put(getFullSettingKey(realmId, LdapLoadBalancingSettings.LOAD_BALANCE_TYPE_SETTING), serverSetType.toString());\n         }\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b48d57e25fa716b421d1cf43cf7687896658e288", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/LdapTestCase.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/LdapTestCase.java\nindex 994b6dfbdb8..52427bcc86c 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/LdapTestCase.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/LdapTestCase.java\n\n@@ -172,7 +172,7 @@ public abstract class LdapTestCase extends ESTestCase {\n         if (serverSetType != null) {\n             builder.put(getFullSettingKey(realmId, LdapLoadBalancingSettings.LOAD_BALANCE_TYPE_SETTING), serverSetType.toString());\n         }\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return builder.build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTgyNw==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619827", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:51:02Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/SessionFactoryLoadBalancingTests.java", "diffHunk": "@@ -292,7 +293,11 @@ private TestSessionFactory createSessionFactory(LdapLoadBalancing loadBalancing)\n         Settings globalSettings = Settings.builder().put(\"path.home\", createTempDir()).put(settings).build();\n         RealmConfig config = new RealmConfig(REALM_IDENTIFIER, globalSettings,\n                 TestEnvironment.newEnvironment(globalSettings), new ThreadContext(Settings.EMPTY));\n-        return new TestSessionFactory(config, new SSLService(Settings.EMPTY, TestEnvironment.newEnvironment(config.settings())),\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/SessionFactoryLoadBalancingTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/SessionFactoryLoadBalancingTests.java\nindex ba312b131ff..c7c8fc0926b 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/SessionFactoryLoadBalancingTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ldap/support/SessionFactoryLoadBalancingTests.java\n\n@@ -294,7 +294,7 @@ public class SessionFactoryLoadBalancingTests extends LdapTestCase {\n         RealmConfig config = new RealmConfig(REALM_IDENTIFIER, globalSettings,\n                 TestEnvironment.newEnvironment(globalSettings), new ThreadContext(Settings.EMPTY));\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return new TestSessionFactory(config, new SSLService(builder.build(), TestEnvironment.newEnvironment(config.settings())),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTg1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619856", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:51:12Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectAuthenticatorTests.java", "diffHunk": "@@ -93,7 +94,11 @@\n \n     @Before\n     public void setup() {\n-        globalSettings = Settings.builder().put(\"path.home\", createTempDir())\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectAuthenticatorTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectAuthenticatorTests.java\nindex 13db6fd5802..d3186a7242a 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectAuthenticatorTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectAuthenticatorTests.java\n\n@@ -95,7 +95,7 @@ public class OpenIdConnectAuthenticatorTests extends OpenIdConnectTestCase {\n     @Before\n     public void setup() {\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         globalSettings = builder.put(\"path.home\", createTempDir())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTg4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619887", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:51:21Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/AbstractSimpleSecurityTransportTestCase.java", "diffHunk": "@@ -81,7 +81,11 @@ protected SSLService createSSLService(Settings settings) {\n         secureSettings.setString(\"xpack.security.transport.ssl.secure_key_passphrase\", \"testnode\");\n         // Some tests use a client profile. Put the passphrase in the secure settings for the profile (secure settings cannot be set twice)\n         secureSettings.setString(\"transport.profiles.client.xpack.security.ssl.secure_key_passphrase\", \"testnode\");\n-        Settings settings1 = Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b48d57e25fa716b421d1cf43cf7687896658e288", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/AbstractSimpleSecurityTransportTestCase.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/AbstractSimpleSecurityTransportTestCase.java\nindex 9cd61b4220e..f5fa70815bb 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/AbstractSimpleSecurityTransportTestCase.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/AbstractSimpleSecurityTransportTestCase.java\n\n@@ -82,7 +82,7 @@ public abstract class AbstractSimpleSecurityTransportTestCase extends AbstractSi\n         // Some tests use a client profile. Put the passphrase in the secure settings for the profile (secure settings cannot be set twice)\n         secureSettings.setString(\"transport.profiles.client.xpack.security.ssl.secure_key_passphrase\", \"testnode\");\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings settings1 = builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTkyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619925", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Settings.Builder getSettingsBuilder(){\n          \n          \n            \n                private Settings.Builder getSettingsBuilder() {", "author": "tvernum", "createdAt": "2020-01-28T05:51:30Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java", "diffHunk": "@@ -205,4 +205,12 @@ public String executor() {\n         }\n     }\n \n+    private Settings.Builder getSettingsBuilder(){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java\nindex c8d530393a8..859c3e29a19 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java\n\n@@ -205,9 +205,9 @@ public class ServerTransportFilterIntegrationTests extends SecurityIntegTestCase\n         }\n     }\n \n-    private Settings.Builder getSettingsBuilder(){\n+    private Settings.Builder getSettingsBuilder() {\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return builder;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTk1MA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619950", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:51:38Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java", "diffHunk": "@@ -205,4 +205,12 @@ public String executor() {\n         }\n     }\n \n+    private Settings.Builder getSettingsBuilder(){\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java\nindex c8d530393a8..859c3e29a19 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ServerTransportFilterIntegrationTests.java\n\n@@ -205,9 +205,9 @@ public class ServerTransportFilterIntegrationTests extends SecurityIntegTestCase\n         }\n     }\n \n-    private Settings.Builder getSettingsBuilder(){\n+    private Settings.Builder getSettingsBuilder() {\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return builder;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxOTk3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371619971", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:51:45Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/filter/IPFilterTests.java", "diffHunk": "@@ -265,7 +266,11 @@ public void testThatAllAddressesAreAllowedWhenLicenseDisablesSecurity() {\n     }\n \n     public void testThatNodeStartsWithIPFilterDisabled() throws Exception {\n-        Settings settings = Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/filter/IPFilterTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/filter/IPFilterTests.java\nindex 17f8bfdc0eb..255379916b9 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/filter/IPFilterTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/filter/IPFilterTests.java\n\n@@ -267,7 +267,7 @@ public class IPFilterTests extends ESTestCase {\n \n     public void testThatNodeStartsWithIPFilterDisabled() throws Exception {\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings settings = builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMDAwNA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371620004", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:51:53Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java", "diffHunk": "@@ -47,7 +47,11 @@ public void createSSLService() {\n \n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.secure_key_passphrase\", \"testnode\");\n-        Settings settings = Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java\nindex 06329e23ee0..d57353aaf65 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java\n\n@@ -48,7 +48,7 @@ public class SecurityNetty4HttpServerTransportTests extends ESTestCase {\n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.secure_key_passphrase\", \"testnode\");\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings settings = builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMDAyNA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371620024", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:52:00Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java", "diffHunk": "@@ -150,7 +154,11 @@ public void testCustomSSLConfiguration() throws Exception {\n     public void testNoExceptionWhenConfiguredWithoutSslKeySSLDisabled() throws Exception {\n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.secure_key_passphrase\", \"testnode\");\n-        Settings settings = Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java\nindex 06329e23ee0..d57353aaf65 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/netty4/SecurityNetty4HttpServerTransportTests.java\n\n@@ -155,7 +155,7 @@ public class SecurityNetty4HttpServerTransportTests extends ESTestCase {\n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.secure_key_passphrase\", \"testnode\");\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings settings = builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMDA1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371620053", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:52:09Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java", "diffHunk": "@@ -55,7 +55,11 @@ public void createSSLService() {\n         Path testNodeCert = getDataPath(\"/org/elasticsearch/xpack/security/transport/ssl/certs/simple/testnode.crt\");\n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.secure_key_passphrase\", \"testnode\");\n-        Settings settings = Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java\nindex 05113a8e31e..1b0e5461138 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java\n\n@@ -56,7 +56,7 @@ public class SecurityNioHttpServerTransportTests extends ESTestCase {\n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.secure_key_passphrase\", \"testnode\");\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings settings = builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMDA3NA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371620074", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:52:17Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java", "diffHunk": "@@ -183,7 +187,11 @@ public void testCustomSSLConfiguration() throws IOException {\n     public void testNoExceptionWhenConfiguredWithoutSslKeySSLDisabled() {\n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.truststore.secure_password\", \"testnode\");\n-        Settings settings = Settings.builder()\n+        Settings.Builder builder = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java\nindex 05113a8e31e..1b0e5461138 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/nio/SecurityNioHttpServerTransportTests.java\n\n@@ -188,7 +188,7 @@ public class SecurityNioHttpServerTransportTests extends ESTestCase {\n         MockSecureSettings secureSettings = new MockSecureSettings();\n         secureSettings.setString(\"xpack.security.http.ssl.truststore.secure_password\", \"testnode\");\n         Settings.Builder builder = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         Settings settings = builder\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMDEwNg==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371620106", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:52:26Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java", "diffHunk": "@@ -118,6 +118,9 @@ public void testThatTransportClientUsingSSLv3ProtocolIsRejected() {\n \n     public void testThatConnectionToHTTPWorks() throws Exception {\n         Settings.Builder builder = Settings.builder().put(\"xpack.security.http.ssl.enabled\", true);\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java\nindex ce8809995b4..ca31c5be64f 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java\n\n@@ -118,7 +118,7 @@ public class SslIntegrationTests extends SecurityIntegTestCase {\n \n     public void testThatConnectionToHTTPWorks() throws Exception {\n         Settings.Builder builder = Settings.builder().put(\"xpack.security.http.ssl.enabled\", true);\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         addSSLSettingsForPEMFiles(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMDEyNA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371620124", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:52:35Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageCertificateVerificationTests.java", "diffHunk": "@@ -184,6 +186,9 @@ private void enableHttpsHostnameChecking(SSLSocket clientSocket) {\n             .put(prefix + \".key\", getPath(keyPath))\n             .put(prefix + \".client_authentication\", clientAuth.name())\n             .put(prefix + \".verification_mode\", verificationMode.name());\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageCertificateVerificationTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageCertificateVerificationTests.java\nindex 3e72b52b4a9..5c24ed99513 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageCertificateVerificationTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageCertificateVerificationTests.java\n\n@@ -186,7 +186,7 @@ public class SSLErrorMessageCertificateVerificationTests extends ESTestCase {\n             .put(prefix + \".key\", getPath(keyPath))\n             .put(prefix + \".client_authentication\", clientAuth.name())\n             .put(prefix + \".verification_mode\", verificationMode.name());\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             builder.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         if (caPath != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMDE0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371620149", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Settings.Builder getSettingsBuilder(){\n          \n          \n            \n                private Settings.Builder getSettingsBuilder() {", "author": "tvernum", "createdAt": "2020-01-28T05:52:46Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java", "diffHunk": "@@ -378,4 +379,12 @@ private String randomSslPrefix() {\n             \"xpack.monitoring.exporters.http.ssl\"\n         );\n     }\n+\n+    private Settings.Builder getSettingsBuilder(){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java\nindex 21bc06ccb6f..d2af3aff766 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java\n\n@@ -380,9 +380,9 @@ public class SSLErrorMessageFileTests extends ESTestCase {\n         );\n     }\n \n-    private Settings.Builder getSettingsBuilder(){\n+    private Settings.Builder getSettingsBuilder() {\n         final Settings.Builder settings = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             settings.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return settings;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyMDE4OA==", "url": "https://github.com/elastic/elasticsearch/pull/51501#discussion_r371620188", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-01-28T05:52:54Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java", "diffHunk": "@@ -378,4 +379,12 @@ private String randomSslPrefix() {\n             \"xpack.monitoring.exporters.http.ssl\"\n         );\n     }\n+\n+    private Settings.Builder getSettingsBuilder(){\n+        final Settings.Builder settings = Settings.builder();\n+        if (inFipsJvm()){", "originalCommit": "1e8552cc884b1638596c1cda94b8d8f311efdbb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "chunk": "diff --git a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java\nindex 21bc06ccb6f..d2af3aff766 100644\n--- a/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java\n+++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/ssl/SSLErrorMessageFileTests.java\n\n@@ -380,9 +380,9 @@ public class SSLErrorMessageFileTests extends ESTestCase {\n         );\n     }\n \n-    private Settings.Builder getSettingsBuilder(){\n+    private Settings.Builder getSettingsBuilder() {\n         final Settings.Builder settings = Settings.builder();\n-        if (inFipsJvm()){\n+        if (inFipsJvm()) {\n             settings.put(XPackSettings.DIAGNOSE_TRUST_EXCEPTIONS_SETTING.getKey(), false);\n         }\n         return settings;\n"}}, {"oid": "cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "url": "https://github.com/elastic/elasticsearch/commit/cd24d4fb1e95f6b4f34eacb8cd52e7937eeaa973", "message": "Fix format spacing", "committedDate": "2020-01-28T06:06:34Z", "type": "commit"}, {"oid": "b48d57e25fa716b421d1cf43cf7687896658e288", "url": "https://github.com/elastic/elasticsearch/commit/b48d57e25fa716b421d1cf43cf7687896658e288", "message": "Missed 3", "committedDate": "2020-01-28T06:08:46Z", "type": "commit"}]}