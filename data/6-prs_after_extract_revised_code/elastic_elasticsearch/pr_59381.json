{"pr_number": 59381, "pr_title": "Continue to accept unused 'universal' params in <8.0 indexes", "pr_createdAt": "2020-07-13T08:27:20Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59381", "timeline": [{"oid": "c18067e781b07abab8534d129466ea1025c76882", "url": "https://github.com/elastic/elasticsearch/commit/c18067e781b07abab8534d129466ea1025c76882", "message": "Continue to accept unused 'universal' params in <8.0 indexes", "committedDate": "2020-07-13T08:22:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ4MjIwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/59381#discussion_r453482205", "bodyText": "maybe saying \"has no effect\" would be clearer to users?", "author": "javanna", "createdAt": "2020-07-13T08:32:46Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "diffHunk": "@@ -330,6 +335,12 @@ public final void parse(String name, TypeParser.ParserContext parserContext, Map\n                 }\n                 Parameter<?> parameter = paramsMap.get(propName);\n                 if (parameter == null) {\n+                    if (checkForDeprecatedParameter(propName, parserContext.indexVersionCreated())) {\n+                        deprecationLogger.deprecate(propName,\n+                            \"Parameter [{}] is unused on type [{}] and will be removed in future\", propName, type);", "originalCommit": "c18067e781b07abab8534d129466ea1025c76882", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "018f5083db9279715a6bb921f933a75bac439d1e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java\nindex be2adaabb15..a34eba4ac69 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java\n\n@@ -335,9 +335,9 @@ public abstract class ParametrizedFieldMapper extends FieldMapper {\n                 }\n                 Parameter<?> parameter = paramsMap.get(propName);\n                 if (parameter == null) {\n-                    if (checkForDeprecatedParameter(propName, parserContext.indexVersionCreated())) {\n+                    if (isDeprecatedParameter(propName, parserContext.indexVersionCreated())) {\n                         deprecationLogger.deprecate(propName,\n-                            \"Parameter [{}] is unused on type [{}] and will be removed in future\", propName, type);\n+                            \"Parameter [{}] has no effect on type [{}] and will be removed in future\", propName, type);\n                         iterator.remove();\n                         continue;\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ4MjY1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/59381#discussion_r453482653", "bodyText": "should this be static?", "author": "javanna", "createdAt": "2020-07-13T08:33:30Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java", "diffHunk": "@@ -341,5 +352,18 @@ public final void parse(String name, TypeParser.ParserContext parserContext, Map\n                 iterator.remove();\n             }\n         }\n+\n+        // These parameters were previously *always* parsed by TypeParsers#parseField(), even if they\n+        // made no sense; if we've got here, that means that they're not declared on a current mapper,\n+        // and so we emit a deprecation warning rather than failing a previously working mapping.\n+        private static final Set<String> DEPRECATED_PARAMS\n+            = Set.of(\"store\", \"meta\", \"index\", \"doc_values\", \"boost\", \"index_options\", \"similarity\");\n+\n+        private boolean checkForDeprecatedParameter(String propName, Version indexCreatedVersion) {", "originalCommit": "c18067e781b07abab8534d129466ea1025c76882", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ4NDAxMw==", "url": "https://github.com/elastic/elasticsearch/pull/59381#discussion_r453484013", "bodyText": "also should we rename to isDeprecatedParameter? I find check more ambiguous in what it does.", "author": "javanna", "createdAt": "2020-07-13T08:35:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ4MjY1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "018f5083db9279715a6bb921f933a75bac439d1e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java\nindex be2adaabb15..a34eba4ac69 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/ParametrizedFieldMapper.java\n\n@@ -359,7 +359,7 @@ public abstract class ParametrizedFieldMapper extends FieldMapper {\n         private static final Set<String> DEPRECATED_PARAMS\n             = Set.of(\"store\", \"meta\", \"index\", \"doc_values\", \"boost\", \"index_options\", \"similarity\");\n \n-        private boolean checkForDeprecatedParameter(String propName, Version indexCreatedVersion) {\n+        private static boolean isDeprecatedParameter(String propName, Version indexCreatedVersion) {\n             if (indexCreatedVersion.onOrAfter(Version.V_8_0_0)) {\n                 return false;\n             }\n"}}, {"oid": "018f5083db9279715a6bb921f933a75bac439d1e", "url": "https://github.com/elastic/elasticsearch/commit/018f5083db9279715a6bb921f933a75bac439d1e", "message": "feedback", "committedDate": "2020-07-13T08:43:10Z", "type": "commit"}, {"oid": "f870e2e79febd1dea68f39f78210ed56c5eb6c92", "url": "https://github.com/elastic/elasticsearch/commit/f870e2e79febd1dea68f39f78210ed56c5eb6c92", "message": "Merge branch 'master' into bug/deprecated-params", "committedDate": "2020-07-13T09:06:33Z", "type": "commit"}]}