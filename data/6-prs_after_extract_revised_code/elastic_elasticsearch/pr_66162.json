{"pr_number": 66162, "pr_title": "Snapshot of a searchable snapshot should be empty", "pr_createdAt": "2020-12-10T12:17:45Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66162", "timeline": [{"oid": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c", "url": "https://github.com/elastic/elasticsearch/commit/afbf6fda5a499887f5c2c6215df3d6dd88916a3c", "message": "Snapshot of a searchable snapshot should be empty\n\nToday if you take a snapshot of a searchable snapshot index then we\ntreat it like a normal index and copy (any unchanged parts of) its\ncontents the the repository. This is often a complete copy, doubling the\nsnapshot storage required, since a searchable snapshot index typically\nhas a different name from the original index; it may also be that we are\ntaking a snapshot into a different repository. The content of a\nsearchable snapshot is already held in a snapshot, and its index\nmetadata indicates how to find this content, so it is wasteful to copy\nanything new into the repository.\n\nThis commit adjusts things so that a searchable snapshot shard presents\nitself to the snapshotter as if it contained no segments, and adjusts\nthings to account for the consequent mismatch at restore time.\n\nCloses #66110", "committedDate": "2020-12-10T12:16:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyNjkwMg==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540126902", "bodyText": "Oops, this will almost always work except for cases where we add another character to the encoded generation (think \"1\" < \"10\" < \"2\"). I'll address this.", "author": "DaveCTurner", "createdAt": "2020-12-10T12:24:36Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -271,7 +282,32 @@ public void onIndexModule(IndexModule indexModule) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n             && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {\n             return Optional.of(\n-                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false)\n+                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false) {\n+\n+                    // present an empty IndexCommit to the snapshot mechanism so that we copy no shard data to the repository\n+                    private final IndexCommit emptyIndexCommit;\n+\n+                    {\n+                        try {\n+                            final Directory directory = engineConfig.getStore().directory();\n+                            final String oldestSegmentsFile = Arrays.stream(directory.listAll())\n+                                .filter(s -> s.startsWith(IndexFileNames.SEGMENTS + \"_\"))\n+                                .min(Comparator.naturalOrder())", "originalCommit": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc3403a199e26d288a5b0ac029678a24623bddc1", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\nindex 51789832396..5cd2be64d0d 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n\n@@ -277,6 +277,8 @@ public class SearchableSnapshots extends Plugin implements IndexStorePlugin, Eng\n         });\n     }\n \n+    static final Comparator<String> SEGMENT_FILENAME_COMPARATOR = Comparator.comparingLong(SegmentInfos::generationFromSegmentsFileName);\n+\n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n"}}, {"oid": "cc3403a199e26d288a5b0ac029678a24623bddc1", "url": "https://github.com/elastic/elasticsearch/commit/cc3403a199e26d288a5b0ac029678a24623bddc1", "message": "Sort the segments files properly", "committedDate": "2020-12-10T12:45:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyODgzOA==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540128838", "bodyText": "Can we add shardStateIdentifier here while we're at it ? :) (also .toString() isn't necessary?", "author": "original-brownbear", "createdAt": "2020-12-10T12:27:31Z", "path": "server/src/main/java/org/elasticsearch/index/snapshots/blobstore/SnapshotFiles.java", "diffHunk": "@@ -128,4 +128,8 @@ private FileInfo findPhysicalIndexFile(String physicalName) {\n         return physicalFiles.get(physicalName);\n     }\n \n+    @Override\n+    public String toString() {\n+        return \"SnapshotFiles{\" + indexFiles.toString() + \"}\";", "originalCommit": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1Mjk5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540152993", "bodyText": "yep, see 63383c7", "author": "DaveCTurner", "createdAt": "2020-12-10T13:06:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyODgzOA=="}], "type": "inlineReview", "revised_code": {"commit": "63383c77547a0760a274d83ab026dd62eb6fffc9", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/SnapshotFiles.java b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/SnapshotFiles.java\nindex a582e9cf3e3..fcc92294b4a 100644\n--- a/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/SnapshotFiles.java\n+++ b/server/src/main/java/org/elasticsearch/index/snapshots/blobstore/SnapshotFiles.java\n\n@@ -130,6 +130,7 @@ public class SnapshotFiles {\n \n     @Override\n     public String toString() {\n-        return \"SnapshotFiles{\" + indexFiles.toString() + \"}\";\n+        return \"SnapshotFiles{snapshot=[\" + snapshot + \"], shardStateIdentifier=[\" + shardStateIdentifier + \"], indexFiles=\" + indexFiles\n+                + \"}\";\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEzMDY0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540130649", "bodyText": "NIT: drop empty line", "author": "original-brownbear", "createdAt": "2020-12-10T12:30:31Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/InMemoryNoOpCommitDirectory.java", "diffHunk": "@@ -119,7 +119,8 @@ private static void ensureMutable(String name) {\n             || name.startsWith(\"pending_segments_\")\n             || name.matches(\"^recovery\\\\..*\\\\.segments_.*$\")) == false) {\n \n-            throw new IllegalArgumentException(\"file [\" + name + \"] is not mutable\");\n+            throw new ImmutableDirectoryException(\"file [\" + name + \"] is not mutable\");\n         }\n     }\n+", "originalCommit": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1NDEzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540154131", "bodyText": "I prefer to have a blank line here, it simplifies merge conflicts when two commits add members to the bottom of a class.", "author": "DaveCTurner", "createdAt": "2020-12-10T13:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEzMDY0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "b0e3567100e31b4b6a774a90f7c8a1eeac0c7ba3", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/InMemoryNoOpCommitDirectory.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/InMemoryNoOpCommitDirectory.java\nindex c6fa167f5ea..e9488d0b94d 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/InMemoryNoOpCommitDirectory.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/InMemoryNoOpCommitDirectory.java\n\n@@ -123,4 +126,8 @@ public class InMemoryNoOpCommitDirectory extends FilterDirectory {\n         }\n     }\n \n+    private boolean notOverwritingRealSegmentsFile(String name) throws IOException {\n+        return name.startsWith(\"segments_\") == false || Arrays.stream(realDirectory.listAll()).noneMatch(s -> s.equals(name));\n+    }\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEzODA3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540138075", "bodyText": "Just for my own learning probably, but why do we need this? Can't we just always use generation 0? Probably not :) => can we add a comment with why we need this?", "author": "original-brownbear", "createdAt": "2020-12-10T12:42:32Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -271,7 +282,32 @@ public void onIndexModule(IndexModule indexModule) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n             && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {\n             return Optional.of(\n-                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false)\n+                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false) {\n+\n+                    // present an empty IndexCommit to the snapshot mechanism so that we copy no shard data to the repository\n+                    private final IndexCommit emptyIndexCommit;\n+\n+                    {\n+                        try {\n+                            final Directory directory = engineConfig.getStore().directory();\n+                            final String oldestSegmentsFile = Arrays.stream(directory.listAll())\n+                                .filter(s -> s.startsWith(IndexFileNames.SEGMENTS + \"_\"))\n+                                .min(Comparator.naturalOrder())\n+                                .orElseThrow(() -> new IOException(\"segments_N file not found\"));\n+                            final SegmentInfos segmentInfos = new SegmentInfos(Version.LATEST.major);\n+                            segmentInfos.updateGeneration(SegmentInfos.readCommit(directory, oldestSegmentsFile));\n+                            emptyIndexCommit = Lucene.getIndexCommit(segmentInfos, directory);", "originalCommit": "afbf6fda5a499887f5c2c6215df3d6dd88916a3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1NDQyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540154429", "bodyText": "It's a good question and what I spent most of my time on TBH, I added a comment above.", "author": "DaveCTurner", "createdAt": "2020-12-10T13:08:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEzODA3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "cc3403a199e26d288a5b0ac029678a24623bddc1", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\nindex 51789832396..5cd2be64d0d 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n\n@@ -277,6 +277,8 @@ public class SearchableSnapshots extends Plugin implements IndexStorePlugin, Eng\n         });\n     }\n \n+    static final Comparator<String> SEGMENT_FILENAME_COMPARATOR = Comparator.comparingLong(SegmentInfos::generationFromSegmentsFileName);\n+\n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n"}}, {"oid": "68971b58e418000398ceddae02c4f639165ded77", "url": "https://github.com/elastic/elasticsearch/commit/68971b58e418000398ceddae02c4f639165ded77", "message": "Fix test that already tested this path", "committedDate": "2020-12-10T12:49:36Z", "type": "commit"}, {"oid": "a04c04c2af47f68850a904a34456851475a04cf1", "url": "https://github.com/elastic/elasticsearch/commit/a04c04c2af47f68850a904a34456851475a04cf1", "message": "Add comment on why we futz around with generations", "committedDate": "2020-12-10T13:03:56Z", "type": "commit"}, {"oid": "b0e3567100e31b4b6a774a90f7c8a1eeac0c7ba3", "url": "https://github.com/elastic/elasticsearch/commit/b0e3567100e31b4b6a774a90f7c8a1eeac0c7ba3", "message": "Assert we don't overwrite the existing segments_N file", "committedDate": "2020-12-10T13:04:06Z", "type": "commit"}, {"oid": "63383c77547a0760a274d83ab026dd62eb6fffc9", "url": "https://github.com/elastic/elasticsearch/commit/63383c77547a0760a274d83ab026dd62eb6fffc9", "message": "More fields and less toString in toString", "committedDate": "2020-12-10T13:05:27Z", "type": "commit"}, {"oid": "ea23c8dabe493a6442ae7cc2aeb1788683a0a4dd", "url": "https://github.com/elastic/elasticsearch/commit/ea23c8dabe493a6442ae7cc2aeb1788683a0a4dd", "message": "Spotless", "committedDate": "2020-12-10T13:14:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1Njg5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540156899", "bodyText": "Could we instead up front check that the directory is \"immutable\" and skip the restore completely? Would feel slightly less hackish to me... Might have to look into a chain of FilterDirectories to see if any are immutable.", "author": "henningandersen", "createdAt": "2020-12-10T13:12:20Z", "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/FileRestoreContext.java", "diffHunk": "@@ -190,6 +191,10 @@ private void afterRestore(SnapshotFiles snapshotFiles, Store store, StoreFileMet\n                 try {\n                     store.deleteQuiet(\"restore\", storeFile);\n                     store.directory().deleteFile(storeFile);\n+                } catch (ImmutableDirectoryException e) {", "originalCommit": "63383c77547a0760a274d83ab026dd62eb6fffc9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE2NTkwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540165901", "bodyText": "It's possible but uglier IMO. We can't add a method to Directory itself to check that since Lucene owns it, so we'd have to add a marker interface and use instanceof.", "author": "DaveCTurner", "createdAt": "2020-12-10T13:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1Njg5OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1NzY2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540157665", "bodyText": "If we can skip the restore completely (see previous comment), could we then instead return null here and also skip the snapshotting completely?", "author": "henningandersen", "createdAt": "2020-12-10T13:13:26Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -266,12 +277,45 @@ public void onIndexModule(IndexModule indexModule) {\n         });\n     }\n \n+    static final Comparator<String> SEGMENT_FILENAME_COMPARATOR = Comparator.comparingLong(SegmentInfos::generationFromSegmentsFileName);\n+\n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n             && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {\n             return Optional.of(\n-                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false)\n+                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false) {\n+\n+                    // present an empty IndexCommit to the snapshot mechanism so that we copy no shard data to the repository\n+                    private final IndexCommit emptyIndexCommit;\n+\n+                    {\n+                        try {\n+                            // We have to use a generation number that corresponds to a real segments_N file since we read this file from\n+                            // the directory during the snapshotting process. The oldest segments_N file is the one in the snapshot\n+                            // (recalling that we may perform some no-op commits which make newer segments_N files too). The good thing\n+                            // about using the oldest segments_N file is that a restore will find that we already have this file \"locally\",\n+                            // avoid overwriting the real one with the bogus one, and then use the real one for the rest of the recovery.\n+\n+                            final Directory directory = engineConfig.getStore().directory();\n+                            final String oldestSegmentsFile = Arrays.stream(directory.listAll())\n+                                .filter(s -> s.startsWith(IndexFileNames.SEGMENTS + \"_\"))\n+                                .min(SEGMENT_FILENAME_COMPARATOR)\n+                                .orElseThrow(() -> new IOException(\"segments_N file not found\"));\n+                            final SegmentInfos segmentInfos = new SegmentInfos(Version.LATEST.major);\n+                            segmentInfos.updateGeneration(SegmentInfos.readCommit(directory, oldestSegmentsFile));\n+                            emptyIndexCommit = Lucene.getIndexCommit(segmentInfos, directory);\n+                        } catch (IOException e) {\n+                            throw new UncheckedIOException(e);\n+                        }\n+                    }\n+\n+                    @Override\n+                    public IndexCommitRef acquireIndexCommitForSnapshot() throws EngineException {\n+                        store.incRef();\n+                        return new IndexCommitRef(emptyIndexCommit, store::decRef);", "originalCommit": "63383c77547a0760a274d83ab026dd62eb6fffc9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5Nzc5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66162#discussion_r540197792", "bodyText": "Not trivially, no, we want the snapshot of this shard to succeed (without having done much) so we can't just bail out, and we use a null commit to indicate \"find the latest commit\" further down the line.", "author": "DaveCTurner", "createdAt": "2020-12-10T14:09:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1NzY2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f0ef5056b21c728aa3ec01bc1553e688472dec7d", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\nindex db229b69d65..0b5ee5964a3 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n\n@@ -277,8 +269,6 @@ public class SearchableSnapshots extends Plugin implements IndexStorePlugin, Eng\n         });\n     }\n \n-    static final Comparator<String> SEGMENT_FILENAME_COMPARATOR = Comparator.comparingLong(SegmentInfos::generationFromSegmentsFileName);\n-\n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n"}}, {"oid": "f0ef5056b21c728aa3ec01bc1553e688472dec7d", "url": "https://github.com/elastic/elasticsearch/commit/f0ef5056b21c728aa3ec01bc1553e688472dec7d", "message": "Extract method for constructing empty index commit", "committedDate": "2020-12-10T15:20:57Z", "type": "commit"}, {"oid": "794e93534b2edc211487725f841da7c4c902b41b", "url": "https://github.com/elastic/elasticsearch/commit/794e93534b2edc211487725f841da7c4c902b41b", "message": "Add REST test for snapshotting a searchable snapshot", "committedDate": "2020-12-10T16:53:06Z", "type": "commit"}, {"oid": "9d9c000fe90a4f321bf508e9d03110153f9d8160", "url": "https://github.com/elastic/elasticsearch/commit/9d9c000fe90a4f321bf508e9d03110153f9d8160", "message": "Merge branch 'master' into 2020-12-09-snapshotting-searchable-snapshots", "committedDate": "2020-12-14T08:01:47Z", "type": "commit"}, {"oid": "0018295a037d3e4d3873a0aecf0f02d15f3f1057", "url": "https://github.com/elastic/elasticsearch/commit/0018295a037d3e4d3873a0aecf0f02d15f3f1057", "message": "Allow plugins to customise the snapshot commit independently of the engine impl", "committedDate": "2020-12-14T09:50:13Z", "type": "commit"}, {"oid": "50eb788090c38212fda02b66327b0464ab4ff001", "url": "https://github.com/elastic/elasticsearch/commit/50eb788090c38212fda02b66327b0464ab4ff001", "message": "Merge branch 'master' into 2020-12-09-snapshotting-searchable-snapshots", "committedDate": "2020-12-14T17:33:59Z", "type": "commit"}]}