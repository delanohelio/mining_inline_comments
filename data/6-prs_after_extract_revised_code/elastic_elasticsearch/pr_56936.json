{"pr_number": 56936, "pr_title": "Track PUT/PUT_BLOCK operations on AzureBlobStore.", "pr_createdAt": "2020-05-19T10:15:14Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56936", "timeline": [{"oid": "48739a665c177aefe1480bcacf20b86a00af39f7", "url": "https://github.com/elastic/elasticsearch/commit/48739a665c177aefe1480bcacf20b86a00af39f7", "message": "Track PUT/PUT_BLOCK operations on AzureBlobStore.", "committedDate": "2020-05-19T10:08:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDI5NA==", "url": "https://github.com/elastic/elasticsearch/pull/56936#discussion_r427594294", "bodyText": "queryParams.contains(\"comp=blocklist\") is redundant isn't it?\nMight be safer to require a blockid= as well if we just see a comp=block just to make sure we're in line with expectations on the API requests we'll see here?", "author": "original-brownbear", "createdAt": "2020-05-19T20:55:21Z", "path": "plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java", "diffHunk": "@@ -101,15 +102,26 @@ public AzureBlobStore(RepositoryMetadata metadata, AzureStorageService service,\n         final Map<String, AzureStorageSettings> prevSettings = this.service.refreshAndClearCache(emptyMap());\n         final Map<String, AzureStorageSettings> newSettings = AzureStorageSettings.overrideLocationMode(prevSettings, this.locationMode);\n         this.service.refreshAndClearCache(newSettings);\n-        this.getMetricsCollector = (requestMethod) -> {\n-            if (requestMethod.equalsIgnoreCase(\"HEAD\")) {\n+        this.getMetricsCollector = (httpURLConnection) -> {\n+            if (httpURLConnection.getRequestMethod().equalsIgnoreCase(\"HEAD\")) {\n                 stats.headOperations.incrementAndGet();\n                 return;\n             }\n \n             stats.getOperations.incrementAndGet();\n         };\n-        this.listMetricsCollector = (requestMethod) -> stats.listOperations.incrementAndGet();\n+        this.listMetricsCollector = (httpURLConnection) -> stats.listOperations.incrementAndGet();\n+        this.uploadMetricsCollector = (httpURLConnection -> {\n+           assert httpURLConnection.getRequestMethod().equals(\"PUT\");\n+            String queryParams = httpURLConnection.getURL().getQuery();\n+            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block\n+            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list\n+            if (queryParams != null && (queryParams.contains(\"comp=block\") || queryParams.contains(\"comp=blocklist\"))) {", "originalCommit": "48739a665c177aefe1480bcacf20b86a00af39f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgyNzI3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/56936#discussion_r427827277", "bodyText": "You're right, I've just added an additional condition to ensure that we're really matching against a PutBlock request. Thanks!", "author": "fcofdez", "createdAt": "2020-05-20T08:22:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDI5NA=="}], "type": "inlineReview", "revised_code": {"commit": "513cb090ce13ed7ffb1c1acad379d6c16c8f1bd8", "chunk": "diff --git a/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java\nindex e03dca9b126..ce3879a6b84 100644\n--- a/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java\n+++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java\n\n@@ -103,20 +103,22 @@ public class AzureBlobStore implements BlobStore {\n         final Map<String, AzureStorageSettings> newSettings = AzureStorageSettings.overrideLocationMode(prevSettings, this.locationMode);\n         this.service.refreshAndClearCache(newSettings);\n         this.getMetricsCollector = (httpURLConnection) -> {\n-            if (httpURLConnection.getRequestMethod().equalsIgnoreCase(\"HEAD\")) {\n+            if (httpURLConnection.getRequestMethod().equals(\"HEAD\")) {\n                 stats.headOperations.incrementAndGet();\n                 return;\n             }\n+            assert httpURLConnection.getRequestMethod().equals(\"GET\");\n \n             stats.getOperations.incrementAndGet();\n         };\n-        this.listMetricsCollector = (httpURLConnection) -> stats.listOperations.incrementAndGet();\n+        this.listMetricsCollector = (httpURLConnection) -> {\n+            assert httpURLConnection.getRequestMethod().equals(\"GET\");\n+            stats.listOperations.incrementAndGet();\n+        };\n         this.uploadMetricsCollector = (httpURLConnection -> {\n            assert httpURLConnection.getRequestMethod().equals(\"PUT\");\n             String queryParams = httpURLConnection.getURL().getQuery();\n-            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block\n-            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list\n-            if (queryParams != null && (queryParams.contains(\"comp=block\") || queryParams.contains(\"comp=blocklist\"))) {\n+            if (queryParams != null && isBlockUpload(queryParams)) {\n                 stats.putBlockOperations.incrementAndGet();\n             } else {\n                 stats.putOperations.incrementAndGet();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDgyNA==", "url": "https://github.com/elastic/elasticsearch/pull/56936#discussion_r427594824", "bodyText": "Sam as in the production code, matching on comp=blocklist seems redundant when matching comp=block?", "author": "original-brownbear", "createdAt": "2020-05-19T20:56:22Z", "path": "plugins/repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureBlobStoreRepositoryTests.java", "diffHunk": "@@ -186,7 +186,18 @@ protected void maybeTrack(String request, Headers headers) {\n                 trackRequest(\"HEAD\");\n             } else if (listPattern.test(request)) {\n                 trackRequest(\"LIST\");\n+            } else if (isBlockUpload(request)) {\n+                trackRequest(\"PUT_BLOCK\");\n+            } else if (Regex.simpleMatch(\"PUT /*/*\", request)) {\n+                trackRequest(\"PUT\");\n             }\n         }\n+\n+        // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block\n+        // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list\n+        private boolean isBlockUpload(String request) {\n+            return Regex.simpleMatch(\"PUT /*/*?*comp=blocklist*\", request)", "originalCommit": "48739a665c177aefe1480bcacf20b86a00af39f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "513cb090ce13ed7ffb1c1acad379d6c16c8f1bd8", "chunk": "diff --git a/plugins/repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureBlobStoreRepositoryTests.java b/plugins/repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureBlobStoreRepositoryTests.java\nindex 3c4d32e9ec9..e99259b31cb 100644\n--- a/plugins/repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureBlobStoreRepositoryTests.java\n+++ b/plugins/repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureBlobStoreRepositoryTests.java\n\n@@ -193,11 +193,11 @@ public class AzureBlobStoreRepositoryTests extends ESMockAPIBasedRepositoryInteg\n             }\n         }\n \n-        // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block\n         // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list\n+        // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block\n         private boolean isBlockUpload(String request) {\n             return Regex.simpleMatch(\"PUT /*/*?*comp=blocklist*\", request)\n-                || Regex.simpleMatch(\"PUT /*/*?*comp=block*\", request);\n+                || Regex.simpleMatch(\"PUT /*/*?*blockid=*comp=block*\", request);\n         }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NzAzNg==", "url": "https://github.com/elastic/elasticsearch/pull/56936#discussion_r427597036", "bodyText": "Semi-related to this PR since you did it in the new collector, let's add assertions in spots like this one to make sure, we're actually seeing a GET here :) Can probably do the same for the list collector also.", "author": "original-brownbear", "createdAt": "2020-05-19T21:00:30Z", "path": "plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java", "diffHunk": "@@ -101,15 +102,26 @@ public AzureBlobStore(RepositoryMetadata metadata, AzureStorageService service,\n         final Map<String, AzureStorageSettings> prevSettings = this.service.refreshAndClearCache(emptyMap());\n         final Map<String, AzureStorageSettings> newSettings = AzureStorageSettings.overrideLocationMode(prevSettings, this.locationMode);\n         this.service.refreshAndClearCache(newSettings);\n-        this.getMetricsCollector = (requestMethod) -> {\n-            if (requestMethod.equalsIgnoreCase(\"HEAD\")) {\n+        this.getMetricsCollector = (httpURLConnection) -> {\n+            if (httpURLConnection.getRequestMethod().equalsIgnoreCase(\"HEAD\")) {\n                 stats.headOperations.incrementAndGet();\n                 return;\n             }\n \n             stats.getOperations.incrementAndGet();", "originalCommit": "48739a665c177aefe1480bcacf20b86a00af39f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "513cb090ce13ed7ffb1c1acad379d6c16c8f1bd8", "chunk": "diff --git a/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java\nindex e03dca9b126..ce3879a6b84 100644\n--- a/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java\n+++ b/plugins/repository-azure/src/main/java/org/elasticsearch/repositories/azure/AzureBlobStore.java\n\n@@ -103,20 +103,22 @@ public class AzureBlobStore implements BlobStore {\n         final Map<String, AzureStorageSettings> newSettings = AzureStorageSettings.overrideLocationMode(prevSettings, this.locationMode);\n         this.service.refreshAndClearCache(newSettings);\n         this.getMetricsCollector = (httpURLConnection) -> {\n-            if (httpURLConnection.getRequestMethod().equalsIgnoreCase(\"HEAD\")) {\n+            if (httpURLConnection.getRequestMethod().equals(\"HEAD\")) {\n                 stats.headOperations.incrementAndGet();\n                 return;\n             }\n+            assert httpURLConnection.getRequestMethod().equals(\"GET\");\n \n             stats.getOperations.incrementAndGet();\n         };\n-        this.listMetricsCollector = (httpURLConnection) -> stats.listOperations.incrementAndGet();\n+        this.listMetricsCollector = (httpURLConnection) -> {\n+            assert httpURLConnection.getRequestMethod().equals(\"GET\");\n+            stats.listOperations.incrementAndGet();\n+        };\n         this.uploadMetricsCollector = (httpURLConnection -> {\n            assert httpURLConnection.getRequestMethod().equals(\"PUT\");\n             String queryParams = httpURLConnection.getURL().getQuery();\n-            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block\n-            // https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list\n-            if (queryParams != null && (queryParams.contains(\"comp=block\") || queryParams.contains(\"comp=blocklist\"))) {\n+            if (queryParams != null && isBlockUpload(queryParams)) {\n                 stats.putBlockOperations.incrementAndGet();\n             } else {\n                 stats.putOperations.incrementAndGet();\n"}}, {"oid": "513cb090ce13ed7ffb1c1acad379d6c16c8f1bd8", "url": "https://github.com/elastic/elasticsearch/commit/513cb090ce13ed7ffb1c1acad379d6c16c8f1bd8", "message": "Include blockid on isBlockUpload matcher.", "committedDate": "2020-05-20T08:22:52Z", "type": "commit"}, {"oid": "509f4594f924b0475c8e949eb5cd092267c04b07", "url": "https://github.com/elastic/elasticsearch/commit/509f4594f924b0475c8e949eb5cd092267c04b07", "message": "Don't rely on query params order for testing.", "committedDate": "2020-05-20T09:38:36Z", "type": "commit"}, {"oid": "1ed52e34bd2a940c50c93507d25eb8ccbbc6878a", "url": "https://github.com/elastic/elasticsearch/commit/1ed52e34bd2a940c50c93507d25eb8ccbbc6878a", "message": "Merge remote-tracking branch 'origin/master' into azure-post-put-api-calls-tracking", "committedDate": "2020-05-25T09:57:21Z", "type": "commit"}]}