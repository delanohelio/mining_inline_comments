{"pr_number": 60316, "pr_title": "Remove ScriptClassInfo from Walker", "pr_createdAt": "2020-07-28T16:34:55Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60316", "timeline": [{"oid": "fe4f7bfb438f38e88f596b19ce38ae4cd49ec5c6", "url": "https://github.com/elastic/elasticsearch/commit/fe4f7bfb438f38e88f596b19ce38ae4cd49ec5c6", "message": "Move bootstrap injection into the the ir tree builder phase", "committedDate": "2020-07-27T18:11:02Z", "type": "commit"}, {"oid": "02b70959c0a4be12ee85565aaf25ee1cae4ebea5", "url": "https://github.com/elastic/elasticsearch/commit/02b70959c0a4be12ee85565aaf25ee1cae4ebea5", "message": "move ScriptClassInfo out of walker and remove unncessary injection\nphases", "committedDate": "2020-07-27T18:42:59Z", "type": "commit"}, {"oid": "a4d61ba2e61783c5e884a3af0c161dcff2e42cf4", "url": "https://github.com/elastic/elasticsearch/commit/a4d61ba2e61783c5e884a3af0c161dcff2e42cf4", "message": "Merge branch 'master' into semantic010", "committedDate": "2020-07-29T17:45:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2Mzc5MA==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465263790", "bodyText": "Does this close #51841?", "author": "stu-elastic", "createdAt": "2020-08-04T19:00:22Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultSemanticAnalysisPhase.java", "diffHunk": "@@ -261,13 +261,6 @@ public void visitFunction(SFunction userFunctionNode, ScriptScope scriptScope) {\n         if (methodEscape) {\n             functionScope.setCondition(userFunctionNode, MethodEscape.class);\n         }\n-\n-        // TODO: do not specialize for execute\n-        // TODO: https://github.com/elastic/elasticsearch/issues/51841", "originalCommit": "a4d61ba2e61783c5e884a3af0c161dcff2e42cf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3MjUxMA==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465872510", "bodyText": "Yes!", "author": "jdconrad", "createdAt": "2020-08-05T17:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2Mzc5MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2NDQ5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465264492", "bodyText": "Should you mention injectStaticFields here?", "author": "stu-elastic", "createdAt": "2020-08-04T19:01:41Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java", "diffHunk": "@@ -176,26 +179,187 @@\n import org.elasticsearch.painless.symbol.Decorations.UnaryType;\n import org.elasticsearch.painless.symbol.Decorations.UpcastPainlessCast;\n import org.elasticsearch.painless.symbol.Decorations.ValueType;\n+import org.elasticsearch.painless.symbol.FunctionTable;\n import org.elasticsearch.painless.symbol.FunctionTable.LocalFunction;\n import org.elasticsearch.painless.symbol.ScriptScope;\n import org.elasticsearch.painless.symbol.SemanticScope.Variable;\n+import org.objectweb.asm.Opcodes;\n \n+import java.lang.invoke.CallSite;\n+import java.lang.invoke.MethodHandles.Lookup;\n+import java.lang.invoke.MethodType;\n import java.lang.reflect.Modifier;\n import java.util.Arrays;\n import java.util.Iterator;\n import java.util.List;\n import java.util.regex.Pattern;\n \n-public class DefaultUserTreeToIRTreeVisitor implements UserTreeVisitor<ScriptScope> {\n+public class DefaultUserTreeToIRTreePhase implements UserTreeVisitor<ScriptScope> {\n \n-    private ClassNode irClassNode;\n+    protected ClassNode irClassNode;\n \n-    protected IRNode visit(ANode userNode, ScriptScope scriptScope) {\n-        if (userNode == null) {\n-            return null;\n-        } else {\n-            userNode.visit(this, scriptScope);\n-            return scriptScope.getDecoration(userNode, IRNodeDecoration.class).getIRNode();\n+    /**\n+     * This injects additional ir nodes required for resolving the def type at runtime.\n+     * This includes injection of ir nodes to add a function to call\n+     * {@link DefBootstrap#bootstrap(PainlessLookup, FunctionTable, Lookup, String, MethodType, int, int, Object...)}\n+     * to do the runtime resolution.\n+     */\n+    protected void injectBootstrapMethod(ScriptScope scriptScope) {", "originalCommit": "a4d61ba2e61783c5e884a3af0c161dcff2e42cf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3MzEyNg==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465873126", "bodyText": "Done.", "author": "jdconrad", "createdAt": "2020-08-05T17:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2NDQ5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b3fd76361e7e1d00df0f0d4070949130845f6271", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java\nindex cac8f33d20c..0379055b13d 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java\n\n@@ -202,7 +202,7 @@ public class DefaultUserTreeToIRTreePhase implements UserTreeVisitor<ScriptScope\n      * This injects additional ir nodes required for resolving the def type at runtime.\n      * This includes injection of ir nodes to add a function to call\n      * {@link DefBootstrap#bootstrap(PainlessLookup, FunctionTable, Lookup, String, MethodType, int, int, Object...)}\n-     * to do the runtime resolution.\n+     * to do the runtime resolution, and several supporting static fields.\n      */\n     protected void injectBootstrapMethod(ScriptScope scriptScope) {\n         // adds static fields required for def bootstrapping\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2OTMwNA==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465269304", "bodyText": "remove indent", "author": "stu-elastic", "createdAt": "2020-08-04T19:10:45Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java", "diffHunk": "@@ -332,11 +388,11 @@ protected static void injectSandboxExceptions(FunctionNode functionNode) {\n             memberCallNode.setLocation(internalLocation);\n             memberCallNode.setExpressionType(ScriptException.class);\n             memberCallNode.setLocalFunction(new LocalFunction(\n-                    \"convertToScriptException\",\n-                    ScriptException.class,\n-                    Arrays.asList(Throwable.class, Map.class),\n-                    true,\n-                    false\n+                            \"convertToScriptException\",", "originalCommit": "a4d61ba2e61783c5e884a3af0c161dcff2e42cf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4MDc5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465880799", "bodyText": "Done", "author": "jdconrad", "createdAt": "2020-08-05T17:15:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2OTMwNA=="}], "type": "inlineReview", "revised_code": {"commit": "b3fd76361e7e1d00df0f0d4070949130845f6271", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\nindex 19dfd79231e..08f46f662fe 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\n\n@@ -387,7 +387,8 @@ public class PainlessUserTreeToIRTreePhase extends DefaultUserTreeToIRTreePhase\n             MemberCallNode memberCallNode = new MemberCallNode();\n             memberCallNode.setLocation(internalLocation);\n             memberCallNode.setExpressionType(ScriptException.class);\n-            memberCallNode.setLocalFunction(new LocalFunction(\n+            memberCallNode.setLocalFunction(\n+                    new LocalFunction(\n                             \"convertToScriptException\",\n                             ScriptException.class,\n                             Arrays.asList(Throwable.class, Map.class),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2OTM0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465269345", "bodyText": "remove indent", "author": "stu-elastic", "createdAt": "2020-08-04T19:10:50Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java", "diffHunk": "@@ -367,15 +423,15 @@ protected static void injectSandboxExceptions(FunctionNode functionNode) {\n             callSubNode.setExpressionType(Map.class);\n             callSubNode.setBox(PainlessExplainError.class);\n             callSubNode.setMethod(new PainlessMethod(\n-                    PainlessExplainError.class.getMethod(\n-                            \"getHeaders\",\n-                            PainlessLookup.class),\n-                    PainlessExplainError.class,\n-                    null,\n-                    Collections.emptyList(),\n-                    null,\n-                    null,\n-                    null\n+                            PainlessExplainError.class.getMethod(\n+                                    \"getHeaders\",\n+                                    PainlessLookup.class),\n+                            PainlessExplainError.class,", "originalCommit": "a4d61ba2e61783c5e884a3af0c161dcff2e42cf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4MDk3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465880979", "bodyText": "Done", "author": "jdconrad", "createdAt": "2020-08-05T17:15:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2OTM0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b3fd76361e7e1d00df0f0d4070949130845f6271", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\nindex 19dfd79231e..08f46f662fe 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\n\n@@ -422,7 +423,8 @@ public class PainlessUserTreeToIRTreePhase extends DefaultUserTreeToIRTreePhase\n             callSubNode.setLocation(internalLocation);\n             callSubNode.setExpressionType(Map.class);\n             callSubNode.setBox(PainlessExplainError.class);\n-            callSubNode.setMethod(new PainlessMethod(\n+            callSubNode.setMethod(\n+                    new PainlessMethod(\n                             PainlessExplainError.class.getMethod(\n                                     \"getHeaders\",\n                                     PainlessLookup.class),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2OTQyNA==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465269424", "bodyText": "remove indent", "author": "stu-elastic", "createdAt": "2020-08-04T19:10:58Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java", "diffHunk": "@@ -418,11 +474,11 @@ protected static void injectSandboxExceptions(FunctionNode functionNode) {\n                 memberCallNode.setLocation(internalLocation);\n                 memberCallNode.setExpressionType(ScriptException.class);\n                 memberCallNode.setLocalFunction(new LocalFunction(\n-                        \"convertToScriptException\",\n-                        ScriptException.class,\n-                        Arrays.asList(Throwable.class, Map.class),\n-                        true,\n-                        false\n+                                \"convertToScriptException\",\n+                                ScriptException.class,\n+                                Arrays.asList(Throwable.class, Map.class),\n+                                true,", "originalCommit": "a4d61ba2e61783c5e884a3af0c161dcff2e42cf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4MTI3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465881279", "bodyText": "Done", "author": "jdconrad", "createdAt": "2020-08-05T17:16:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2OTQyNA=="}], "type": "inlineReview", "revised_code": {"commit": "b3fd76361e7e1d00df0f0d4070949130845f6271", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\nindex 19dfd79231e..08f46f662fe 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\n\n@@ -473,7 +475,8 @@ public class PainlessUserTreeToIRTreePhase extends DefaultUserTreeToIRTreePhase\n                 memberCallNode = new MemberCallNode();\n                 memberCallNode.setLocation(internalLocation);\n                 memberCallNode.setExpressionType(ScriptException.class);\n-                memberCallNode.setLocalFunction(new LocalFunction(\n+                memberCallNode.setLocalFunction(\n+                        new LocalFunction(\n                                 \"convertToScriptException\",\n                                 ScriptException.class,\n                                 Arrays.asList(Throwable.class, Map.class),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2OTQ3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465269477", "bodyText": "remove indent", "author": "stu-elastic", "createdAt": "2020-08-04T19:11:02Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java", "diffHunk": "@@ -452,13 +508,13 @@ protected static void injectSandboxExceptions(FunctionNode functionNode) {\n                 callSubNode.setExpressionType(Map.class);\n                 callSubNode.setBox(Collections.class);\n                 callSubNode.setMethod(new PainlessMethod(\n-                        Collections.class.getMethod(\"emptyMap\"),\n-                        Collections.class,\n-                        null,\n-                        Collections.emptyList(),\n-                        null,\n-                        null,\n-                        null\n+                                Collections.class.getMethod(\"emptyMap\"),\n+                                Collections.class,\n+                                null,\n+                                Collections.emptyList(),\n+                                null,\n+                                null,\n+                                null", "originalCommit": "a4d61ba2e61783c5e884a3af0c161dcff2e42cf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4NDk5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/60316#discussion_r465884992", "bodyText": "Done", "author": "jdconrad", "createdAt": "2020-08-05T17:22:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2OTQ3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b3fd76361e7e1d00df0f0d4070949130845f6271", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\nindex 19dfd79231e..08f46f662fe 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/PainlessUserTreeToIRTreePhase.java\n\n@@ -507,7 +510,8 @@ public class PainlessUserTreeToIRTreePhase extends DefaultUserTreeToIRTreePhase\n                 callSubNode.setLocation(internalLocation);\n                 callSubNode.setExpressionType(Map.class);\n                 callSubNode.setBox(Collections.class);\n-                callSubNode.setMethod(new PainlessMethod(\n+                callSubNode.setMethod(\n+                        new PainlessMethod(\n                                 Collections.class.getMethod(\"emptyMap\"),\n                                 Collections.class,\n                                 null,\n"}}, {"oid": "3fbd0bcdf699ca71db447a21ea00ce18e8aacbd5", "url": "https://github.com/elastic/elasticsearch/commit/3fbd0bcdf699ca71db447a21ea00ce18e8aacbd5", "message": "Merge branch 'master' into semantic010", "committedDate": "2020-08-05T16:59:29Z", "type": "commit"}, {"oid": "b3fd76361e7e1d00df0f0d4070949130845f6271", "url": "https://github.com/elastic/elasticsearch/commit/b3fd76361e7e1d00df0f0d4070949130845f6271", "message": "response to pr comments", "committedDate": "2020-08-05T17:24:53Z", "type": "commit"}]}