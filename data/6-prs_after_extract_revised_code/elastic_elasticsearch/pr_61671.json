{"pr_number": 61671, "pr_title": "Preserve grok pattern ordering and add sort option", "pr_createdAt": "2020-08-28T11:46:10Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61671", "timeline": [{"oid": "aa6f1861ee22875f6981325514adac699c8b859f", "url": "https://github.com/elastic/elasticsearch/commit/aa6f1861ee22875f6981325514adac699c8b859f", "message": "preserve pattern ordering and add sort option", "committedDate": "2020-08-28T11:36:21Z", "type": "commit"}, {"oid": "26294d9cb34de1dd5772fafb082d5a30407a771f", "url": "https://github.com/elastic/elasticsearch/commit/26294d9cb34de1dd5772fafb082d5a30407a771f", "message": "Merge branch 'master' into 40819_sort_grok_patterns", "committedDate": "2020-08-28T13:09:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI3NTYwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/61671#discussion_r483275605", "bodyText": "Should this be guarded with version check? What will happen if we receive request from older node where there where no sorted field?", "author": "probakowski", "createdAt": "2020-09-03T21:57:26Z", "path": "modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java", "diffHunk": "@@ -55,16 +56,31 @@ private GrokProcessorGetAction() {\n \n     public static class Request extends ActionRequest {\n \n-        public Request() {}\n+        private final boolean sorted;\n+\n+        public Request(boolean sorted) {\n+            this.sorted = sorted;\n+        }\n \n         Request(StreamInput in) throws IOException {\n             super(in);\n+            this.sorted = in.readBoolean();", "originalCommit": "26294d9cb34de1dd5772fafb082d5a30407a771f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6473729f77562215da544b55c11969d5fc643b8", "chunk": "diff --git a/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java\nindex 437b1969be5..f57189b3523 100644\n--- a/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java\n+++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java\n\n@@ -64,7 +65,7 @@ public class GrokProcessorGetAction extends ActionType<GrokProcessorGetAction.Re\n \n         Request(StreamInput in) throws IOException {\n             super(in);\n-            this.sorted = in.readBoolean();\n+            this.sorted = in.getVersion().onOrAfter(Version.V_8_0_0) ? in.readBoolean() : false;\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI3NjE4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/61671#discussion_r483276183", "bodyText": "We could extract this new TreeMap<>(patterns) to a field to only sort all patterns once as they are constant. We could then skip this method completely.", "author": "probakowski", "createdAt": "2020-09-03T21:58:58Z", "path": "modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java", "diffHunk": "@@ -108,11 +124,15 @@ public TransportAction(TransportService transportService, ActionFilters actionFi\n         @Override\n         protected void doExecute(Task task, Request request, ActionListener<Response> listener) {\n             try {\n-                listener.onResponse(new Response(GROK_PATTERNS));\n+                listener.onResponse(new Response(getGrokPatternsResponse(GROK_PATTERNS, request.sorted())));\n             } catch (Exception e) {\n                 listener.onFailure(e);\n             }\n         }\n+\n+        static Map<String, String> getGrokPatternsResponse(Map<String, String> patterns, boolean sorted) {\n+            return sorted ? new TreeMap<>(patterns) : patterns;", "originalCommit": "26294d9cb34de1dd5772fafb082d5a30407a771f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY4NTc1MA==", "url": "https://github.com/elastic/elasticsearch/pull/61671#discussion_r483685750", "bodyText": "I shuffled around a few things in 9d3a31a to sort the patterns only once while retaining the ability to test the sort option. If you think it's useful, the sorted patterns member could be pulled into a singleton enum or the like for lazy loading. I was on the fence as to whether that would be particularly beneficial.", "author": "danhermann", "createdAt": "2020-09-04T15:21:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI3NjE4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "9d3a31a02b16699572e9ebd5a8bde2ed192f6607", "chunk": "diff --git a/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java\nindex 437b1969be5..cc46254a6c1 100644\n--- a/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java\n+++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java\n\n@@ -116,23 +119,29 @@ public class GrokProcessorGetAction extends ActionType<GrokProcessorGetAction.Re\n \n     public static class TransportAction extends HandledTransportAction<Request, Response> {\n \n+        private final Map<String, String> grokPatterns;\n+        private final Map<String, String> sortedGrokPatterns;\n+\n         @Inject\n         public TransportAction(TransportService transportService, ActionFilters actionFilters) {\n+            this(transportService, actionFilters, GROK_PATTERNS);\n+        }\n+\n+        // visible for testing\n+        TransportAction(TransportService transportService, ActionFilters actionFilters, Map<String, String> grokPatterns) {\n             super(NAME, transportService, actionFilters, Request::new);\n+            this.grokPatterns = grokPatterns;\n+            this.sortedGrokPatterns = new TreeMap<>(this.grokPatterns);\n         }\n \n         @Override\n         protected void doExecute(Task task, Request request, ActionListener<Response> listener) {\n             try {\n-                listener.onResponse(new Response(getGrokPatternsResponse(GROK_PATTERNS, request.sorted())));\n+                listener.onResponse(new Response(request.sorted() ? sortedGrokPatterns : grokPatterns));\n             } catch (Exception e) {\n                 listener.onFailure(e);\n             }\n         }\n-\n-        static Map<String, String> getGrokPatternsResponse(Map<String, String> patterns, boolean sorted) {\n-            return sorted ? new TreeMap<>(patterns) : patterns;\n-        }\n     }\n \n     public static class RestAction extends BaseRestHandler {\n"}}, {"oid": "d6473729f77562215da544b55c11969d5fc643b8", "url": "https://github.com/elastic/elasticsearch/commit/d6473729f77562215da544b55c11969d5fc643b8", "message": "version-aware serialization", "committedDate": "2020-09-04T14:18:16Z", "type": "commit"}, {"oid": "9d3a31a02b16699572e9ebd5a8bde2ed192f6607", "url": "https://github.com/elastic/elasticsearch/commit/9d3a31a02b16699572e9ebd5a8bde2ed192f6607", "message": "sort the patterns only once", "committedDate": "2020-09-04T15:18:34Z", "type": "commit"}, {"oid": "503ebd534c636b08a498e6267aa5f325d666ffcf", "url": "https://github.com/elastic/elasticsearch/commit/503ebd534c636b08a498e6267aa5f325d666ffcf", "message": "Merge branch 'master' into 40819_sort_grok_patterns", "committedDate": "2020-09-04T15:31:36Z", "type": "commit"}]}