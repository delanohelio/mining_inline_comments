{"pr_number": 61533, "pr_title": "Extract distribution archive checks into plugin", "pr_createdAt": "2020-08-25T14:55:13Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61533", "timeline": [{"oid": "9c8d5556d9624c22bdd3f5c7d477ed57420b2185", "url": "https://github.com/elastic/elasticsearch/commit/9c8d5556d9624c22bdd3f5c7d477ed57420b2185", "message": "Extract distribution archive checks into plugin\n\n- Added test coverage\n- Removes build script cluttering\n- Splits archive building and archive checking logic", "committedDate": "2020-08-25T18:25:50Z", "type": "commit"}, {"oid": "e9982b8420f625cc21b1fbb9253030b945ac6f99", "url": "https://github.com/elastic/elasticsearch/commit/e9982b8420f625cc21b1fbb9253030b945ac6f99", "message": "Fix tar handling in tests on linux", "committedDate": "2020-08-25T18:25:50Z", "type": "commit"}, {"oid": "545625c271150f8984f1073949b8c5da9986707d", "url": "https://github.com/elastic/elasticsearch/commit/545625c271150f8984f1073949b8c5da9986707d", "message": "Fix integ-test-zip license check", "committedDate": "2020-08-25T18:25:50Z", "type": "commit"}, {"oid": "eda401191ba3d2e5b5997bcf693e3df13f716b35", "url": "https://github.com/elastic/elasticsearch/commit/eda401191ba3d2e5b5997bcf693e3df13f716b35", "message": "Polishing", "committedDate": "2020-08-25T18:25:51Z", "type": "commit"}, {"oid": "eda401191ba3d2e5b5997bcf693e3df13f716b35", "url": "https://github.com/elastic/elasticsearch/commit/eda401191ba3d2e5b5997bcf693e3df13f716b35", "message": "Polishing", "committedDate": "2020-08-25T18:25:51Z", "type": "forcePushed"}, {"oid": "e719395726f17e050e48e42c3c73e94d01b3bac9", "url": "https://github.com/elastic/elasticsearch/commit/e719395726f17e050e48e42c3c73e94d01b3bac9", "message": "Remove log4c from expected ml licenses", "committedDate": "2020-08-25T19:20:16Z", "type": "commit"}, {"oid": "669795f481bccbfe2ed61e58725b13ec8a61d0ab", "url": "https://github.com/elastic/elasticsearch/commit/669795f481bccbfe2ed61e58725b13ec8a61d0ab", "message": "Allow configuring expected ML licenses\n\n- only rely on boost for now (tbd)", "committedDate": "2020-08-25T19:56:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNDQ3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r476704479", "bodyText": "This is actually a change in behaviour from master as discussed here: https://elastic.slack.com/archives/C8UUBNASY/p1598283630030100", "author": "breskeby", "createdAt": "2020-08-25T20:02:15Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java", "diffHunk": "@@ -0,0 +1,311 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal;\n+\n+import org.elasticsearch.gradle.LoggedExec;\n+import org.elasticsearch.gradle.VersionProperties;\n+import org.gradle.api.Action;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.plugins.BasePlugin;\n+import org.gradle.api.specs.Spec;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.stream.Collectors;\n+\n+public class InternalDistributionArchiveCheckPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        project.getPlugins().apply(BasePlugin.class);\n+        String buildTaskName = calculateBuildTask(project.getName());\n+        Task buildDistTask = project.getParent().getTasks().getByName(buildTaskName);\n+        DistributionArchiveCheckExtension distributionArchiveCheckExtension = project.getExtensions()\n+            .create(\"distributionArchiveCheck\", DistributionArchiveCheckExtension.class);\n+\n+        File archiveExtractionDir = calculateArchiveExtractionDir(project);\n+        Spec<Task> toolAvailableSpec = task -> toolExists(project);\n+\n+        // sanity checks if archives can be extracted\n+        TaskProvider<LoggedExec> checkExtraction = registerCheckExtractionTask(\n+            project,\n+            buildDistTask,\n+            archiveExtractionDir,\n+            toolAvailableSpec\n+        );\n+        TaskProvider<Task> checkLicense = registerCheckLicenseTask(\n+            project,\n+            buildDistTask,\n+            archiveExtractionDir,\n+            toolAvailableSpec,\n+            checkExtraction\n+        );\n+\n+        TaskProvider<Task> checkNotice = registerCheckNoticeTask(\n+            project,\n+            buildDistTask,\n+            archiveExtractionDir,\n+            toolAvailableSpec,\n+            checkExtraction\n+        );\n+        TaskProvider<Task> checkTask = project.getTasks().named(\"check\");\n+        checkTask.configure(task -> {\n+            task.dependsOn(checkExtraction);\n+            task.dependsOn(checkLicense);\n+            task.dependsOn(checkNotice);\n+        });\n+\n+        if (project.getName().contains(\"zip\") || project.getName().contains(\"tar\")) {", "originalCommit": "669795f481bccbfe2ed61e58725b13ec8a61d0ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9d27db068ece24874ac3d46101f68b17e7ea7bd2", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java\nindex 6abf3105402..00dad1cde6a 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java\n\n@@ -103,7 +103,7 @@ public class InternalDistributionArchiveCheckPlugin implements Plugin<Project> {\n         if (project.getName().contains(\"tar\")) {\n             return new File(project.getBuildDir(), \"tar-extracted\");\n         }\n-        if (!project.getName().contains(\"zip\")) {\n+        if (project.getName().contains(\"zip\") == false) {\n             throw new GradleException(\"Expecting project name containing 'zip' or 'tar'.\");\n         }\n         return new File(project.getBuildDir(), \"zip-extracted\");\n"}}, {"oid": "9d27db068ece24874ac3d46101f68b17e7ea7bd2", "url": "https://github.com/elastic/elasticsearch/commit/9d27db068ece24874ac3d46101f68b17e7ea7bd2", "message": "Polishing", "committedDate": "2020-08-25T20:04:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc4OTY2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r476789667", "bodyText": "Can we not use a TaskProvider here?", "author": "mark-vieira", "createdAt": "2020-08-25T22:13:58Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java", "diffHunk": "@@ -0,0 +1,311 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal;\n+\n+import org.elasticsearch.gradle.LoggedExec;\n+import org.elasticsearch.gradle.VersionProperties;\n+import org.gradle.api.Action;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.plugins.BasePlugin;\n+import org.gradle.api.specs.Spec;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.stream.Collectors;\n+\n+public class InternalDistributionArchiveCheckPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        project.getPlugins().apply(BasePlugin.class);\n+        String buildTaskName = calculateBuildTask(project.getName());\n+        Task buildDistTask = project.getParent().getTasks().getByName(buildTaskName);", "originalCommit": "9d27db068ece24874ac3d46101f68b17e7ea7bd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA4NzQzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r477087435", "bodyText": "fixed", "author": "breskeby", "createdAt": "2020-08-26T07:22:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc4OTY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e6f87afec08074f6e21b373b3a72f8be18fa1b52", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java\nindex 00dad1cde6a..fa643df50e1 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java\n\n@@ -19,24 +19,22 @@\n \n package org.elasticsearch.gradle.internal;\n \n-import org.elasticsearch.gradle.LoggedExec;\n import org.elasticsearch.gradle.VersionProperties;\n import org.gradle.api.Action;\n import org.gradle.api.GradleException;\n import org.gradle.api.Plugin;\n import org.gradle.api.Project;\n import org.gradle.api.Task;\n+import org.gradle.api.file.ArchiveOperations;\n import org.gradle.api.plugins.BasePlugin;\n-import org.gradle.api.specs.Spec;\n+import org.gradle.api.tasks.Copy;\n import org.gradle.api.tasks.TaskProvider;\n \n+import javax.inject.Inject;\n import java.io.File;\n import java.io.IOException;\n-import java.nio.file.FileVisitResult;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-import java.nio.file.SimpleFileVisitor;\n-import java.nio.file.attribute.BasicFileAttributes;\n import java.util.Arrays;\n import java.util.List;\n import java.util.concurrent.Callable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc5MTYxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r476791619", "bodyText": "How much effort would it be to rework these implementations to not depend on the CLI tools and instead use Gradle provided archive operation APIs? As it if essentially if our logic to find tar or zip on the classpath breaks, we'd just start silently skipping these checks.", "author": "mark-vieira", "createdAt": "2020-08-25T22:16:33Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java", "diffHunk": "@@ -0,0 +1,311 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.internal;\n+\n+import org.elasticsearch.gradle.LoggedExec;\n+import org.elasticsearch.gradle.VersionProperties;\n+import org.gradle.api.Action;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+import org.gradle.api.plugins.BasePlugin;\n+import org.gradle.api.specs.Spec;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.stream.Collectors;\n+\n+public class InternalDistributionArchiveCheckPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        project.getPlugins().apply(BasePlugin.class);\n+        String buildTaskName = calculateBuildTask(project.getName());\n+        Task buildDistTask = project.getParent().getTasks().getByName(buildTaskName);\n+        DistributionArchiveCheckExtension distributionArchiveCheckExtension = project.getExtensions()\n+            .create(\"distributionArchiveCheck\", DistributionArchiveCheckExtension.class);\n+\n+        File archiveExtractionDir = calculateArchiveExtractionDir(project);\n+        Spec<Task> toolAvailableSpec = task -> toolExists(project);", "originalCommit": "9d27db068ece24874ac3d46101f68b17e7ea7bd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA4NzYwMw==", "url": "https://github.com/elastic/elasticsearch/pull/61533#discussion_r477087603", "bodyText": "wasn't too much effort and made the plugin way simpler. \ud83d\udc4d", "author": "breskeby", "createdAt": "2020-08-26T07:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc5MTYxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e6f87afec08074f6e21b373b3a72f8be18fa1b52", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java\nindex 00dad1cde6a..fa643df50e1 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/internal/InternalDistributionArchiveCheckPlugin.java\n\n@@ -19,24 +19,22 @@\n \n package org.elasticsearch.gradle.internal;\n \n-import org.elasticsearch.gradle.LoggedExec;\n import org.elasticsearch.gradle.VersionProperties;\n import org.gradle.api.Action;\n import org.gradle.api.GradleException;\n import org.gradle.api.Plugin;\n import org.gradle.api.Project;\n import org.gradle.api.Task;\n+import org.gradle.api.file.ArchiveOperations;\n import org.gradle.api.plugins.BasePlugin;\n-import org.gradle.api.specs.Spec;\n+import org.gradle.api.tasks.Copy;\n import org.gradle.api.tasks.TaskProvider;\n \n+import javax.inject.Inject;\n import java.io.File;\n import java.io.IOException;\n-import java.nio.file.FileVisitResult;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-import java.nio.file.SimpleFileVisitor;\n-import java.nio.file.attribute.BasicFileAttributes;\n import java.util.Arrays;\n import java.util.List;\n import java.util.concurrent.Callable;\n"}}, {"oid": "e6f87afec08074f6e21b373b3a72f8be18fa1b52", "url": "https://github.com/elastic/elasticsearch/commit/e6f87afec08074f6e21b373b3a72f8be18fa1b52", "message": "Use Gradle build-in untar and unzip support", "committedDate": "2020-08-26T06:34:36Z", "type": "commit"}]}