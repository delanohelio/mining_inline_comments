{"pr_number": 64403, "pr_title": "Change finalization of elasticsearch distribution", "pr_createdAt": "2020-10-30T10:53:04Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64403", "timeline": [{"oid": "d8f5f87b05b14b0d11f1e24c273dc826391d564f", "url": "https://github.com/elastic/elasticsearch/commit/d8f5f87b05b14b0d11f1e24c273dc826391d564f", "message": "Fix multi node integ tests", "committedDate": "2020-10-30T13:01:09Z", "type": "forcePushed"}, {"oid": "08cb078ab98a61b9b8d4b265a616d17b8ce06e59", "url": "https://github.com/elastic/elasticsearch/commit/08cb078ab98a61b9b8d4b265a616d17b8ce06e59", "message": "Minor polishing and cleanup", "committedDate": "2020-11-02T09:36:45Z", "type": "forcePushed"}, {"oid": "b7675dc5caa69206915ea4da035cce3bfdc97f09", "url": "https://github.com/elastic/elasticsearch/commit/b7675dc5caa69206915ea4da035cce3bfdc97f09", "message": "Fix ElasticsearchDistribution#getFilepath", "committedDate": "2020-11-03T07:40:41Z", "type": "forcePushed"}, {"oid": "1f1b370280d6d1bf0d69063b02c1d1da2a78ca9a", "url": "https://github.com/elastic/elasticsearch/commit/1f1b370280d6d1bf0d69063b02c1d1da2a78ca9a", "message": "Fix ElasticsearchDistribution#getFilepath", "committedDate": "2020-11-04T13:16:37Z", "type": "forcePushed"}, {"oid": "999d39c4a369089012433a913d02b793425a8910", "url": "https://github.com/elastic/elasticsearch/commit/999d39c4a369089012433a913d02b793425a8910", "message": "Change finalization of elasticsearch distribution\n\n- avoid to rely on afterEvaluate lifecycle hook\n- allows us to define test cluster only in the task creation which can be later than afterevaluate", "committedDate": "2020-11-05T16:06:50Z", "type": "forcePushed"}, {"oid": "d821451e6553473422fc2e258848e4c55aa7fbc1", "url": "https://github.com/elastic/elasticsearch/commit/d821451e6553473422fc2e258848e4c55aa7fbc1", "message": "Minor polishing", "committedDate": "2020-11-09T09:54:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0OTEwNw==", "url": "https://github.com/elastic/elasticsearch/pull/64403#discussion_r520149107", "bodyText": "This doesn't seem right. In both scenarios we return what is effectively an empty set of dependencies. If docker is available, or we don't consider this to be optional, we should return the configuration's build dependencies.", "author": "mark-vieira", "createdAt": "2020-11-09T22:02:51Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java", "diffHunk": "@@ -217,22 +238,36 @@ public Configuration getExtracted() {\n \n     @Override\n     public TaskDependency getBuildDependencies() {\n-        // For non-required Docker distributions, skip building the distribution is Docker is unavailable\n-        if (isDocker() && getFailIfUnavailable() == false && dockerSupport.get().getDockerAvailability().isAvailable == false) {\n-            return task -> Collections.emptySet();\n-        }\n+        Optional<TaskDependency> dockerBuildDependencies = dockerBuildDependencies();\n+        return dockerBuildDependencies.orElseGet(() -> {\n+            maybeFreeze();\n+            return getType().shouldExtract() ? extracted.getBuildDependencies() : configuration.getBuildDependencies();\n+        });\n+    }\n \n-        return configuration.getBuildDependencies();\n+    public TaskDependency getArchiveBuildDependencies() {\n+        Optional<TaskDependency> dockerBuildDependencies = dockerBuildDependencies();\n+        return dockerBuildDependencies.orElseGet(() -> {\n+            maybeFreeze();\n+            return configuration.getBuildDependencies();\n+        });\n+    }\n+\n+    private Optional<TaskDependency> dockerBuildDependencies() {\n+        // For non-required Docker distributions, skip building the distribution is Docker is unavailable\n+        return (isDocker() && getFailIfUnavailable() == false && dockerSupport.get().getDockerAvailability().isAvailable == false)", "originalCommit": "d821451e6553473422fc2e258848e4c55aa7fbc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ1ODYyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64403#discussion_r520458625", "bodyText": "reworked this", "author": "breskeby", "createdAt": "2020-11-10T10:35:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE0OTEwNw=="}], "type": "inlineReview", "revised_code": {"commit": "78e5faba5aac797195de63518dc5f17243640ba2", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java\nindex 840d6cf6af4..b1206db8a23 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java\n\n@@ -238,31 +237,25 @@ public class ElasticsearchDistribution implements Buildable, Iterable<File> {\n \n     @Override\n     public TaskDependency getBuildDependencies() {\n-        Optional<TaskDependency> dockerBuildDependencies = dockerBuildDependencies();\n-        return dockerBuildDependencies.orElseGet(() -> {\n-            maybeFreeze();\n-            return getType().shouldExtract() ? extracted.getBuildDependencies() : configuration.getBuildDependencies();\n-        });\n+        // For non-required Docker distributions, skip building the distribution is Docker is unavailable\n+        if (isDocker() && getFailIfUnavailable() == false && dockerSupport.get().getDockerAvailability().isAvailable == false) {\n+            return task -> Collections.emptySet();\n+        }\n+        maybeFreeze();\n+        return getType().shouldExtract() ? extracted.getBuildDependencies() : configuration.getBuildDependencies();\n     }\n \n     public TaskDependency getArchiveBuildDependencies() {\n-        Optional<TaskDependency> dockerBuildDependencies = dockerBuildDependencies();\n-        return dockerBuildDependencies.orElseGet(() -> {\n-            maybeFreeze();\n-            return configuration.getBuildDependencies();\n-        });\n-    }\n-\n-    private Optional<TaskDependency> dockerBuildDependencies() {\n         // For non-required Docker distributions, skip building the distribution is Docker is unavailable\n-        return (isDocker() && getFailIfUnavailable() == false && dockerSupport.get().getDockerAvailability().isAvailable == false)\n-            ? Optional.of(task -> Collections.emptySet())\n-            : Optional.empty();\n+        if (isDocker() && getFailIfUnavailable() == false && dockerSupport.get().getDockerAvailability().isAvailable == false) {\n+            return task -> Collections.emptySet();\n+        }\n+        maybeFreeze();\n+        return configuration.getBuildDependencies();\n     }\n \n     @Override\n     public Iterator<File> iterator() {\n-        maybeFreeze();\n         return getType().shouldExtract() ? extracted.iterator() : configuration.iterator();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MDA3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64403#discussion_r520150073", "bodyText": "I don't think either of these methods should be public. If I need to wire up dependencies I should depend on either the Distribution itself or getExtracted depending on what I'm using and then just rely on implicit dependencies.", "author": "mark-vieira", "createdAt": "2020-11-09T22:04:51Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java", "diffHunk": "@@ -217,22 +238,36 @@ public Configuration getExtracted() {\n \n     @Override\n     public TaskDependency getBuildDependencies() {", "originalCommit": "d821451e6553473422fc2e258848e4c55aa7fbc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MjQ5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64403#discussion_r520482491", "bodyText": "getBuildDependencies is required as ElasticsearchDistribution is implementing Buildable, so we cannot remove this without major rework. While working on this I noticed that ElasticsearchDistribution does a little bit too much at the moment and in one point we might want to split this up a bit one day", "author": "breskeby", "createdAt": "2020-11-10T11:13:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MDA3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "78e5faba5aac797195de63518dc5f17243640ba2", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java\nindex 840d6cf6af4..b1206db8a23 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java\n\n@@ -238,31 +237,25 @@ public class ElasticsearchDistribution implements Buildable, Iterable<File> {\n \n     @Override\n     public TaskDependency getBuildDependencies() {\n-        Optional<TaskDependency> dockerBuildDependencies = dockerBuildDependencies();\n-        return dockerBuildDependencies.orElseGet(() -> {\n-            maybeFreeze();\n-            return getType().shouldExtract() ? extracted.getBuildDependencies() : configuration.getBuildDependencies();\n-        });\n+        // For non-required Docker distributions, skip building the distribution is Docker is unavailable\n+        if (isDocker() && getFailIfUnavailable() == false && dockerSupport.get().getDockerAvailability().isAvailable == false) {\n+            return task -> Collections.emptySet();\n+        }\n+        maybeFreeze();\n+        return getType().shouldExtract() ? extracted.getBuildDependencies() : configuration.getBuildDependencies();\n     }\n \n     public TaskDependency getArchiveBuildDependencies() {\n-        Optional<TaskDependency> dockerBuildDependencies = dockerBuildDependencies();\n-        return dockerBuildDependencies.orElseGet(() -> {\n-            maybeFreeze();\n-            return configuration.getBuildDependencies();\n-        });\n-    }\n-\n-    private Optional<TaskDependency> dockerBuildDependencies() {\n         // For non-required Docker distributions, skip building the distribution is Docker is unavailable\n-        return (isDocker() && getFailIfUnavailable() == false && dockerSupport.get().getDockerAvailability().isAvailable == false)\n-            ? Optional.of(task -> Collections.emptySet())\n-            : Optional.empty();\n+        if (isDocker() && getFailIfUnavailable() == false && dockerSupport.get().getDockerAvailability().isAvailable == false) {\n+            return task -> Collections.emptySet();\n+        }\n+        maybeFreeze();\n+        return configuration.getBuildDependencies();\n     }\n \n     @Override\n     public Iterator<File> iterator() {\n-        maybeFreeze();\n         return getType().shouldExtract() ? extracted.iterator() : configuration.iterator();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MDkwMg==", "url": "https://github.com/elastic/elasticsearch/pull/64403#discussion_r520150902", "bodyText": "Couldn't this just be Action<Distribution>? I don't see where we ever actually use the returned result of this function.", "author": "mark-vieira", "createdAt": "2020-11-09T22:06:30Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java", "diffHunk": "@@ -103,13 +105,16 @@ public String toString() {\n     private final Property<Boolean> bundledJdk;\n     private final Property<Boolean> failIfUnavailable;\n     private final Configuration extracted;\n+    private Function<ElasticsearchDistribution, ElasticsearchDistribution> distributionFinalizer;", "originalCommit": "d821451e6553473422fc2e258848e4c55aa7fbc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ0ODExNA==", "url": "https://github.com/elastic/elasticsearch/pull/64403#discussion_r520448114", "bodyText": "fixed", "author": "breskeby", "createdAt": "2020-11-10T10:19:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MDkwMg=="}], "type": "inlineReview", "revised_code": {"commit": "bb199cfe43f92d3b7e528af76af615d8cf7ede15", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java\nindex 840d6cf6af4..78cc799e15a 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/ElasticsearchDistribution.java\n\n@@ -105,7 +104,7 @@ public class ElasticsearchDistribution implements Buildable, Iterable<File> {\n     private final Property<Boolean> bundledJdk;\n     private final Property<Boolean> failIfUnavailable;\n     private final Configuration extracted;\n-    private Function<ElasticsearchDistribution, ElasticsearchDistribution> distributionFinalizer;\n+    private Action<ElasticsearchDistribution> distributionFinalizer;\n     private boolean froozen = false;\n \n     ElasticsearchDistribution(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MjI1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64403#discussion_r520152257", "bodyText": "Looking at this more, now that we make the default behavior to return the extracted archive, perhaps instead of exposing a getExtracted() method on ElasticsearchDistribution we should replace that with getArchive()?", "author": "mark-vieira", "createdAt": "2020-11-09T22:09:17Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java", "diffHunk": "@@ -113,7 +113,8 @@ public void apply(Project project) {\n         for (ElasticsearchDistribution distribution : testDistributions) {\n             String taskname = destructiveDistroTestTaskName(distribution);\n             TaskProvider<?> depsTask = project.getTasks().register(taskname + \"#deps\");\n-            depsTask.configure(t -> t.dependsOn(distribution, examplePlugin, quotaAwareFsPlugin));\n+            // explicitly depend on the archive not on the implicit extracted distribution\n+            depsTask.configure(t -> t.dependsOn(distribution.getArchiveBuildDependencies(), examplePlugin, quotaAwareFsPlugin));", "originalCommit": "d821451e6553473422fc2e258848e4c55aa7fbc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ0NDQyMg==", "url": "https://github.com/elastic/elasticsearch/pull/64403#discussion_r520444422", "bodyText": "having getArchive() sounds like a good idea. We still use getExtracted to have access to the files in ElasticsearchNode. We can probably rework that at one point, but I would not wanna do it as part of this PR and not broaden the focus of this PR", "author": "breskeby", "createdAt": "2020-11-10T10:14:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MjI1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "bb199cfe43f92d3b7e528af76af615d8cf7ede15", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java b/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java\nindex 046ca6af70b..9ced7047a77 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/test/DistroTestPlugin.java\n\n@@ -114,7 +114,7 @@ public class DistroTestPlugin implements Plugin<Project> {\n             String taskname = destructiveDistroTestTaskName(distribution);\n             TaskProvider<?> depsTask = project.getTasks().register(taskname + \"#deps\");\n             // explicitly depend on the archive not on the implicit extracted distribution\n-            depsTask.configure(t -> t.dependsOn(distribution.getArchiveBuildDependencies(), examplePlugin, quotaAwareFsPlugin));\n+            depsTask.configure(t -> t.dependsOn(distribution.getArchive(), examplePlugin, quotaAwareFsPlugin));\n             depsTasks.put(taskname, depsTask);\n             TaskProvider<Test> destructiveTask = configureTestTask(project, taskname, distribution, t -> {\n                 t.onlyIf(t2 -> distribution.isDocker() == false || dockerSupport.get().getDockerAvailability().isAvailable);\n"}}, {"oid": "78e5faba5aac797195de63518dc5f17243640ba2", "url": "https://github.com/elastic/elasticsearch/commit/78e5faba5aac797195de63518dc5f17243640ba2", "message": "Change finalization of elasticsearch distribution\n\n- avoid to rely on afterEvaluate lifecycle hook\n- allows us to define test cluster only in the task creation which can be later than afterevaluate", "committedDate": "2020-11-10T18:24:01Z", "type": "commit"}, {"oid": "60b4e0de96dc70b645464fa1550b4fc3fea7a0c3", "url": "https://github.com/elastic/elasticsearch/commit/60b4e0de96dc70b645464fa1550b4fc3fea7a0c3", "message": "Minor polishing", "committedDate": "2020-11-10T18:24:01Z", "type": "commit"}, {"oid": "bb199cfe43f92d3b7e528af76af615d8cf7ede15", "url": "https://github.com/elastic/elasticsearch/commit/bb199cfe43f92d3b7e528af76af615d8cf7ede15", "message": "Address review feedback", "committedDate": "2020-11-10T18:24:02Z", "type": "commit"}, {"oid": "bb199cfe43f92d3b7e528af76af615d8cf7ede15", "url": "https://github.com/elastic/elasticsearch/commit/bb199cfe43f92d3b7e528af76af615d8cf7ede15", "message": "Address review feedback", "committedDate": "2020-11-10T18:24:02Z", "type": "forcePushed"}]}