{"pr_number": 53651, "pr_title": "License Checks for IDP", "pr_createdAt": "2020-03-17T08:50:09Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53651", "timeline": [{"oid": "4205f1f34028a5a0674b3e35312116f716c4fed8", "url": "https://github.com/elastic/elasticsearch/commit/4205f1f34028a5a0674b3e35312116f716c4fed8", "message": "License Checks for IDP\n\nIdp related functionality should only be available for enterprise\nlicenses.", "committedDate": "2020-03-17T08:22:27Z", "type": "commit"}, {"oid": "f8b132654ea9a91ff8ba960207500c835fe4fc71", "url": "https://github.com/elastic/elasticsearch/commit/f8b132654ea9a91ff8ba960207500c835fe4fc71", "message": "Merge branch 'feature-internal-idp' into idp-license-check", "committedDate": "2020-03-17T08:23:49Z", "type": "commit"}, {"oid": "387ce557d4a2b03180a5e5dc3b4c53829cf9aa50", "url": "https://github.com/elastic/elasticsearch/commit/387ce557d4a2b03180a5e5dc3b4c53829cf9aa50", "message": "checkstyle", "committedDate": "2020-03-17T08:48:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY1NTQ0MA==", "url": "https://github.com/elastic/elasticsearch/pull/53651#discussion_r393655440", "bodyText": "MISSING is here twice.\nThe other option, rather than explicitly listing non-enterprise modes is to use randomValueOtherThanMany like:\nLicense.OperationMode mode = randomValueOtherThanMany( m -> m == License.OperationMode.ENTERPRISE || m == License.OperationMode.TRIAL, () -> randomFrom(License.OperationMode.values()) )", "author": "tvernum", "createdAt": "2020-03-17T12:52:12Z", "path": "x-pack/plugin/identity-provider/src/test/java/org/elasticsearch/xpack/idp/saml/rest/action/IdpBaseRestHandlerTests.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.idp.saml.rest.action;\n+\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.license.License;\n+import org.elasticsearch.license.TestUtils;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+\n+public class IdpBaseRestHandlerTests extends ESTestCase {\n+\n+    public void testIdpAvailableOnTrialOrEnterprise() {\n+        final IdpBaseRestHandler handler = buildHandler(randomFrom(License.OperationMode.ENTERPRISE, License.OperationMode.TRIAL));\n+        assertThat(handler.isIdpFeatureAllowed(), equalTo(true));\n+    }\n+\n+    public void testIdpNotAvailableOnOtherLicenses() {\n+        final IdpBaseRestHandler handler = buildHandler(randomFrom(\n+            License.OperationMode.BASIC, License.OperationMode.GOLD, License.OperationMode.MISSING, License.OperationMode.MISSING,", "originalCommit": "387ce557d4a2b03180a5e5dc3b4c53829cf9aa50", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "387d00d7c816ffa0a3060f44878c2c2b76a3d8ad", "chunk": "diff --git a/x-pack/plugin/identity-provider/src/test/java/org/elasticsearch/xpack/idp/saml/rest/action/IdpBaseRestHandlerTests.java b/x-pack/plugin/identity-provider/src/test/java/org/elasticsearch/xpack/idp/saml/rest/action/IdpBaseRestHandlerTests.java\nindex 61600281f0c..e820406e62b 100644\n--- a/x-pack/plugin/identity-provider/src/test/java/org/elasticsearch/xpack/idp/saml/rest/action/IdpBaseRestHandlerTests.java\n+++ b/x-pack/plugin/identity-provider/src/test/java/org/elasticsearch/xpack/idp/saml/rest/action/IdpBaseRestHandlerTests.java\n\n@@ -25,9 +25,10 @@ public class IdpBaseRestHandlerTests extends ESTestCase {\n     }\n \n     public void testIdpNotAvailableOnOtherLicenses() {\n-        final IdpBaseRestHandler handler = buildHandler(randomFrom(\n-            License.OperationMode.BASIC, License.OperationMode.GOLD, License.OperationMode.MISSING, License.OperationMode.MISSING,\n-            License.OperationMode.PLATINUM, License.OperationMode.STANDARD));\n+        License.OperationMode mode =\n+            randomValueOtherThanMany(m -> m == License.OperationMode.ENTERPRISE || m == License.OperationMode.TRIAL,\n+                () -> randomFrom(License.OperationMode.values()));\n+        final IdpBaseRestHandler handler = buildHandler(mode);\n         assertThat(handler.isIdpFeatureAllowed(), equalTo(false));\n     }\n \n"}}, {"oid": "387d00d7c816ffa0a3060f44878c2c2b76a3d8ad", "url": "https://github.com/elastic/elasticsearch/commit/387d00d7c816ffa0a3060f44878c2c2b76a3d8ad", "message": "address feedback", "committedDate": "2020-03-18T06:29:46Z", "type": "commit"}, {"oid": "1db61c3fcbfc23cc1a26fce2abf3efb66d8fdd2f", "url": "https://github.com/elastic/elasticsearch/commit/1db61c3fcbfc23cc1a26fce2abf3efb66d8fdd2f", "message": "Merge branch 'feature-internal-idp' into idp-license-check", "committedDate": "2020-03-18T06:49:48Z", "type": "commit"}, {"oid": "35485363247b6f3eb48fcc4b785e86f3c4e57477", "url": "https://github.com/elastic/elasticsearch/commit/35485363247b6f3eb48fcc4b785e86f3c4e57477", "message": "Repeat after me: I will never skip running precommit", "committedDate": "2020-03-18T07:41:22Z", "type": "commit"}]}