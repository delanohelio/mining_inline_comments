{"pr_number": 66684, "pr_title": "Phase 2 support for operator privileges: Cluster settings", "pr_createdAt": "2020-12-21T10:45:15Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66684", "timeline": [{"oid": "6b8d31771c2532c50024e6f1f4158603e1401826", "url": "https://github.com/elastic/elasticsearch/commit/6b8d31771c2532c50024e6f1f4158603e1401826", "message": "wip", "committedDate": "2020-12-21T06:24:00Z", "type": "commit"}, {"oid": "6b104bd72d5ef20c5cab118adae17457857ae3b7", "url": "https://github.com/elastic/elasticsearch/commit/6b104bd72d5ef20c5cab118adae17457857ae3b7", "message": "Skip operator settings in restore when user is not operator", "committedDate": "2020-12-21T10:08:57Z", "type": "commit"}, {"oid": "5f18f660bb1afdcb36089b4907c578f26b4d28fe", "url": "https://github.com/elastic/elasticsearch/commit/5f18f660bb1afdcb36089b4907c578f26b4d28fe", "message": "tweak", "committedDate": "2020-12-21T10:28:46Z", "type": "commit"}, {"oid": "e0a20b731be4b1a0917d757c650d2c326b8d8bad", "url": "https://github.com/elastic/elasticsearch/commit/e0a20b731be4b1a0917d757c650d2c326b8d8bad", "message": "Merge remote-tracking branch 'origin/master' into operator-privileges-phase-two-settings", "committedDate": "2020-12-22T00:02:56Z", "type": "commit"}, {"oid": "50f63df9d82f5bfcabddf3e75c3a92b51efe3259", "url": "https://github.com/elastic/elasticsearch/commit/50f63df9d82f5bfcabddf3e75c3a92b51efe3259", "message": "Merge remote-tracking branch 'origin/master' into operator-privileges-phase-two-settings", "committedDate": "2020-12-22T09:55:49Z", "type": "commit"}, {"oid": "2933b6885c649cc4bc7a115bca279b106d3965d9", "url": "https://github.com/elastic/elasticsearch/commit/2933b6885c649cc4bc7a115bca279b106d3965d9", "message": "Add ml settings for operator only", "committedDate": "2020-12-22T10:11:24Z", "type": "commit"}, {"oid": "f1ffe0c7b120312b52437d7d438ea755e085bf9a", "url": "https://github.com/elastic/elasticsearch/commit/f1ffe0c7b120312b52437d7d438ea755e085bf9a", "message": "Merge remote-tracking branch 'origin/master' into operator-privileges-phase-two-settings", "committedDate": "2021-01-28T11:18:47Z", "type": "commit"}, {"oid": "0f225e012f73b67f7436c29fb66586c25783d0cb", "url": "https://github.com/elastic/elasticsearch/commit/0f225e012f73b67f7436c29fb66586c25783d0cb", "message": "Update according to discussion email", "committedDate": "2021-01-28T11:39:04Z", "type": "commit"}, {"oid": "57f518c3ba88bc32caa4ec095895e0acf3f0e386", "url": "https://github.com/elastic/elasticsearch/commit/57f518c3ba88bc32caa4ec095895e0acf3f0e386", "message": "tweak", "committedDate": "2021-01-28T22:59:36Z", "type": "commit"}, {"oid": "924d505de89fec8780ef428469928fada61a0962", "url": "https://github.com/elastic/elasticsearch/commit/924d505de89fec8780ef428469928fada61a0962", "message": "Merge remote-tracking branch 'origin/master' into operator-privileges-phase-two-settings", "committedDate": "2021-01-28T23:33:51Z", "type": "commit"}, {"oid": "80504794c19102a98006cd51c4d1e4734ecec78a", "url": "https://github.com/elastic/elasticsearch/commit/80504794c19102a98006cd51c4d1e4734ecec78a", "message": "add tests", "committedDate": "2021-02-01T06:02:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzU4Mjc1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r567582751", "bodyText": "The code always sets the value of skipOperatorOnly because:\n\nSimilar to other authorization decision, the value is computed and local to every node\nThe value is always set properly so that a transport client cannot override this field (it is not exposed to Rest)", "author": "ywangd", "createdAt": "2021-02-01T06:07:00Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java", "diffHunk": "@@ -78,6 +84,12 @@ public ElasticsearchSecurityException check(String action, TransportRequest requ\n             return null;\n         }\n \n+        public void maybeInterceptRequest(ThreadContext threadContext, TransportRequest request) {\n+            if (request instanceof RestoreSnapshotRequest) {\n+                ((RestoreSnapshotRequest) request).skipOperatorOnly(shouldProcess());", "originalCommit": "80504794c19102a98006cd51c4d1e4734ecec78a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45b6e4d18ab262afb40bef3889493e2f791d99f3", "chunk": "diff --git a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java\nindex f6376bbec83..bb8967d78c5 100644\n--- a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java\n+++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java\n\n@@ -86,7 +87,7 @@ public class OperatorPrivileges {\n \n         public void maybeInterceptRequest(ThreadContext threadContext, TransportRequest request) {\n             if (request instanceof RestoreSnapshotRequest) {\n-                ((RestoreSnapshotRequest) request).skipOperatorOnly(shouldProcess());\n+                ((RestoreSnapshotRequest) request).skipOperatorOnlyState(shouldProcess());\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzU4MjkzMg==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r567582932", "bodyText": "Similarly, this field is always set even when operator privileges are not enabled to retain the default behaviour. See also above.", "author": "ywangd", "createdAt": "2021-02-01T06:07:35Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java", "diffHunk": "@@ -92,5 +104,12 @@ public void maybeMarkOperatorUser(Authentication authentication, ThreadContext t\n         public ElasticsearchSecurityException check(String action, TransportRequest request, ThreadContext threadContext) {\n             return null;\n         }\n+\n+        @Override\n+        public void maybeInterceptRequest(ThreadContext threadContext, TransportRequest request) {\n+            if (request instanceof RestoreSnapshotRequest) {\n+                ((RestoreSnapshotRequest) request).skipOperatorOnly(false);", "originalCommit": "80504794c19102a98006cd51c4d1e4734ecec78a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45b6e4d18ab262afb40bef3889493e2f791d99f3", "chunk": "diff --git a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java\nindex f6376bbec83..bb8967d78c5 100644\n--- a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java\n+++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/operator/OperatorPrivileges.java\n\n@@ -108,7 +109,7 @@ public class OperatorPrivileges {\n         @Override\n         public void maybeInterceptRequest(ThreadContext threadContext, TransportRequest request) {\n             if (request instanceof RestoreSnapshotRequest) {\n-                ((RestoreSnapshotRequest) request).skipOperatorOnly(false);\n+                ((RestoreSnapshotRequest) request).skipOperatorOnlyState(false);\n             }\n         }\n     };\n"}}, {"oid": "2b9aea91628183a5d072592cd89192539bef4d28", "url": "https://github.com/elastic/elasticsearch/commit/2b9aea91628183a5d072592cd89192539bef4d28", "message": "forbidden api fix", "committedDate": "2021-02-01T06:33:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTE2MjIxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569162215", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean skipOperatorOnly = false; // this field does not get serialised because it is always set locally by authz\n          \n          \n            \n                private boolean skipOperatorOnlyState = false; // this field does not get serialised because it is always set locally by authz\n          \n      \n    \n    \n  \n\nI think adding a suffix is helpful because it makes it clear that the \"only\" refers to operator, not \"skip\".\nBy itself, skipOperatorOnly could mean \"skip operator, but nothing else\" which doesn't make sense if you know what \"operator\" means, but is still a cognitive hurdle.", "author": "tvernum", "createdAt": "2021-02-03T06:33:10Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java", "diffHunk": "@@ -61,6 +61,7 @@\n     private boolean includeAliases = true;\n     private Settings indexSettings = EMPTY_SETTINGS;\n     private String[] ignoreIndexSettings = Strings.EMPTY_ARRAY;\n+    private boolean skipOperatorOnly = false; // this field does not get serialised because it is always set locally by authz", "originalCommit": "2b9aea91628183a5d072592cd89192539bef4d28", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c798074ec4351700ae05b8feac73009687ff12e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java b/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java\nindex 6fe4fcdbfa5..5e10fe9d91b 100644\n--- a/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java\n+++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java\n\n@@ -61,7 +61,7 @@ public class RestoreSnapshotRequest extends MasterNodeRequest<RestoreSnapshotReq\n     private boolean includeAliases = true;\n     private Settings indexSettings = EMPTY_SETTINGS;\n     private String[] ignoreIndexSettings = Strings.EMPTY_ARRAY;\n-    private boolean skipOperatorOnly = false; // this field does not get serialised because it is always set locally by authz\n+    private boolean skipOperatorOnlyState = false; // this field does not get serialised because it is always set locally by authz\n \n     @Nullable // if any snapshot UUID will do\n     private String snapshotUuid;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTE2NDcxMA==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569164710", "bodyText": "What value do we get from combining these into 1 test case? It seems more natural to have 2 separate cases for action and settings.", "author": "tvernum", "createdAt": "2021-02-03T06:39:52Z", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesSingleNodeTests.java", "diffHunk": "@@ -63,20 +67,52 @@ protected Settings nodeSettings() {\n         return builder.build();\n     }\n \n-    public void testOutcomeOfSuperuserPerformingOperatorOnlyActionWillDependOnWhetherFeatureIsEnabled() {\n+    public void testOperatorOnlyActionOrSettingWillNotBeActionableByNormalSuperuser() {", "originalCommit": "2b9aea91628183a5d072592cd89192539bef4d28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTkyNDU1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569924557", "bodyText": "No real value. I split it and also the corresponding one that test the operator user.", "author": "ywangd", "createdAt": "2021-02-04T03:41:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTE2NDcxMA=="}], "type": "inlineReview", "revised_code": {"commit": "0a6ca705f3cfc1f05b1debcb2bbb071da3d9d729", "chunk": "diff --git a/x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesSingleNodeTests.java b/x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesSingleNodeTests.java\nindex 48bb1d4c9c7..657bca47359 100644\n--- a/x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesSingleNodeTests.java\n+++ b/x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesSingleNodeTests.java\n\n@@ -67,13 +68,15 @@ public class OperatorPrivilegesSingleNodeTests extends SecuritySingleNodeTestCas\n         return builder.build();\n     }\n \n-    public void testOperatorOnlyActionOrSettingWillNotBeActionableByNormalSuperuser() {\n-        final Client client = client();\n+    public void testNormalSuperuserWillFailToCallOperatorOnlyAction() {\n         final ClearVotingConfigExclusionsRequest clearVotingConfigExclusionsRequest = new ClearVotingConfigExclusionsRequest();\n-        ElasticsearchSecurityException e = expectThrows(ElasticsearchSecurityException.class,\n-            () -> client.execute(ClearVotingConfigExclusionsAction.INSTANCE, clearVotingConfigExclusionsRequest).actionGet());\n+        final ElasticsearchSecurityException e = expectThrows(\n+            ElasticsearchSecurityException.class,\n+            () -> client().execute(ClearVotingConfigExclusionsAction.INSTANCE, clearVotingConfigExclusionsRequest).actionGet());\n         assertThat(e.getCause().getMessage(), containsString(\"Operator privileges are required for action\"));\n+    }\n \n+    public void testNormalSuperuserWillFailToSetOperatorOnlySettings() {\n         final Settings settings = Settings.builder().put(IPFilter.IP_FILTER_ENABLED_SETTING.getKey(), \"null\").build();\n         final ClusterUpdateSettingsRequest clusterUpdateSettingsRequest = new ClusterUpdateSettingsRequest();\n         if (randomBoolean()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTE2NjM1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569166359", "bodyText": "I wonder whether this should just be isOperatorOnly()\nI think it would read better in OperatorOnlyRegistry.checkClusterUpdateSettings (because that code is really focused on \"is this an operator setting\" rather than \"is this dynamic, but only updateable by operators\")", "author": "tvernum", "createdAt": "2021-02-03T06:44:26Z", "path": "server/src/main/java/org/elasticsearch/common/settings/Setting.java", "diffHunk": "@@ -295,7 +304,14 @@ public final Key getRawKey() {\n      * Returns <code>true</code> if this setting is dynamically updateable, otherwise <code>false</code>\n      */\n     public final boolean isDynamic() {\n-        return properties.contains(Property.Dynamic);\n+        return properties.contains(Property.Dynamic) || properties.contains(Property.OperatorDynamic);\n+    }\n+\n+    /**\n+     * Returns <code>true</code> if this setting is dynamically updateable by operators, otherwise <code>false</code>\n+     */\n+    public final boolean isDynamicOperator() {", "originalCommit": "2b9aea91628183a5d072592cd89192539bef4d28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTkyNjQzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569926435", "bodyText": "It makes senses since operator settings must be dynamic in the first place, though this assumes some understanding of the concept. But overall I agree it reads better in the call sites.", "author": "ywangd", "createdAt": "2021-02-04T03:47:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTE2NjM1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0a6ca705f3cfc1f05b1debcb2bbb071da3d9d729", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/settings/Setting.java b/server/src/main/java/org/elasticsearch/common/settings/Setting.java\nindex 7086e149ff9..af693628102 100644\n--- a/server/src/main/java/org/elasticsearch/common/settings/Setting.java\n+++ b/server/src/main/java/org/elasticsearch/common/settings/Setting.java\n\n@@ -310,7 +299,7 @@ public class Setting<T> implements ToXContentObject {\n     /**\n      * Returns <code>true</code> if this setting is dynamically updateable by operators, otherwise <code>false</code>\n      */\n-    public final boolean isDynamicOperator() {\n+    public final boolean isOperatorOnly() {\n         return properties.contains(Property.OperatorDynamic);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTIzOTg3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569239877", "bodyText": "I did not spot the place where this is needed, perhaps it can be removed or alternatively moved to the specific line?", "author": "henningandersen", "createdAt": "2021-02-03T09:02:56Z", "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -100,4 +102,142 @@ public void testOperatorPrivilegesXpackUsage() throws IOException {\n         assertTrue((boolean) operatorPrivileges.get(\"available\"));\n         assertTrue((boolean) operatorPrivileges.get(\"enabled\"));\n     }\n+\n+    public void testUpdateOperatorSettings() throws IOException {\n+        final Map<String, Object> settings = new HashMap<>(\n+            Map.of(\"xpack.security.http.filter.enabled\", \"false\", \"xpack.security.transport.filter.enabled\", \"false\")\n+        );\n+        final boolean extraSettings = randomBoolean();\n+        if (extraSettings) {\n+            settings.put(\"search.allow_expensive_queries\", false);\n+        }\n+        final ResponseException responseException = expectThrows(ResponseException.class, () -> updateSettings(settings, null));\n+        assertThat(responseException.getResponse().getStatusLine().getStatusCode(), equalTo(403));\n+        assertThat(responseException.getMessage(), containsString(\"is unauthorized for user\"));\n+        assertTrue(getPersistentSettings().isEmpty());\n+\n+        updateSettings(settings, OPERATOR_AUTH_HEADER);\n+\n+        Map<String, Object> persistentSettings = getPersistentSettings();\n+        assertThat(persistentSettings.get(\"xpack.security.http.filter.enabled\"), equalTo(\"false\"));\n+        assertThat(persistentSettings.get(\"xpack.security.transport.filter.enabled\"), equalTo(\"false\"));\n+        if (extraSettings) {\n+            assertThat(persistentSettings.get(\"search.allow_expensive_queries\"), equalTo(\"false\"));\n+        }\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")", "originalCommit": "2b9aea91628183a5d072592cd89192539bef4d28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTkyNzYwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569927601", "bodyText": "Good catch! It is indeed a copy/paste artifact ~~", "author": "ywangd", "createdAt": "2021-02-04T03:51:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTIzOTg3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "cb8e8a26966222a783ec01bd42d61120e84d87c0", "chunk": "diff --git a/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java b/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java\nindex bb9a5be598c..cce019b97ec 100644\n--- a/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java\n+++ b/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java\n\n@@ -126,7 +127,6 @@ public class OperatorPrivilegesIT extends ESRestTestCase {\n         }\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     public void testSnapshotRestoreBehaviourOfOperatorSettings() throws IOException {\n         final String repoName = \"repo\";\n         final String snapshotName = \"snap\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI0MDc3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569240771", "bodyText": "I think we may want the opposite test too - checking that without operator privileges enabled, we do restore properties marked as operator?", "author": "henningandersen", "createdAt": "2021-02-03T09:04:22Z", "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -100,4 +102,142 @@ public void testOperatorPrivilegesXpackUsage() throws IOException {\n         assertTrue((boolean) operatorPrivileges.get(\"available\"));\n         assertTrue((boolean) operatorPrivileges.get(\"enabled\"));\n     }\n+\n+    public void testUpdateOperatorSettings() throws IOException {\n+        final Map<String, Object> settings = new HashMap<>(\n+            Map.of(\"xpack.security.http.filter.enabled\", \"false\", \"xpack.security.transport.filter.enabled\", \"false\")\n+        );\n+        final boolean extraSettings = randomBoolean();\n+        if (extraSettings) {\n+            settings.put(\"search.allow_expensive_queries\", false);\n+        }\n+        final ResponseException responseException = expectThrows(ResponseException.class, () -> updateSettings(settings, null));\n+        assertThat(responseException.getResponse().getStatusLine().getStatusCode(), equalTo(403));\n+        assertThat(responseException.getMessage(), containsString(\"is unauthorized for user\"));\n+        assertTrue(getPersistentSettings().isEmpty());\n+\n+        updateSettings(settings, OPERATOR_AUTH_HEADER);\n+\n+        Map<String, Object> persistentSettings = getPersistentSettings();\n+        assertThat(persistentSettings.get(\"xpack.security.http.filter.enabled\"), equalTo(\"false\"));\n+        assertThat(persistentSettings.get(\"xpack.security.transport.filter.enabled\"), equalTo(\"false\"));\n+        if (extraSettings) {\n+            assertThat(persistentSettings.get(\"search.allow_expensive_queries\"), equalTo(\"false\"));\n+        }\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public void testSnapshotRestoreBehaviourOfOperatorSettings() throws IOException {", "originalCommit": "2b9aea91628183a5d072592cd89192539bef4d28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk1NTk2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569955963", "bodyText": "I thought these would be covered by existing tests already, but I was wrong. The settings are from xpack and most snapshot related tests are in core. I added a new yml test to cover this and PUT _cluster/settings.", "author": "ywangd", "createdAt": "2021-02-04T05:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI0MDc3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "cb8e8a26966222a783ec01bd42d61120e84d87c0", "chunk": "diff --git a/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java b/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java\nindex bb9a5be598c..cce019b97ec 100644\n--- a/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java\n+++ b/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java\n\n@@ -126,7 +127,6 @@ public class OperatorPrivilegesIT extends ESRestTestCase {\n         }\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     public void testSnapshotRestoreBehaviourOfOperatorSettings() throws IOException {\n         final String repoName = \"repo\";\n         final String snapshotName = \"snap\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI0NTc0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569245743", "bodyText": "I think we want a test to validate that we can set operator settings when operator privileges are disabled too. Could also be in the single node test rather than rest test, if easier.", "author": "henningandersen", "createdAt": "2021-02-03T09:11:46Z", "path": "x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java", "diffHunk": "@@ -100,4 +102,142 @@ public void testOperatorPrivilegesXpackUsage() throws IOException {\n         assertTrue((boolean) operatorPrivileges.get(\"available\"));\n         assertTrue((boolean) operatorPrivileges.get(\"enabled\"));\n     }\n+\n+    public void testUpdateOperatorSettings() throws IOException {", "originalCommit": "2b9aea91628183a5d072592cd89192539bef4d28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk1NjEwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569956101", "bodyText": "Added a yml test for it. See also above.", "author": "ywangd", "createdAt": "2021-02-04T05:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI0NTc0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "cb8e8a26966222a783ec01bd42d61120e84d87c0", "chunk": "diff --git a/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java b/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java\nindex bb9a5be598c..cce019b97ec 100644\n--- a/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java\n+++ b/x-pack/plugin/security/qa/operator-privileges-tests/src/javaRestTest/java/org/elasticsearch/xpack/security/operator/OperatorPrivilegesIT.java\n\n@@ -126,7 +127,6 @@ public class OperatorPrivilegesIT extends ESRestTestCase {\n         }\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     public void testSnapshotRestoreBehaviourOfOperatorSettings() throws IOException {\n         final String repoName = \"repo\";\n         final String snapshotName = \"snap\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI2OTc1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569269759", "bodyText": "nit: this is not included in toString, would be nice to add it for debugging purposes.", "author": "henningandersen", "createdAt": "2021-02-03T09:45:57Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java", "diffHunk": "@@ -61,6 +61,7 @@\n     private boolean includeAliases = true;\n     private Settings indexSettings = EMPTY_SETTINGS;\n     private String[] ignoreIndexSettings = Strings.EMPTY_ARRAY;\n+    private boolean skipOperatorOnly = false; // this field does not get serialised because it is always set locally by authz", "originalCommit": "2b9aea91628183a5d072592cd89192539bef4d28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk1MDczMA==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569950730", "bodyText": "The toString method relies on toXContent, which I intentionally left out for this new field. To support toString, I extracted the internals of the toXContent method into a new toXContentFragment method and use it for the string building.", "author": "ywangd", "createdAt": "2021-02-04T05:10:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI2OTc1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8c798074ec4351700ae05b8feac73009687ff12e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java b/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java\nindex 6fe4fcdbfa5..5e10fe9d91b 100644\n--- a/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java\n+++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java\n\n@@ -61,7 +61,7 @@ public class RestoreSnapshotRequest extends MasterNodeRequest<RestoreSnapshotReq\n     private boolean includeAliases = true;\n     private Settings indexSettings = EMPTY_SETTINGS;\n     private String[] ignoreIndexSettings = Strings.EMPTY_ARRAY;\n-    private boolean skipOperatorOnly = false; // this field does not get serialised because it is always set locally by authz\n+    private boolean skipOperatorOnlyState = false; // this field does not get serialised because it is always set locally by authz\n \n     @Nullable // if any snapshot UUID will do\n     private String snapshotUuid;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI4NjU2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569286563", "bodyText": "Hopefully this never causes an issue, but I think this line should go below the modification of the settings below to ensure the updated settings are valid.", "author": "henningandersen", "createdAt": "2021-02-03T10:09:04Z", "path": "server/src/main/java/org/elasticsearch/snapshots/RestoreService.java", "diffHunk": "@@ -443,6 +445,22 @@ public ClusterState execute(ClusterState currentState) {\n                             if (metadata.persistentSettings() != null) {\n                                 Settings settings = metadata.persistentSettings();\n                                 clusterSettings.validateUpdate(settings);", "originalCommit": "2b9aea91628183a5d072592cd89192539bef4d28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk1MTIyOA==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569951228", "bodyText": "A good catch, thanks! It may not cause real issue like you said, nevertheless it is better to be safe.", "author": "ywangd", "createdAt": "2021-02-04T05:12:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI4NjU2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0a6ca705f3cfc1f05b1debcb2bbb071da3d9d729", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/snapshots/RestoreService.java b/server/src/main/java/org/elasticsearch/snapshots/RestoreService.java\nindex 904199fe700..cd99c1207d4 100644\n--- a/server/src/main/java/org/elasticsearch/snapshots/RestoreService.java\n+++ b/server/src/main/java/org/elasticsearch/snapshots/RestoreService.java\n\n@@ -451,7 +436,7 @@ public class RestoreService implements ClusterStateApplier {\n                                         settings.keySet().stream(), currentState.metadata().persistentSettings().keySet().stream())\n                                         .filter(k -> {\n                                             final Setting<?> setting = clusterSettings.get(k);\n-                                            return setting != null && setting.isDynamicOperator();\n+                                            return setting != null && setting.isOperatorOnly();\n                                         })\n                                         .collect(Collectors.toSet());\n                                     if (false == operatorSettingKeys.isEmpty()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI5MzIwMA==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569293200", "bodyText": "I wonder if it was nicer to verify that toXContent gives same result regardless of the skipOperatorOnly flag? I.e., invoke it on two instances with different skipOperatorOnly flag and verify the maps are identical.", "author": "henningandersen", "createdAt": "2021-02-03T10:18:46Z", "path": "server/src/test/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestTests.java", "diffHunk": "@@ -134,4 +135,24 @@ public void testSource() throws IOException {\n \n         assertEquals(original, processed);\n     }\n+\n+    public void testSkipOperatorOnlyWillNotBeSerialised() throws IOException {\n+        RestoreSnapshotRequest original = createTestInstance();\n+        assertFalse(original.skipOperatorOnly()); // default is false\n+        if (randomBoolean()) {\n+            original.skipOperatorOnly(true);\n+        }\n+        // It is not serialised as xcontent\n+        XContentBuilder builder = original.toXContent(XContentFactory.jsonBuilder(), new ToXContent.MapParams(Collections.emptyMap()));\n+        XContentParser parser = XContentType.JSON.xContent().createParser(\n+            NamedXContentRegistry.EMPTY, null, BytesReference.bytes(builder).streamInput());\n+        Map<String, Object> map = parser.mapOrdered();\n+        assertFalse(map.containsKey(\"skip_operator_only\"));", "originalCommit": "2b9aea91628183a5d072592cd89192539bef4d28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk1NTIxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66684#discussion_r569955211", "bodyText": "Added", "author": "ywangd", "createdAt": "2021-02-04T05:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTI5MzIwMA=="}], "type": "inlineReview", "revised_code": {"commit": "45b6e4d18ab262afb40bef3889493e2f791d99f3", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestTests.java b/server/src/test/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestTests.java\nindex 67b89dda1ca..f89ce8d1160 100644\n--- a/server/src/test/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestTests.java\n+++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestTests.java\n\n@@ -138,9 +127,9 @@ public class RestoreSnapshotRequestTests extends AbstractWireSerializingTestCase\n \n     public void testSkipOperatorOnlyWillNotBeSerialised() throws IOException {\n         RestoreSnapshotRequest original = createTestInstance();\n-        assertFalse(original.skipOperatorOnly()); // default is false\n+        assertFalse(original.skipOperatorOnlyState()); // default is false\n         if (randomBoolean()) {\n-            original.skipOperatorOnly(true);\n+            original.skipOperatorOnlyState(true);\n         }\n         // It is not serialised as xcontent\n         XContentBuilder builder = original.toXContent(XContentFactory.jsonBuilder(), new ToXContent.MapParams(Collections.emptyMap()));\n"}}, {"oid": "8c798074ec4351700ae05b8feac73009687ff12e", "url": "https://github.com/elastic/elasticsearch/commit/8c798074ec4351700ae05b8feac73009687ff12e", "message": "Update server/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java\n\nCo-authored-by: Tim Vernum <tim@adjective.org>", "committedDate": "2021-02-04T03:38:33Z", "type": "commit"}, {"oid": "2b9b6aa0731636ae738b2009dab1165c0a556004", "url": "https://github.com/elastic/elasticsearch/commit/2b9b6aa0731636ae738b2009dab1165c0a556004", "message": "Merge branch 'master' into operator-privileges-phase-two-settings", "committedDate": "2021-02-04T03:39:05Z", "type": "commit"}, {"oid": "0a6ca705f3cfc1f05b1debcb2bbb071da3d9d729", "url": "https://github.com/elastic/elasticsearch/commit/0a6ca705f3cfc1f05b1debcb2bbb071da3d9d729", "message": "Address feedback", "committedDate": "2021-02-04T03:40:40Z", "type": "commit"}, {"oid": "45b6e4d18ab262afb40bef3889493e2f791d99f3", "url": "https://github.com/elastic/elasticsearch/commit/45b6e4d18ab262afb40bef3889493e2f791d99f3", "message": "fix names", "committedDate": "2021-02-04T03:43:11Z", "type": "commit"}, {"oid": "d51630fbee51481cf8dd5c0e85fa1839724e5a5c", "url": "https://github.com/elastic/elasticsearch/commit/d51630fbee51481cf8dd5c0e85fa1839724e5a5c", "message": "more names", "committedDate": "2021-02-04T03:44:21Z", "type": "commit"}, {"oid": "cb8e8a26966222a783ec01bd42d61120e84d87c0", "url": "https://github.com/elastic/elasticsearch/commit/cb8e8a26966222a783ec01bd42d61120e84d87c0", "message": "address more feedback", "committedDate": "2021-02-04T05:05:09Z", "type": "commit"}, {"oid": "6d5ad5210795fb88e4c52ff8675cfbef0b1112bf", "url": "https://github.com/elastic/elasticsearch/commit/6d5ad5210795fb88e4c52ff8675cfbef0b1112bf", "message": "more feedback", "committedDate": "2021-02-04T05:25:10Z", "type": "commit"}, {"oid": "c9406afa81c51524bf82b7e209d42678a61e9292", "url": "https://github.com/elastic/elasticsearch/commit/c9406afa81c51524bf82b7e209d42678a61e9292", "message": "fix test", "committedDate": "2021-02-04T05:57:30Z", "type": "commit"}, {"oid": "67840a905a814cab494ca86362cd34a8f7701273", "url": "https://github.com/elastic/elasticsearch/commit/67840a905a814cab494ca86362cd34a8f7701273", "message": "add teardown", "committedDate": "2021-02-04T06:08:56Z", "type": "commit"}]}