{"pr_number": 56066, "pr_title": "Simplify signature of FieldMapper#parseCreateField.", "pr_createdAt": "2020-05-01T00:46:47Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56066", "timeline": [{"oid": "4fe0c28e5346422f931d3c1deefdb65ac71a0df2", "url": "https://github.com/elastic/elasticsearch/commit/4fe0c28e5346422f931d3c1deefdb65ac71a0df2", "message": "Simplify signature of FieldMapper#parseCreateField.", "committedDate": "2020-05-01T00:38:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQxMDE3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56066#discussion_r419410179", "bodyText": "nit: I think it should be possible to use the newly added ParseContext#addAll here as well", "author": "cbuescher", "createdAt": "2020-05-04T12:49:00Z", "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java", "diffHunk": "@@ -442,9 +440,13 @@ protected void parseCreateField(ParseContext context, List<IndexableField> field\n         boolean indexed = fieldType().indexOptions() != IndexOptions.NONE;\n         boolean docValued = fieldType().hasDocValues();\n         boolean stored = fieldType().stored();\n-        fields.addAll(NumberFieldMapper.NumberType.LONG.createFields(fieldType().name(), scaledValue, indexed, docValued, stored));\n+        List<Field> fields = NumberFieldMapper.NumberType.LONG.createFields(fieldType().name(), scaledValue, indexed, docValued, stored);\n+        for (Field field : fields) {", "originalCommit": "4fe0c28e5346422f931d3c1deefdb65ac71a0df2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYwMDEwNA==", "url": "https://github.com/elastic/elasticsearch/pull/56066#discussion_r419600104", "bodyText": "\ud83d\udc4dI updated to use the new method.", "author": "jtibshirani", "createdAt": "2020-05-04T17:24:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQxMDE3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f80f07ef60871d152fbee49e1d1a8b4642c75da3", "chunk": "diff --git a/modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java b/modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java\nindex b7be1fbccb4..d95684b324b 100644\n--- a/modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java\n+++ b/modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java\n\n@@ -441,9 +441,7 @@ public class ScaledFloatFieldMapper extends FieldMapper {\n         boolean docValued = fieldType().hasDocValues();\n         boolean stored = fieldType().stored();\n         List<Field> fields = NumberFieldMapper.NumberType.LONG.createFields(fieldType().name(), scaledValue, indexed, docValued, stored);\n-        for (Field field : fields) {\n-            context.doc().add(field);\n-        }\n+        context.doc().addAll(fields);\n \n         if (docValued == false && (indexed || stored)) {\n             createFieldNamesField(context);\n"}}, {"oid": "f80f07ef60871d152fbee49e1d1a8b4642c75da3", "url": "https://github.com/elastic/elasticsearch/commit/f80f07ef60871d152fbee49e1d1a8b4642c75da3", "message": "Use `Document#addAll` when possible.", "committedDate": "2020-05-04T17:20:40Z", "type": "commit"}, {"oid": "c6c243a8a5632eb5a779765ecc8e90e482661160", "url": "https://github.com/elastic/elasticsearch/commit/c6c243a8a5632eb5a779765ecc8e90e482661160", "message": "Merge remote-tracking branch 'upstream/master' into parse-create-field", "committedDate": "2020-05-04T17:25:22Z", "type": "commit"}]}