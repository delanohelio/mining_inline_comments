{"pr_number": 58100, "pr_title": "Add new flag to check whether alias exists on remove", "pr_createdAt": "2020-06-15T10:05:25Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58100", "timeline": [{"oid": "2c14595718b5db6208b25f45306df4b8ed3c5340", "url": "https://github.com/elastic/elasticsearch/commit/2c14595718b5db6208b25f45306df4b8ed3c5340", "message": "Add new flag to check whether alias exists on remove", "committedDate": "2020-06-15T10:03:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyNjAyNA==", "url": "https://github.com/elastic/elasticsearch/pull/58100#discussion_r441326024", "bodyText": "maybe also add a unit test for this validation logic?", "author": "martijnvg", "createdAt": "2020-06-17T07:06:55Z", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java", "diffHunk": "@@ -455,6 +466,18 @@ public Boolean isHidden() {\n             return isHidden;\n         }\n \n+        public AliasActions mustExist(Boolean mustExist) {\n+            if (type != Type.REMOVE) {\n+                throw new IllegalArgumentException(\"[\" + MUST_EXIST.getPreferredName() + \"] is unsupported for [\" + type + \"]\");", "originalCommit": "2c14595718b5db6208b25f45306df4b8ed3c5340", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNjA1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/58100#discussion_r441526055", "bodyText": "I've pushed 4917987 for this", "author": "ywelsch", "createdAt": "2020-06-17T13:01:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyNjAyNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyNzM1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58100#discussion_r441327356", "bodyText": "I would prefer if the must_exist option was tested in its own test method, so that it is clear that this is feature with different behaviour.", "author": "martijnvg", "createdAt": "2020-06-17T07:09:36Z", "path": "server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesServiceTests.java", "diffHunk": "@@ -95,10 +95,15 @@ public void testAddAndRemove() {\n \n         // Now just remove on its own\n         before = after;\n-        after = service.applyAliasActions(before, singletonList(new AliasAction.Remove(index, \"test_2\")));\n+        after = service.applyAliasActions(before, singletonList(new AliasAction.Remove(index, \"test_2\", randomBoolean())));\n         assertNull(after.metadata().getIndicesLookup().get(\"test\"));\n         assertNull(after.metadata().getIndicesLookup().get(\"test_2\"));\n         assertAliasesVersionIncreased(index, before, after);\n+\n+        final ClusterState finalCS = after;", "originalCommit": "2c14595718b5db6208b25f45306df4b8ed3c5340", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNTk2NA==", "url": "https://github.com/elastic/elasticsearch/pull/58100#discussion_r441525964", "bodyText": "I've pushed 23c8dfd for this", "author": "ywelsch", "createdAt": "2020-06-17T13:01:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyNzM1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "23c8dfde4317b16a5b3a9714d213e27b96055fed", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesServiceTests.java b/server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesServiceTests.java\nindex b24f0e8a9e1..12851a9d28c 100644\n--- a/server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesServiceTests.java\n+++ b/server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesServiceTests.java\n\n@@ -99,7 +99,42 @@ public class MetadataIndexAliasesServiceTests extends ESTestCase {\n         assertNull(after.metadata().getIndicesLookup().get(\"test\"));\n         assertNull(after.metadata().getIndicesLookup().get(\"test_2\"));\n         assertAliasesVersionIncreased(index, before, after);\n+    }\n+\n+    public void testMustExist() {\n+        // Create a state with a single index\n+        String index = randomAlphaOfLength(5);\n+        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), index);\n+\n+        // Add an alias to it\n+        ClusterState after = service.applyAliasActions(before, singletonList(new AliasAction.Add(index, \"test\", null, null, null, null,\n+            null)));\n+        IndexAbstraction alias = after.metadata().getIndicesLookup().get(\"test\");\n+        assertNotNull(alias);\n+        assertThat(alias.getType(), equalTo(IndexAbstraction.Type.ALIAS));\n+        assertThat(alias.getIndices(), contains(after.metadata().index(index)));\n+        assertAliasesVersionIncreased(index, before, after);\n+\n+        // Remove the alias from it with mustExist == true while adding another one\n+        before = after;\n+        after = service.applyAliasActions(before, Arrays.asList(\n+            new AliasAction.Remove(index, \"test\", true),\n+            new AliasAction.Add(index, \"test_2\", null, null, null, null, null)));\n+        assertNull(after.metadata().getIndicesLookup().get(\"test\"));\n+        alias = after.metadata().getIndicesLookup().get(\"test_2\");\n+        assertNotNull(alias);\n+        assertThat(alias.getType(), equalTo(IndexAbstraction.Type.ALIAS));\n+        assertThat(alias.getIndices(), contains(after.metadata().index(index)));\n+        assertAliasesVersionIncreased(index, before, after);\n+\n+        // Now just remove on its own\n+        before = after;\n+        after = service.applyAliasActions(before, singletonList(new AliasAction.Remove(index, \"test_2\", randomBoolean())));\n+        assertNull(after.metadata().getIndicesLookup().get(\"test\"));\n+        assertNull(after.metadata().getIndicesLookup().get(\"test_2\"));\n+        assertAliasesVersionIncreased(index, before, after);\n \n+        // Show that removing non-existing alias with mustExist == true fails\n         final ClusterState finalCS = after;\n         final IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n             () -> service.applyAliasActions(finalCS, singletonList(new AliasAction.Remove(index, \"test_2\", true))));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwNzg5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58100#discussion_r441507892", "bodyText": "The PR labels include 7.9.0 but this seems to exclude < v8.0.0. Kibana would benefit a lot from this if it was available in 7.x could this be backported?", "author": "rudolf", "createdAt": "2020-06-17T12:31:15Z", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java", "diffHunk": "@@ -271,6 +279,9 @@ public void writeTo(StreamOutput out) throws IOException {\n                 out.writeOptionalBoolean(isHidden);\n             }\n             out.writeStringArray(originalAliases);\n+            if (out.getVersion().onOrAfter(Version.V_8_0_0)) {\n+                out.writeOptionalBoolean(mustExist);", "originalCommit": "2c14595718b5db6208b25f45306df4b8ed3c5340", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUxMzE5NA==", "url": "https://github.com/elastic/elasticsearch/pull/58100#discussion_r441513194", "bodyText": "These conditions are typically adjusted after backporting the PR (as it otherwise breaks CI when merging into master and running BWC mixed-version cluster tests). No need to worry.", "author": "ywelsch", "createdAt": "2020-06-17T12:40:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwNzg5Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "49179879b1b1676743aaf3b4bdfc9476b1419075", "url": "https://github.com/elastic/elasticsearch/commit/49179879b1b1676743aaf3b4bdfc9476b1419075", "message": "add unit test", "committedDate": "2020-06-17T12:55:23Z", "type": "commit"}, {"oid": "23c8dfde4317b16a5b3a9714d213e27b96055fed", "url": "https://github.com/elastic/elasticsearch/commit/23c8dfde4317b16a5b3a9714d213e27b96055fed", "message": "extra test", "committedDate": "2020-06-17T13:00:28Z", "type": "commit"}, {"oid": "031f6a4207324f400fe152905bdcc81a30051db8", "url": "https://github.com/elastic/elasticsearch/commit/031f6a4207324f400fe152905bdcc81a30051db8", "message": "Merge remote-tracking branch 'elastic/master' into alias-must-exist", "committedDate": "2020-06-17T13:01:37Z", "type": "commit"}]}