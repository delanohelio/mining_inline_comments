{"pr_number": 53348, "pr_title": "Move AStatement mutable members into isolated Input/Output objects", "pr_createdAt": "2020-03-10T16:01:52Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53348", "timeline": [{"oid": "0b79ef6cce1f104dcae348064e0f4e6ae7c00202", "url": "https://github.com/elastic/elasticsearch/commit/0b79ef6cce1f104dcae348064e0f4e6ae7c00202", "message": "remove isNull from AExpression", "committedDate": "2020-02-26T18:49:14Z", "type": "commit"}, {"oid": "73256422481516411cbb40a9b5b4c5adf3251bbd", "url": "https://github.com/elastic/elasticsearch/commit/73256422481516411cbb40a9b5b4c5adf3251bbd", "message": "remove explicit cast optimization", "committedDate": "2020-02-26T18:54:14Z", "type": "commit"}, {"oid": "6e414972a159844347bc414fb1b124d5335b1f58", "url": "https://github.com/elastic/elasticsearch/commit/6e414972a159844347bc414fb1b124d5335b1f58", "message": "remove modification of semantic tree for casting", "committedDate": "2020-02-26T19:51:51Z", "type": "commit"}, {"oid": "247080b292a621c41b4c8c360f40378e2bff2ea4", "url": "https://github.com/elastic/elasticsearch/commit/247080b292a621c41b4c8c360f40378e2bff2ea4", "message": "remove ECast node", "committedDate": "2020-02-26T20:07:16Z", "type": "commit"}, {"oid": "63e904f6abf0a97b2269df137f8123d4d1094775", "url": "https://github.com/elastic/elasticsearch/commit/63e904f6abf0a97b2269df137f8123d4d1094775", "message": "Merge branch 'master' into trees11", "committedDate": "2020-02-26T20:24:37Z", "type": "commit"}, {"oid": "0e126117911dfadc1f60c01540c225d4f913b9e8", "url": "https://github.com/elastic/elasticsearch/commit/0e126117911dfadc1f60c01540c225d4f913b9e8", "message": "start of input/output in expressions", "committedDate": "2020-02-26T20:29:20Z", "type": "commit"}, {"oid": "f7ae0e7303c495099bec1a1e8e1318c1bd70e9e0", "url": "https://github.com/elastic/elasticsearch/commit/f7ae0e7303c495099bec1a1e8e1318c1bd70e9e0", "message": "partial change for input and output in expression nodes", "committedDate": "2020-02-26T20:32:20Z", "type": "commit"}, {"oid": "3a2b443237d5dc86a460ea842c9baa7efb7aacb7", "url": "https://github.com/elastic/elasticsearch/commit/3a2b443237d5dc86a460ea842c9baa7efb7aacb7", "message": "add input/output objects for expressions", "committedDate": "2020-02-26T21:05:07Z", "type": "commit"}, {"oid": "8dfb933a3dd14f1224a2b1929604efd27a2c074b", "url": "https://github.com/elastic/elasticsearch/commit/8dfb933a3dd14f1224a2b1929604efd27a2c074b", "message": "fix shift bug in EBinary", "committedDate": "2020-02-26T21:05:27Z", "type": "commit"}, {"oid": "6a811decb652cf458aa603da9d80b6b8e922bdd1", "url": "https://github.com/elastic/elasticsearch/commit/6a811decb652cf458aa603da9d80b6b8e922bdd1", "message": "add input/output to statements", "committedDate": "2020-02-26T22:21:10Z", "type": "commit"}, {"oid": "07180d922b792873c2c782e5173db2fea614a463", "url": "https://github.com/elastic/elasticsearch/commit/07180d922b792873c2c782e5173db2fea614a463", "message": "Merge branch 'master' into trees11", "committedDate": "2020-03-02T16:28:13Z", "type": "commit"}, {"oid": "02f7bb96bc10203e3c55228dfcb4bb711f0f3705", "url": "https://github.com/elastic/elasticsearch/commit/02f7bb96bc10203e3c55228dfcb4bb711f0f3705", "message": "Merge branch 'trees11' into trees12", "committedDate": "2020-03-02T16:28:28Z", "type": "commit"}, {"oid": "ab9c2c7a5d151a402326e1e4e71058c5b9cee7cc", "url": "https://github.com/elastic/elasticsearch/commit/ab9c2c7a5d151a402326e1e4e71058c5b9cee7cc", "message": "Merge branch 'trees12' into trees13", "committedDate": "2020-03-02T20:17:29Z", "type": "commit"}, {"oid": "115c8e0dabfd8add0e5615c436543eeb6df8b876", "url": "https://github.com/elastic/elasticsearch/commit/115c8e0dabfd8add0e5615c436543eeb6df8b876", "message": "response to pr comment", "committedDate": "2020-03-02T23:51:02Z", "type": "commit"}, {"oid": "9a96289a5b29bfe1eec5dd5e9a6cd7322b09c8ac", "url": "https://github.com/elastic/elasticsearch/commit/9a96289a5b29bfe1eec5dd5e9a6cd7322b09c8ac", "message": "Merge branch 'master' into trees11", "committedDate": "2020-03-03T00:53:27Z", "type": "commit"}, {"oid": "d23d394638cbf67bd66b476327eb2eecd2c3da4e", "url": "https://github.com/elastic/elasticsearch/commit/d23d394638cbf67bd66b476327eb2eecd2c3da4e", "message": "Merge branch 'trees11' into trees12", "committedDate": "2020-03-03T00:58:37Z", "type": "commit"}, {"oid": "3d6018ca222f19d9a96496cd71245bec3f515ab5", "url": "https://github.com/elastic/elasticsearch/commit/3d6018ca222f19d9a96496cd71245bec3f515ab5", "message": "Merge branch 'trees12' into trees13", "committedDate": "2020-03-03T00:58:51Z", "type": "commit"}, {"oid": "39a8806da415ba1691046c659f214a7300b34681", "url": "https://github.com/elastic/elasticsearch/commit/39a8806da415ba1691046c659f214a7300b34681", "message": "Merge branch 'master' into trees12", "committedDate": "2020-03-03T19:36:31Z", "type": "commit"}, {"oid": "55364296b579d118849ddac36c8fa1541a05b467", "url": "https://github.com/elastic/elasticsearch/commit/55364296b579d118849ddac36c8fa1541a05b467", "message": "Merge branch 'trees12' into trees13", "committedDate": "2020-03-03T19:38:35Z", "type": "commit"}, {"oid": "ceb8967dc45e72e37cc22ac9e0dbcbbaacd8cd42", "url": "https://github.com/elastic/elasticsearch/commit/ceb8967dc45e72e37cc22ac9e0dbcbbaacd8cd42", "message": "t Merge branch 'master' into trees12", "committedDate": "2020-03-09T16:35:00Z", "type": "commit"}, {"oid": "f65d4a76e9e40d4da236932fed508897efa16c84", "url": "https://github.com/elastic/elasticsearch/commit/f65d4a76e9e40d4da236932fed508897efa16c84", "message": "Merge branch 'trees12' into trees13", "committedDate": "2020-03-09T16:35:19Z", "type": "commit"}, {"oid": "d9061478d29eb56148cda18350fc039fbceeaf4d", "url": "https://github.com/elastic/elasticsearch/commit/d9061478d29eb56148cda18350fc039fbceeaf4d", "message": "Merge branch 'master' into trees12", "committedDate": "2020-03-09T20:52:46Z", "type": "commit"}, {"oid": "08cf4768313147b745df85e77dff2f1bba8928cb", "url": "https://github.com/elastic/elasticsearch/commit/08cf4768313147b745df85e77dff2f1bba8928cb", "message": "Merge branch 'trees12' into trees13", "committedDate": "2020-03-09T20:53:04Z", "type": "commit"}, {"oid": "5ef8186149cc5f6c8f26609e7f2866b286b223c8", "url": "https://github.com/elastic/elasticsearch/commit/5ef8186149cc5f6c8f26609e7f2866b286b223c8", "message": "Merge branch 'master' into trees13", "committedDate": "2020-03-09T22:02:34Z", "type": "commit"}, {"oid": "a92f642274a0784be6c0ee44f983c0a97969e3d9", "url": "https://github.com/elastic/elasticsearch/commit/a92f642274a0784be6c0ee44f983c0a97969e3d9", "message": "Merge branch 'master' into trees13", "committedDate": "2020-03-10T15:57:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MTE2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53348#discussion_r390471166", "bodyText": "Can you ref issues in TODO's like this? eg TODO: ..., see #12345.", "author": "stu-elastic", "createdAt": "2020-03-10T17:05:28Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/AStatement.java", "diffHunk": "@@ -30,66 +30,76 @@\n  */\n public abstract class AStatement extends ANode {\n \n-    /**\n-     * Set to true when the final statement in an {@link SClass} is reached.\n-     * Used to determine whether or not an auto-return is necessary.\n-     */\n-    boolean lastSource = false;\n-\n-    /**\n-     * Set to true when a loop begins.  Used by {@link SBlock} to help determine\n-     * when the final statement of a loop is reached.\n-     */\n-    boolean beginLoop = false;\n-\n-    /**\n-     * Set to true when inside a loop.  Used by {@link SBreak} and {@link SContinue}\n-     * to determine if a break/continue statement is legal.\n-     */\n-    boolean inLoop = false;\n-\n-    /**\n-     * Set to true when on the last statement of a loop.  Used by {@link SContinue}\n-     * to prevent extraneous continue statements.\n-     */\n-    boolean lastLoop = false;\n-\n-    /**\n-     * Set to true if a statement would cause the method to exit.  Used to\n-     * determine whether or not an auto-return is necessary.\n-     */\n-    boolean methodEscape = false;\n-\n-    /**\n-     * Set to true if a statement would cause a loop to exit.  Used to\n-     * prevent unreachable statements.\n-     */\n-    boolean loopEscape = false;\n-\n-    /**\n-     * Set to true if all current paths escape from the current {@link SBlock}.\n-     * Used during the analysis phase to prevent unreachable statements and\n-     * the writing phase to prevent extraneous bytecode gotos from being written.\n-     */\n-    boolean allEscape = false;\n-\n-    /**\n-     * Set to true if any continue statement occurs in a loop.  Used to prevent\n-     * unnecessary infinite loops.\n-     */\n-    boolean anyContinue = false;\n+    public static class Input {\n+\n+        /**\n+         * Set to true when the final statement in an {@link SClass} is reached.\n+         * Used to determine whether or not an auto-return is necessary.\n+         */\n+        boolean lastSource = false;\n+\n+        /**\n+         * Set to true when a loop begins.  Used by {@link SBlock} to help determine\n+         * when the final statement of a loop is reached.\n+         */\n+        boolean beginLoop = false;\n+\n+        /**\n+         * Set to true when inside a loop.  Used by {@link SBreak} and {@link SContinue}\n+         * to determine if a break/continue statement is legal.\n+         */\n+        boolean inLoop = false;\n+\n+        /**\n+         * Set to true when on the last statement of a loop.  Used by {@link SContinue}\n+         * to prevent extraneous continue statements.\n+         */\n+        boolean lastLoop = false;\n+    }\n \n-    /**\n-     * Set to true if any break statement occurs in a loop.  Used to prevent\n-     * extraneous loops.\n-     */\n-    boolean anyBreak = false;\n+    public static class Output {\n+\n+        /**\n+         * Set to true if a statement would cause the method to exit.  Used to\n+         * determine whether or not an auto-return is necessary.\n+         */\n+        boolean methodEscape = false;\n+\n+        /**\n+         * Set to true if a statement would cause a loop to exit.  Used to\n+         * prevent unreachable statements.\n+         */\n+        boolean loopEscape = false;\n+\n+        /**\n+         * Set to true if all current paths escape from the current {@link SBlock}.\n+         * Used during the analysis phase to prevent unreachable statements and\n+         * the writing phase to prevent extraneous bytecode gotos from being written.\n+         */\n+        boolean allEscape = false;\n+\n+        /**\n+         * Set to true if any continue statement occurs in a loop.  Used to prevent\n+         * unnecessary infinite loops.\n+         */\n+        boolean anyContinue = false;\n+\n+        /**\n+         * Set to true if any break statement occurs in a loop.  Used to prevent\n+         * extraneous loops.\n+         */\n+        boolean anyBreak = false;\n+\n+        /**\n+         * Set to the approximate number of statements in a loop block to prevent\n+         * infinite loops during runtime.\n+         */\n+        int statementCount = 0;\n+    }\n \n-    /**\n-     * Set to the approximate number of statements in a loop block to prevent\n-     * infinite loops during runtime.\n-     */\n-    int statementCount = 0;\n+    // TODO: remove placeholders once analysis and write are combined into build", "originalCommit": "a92f642274a0784be6c0ee44f983c0a97969e3d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0MjEzNg==", "url": "https://github.com/elastic/elasticsearch/pull/53348#discussion_r392442136", "bodyText": "#53561", "author": "jdconrad", "createdAt": "2020-03-13T20:04:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MTE2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b79c54c1eb7fa0531e4d2f95b4bd5bb114870170", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/AStatement.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/AStatement.java\nindex 141886ff81b..d8d12d8a146 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/AStatement.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/AStatement.java\n\n@@ -98,6 +98,7 @@ public abstract class AStatement extends ANode {\n     }\n \n     // TODO: remove placeholders once analysis and write are combined into build\n+    // TODO: https://github.com/elastic/elasticsearch/issues/53561\n     Input input;\n     Output output;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MjQ5OA==", "url": "https://github.com/elastic/elasticsearch/pull/53348#discussion_r390472498", "bodyText": "Consider creating output close to it's first use, at line 68.", "author": "stu-elastic", "createdAt": "2020-03-10T17:07:23Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SExpression.java", "diffHunk": "@@ -44,36 +44,40 @@ public SExpression(Location location, AExpression expression) {\n     }\n \n     @Override\n-    void analyze(ScriptRoot scriptRoot, Scope scope) {\n+    Output analyze(ScriptRoot scriptRoot, Scope scope, Input input) {\n+        this.input = input;\n+        output = new Output();", "originalCommit": "a92f642274a0784be6c0ee44f983c0a97969e3d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0MzE5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/53348#discussion_r392443195", "bodyText": "Done.", "author": "jdconrad", "createdAt": "2020-03-13T20:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MjQ5OA=="}], "type": "inlineReview", "revised_code": {"commit": "b79c54c1eb7fa0531e4d2f95b4bd5bb114870170", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SExpression.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SExpression.java\nindex 5d97c64ccef..f04cefa622a 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SExpression.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SExpression.java\n\n@@ -46,7 +46,6 @@ public final class SExpression extends AStatement {\n     @Override\n     Output analyze(ScriptRoot scriptRoot, Scope scope, Input input) {\n         this.input = input;\n-        output = new Output();\n \n         Class<?> rtnType = scope.getReturnType();\n         boolean isVoid = rtnType == void.class;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3Mjk3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/53348#discussion_r390472973", "bodyText": "Same as above, consider changing where this creation occurs.  It's about ~50 lines away from actual use.", "author": "stu-elastic", "createdAt": "2020-03-10T17:08:07Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFor.java", "diffHunk": "@@ -52,12 +52,15 @@ public SFor(Location location, ANode initializer, AExpression condition, AExpres\n     }\n \n     @Override\n-    void analyze(ScriptRoot scriptRoot, Scope scope) {\n+    Output analyze(ScriptRoot scriptRoot, Scope scope, Input input) {\n+        this.input = input;\n+        output = new Output();", "originalCommit": "a92f642274a0784be6c0ee44f983c0a97969e3d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0MzIyNA==", "url": "https://github.com/elastic/elasticsearch/pull/53348#discussion_r392443224", "bodyText": "Done.", "author": "jdconrad", "createdAt": "2020-03-13T20:07:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3Mjk3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b79c54c1eb7fa0531e4d2f95b4bd5bb114870170", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFor.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFor.java\nindex 817bee512d2..241c50b8fe2 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFor.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFor.java\n\n@@ -54,7 +54,6 @@ public final class SFor extends AStatement {\n     @Override\n     Output analyze(ScriptRoot scriptRoot, Scope scope, Input input) {\n         this.input = input;\n-        output = new Output();\n \n         scope = scope.newLocalScope();\n \n"}}, {"oid": "b79c54c1eb7fa0531e4d2f95b4bd5bb114870170", "url": "https://github.com/elastic/elasticsearch/commit/b79c54c1eb7fa0531e4d2f95b4bd5bb114870170", "message": "response to pr comments", "committedDate": "2020-03-13T20:11:08Z", "type": "commit"}, {"oid": "e7cbaaa2a4c53f243ace54755bdf604a2e8d4cc5", "url": "https://github.com/elastic/elasticsearch/commit/e7cbaaa2a4c53f243ace54755bdf604a2e8d4cc5", "message": "Merge branch 'master' into trees13", "committedDate": "2020-03-13T20:32:49Z", "type": "commit"}]}