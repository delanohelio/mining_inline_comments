{"pr_number": 51233, "pr_title": "Add validation for dynamic templates", "pr_createdAt": "2020-01-20T17:08:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51233", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNjQyMg==", "url": "https://github.com/elastic/elasticsearch/pull/51233#discussion_r376536422", "bodyText": "do we need to check {dynamic_type} too?", "author": "jpountz", "createdAt": "2020-02-07T18:21:51Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java", "diffHunk": "@@ -330,4 +338,106 @@ protected void doXContent(XContentBuilder builder, ToXContent.Params params) thr\n             builder.field(\"numeric_detection\", numericDetection.value());\n         }\n     }\n+\n+    public void validateDynamicTemplates(Mapper.TypeParser.ParserContext parserContext) {\n+        for (DynamicTemplate dynamicTemplate : dynamicTemplates.value()) {\n+            validateDynamicTemplate(parserContext, dynamicTemplate);\n+        }\n+    }\n+\n+    private static void validateDynamicTemplate(Mapper.TypeParser.ParserContext parserContext,\n+                                                DynamicTemplate dynamicTemplate) {\n+\n+        if (containsSnippet(dynamicTemplate.getMapping(), \"{name}\")) {", "originalCommit": "b8b04df83504d45f44f4904eaa5ace23fec86773", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyNzI3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51233#discussion_r376927272", "bodyText": "Only {name}, because if the type hasn't specifically configured then line 360 ensures that all possible dynamic types are checked.", "author": "martijnvg", "createdAt": "2020-02-10T08:48:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNjQyMg=="}], "type": "inlineReview", "revised_code": {"commit": "13adc7935c3f1aec915def84c2db93122ff77ef7", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java\nindex 65a5f4f2e7f..94fe4dce84f 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java\n\n@@ -338,106 +445,4 @@ public class RootObjectMapper extends ObjectMapper {\n             builder.field(\"numeric_detection\", numericDetection.value());\n         }\n     }\n-\n-    public void validateDynamicTemplates(Mapper.TypeParser.ParserContext parserContext) {\n-        for (DynamicTemplate dynamicTemplate : dynamicTemplates.value()) {\n-            validateDynamicTemplate(parserContext, dynamicTemplate);\n-        }\n-    }\n-\n-    private static void validateDynamicTemplate(Mapper.TypeParser.ParserContext parserContext,\n-                                                DynamicTemplate dynamicTemplate) {\n-\n-        if (containsSnippet(dynamicTemplate.getMapping(), \"{name}\")) {\n-            // Can't validate template, because field names can't be guessed up front.\n-            return;\n-        }\n-\n-        final XContentFieldType[] types;\n-        if (dynamicTemplate.getXContentFieldType() != null) {\n-            types = new XContentFieldType[]{dynamicTemplate.getXContentFieldType()};\n-        } else {\n-            types = XContentFieldType.values();\n-        }\n-\n-        Exception lastError = null;\n-        boolean dynamicTemplateInvalid = true;\n-\n-        for (XContentFieldType contentFieldType : types) {\n-            String defaultDynamicType = contentFieldType.defaultMappingType();\n-            String mappingType = dynamicTemplate.mappingType(defaultDynamicType);\n-            Mapper.TypeParser typeParser = parserContext.typeParser(mappingType);\n-            if (typeParser != null) {\n-                Map<String, Object> fieldTypeConfig = dynamicTemplate.mappingForName(\"__dummy__\", defaultDynamicType);\n-                fieldTypeConfig.remove(\"type\");\n-                try {\n-                    Mapper.Builder<?, ?> dummyBuilder = typeParser.parse(\"__dummy__\", fieldTypeConfig, parserContext);\n-                    if (fieldTypeConfig.isEmpty()) {\n-                        dynamicTemplateInvalid = false;\n-                        break;\n-                    }\n-                } catch (Exception e) {\n-                    lastError = e;\n-                }\n-            }\n-        }\n-\n-        final boolean failInvalidDynamicTemplates = parserContext.indexVersionCreated().onOrAfter(Version.V_8_0_0);\n-        if (dynamicTemplateInvalid) {\n-            String message = String.format(Locale.ROOT, \"dynamic template [%s] has invalid content [%s]\",\n-                dynamicTemplate.getName(), Strings.toString(dynamicTemplate));\n-            if (failInvalidDynamicTemplates) {\n-                throw new IllegalArgumentException(message, lastError);\n-            } else {\n-                DEPRECATION_LOGGER.deprecatedAndMaybeLog(\"invalid_dynamic_template\", message);\n-            }\n-        }\n-    }\n-\n-    private static boolean containsSnippet(Map<?, ?> map, String snippet) {\n-        for (Map.Entry<?, ?> entry : map.entrySet()) {\n-            String key = entry.getKey().toString();\n-            if (key.contains(snippet)) {\n-                return true;\n-            }\n-\n-            Object value = entry.getValue();\n-            if (value instanceof Map) {\n-                if (containsSnippet((Map<?, ?>) value, snippet)) {\n-                    return true;\n-                }\n-            } else if (value instanceof List) {\n-                if (containsSnippet((List<?>) value, snippet)) {\n-                    return true;\n-                }\n-            } else if (value instanceof String) {\n-                String valueString = (String) value;\n-                if (valueString.contains(snippet)) {\n-                    return true;\n-                }\n-            }\n-        }\n-\n-        return false;\n-    }\n-\n-    private static boolean containsSnippet(List<?> list, String snippet) {\n-        for (Object value : list) {\n-            if (value instanceof Map) {\n-                if (containsSnippet((Map<?, ?>) value, snippet)) {\n-                    return true;\n-                }\n-            } else if (value instanceof List) {\n-                if (containsSnippet((List<?>) value, snippet)) {\n-                    return true;\n-                }\n-            } else if (value instanceof String) {\n-                String valueString = (String) value;\n-                if (valueString.contains(snippet)) {\n-                    return true;\n-                }\n-            }\n-        }\n-        return false;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzODU0OA==", "url": "https://github.com/elastic/elasticsearch/pull/51233#discussion_r376538548", "bodyText": "This seems to only validate dynamic templates at creation time, should we move validation to MapperService#merge to make sure we cover all cases, including mapping updates that add dynamic templates on existing indices?", "author": "jpountz", "createdAt": "2020-02-07T18:26:24Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java", "diffHunk": "@@ -621,6 +621,7 @@ private static void updateIndexMappingsAndBuildSortOrder(IndexService indexServi\n         if (!mappings.isEmpty()) {\n             assert mappings.size() == 1 : mappings;\n             mapperService.merge(MapperService.SINGLE_MAPPING_NAME, mappings, MergeReason.MAPPING_UPDATE);\n+            mapperService.validateDynamicTemplates();", "originalCommit": "b8b04df83504d45f44f4904eaa5ace23fec86773", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyNTc1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51233#discussion_r376925753", "bodyText": "Good point. I will address this.", "author": "martijnvg", "createdAt": "2020-02-10T08:44:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzODU0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTY3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51233#discussion_r379369679", "bodyText": "Dynamic template are now validated when parsed by root object type parser.\nI think this has the same effect?", "author": "martijnvg", "createdAt": "2020-02-14T10:56:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzODU0OA=="}], "type": "inlineReview", "revised_code": {"commit": "13adc7935c3f1aec915def84c2db93122ff77ef7", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java b/server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java\nindex 219cd56b8eb..6cbdd56965c 100644\n--- a/server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java\n+++ b/server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java\n\n@@ -621,7 +688,6 @@ public class MetaDataCreateIndexService {\n         if (!mappings.isEmpty()) {\n             assert mappings.size() == 1 : mappings;\n             mapperService.merge(MapperService.SINGLE_MAPPING_NAME, mappings, MergeReason.MAPPING_UPDATE);\n-            mapperService.validateDynamicTemplates();\n         }\n \n         if (sourceMetaData == null) {\n"}}, {"oid": "13adc7935c3f1aec915def84c2db93122ff77ef7", "url": "https://github.com/elastic/elasticsearch/commit/13adc7935c3f1aec915def84c2db93122ff77ef7", "message": "Add validation for dynamic templates.\n\nTries to load a `Mapper.Builder` instance for the mapping snippet of a dynamic template.\nThis should catch things like using a analyzer that is undefined or mapping attributes that are unused.\n\nThis is best effort:\n* If `{{name}}` placeholder is used in the mapping snippet then validation is skipped.\n* If `match_mapping_type` is not specified then validation is performed for all mapping types.\n  If parsing succeeds with a single mapping type then this the dynamic mapping is considered valid.\n\nThis validation can be enabled on indices created on a master node with version 8.0.0 or higher.\nFor 7.x a deprecation warning can be omitted instead.\n\nCloses #17411\nCloses #24419", "committedDate": "2020-02-11T08:36:10Z", "type": "commit"}, {"oid": "ca7ed5ac79934c9d34a99b24df705280440a52a5", "url": "https://github.com/elastic/elasticsearch/commit/ca7ed5ac79934c9d34a99b24df705280440a52a5", "message": "moved validation logic to a better place", "committedDate": "2020-02-11T08:36:11Z", "type": "commit"}, {"oid": "d047b8f76090451c7e33557cfc1ed4e104973063", "url": "https://github.com/elastic/elasticsearch/commit/d047b8f76090451c7e33557cfc1ed4e104973063", "message": "iter", "committedDate": "2020-02-11T08:36:11Z", "type": "commit"}, {"oid": "a8c10793c9f43be13e00de2df1b0b14017e40aa4", "url": "https://github.com/elastic/elasticsearch/commit/a8c10793c9f43be13e00de2df1b0b14017e40aa4", "message": "* Moved validation of dynamic templates to where dynamic templates are parsed.\n* Added tests and updated the documentation", "committedDate": "2020-02-14T10:54:06Z", "type": "commit"}, {"oid": "a8c10793c9f43be13e00de2df1b0b14017e40aa4", "url": "https://github.com/elastic/elasticsearch/commit/a8c10793c9f43be13e00de2df1b0b14017e40aa4", "message": "* Moved validation of dynamic templates to where dynamic templates are parsed.\n* Added tests and updated the documentation", "committedDate": "2020-02-14T10:54:06Z", "type": "forcePushed"}, {"oid": "a63f1935890470e649f1f294b1a4d2bb46d8b12a", "url": "https://github.com/elastic/elasticsearch/commit/a63f1935890470e649f1f294b1a4d2bb46d8b12a", "message": "Merge remote-tracking branch 'es/master' into validate_dynamic_templates", "committedDate": "2020-02-14T11:49:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzNjUzMw==", "url": "https://github.com/elastic/elasticsearch/pull/51233#discussion_r379636533", "bodyText": "I think some fields might do extra validation when calling builder.build(), should we try to build the mapper too?", "author": "jpountz", "createdAt": "2020-02-14T20:45:23Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java", "diffHunk": "@@ -333,4 +342,111 @@ protected void doXContent(XContentBuilder builder, ToXContent.Params params) thr\n             builder.field(\"numeric_detection\", numericDetection.value());\n         }\n     }\n+\n+    private static void validateDynamicTemplate(Mapper.TypeParser.ParserContext parserContext,\n+                                                DynamicTemplate dynamicTemplate) {\n+\n+        if (containsSnippet(dynamicTemplate.getMapping(), \"{name}\")) {\n+            // Can't validate template, because field names can't be guessed up front.\n+            return;\n+        }\n+\n+        final XContentFieldType[] types;\n+        if (dynamicTemplate.getXContentFieldType() != null) {\n+            types = new XContentFieldType[]{dynamicTemplate.getXContentFieldType()};\n+        } else {\n+            types = XContentFieldType.values();\n+        }\n+\n+        Exception lastError = null;\n+        boolean dynamicTemplateInvalid = true;\n+\n+        for (XContentFieldType contentFieldType : types) {\n+            String defaultDynamicType = contentFieldType.defaultMappingType();\n+            String mappingType = dynamicTemplate.mappingType(defaultDynamicType);\n+            Mapper.TypeParser typeParser = parserContext.typeParser(mappingType);\n+            if (typeParser == null) {\n+                lastError = new IllegalArgumentException(\"No mapper found for type [\" + mappingType + \"]\");\n+                continue;\n+            }\n+\n+            Map<String, Object> fieldTypeConfig = dynamicTemplate.mappingForName(\"__dummy__\", defaultDynamicType);\n+            fieldTypeConfig.remove(\"type\");\n+            try {\n+                Mapper.Builder<?, ?> dummyBuilder = typeParser.parse(\"__dummy__\", fieldTypeConfig, parserContext);", "originalCommit": "a63f1935890470e649f1f294b1a4d2bb46d8b12a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEwMTk1OA==", "url": "https://github.com/elastic/elasticsearch/pull/51233#discussion_r383101958", "bodyText": "Good point. I will try to do this here.", "author": "martijnvg", "createdAt": "2020-02-24T06:38:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzNjUzMw=="}], "type": "inlineReview", "revised_code": {"commit": "28f6d5ec153f33253d8497f5405a52c9b94c0e9b", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java\nindex 7efab195a94..5d7957e1395 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java\n\n@@ -375,6 +375,9 @@ public class RootObjectMapper extends ObjectMapper {\n             try {\n                 Mapper.Builder<?, ?> dummyBuilder = typeParser.parse(\"__dummy__\", fieldTypeConfig, parserContext);\n                 if (fieldTypeConfig.isEmpty()) {\n+                    Settings indexSettings = parserContext.mapperService().getIndexSettings().getSettings();\n+                    BuilderContext builderContext = new BuilderContext(indexSettings, new ContentPath(1));\n+                    dummyBuilder.build(builderContext);\n                     dynamicTemplateInvalid = false;\n                     break;\n                 } else {\n"}}, {"oid": "dbce91c5fb24ef8f70a6f3b388aaf2556b21fa46", "url": "https://github.com/elastic/elasticsearch/commit/dbce91c5fb24ef8f70a6f3b388aaf2556b21fa46", "message": "fix typo in docs\n\nCo-Authored-By: Adrien Grand <jpountz@gmail.com>", "committedDate": "2020-02-24T06:36:56Z", "type": "commit"}, {"oid": "c5df937764d45a6223f4e98e49cd2d687f20f7e3", "url": "https://github.com/elastic/elasticsearch/commit/c5df937764d45a6223f4e98e49cd2d687f20f7e3", "message": "Merge remote-tracking branch 'es/master' into validate_dynamic_templates", "committedDate": "2020-02-26T08:02:23Z", "type": "commit"}, {"oid": "28f6d5ec153f33253d8497f5405a52c9b94c0e9b", "url": "https://github.com/elastic/elasticsearch/commit/28f6d5ec153f33253d8497f5405a52c9b94c0e9b", "message": "Also build the actual mapper instance to ensure that validation\nthat occurs during construction of a mapper instance is executed.", "committedDate": "2020-02-26T08:16:14Z", "type": "commit"}, {"oid": "a4ccb679f134d9420e814839396d264a4a9f0471", "url": "https://github.com/elastic/elasticsearch/commit/a4ccb679f134d9420e814839396d264a4a9f0471", "message": "adjusted the wording about when and how a template is validated at mapping update time.", "committedDate": "2020-02-26T09:17:40Z", "type": "commit"}, {"oid": "44fdd1e8f62b400c8555971ceea26f818532543e", "url": "https://github.com/elastic/elasticsearch/commit/44fdd1e8f62b400c8555971ceea26f818532543e", "message": "Merge remote-tracking branch 'es/master' into validate_dynamic_templates", "committedDate": "2020-02-27T07:41:05Z", "type": "commit"}]}