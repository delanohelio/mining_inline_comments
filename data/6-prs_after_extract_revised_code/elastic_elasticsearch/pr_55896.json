{"pr_number": 55896, "pr_title": "Create plugin for internalClusterTest task", "pr_createdAt": "2020-04-28T21:46:27Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55896", "timeline": [{"oid": "31f5c78a645f695b1b59d78d49238c562e33b70b", "url": "https://github.com/elastic/elasticsearch/commit/31f5c78a645f695b1b59d78d49238c562e33b70b", "message": "Create plugin for internalClusterTest task\n\nThis commit creates a new gradle plugin to provide a separate task name\nand source set for running ESIntegTestCase tests. The only project\nconverted to use the new plugin in this PR is server, as an example. The\nremaining cases in x-pack will be handled in followups.", "committedDate": "2020-04-28T21:43:28Z", "type": "commit"}, {"oid": "6ef6e79ddebc7b4df13df057347648899ce87463", "url": "https://github.com/elastic/elasticsearch/commit/6ef6e79ddebc7b4df13df057347648899ce87463", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-04-28T21:46:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NTg4OA==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r416985888", "bodyText": "Can you break up this up into sourceSet creation and task creation methods ?\nI am converting the yamlTests to independent sourceSets and task, and would like to re-use the sourceSet parts here. However, I don't think the task part is re-usabe. Below is my requirement for task creation:\n    RestIntegTestTask yamlTestTask = project.getTasks()\n            .create(\"yamlTest\", RestIntegTestTask.class, task -> {\n                task.dependsOn(project.getTasks().getByName(\"copyRestApiSpecsTask\"));\n            });\n\nrequires a custom Test.class, can't use task configuration avoidance (register vs. create) due to the constructor of RestIntegTestTask, needs a dependency.\nI have a WIP for the YAML tests here: https://github.com/elastic/elasticsearch/pull/55833/files#diff-c8d3f49f55d848e6358cf9ebf14b7a79R48", "author": "jakelandis", "createdAt": "2020-04-28T23:33:00Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {", "originalCommit": "6ef6e79ddebc7b4df13df057347648899ce87463", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1MTA1NA==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417551054", "bodyText": "I know that we use RestIntegTestTask, that exists for a mixture of reasons that I believe are all no longer relevant (eg task ordering which is now solved by testclusters, or common setup which is solved by your plugin instead of inside task creation). Regarding needing a dependency, that can be done by your plugin after the task is created.", "author": "rjernst", "createdAt": "2020-04-29T19:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NTg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1ODY4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417558682", "bodyText": "We could have this method take a Function<? super SourceSet, ? extends TaskProvider<?>> factory argument such that the caller defines how the \"test task\" should be created, and the utility would handle wiring it to check, etc.", "author": "mark-vieira", "createdAt": "2020-04-29T19:29:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NTg4OA=="}], "type": "inlineReview", "revised_code": {"commit": "407062ae7cfbf7e6bb5e3095ca20a909d659b044", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\nindex 123acc1f553..47c6039d872 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n\n@@ -159,10 +157,18 @@ public abstract class GradleUtils {\n         extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getRuntimeOnlyConfigurationName);\n \n         // tie this new test source set to the main and test source sets\n-        Configuration extraTestCompileConfig = project.getConfigurations().getByName(extraTestSourceSet.getCompileClasspathConfigurationName());\n-        Configuration extraTestRuntimeConfig = project.getConfigurations().getByName(extraTestSourceSet.getRuntimeClasspathConfigurationName());\n-        extraTestSourceSet.setCompileClasspath(project.getObjects().fileCollection().from(mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestCompileConfig));\n-        extraTestSourceSet.setRuntimeClasspath(project.getObjects().fileCollection().from(extraTestSourceSet.getOutput(), mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestRuntimeConfig));\n+        Configuration extraTestCompileConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getCompileClasspathConfigurationName());\n+        Configuration extraTestRuntimeConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getRuntimeClasspathConfigurationName());\n+        extraTestSourceSet.setCompileClasspath(\n+            project.getObjects().fileCollection().from(mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestCompileConfig)\n+        );\n+        extraTestSourceSet.setRuntimeClasspath(\n+            project.getObjects()\n+                .fileCollection()\n+                .from(extraTestSourceSet.getOutput(), mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestRuntimeConfig)\n+        );\n \n         // setup IDEs\n         String runtimeClasspathName = extraTestSourceSet.getRuntimeClasspathConfigurationName();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4OTU5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r416989592", "bodyText": "If I understand this (which I may not :) ) this applies the test configuration to the new source set ? (e.g. if testCompile depends on foo, then so does myNewTest sourceSet ?)\nLooking at this for the requirements for YAML tests, I wonder if this should be optional since we want the YAML tests to have no dependencies beyond the test framework.", "author": "jakelandis", "createdAt": "2020-04-28T23:44:10Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n+        });\n+        SourceSet mainSourceSet = sourceSets.getByName(\"main\");\n+        SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getCompileConfigurationName);", "originalCommit": "6ef6e79ddebc7b4df13df057347648899ce87463", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1MzQyOA==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417553428", "bodyText": "We could have this utility method accept a list of source sets from which the new source set should extend.", "author": "mark-vieira", "createdAt": "2020-04-29T19:19:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4OTU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1NDA5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417554092", "bodyText": "I can work on that, although I'd like to do it in a followup. At first I tried having the tests only extend main. However, we have several IT tests in server which use static utility methods from unit test classes. It will take some work to sort that all out.", "author": "rjernst", "createdAt": "2020-04-29T19:21:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4OTU5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "407062ae7cfbf7e6bb5e3095ca20a909d659b044", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\nindex 123acc1f553..47c6039d872 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n\n@@ -159,10 +157,18 @@ public abstract class GradleUtils {\n         extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getRuntimeOnlyConfigurationName);\n \n         // tie this new test source set to the main and test source sets\n-        Configuration extraTestCompileConfig = project.getConfigurations().getByName(extraTestSourceSet.getCompileClasspathConfigurationName());\n-        Configuration extraTestRuntimeConfig = project.getConfigurations().getByName(extraTestSourceSet.getRuntimeClasspathConfigurationName());\n-        extraTestSourceSet.setCompileClasspath(project.getObjects().fileCollection().from(mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestCompileConfig));\n-        extraTestSourceSet.setRuntimeClasspath(project.getObjects().fileCollection().from(extraTestSourceSet.getOutput(), mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestRuntimeConfig));\n+        Configuration extraTestCompileConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getCompileClasspathConfigurationName());\n+        Configuration extraTestRuntimeConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getRuntimeClasspathConfigurationName());\n+        extraTestSourceSet.setCompileClasspath(\n+            project.getObjects().fileCollection().from(mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestCompileConfig)\n+        );\n+        extraTestSourceSet.setRuntimeClasspath(\n+            project.getObjects()\n+                .fileCollection()\n+                .from(extraTestSourceSet.getOutput(), mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestRuntimeConfig)\n+        );\n \n         // setup IDEs\n         String runtimeClasspathName = extraTestSourceSet.getRuntimeClasspathConfigurationName();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTQ3NA==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r416991474", "bodyText": "should this task.setGroup(JavaBasePlugin.VERIFICATION_GROUP); ? (It helps with the Intellij Gradle view)", "author": "jakelandis", "createdAt": "2020-04-28T23:49:42Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +132,61 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());", "originalCommit": "6ef6e79ddebc7b4df13df057347648899ce87463", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1NDQ5NA==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417554494", "bodyText": "good call, done", "author": "rjernst", "createdAt": "2020-04-29T19:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5MTQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "407062ae7cfbf7e6bb5e3095ca20a909d659b044", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\nindex 123acc1f553..47c6039d872 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n\n@@ -159,10 +157,18 @@ public abstract class GradleUtils {\n         extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getRuntimeOnlyConfigurationName);\n \n         // tie this new test source set to the main and test source sets\n-        Configuration extraTestCompileConfig = project.getConfigurations().getByName(extraTestSourceSet.getCompileClasspathConfigurationName());\n-        Configuration extraTestRuntimeConfig = project.getConfigurations().getByName(extraTestSourceSet.getRuntimeClasspathConfigurationName());\n-        extraTestSourceSet.setCompileClasspath(project.getObjects().fileCollection().from(mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestCompileConfig));\n-        extraTestSourceSet.setRuntimeClasspath(project.getObjects().fileCollection().from(extraTestSourceSet.getOutput(), mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestRuntimeConfig));\n+        Configuration extraTestCompileConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getCompileClasspathConfigurationName());\n+        Configuration extraTestRuntimeConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getRuntimeClasspathConfigurationName());\n+        extraTestSourceSet.setCompileClasspath(\n+            project.getObjects().fileCollection().from(mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestCompileConfig)\n+        );\n+        extraTestSourceSet.setRuntimeClasspath(\n+            project.getObjects()\n+                .fileCollection()\n+                .from(extraTestSourceSet.getOutput(), mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestRuntimeConfig)\n+        );\n \n         // setup IDEs\n         String runtimeClasspathName = extraTestSourceSet.getRuntimeClasspathConfigurationName();\n"}}, {"oid": "407062ae7cfbf7e6bb5e3095ca20a909d659b044", "url": "https://github.com/elastic/elasticsearch/commit/407062ae7cfbf7e6bb5e3095ca20a909d659b044", "message": "checkstyle", "committedDate": "2020-04-29T18:39:44Z", "type": "commit"}, {"oid": "dd82383aa0e61a2088b00b639d3e7557d12e5c5d", "url": "https://github.com/elastic/elasticsearch/commit/dd82383aa0e61a2088b00b639d3e7557d12e5c5d", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-04-29T19:06:51Z", "type": "commit"}, {"oid": "335a16e2f8462e9d75e7b2441d221727f66ad269", "url": "https://github.com/elastic/elasticsearch/commit/335a16e2f8462e9d75e7b2441d221727f66ad269", "message": "add task to verification group", "committedDate": "2020-04-29T19:23:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1MjcyNg==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417552726", "bodyText": "Let's use the SourceSet constants here.", "author": "mark-vieira", "createdAt": "2020-04-29T19:18:29Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +130,69 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n+        });\n+        SourceSet mainSourceSet = sourceSets.getByName(\"main\");", "originalCommit": "407062ae7cfbf7e6bb5e3095ca20a909d659b044", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "335a16e2f8462e9d75e7b2441d221727f66ad269", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\nindex 47c6039d872..33206625101 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n\n@@ -145,6 +145,7 @@ public abstract class GradleUtils {\n         SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n         TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n         testTask.configure(task -> {\n+            task.setGroup(JavaBasePlugin.VERIFICATION_GROUP);\n             task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n             task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1NTQzOA==", "url": "https://github.com/elastic/elasticsearch/pull/55896#discussion_r417555438", "bodyText": "This could also just be mainSourceSet.getOutput().plus(testSourceSet.getOutput()).plus(extraTestCompileConfig)", "author": "mark-vieira", "createdAt": "2020-04-29T19:23:21Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java", "diffHunk": "@@ -120,4 +130,69 @@ public static void maybeConfigure(TaskContainer tasks, String name, Action<? sup\n \n         return (Provider<T>) registration.getService();\n     }\n+\n+    /**\n+     * Add a source set and task of the same name that runs tests.\n+     *\n+     * IDEs are also configured if setup, and the test task is added to check. The new test source\n+     * set extends from the normal test source set to allow sharing of utilities.\n+     */\n+    public static void addTestSourceSet(Project project, String sourceSetName) {\n+        project.getPluginManager().apply(ElasticsearchJavaPlugin.class);\n+\n+        // create our test source set and task\n+        SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);\n+        SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n+        TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n+        testTask.configure(task -> {\n+            task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n+            task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n+        });\n+        SourceSet mainSourceSet = sourceSets.getByName(\"main\");\n+        SourceSet testSourceSet = sourceSets.getByName(\"test\");\n+\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getCompileConfigurationName);\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getImplementationConfigurationName);\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getRuntimeConfigurationName);\n+        extendConfiguration(project, testSourceSet, extraTestSourceSet, SourceSet::getRuntimeOnlyConfigurationName);\n+\n+        // tie this new test source set to the main and test source sets\n+        Configuration extraTestCompileConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getCompileClasspathConfigurationName());\n+        Configuration extraTestRuntimeConfig = project.getConfigurations()\n+            .getByName(extraTestSourceSet.getRuntimeClasspathConfigurationName());\n+        extraTestSourceSet.setCompileClasspath(\n+            project.getObjects().fileCollection().from(mainSourceSet.getOutput(), testSourceSet.getOutput(), extraTestCompileConfig)", "originalCommit": "407062ae7cfbf7e6bb5e3095ca20a909d659b044", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "335a16e2f8462e9d75e7b2441d221727f66ad269", "chunk": "diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\nindex 47c6039d872..33206625101 100644\n--- a/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/util/GradleUtils.java\n\n@@ -145,6 +145,7 @@ public abstract class GradleUtils {\n         SourceSet extraTestSourceSet = sourceSets.create(sourceSetName);\n         TaskProvider<Test> testTask = project.getTasks().register(sourceSetName, Test.class);\n         testTask.configure(task -> {\n+            task.setGroup(JavaBasePlugin.VERIFICATION_GROUP);\n             task.setTestClassesDirs(extraTestSourceSet.getOutput().getClassesDirs());\n             task.setClasspath(extraTestSourceSet.getRuntimeClasspath());\n         });\n"}}, {"oid": "afdeb9b17cc62c011527388991b6b7dd2ee3c7d1", "url": "https://github.com/elastic/elasticsearch/commit/afdeb9b17cc62c011527388991b6b7dd2ee3c7d1", "message": "address feedback", "committedDate": "2020-04-29T20:08:45Z", "type": "commit"}, {"oid": "6eb2b709c51bb8063a73aaeb2b10b6ec99c5eb6f", "url": "https://github.com/elastic/elasticsearch/commit/6eb2b709c51bb8063a73aaeb2b10b6ec99c5eb6f", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-04-29T20:09:23Z", "type": "commit"}, {"oid": "2031cd18e17f830762f226c463c92702414d608f", "url": "https://github.com/elastic/elasticsearch/commit/2031cd18e17f830762f226c463c92702414d608f", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-04-29T22:02:18Z", "type": "commit"}, {"oid": "ae36d8ebe53beb27b25cc64b21d77b47c3b1c288", "url": "https://github.com/elastic/elasticsearch/commit/ae36d8ebe53beb27b25cc64b21d77b47c3b1c288", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-04-29T23:23:04Z", "type": "commit"}, {"oid": "0e2fce7d419ee57a0d9d552bda39455618f6515f", "url": "https://github.com/elastic/elasticsearch/commit/0e2fce7d419ee57a0d9d552bda39455618f6515f", "message": "spotless", "committedDate": "2020-04-29T23:43:37Z", "type": "commit"}, {"oid": "7da06174f83991a543a039827d12a72e13e00ab7", "url": "https://github.com/elastic/elasticsearch/commit/7da06174f83991a543a039827d12a72e13e00ab7", "message": "delay forbidden apis resolution of classpaths", "committedDate": "2020-04-30T00:44:07Z", "type": "commit"}, {"oid": "1ec2e3eef4a2a9df239755df52f03eef75d57387", "url": "https://github.com/elastic/elasticsearch/commit/1ec2e3eef4a2a9df239755df52f03eef75d57387", "message": "only use test task for testing conventions", "committedDate": "2020-04-30T22:17:03Z", "type": "commit"}, {"oid": "dff2d36299b378a643b44788103e4f4d6de3126b", "url": "https://github.com/elastic/elasticsearch/commit/dff2d36299b378a643b44788103e4f4d6de3126b", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-04-30T22:18:18Z", "type": "commit"}, {"oid": "f47d8def567865a294cc717d067ba835c53ae634", "url": "https://github.com/elastic/elasticsearch/commit/f47d8def567865a294cc717d067ba835c53ae634", "message": "spotless", "committedDate": "2020-04-30T22:54:52Z", "type": "commit"}, {"oid": "76a287f06108e86cd8a0984a87a15cd1ad7f5968", "url": "https://github.com/elastic/elasticsearch/commit/76a287f06108e86cd8a0984a87a15cd1ad7f5968", "message": "update docs and include integTest in testing conventions", "committedDate": "2020-04-30T23:56:02Z", "type": "commit"}, {"oid": "0441c28c892dc0f18fd0ada1fdf76728f4851631", "url": "https://github.com/elastic/elasticsearch/commit/0441c28c892dc0f18fd0ada1fdf76728f4851631", "message": "default to all test tasks for testing conventions", "committedDate": "2020-05-01T00:05:04Z", "type": "commit"}, {"oid": "28dbb1e51383d1d9da7fc066ecc9eb7bf40b4ceb", "url": "https://github.com/elastic/elasticsearch/commit/28dbb1e51383d1d9da7fc066ecc9eb7bf40b4ceb", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-05-04T23:04:20Z", "type": "commit"}, {"oid": "e7badf3769197fcece7f129ce596a3890121b20c", "url": "https://github.com/elastic/elasticsearch/commit/e7badf3769197fcece7f129ce596a3890121b20c", "message": "imports", "committedDate": "2020-05-04T23:04:41Z", "type": "commit"}, {"oid": "da34a9425cdd72bebb33f3d803a9b91c61dba864", "url": "https://github.com/elastic/elasticsearch/commit/da34a9425cdd72bebb33f3d803a9b91c61dba864", "message": "imports again", "committedDate": "2020-05-05T17:18:27Z", "type": "commit"}, {"oid": "b670ae445e84f0013a3689d4fd085f4836c0d724", "url": "https://github.com/elastic/elasticsearch/commit/b670ae445e84f0013a3689d4fd085f4836c0d724", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-05-05T17:23:28Z", "type": "commit"}, {"oid": "ac149441310f998c4aaee17e9ec29c4b81a9cf5d", "url": "https://github.com/elastic/elasticsearch/commit/ac149441310f998c4aaee17e9ec29c4b81a9cf5d", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-05-05T22:11:24Z", "type": "commit"}, {"oid": "e5d8d9bf3a8670e22ba1c9a83e4678d26da4d21f", "url": "https://github.com/elastic/elasticsearch/commit/e5d8d9bf3a8670e22ba1c9a83e4678d26da4d21f", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-05-06T04:31:55Z", "type": "commit"}, {"oid": "bfad4b340ab6e83f72c9033933b76d5152a4e45f", "url": "https://github.com/elastic/elasticsearch/commit/bfad4b340ab6e83f72c9033933b76d5152a4e45f", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-05-06T17:12:05Z", "type": "commit"}, {"oid": "25341b1642b939d0e37cc79a74c3ee756f3f8ec1", "url": "https://github.com/elastic/elasticsearch/commit/25341b1642b939d0e37cc79a74c3ee756f3f8ec1", "message": "Merge branch 'master' into buildsplit3", "committedDate": "2020-05-06T23:02:00Z", "type": "commit"}]}