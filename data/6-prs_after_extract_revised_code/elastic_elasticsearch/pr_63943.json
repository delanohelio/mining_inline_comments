{"pr_number": 63943, "pr_title": "Cache Expensive Index Stats in TransportClusterStatsAction", "pr_createdAt": "2020-10-20T14:16:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63943", "timeline": [{"oid": "937e71b53fbb8b8e504e6b42a7b8282551b38be0", "url": "https://github.com/elastic/elasticsearch/commit/937e71b53fbb8b8e504e6b42a7b8282551b38be0", "message": "Cache Expensive Index Stats in TransportClusterStatsAction\n\nFollow up to #62753, which moved this expensive method off of the transport threads.\nOften times monitoring will hit this endpoint every few seconds while the metadata\nwill likely change at a much slower interval.\nGiven that in practice the computation of the stats might take up to a minute for large\ncluster states, caching them on a best-effort basis seems like a reasonable improvement.", "committedDate": "2020-10-20T14:08:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU1MTgzNA==", "url": "https://github.com/elastic/elasticsearch/pull/63943#discussion_r508551834", "bodyText": "Obviously this isn't sticky but in practice this will mostly be called on master by monitoring and the overhead of this is small. And even if this is less helpful for the stats REST API it's going to often help anyway statistically speaking I'd expect it to \"often\" help still.", "author": "original-brownbear", "createdAt": "2020-10-20T14:21:48Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java", "diffHunk": "@@ -55,13 +58,21 @@\n public class TransportClusterStatsAction extends TransportNodesAction<ClusterStatsRequest, ClusterStatsResponse,\n         TransportClusterStatsAction.ClusterStatsNodeRequest, ClusterStatsNodeResponse> {\n \n+    private static final Logger logger = LogManager.getLogger(TransportClusterStatsAction.class);\n+\n     private static final CommonStatsFlags SHARD_STATS_FLAGS = new CommonStatsFlags(CommonStatsFlags.Flag.Docs, CommonStatsFlags.Flag.Store,\n         CommonStatsFlags.Flag.FieldData, CommonStatsFlags.Flag.QueryCache,\n         CommonStatsFlags.Flag.Completion, CommonStatsFlags.Flag.Segments);\n \n     private final NodeService nodeService;\n     private final IndicesService indicesService;\n \n+    // guards #mappingStats, #analysisStats and #metaVersion\n+    private final Object statsMutex = new Object();\n+\n+    private MappingStats mappingStats;", "originalCommit": "937e71b53fbb8b8e504e6b42a7b8282551b38be0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU3ODM1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/63943#discussion_r508578352", "bodyText": "I'm absolutely out of practice here, so please do correct me if I'm wrong, but should metaVersion be volatile?", "author": "joegallo", "createdAt": "2020-10-20T14:52:49Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java", "diffHunk": "@@ -55,13 +58,21 @@\n public class TransportClusterStatsAction extends TransportNodesAction<ClusterStatsRequest, ClusterStatsResponse,\n         TransportClusterStatsAction.ClusterStatsNodeRequest, ClusterStatsNodeResponse> {\n \n+    private static final Logger logger = LogManager.getLogger(TransportClusterStatsAction.class);\n+\n     private static final CommonStatsFlags SHARD_STATS_FLAGS = new CommonStatsFlags(CommonStatsFlags.Flag.Docs, CommonStatsFlags.Flag.Store,\n         CommonStatsFlags.Flag.FieldData, CommonStatsFlags.Flag.QueryCache,\n         CommonStatsFlags.Flag.Completion, CommonStatsFlags.Flag.Segments);\n \n     private final NodeService nodeService;\n     private final IndicesService indicesService;\n \n+    // guards #mappingStats, #analysisStats and #metaVersion\n+    private final Object statsMutex = new Object();\n+\n+    private MappingStats mappingStats;\n+    private AnalysisStats analysisStats;\n+    private long metaVersion = -1L;", "originalCommit": "937e71b53fbb8b8e504e6b42a7b8282551b38be0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYwMjE1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/63943#discussion_r508602157", "bodyText": "No need for that. We only ever touch that field under the statsMutex so we are guaranteed to always have a consistent view of it.", "author": "original-brownbear", "createdAt": "2020-10-20T15:21:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU3ODM1Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE0NTkwMw==", "url": "https://github.com/elastic/elasticsearch/pull/63943#discussion_r512145903", "bodyText": "Just a drive-by comment (I'll leave the full review to Dan), but can you rename these variables? I think shadowing class variables (outside of constructors) can lead to bugs for people who reference it not realizing which one they're getting", "author": "dakrone", "createdAt": "2020-10-26T17:34:48Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java", "diffHunk": "@@ -77,14 +88,43 @@ protected ClusterStatsResponse newResponse(ClusterStatsRequest request,\n                                                List<ClusterStatsNodeResponse> responses, List<FailedNodeException> failures) {\n         assert Transports.assertNotTransportThread(\"Constructor of ClusterStatsResponse runs expensive computations on mappings found in\" +\n                 \" the cluster state that are too slow for a transport thread\");\n-        ClusterState state = clusterService.state();\n+        final ClusterState state = clusterService.state();\n+        final Metadata metadata = state.metadata();\n+        MappingStats mappingStats = null;\n+        AnalysisStats analysisStats = null;", "originalCommit": "937e71b53fbb8b8e504e6b42a7b8282551b38be0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c5b1eca308d0d9925880fcaac5322220812d1ec3", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java b/server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java\nindex 833efd44672..5046b6d8318 100644\n--- a/server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java\n+++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java\n\n@@ -90,30 +90,30 @@ public class TransportClusterStatsAction extends TransportNodesAction<ClusterSta\n                 \" the cluster state that are too slow for a transport thread\");\n         final ClusterState state = clusterService.state();\n         final Metadata metadata = state.metadata();\n-        MappingStats mappingStats = null;\n-        AnalysisStats analysisStats = null;\n+        MappingStats currentMappingStats = null;\n+        AnalysisStats currentAnalysisStats = null;\n         // check if we already served a stats request for the current metadata version and have the stats cached\n         synchronized (statsMutex) {\n             if (metadata.version() == metaVersion) {\n                 logger.trace(\"Found cached mapping and analysis stats for metadata version [{}]\", metadata.version());\n-                mappingStats = this.mappingStats;\n-                analysisStats = this.analysisStats;\n+                currentMappingStats = this.mappingStats;\n+                currentAnalysisStats = this.analysisStats;\n             }\n         }\n-        if (mappingStats == null) {\n+        if (currentMappingStats == null) {\n             // we didn't find any cached stats so we recompute them outside the mutex since the computation might be expensive for larger\n             // cluster states\n             logger.trace(\"Computing mapping and analysis stats for metadata version [{}]\", metadata.version());\n-            mappingStats = MappingStats.of(metadata);\n-            analysisStats = AnalysisStats.of(metadata);\n+            currentMappingStats = MappingStats.of(metadata);\n+            currentAnalysisStats = AnalysisStats.of(metadata);\n             synchronized (statsMutex) {\n                 // cache the computed stats unless they became outdated because of a concurrent cluster state update and a concurrent\n                 // stats request has already cached a newer version\n                 if (metadata.version() > metaVersion) {\n                     logger.trace(\"Caching mapping and analysis stats for metadata version [{}]\", metadata.version());\n                     metaVersion = metadata.version();\n-                    this.mappingStats = mappingStats;\n-                    this.analysisStats = analysisStats;\n+                    this.mappingStats = currentMappingStats;\n+                    this.analysisStats = currentAnalysisStats;\n                 }\n             }\n         }\n"}}, {"oid": "193f92d2f51f85f758ed6adbd28d3ab9c7a17c26", "url": "https://github.com/elastic/elasticsearch/commit/193f92d2f51f85f758ed6adbd28d3ab9c7a17c26", "message": "Merge remote-tracking branch 'elastic/master' into make-monitoring-less-crazy-expensive", "committedDate": "2020-10-26T20:11:57Z", "type": "commit"}, {"oid": "c5b1eca308d0d9925880fcaac5322220812d1ec3", "url": "https://github.com/elastic/elasticsearch/commit/c5b1eca308d0d9925880fcaac5322220812d1ec3", "message": "rename local var", "committedDate": "2020-10-26T20:15:00Z", "type": "commit"}]}