{"pr_number": 65776, "pr_title": "Store _doc_count field as custom term frequency", "pr_createdAt": "2020-12-02T20:28:34Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65776", "timeline": [{"oid": "dd98abd882fcb9a69dd00859dfd47f6b6e491eeb", "url": "https://github.com/elastic/elasticsearch/commit/dd98abd882fcb9a69dd00859dfd47f6b6e491eeb", "message": "initial commit for doc_count field", "committedDate": "2020-12-02T20:21:12Z", "type": "commit"}, {"oid": "9c42ab9bd000b5ae3ec3d94ae94ed8dadd253e05", "url": "https://github.com/elastic/elasticsearch/commit/9c42ab9bd000b5ae3ec3d94ae94ed8dadd253e05", "message": "Minor change", "committedDate": "2020-12-02T20:36:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyNjI5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r534526297", "bodyText": "maybe use the same exception type as termQuery?", "author": "jpountz", "createdAt": "2020-12-02T22:32:06Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java", "diffHunk": "@@ -55,12 +52,12 @@ public String typeName() {\n \n         @Override\n         public String familyTypeName() {\n-            return NumberFieldMapper.NumberType.LONG.typeName();\n+            return NumberFieldMapper.NumberType.INTEGER.typeName();\n         }\n \n         @Override\n         public Query existsQuery(QueryShardContext context) {\n-            return new DocValuesFieldExistsQuery(NAME);\n+            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] does not support exists queries\");", "originalCommit": "9c42ab9bd000b5ae3ec3d94ae94ed8dadd253e05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "300e8bc01a7d42801a9ae0ed025997ae36975c73", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java\nindex 89f9467bf0f..9736a7b73fc 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java\n\n@@ -57,7 +57,7 @@ public class DocCountFieldMapper extends MetadataFieldMapper {\n \n         @Override\n         public Query existsQuery(QueryShardContext context) {\n-            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] does not support exists queries\");\n+            throw new QueryShardException(context, \"Field [\" + name() + \"] of type [\" + typeName() + \"] does not support exists queries\");\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyNzI1MA==", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r534527250", "bodyText": "should it be DEFAULT_VALUE since it is a constant?", "author": "jpountz", "createdAt": "2020-12-02T22:33:48Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/DocCountProvider.java", "diffHunk": "@@ -33,17 +33,25 @@\n  */\n public class DocCountProvider {\n \n-    private NumericDocValues docCountValues;\n+    public static final int defaultValue = DocCountFieldMapper.DocCountFieldType.defaultValue;", "originalCommit": "9c42ab9bd000b5ae3ec3d94ae94ed8dadd253e05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MTcwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r534551701", "bodyText": "Originally, I had it DEFAULT_VALUE, but then changed it so that is inline with DocCountFieldMapper.DocCountFieldType.defaultValue which is also a constant.\nChanging it for both fields", "author": "csoulios", "createdAt": "2020-12-02T23:26:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyNzI1MA=="}], "type": "inlineReview", "revised_code": {"commit": "3c37312fafe5f716413a0b32ca071bc6579c2736", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/DocCountProvider.java b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/DocCountProvider.java\nindex 837e5f2d67c..5b29c82a405 100644\n--- a/server/src/main/java/org/elasticsearch/search/aggregations/bucket/DocCountProvider.java\n+++ b/server/src/main/java/org/elasticsearch/search/aggregations/bucket/DocCountProvider.java\n\n@@ -33,13 +33,13 @@ import java.io.IOException;\n  */\n public class DocCountProvider {\n \n-    public static final int defaultValue = DocCountFieldMapper.DocCountFieldType.defaultValue;\n+    public static final int DEFAULT_VALUE = DocCountFieldMapper.DocCountFieldType.DEFAULT_VALUE;\n \n     private PostingsEnum docCountPostings;\n \n     public int getDocCount(int doc) throws IOException {\n         if (docCountPostings == null) {\n-            return defaultValue;\n+            return DEFAULT_VALUE;\n         }\n         if (docCountPostings.docID() < doc) {\n             docCountPostings.advance(doc);\n"}}, {"oid": "3c37312fafe5f716413a0b32ca071bc6579c2736", "url": "https://github.com/elastic/elasticsearch/commit/3c37312fafe5f716413a0b32ca071bc6579c2736", "message": "Minor changes to variable names", "committedDate": "2020-12-02T23:28:40Z", "type": "commit"}, {"oid": "300e8bc01a7d42801a9ae0ed025997ae36975c73", "url": "https://github.com/elastic/elasticsearch/commit/300e8bc01a7d42801a9ae0ed025997ae36975c73", "message": "Address reviewer comments", "committedDate": "2020-12-03T10:09:30Z", "type": "commit"}, {"oid": "4d77def5b625392cfbb5574f726cffd390cf21f4", "url": "https://github.com/elastic/elasticsearch/commit/4d77def5b625392cfbb5574f726cffd390cf21f4", "message": "Added check to forbid arrays as values of _doc_count field", "committedDate": "2020-12-03T11:04:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE5MTMyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r535191329", "bodyText": "nit: I'd rather drop this constructor and require callers of this class to think about what is the right field name and term they should use", "author": "jpountz", "createdAt": "2020-12-03T12:34:50Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/CustomTermFreqField.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.analysis.Analyzer;\n+import org.apache.lucene.analysis.TokenStream;\n+import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;\n+import org.apache.lucene.analysis.tokenattributes.TermFrequencyAttribute;\n+import org.apache.lucene.document.Field;\n+import org.apache.lucene.document.FieldType;\n+import org.apache.lucene.index.IndexOptions;\n+\n+/**\n+ * Custom field that allow storing an integer value as a term frequency in lucene.\n+ */\n+public final class CustomTermFreqField extends Field {\n+\n+  private static final FieldType FIELD_TYPE = new FieldType();\n+  static {\n+    FIELD_TYPE.setTokenized(false);\n+    FIELD_TYPE.setOmitNorms(true);\n+    FIELD_TYPE.setIndexOptions(IndexOptions.DOCS_AND_FREQS);\n+  }\n+\n+  private int fieldValue;\n+\n+  public CustomTermFreqField(String fieldName, CharSequence term, int fieldValue) {\n+    super(fieldName, term, FIELD_TYPE);\n+    this.fieldValue = fieldValue;\n+  }\n+\n+  public CustomTermFreqField(String fieldName, int fieldValue) {\n+    this(fieldName, fieldName, fieldValue);\n+  }", "originalCommit": "4d77def5b625392cfbb5574f726cffd390cf21f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ffbcea48871c63de4ee1e5a80fdfd3152ff5d876", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/CustomTermFreqField.java b/server/src/main/java/org/elasticsearch/index/mapper/CustomTermFreqField.java\nindex 28961c12589..b057f60015e 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/CustomTermFreqField.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/CustomTermFreqField.java\n\n@@ -28,7 +28,7 @@ import org.apache.lucene.document.FieldType;\n import org.apache.lucene.index.IndexOptions;\n \n /**\n- * Custom field that allow storing an integer value as a term frequency in lucene.\n+ * Custom field that allows storing an integer value as a term frequency in lucene.\n  */\n public final class CustomTermFreqField extends Field {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE5NDgxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/65776#discussion_r535194811", "bodyText": "This method is a bit trappy as it does a linear scan of the fields of the document. Can you use addWithKey like BinaryFieldMapper does?", "author": "jpountz", "createdAt": "2020-12-03T12:40:30Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java", "diffHunk": "@@ -96,17 +93,19 @@ protected void parseCreateField(ParseContext context) throws IOException {\n         XContentParser parser = context.parser();\n         XContentParserUtils.ensureExpectedToken(XContentParser.Token.VALUE_NUMBER, parser.currentToken(), parser);\n \n-        long value = parser.longValue(false);\n+        // Check that _doc_count is a single value and not an array\n+        if (context.doc().getField(NAME) != null) {", "originalCommit": "4d77def5b625392cfbb5574f726cffd390cf21f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ffbcea48871c63de4ee1e5a80fdfd3152ff5d876", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java\nindex 5e4f1bcf465..b811b103977 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java\n\n@@ -94,7 +94,7 @@ public class DocCountFieldMapper extends MetadataFieldMapper {\n         XContentParserUtils.ensureExpectedToken(XContentParser.Token.VALUE_NUMBER, parser.currentToken(), parser);\n \n         // Check that _doc_count is a single value and not an array\n-        if (context.doc().getField(NAME) != null) {\n+        if (context.doc().getByKey(NAME) != null) {\n             throw new IllegalArgumentException(\"Arrays are not allowed for field [\" + fieldType().name() + \"].\");\n         }\n \n"}}, {"oid": "ffbcea48871c63de4ee1e5a80fdfd3152ff5d876", "url": "https://github.com/elastic/elasticsearch/commit/ffbcea48871c63de4ee1e5a80fdfd3152ff5d876", "message": "Addressed reviewer comments", "committedDate": "2020-12-03T13:45:54Z", "type": "commit"}]}