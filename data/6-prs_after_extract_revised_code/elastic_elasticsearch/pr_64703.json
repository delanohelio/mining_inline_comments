{"pr_number": 64703, "pr_title": "Small Simplifications DiskThresholdDecider", "pr_createdAt": "2020-11-06T12:45:14Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64703", "timeline": [{"oid": "905c2c29f21361f756cca986814fc4b28a486f0a", "url": "https://github.com/elastic/elasticsearch/commit/905c2c29f21361f756cca986814fc4b28a486f0a", "message": "Small Simplifications DiskThresholdDecider\n\nSome smaller improvements in the direction of #62275 and removal of some\ndead code and duplication.", "committedDate": "2020-11-06T12:16:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc3MjU4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/64703#discussion_r518772585", "bodyText": "This check is dead code, both calling methods to this method use the clusterInfo before it runs so it's never null here for sure.", "author": "original-brownbear", "createdAt": "2020-11-06T14:06:35Z", "path": "server/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java", "diffHunk": "@@ -425,35 +424,29 @@ DiskUsage averageUsage(RoutingNode node, ImmutableOpenMap<String, DiskUsage> usa\n         return newUsage.getFreeDiskAsPercentage();\n     }\n \n+    private static final Decision YES_DISABLED = Decision.single(Decision.Type.YES, NAME, \"the disk threshold decider is disabled\");\n+\n+    private static final Decision YES_SINGLE_DATA_NODE =\n+            Decision.single(Decision.Type.YES, NAME, \"there is only a single data node present\");\n+\n+    private static final Decision YES_USAGES_UNAVAILABLE = Decision.single(Decision.Type.YES, NAME, \"disk usages are unavailable\");\n+\n     private Decision earlyTerminate(RoutingAllocation allocation, ImmutableOpenMap<String, DiskUsage> usages) {\n         // Always allow allocation if the decider is disabled\n         if (diskThresholdSettings.isEnabled() == false) {\n-            return allocation.decision(Decision.YES, NAME, \"the disk threshold decider is disabled\");\n+            return YES_DISABLED;\n         }\n \n         // Allow allocation regardless if only a single data node is available\n         if (enableForSingleDataNode == false && allocation.nodes().getDataNodes().size() <= 1) {\n-            if (logger.isTraceEnabled()) {\n-                logger.trace(\"only a single data node is present, allowing allocation\");\n-            }\n-            return allocation.decision(Decision.YES, NAME, \"there is only a single data node present\");\n-        }\n-\n-        // Fail open there is no info available\n-        final ClusterInfo clusterInfo = allocation.clusterInfo();\n-        if (clusterInfo == null) {", "originalCommit": "905c2c29f21361f756cca986814fc4b28a486f0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}