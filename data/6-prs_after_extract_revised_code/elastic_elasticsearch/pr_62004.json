{"pr_number": 62004, "pr_title": "Convert completion, binary, boolean tests to MapperTestCase", "pr_createdAt": "2020-09-04T16:12:28Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62004", "timeline": [{"oid": "57756c3273a901167170250bbe19d504e40776ce", "url": "https://github.com/elastic/elasticsearch/commit/57756c3273a901167170250bbe19d504e40776ce", "message": "Convert completion, binary, boolean tests to MapperTestCase", "committedDate": "2020-09-04T16:08:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyMzY0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62004#discussion_r483723643", "bodyText": "\ud83d\udc4d", "author": "nik9000", "createdAt": "2020-09-04T16:21:00Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java", "diffHunk": "@@ -187,6 +187,9 @@ protected void toXContent(XContentBuilder builder, boolean includeDefaults) thro\n                 this.contexts.getValue().toXContent(builder, ToXContent.EMPTY_PARAMS);\n                 builder.endArray();\n             }\n+            if (this.meta.getValue().isEmpty() == false) {", "originalCommit": "57756c3273a901167170250bbe19d504e40776ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyNDEwNA==", "url": "https://github.com/elastic/elasticsearch/pull/62004#discussion_r483724104", "bodyText": "Hit this one with the formatter please!", "author": "nik9000", "createdAt": "2020-09-04T16:21:59Z", "path": "server/src/test/java/org/elasticsearch/index/mapper/BooleanFieldMapperTests.java", "diffHunk": "@@ -137,109 +88,67 @@ public void testSerialization() throws IOException {\n     }\n \n     public void testParsesBooleansStrict() throws IOException {\n-        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n-            .startObject()\n-                .startObject(\"type\")\n-                    .startObject(\"properties\")\n-                        .startObject(\"field\")\n-                            .field(\"type\", \"boolean\")\n-                        .endObject()\n-                    .endObject()\n-                .endObject()\n-            .endObject());\n-        DocumentMapper defaultMapper = parser.parse(\"type\", new CompressedXContent(mapping));\n+        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n         // omit \"false\"/\"true\" here as they should still be parsed correctly\n-        String randomValue = randomFrom(\"off\", \"no\", \"0\", \"on\", \"yes\", \"1\");\n-        BytesReference source = BytesReference.bytes(XContentFactory.jsonBuilder()\n-                .startObject()\n-                    .field(\"field\", randomValue)\n-                .endObject());\n-        MapperParsingException ex = expectThrows(MapperParsingException.class,\n-                () -> defaultMapper.parse(new SourceToParse(\"test\", \"1\", source, XContentType.JSON)));\n-        assertEquals(\"failed to parse field [field] of type [boolean] in document with id '1'. \" +\n-            \"Preview of field's value: '\" + randomValue + \"'\", ex.getMessage());\n+        for (String value: new String[]{\"off\", \"no\", \"0\", \"on\", \"yes\", \"1\"}) {", "originalCommit": "57756c3273a901167170250bbe19d504e40776ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e7814afb9bae39dba5e77bb7e1a4716ef296238", "chunk": "diff --git a/server/src/test/java/org/elasticsearch/index/mapper/BooleanFieldMapperTests.java b/server/src/test/java/org/elasticsearch/index/mapper/BooleanFieldMapperTests.java\nindex 451d28f7977..f287cd635fe 100644\n--- a/server/src/test/java/org/elasticsearch/index/mapper/BooleanFieldMapperTests.java\n+++ b/server/src/test/java/org/elasticsearch/index/mapper/BooleanFieldMapperTests.java\n\n@@ -90,7 +90,7 @@ public class BooleanFieldMapperTests extends MapperTestCase {\n     public void testParsesBooleansStrict() throws IOException {\n         DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n         // omit \"false\"/\"true\" here as they should still be parsed correctly\n-        for (String value: new String[]{\"off\", \"no\", \"0\", \"on\", \"yes\", \"1\"}) {\n+        for (String value : new String[]{\"off\", \"no\", \"0\", \"on\", \"yes\", \"1\"}) {\n             MapperParsingException ex = expectThrows(MapperParsingException.class,\n                 () -> defaultMapper.parse(source(b -> b.field(\"field\", value))));\n             assertEquals(\"failed to parse field [field] of type [boolean] in document with id '1'. \" +\n"}}, {"oid": "5e7814afb9bae39dba5e77bb7e1a4716ef296238", "url": "https://github.com/elastic/elasticsearch/commit/5e7814afb9bae39dba5e77bb7e1a4716ef296238", "message": "stylee", "committedDate": "2020-09-04T16:40:57Z", "type": "commit"}]}