{"pr_number": 55428, "pr_title": "Return true for can_match on idle search shards", "pr_createdAt": "2020-04-18T17:57:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55428", "timeline": [{"oid": "2343f40857e483fe95edf97ce6484310fbe0218d", "url": "https://github.com/elastic/elasticsearch/commit/2343f40857e483fe95edf97ce6484310fbe0218d", "message": "Can_match requests should wait for search active", "committedDate": "2020-04-18T17:16:20Z", "type": "commit"}, {"oid": "d30c2199b36ed9372b779be5c617366b6a4cac4d", "url": "https://github.com/elastic/elasticsearch/commit/d30c2199b36ed9372b779be5c617366b6a4cac4d", "message": "Merge branch 'master' into can_match_wait_for_refresh", "committedDate": "2020-04-18T22:06:13Z", "type": "commit"}, {"oid": "e91b71825693f0fc78944b3e0af7673278b46f72", "url": "https://github.com/elastic/elasticsearch/commit/e91b71825693f0fc78944b3e0af7673278b46f72", "message": "Merge branch 'master' into can_match_wait_for_refresh", "committedDate": "2020-04-20T02:12:43Z", "type": "commit"}, {"oid": "3b1dde9ffb493ca09bd1c9722fcf6fa7b34e35ed", "url": "https://github.com/elastic/elasticsearch/commit/3b1dde9ffb493ca09bd1c9722fcf6fa7b34e35ed", "message": "skip can_match", "committedDate": "2020-04-20T02:42:57Z", "type": "commit"}, {"oid": "09c7e66169a3b432ede53cb273ec8f502d8a941e", "url": "https://github.com/elastic/elasticsearch/commit/09c7e66169a3b432ede53cb273ec8f502d8a941e", "message": "unused imports", "committedDate": "2020-04-20T02:46:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NzcwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/55428#discussion_r411167709", "bodyText": "Do we also need to check whether there are changes that have not been refreshed? Otherwise this change will have a terrible effiect on the warm tier by returning can_match=true up to once per second even though no changes are being made to indices? Or are we already protected against this?", "author": "jpountz", "createdAt": "2020-04-20T07:51:43Z", "path": "server/src/main/java/org/elasticsearch/search/SearchService.java", "diffHunk": "@@ -1113,6 +1113,9 @@ public CanMatchResponse canMatch(ShardSearchRequest request) throws IOException\n         assert request.searchType() == SearchType.QUERY_THEN_FETCH : \"unexpected search type: \" + request.searchType();\n         IndexService indexService = indicesService.indexServiceSafe(request.shardId().getIndex());\n         IndexShard indexShard = indexService.getShard(request.shardId().getId());\n+        if (indexShard.isSearchIdle()) {", "originalCommit": "09c7e66169a3b432ede53cb273ec8f502d8a941e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQyNTQ4OA==", "url": "https://github.com/elastic/elasticsearch/pull/55428#discussion_r411425488", "bodyText": "Good catch. I pushed 0e7f976.", "author": "dnhatn", "createdAt": "2020-04-20T14:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NzcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzNzM0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/55428#discussion_r411637349", "bodyText": "I wonder if we can still extract the min/max values of the primary sort since we don't need the values to be accurate and use it only to order the shards execution. If indices are in the warm tier they should contain some recent data that we'd like to visit first if the query is sorted by timestamp.", "author": "jimczi", "createdAt": "2020-04-20T19:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NzcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2MDA4NA==", "url": "https://github.com/elastic/elasticsearch/pull/55428#discussion_r411660084", "bodyText": "This sounds potentially dangerous to me. I wouldn't think of the special case of search-idle indices if someone raised an idea that would leverage min/max values and rely on the fact that the max value to be an upper bound and the min value to be a lower bound?", "author": "jpountz", "createdAt": "2020-04-20T20:12:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NzcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4OTg4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/55428#discussion_r411689885", "bodyText": "We don't have this guarantee today either, the reader of the query phase can be different from the one used in the can match phase. I can update the comments to make it more clear in the code that we don't create a point in time reader during the can match phase.", "author": "jimczi", "createdAt": "2020-04-20T21:02:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NzcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzNTA2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/55428#discussion_r411935065", "bodyText": "I agree that the can_match phase might get a different reader from the query phase, but I'm less concerned by this since the reader we get in the can_match phase would also be a legal reader to run the query phase on, which isn't the case here? I don't feel strongly about this, ok to return the min/max values and +1 to document this.", "author": "jpountz", "createdAt": "2020-04-21T07:21:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NzcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA0NTI4OA==", "url": "https://github.com/elastic/elasticsearch/pull/55428#discussion_r412045288", "bodyText": "Right, I also thought about this because having these guarantees would mean that we can filter shards on the coord node based on these values. We don't do this today because of search-idle shards so we delay the skipping when verifying the values locally during the query phase.\nThe other option that was proposed by Nhat in this pr was to perform the refresh of search-idle shards during the can_match phase. It has the advantage of making all min/max values accurate for the search request but could make the phase much slower.\n\nI don't feel strongly about this, ok to return the min/max values and +1 to document this.\n\n++, thanks", "author": "jimczi", "createdAt": "2020-04-21T09:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NzcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwMDA5MA==", "url": "https://github.com/elastic/elasticsearch/pull/55428#discussion_r412200090", "bodyText": "Thanks Adrien and Jim for the discussion here. I pushed 80f492f.", "author": "dnhatn", "createdAt": "2020-04-21T13:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE2NzcwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "0e7f9767583ccf66d89eb8600fa9c234b83cb8ac", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/search/SearchService.java b/server/src/main/java/org/elasticsearch/search/SearchService.java\nindex 463e7279eff..f35c6484f8c 100644\n--- a/server/src/main/java/org/elasticsearch/search/SearchService.java\n+++ b/server/src/main/java/org/elasticsearch/search/SearchService.java\n\n@@ -1113,7 +1113,7 @@ public class SearchService extends AbstractLifecycleComponent implements IndexEv\n         assert request.searchType() == SearchType.QUERY_THEN_FETCH : \"unexpected search type: \" + request.searchType();\n         IndexService indexService = indicesService.indexServiceSafe(request.shardId().getIndex());\n         IndexShard indexShard = indexService.getShard(request.shardId().getId());\n-        if (indexShard.isSearchIdle()) {\n+        if (indexShard.hasRefreshPending()) {\n             return new CanMatchResponse(true, null);\n         }\n         // we don't want to use the reader wrapper since it could run costly operations\n"}}, {"oid": "0e7f9767583ccf66d89eb8600fa9c234b83cb8ac", "url": "https://github.com/elastic/elasticsearch/commit/0e7f9767583ccf66d89eb8600fa9c234b83cb8ac", "message": "pending refresh", "committedDate": "2020-04-20T14:23:51Z", "type": "commit"}, {"oid": "7d4bc41aa60b483bd660bcbc87354a34dd45ee2b", "url": "https://github.com/elastic/elasticsearch/commit/7d4bc41aa60b483bd660bcbc87354a34dd45ee2b", "message": "Merge branch 'master' into can_match_wait_for_refresh", "committedDate": "2020-04-21T13:10:29Z", "type": "commit"}, {"oid": "80f492ff64e41d1f78a58a4cd537f7396a3230cc", "url": "https://github.com/elastic/elasticsearch/commit/80f492ff64e41d1f78a58a4cd537f7396a3230cc", "message": "minAndMax -> estimatedMinAndMax", "committedDate": "2020-04-21T13:46:26Z", "type": "commit"}]}