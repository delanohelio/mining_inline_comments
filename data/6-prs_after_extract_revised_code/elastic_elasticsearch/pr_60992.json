{"pr_number": 60992, "pr_title": "Add `doc` fields to script factory", "pr_createdAt": "2020-08-11T21:04:42Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60992", "timeline": [{"oid": "1faf044f94a7e22212667beb5c45901df596620c", "url": "https://github.com/elastic/elasticsearch/commit/1faf044f94a7e22212667beb5c45901df596620c", "message": "Add `doc` fields to script factory\n\nThis causes painless to generate the `docFields` method on every script\nfactory. It returns a `List<String>` containing all of the constant\nkeys passed to the `doc` variable's `get` method.", "committedDate": "2020-08-11T20:59:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkxMjA1NA==", "url": "https://github.com/elastic/elasticsearch/pull/60992#discussion_r468912054", "bodyText": "We should probably only have this method if it's on the base factory.", "author": "jdconrad", "createdAt": "2020-08-11T23:03:06Z", "path": "modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java", "diffHunk": "@@ -341,6 +341,24 @@ public Loader run() {\n         deterAdapter.returnValue();\n         deterAdapter.endMethod();\n \n+        org.objectweb.asm.commons.Method docFields = new org.objectweb.asm.commons.Method(methodName,", "originalCommit": "616654daa5b9fc57286546422a11b43d4a4db8c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8719acff5ecf2b1bd07d762864cdeb8150b11489", "chunk": "diff --git a/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java b/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java\nindex 743597b3853..a81d7c99e11 100644\n--- a/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java\n+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java\n\n@@ -341,23 +340,31 @@ public final class PainlessScriptEngine implements ScriptEngine {\n         deterAdapter.returnValue();\n         deterAdapter.endMethod();\n \n-        org.objectweb.asm.commons.Method docFields = new org.objectweb.asm.commons.Method(methodName,\n-            MethodType.methodType(List.class).toMethodDescriptorString());\n-        GeneratorAdapter docAdapter = new GeneratorAdapter(Opcodes.ASM5, docFields,\n-            writer.visitMethod(Opcodes.ACC_PUBLIC, \"docFields\", docFields.getDescriptor(), null, null));\n-        docAdapter.visitCode();\n-        docAdapter.newInstance(WriterConstants.ARRAY_LIST_TYPE);\n-        docAdapter.dup();\n-        docAdapter.push(scriptScope.docFields().size());\n-        docAdapter.invokeConstructor(WriterConstants.ARRAY_LIST_TYPE, WriterConstants.ARRAY_LIST_CTOR_WITH_SIZE);\n-        for (int i = 0; i < scriptScope.docFields().size(); i++) {\n+        if (docFieldsReflect != null) {\n+            if (false == docFieldsReflect.getReturnType().equals(List.class)) {\n+                throw new IllegalArgumentException(\"doc_fields must return a List\");\n+            }\n+            if (docFieldsReflect.getParameterCount() != 0) {\n+                throw new IllegalArgumentException(\"doc_fields may not take parameters\");\n+            }\n+            org.objectweb.asm.commons.Method docFields = new org.objectweb.asm.commons.Method(docFieldsReflect.getName(),\n+                MethodType.methodType(List.class).toMethodDescriptorString());\n+            GeneratorAdapter docAdapter = new GeneratorAdapter(Opcodes.ASM5, docFields,\n+                writer.visitMethod(Opcodes.ACC_PUBLIC, docFieldsReflect.getName(), docFields.getDescriptor(), null, null));\n+            docAdapter.visitCode();\n+            docAdapter.newInstance(WriterConstants.ARRAY_LIST_TYPE);\n             docAdapter.dup();\n-            docAdapter.push(scriptScope.docFields().get(i));\n-            docAdapter.invokeInterface(WriterConstants.LIST_TYPE, WriterConstants.LIST_ADD);\n-            docAdapter.pop(); // Don't want the result of calling add\n+            docAdapter.push(scriptScope.docFields().size());\n+            docAdapter.invokeConstructor(WriterConstants.ARRAY_LIST_TYPE, WriterConstants.ARRAY_LIST_CTOR_WITH_SIZE);\n+            for (int i = 0; i < scriptScope.docFields().size(); i++) {\n+                docAdapter.dup();\n+                docAdapter.push(scriptScope.docFields().get(i));\n+                docAdapter.invokeInterface(WriterConstants.LIST_TYPE, WriterConstants.LIST_ADD);\n+                docAdapter.pop(); // Don't want the result of calling add\n+            }\n+            docAdapter.returnValue();\n+            docAdapter.endMethod();\n         }\n-        docAdapter.returnValue();\n-        docAdapter.endMethod();\n \n         writer.visitEnd();\n         Class<?> factory = loader.defineFactory(className.replace('/', '.'), writer.toByteArray());\n"}}, {"oid": "8719acff5ecf2b1bd07d762864cdeb8150b11489", "url": "https://github.com/elastic/elasticsearch/commit/8719acff5ecf2b1bd07d762864cdeb8150b11489", "message": "Only generate method if asked for", "committedDate": "2020-08-12T13:16:01Z", "type": "commit"}, {"oid": "362b6b693985d5cc4246cb66e2f6f8fcfc5ad5b6", "url": "https://github.com/elastic/elasticsearch/commit/362b6b693985d5cc4246cb66e2f6f8fcfc5ad5b6", "message": "Merge branch 'master' into add_doc_fields_to_factory", "committedDate": "2020-08-12T13:20:15Z", "type": "commit"}, {"oid": "8719acff5ecf2b1bd07d762864cdeb8150b11489", "url": "https://github.com/elastic/elasticsearch/commit/8719acff5ecf2b1bd07d762864cdeb8150b11489", "message": "Only generate method if asked for", "committedDate": "2020-08-12T13:16:01Z", "type": "forcePushed"}]}