{"pr_number": 57143, "pr_title": "[ML] mark forecasts for force closed/failed jobs as failed", "pr_createdAt": "2020-05-26T12:20:59Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57143", "timeline": [{"oid": "1114f9a669ea0f22e7f47261d41758de0a7608a8", "url": "https://github.com/elastic/elasticsearch/commit/1114f9a669ea0f22e7f47261d41758de0a7608a8", "message": "[ML] mark forecasts for force closed/failed jobs as failed", "committedDate": "2020-05-26T12:12:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4MjIyOA==", "url": "https://github.com/elastic/elasticsearch/pull/57143#discussion_r430382228", "bodyText": "There is a string array field called forecast_messages which can be used to add a reason for the failure.", "author": "hendrikmuhs", "createdAt": "2020-05-26T12:43:00Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsProvider.java", "diffHunk": "@@ -1272,6 +1276,39 @@ public void scheduledEvents(ScheduledEventsQueryBuilder query, ActionListener<Qu\n                 client::search);\n     }\n \n+    public void setRunningForecastsToFailed(String jobId, ActionListener<Boolean> listener) {\n+        QueryBuilder forecastQuery = QueryBuilders.boolQuery()\n+            .filter(QueryBuilders.termQuery(Result.RESULT_TYPE.getPreferredName(), ForecastRequestStats.RESULT_TYPE_VALUE))\n+            .filter(QueryBuilders.termQuery(Job.ID.getPreferredName(), jobId))\n+            .filter(QueryBuilders.termsQuery(ForecastRequestStats.STATUS.getPreferredName(),\n+                ForecastRequestStats.ForecastRequestStatus.SCHEDULED.toString(),\n+                ForecastRequestStats.ForecastRequestStatus.STARTED.toString()));\n+\n+        UpdateByQueryRequest request = new UpdateByQueryRequest(AnomalyDetectorsIndex.resultsWriteAlias(jobId))\n+            .setQuery(forecastQuery)\n+            .setIndicesOptions(IndicesOptions.lenientExpandOpen())\n+            .setAbortOnVersionConflict(false)\n+            .setMaxRetries(3)\n+            .setRefresh(true)\n+            .setScript(new Script(\"ctx._source.forecast_status='failed'\"));", "originalCommit": "1114f9a669ea0f22e7f47261d41758de0a7608a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fb2a6f7acd6db7e59cfd69d8267f59c2de816857", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsProvider.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsProvider.java\nindex f2340048480..99db1c48dcc 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsProvider.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsProvider.java\n\n@@ -1290,7 +1291,8 @@ public class JobResultsProvider {\n             .setAbortOnVersionConflict(false)\n             .setMaxRetries(3)\n             .setRefresh(true)\n-            .setScript(new Script(\"ctx._source.forecast_status='failed'\"));\n+            .setScript(new Script(\"ctx._source.forecast_status='failed';\" +\n+                \"ctx._source.forecast_messages=['\" + JOB_FORECAST_NATIVE_PROCESS_KILLED + \"']\"));\n \n         client.execute(UpdateByQueryAction.INSTANCE, request, ActionListener.wrap(\n             response -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4ODkwNA==", "url": "https://github.com/elastic/elasticsearch/pull/57143#discussion_r430388904", "bodyText": "Isn't sendRemoveRequest async? What if other results are still in the results queue and overwrite the failure state again?\nI wonder if it would be better to do this in AutodetectCommunicator::killProcess?", "author": "hendrikmuhs", "createdAt": "2020-05-26T12:54:00Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportCloseJobAction.java", "diffHunk": "@@ -371,7 +375,7 @@ private void sendResponseOrFailure(String jobId,\n                                                                AtomicArray<Exception> failures) {\n                                 List<Exception> caughtExceptions = failures.asList();\n                                 if (caughtExceptions.size() == 0) {\n-                                    listener.onResponse(new CloseJobAction.Response(true));\n+                                    closeRunningForecasts(jobId, listener);", "originalCommit": "1114f9a669ea0f22e7f47261d41758de0a7608a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU2NjU4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57143#discussion_r430566585", "bodyText": "\ud83e\udd14 Good point.\nBut, awaitCompletion is false when the task is cancelled. We might could throw a hook in results processor somewhere (AutodetectResultProcessor). if the process is killed, make sure to set all running forecasts to failed.", "author": "benwtrent", "createdAt": "2020-05-26T16:57:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4ODkwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMzAzNw==", "url": "https://github.com/elastic/elasticsearch/pull/57143#discussion_r430703037", "bodyText": "I added a commit doing exactly this. Going to update tests, etc.. changing PR to draft while I iron out the wrinkles.", "author": "benwtrent", "createdAt": "2020-05-26T20:56:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4ODkwNA=="}], "type": "inlineReview", "revised_code": {"commit": "f8c8eb28f6093d501a64a340144156fd76cac55f", "chunk": "diff --git a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportCloseJobAction.java b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportCloseJobAction.java\nindex 5fc8c2ff303..c5448653016 100644\n--- a/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportCloseJobAction.java\n+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportCloseJobAction.java\n\n@@ -375,7 +371,7 @@ public class TransportCloseJobAction extends TransportTasksAction<TransportOpenJ\n                                                                AtomicArray<Exception> failures) {\n                                 List<Exception> caughtExceptions = failures.asList();\n                                 if (caughtExceptions.size() == 0) {\n-                                    closeRunningForecasts(jobId, listener);\n+                                    listener.onResponse(new CloseJobAction.Response(true));\n                                     return;\n                                 }\n \n"}}, {"oid": "fb2a6f7acd6db7e59cfd69d8267f59c2de816857", "url": "https://github.com/elastic/elasticsearch/commit/fb2a6f7acd6db7e59cfd69d8267f59c2de816857", "message": "attempting to move forecast clean up in message processor", "committedDate": "2020-05-26T20:23:00Z", "type": "commit"}, {"oid": "f8c8eb28f6093d501a64a340144156fd76cac55f", "url": "https://github.com/elastic/elasticsearch/commit/f8c8eb28f6093d501a64a340144156fd76cac55f", "message": "adding tests and fixing changes", "committedDate": "2020-05-27T14:00:44Z", "type": "commit"}, {"oid": "944148eb064e15e9c6b628ac8eabbd827a5056f4", "url": "https://github.com/elastic/elasticsearch/commit/944148eb064e15e9c6b628ac8eabbd827a5056f4", "message": "clearing bulk request", "committedDate": "2020-05-27T14:17:04Z", "type": "commit"}, {"oid": "fbdd5d816192bcdf722577b8eb583d0327676c60", "url": "https://github.com/elastic/elasticsearch/commit/fbdd5d816192bcdf722577b8eb583d0327676c60", "message": "fixing forecast to failed test", "committedDate": "2020-05-27T15:25:31Z", "type": "commit"}, {"oid": "e16ae139426f0d94289d2816f73826149b1ca9cc", "url": "https://github.com/elastic/elasticsearch/commit/e16ae139426f0d94289d2816f73826149b1ca9cc", "message": "removing unused imports", "committedDate": "2020-05-27T16:14:01Z", "type": "commit"}, {"oid": "7a9db0e272b99551db4e0a3c01305552d72d07e4", "url": "https://github.com/elastic/elasticsearch/commit/7a9db0e272b99551db4e0a3c01305552d72d07e4", "message": "Merge branch 'master' into feature/ml-fix-forecast-handling-on-failure-and-forceclose", "committedDate": "2020-05-27T16:35:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwNjA2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57143#discussion_r432506063", "bodyText": "It would be nice if we could reuse here JobResultsProvider.setRunningForecastsToFailed. The benefits would be that we don't need a copy constructor for ForecastRequestStats which is prone for bugs (forgetting to add a new field there), and we don't need to keep track of open forecasts here in the new runningForecasts member.", "author": "dimitris-athanasiou", "createdAt": "2020-05-29T14:07:29Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/output/AutodetectResultProcessor.java", "diffHunk": "@@ -206,6 +212,27 @@ public void setProcessKilled() {\n         renormalizer.shutdown();\n     }\n \n+    void handleOpenForecasts() {\n+        try {\n+            if (runningForecasts.isEmpty() == false) {\n+                LOGGER.warn(\"[{}] still had forecasts {} executing. Attempting to set them to failed.\",\n+                    jobId,\n+                    runningForecasts.keySet());\n+                // There may be many docs in the results persistence queue. But we only want to bother updating the running forecasts\n+                bulkResultsPersister.clearBulkRequest();\n+                for (ForecastRequestStats forecastRequestStats : runningForecasts.values()) {", "originalCommit": "7a9db0e272b99551db4e0a3c01305552d72d07e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzMTE1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57143#discussion_r432531155", "bodyText": "setRunningForecastsToFailed is a DBQ. It is possible to have a forecast request stat document persisted without the index refreshing since. So, the DBQ would not find it.", "author": "benwtrent", "createdAt": "2020-05-29T14:38:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwNjA2Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f302dde1e25932ee80b466fd70996ed7b296f606", "url": "https://github.com/elastic/elasticsearch/commit/f302dde1e25932ee80b466fd70996ed7b296f606", "message": "Merge branch 'master' into feature/ml-fix-forecast-handling-on-failure-and-forceclose", "committedDate": "2020-05-29T15:20:47Z", "type": "commit"}, {"oid": "99bf9fe510e2848aa36e46b974bf9b3abe3c7552", "url": "https://github.com/elastic/elasticsearch/commit/99bf9fe510e2848aa36e46b974bf9b3abe3c7552", "message": "fixing after merge", "committedDate": "2020-05-29T16:27:52Z", "type": "commit"}]}