{"pr_number": 53375, "pr_title": "Fix sporadic failures in AsyncSearchAsyncTests", "pr_createdAt": "2020-03-10T23:38:18Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53375", "timeline": [{"oid": "8612b7541322c2635106035c31d913da645bae59", "url": "https://github.com/elastic/elasticsearch/commit/8612b7541322c2635106035c31d913da645bae59", "message": "Fix race condition in shard group failure callback\n\nShard group failure callbacks should be executed before incrementing\nthe total operations. This is required to ensure that we don't notify\na shard group failure **after** the completion callback.", "committedDate": "2020-03-10T22:12:12Z", "type": "commit"}, {"oid": "da65d6f97064ac08e7bcb7a9af6bcd8a912ca7c8", "url": "https://github.com/elastic/elasticsearch/commit/da65d6f97064ac08e7bcb7a9af6bcd8a912ca7c8", "message": "Fix the initial response stored in async search index\n\nThis change ensures that we set the isRunning flag to `false`\nwhen storing the initial response of an async search request.", "committedDate": "2020-03-10T22:34:46Z", "type": "commit"}, {"oid": "77dd1310bc001ead7eb1266a66a273f359fdf3fd", "url": "https://github.com/elastic/elasticsearch/commit/77dd1310bc001ead7eb1266a66a273f359fdf3fd", "message": "Remove the awaits fix", "committedDate": "2020-03-10T23:16:21Z", "type": "commit"}, {"oid": "55e59705d137999f03d9b0a9af60f447e813f2d8", "url": "https://github.com/elastic/elasticsearch/commit/55e59705d137999f03d9b0a9af60f447e813f2d8", "message": "disable cacheability of BlockQueryBuilder", "committedDate": "2020-03-10T23:32:27Z", "type": "commit"}, {"oid": "a2f8278100849d992753bfead768948612655bb1", "url": "https://github.com/elastic/elasticsearch/commit/a2f8278100849d992753bfead768948612655bb1", "message": "Merge branch 'master' into async_search_action_tests", "committedDate": "2020-03-11T07:50:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0ODQ0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390848442", "bodyText": "do we ever clone it providing true as isRunning argument?", "author": "javanna", "createdAt": "2020-03-11T09:42:00Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java", "diffHunk": "@@ -99,7 +99,7 @@ public void writeTo(StreamOutput out) throws IOException {\n         out.writeLong(expirationTimeMillis);\n     }\n \n-    public AsyncSearchResponse clone(String id) {\n+    public AsyncSearchResponse clone(String id, boolean isRunning) {", "originalCommit": "a2f8278100849d992753bfead768948612655bb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMDEwMw==", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390910103", "bodyText": "no we don't, I'll remove the isRunning and always set it to false on cloning if it's what you meant ?", "author": "jimczi", "createdAt": "2020-03-11T11:35:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0ODQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5MDkyNA==", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390990924", "bodyText": "++", "author": "javanna", "createdAt": "2020-03-11T14:01:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0ODQ0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b0afc8c17602de78633d74848f7b5f088e13d7e1", "chunk": "diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java\nindex 0966d757823..9828635ae64 100644\n--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java\n+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/search/action/AsyncSearchResponse.java\n\n@@ -99,8 +99,8 @@ public class AsyncSearchResponse extends ActionResponse implements StatusToXCont\n         out.writeLong(expirationTimeMillis);\n     }\n \n-    public AsyncSearchResponse clone(String id, boolean isRunning) {\n-        return new AsyncSearchResponse(id, version, searchResponse, error, isPartial, isRunning, startTimeMillis, expirationTimeMillis);\n+    public AsyncSearchResponse clone(String id) {\n+        return new AsyncSearchResponse(id, version, searchResponse, error, isPartial, false, startTimeMillis, expirationTimeMillis);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0OTA0NA==", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390849044", "bodyText": "can you elaborate on this TODO? does it revolve around resiliency?", "author": "javanna", "createdAt": "2020-03-11T09:43:06Z", "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java", "diffHunk": "@@ -83,7 +83,10 @@ public void onResponse(AsyncSearchResponse searchResponse) {\n                                 onFatalFailure(searchTask, cause, false, submitListener);\n                             } else {\n                                 final String docId = searchTask.getSearchId().getDocId();\n-                                store.storeInitialResponse(docId, searchTask.getOriginHeaders(), searchResponse,\n+                                // creates the fallback response if the node crashes/restarts in the middle of the request\n+                                // TODO: store intermediate results ?", "originalCommit": "a2f8278100849d992753bfead768948612655bb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwOTU0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390909541", "bodyText": "It does, yes that's one of the follow up question we have in the meta issue.", "author": "jimczi", "createdAt": "2020-03-11T11:33:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0OTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5MTM5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/53375#discussion_r390991392", "bodyText": "I thought so, I wonder if we need the TODO in the code then, cause we are tracking this anyways elsewhere.", "author": "javanna", "createdAt": "2020-03-11T14:02:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0OTA0NA=="}], "type": "inlineReview", "revised_code": {"commit": "b0afc8c17602de78633d74848f7b5f088e13d7e1", "chunk": "diff --git a/x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java b/x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java\nindex 214f0abe0de..ff780130530 100644\n--- a/x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java\n+++ b/x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java\n\n@@ -85,7 +85,7 @@ public class TransportSubmitAsyncSearchAction extends HandledTransportAction<Sub\n                                 final String docId = searchTask.getSearchId().getDocId();\n                                 // creates the fallback response if the node crashes/restarts in the middle of the request\n                                 // TODO: store intermediate results ?\n-                                AsyncSearchResponse initialResp = searchResponse.clone(searchResponse.getId(), false);\n+                                AsyncSearchResponse initialResp = searchResponse.clone(searchResponse.getId());\n                                 store.storeInitialResponse(docId, searchTask.getOriginHeaders(), initialResp,\n                                     new ActionListener<>() {\n                                         @Override\n"}}, {"oid": "ccb2f9b0d465f7fbd69d437fb3cc89834c64b82a", "url": "https://github.com/elastic/elasticsearch/commit/ccb2f9b0d465f7fbd69d437fb3cc89834c64b82a", "message": "Merge branch 'master' into async_search_action_tests", "committedDate": "2020-03-11T10:24:19Z", "type": "commit"}, {"oid": "b0afc8c17602de78633d74848f7b5f088e13d7e1", "url": "https://github.com/elastic/elasticsearch/commit/b0afc8c17602de78633d74848f7b5f088e13d7e1", "message": "address review", "committedDate": "2020-03-11T11:44:13Z", "type": "commit"}, {"oid": "4ae60998e5beb0d66cd031b2df3555ef29d6c33f", "url": "https://github.com/elastic/elasticsearch/commit/4ae60998e5beb0d66cd031b2df3555ef29d6c33f", "message": "Merge branch 'master' into async_search_action_tests", "committedDate": "2020-03-11T14:00:51Z", "type": "commit"}, {"oid": "4e24ac620eaad5473a6d41569e62f7d85d0289fa", "url": "https://github.com/elastic/elasticsearch/commit/4e24ac620eaad5473a6d41569e62f7d85d0289fa", "message": "Merge branch 'master' into async_search_action_tests", "committedDate": "2020-03-11T14:01:52Z", "type": "commit"}]}