{"pr_number": 56060, "pr_title": "[Geo] Refactor Point Field Mappers", "pr_createdAt": "2020-04-30T20:39:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56060", "timeline": [{"oid": "e0be90fb2413a7443a936b55e5351c2a3ab66ad0", "url": "https://github.com/elastic/elasticsearch/commit/e0be90fb2413a7443a936b55e5351c2a3ab66ad0", "message": "[Geo] Refactor Point Field Mappers\n\nThis commit refactors the following:\n  * GeoPointFieldMapper and PointFieldMapper to\n    AbstractPointGeometryFieldMapper derived from AbstractGeometryFieldMapper.\n  * .setupFieldType moved up to AbstractGeometryFieldMapper\n  * lucene indexing moved up to AbstractGeometryFieldMapper.parse\n  * new addStoredFields, addDocValuesFields abstract methods for implementing\n    stored field and doc values field indexing in the concrete field mappers\n\nThis refactor is the next phase for setting up a framework for extending\nspatial field mapper functionality in x-pack.", "committedDate": "2020-05-08T17:17:18Z", "type": "commit"}, {"oid": "5d46c24181d63fae8bc4c410333639d7e79709f4", "url": "https://github.com/elastic/elasticsearch/commit/5d46c24181d63fae8bc4c410333639d7e79709f4", "message": "refactor PointParser to return an array of points; fix GeoPointFieldMapperTests", "committedDate": "2020-05-08T17:17:18Z", "type": "commit"}, {"oid": "f21b212cf9fbbb1af04c4a990142c2ca748eaf1b", "url": "https://github.com/elastic/elasticsearch/commit/f21b212cf9fbbb1af04c4a990142c2ca748eaf1b", "message": "add hashCode to ParsedGeoPoint", "committedDate": "2020-05-08T17:17:18Z", "type": "commit"}, {"oid": "002268d067e210318bdb836eb17caddf50396fe1", "url": "https://github.com/elastic/elasticsearch/commit/002268d067e210318bdb836eb17caddf50396fe1", "message": "fix line length", "committedDate": "2020-05-08T17:17:18Z", "type": "commit"}, {"oid": "4ed83e198b934270431c469d478423f9a176eafd", "url": "https://github.com/elastic/elasticsearch/commit/4ed83e198b934270431c469d478423f9a176eafd", "message": "fix CartesianPoint parsing and PointFieldMapper", "committedDate": "2020-05-08T17:17:18Z", "type": "commit"}, {"oid": "9d79a1d98c75001a934f4c6a3a85e1378efe0517", "url": "https://github.com/elastic/elasticsearch/commit/9d79a1d98c75001a934f4c6a3a85e1378efe0517", "message": "suppress unchecked cast", "committedDate": "2020-05-08T17:17:19Z", "type": "commit"}, {"oid": "e61cc6b55b75e937880382d49a25aa56863d32f6", "url": "https://github.com/elastic/elasticsearch/commit/e61cc6b55b75e937880382d49a25aa56863d32f6", "message": "fix failing tests", "committedDate": "2020-05-08T17:17:19Z", "type": "commit"}, {"oid": "d19380e7e72fa19daeaf4d34aaa91a5398ba58b5", "url": "https://github.com/elastic/elasticsearch/commit/d19380e7e72fa19daeaf4d34aaa91a5398ba58b5", "message": "fix parsePointIgnoringMalformed logic", "committedDate": "2020-05-08T17:17:19Z", "type": "commit"}, {"oid": "b8d7b5be774c9e7fcb7c26c7ab4914bee1375eb1", "url": "https://github.com/elastic/elasticsearch/commit/b8d7b5be774c9e7fcb7c26c7ab4914bee1375eb1", "message": "fix forbidden field access", "committedDate": "2020-05-08T17:17:19Z", "type": "commit"}, {"oid": "b8d7b5be774c9e7fcb7c26c7ab4914bee1375eb1", "url": "https://github.com/elastic/elasticsearch/commit/b8d7b5be774c9e7fcb7c26c7ab4914bee1375eb1", "message": "fix forbidden field access", "committedDate": "2020-05-08T17:17:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwMzIwNA==", "url": "https://github.com/elastic/elasticsearch/pull/56060#discussion_r423003204", "bodyText": "nit:\ns/geo-shape/geometry", "author": "iverase", "createdAt": "2020-05-11T12:28:20Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -54,7 +60,23 @@\n         public static final Explicit<Boolean> IGNORE_Z_VALUE = new Explicit<>(true, false);\n     }\n \n-    public abstract static class Builder<T extends Builder, Y extends AbstractGeometryFieldMapper>\n+    /**\n+     * Interface representing an preprocessor in geo-shape indexing pipeline\n+     */", "originalCommit": "b8d7b5be774c9e7fcb7c26c7ab4914bee1375eb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE2MjU2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/56060#discussion_r423162561", "bodyText": "\ud83d\udc4d", "author": "nknize", "createdAt": "2020-05-11T16:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwMzIwNA=="}], "type": "inlineReview", "revised_code": {"commit": "6160b83d9b35e77f006bd820a3e517c70fbfae3b", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java\nindex 8005f963b19..8804a458b34 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java\n\n@@ -61,7 +61,7 @@ public abstract class AbstractGeometryFieldMapper<Parsed, Processed> extends Fie\n     }\n \n     /**\n-     * Interface representing an preprocessor in geo-shape indexing pipeline\n+     * Interface representing an preprocessor in geometry indexing pipeline\n      */\n     public interface Indexer<Parsed, Processed> {\n         Processed prepareForIndexing(Parsed geometry);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwMzQwMw==", "url": "https://github.com/elastic/elasticsearch/pull/56060#discussion_r423003403", "bodyText": "nit:\ns/geo-shape/geometry", "author": "iverase", "createdAt": "2020-05-11T12:28:41Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -54,7 +60,23 @@\n         public static final Explicit<Boolean> IGNORE_Z_VALUE = new Explicit<>(true, false);\n     }\n \n-    public abstract static class Builder<T extends Builder, Y extends AbstractGeometryFieldMapper>\n+    /**\n+     * Interface representing an preprocessor in geo-shape indexing pipeline\n+     */\n+    public interface Indexer<Parsed, Processed> {\n+        Processed prepareForIndexing(Parsed geometry);\n+        Class<Processed> processedClass();\n+        List<IndexableField> indexShape(ParseContext context, Processed shape);\n+    }\n+\n+    /**\n+     * interface representing parser in geo shape indexing pipeline\n+     */", "originalCommit": "b8d7b5be774c9e7fcb7c26c7ab4914bee1375eb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE2MjY0MA==", "url": "https://github.com/elastic/elasticsearch/pull/56060#discussion_r423162640", "bodyText": "\ud83d\udc4d", "author": "nknize", "createdAt": "2020-05-11T16:25:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwMzQwMw=="}], "type": "inlineReview", "revised_code": {"commit": "6160b83d9b35e77f006bd820a3e517c70fbfae3b", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java\nindex 8005f963b19..8804a458b34 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java\n\n@@ -61,7 +61,7 @@ public abstract class AbstractGeometryFieldMapper<Parsed, Processed> extends Fie\n     }\n \n     /**\n-     * Interface representing an preprocessor in geo-shape indexing pipeline\n+     * Interface representing an preprocessor in geometry indexing pipeline\n      */\n     public interface Indexer<Parsed, Processed> {\n         Processed prepareForIndexing(Parsed geometry);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwNDI1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/56060#discussion_r423004253", "bodyText": "nit: javadoc is too generic? maybe:\n/** Base class for for spatial fields that only support indexing points */", "author": "iverase", "createdAt": "2020-05-11T12:30:15Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractPointGeometryFieldMapper.java", "diffHunk": "@@ -0,0 +1,262 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.index.mapper;\n+\n+import org.elasticsearch.ElasticsearchParseException;\n+import org.elasticsearch.common.Explicit;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.geo.GeoPoint;\n+import org.elasticsearch.common.geo.GeometryFormat;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.LoggingDeprecationHandler;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+\n+import java.io.IOException;\n+import java.text.ParseException;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+\n+/** Base class for GeoPointFieldMappers */\n+import static org.elasticsearch.index.mapper.TypeParsers.parseField;", "originalCommit": "b8d7b5be774c9e7fcb7c26c7ab4914bee1375eb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE2MTk2OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56060#discussion_r423161969", "bodyText": "\ud83d\udc4d", "author": "nknize", "createdAt": "2020-05-11T16:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwNDI1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6160b83d9b35e77f006bd820a3e517c70fbfae3b", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/index/mapper/AbstractPointGeometryFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/AbstractPointGeometryFieldMapper.java\nindex beca2ad06ad..ee4af56c737 100644\n--- a/server/src/main/java/org/elasticsearch/index/mapper/AbstractPointGeometryFieldMapper.java\n+++ b/server/src/main/java/org/elasticsearch/index/mapper/AbstractPointGeometryFieldMapper.java\n\n@@ -35,9 +35,9 @@ import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n \n-/** Base class for GeoPointFieldMappers */\n import static org.elasticsearch.index.mapper.TypeParsers.parseField;\n \n+/** Base class for for spatial fields that only support indexing points */\n public abstract class AbstractPointGeometryFieldMapper<Parsed, Processed> extends AbstractGeometryFieldMapper<Parsed, Processed> {\n \n     public static class Names extends AbstractGeometryFieldMapper.Names {\n"}}, {"oid": "6160b83d9b35e77f006bd820a3e517c70fbfae3b", "url": "https://github.com/elastic/elasticsearch/commit/6160b83d9b35e77f006bd820a3e517c70fbfae3b", "message": "feedback from PR", "committedDate": "2020-05-11T16:26:15Z", "type": "commit"}]}