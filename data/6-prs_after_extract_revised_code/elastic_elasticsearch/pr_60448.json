{"pr_number": 60448, "pr_title": "Add Repository Setting to Disable Writing index.latest", "pr_createdAt": "2020-07-30T12:24:21Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60448", "timeline": [{"oid": "29a6933c20d0315fb2ac55dec609ae59f50930fa", "url": "https://github.com/elastic/elasticsearch/commit/29a6933c20d0315fb2ac55dec609ae59f50930fa", "message": "Add Repository Setting to Disable Writing index.latest\n\nWriting the `index.latest` blob is unnecessary unless the contents of the repository\nare to be used as a URL-repository. Also, in some edge cases, the fact that `index.latest` is the only\nblob in the repository that regularly gets overwritten was causing compatibility issues with\nsome backing blobstores (Azure no-overwrite policy, Hitachy S3 equivalent).\n=> this commit changes behavior to make snapshots not fail if writing `index.latest` fails\nand adds a setting to disable writing `index.latest`.", "committedDate": "2020-07-30T12:23:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MDE5NA==", "url": "https://github.com/elastic/elasticsearch/pull/60448#discussion_r462960194", "bodyText": "I know we discussed this and decided on a cluster setting for this, but does that actually make sense?\nI made it a repo setting for now (trivial to change) because I figured:\n\nAll the other settings we have for the repo are repo level settings.\nIt's weird that this would be the only repo setting that can be dynamically adjusted without re-creating the repo\nThere is the absurdly unlikely chance that someone would actually want to only turn this off for one repo? :P", "author": "original-brownbear", "createdAt": "2020-07-30T12:28:38Z", "path": "server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java", "diffHunk": "@@ -299,6 +307,7 @@ protected BlobStoreRepository(\n         this.clusterService = clusterService;\n         this.recoverySettings = recoverySettings;\n         this.compress = COMPRESS_SETTING.get(metadata.settings());\n+        this.supportURLRepo = SUPPORT_URL_REPO.get(metadata.settings());", "originalCommit": "29a6933c20d0315fb2ac55dec609ae59f50930fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4NTg1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/60448#discussion_r462985851", "bodyText": "We have some annoying tests where random failures in index.latest would get counted via incrementAndGetFailureCount but because they now do not break the snapshot, the test would fail because random IOException must always mean failed snapshot in those tests => this seemed like the simplest fix to that.", "author": "original-brownbear", "createdAt": "2020-07-30T13:13:36Z", "path": "test/framework/src/main/java/org/elasticsearch/snapshots/mockstore/MockRepository.java", "diffHunk": "@@ -272,6 +281,11 @@ private int hashCode(String path) {\n             }\n \n             private void maybeIOExceptionOrBlock(String blobName) throws IOException {\n+                if (INDEX_LATEST_BLOB.equals(blobName)) {", "originalCommit": "29a6933c20d0315fb2ac55dec609ae59f50930fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}