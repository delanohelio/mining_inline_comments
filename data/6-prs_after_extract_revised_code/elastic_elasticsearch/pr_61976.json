{"pr_number": 61976, "pr_title": "Fix invalid flag setting for RegExp", "pr_createdAt": "2020-09-04T10:51:29Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61976", "timeline": [{"oid": "f288c78a309749703c02617d8bb4094728f28cf9", "url": "https://github.com/elastic/elasticsearch/commit/f288c78a309749703c02617d8bb4094728f28cf9", "message": "Fix invalid flag setting for RegExp", "committedDate": "2020-09-04T10:48:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU1NjgyOA==", "url": "https://github.com/elastic/elasticsearch/pull/61976#discussion_r483556828", "bodyText": "I think the change is ok but I wonder why that failed the test. We're supposed to rewrite the old all transparently.\n@markharwood can you check that the leniency is applied correctly ?", "author": "jimczi", "createdAt": "2020-09-04T11:26:27Z", "path": "x-pack/plugin/runtime-fields/src/test/java/org/elasticsearch/xpack/runtimefields/query/StringScriptFieldRegexpQueryTests.java", "diffHunk": "@@ -59,7 +59,7 @@ protected StringScriptFieldRegexpQuery mutate(StringScriptFieldRegexpQuery orig)\n                 pattern += \"modified\";\n                 break;\n             case 3:\n-                flags = randomValueOtherThan(flags, () -> randomInt(0xFFFF));\n+                flags = randomValueOtherThan(flags, () -> randomInt(RegExp.ALL));", "originalCommit": "f288c78a309749703c02617d8bb4094728f28cf9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU1ODE5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/61976#discussion_r483558196", "bodyText": "There is a change that was not in the current form: apache/lucene-solr#1659", "author": "iverase", "createdAt": "2020-09-04T11:29:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU1NjgyOA=="}], "type": "inlineReview", "revised_code": null}]}