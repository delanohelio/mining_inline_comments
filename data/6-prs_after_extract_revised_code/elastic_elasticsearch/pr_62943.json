{"pr_number": 62943, "pr_title": "SQL: Fix exception when using CAST on inexact field", "pr_createdAt": "2020-09-28T10:34:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62943", "timeline": [{"oid": "a7c41e40cc1b4110a0ce12f3ff4fd8c3e694fe93", "url": "https://github.com/elastic/elasticsearch/commit/a7c41e40cc1b4110a0ce12f3ff4fd8c3e694fe93", "message": "SQL: Fix exception when using CAST on inexact field\n\nCurrently, CAST will use the first keyword subfield of a text field for\nan expression in WHERE clause that gets translated to a painless script\nwhich will lead to an exception thrown:\n```\n\"root_cause\": [\n      {\n        \"type\": \"script_exception\",\n        \"reason\": \"runtime error\",\n        \"script_stack\": [\n          \"org.elasticsearch.index.mapper.TextFieldMapper$TextFieldType.fielddataBuilder(TextFieldMapper.java:759)\",\n          \"org.elasticsearch.index.fielddata.IndexFieldDataService.getForField(IndexFieldDataService.java:116)\",\n          \"org.elasticsearch.index.query.QueryShardContext.lambda$lookup$0(QueryShardContext.java:308)\",\n          \"org.elasticsearch.search.lookup.LeafDocLookup$1.run(LeafDocLookup.java:101)\",\n          \"org.elasticsearch.search.lookup.LeafDocLookup$1.run(LeafDocLookup.java:98)\",\n          \"java.security.AccessController.doPrivileged(Native Method)\",\n          \"org.elasticsearch.search.lookup.LeafDocLookup.get(LeafDocLookup.java:98)\",\n          \"org.elasticsearch.search.lookup.LeafDocLookup.get(LeafDocLookup.java:41)\",\n          \"org.elasticsearch.xpack.sql.expression.function.scalar.whitelist.InternalSqlScriptUtils.docValue(InternalSqlScriptUtils.java:79)\",\n          \"InternalSqlScriptUtils.cast(InternalSqlScriptUtils.docValue(doc,params.v0),params.v1)\",\n          \"                                                                      ^---- HERE\"\n        ],\n        \"script\": \"InternalSqlScriptUtils.cast(InternalSqlScriptUtils.docValue(doc,params.v0),params.v1)\",\n        \"lang\": \"painless\"\n      }\n    ],\n```\n\nInstead of allowing a painless translation using the first underlying\nkeyword silently, which can be confusing, we detect such usage and throw\\\nan error early.\n\nRelates to #60178", "committedDate": "2020-09-28T10:22:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgwMTYwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/62943#discussion_r498801605", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                localFailures.add(fail(c.field(), \"[{}] of data type [{}] cannot be used for [{}()] inside WHERE clause\",\n          \n          \n            \n                                localFailures.add(fail(c.field(), \"[{}] of data type [{}] cannot be used for [{}()] inside the WHERE clause\",", "author": "bpintea", "createdAt": "2020-10-02T12:52:20Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java", "diffHunk": "@@ -865,4 +867,18 @@ private static void checkMatrixStats(LogicalPlan p, Set<Failure> localFailures)\n             }\n         }, Skewness.class));\n     }\n+\n+    private static void checkCastOnInexact(LogicalPlan p, Set<Failure> localFailures) {\n+        p.forEachDown(f -> f.forEachExpressionsUp(e -> e.forEachUp((Cast c) -> {\n+            if (c.field() instanceof FieldAttribute) {\n+                EsField.Exact exactInfo = ((FieldAttribute) c.field()).getExactInfo();\n+                if (exactInfo.hasExact() == false\n+                        || ((FieldAttribute) c.field()).exactAttribute().equals(c.field()) == false) {\n+                    localFailures.add(fail(c.field(), \"[{}] of data type [{}] cannot be used for [{}()] inside WHERE clause\",", "originalCommit": "a7c41e40cc1b4110a0ce12f3ff4fd8c3e694fe93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df933c02c610635534579f6f35e0b3b4f0d7f183", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\nindex e8ee08fc503..d12ffc7fda1 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Verifier.java\n\n@@ -874,7 +874,8 @@ public final class Verifier {\n                 EsField.Exact exactInfo = ((FieldAttribute) c.field()).getExactInfo();\n                 if (exactInfo.hasExact() == false\n                         || ((FieldAttribute) c.field()).exactAttribute().equals(c.field()) == false) {\n-                    localFailures.add(fail(c.field(), \"[{}] of data type [{}] cannot be used for [{}()] inside WHERE clause\",\n+                    localFailures.add(fail(c.field(),\n+                            \"[{}] of data type [{}] cannot be used for [{}()] inside the WHERE clause\",\n                             c.field().sourceText(), c.field().dataType().typeName(), c.functionName()));\n                 }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgwMzA2OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62943#discussion_r498803069", "bodyText": "Does the relatively not-straight WHERE clause bare any meaning to the test target (for instance, vs. some WHERE CAST(some.string AS string) = 'foo')? Just curious.", "author": "bpintea", "createdAt": "2020-10-02T12:55:19Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java", "diffHunk": "@@ -1135,4 +1135,13 @@ public void testErrorMessageForMatrixStatsWithScalars() {\n         assertEquals(\"1:17: [SKEWNESS()] cannot be used on top of operators or scalars\",\n                 error(\"SELECT SKEWNESS(ABS(int * 10.123)) FROM test\"));\n     }\n+\n+    public void testCastOnInexact() {\n+        // inexact with underlying keyword\n+        assertEquals(\"1:36: [some.string] of data type [text] cannot be used for [CAST()] inside WHERE clause\",\n+                error(\"SELECT * FROM test WHERE NOT (CAST(some.string AS string) = 'foo') OR true\"));", "originalCommit": "a7c41e40cc1b4110a0ce12f3ff4fd8c3e694fe93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgwNTkyNA==", "url": "https://github.com/elastic/elasticsearch/pull/62943#discussion_r498805924", "bodyText": "Yes, produces more complex tree, so the error can be caught even in such cases: (forEachUp/Down, forEachExpressionUp/Down, etc).", "author": "matriv", "createdAt": "2020-10-02T13:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgwMzA2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "df933c02c610635534579f6f35e0b3b4f0d7f183", "chunk": "diff --git a/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java\nindex 78dc390ef6b..0e383ee338d 100644\n--- a/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java\n+++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java\n\n@@ -1138,10 +1138,10 @@ public class VerifierErrorMessagesTests extends ESTestCase {\n \n     public void testCastOnInexact() {\n         // inexact with underlying keyword\n-        assertEquals(\"1:36: [some.string] of data type [text] cannot be used for [CAST()] inside WHERE clause\",\n+        assertEquals(\"1:36: [some.string] of data type [text] cannot be used for [CAST()] inside the WHERE clause\",\n                 error(\"SELECT * FROM test WHERE NOT (CAST(some.string AS string) = 'foo') OR true\"));\n         // inexact without underlying keyword (text only)\n-        assertEquals(\"1:36: [text] of data type [text] cannot be used for [CAST()] inside WHERE clause\",\n+        assertEquals(\"1:36: [text] of data type [text] cannot be used for [CAST()] inside the WHERE clause\",\n                 error(\"SELECT * FROM test WHERE NOT (CAST(text AS string) = 'foo') OR true\"));\n     }\n }\n"}}, {"oid": "28d2088e3267981b23a71987e6465fb2eeb1fde7", "url": "https://github.com/elastic/elasticsearch/commit/28d2088e3267981b23a71987e6465fb2eeb1fde7", "message": "Merge remote-tracking branch 'upstream/master' into fix-cast-inexact", "committedDate": "2020-10-02T13:01:24Z", "type": "commit"}, {"oid": "df933c02c610635534579f6f35e0b3b4f0d7f183", "url": "https://github.com/elastic/elasticsearch/commit/df933c02c610635534579f6f35e0b3b4f0d7f183", "message": "address feedback", "committedDate": "2020-10-02T13:03:14Z", "type": "commit"}]}