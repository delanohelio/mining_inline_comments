{"pr_number": 55511, "pr_title": "Allow searching of snapshot taken while indexing", "pr_createdAt": "2020-04-21T09:17:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55511", "timeline": [{"oid": "003d6e4c8ba45c944651faf54c4793cf3553d5ee", "url": "https://github.com/elastic/elasticsearch/commit/003d6e4c8ba45c944651faf54c4793cf3553d5ee", "message": "Allow searching of snapshot taken while indexing\n\nToday a read-only engine requires a complete history of operations, in the\nsense that its local checkpoint must equal its maximum sequence number. This is\na valid check for read-only engines that were obtained by closing an index\nsince closing an index waits for all in-flight operations to complete. However\na snapshot may not have this property if it was taken while indexing was\nongoing, but that's ok.\n\nThis commit weakens the check for a complete history to exclude the case of a\nsearchable snapshot.\n\nRelates #50999", "committedDate": "2020-04-21T09:16:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAyMzk3NA==", "url": "https://github.com/elastic/elasticsearch/pull/55511#discussion_r412023974", "bodyText": "Instead of overriding the method every time it's needed maybe we could pass a ensureMaxSeqNoEqualsToGlobalCheckpoint boolean flag when the ReadOnlyEngine is instanciated?", "author": "tlrx", "createdAt": "2020-04-21T09:26:04Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java", "diffHunk": "@@ -218,10 +200,15 @@ public void onIndexModule(IndexModule indexModule) {\n \n     @Override\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n-        if (SEARCHABLE_SNAPSHOTS_FEATURE_ENABLED\n-            && isSearchableSnapshotStore(indexSettings.getSettings())\n+        if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n             && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {\n-            return Optional.of(engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity()));\n+            return Optional.of(engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity()) {\n+                @Override\n+                protected void ensureMaxSeqNoEqualsToGlobalCheckpoint(SeqNoStats seqNoStats) {", "originalCommit": "003d6e4c8ba45c944651faf54c4793cf3553d5ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MjMxMA==", "url": "https://github.com/elastic/elasticsearch/pull/55511#discussion_r412052310", "bodyText": "Sure, I tried that in cf2577e.", "author": "DaveCTurner", "createdAt": "2020-04-21T10:07:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAyMzk3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1ODY2NA==", "url": "https://github.com/elastic/elasticsearch/pull/55511#discussion_r412058664", "bodyText": "Thanks!", "author": "tlrx", "createdAt": "2020-04-21T10:16:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAyMzk3NA=="}], "type": "inlineReview", "revised_code": {"commit": "cf2577e225afb308767cd7a4b2605ca67395fb49", "chunk": "diff --git a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\nindex e95e48adcff..11fedb072a3 100644\n--- a/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n+++ b/x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshots.java\n\n@@ -202,13 +201,9 @@ public class SearchableSnapshots extends Plugin implements IndexStorePlugin, Eng\n     public Optional<EngineFactory> getEngineFactory(IndexSettings indexSettings) {\n         if (SearchableSnapshotsConstants.isSearchableSnapshotStore(indexSettings.getSettings())\n             && indexSettings.getSettings().getAsBoolean(\"index.frozen\", false) == false) {\n-            return Optional.of(engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity()) {\n-                @Override\n-                protected void ensureMaxSeqNoEqualsToGlobalCheckpoint(SeqNoStats seqNoStats) {\n-                    // searchable snapshots may not satisfy this property but that's ok since they're only subject to file-based\n-                    // recoveries and the files \"on disk\" never change\n-                }\n-            });\n+            return Optional.of(\n+                engineConfig -> new ReadOnlyEngine(engineConfig, null, new TranslogStats(), false, Function.identity(), false)\n+            );\n         }\n         return Optional.empty();\n     }\n"}}, {"oid": "cf2577e225afb308767cd7a4b2605ca67395fb49", "url": "https://github.com/elastic/elasticsearch/commit/cf2577e225afb308767cd7a4b2605ca67395fb49", "message": "Constructor parameter instead of override", "committedDate": "2020-04-21T09:59:53Z", "type": "commit"}, {"oid": "9f4bc1f66a23017e1cd2a72ca417fc71323a0048", "url": "https://github.com/elastic/elasticsearch/commit/9f4bc1f66a23017e1cd2a72ca417fc71323a0048", "message": "Whitespace", "committedDate": "2020-04-21T10:11:22Z", "type": "commit"}, {"oid": "fd968da859c38d7973424257dc53ce15d571caae", "url": "https://github.com/elastic/elasticsearch/commit/fd968da859c38d7973424257dc53ce15d571caae", "message": "Merge branch 'master' into 2020-04-20-searchable-snapshot-with-concurrent-indexing", "committedDate": "2020-04-21T10:16:12Z", "type": "commit"}]}