{"pr_number": 65958, "pr_title": "Remove the rollup thread pool", "pr_createdAt": "2020-12-07T16:01:05Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65958", "timeline": [{"oid": "5439d2e7c54f29d77112e4f37e0d99eadc0725ad", "url": "https://github.com/elastic/elasticsearch/commit/5439d2e7c54f29d77112e4f37e0d99eadc0725ad", "message": "Perform rollup locally per shard\n\nThis commit refactors the rollup action in order to execute on a per shard basis.\nEach shard is responsible for sending its local buckets to the target rollup index.\nThe shard action is executed in the rollup thread pool in order to limit the\nnumber of shards that can rollup concurrently per node.\nBuckets are computed on the fly using the index searcher and they are sorted\nusing a compressed offline sorter.\n\nThis commit also removes the rollup thread pool usage in the RollupAsyncIndexer that is used by\nthe legacy rollup and transforms. All actions performed by this indexer are asynchronous so\nusing the generic thread pool to fire search and bulk requests is ok.", "committedDate": "2020-12-04T13:43:40Z", "type": "commit"}, {"oid": "e36f0aebc9d4e16bc9621e90f343185bf5d319ee", "url": "https://github.com/elastic/elasticsearch/commit/e36f0aebc9d4e16bc9621e90f343185bf5d319ee", "message": "Remove the rollup thread pool\n\nThis commit removes the rollup thread pool and replaces all its usage\nwith the generic one. The rollup indexer uses the internal client to\nperform asynchronous search and indexation tasks so we don't need a\nseparate pool to handle these requests.", "committedDate": "2020-12-07T15:58:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyNDEyMA==", "url": "https://github.com/elastic/elasticsearch/pull/65958#discussion_r537624120", "bodyText": "is this class meant to be included in this PR?", "author": "talevy", "createdAt": "2020-12-07T16:03:15Z", "path": "x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/FieldValueFetcher.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*", "originalCommit": "e36f0aebc9d4e16bc9621e90f343185bf5d319ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7dc2270c0d44a988319856c1f2c0ae1e89ce4e0", "chunk": "diff --git a/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/FieldValueFetcher.java b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/FieldValueFetcher.java\ndeleted file mode 100644\nindex 7e7c8c64e6b..00000000000\n--- a/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/v2/FieldValueFetcher.java\n+++ /dev/null\n\n@@ -1,66 +0,0 @@\n-/*\n- * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n- * or more contributor license agreements. Licensed under the Elastic License;\n- * you may not use this file except in compliance with the Elastic License.\n- */\n-\n-package org.elasticsearch.xpack.rollup.v2;\n-\n-import org.apache.lucene.index.LeafReaderContext;\n-import org.apache.lucene.util.BytesRef;\n-import org.elasticsearch.index.fielddata.IndexFieldData;\n-import org.elasticsearch.index.fielddata.LeafFieldData;\n-import org.elasticsearch.index.mapper.DocValueFetcher;\n-import org.elasticsearch.index.mapper.MappedFieldType;\n-import org.elasticsearch.index.query.QueryShardContext;\n-import org.elasticsearch.search.DocValueFormat;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-\n-class FieldValueFetcher {\n-    final String name;\n-    final MappedFieldType fieldType;\n-    final DocValueFormat format;\n-    final IndexFieldData<?> fieldData;\n-\n-    private FieldValueFetcher(String name, MappedFieldType fieldType, IndexFieldData<?> fieldData) {\n-        this.name = name;\n-        this.fieldType = fieldType;\n-        this.format = fieldType.docValueFormat(null, null);\n-        this.fieldData = fieldData;\n-    }\n-\n-    DocValueFetcher.Leaf getLeaf(LeafReaderContext context) {\n-        final LeafFieldData leafFieldData = fieldData.load(context);\n-        return leafFieldData.getLeafValueFetcher(format);\n-    }\n-\n-    Object format(Object value) {\n-        if (value instanceof Long) {\n-            return format.format((long) value);\n-        } else if (value instanceof Double) {\n-            return format.format((double) value);\n-        } else if (value instanceof BytesRef) {\n-            return format.format((BytesRef) value);\n-        } else if (value instanceof String) {\n-            return value.toString();\n-        } else {\n-            throw new IllegalArgumentException(\"Invalid type:[\" + value.getClass() + \"]\");\n-        }\n-    }\n-\n-    static List<FieldValueFetcher> build(QueryShardContext context, String[] fields) {\n-        List<FieldValueFetcher> fetchers = new ArrayList<>();\n-        for (String field : fields) {\n-            MappedFieldType fieldType = context.getFieldType(field);\n-            if (fieldType == null) {\n-                throw new IllegalArgumentException(\"Unknown field [\" + fieldType.name() + \"]\");\n-            }\n-            IndexFieldData<?> fieldData = context.getForField(fieldType);\n-            fetchers.add(new FieldValueFetcher(field, fieldType, fieldData));\n-        }\n-        return Collections.unmodifiableList(fetchers);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyNjQyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/65958#discussion_r537626429", "bodyText": "not really important since this is just a test, but do we need to keep this executorName instance variable if it is static?", "author": "talevy", "createdAt": "2020-12-07T16:06:07Z", "path": "x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java", "diffHunk": "@@ -134,7 +132,7 @@\n                 context\n             );\n             this.threadPool = threadPool;\n-            this.executorName = executorName;\n+            this.executorName = ThreadPool.Names.GENERIC;", "originalCommit": "e36f0aebc9d4e16bc9621e90f343185bf5d319ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7dc2270c0d44a988319856c1f2c0ae1e89ce4e0", "chunk": "diff --git a/x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java b/x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java\nindex c17df61504e..f647f8314ba 100644\n--- a/x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java\n+++ b/x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java\n\n@@ -132,7 +130,6 @@ public class TransformIndexerStateTests extends ESTestCase {\n                 context\n             );\n             this.threadPool = threadPool;\n-            this.executorName = ThreadPool.Names.GENERIC;\n \n             persistedState = new TransformState(\n                 context.getTaskState(),\n"}}, {"oid": "b7dc2270c0d44a988319856c1f2c0ae1e89ce4e0", "url": "https://github.com/elastic/elasticsearch/commit/b7dc2270c0d44a988319856c1f2c0ae1e89ce4e0", "message": "apply review comments", "committedDate": "2020-12-07T16:21:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcxNDkxMA==", "url": "https://github.com/elastic/elasticsearch/pull/65958#discussion_r537714910", "bodyText": "I am not sure about this change. This got recently introduced:\n#65721\nto fix:\n#65542\nThe change reverts #65721 and we might get test failures again. However, I am not sure the test problem justifies keeping the executor name. \ud83e\udd14", "author": "hendrikmuhs", "createdAt": "2020-12-07T18:03:45Z", "path": "x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java", "diffHunk": "@@ -236,9 +231,8 @@ public void setUpMocks() {\n         auditor = MockTransformAuditor.createMockAuditor();\n         transformConfigManager = new InMemoryTransformConfigManager();\n         client = new NoOpClient(getTestName());\n-        // we need \"generic\" as part of the name, because it is asserted\n-        executorName = ThreadPool.Names.GENERIC + \"-\" + getTestName();\n-        threadPool = new TestThreadPool(executorName, new ScalingExecutorBuilder(executorName, 4, 10, TimeValue.timeValueSeconds(30)));\n+        threadPool = new TestThreadPool(ThreadPool.Names.GENERIC,\n+            new ScalingExecutorBuilder(ThreadPool.Names.GENERIC, 4, 10, TimeValue.timeValueSeconds(30)));", "originalCommit": "b7dc2270c0d44a988319856c1f2c0ae1e89ce4e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2Mjg1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/65958#discussion_r539662856", "bodyText": "I don't think that #65542 is caused by the thread pool. If an assertion fails in the test, the indexer is not stopped and continues to fire request asynchronously. So #65721 fixes the error message caused by the test failure but not the failure itself. I guess there is a race condition that can make this assertTrue to fail in some exceptional case.\nI can add a try/finally block to ensure that we stop the indexer when an assertion fails, that will clarify things the next time a failure happens. Does that make sense ?", "author": "jimczi", "createdAt": "2020-12-09T21:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcxNDkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MTYzMA==", "url": "https://github.com/elastic/elasticsearch/pull/65958#discussion_r544251630", "bodyText": "#65542 failed when a new search request got scheduled but the thread pool was closed. The order of timestamps show that it 1st tried to queue the request than the failure happened, not vice versa. So the threadpool got closed.\nHowever, I am fine with an alternative implementation and enhanced error handling and logging in case of the error. This should help to find the root cause the next time it happens (which seems to be rare).", "author": "hendrikmuhs", "createdAt": "2020-12-16T12:16:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcxNDkxMA=="}], "type": "inlineReview", "revised_code": {"commit": "acc77d6ede292849b847d2e0c95ebf43d978b19e", "chunk": "diff --git a/x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java b/x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java\nindex f647f8314ba..fd2bd4120ec 100644\n--- a/x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java\n+++ b/x-pack/plugin/transform/src/test/java/org/elasticsearch/xpack/transform/transforms/TransformIndexerStateTests.java\n\n@@ -231,8 +231,7 @@ public class TransformIndexerStateTests extends ESTestCase {\n         auditor = MockTransformAuditor.createMockAuditor();\n         transformConfigManager = new InMemoryTransformConfigManager();\n         client = new NoOpClient(getTestName());\n-        threadPool = new TestThreadPool(ThreadPool.Names.GENERIC,\n-            new ScalingExecutorBuilder(ThreadPool.Names.GENERIC, 4, 10, TimeValue.timeValueSeconds(30)));\n+        threadPool = new TestThreadPool(ThreadPool.Names.GENERIC);\n     }\n \n     @After\n"}}, {"oid": "9a151d9b5416a645c1e0e53899fabb9613535207", "url": "https://github.com/elastic/elasticsearch/commit/9a151d9b5416a645c1e0e53899fabb9613535207", "message": "Merge branch 'master' into rollup_thread_pool", "committedDate": "2020-12-16T08:00:54Z", "type": "commit"}, {"oid": "46b568120f810b794ca1e9a32a1925e8b2410af4", "url": "https://github.com/elastic/elasticsearch/commit/46b568120f810b794ca1e9a32a1925e8b2410af4", "message": "line len", "committedDate": "2020-12-16T08:56:49Z", "type": "commit"}, {"oid": "acc77d6ede292849b847d2e0c95ebf43d978b19e", "url": "https://github.com/elastic/elasticsearch/commit/acc77d6ede292849b847d2e0c95ebf43d978b19e", "message": "fix transform test", "committedDate": "2020-12-16T09:49:23Z", "type": "commit"}, {"oid": "7e868ef142284bc5413d2ac1d7e5c664e277c173", "url": "https://github.com/elastic/elasticsearch/commit/7e868ef142284bc5413d2ac1d7e5c664e277c173", "message": "Merge branch 'master' into rollup_thread_pool", "committedDate": "2020-12-16T11:44:12Z", "type": "commit"}]}