{"pr_number": 53288, "pr_title": "Preserve metric types in top_metrics", "pr_createdAt": "2020-03-09T15:02:13Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53288", "timeline": [{"oid": "2b56a0314b80abdbd7f2a59a9ab4b7f5491ed8c9", "url": "https://github.com/elastic/elasticsearch/commit/2b56a0314b80abdbd7f2a59a9ab4b7f5491ed8c9", "message": "Preserve metric types in top_metrics\n\nThis changes the `top_metrics` aggregation to return metrics in their\noriginal type. Since it only supports numerics, that means that dates,\nlongs, and doubles will come back as stored, with their appropriate\nformatter applied.", "committedDate": "2020-03-09T14:22:49Z", "type": "commit"}, {"oid": "5d7d18ff5e1ddbe8ccbdf317e65d69a90cbaff4b", "url": "https://github.com/elastic/elasticsearch/commit/5d7d18ff5e1ddbe8ccbdf317e65d69a90cbaff4b", "message": "Fixup", "committedDate": "2020-03-09T15:00:15Z", "type": "commit"}, {"oid": "371671e676549bf14c08f1cb9288cbac1244ba1d", "url": "https://github.com/elastic/elasticsearch/commit/371671e676549bf14c08f1cb9288cbac1244ba1d", "message": "Doc", "committedDate": "2020-03-09T15:10:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0OTEzMA==", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r389749130", "bodyText": "Again, we haven't released this so this break is ok.", "author": "nik9000", "createdAt": "2020-03-09T15:02:58Z", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "diffHunk": "@@ -217,14 +218,14 @@ TopMetric topMetric() {\n         TopMetric(StreamInput in) throws IOException {\n             sortFormat = in.readNamedWriteable(DocValueFormat.class);\n             sortValue = in.readNamedWriteable(SortValue.class);\n-            metricValues = in.readDoubleArray();\n+            metricValues = in.readList(s -> s.readOptionalWriteable(MetricValue::new));", "originalCommit": "5d7d18ff5e1ddbe8ccbdf317e65d69a90cbaff4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "18dae354904bb17a2cabb7651341e3337b4f2708", "url": "https://github.com/elastic/elasticsearch/commit/18dae354904bb17a2cabb7651341e3337b4f2708", "message": "Merge branch 'master' into top_metrics_preserve_type", "committedDate": "2020-03-09T17:26:18Z", "type": "commit"}, {"oid": "7a323f8799a8839d4582b8725f4c02e0bff3a87b", "url": "https://github.com/elastic/elasticsearch/commit/7a323f8799a8839d4582b8725f4c02e0bff3a87b", "message": "Checkstyle", "committedDate": "2020-03-09T17:27:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMxMDcyNw==", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390310727", "bodyText": "I'm aware it is odd to have a \"SortValue\" be part of a MetricValue. It is a very convenient way to send a type-aware thing across the wire though.", "author": "nik9000", "createdAt": "2020-03-10T13:27:26Z", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "diffHunk": "@@ -269,17 +274,74 @@ public boolean equals(Object obj) {\n             TopMetric other = (TopMetric) obj;\n             return sortFormat.equals(other.sortFormat)\n                     && sortValue.equals(other.sortValue)\n-                    && Arrays.equals(metricValues, other.metricValues);\n+                    && metricValues.equals(other.metricValues);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(sortFormat, sortValue, Arrays.hashCode(metricValues));\n+            return Objects.hash(sortFormat, sortValue, metricValues);\n         }\n \n         @Override\n         public String toString() {\n-            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + Arrays.toString(metricValues) + \"]\"; \n+            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + metricValues + \"]\"; \n+        }\n+    }\n+\n+    static class MetricValue implements Writeable, ToXContent {\n+        private final DocValueFormat format; \n+        private final SortValue value;", "originalCommit": "7a323f8799a8839d4582b8725f4c02e0bff3a87b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzNDQ3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390334473", "bodyText": "I think this would be better as an inline comment than a PR comment.", "author": "not-napoleon", "createdAt": "2020-03-10T14:02:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMxMDcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM2MDMxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390360311", "bodyText": "\ud83d\udc4d", "author": "nik9000", "createdAt": "2020-03-10T14:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMxMDcyNw=="}], "type": "inlineReview", "revised_code": {"commit": "743a55729674ba92a81968700a8b1a50ca6b9396", "chunk": "diff --git a/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java b/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java\nindex c00f066e7b2..eb7474b7bff 100644\n--- a/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java\n+++ b/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java\n\n@@ -289,7 +289,12 @@ public class InternalTopMetrics extends InternalNumericMetricsAggregation.MultiV\n     }\n \n     static class MetricValue implements Writeable, ToXContent {\n-        private final DocValueFormat format; \n+        private final DocValueFormat format;\n+        /**\n+         * It is odd to have a \"SortValue\" be part of a MetricValue but it is\n+         * a very convenient way to send a type-aware thing across the\n+         * wire though. So here we are.\n+         */\n         private final SortValue value;\n \n         MetricValue(DocValueFormat format, SortValue value) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzODUyNw==", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390338527", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return format + \",\" + value;\n          \n          \n            \n                        return \"MetricValue(\" + format + \",\" + value + \")\";\n          \n      \n    \n    \n  \n\nPet peeve of mine, unless we have a good reason not to, we should include the class name in the toString.  I've gotten burned by this a few times trying to write exception messages.", "author": "not-napoleon", "createdAt": "2020-03-10T14:07:45Z", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java", "diffHunk": "@@ -269,17 +274,74 @@ public boolean equals(Object obj) {\n             TopMetric other = (TopMetric) obj;\n             return sortFormat.equals(other.sortFormat)\n                     && sortValue.equals(other.sortValue)\n-                    && Arrays.equals(metricValues, other.metricValues);\n+                    && metricValues.equals(other.metricValues);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(sortFormat, sortValue, Arrays.hashCode(metricValues));\n+            return Objects.hash(sortFormat, sortValue, metricValues);\n         }\n \n         @Override\n         public String toString() {\n-            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + Arrays.toString(metricValues) + \"]\"; \n+            return \"TopMetric[\" + sortFormat + \",\" + sortValue + \",\" + metricValues + \"]\"; \n+        }\n+    }\n+\n+    static class MetricValue implements Writeable, ToXContent {\n+        private final DocValueFormat format; \n+        private final SortValue value;\n+\n+        MetricValue(DocValueFormat format, SortValue value) {\n+            this.format = format;\n+            this.value = value;\n+        }\n+\n+        DocValueFormat getFormat() {\n+            return format;\n+        }\n+\n+        SortValue getValue() {\n+            return value;\n+        }\n+\n+        MetricValue(StreamInput in) throws IOException {\n+            format = in.readNamedWriteable(DocValueFormat.class);\n+            value = in.readNamedWriteable(SortValue.class);\n+        }\n+\n+        Number numberValue() {\n+            return value.numberValue();\n+        }\n+\n+        @Override\n+        public void writeTo(StreamOutput out) throws IOException {\n+            out.writeNamedWriteable(format);\n+            out.writeNamedWriteable(value);\n+        }\n+\n+        @Override\n+        public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n+            return value.toXContent(builder, format);\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return format + \",\" + value;", "originalCommit": "7a323f8799a8839d4582b8725f4c02e0bff3a87b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743a55729674ba92a81968700a8b1a50ca6b9396", "chunk": "diff --git a/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java b/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java\nindex c00f066e7b2..eb7474b7bff 100644\n--- a/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java\n+++ b/x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/InternalTopMetrics.java\n\n@@ -289,7 +289,12 @@ public class InternalTopMetrics extends InternalNumericMetricsAggregation.MultiV\n     }\n \n     static class MetricValue implements Writeable, ToXContent {\n-        private final DocValueFormat format; \n+        private final DocValueFormat format;\n+        /**\n+         * It is odd to have a \"SortValue\" be part of a MetricValue but it is\n+         * a very convenient way to send a type-aware thing across the\n+         * wire though. So here we are.\n+         */\n         private final SortValue value;\n \n         MetricValue(DocValueFormat format, SortValue value) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1NDcyMw==", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390354723", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * that we can steel from the longs to represent missing that\n          \n          \n            \n                     * that we can steal from the longs to represent missing that", "author": "not-napoleon", "createdAt": "2020-03-10T14:28:59Z", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/TopMetricsAggregator.java", "diffHunk": "@@ -249,12 +325,93 @@ public void close() {\n             values.close();\n         }\n     }\n-    private static class MissingMetricValues implements MetricValues {\n+\n+    /**\n+     * Loads metrics for whole numbers.\n+     */\n+    static class LongMetricValues extends CollectingMetricValues {\n+        /**\n+         * Tracks \"missing\" values in a {@link BitArray}. Unlike\n+         * {@link DoubleMetricValues}, we there isn't a sentinel value\n+         * that we can steel from the longs to represent missing that", "originalCommit": "7a323f8799a8839d4582b8725f4c02e0bff3a87b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3OTYyMA==", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r390479620", "bodyText": "Should we put an info blurb somewhere in the docs that multi-valued fields will be averaged together?", "author": "polyfractal", "createdAt": "2020-03-10T17:17:54Z", "path": "x-pack/plugin/analytics/src/main/java/org/elasticsearch/xpack/analytics/topmetrics/TopMetricsAggregator.java", "diffHunk": "@@ -234,12 +309,13 @@ public void swap(long lhs, long rhs) {\n         @Override\n         public Loader loader(LeafReaderContext ctx) throws IOException {\n             // TODO allow configuration of value mode", "originalCommit": "1448e7d0dd991d19862653b60b09ad6aa3f90d8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0NjcwOA==", "url": "https://github.com/elastic/elasticsearch/pull/53288#discussion_r391146708", "bodyText": "Probably! I'd planned to give the docs another pass in the next PR.", "author": "nik9000", "createdAt": "2020-03-11T17:36:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3OTYyMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "42edcc6515811d835028502b5b21c36b9fb37df4", "url": "https://github.com/elastic/elasticsearch/commit/42edcc6515811d835028502b5b21c36b9fb37df4", "message": "Merge branch 'master' into top_metrics_preserve_type", "committedDate": "2020-03-11T17:37:06Z", "type": "commit"}, {"oid": "42edcc6515811d835028502b5b21c36b9fb37df4", "url": "https://github.com/elastic/elasticsearch/commit/42edcc6515811d835028502b5b21c36b9fb37df4", "message": "Merge branch 'master' into top_metrics_preserve_type", "committedDate": "2020-03-11T17:37:06Z", "type": "forcePushed"}, {"oid": "743a55729674ba92a81968700a8b1a50ca6b9396", "url": "https://github.com/elastic/elasticsearch/commit/743a55729674ba92a81968700a8b1a50ca6b9396", "message": "Javadoc", "committedDate": "2020-03-11T17:40:26Z", "type": "commit"}]}