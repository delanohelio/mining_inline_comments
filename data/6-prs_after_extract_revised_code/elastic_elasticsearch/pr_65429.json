{"pr_number": 65429, "pr_title": "Return an error when a rate aggregation cannot calculate bucket sizes", "pr_createdAt": "2020-11-24T14:55:34Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65429", "timeline": [{"oid": "f8b7b38745838d4140daac71f9b03260eddc2cd1", "url": "https://github.com/elastic/elasticsearch/commit/f8b7b38745838d4140daac71f9b03260eddc2cd1", "message": "Return an error when a rate aggregation cannot calculate bucket sizes\n\nIn some cases when the rate aggregation is not a child of a date histogram\naggregation, it is not possible to determine the actual size of the date\nhistogram bucket. In this case the rate aggregation now throws an exception.\n\nCloses #63703", "committedDate": "2020-11-24T14:40:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc2NDMwOA==", "url": "https://github.com/elastic/elasticsearch/pull/65429#discussion_r529764308", "bodyText": "Any chance you could group this so unit.isMillisBased is called once? I think it might be a bit easier to read if you juggle the \"arms\" of the if statement.", "author": "nik9000", "createdAt": "2020-11-24T17:46:27Z", "path": "server/src/main/java/org/elasticsearch/common/Rounding.java", "diffHunk": "@@ -609,16 +609,22 @@ public String toString() {\n \n         private abstract class TimeUnitPreparedRounding extends PreparedRounding {\n             @Override\n-            public double roundingSize(long utcMillis, DateTimeUnit timeUnit) {\n+            public double roundingSize(Long utcMillis, DateTimeUnit timeUnit) {\n                 if (timeUnit.isMillisBased == unit.isMillisBased) {", "originalCommit": "f8b7b38745838d4140daac71f9b03260eddc2cd1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcd0356fbfbfd3cda8c44ffbe64ace843132d3f3", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/Rounding.java b/server/src/main/java/org/elasticsearch/common/Rounding.java\nindex 9d94c8fc0c6..83aa349732e 100644\n--- a/server/src/main/java/org/elasticsearch/common/Rounding.java\n+++ b/server/src/main/java/org/elasticsearch/common/Rounding.java\n\n@@ -609,22 +613,41 @@ public abstract class Rounding implements Writeable {\n \n         private abstract class TimeUnitPreparedRounding extends PreparedRounding {\n             @Override\n-            public double roundingSize(Long utcMillis, DateTimeUnit timeUnit) {\n-                if (timeUnit.isMillisBased == unit.isMillisBased) {\n-                    return (double) unit.ratio / timeUnit.ratio;\n+            public double roundingSize(long utcMillis, DateTimeUnit timeUnit) {\n+                if (unit.isMillisBased) {\n+                    if (timeUnit.isMillisBased) {\n+                        return (double) unit.ratio / timeUnit.ratio;\n+                    } else {\n+                        throw new IllegalArgumentException(\"Cannot use month-based rate unit [\" + timeUnit.shortName +\n+                            \"] with non-month based calendar interval histogram [\" + unit.shortName +\n+                            \"] only week, day, hour, minute and second are supported for this histogram\");\n+                    }\n                 } else {\n-                    if (unit.isMillisBased == false && utcMillis != null) {\n+                    if (timeUnit.isMillisBased) {\n                         return (double) (nextRoundingValue(utcMillis) - utcMillis) / timeUnit.ratio;\n                     } else {\n-                        if (timeUnit.isMillisBased == false) {\n-                            throw new IllegalArgumentException(\"Cannot use month-based rate unit [\" + timeUnit.shortName +\n-                                \"] with non-month based calendar interval histogram [\" + unit.shortName +\n-                                \"] only week, day, hour, minute and second are supported for this histogram\");\n-                        } else {\n-                            throw new IllegalArgumentException(\"Cannot use non month-based rate unit [\" + timeUnit.shortName +\n-                                \"] with month-based calendar interval histogram [\" + unit.shortName +\n-                                \"] only month, quarter and year are supported for this histogram\");\n-                        }\n+                        return (double) unit.ratio / timeUnit.ratio;\n+                    }\n+                }\n+            }\n+\n+            @Override\n+            public double roundingSize(DateTimeUnit timeUnit) {\n+                if (unit.isMillisBased) {\n+                    if (timeUnit.isMillisBased) {\n+                        return (double) unit.ratio / timeUnit.ratio;\n+                    } else {\n+                        throw new IllegalArgumentException(\"Cannot use month-based rate unit [\" + timeUnit.shortName +\n+                            \"] with non-month based calendar interval histogram [\" + unit.shortName +\n+                            \"] only week, day, hour, minute and second are supported for this histogram\");\n+                    }\n+                } else {\n+                    if (timeUnit.isMillisBased) {\n+                        throw new IllegalArgumentException(\"Cannot use non month-based rate unit [\" + timeUnit.shortName +\n+                            \"] with calendar interval histogram [\" + unit.shortName +\n+                            \"] only month, quarter and year are supported for this histogram\");\n+                    } else {\n+                        return (double) unit.ratio / timeUnit.ratio;\n                     }\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc2ODQ3NA==", "url": "https://github.com/elastic/elasticsearch/pull/65429#discussion_r529768474", "bodyText": "I wonder if it'd be easier to read if there were two methods? I'd kind of feel more comfortable having two just so you don't need auto-boxing. It might not make a huge difference, but in general Rounding doesn't its best not to allocate stuff. I think this method doesn't have to be so efficient, but still.", "author": "nik9000", "createdAt": "2020-11-24T17:53:06Z", "path": "server/src/main/java/org/elasticsearch/common/Rounding.java", "diffHunk": "@@ -609,16 +609,22 @@ public String toString() {\n \n         private abstract class TimeUnitPreparedRounding extends PreparedRounding {\n             @Override\n-            public double roundingSize(long utcMillis, DateTimeUnit timeUnit) {\n+            public double roundingSize(Long utcMillis, DateTimeUnit timeUnit) {", "originalCommit": "f8b7b38745838d4140daac71f9b03260eddc2cd1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcd0356fbfbfd3cda8c44ffbe64ace843132d3f3", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/common/Rounding.java b/server/src/main/java/org/elasticsearch/common/Rounding.java\nindex 9d94c8fc0c6..83aa349732e 100644\n--- a/server/src/main/java/org/elasticsearch/common/Rounding.java\n+++ b/server/src/main/java/org/elasticsearch/common/Rounding.java\n\n@@ -609,22 +613,41 @@ public abstract class Rounding implements Writeable {\n \n         private abstract class TimeUnitPreparedRounding extends PreparedRounding {\n             @Override\n-            public double roundingSize(Long utcMillis, DateTimeUnit timeUnit) {\n-                if (timeUnit.isMillisBased == unit.isMillisBased) {\n-                    return (double) unit.ratio / timeUnit.ratio;\n+            public double roundingSize(long utcMillis, DateTimeUnit timeUnit) {\n+                if (unit.isMillisBased) {\n+                    if (timeUnit.isMillisBased) {\n+                        return (double) unit.ratio / timeUnit.ratio;\n+                    } else {\n+                        throw new IllegalArgumentException(\"Cannot use month-based rate unit [\" + timeUnit.shortName +\n+                            \"] with non-month based calendar interval histogram [\" + unit.shortName +\n+                            \"] only week, day, hour, minute and second are supported for this histogram\");\n+                    }\n                 } else {\n-                    if (unit.isMillisBased == false && utcMillis != null) {\n+                    if (timeUnit.isMillisBased) {\n                         return (double) (nextRoundingValue(utcMillis) - utcMillis) / timeUnit.ratio;\n                     } else {\n-                        if (timeUnit.isMillisBased == false) {\n-                            throw new IllegalArgumentException(\"Cannot use month-based rate unit [\" + timeUnit.shortName +\n-                                \"] with non-month based calendar interval histogram [\" + unit.shortName +\n-                                \"] only week, day, hour, minute and second are supported for this histogram\");\n-                        } else {\n-                            throw new IllegalArgumentException(\"Cannot use non month-based rate unit [\" + timeUnit.shortName +\n-                                \"] with month-based calendar interval histogram [\" + unit.shortName +\n-                                \"] only month, quarter and year are supported for this histogram\");\n-                        }\n+                        return (double) unit.ratio / timeUnit.ratio;\n+                    }\n+                }\n+            }\n+\n+            @Override\n+            public double roundingSize(DateTimeUnit timeUnit) {\n+                if (unit.isMillisBased) {\n+                    if (timeUnit.isMillisBased) {\n+                        return (double) unit.ratio / timeUnit.ratio;\n+                    } else {\n+                        throw new IllegalArgumentException(\"Cannot use month-based rate unit [\" + timeUnit.shortName +\n+                            \"] with non-month based calendar interval histogram [\" + unit.shortName +\n+                            \"] only week, day, hour, minute and second are supported for this histogram\");\n+                    }\n+                } else {\n+                    if (timeUnit.isMillisBased) {\n+                        throw new IllegalArgumentException(\"Cannot use non month-based rate unit [\" + timeUnit.shortName +\n+                            \"] with calendar interval histogram [\" + unit.shortName +\n+                            \"] only month, quarter and year are supported for this histogram\");\n+                    } else {\n+                        return (double) unit.ratio / timeUnit.ratio;\n                     }\n                 }\n             }\n"}}, {"oid": "fcd0356fbfbfd3cda8c44ffbe64ace843132d3f3", "url": "https://github.com/elastic/elasticsearch/commit/fcd0356fbfbfd3cda8c44ffbe64ace843132d3f3", "message": "Address review comments", "committedDate": "2020-11-24T22:27:38Z", "type": "commit"}]}