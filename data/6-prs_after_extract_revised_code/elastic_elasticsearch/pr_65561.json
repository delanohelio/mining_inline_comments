{"pr_number": 65561, "pr_title": "[ML] Adding assignment_memory_basis to model_size_stats", "pr_createdAt": "2020-11-26T17:12:49Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65561", "timeline": [{"oid": "2e8e4c628c1e4e663510ac465ba994fd49912f47", "url": "https://github.com/elastic/elasticsearch/commit/2e8e4c628c1e4e663510ac465ba994fd49912f47", "message": "[ML] Adding assignment_memory_source to model_size_stats\n\nAt present the Java code makes a decision on whether to\nuse current model memory or model memory limit to calculate\nhow much memory a job requires to be assigned.\n\nThe plan is to move this decision to the C++ code, which will\nreport it via a new field in the model size stats.  An\nadditional change will be that once we have made the switch\nfrom using model memory limit to using current model memory\nwe will never switch back, as this causes large fluctuations\nup and down in memory requirement which will be much more\nnoticeable when autoscaling is in use.\n\nAlthough the only two options at present are model memory\nlimit and current model memory, the new enum includes a\nthird possibility, peak model memory.  To switch to this\nnow would be tricky, as there have been two bugs in the\nimplementation of peak model memory which render its value\nunreliable in 7.x.  However, in 8.x it might make sense to\nswitch to using peak model memory instead of current model\nmemory and it's much easier from a BWC perspective if the\nenum contains all the values from the start.\n\nRelates #63163", "committedDate": "2020-11-26T17:05:32Z", "type": "commit"}, {"oid": "d6983cf0852479f6fffee439ecf1b6dcd9f50d7c", "url": "https://github.com/elastic/elasticsearch/commit/d6983cf0852479f6fffee439ecf1b6dcd9f50d7c", "message": "string should have been keyword, doh!", "committedDate": "2020-11-30T10:07:22Z", "type": "commit"}, {"oid": "eb9a4ef7fb23ea142df0276e8ae0052b0e421cd6", "url": "https://github.com/elastic/elasticsearch/commit/eb9a4ef7fb23ea142df0276e8ae0052b0e421cd6", "message": "source -> basis", "committedDate": "2020-12-03T11:09:50Z", "type": "commit"}, {"oid": "198923cc94fa5bac88784a2a5f005d31183fa666", "url": "https://github.com/elastic/elasticsearch/commit/198923cc94fa5bac88784a2a5f005d31183fa666", "message": "Merge branch 'master' into add_assignment_memory_source", "committedDate": "2020-12-03T11:10:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3MDUwNw==", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535170507", "bodyText": "typo: ASSIGNMENT_MEMORY_BASISE_FIELD -> ASSIGNMENT_MEMORY_BASIS_FIELD", "author": "dimitris-athanasiou", "createdAt": "2020-12-03T12:07:41Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/process/ModelSizeStats.java", "diffHunk": "@@ -55,6 +56,7 @@\n     public static final ParseField TOTAL_PARTITION_FIELD_COUNT_FIELD = new ParseField(\"total_partition_field_count\");\n     public static final ParseField BUCKET_ALLOCATION_FAILURES_COUNT_FIELD = new ParseField(\"bucket_allocation_failures_count\");\n     public static final ParseField MEMORY_STATUS_FIELD = new ParseField(\"memory_status\");\n+    public static final ParseField ASSIGNMENT_MEMORY_BASISE_FIELD = new ParseField(\"assignment_memory_basis\");", "originalCommit": "198923cc94fa5bac88784a2a5f005d31183fa666", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "chunk": "diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/process/ModelSizeStats.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/process/ModelSizeStats.java\nindex e79113e4409..74d02dcaf2a 100644\n--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/process/ModelSizeStats.java\n+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/job/process/ModelSizeStats.java\n\n@@ -56,7 +56,7 @@ public class ModelSizeStats implements ToXContentObject {\n     public static final ParseField TOTAL_PARTITION_FIELD_COUNT_FIELD = new ParseField(\"total_partition_field_count\");\n     public static final ParseField BUCKET_ALLOCATION_FAILURES_COUNT_FIELD = new ParseField(\"bucket_allocation_failures_count\");\n     public static final ParseField MEMORY_STATUS_FIELD = new ParseField(\"memory_status\");\n-    public static final ParseField ASSIGNMENT_MEMORY_BASISE_FIELD = new ParseField(\"assignment_memory_basis\");\n+    public static final ParseField ASSIGNMENT_MEMORY_BASIS_FIELD = new ParseField(\"assignment_memory_basis\");\n     public static final ParseField CATEGORIZED_DOC_COUNT_FIELD = new ParseField(\"categorized_doc_count\");\n     public static final ParseField TOTAL_CATEGORY_COUNT_FIELD = new ParseField(\"total_category_count\");\n     public static final ParseField FREQUENT_CATEGORY_COUNT_FIELD = new ParseField(\"frequent_category_count\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3MjcxNw==", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535172717", "bodyText": "update with new name: assignment_memory_basis", "author": "dimitris-athanasiou", "createdAt": "2020-12-03T12:09:54Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -164,6 +165,19 @@ private void addModelSnapshotIndexRequests(BulkRequest bulkRequest) {\n                 \" \\\"retain\\\":false }\", XContentType.JSON);\n             bulkRequest.add(indexRequest);\n         }\n+        // Also index one that contains 'assignment_memory_source', which was added in 7.11", "originalCommit": "198923cc94fa5bac88784a2a5f005d31183fa666", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "chunk": "diff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\nindex 21d1e5403ca..50e07c085ac 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n\n@@ -165,7 +165,7 @@ public class MachineLearningGetResultsIT extends ESRestHighLevelClientTestCase {\n                 \" \\\"retain\\\":false }\", XContentType.JSON);\n             bulkRequest.add(indexRequest);\n         }\n-        // Also index one that contains 'assignment_memory_source', which was added in 7.11\n+        // Also index one that contains 'memory_assignment_basis', which was added in 7.11\n         {\n             IndexRequest indexRequest = new IndexRequest(RESULTS_INDEX);\n             indexRequest.source(\"{\\\"job_id\\\":\\\"\" + JOB_ID + \"\\\", \\\"timestamp\\\":1541587929000, \" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3MzA5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535173092", "bodyText": "here as well", "author": "dimitris-athanasiou", "createdAt": "2020-12-03T12:10:14Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -164,6 +165,19 @@ private void addModelSnapshotIndexRequests(BulkRequest bulkRequest) {\n                 \" \\\"retain\\\":false }\", XContentType.JSON);\n             bulkRequest.add(indexRequest);\n         }\n+        // Also index one that contains 'assignment_memory_source', which was added in 7.11\n+        {\n+            IndexRequest indexRequest = new IndexRequest(RESULTS_INDEX);\n+            indexRequest.source(\"{\\\"job_id\\\":\\\"\" + JOB_ID + \"\\\", \\\"timestamp\\\":1541587929000, \" +\n+                \"\\\"description\\\":\\\"State persisted due to job close at 2018-11-07T10:52:09+0000\\\", \\\"snapshot_id\\\":\\\"1541587929\\\",\" +\n+                \"\\\"snapshot_doc_count\\\":1, \\\"model_size_stats\\\":{\\\"job_id\\\":\\\"\" + JOB_ID + \"\\\", \\\"result_type\\\":\\\"model_size_stats\\\",\" +\n+                \"\\\"model_bytes\\\":51722, \\\"peak_model_bytes\\\":61322, \\\"model_bytes_exceeded\\\":10762, \\\"model_bytes_memory_limit\\\":40960,\" +\n+                \"\\\"total_by_field_count\\\":3, \\\"total_over_field_count\\\":0, \\\"total_partition_field_count\\\":2,\" +\n+                \"\\\"bucket_allocation_failures_count\\\":0, \\\"memory_status\\\":\\\"ok\\\", \\\"assignment_memory_source\\\":\\\"model_memory_limit\\\",\" +", "originalCommit": "198923cc94fa5bac88784a2a5f005d31183fa666", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "chunk": "diff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\nindex 21d1e5403ca..50e07c085ac 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n\n@@ -165,7 +165,7 @@ public class MachineLearningGetResultsIT extends ESRestHighLevelClientTestCase {\n                 \" \\\"retain\\\":false }\", XContentType.JSON);\n             bulkRequest.add(indexRequest);\n         }\n-        // Also index one that contains 'assignment_memory_source', which was added in 7.11\n+        // Also index one that contains 'memory_assignment_basis', which was added in 7.11\n         {\n             IndexRequest indexRequest = new IndexRequest(RESULTS_INDEX);\n             indexRequest.source(\"{\\\"job_id\\\":\\\"\" + JOB_ID + \"\\\", \\\"timestamp\\\":1541587929000, \" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NDI0NA==", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535174244", "bodyText": "why not use the enum value instead of parsing from string?", "author": "dimitris-athanasiou", "createdAt": "2020-12-03T12:11:14Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -236,35 +250,38 @@ public void testGetModelSnapshots() throws IOException {\n             assertThat(response.snapshots().get(0).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(0).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(0).getModelSizeStats().getAssignmentMemoryBasis(), nullValue());\n \n             assertThat(response.snapshots().get(1).getJobId(), equalTo(JOB_ID));\n-            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541588919\"));\n+            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541587929\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n             assertThat(response.snapshots().get(1).getDescription(), equalTo(\"State persisted due to job close at\" +\n-                \" 2018-11-07T11:08:39+0000\"));\n+                \" 2018-11-07T10:52:09+0000\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n-            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541588919000L)));\n+            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541587929000L)));\n             assertThat(response.snapshots().get(1).getLatestRecordTimeStamp(), equalTo(new Date(1519931700000L)));\n             assertThat(response.snapshots().get(1).getLatestResultTimeStamp(), equalTo(new Date(1519930800000L)));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getJobId(), equalTo(JOB_ID));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytes(), equalTo(51722L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getPeakModelBytes(), equalTo(61322L));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(null));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(null));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(10762L));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(40960L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalByFieldCount(), equalTo(3L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalOverFieldCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalPartitionFieldCount(), equalTo(2L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getAssignmentMemoryBasis(),\n+                equalTo(ModelSizeStats.AssignmentMemoryBasis.fromString(\"model_memory_limit\")));", "originalCommit": "198923cc94fa5bac88784a2a5f005d31183fa666", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "chunk": "diff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\nindex 21d1e5403ca..50e07c085ac 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n\n@@ -273,7 +273,7 @@ public class MachineLearningGetResultsIT extends ESRestHighLevelClientTestCase {\n             assertThat(response.snapshots().get(1).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getAssignmentMemoryBasis(),\n-                equalTo(ModelSizeStats.AssignmentMemoryBasis.fromString(\"model_memory_limit\")));\n+                equalTo(ModelSizeStats.AssignmentMemoryBasis.MODEL_MEMORY_LIMIT));\n \n             assertThat(response.snapshots().get(2).getJobId(), equalTo(JOB_ID));\n             assertThat(response.snapshots().get(2).getSnapshotId(), equalTo(\"1541588919\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NDk1NA==", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535174954", "bodyText": "use enum value?", "author": "dimitris-athanasiou", "createdAt": "2020-12-03T12:11:59Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -513,27 +582,52 @@ public void testGetModelSnapshots() throws IOException {\n             assertThat(response.snapshots().get(0).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(0).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(0).getModelSizeStats().getAssignmentMemoryBasis(), nullValue());\n \n             assertThat(response.snapshots().get(1).getJobId(), equalTo(JOB_ID));\n-            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541588919\"));\n+            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541587929\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n             assertThat(response.snapshots().get(1).getDescription(), equalTo(\"State persisted due to job close at\" +\n-                \" 2018-11-07T11:08:39+0000\"));\n+                \" 2018-11-07T10:52:09+0000\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n-            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541588919000L)));\n+            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541587929000L)));\n             assertThat(response.snapshots().get(1).getLatestRecordTimeStamp(), equalTo(new Date(1519931700000L)));\n             assertThat(response.snapshots().get(1).getLatestResultTimeStamp(), equalTo(new Date(1519930800000L)));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getJobId(), equalTo(JOB_ID));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytes(), equalTo(51722L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getPeakModelBytes(), equalTo(61322L));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(null));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(null));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(10762L));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(40960L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalByFieldCount(), equalTo(3L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalOverFieldCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalPartitionFieldCount(), equalTo(2L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getAssignmentMemoryBasis(),\n+                equalTo(ModelSizeStats.AssignmentMemoryBasis.fromString(\"model_memory_limit\")));", "originalCommit": "198923cc94fa5bac88784a2a5f005d31183fa666", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "chunk": "diff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\nindex 21d1e5403ca..50e07c085ac 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n\n@@ -605,7 +605,7 @@ public class MachineLearningGetResultsIT extends ESRestHighLevelClientTestCase {\n             assertThat(response.snapshots().get(1).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getAssignmentMemoryBasis(),\n-                equalTo(ModelSizeStats.AssignmentMemoryBasis.fromString(\"model_memory_limit\")));\n+                equalTo(ModelSizeStats.AssignmentMemoryBasis.MODEL_MEMORY_LIMIT));\n \n             assertThat(response.snapshots().get(2).getJobId(), equalTo(JOB_ID));\n             assertThat(response.snapshots().get(2).getSnapshotId(), equalTo(\"1541588919\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NTA5NA==", "url": "https://github.com/elastic/elasticsearch/pull/65561#discussion_r535175094", "bodyText": "use enum value?", "author": "dimitris-athanasiou", "createdAt": "2020-12-03T12:12:07Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java", "diffHunk": "@@ -513,27 +582,52 @@ public void testGetModelSnapshots() throws IOException {\n             assertThat(response.snapshots().get(0).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(0).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(0).getModelSizeStats().getAssignmentMemoryBasis(), nullValue());\n \n             assertThat(response.snapshots().get(1).getJobId(), equalTo(JOB_ID));\n-            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541588919\"));\n+            assertThat(response.snapshots().get(1).getSnapshotId(), equalTo(\"1541587929\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n             assertThat(response.snapshots().get(1).getDescription(), equalTo(\"State persisted due to job close at\" +\n-                \" 2018-11-07T11:08:39+0000\"));\n+                \" 2018-11-07T10:52:09+0000\"));\n             assertThat(response.snapshots().get(1).getSnapshotDocCount(), equalTo(1));\n-            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541588919000L)));\n+            assertThat(response.snapshots().get(1).getTimestamp(), equalTo(new Date(1541587929000L)));\n             assertThat(response.snapshots().get(1).getLatestRecordTimeStamp(), equalTo(new Date(1519931700000L)));\n             assertThat(response.snapshots().get(1).getLatestResultTimeStamp(), equalTo(new Date(1519930800000L)));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getJobId(), equalTo(JOB_ID));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytes(), equalTo(51722L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getPeakModelBytes(), equalTo(61322L));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(null));\n-            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(null));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesExceeded(), equalTo(10762L));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(40960L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalByFieldCount(), equalTo(3L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalOverFieldCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getTotalPartitionFieldCount(), equalTo(2L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n+            assertThat(response.snapshots().get(1).getModelSizeStats().getAssignmentMemoryBasis(),\n+                equalTo(ModelSizeStats.AssignmentMemoryBasis.fromString(\"model_memory_limit\")));\n+\n+            assertThat(response.snapshots().get(2).getJobId(), equalTo(JOB_ID));\n+            assertThat(response.snapshots().get(2).getSnapshotId(), equalTo(\"1541588919\"));\n+            assertThat(response.snapshots().get(2).getSnapshotDocCount(), equalTo(1));\n+            assertThat(response.snapshots().get(2).getDescription(), equalTo(\"State persisted due to job close at\" +\n+                \" 2018-11-07T11:08:39+0000\"));\n+            assertThat(response.snapshots().get(2).getSnapshotDocCount(), equalTo(1));\n+            assertThat(response.snapshots().get(2).getTimestamp(), equalTo(new Date(1541588919000L)));\n+            assertThat(response.snapshots().get(2).getLatestRecordTimeStamp(), equalTo(new Date(1519931700000L)));\n+            assertThat(response.snapshots().get(2).getLatestResultTimeStamp(), equalTo(new Date(1519930800000L)));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getJobId(), equalTo(JOB_ID));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getModelBytes(), equalTo(51722L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getPeakModelBytes(), equalTo(61322L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getModelBytesExceeded(), equalTo(null));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getModelBytesMemoryLimit(), equalTo(null));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getTotalByFieldCount(), equalTo(3L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getTotalOverFieldCount(), equalTo(0L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getTotalPartitionFieldCount(), equalTo(2L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getBucketAllocationFailuresCount(), equalTo(0L));\n+            assertThat(response.snapshots().get(2).getModelSizeStats().getMemoryStatus(),\n+                equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));", "originalCommit": "198923cc94fa5bac88784a2a5f005d31183fa666", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "chunk": "diff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\nindex 21d1e5403ca..50e07c085ac 100644\n--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningGetResultsIT.java\n\n@@ -605,7 +605,7 @@ public class MachineLearningGetResultsIT extends ESRestHighLevelClientTestCase {\n             assertThat(response.snapshots().get(1).getModelSizeStats().getMemoryStatus(),\n                 equalTo(ModelSizeStats.MemoryStatus.fromString(\"ok\")));\n             assertThat(response.snapshots().get(1).getModelSizeStats().getAssignmentMemoryBasis(),\n-                equalTo(ModelSizeStats.AssignmentMemoryBasis.fromString(\"model_memory_limit\")));\n+                equalTo(ModelSizeStats.AssignmentMemoryBasis.MODEL_MEMORY_LIMIT));\n \n             assertThat(response.snapshots().get(2).getJobId(), equalTo(JOB_ID));\n             assertThat(response.snapshots().get(2).getSnapshotId(), equalTo(\"1541588919\"));\n"}}, {"oid": "859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "url": "https://github.com/elastic/elasticsearch/commit/859eb4dae63cefb85547ed97d0d6e6b5d9ad63f9", "message": "Fixing typos and other code review comments", "committedDate": "2020-12-03T14:55:36Z", "type": "commit"}, {"oid": "f0863baaa18b4074d81fe0b5252dad181641d212", "url": "https://github.com/elastic/elasticsearch/commit/f0863baaa18b4074d81fe0b5252dad181641d212", "message": "Merge branch 'master' into add_assignment_memory_source", "committedDate": "2020-12-03T15:33:41Z", "type": "commit"}]}