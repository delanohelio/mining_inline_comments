{"pr_number": 57603, "pr_title": "SQL: Improve performances of LTRIM/RTRIM", "pr_createdAt": "2020-06-03T14:13:27Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57603", "timeline": [{"oid": "c251deb85295e0d9dd2ec648ad4f8b4a86cecfa8", "url": "https://github.com/elastic/elasticsearch/commit/c251deb85295e0d9dd2ec648ad4f8b4a86cecfa8", "message": "SQL: Use java String methods for LTRIM/RTRIM (#57594)\n\nPreviously, we had our own implementation for stripping leading and\ntrailing whitespaces which substantially less performant than the java's\nString stripLeading & stripTrailingMethods.\n\nEnhanced LENGTH unit tests and compine a couple of LTRIM/RTRIM integ\ntests.\n\n(cherry picked from commit ee7868d68733f195dc46926a7eab3d9dd7033ef4)", "committedDate": "2020-06-03T14:11:27Z", "type": "commit"}, {"oid": "15d534e0e0abe791015b9b64f0f28624390a6e58", "url": "https://github.com/elastic/elasticsearch/commit/15d534e0e0abe791015b9b64f0f28624390a6e58", "message": "use custom impl for Java < 11", "committedDate": "2020-06-03T14:21:10Z", "type": "commit"}, {"oid": "9efe125139ed8754f49a9289edfb189fd30662c1", "url": "https://github.com/elastic/elasticsearch/commit/9efe125139ed8754f49a9289edfb189fd30662c1", "message": "use hasLength()", "committedDate": "2020-06-03T14:36:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA1OTkxMg==", "url": "https://github.com/elastic/elasticsearch/pull/57603#discussion_r435059912", "bodyText": "Nit: more compact alternative.\nint i = s.length() - 1;\nwhile (i >= 0 && Character.isWhitespace(s.charAt(i))) {\n    i --;\n}\nreturn s.substring(0, i + 1);\n\nSimilar for treamLeading.", "author": "bpintea", "createdAt": "2020-06-04T07:51:39Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionUtils.java", "diffHunk": "@@ -47,11 +48,16 @@ static String trimTrailingWhitespaces(String s) {\n             return s;\n         }\n \n-        StringBuilder sb = new StringBuilder(s);\n-        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(sb.length() - 1))) {\n-            sb.deleteCharAt(sb.length() - 1);\n+        int endIdx = -1;\n+        for (int i = s.length() - 1; (i >= 0) && (endIdx < 0); i--) {\n+            if (Character.isWhitespace(s.charAt(i)) == false) {\n+                endIdx = i;\n+            }\n         }\n-        return sb.toString();\n+        if (endIdx < 0) {\n+            return EMPTY;\n+        }\n+        return s.substring(0, endIdx + 1);", "originalCommit": "9efe125139ed8754f49a9289edfb189fd30662c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE1MjY3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57603#discussion_r435152676", "bodyText": "@bpintea cool, thx, with your approach:\nBenchmark                         Mode  Cnt      Score    Error  Units\nStringTrim.testWithJavaStrip      avgt   25   1342.251 \u00b1  7.019  ns/op\nStringTrim.testWithStringBuilder  avgt   25  82599.137 \u00b1 86.073  ns/op\nStringTrim.testWithSubstring      avgt   25   1035.607 \u00b1 15.208  ns/op", "author": "matriv", "createdAt": "2020-06-04T10:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA1OTkxMg=="}], "type": "inlineReview", "revised_code": {"commit": "9b6f535d03139e13ad70dd1b92d42ac1c100f97f", "chunk": "diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionUtils.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionUtils.java\nindex 9877a87f90b..c272084875b 100644\n--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionUtils.java\n+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionUtils.java\n\n@@ -48,16 +47,11 @@ final class StringFunctionUtils {\n             return s;\n         }\n \n-        int endIdx = -1;\n-        for (int i = s.length() - 1; (i >= 0) && (endIdx < 0); i--) {\n-            if (Character.isWhitespace(s.charAt(i)) == false) {\n-                endIdx = i;\n-            }\n+        int i = s.length() - 1;\n+        while (i >= 0 && Character.isWhitespace(s.charAt(i))) {\n+            i--;\n         }\n-        if (endIdx < 0) {\n-            return EMPTY;\n-        }\n-        return s.substring(0, endIdx + 1);\n+        return s.substring(0, i + 1);\n     }\n \n     /**\n"}}, {"oid": "9b6f535d03139e13ad70dd1b92d42ac1c100f97f", "url": "https://github.com/elastic/elasticsearch/commit/9b6f535d03139e13ad70dd1b92d42ac1c100f97f", "message": "simplify algorithm", "committedDate": "2020-06-04T10:29:26Z", "type": "commit"}, {"oid": "fb5d661f4ca1cbd244844f7d650aca77298f4946", "url": "https://github.com/elastic/elasticsearch/commit/fb5d661f4ca1cbd244844f7d650aca77298f4946", "message": "Merge remote-tracking branch 'upstream/7.x' into backport-57594-7.x", "committedDate": "2020-06-04T10:29:47Z", "type": "commit"}]}