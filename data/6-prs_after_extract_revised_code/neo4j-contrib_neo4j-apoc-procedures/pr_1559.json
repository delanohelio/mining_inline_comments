{"pr_number": 1559, "pr_title": "Fixes #1555 and #1558 ", "pr_createdAt": "2020-06-12T17:15:20Z", "pr_url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559", "timeline": [{"oid": "fa22c3e4fae7cdaf1233a4f9b0836f62394f0da6", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/fa22c3e4fae7cdaf1233a4f9b0836f62394f0da6", "message": "Fixes #1555 and #1558\n\nFixes typo in Util.mergeNode", "committedDate": "2020-06-12T16:57:04Z", "type": "commit"}, {"oid": "3a5a23ce759f2478cf5eec57107ad2243bb4c971", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/3a5a23ce759f2478cf5eec57107ad2243bb4c971", "message": "Allows fixing damage caused by #1555 and #1558\n\napoc.custom.removeProcedure and apoc.custom.removeFunction no longer expect there to be only one function/procedure with given name.\n\nWith this users affected by #1555 and #1558 can remove the extra functions/procedures.", "committedDate": "2020-06-12T17:00:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0OTY2MQ==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r442749661", "bodyText": "This should be not necessary.", "author": "conker84", "createdAt": "2020-06-19T10:02:29Z", "path": "src/main/java/apoc/custom/CypherProceduresHandler.java", "diffHunk": "@@ -598,30 +598,32 @@ private AnyValue convertToValueRecursive(Object... toConverts) {\n \n     public void removeProcedure(String name) {\n         withSystemDb(tx -> {\n-            Node node = Iterators.single(tx.findNodes(SystemLabels.ApocCypherProcedures,\n+            tx.findNodes(SystemLabels.ApocCypherProcedures,", "originalCommit": "3a5a23ce759f2478cf5eec57107ad2243bb4c971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzNDM0Nw==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r450634347", "bodyText": "We can no longer assume there will no more than one result, because there are databases out in the wild affected by #1555 that have multiple records with same name", "author": "augonis", "createdAt": "2020-07-07T06:19:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0OTY2MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0OTc1Mw==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r442749753", "bodyText": "This should be not necessary as well", "author": "conker84", "createdAt": "2020-06-19T10:02:38Z", "path": "src/main/java/apoc/custom/CypherProceduresHandler.java", "diffHunk": "@@ -598,30 +598,32 @@ private AnyValue convertToValueRecursive(Object... toConverts) {\n \n     public void removeProcedure(String name) {\n         withSystemDb(tx -> {\n-            Node node = Iterators.single(tx.findNodes(SystemLabels.ApocCypherProcedures,\n+            tx.findNodes(SystemLabels.ApocCypherProcedures,\n                     SystemPropertyKeys.database.name(), api.databaseName(),\n                     SystemPropertyKeys.name.name(), name\n-            ).stream().filter(n -> n.hasLabel(SystemLabels.Procedure)).iterator());\n-            ProcedureDescriptor descriptor = procedureDescriptor(node);\n-            registerProcedure(descriptor.getSignature(), null);\n-            registeredProcedureSignatures.remove(descriptor.getSignature());\n-            node.delete();\n-            setLastUpdate(tx);\n+            ).stream().filter(n -> n.hasLabel(SystemLabels.Procedure)).forEach(node -> {\n+                ProcedureDescriptor descriptor = procedureDescriptor(node);\n+                registerProcedure(descriptor.getSignature(), null);\n+                registeredProcedureSignatures.remove(descriptor.getSignature());\n+                node.delete();\n+                setLastUpdate(tx);\n+            });\n             return null;\n         });\n     }\n \n     public void removeFunction(String name) {\n         withSystemDb(tx -> {\n-            Node node = Iterators.single(tx.findNodes(SystemLabels.ApocCypherProcedures,\n+            tx.findNodes(SystemLabels.ApocCypherProcedures,", "originalCommit": "3a5a23ce759f2478cf5eec57107ad2243bb4c971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzNDQ5Mg==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r450634492", "bodyText": "We can no longer assume there will no more than one result, because there are databases out in the wild affected by #1558 that have multiple records with same name", "author": "augonis", "createdAt": "2020-07-07T06:19:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0OTc1Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "fb313780ab64c9bca075140d60c1c8e1dc88a328", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/fb313780ab64c9bca075140d60c1c8e1dc88a328", "message": "Adds tests for #1555 and #1558", "committedDate": "2020-06-29T04:53:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NDI5NQ==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r451384295", "bodyText": "Can you also add a test for the system db that checks if there is more than 1 node?", "author": "conker84", "createdAt": "2020-07-08T08:47:41Z", "path": "src/test/java/apoc/custom/CypherProceduresTest.java", "diffHunk": "@@ -258,6 +258,22 @@ public void shouldRemoveTheCustomFunction() throws Exception {\n         TestUtil.count(db, \"return custom.answer()\");\n     }\n \n+    @Test\n+    public void shouldOverwriteAndRemoveCustomProcedure() throws Exception {\n+        db.executeTransactionally(\"call apoc.custom.asProcedure('answer','RETURN 42')\");\n+        db.executeTransactionally(\"call apoc.custom.asProcedure('answer','RETURN 42')\");\n+        assertEquals(\"Expecting one procedure listed\", 1, TestUtil.count(db, \"call apoc.custom.list()\"));", "originalCommit": "fb313780ab64c9bca075140d60c1c8e1dc88a328", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUwNTM2Nw==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r451505367", "bodyText": "You mean like a separate test (what exatcly I would be testing? Unit test for Util.mergeNode?) or just a new assertions in these tests?", "author": "augonis", "createdAt": "2020-07-08T12:27:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NDI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE3NjY4Nw==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r452176687", "bodyText": "No I mean a new assertion for this test that checks into the system db if there is just one node for the procedure/function; as we removed the Iterators.single now would be better have a direct check into the system db", "author": "conker84", "createdAt": "2020-07-09T12:22:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NDI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI5NjMzNg==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r452296336", "bodyText": "assertEquals(\"Expecting one procedure listed\", 1, TestUtil.count(db, \"call apoc.custom.list()\")); already does that, just indirectly.\nAnd to do the check I would be more or less copying the implementation of CypherProceduresHandler.readSignatures, I'm not that comfortable querying db in code (no cypher) to write a bespoke query for the test.", "author": "augonis", "createdAt": "2020-07-09T15:18:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NDI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3Mjc1Ng==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r453172756", "bodyText": "ok so let's leave it as is", "author": "conker84", "createdAt": "2020-07-11T08:39:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NDI5NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NDQwNg==", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1559#discussion_r451384406", "bodyText": "Same as above", "author": "conker84", "createdAt": "2020-07-08T08:47:51Z", "path": "src/test/java/apoc/custom/CypherProceduresTest.java", "diffHunk": "@@ -258,6 +258,22 @@ public void shouldRemoveTheCustomFunction() throws Exception {\n         TestUtil.count(db, \"return custom.answer()\");\n     }\n \n+    @Test\n+    public void shouldOverwriteAndRemoveCustomProcedure() throws Exception {\n+        db.executeTransactionally(\"call apoc.custom.asProcedure('answer','RETURN 42')\");\n+        db.executeTransactionally(\"call apoc.custom.asProcedure('answer','RETURN 42')\");\n+        assertEquals(\"Expecting one procedure listed\", 1, TestUtil.count(db, \"call apoc.custom.list()\"));\n+        db.executeTransactionally(\"call apoc.custom.removeProcedure('answer')\");\n+    }\n+\n+    @Test\n+    public void shouldOverwriteAndRemoveCustomFunction() throws Exception {\n+        db.executeTransactionally(\"call apoc.custom.asFunction('answer','RETURN 42','long')\");\n+        db.executeTransactionally(\"call apoc.custom.asFunction('answer','RETURN 42','long')\");\n+        assertEquals(\"Expecting one function listed\", 1, TestUtil.count(db, \"call apoc.custom.list()\"));", "originalCommit": "fb313780ab64c9bca075140d60c1c8e1dc88a328", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}