{"pr_number": 231, "pr_title": "HH-106303 registration in consul properly", "pr_createdAt": "2020-03-26T11:29:36Z", "pr_url": "https://github.com/hhru/nuts-and-bolts/pull/231", "timeline": [{"oid": "89a1a0600cfa9327d3a0491178f2d25d19d04fab", "url": "https://github.com/hhru/nuts-and-bolts/commit/89a1a0600cfa9327d3a0491178f2d25d19d04fab", "message": "HH-106303 registration in consul properly", "committedDate": "2020-03-26T11:27:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNjQwMg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398526402", "bodyText": "\u043e\u043d \u0447\u0442\u043e-\u0442\u043e \u043a\u0438\u0434\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c?", "author": "dzharikhin", "createdAt": "2020-03-26T12:17:20Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java", "diffHunk": "@@ -57,11 +57,14 @@ public ConsulClient getClient() {\n     return client;\n   }\n \n-  @PostConstruct\n   void register() {\n     if (enabled) {\n-      client.agentServiceRegister(service);\n-      logger.info(\"Registered service: {} to consul\", service);\n+      try {\n+        client.agentServiceRegister(service);", "originalCommit": "89a1a0600cfa9327d3a0491178f2d25d19d04fab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NDI2Nw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398544267", "bodyText": "TransportException, OperationException \u043c\u043e\u0436\u0435\u0442 \u0435\u0449\u0435 \u0447\u0442\u043e \u0442\u043e", "author": "heruv1m", "createdAt": "2020-03-26T12:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNjQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDUyOA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398554528", "bodyText": "\u043d\u0443 \u0432 \u043e\u0431\u0449\u0435\u043c \u0442\u0435\u0441\u0442 \u043d\u0430\u0434\u043e)", "author": "dzharikhin", "createdAt": "2020-03-26T13:03:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNjQwMg=="}], "type": "inlineReview", "revised_code": {"commit": "1913f1f03d7fe27d74bd10e88b459f99b6672d18", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java b/nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java\nindex a5be0ae8..4ddfa694 100644\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java\n+++ b/nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java\n\n@@ -57,11 +57,11 @@ public class ConsulService {\n     return client;\n   }\n \n-  void register() {\n+  public void register() {\n     if (enabled) {\n       try {\n         client.agentServiceRegister(service);\n-        logger.info(\"Registered service: {} to consul\", service);\n+        logger.info(\"Registered consul service: {}\", service);\n       } catch (RuntimeException ex) {\n         throw new ConsulServiceException(\"Can't register service in consul\", ex);\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNzUxNQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398527515", "bodyText": "\u0430 \u0447\u0435 \u043d\u0435 jettyEventListener?", "author": "dzharikhin", "createdAt": "2020-03-26T12:19:14Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/NabProdConfig.java", "diffHunk": "@@ -60,4 +60,9 @@ ConsulService consulService(FileSettings fileSettings, String datacenter, AppMet\n     var address = InetAddress.getLocalHost().getHostAddress();\n     return new ConsulService(fileSettings, datacenter, address, appMetadata);\n   }\n+\n+  @Bean\n+  JettyEventListener customSpringEventListener(ConsulService consulService){", "originalCommit": "89a1a0600cfa9327d3a0491178f2d25d19d04fab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NTEzOA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398545138", "bodyText": "\u0438\u0441\u043f\u0440\u0430\u0432\u043b\u044e", "author": "heruv1m", "createdAt": "2020-03-26T12:49:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNzUxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "1913f1f03d7fe27d74bd10e88b459f99b6672d18", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/NabProdConfig.java b/nab-starter/src/main/java/ru/hh/nab/starter/NabProdConfig.java\nindex ba3d154e..e987a149 100644\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/NabProdConfig.java\n+++ b/nab-starter/src/main/java/ru/hh/nab/starter/NabProdConfig.java\n\n@@ -62,7 +63,7 @@ public class NabProdConfig {\n   }\n \n   @Bean\n-  JettyEventListener customSpringEventListener(ConsulService consulService){\n+  JettyEventListener jettyEventListener(ConsulService consulService){\n     return new JettyEventListener(consulService);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNzg1OQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398527859", "bodyText": "\u043c\u0431 \u0443\u0431\u0440\u0430\u0442\u044c \u0432\u0441\u0435 \u043f\u0440\u043e \u044d\u0432\u0435\u043d\u0442\u044b \u0432 events?", "author": "dzharikhin", "createdAt": "2020-03-26T12:19:48Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/JettyEventListener.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package ru.hh.nab.starter;", "originalCommit": "89a1a0600cfa9327d3a0491178f2d25d19d04fab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0Njc1OQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398546759", "bodyText": "\u043b\u0438\u0441\u043d\u0435\u0440 \u0441\u043f\u0440\u0438\u043d\u0433\u043e\u0432\u044b\u0439 \u043f\u043e\u0436\u0430\u043b\u0443\u0439 \u0434\u0430, \u0430 \u0434\u0436\u0435\u0442\u0435\u0432\u0441\u043a\u0438\u0439 \u044f \u0431\u044b \u0432 \u043f\u0430\u043a\u0435\u0442\u0435 \u0434\u0436\u0435\u0442\u0442\u0438 \u043e\u0441\u0442\u0430\u0432\u0438\u043b. \u041a\u0430\u0436\u0435\u0442\u0441\u044f \u0431\u043b\u0438\u0436\u0435", "author": "heruv1m", "createdAt": "2020-03-26T12:51:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNzg1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1NDM2Nw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398554367", "bodyText": "\u043e\u043a", "author": "dzharikhin", "createdAt": "2020-03-26T13:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNzg1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "1913f1f03d7fe27d74bd10e88b459f99b6672d18", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/JettyEventListener.java b/nab-starter/src/main/java/ru/hh/nab/starter/events/JettyEventListener.java\nsimilarity index 88%\nrename from nab-starter/src/main/java/ru/hh/nab/starter/JettyEventListener.java\nrename to nab-starter/src/main/java/ru/hh/nab/starter/events/JettyEventListener.java\nindex 5ef6b3f4..4a84ba9c 100644\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/JettyEventListener.java\n+++ b/nab-starter/src/main/java/ru/hh/nab/starter/events/JettyEventListener.java\n\n@@ -1,8 +1,9 @@\n-package ru.hh.nab.starter;\n+package ru.hh.nab.starter.events;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.context.event.EventListener;\n+import ru.hh.nab.starter.ConsulService;\n \n public class JettyEventListener {\n   private static final Logger logger = LoggerFactory.getLogger(JettyEventListener.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDE1NA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398530154", "bodyText": "\u043c\u043d\u0435 \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0447\u0442\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u043e\u0442 webappinitializer \u0438\u0434\u0443\u0442. \u044d\u0442\u043e \u043f\u043e \u0438\u0434\u0435\u0435 \u0442\u043e\u0442 \u0441\u0430\u043c\u044b\u0439 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0443\u043b\u0438\u0442 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0435\u0439. \u043e\u043d \u0432\u0440\u043e\u0434\u0435 \u0431\u044b \u0437\u043d\u0430\u0435\u0442 \u0443\u0436\u0435 \u043f\u0440\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0438 \u0432\u0441\u044e \u043a\u0443\u0445\u043d\u044e. \u0432\u043e\u0442 \u0435\u043c\u0443 \u0431\u044b \u0432\u0441\u0435\u043c\u0438 \u044d\u0442\u0438\u043c\u0438 \u043b\u0438\u0441\u0442\u0435\u043d\u0435\u0440\u0430\u043c\u0438 \u0438 \u0437\u0430\u043d\u044f\u0442\u044c\u0441\u044f", "author": "dzharikhin", "createdAt": "2020-03-26T12:24:00Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyServerFactory.java", "diffHunk": "@@ -15,10 +16,11 @@\n \n   private static final int DEFAULT_IDLE_TIMEOUT_MS = (int) Duration.ofMinutes(1).toMillis();\n \n-  public static JettyServer create(FileSettings fileSettings, ThreadPool threadPool, WebAppInitializer webAppInitializer) {\n+  public static JettyServer create(FileSettings fileSettings, ThreadPool threadPool, WebAppInitializer webAppInitializer,", "originalCommit": "89a1a0600cfa9327d3a0491178f2d25d19d04fab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MjQwNg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398582406", "bodyText": "\u0442\u0443\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430. WebAppContext \u0441\u0442\u0430\u0440\u0442\u0443\u0435\u0442 \u0440\u0430\u043d\u044c\u0448\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0432 \u044d\u0442\u043e\u0442 \u043c\u043e\u043c\u0435\u043d\u0442. \u0421\u0435\u0440\u0432\u0435\u0440\u0430 \u0443 \u043d\u0435\u0433\u043e \u043d\u0435\u0442. \u041f\u043e\u043a\u0430\u043f\u0430\u044e\u0441\u044c \u0435\u0449\u0435 \u0432 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435", "author": "heruv1m", "createdAt": "2020-03-26T13:44:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwNTgyNQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398605825", "bodyText": "\u043d\u0443 \u0442\u0435\u0431\u0435 \u043f\u043e \u0438\u0434\u0435\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u043a\u0438\u0434\u044b\u0432\u0430\u043d\u0438\u044f \u043b\u0438\u0441\u0442\u0435\u043d\u0435\u0440\u0430 \u0432 \u0434\u0436\u0435\u0442\u0442\u0438 \u043d\u0443\u0436\u0435\u043d \u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440, \u0430 \u0432\u0435\u0431\u0430\u043f\u043f \u0432 \u0441\u0435\u0440\u0432\u0435\u0440\u0435,\n\u043a\u043e\u0442\u043e\u0440\u044b\u0439 https://github.com/hhru/nuts-and-bolts/pull/231/files#diff-c5eb530aea50eff731d8d64f2fb9ee4cR130\n\u0442\u0430\u043c \u043a\u0430\u043a \u0440\u0430\u0437 \u0443\u0436\u0435 \u043f\u043e\u0445\u043e\u0436\u0438\u0439 \u043a\u043e\u0434 \u043d\u0430\u043f\u0438\u0441\u0430\u043d \u043f\u0440\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044f) \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0431\u044b \u0442\u0443\u0434\u0430 \u0438 \u043d\u043e\u0432\u044b\u0439 \u043b\u0438\u0441\u0442\u0435\u043d\u0435\u0440 \u0441\u043b\u043e\u0436\u0438\u0442\u044c, \u0430 \u0432 \u0441\u0430\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u043a\u0430\u043a \u0438 \u0440\u0430\u043d\u044c\u0448\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0445\u043e\u043b\u0434\u0435\u0440", "author": "dzharikhin", "createdAt": "2020-03-26T14:15:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDE1NA=="}], "type": "inlineReview", "revised_code": {"commit": "1913f1f03d7fe27d74bd10e88b459f99b6672d18", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyServerFactory.java b/nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyServerFactory.java\nindex 6934b37d..1e316448 100644\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyServerFactory.java\n+++ b/nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyServerFactory.java\n\n@@ -16,11 +15,10 @@ public final class JettyServerFactory {\n \n   private static final int DEFAULT_IDLE_TIMEOUT_MS = (int) Duration.ofMinutes(1).toMillis();\n \n-  public static JettyServer create(FileSettings fileSettings, ThreadPool threadPool, WebAppInitializer webAppInitializer,\n-                                   ApplicationEventPublisher eventPublisher) {\n+  public static JettyServer create(FileSettings fileSettings, ThreadPool threadPool, WebAppInitializer webAppInitializer) {\n     FileSettings jettySettings = fileSettings.getSubSettings(JETTY);\n     ServletContextHandler contextHandler = createWebAppContextHandler(jettySettings, webAppInitializer);\n-    return new JettyServer(threadPool, jettySettings, contextHandler, eventPublisher);\n+    return new JettyServer(threadPool, jettySettings, contextHandler);\n   }\n \n   private static ServletContextHandler createWebAppContextHandler(FileSettings jettySettings, WebAppInitializer webAppInitializer) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDM4NA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398530384", "bodyText": "\u0442\u0430\u043c \u0432\u0440\u043e\u0434\u0435 \u0431\u044b\u043b \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441", "author": "dzharikhin", "createdAt": "2020-03-26T12:24:24Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyLifeCycleListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package ru.hh.nab.starter.server.jetty;\n+\n+import org.eclipse.jetty.util.component.LifeCycle;\n+import org.springframework.context.ApplicationEventPublisher;\n+import ru.hh.nab.starter.JettyStartedEvent;\n+\n+public class JettyLifeCycleListener implements LifeCycle.Listener {", "originalCommit": "89a1a0600cfa9327d3a0491178f2d25d19d04fab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0ODI3Mw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r398548273", "bodyText": "\u0443\u0433\u0443, \u043f\u043e\u0442\u0435\u0440 \u043b\u0438\u0448\u043d\u0435\u0435", "author": "heruv1m", "createdAt": "2020-03-26T12:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDM4NA=="}], "type": "inlineReview", "revised_code": {"commit": "1913f1f03d7fe27d74bd10e88b459f99b6672d18", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyLifeCycleListener.java b/nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyLifeCycleListener.java\nindex c8ebc58e..a88aab07 100644\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyLifeCycleListener.java\n+++ b/nab-starter/src/main/java/ru/hh/nab/starter/server/jetty/JettyLifeCycleListener.java\n\n@@ -1,34 +1,19 @@\n package ru.hh.nab.starter.server.jetty;\n \n+import org.eclipse.jetty.util.component.AbstractLifeCycle;\n import org.eclipse.jetty.util.component.LifeCycle;\n import org.springframework.context.ApplicationEventPublisher;\n-import ru.hh.nab.starter.JettyStartedEvent;\n+import ru.hh.nab.starter.events.JettyStartedEvent;\n \n-public class JettyLifeCycleListener implements LifeCycle.Listener {\n+public class JettyLifeCycleListener extends AbstractLifeCycle.AbstractLifeCycleListener {\n   private final ApplicationEventPublisher eventPublisher;\n \n   public JettyLifeCycleListener(ApplicationEventPublisher eventPublisher) {\n     this.eventPublisher = eventPublisher;\n   }\n \n-  @Override\n-  public void lifeCycleStarting(LifeCycle lifeCycle) {\n-  }\n-\n   @Override\n   public void lifeCycleStarted(LifeCycle lifeCycle) {\n-      eventPublisher.publishEvent(new JettyStartedEvent());\n-  }\n-\n-  @Override\n-  public void lifeCycleFailure(LifeCycle lifeCycle, Throwable throwable) {\n-  }\n-\n-  @Override\n-  public void lifeCycleStopping(LifeCycle lifeCycle) {\n-  }\n-\n-  @Override\n-  public void lifeCycleStopped(LifeCycle lifeCycle) {\n+    eventPublisher.publishEvent(new JettyStartedEvent());\n   }\n }\n"}}, {"oid": "1913f1f03d7fe27d74bd10e88b459f99b6672d18", "url": "https://github.com/hhru/nuts-and-bolts/commit/1913f1f03d7fe27d74bd10e88b459f99b6672d18", "message": "HH-106303 add tests", "committedDate": "2020-03-27T15:03:40Z", "type": "commit"}, {"oid": "b0cbb59f4e0e8edd073713d12227544043cbeee9", "url": "https://github.com/hhru/nuts-and-bolts/commit/b0cbb59f4e0e8edd073713d12227544043cbeee9", "message": "HH-106303 add fileSettings for fixing test", "committedDate": "2020-03-27T15:31:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzODI4Ng==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399338286", "bodyText": "\u0437\u0430\u0447\u0435\u043c?", "author": "dzharikhin", "createdAt": "2020-03-27T15:14:41Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java", "diffHunk": "@@ -45,8 +45,8 @@ public ConsulService(FileSettings fileSettings, String datacenter, String addres\n     service.setMeta(Collections.singletonMap(\"serviceVersion\", appMetadata.getVersion()));\n \n     this.client = new ConsulClient(\n-      Optional.ofNullable(fileSettings.getString(\"consul.http.host\")).orElse(\"127.0.0.1\"),\n-      fileSettings.getInteger(\"consul.http.port\")\n+            Optional.ofNullable(fileSettings.getString(\"consul.http.host\")).orElse(\"127.0.0.1\"),\n+            Optional.ofNullable(fileSettings.getInteger(\"consul.http.port\")).orElse(8300)", "originalCommit": "1913f1f03d7fe27d74bd10e88b459f99b6672d18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2OTc0Nw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399369747", "bodyText": "\u0435\u0441\u043b\u0438 \u0443 \u0442\u0435\u0431\u044f \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d \u043f\u043e\u0440\u0442 \u0432 \u0431\u043e\u044e, \u043d\u0430\u0434\u043e \u0431\u044b \u043f\u0430\u0434\u0430\u0442\u044c. \u0435\u0441\u043b\u0438 \u043d\u0430\u0434\u043e \u0432 \u0442\u0435\u0441\u0442\u0430\u0445, \u0442\u043e \u043b\u0443\u0447\u0448\u0435 \u0440\u0435\u0448\u0438\u0442\u044c \u0437\u0430 \u0441\u0447\u0435\u0442 \u043e\u0432\u0435\u0440\u0440\u0430\u0439\u0434\u0430 \u043f\u0440\u043e\u043f\u0435\u0440\u0442\u0435\u0439", "author": "dzharikhin", "createdAt": "2020-03-27T15:59:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzODI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5NTkyMA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399995920", "bodyText": "\u0434\u0430 \u044f \u043f\u043e\u0434\u0443\u043c\u0430\u043b, \u0447\u0435\u043c \u043f\u043e\u0440\u0442 \u0445\u0443\u0436\u0435 \u0445\u043e\u0441\u0442\u0430.", "author": "heruv1m", "createdAt": "2020-03-30T08:00:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzODI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxODYzMw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400218633", "bodyText": "\u043d\u0443 \u0438\u0437 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0441\u043b\u0435\u0434\u0443\u0435\u0442. \u0442\u0438\u043f\u0430 \u0434\u0435\u043c\u043e\u043d \u043a\u043e\u043d\u0441\u0443\u043b\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u0441\u0442\u043e\u0438\u0442 \u043d\u0430 \u0445\u043e\u0441\u0442\u0435. \u0442.\u0435. \u044d\u0442\u043e bestpractice \u043a\u043e\u043d\u0441\u0443\u043b\u0430, \u0447\u0442\u043e\u0431\u044b \u0434\u0435\u043c\u043e\u043d \u0431\u044b\u043b \u043d\u0430 127.0.0.1. \u0430 \u0432\u043e\u0442 \u043f\u043e \u043f\u043e\u0440\u0442\u0443 - \u043d\u0438\u043a\u0430\u043a\u0438\u0445 bestpractice \u043d\u0435\u0442. \u043f\u043e\u044d\u0442\u043e\u043c\u0443", "author": "dzharikhin", "createdAt": "2020-03-30T14:05:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzODI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0NjQwMA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400246400", "bodyText": "\u0443\u0431\u0435\u0440\u0443", "author": "heruv1m", "createdAt": "2020-03-30T14:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzODI4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ea2ad5b79d79d8e880ee56dff6615d97c92f1b44", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java b/nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java\nindex 4ddfa694..266fac1c 100644\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java\n+++ b/nab-starter/src/main/java/ru/hh/nab/starter/ConsulService.java\n\n@@ -45,8 +45,8 @@ public class ConsulService {\n     service.setMeta(Collections.singletonMap(\"serviceVersion\", appMetadata.getVersion()));\n \n     this.client = new ConsulClient(\n-            Optional.ofNullable(fileSettings.getString(\"consul.http.host\")).orElse(\"127.0.0.1\"),\n-            Optional.ofNullable(fileSettings.getInteger(\"consul.http.port\")).orElse(8300)\n+      Optional.ofNullable(fileSettings.getString(\"consul.http.host\")).orElse(\"127.0.0.1\"),\n+      fileSettings.getInteger(\"consul.http.port\")\n     );\n     this.service = service;\n     this.id = id;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzOTg3MA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399339870", "bodyText": "\u0447\u0435\u043c \u0442\u0435\u0431\u0435 Consumer \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f", "author": "dzharikhin", "createdAt": "2020-03-27T15:16:52Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/common/Visitor.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package ru.hh.nab.starter.common;\n+\n+public interface Visitor<T> {", "originalCommit": "1913f1f03d7fe27d74bd10e88b459f99b6672d18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MzA5MA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399363090", "bodyText": "\u0438\u043b\u0438 \u0442\u043e\u0442 \u0436\u0435 WebAppInitializer - \u044d\u0442\u043e \u0436 \u043f\u0440\u044f\u043c \u043e\u043d)", "author": "dzharikhin", "createdAt": "2020-03-27T15:49:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzOTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxNDc4OA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400014788", "bodyText": "\u043f\u0440\u043e \u043a\u043e\u043d\u0441\u044c\u044e\u043c\u0435\u0440 \u0437\u0430\u0431\u044b\u043b, \u0430 \u0441 \u0432\u0435\u0431 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u043e\u043c.. \u0421\u043f\u0438\u0441\u043e\u043a \u0442\u043e\u0433\u0434\u0430 \u0441\u0434\u0435\u043b\u0430\u044e, \u043e\u043a?\n\u041d\u0443 \u0432 \u0441\u043c\u044b\u0441\u043b\u0435 \u043b\u0438\u0441\u0442 WebAppInitializer", "author": "heruv1m", "createdAt": "2020-03-30T08:32:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzOTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1OTcwMQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400059701", "bodyText": "\u043d\u0443.. \u043c\u043e\u0436\u043d\u043e", "author": "dzharikhin", "createdAt": "2020-03-30T09:44:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzOTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2ODY4Nw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400068687", "bodyText": "\u0430 \u043a\u0430\u043a? \u041f\u043e\u0434\u043c\u0435\u043d\u0438\u0442\u044c \u0436\u0435 \u044f \u0435\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u0443, \u0441\u043a\u043b\u0435\u0438\u0442\u044c \u0442\u043e\u0436\u0435", "author": "heruv1m", "createdAt": "2020-03-30T09:58:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzOTg3MA=="}], "type": "inlineReview", "revised_code": {"commit": "73d77e0c98369570a23e38612ddda6f407b731ae", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/common/Visitor.java b/nab-starter/src/main/java/ru/hh/nab/starter/common/Visitor.java\ndeleted file mode 100644\nindex b2c09acb..00000000\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/common/Visitor.java\n+++ /dev/null\n\n@@ -1,5 +0,0 @@\n-package ru.hh.nab.starter.common;\n-\n-public interface Visitor<T> {\n-  void visit(T object);\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MzM1Ng==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399363356", "bodyText": "\u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 v?", "author": "dzharikhin", "createdAt": "2020-03-27T15:50:06Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java", "diffHunk": "@@ -68,27 +71,40 @@ public JettyServer run(WebApplicationContext baseContext,\n     try {\n       configureLogger();\n       configureSentry(baseContext);\n-      FileSettings fileSettings = baseContext.getBean(FileSettings.class);\n-      ThreadPool threadPool = baseContext.getBean(ThreadPool.class);\n-      WebAppInitializer webAppInitializer = createWebAppInitializer(servletContextConfig, baseContext, directlyUseAsWebAppRoot);\n-      JettyServer jettyServer = serverStarter.apply(port -> {\n-        FileSettings effectiveSettings = fileSettings;\n-        if (port != null) {\n-          Properties properties = fileSettings.getProperties();\n-          properties.setProperty(JETTY_PORT, String.valueOf(port));\n-          effectiveSettings = new FileSettings(properties);\n-        }\n-        JettyServer server = JettyServerFactory.create(effectiveSettings, threadPool, webAppInitializer);\n-        server.start();\n-        return server;\n-      });\n+      JettyServer jettyServer = createJettyServer(baseContext, directlyUseAsWebAppRoot, serverStarter,\n+              v->v.addLifeCycleListener(new JettyLifeCycleListener(baseContext)));", "originalCommit": "1913f1f03d7fe27d74bd10e88b459f99b6672d18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MzkxMg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399363912", "bodyText": "\u0430 \u043c\u044b \u0440\u0430\u0437\u0432\u0435 \u043c\u043e\u0436\u0435\u043c \u0445\u043e\u0442\u044c \u043a\u043e\u0433\u0434\u0430-\u0442\u043e \u043d\u0435 \u0437\u0430\u0445\u043e\u0442\u0435\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c listener - \u044f \u0431\u044b \u044d\u0442\u043e \u0443\u043d\u0435\u0441 \u043f\u0440\u044f\u043c \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 webAppInitializer", "author": "dzharikhin", "createdAt": "2020-03-27T15:50:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MzM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxNTIyMQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400015221", "bodyText": "\u0431\u0443\u0434\u0443 \u0431\u043e\u043b\u0435\u0435 \u0433\u043e\u0432\u043e\u0440\u044f\u0449\u0435 \u043e\u0431\u0437\u044b\u0432\u0430\u0442\u044c.\n\u0414\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u0432\u044b\u043d\u0435\u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043d\u0430\u0440\u0443\u0436\u0438", "author": "heruv1m", "createdAt": "2020-03-30T08:33:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MzM1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "73d77e0c98369570a23e38612ddda6f407b731ae", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java b/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java\nindex 9de79a99..de7a0595 100644\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java\n+++ b/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java\n\n@@ -71,8 +71,7 @@ public final class NabApplication {\n     try {\n       configureLogger();\n       configureSentry(baseContext);\n-      JettyServer jettyServer = createJettyServer(baseContext, directlyUseAsWebAppRoot, serverStarter,\n-              v->v.addLifeCycleListener(new JettyLifeCycleListener(baseContext)));\n+      JettyServer jettyServer = createJettyServer(baseContext, directlyUseAsWebAppRoot, serverStarter);\n       jettyServer.start();\n       logStartupInfo(baseContext);\n       return jettyServer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NDE0Mg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399364142", "bodyText": "\u0437\u0430\u0447\u0435\u043c \u0435\u043c\u0443 \u0442\u043e\u0440\u0447\u0430\u0442\u044c \u043d\u0430\u0440\u0443\u0436\u0443?", "author": "dzharikhin", "createdAt": "2020-03-27T15:51:15Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java", "diffHunk": "@@ -68,27 +71,40 @@ public JettyServer run(WebApplicationContext baseContext,\n     try {\n       configureLogger();\n       configureSentry(baseContext);\n-      FileSettings fileSettings = baseContext.getBean(FileSettings.class);\n-      ThreadPool threadPool = baseContext.getBean(ThreadPool.class);\n-      WebAppInitializer webAppInitializer = createWebAppInitializer(servletContextConfig, baseContext, directlyUseAsWebAppRoot);\n-      JettyServer jettyServer = serverStarter.apply(port -> {\n-        FileSettings effectiveSettings = fileSettings;\n-        if (port != null) {\n-          Properties properties = fileSettings.getProperties();\n-          properties.setProperty(JETTY_PORT, String.valueOf(port));\n-          effectiveSettings = new FileSettings(properties);\n-        }\n-        JettyServer server = JettyServerFactory.create(effectiveSettings, threadPool, webAppInitializer);\n-        server.start();\n-        return server;\n-      });\n+      JettyServer jettyServer = createJettyServer(baseContext, directlyUseAsWebAppRoot, serverStarter,\n+              v->v.addLifeCycleListener(new JettyLifeCycleListener(baseContext)));\n+      jettyServer.start();\n       logStartupInfo(baseContext);\n       return jettyServer;\n     } catch (Exception e) {\n       return logErrorAndExit(e, exitOnError);\n     }\n   }\n \n+  public JettyServer createJettyServer(WebApplicationContext baseContext,", "originalCommit": "b0cbb59f4e0e8edd073713d12227544043cbeee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NDcwMg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399364702", "bodyText": "\u043c\u0431 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u043f\u0435\u0440\u0435\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0431\u0435\u0437 webAppContextVisitor? \u0432 run \u043d\u0430\u043c \u0432\u0440\u043e\u0434\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u0442\u0430\u043a\u043e\u0433\u043e \u043d\u0435 \u043d\u0443\u0436\u043d\u043e. \u0430 \u043f\u043e\u043b\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u0431\u0443\u0434\u0435\u043c \u0434\u0435\u0440\u0433\u0430\u0442\u044c \u0432 \u0442\u0435\u0441\u0442\u0430\u0445", "author": "dzharikhin", "createdAt": "2020-03-27T15:52:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NDE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxNTY2Mw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400015663", "bodyText": "\u0441\u0434\u0435\u043b\u0430\u044e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u043c\u0435\u0442\u043e\u0434 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u0430 \u043f\u043e \u0434\u0435\u0444\u043e\u043b\u0442\u0443", "author": "heruv1m", "createdAt": "2020-03-30T08:33:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NDE0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "73d77e0c98369570a23e38612ddda6f407b731ae", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java b/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java\nindex 9de79a99..de7a0595 100644\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java\n+++ b/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java\n\n@@ -71,8 +71,7 @@ public final class NabApplication {\n     try {\n       configureLogger();\n       configureSentry(baseContext);\n-      JettyServer jettyServer = createJettyServer(baseContext, directlyUseAsWebAppRoot, serverStarter,\n-              v->v.addLifeCycleListener(new JettyLifeCycleListener(baseContext)));\n+      JettyServer jettyServer = createJettyServer(baseContext, directlyUseAsWebAppRoot, serverStarter);\n       jettyServer.start();\n       logStartupInfo(baseContext);\n       return jettyServer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NjcyMw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399366723", "bodyText": "\u044d\u0442\u0430 \u0448\u0442\u0443\u043a\u0430 \u043f\u043e\u0436\u0430\u043b\u0443\u0439 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b \u0438\u0437 CommonContext'\u0430 \u043f\u0440\u0438\u0435\u0437\u0436\u0430\u0442\u044c", "author": "dzharikhin", "createdAt": "2020-03-27T15:54:55Z", "path": "nab-tests/src/test/java/ru/hh/nab/starter/NabAppTestConfig.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package ru.hh.nab.starter;\n+\n+import static org.mockito.Mockito.spy;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+import ru.hh.nab.common.properties.FileSettings;\n+import ru.hh.nab.starter.events.JettyEventListener;\n+import ru.hh.nab.testbase.NabTestConfig;\n+\n+@Configuration\n+@Import({NabTestConfig.class})\n+public class NabAppTestConfig {\n+  @Bean\n+  ConsulService consulService(FileSettings fileSettings, AppMetadata appMetadata) {\n+    return spy(new ConsulService(fileSettings, null, null, appMetadata));\n+  }\n+\n+  @Bean\n+  JettyEventListener jettyEventListener(ConsulService consulService) {", "originalCommit": "b0cbb59f4e0e8edd073713d12227544043cbeee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyMjY0OA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400022648", "bodyText": "\u043a\u043e\u043c\u043c\u043e\u043d \u043a\u043e\u043d\u0444\u0438\u0433\u0430?\n\u043a\u043e\u043d\u0441\u0443\u043b \u0441\u0435\u0440\u0432\u0438\u0441 \u0441\u0435\u0439\u0447\u0430\u0441 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0442\u0443\u0442 ru.hh.nab.starter.NabProdConfig\n\u0414\u0430 \u044d\u0442\u043e \u043f\u043e\u0436\u0430\u043b\u0443\u0439 \u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e. \u041d\u0435\u0437\u0430\u0447\u0435\u043c \u0435\u0433\u043e \u0442\u0430\u0449\u0438\u0442\u044c \u0432\u043e \u0432\u0441\u0435 \u0442\u0435\u0441\u0442\u044b", "author": "heruv1m", "createdAt": "2020-03-30T08:45:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NjcyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MDc2MQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400160761", "bodyText": "\u043d\u0443 \u0432\u043e\u0442 \u0430 \u0437\u0430\u0447\u0435\u043c jettyEventListener \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 ConsulService?)", "author": "dzharikhin", "createdAt": "2020-03-30T12:43:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NjcyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0NzQyOQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400247429", "bodyText": "\u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043b\u0438\u0441\u044c \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c", "author": "heruv1m", "createdAt": "2020-03-30T14:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NjcyMw=="}], "type": "inlineReview", "revised_code": {"commit": "ea2ad5b79d79d8e880ee56dff6615d97c92f1b44", "chunk": "diff --git a/nab-tests/src/test/java/ru/hh/nab/starter/NabAppTestConfig.java b/nab-tests/src/test/java/ru/hh/nab/starter/NabAppTestConfig.java\nindex 8716d07f..bab33687 100644\n--- a/nab-tests/src/test/java/ru/hh/nab/starter/NabAppTestConfig.java\n+++ b/nab-tests/src/test/java/ru/hh/nab/starter/NabAppTestConfig.java\n\n@@ -17,7 +17,7 @@ public class NabAppTestConfig {\n   }\n \n   @Bean\n-  JettyEventListener jettyEventListener(ConsulService consulService) {\n+  JettyEventListener jettyEventConsulListener(ConsulService consulService) {\n     return new JettyEventListener(consulService);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NzQ2MQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399367461", "bodyText": "\u0412\u0440\u043e\u0434\u0435 \u0431\u044b \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e Properties \u0431\u0438\u043d \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c", "author": "dzharikhin", "createdAt": "2020-03-27T15:56:00Z", "path": "nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java", "diffHunk": "@@ -82,4 +133,18 @@ String failedBean() {\n       throw new RuntimeException(\"failed to load bean\");\n     }\n   }\n+\n+  @Configuration\n+  @Import(NabAppTestConfig.class)\n+  public static class BrokenConsul {\n+\n+    @Bean\n+    @Primary\n+    FileSettings fileSettings() {", "originalCommit": "b0cbb59f4e0e8edd073713d12227544043cbeee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0ODI2NA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400148264", "bodyText": "++", "author": "heruv1m", "createdAt": "2020-03-30T12:22:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NzQ2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "73d77e0c98369570a23e38612ddda6f407b731ae", "chunk": "diff --git a/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java b/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\nindex 58b4056d..0aae5a9b 100644\n--- a/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\n+++ b/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\n\n@@ -137,14 +136,13 @@ public class NabApplicationTest {\n   @Configuration\n   @Import(NabAppTestConfig.class)\n   public static class BrokenConsul {\n-\n     @Bean\n     @Primary\n-    FileSettings fileSettings() {\n+    Properties properties() {\n       Properties properties = new Properties();\n       properties.put(\"consul.enabled\", true);\n       properties.put(\"serviceName\", \"testService\");\n-      return new FileSettings(properties);\n+      return properties;\n     }\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2ODA3NA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r399368074", "bodyText": "\u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 mock \u0438 v?", "author": "dzharikhin", "createdAt": "2020-03-27T15:56:55Z", "path": "nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java", "diffHunk": "@@ -46,6 +58,45 @@ public void runShouldStartJetty() {\n     }\n   }\n \n+  @Test\n+  public void testRightStartupOrderForConsul() {\n+    AnnotationConfigWebApplicationContext aggregateCtx = new AnnotationConfigWebApplicationContext();\n+    aggregateCtx.register(NabAppTestConfig.class);\n+    aggregateCtx.refresh();\n+\n+    JettyLifeCycleListener lifeCycleListener = spy(new JettyLifeCycleListener(aggregateCtx));\n+\n+    NabApplication nabApplication = new NabApplication(new NabServletContextConfig());\n+    JettyServer jettyServer = nabApplication.createJettyServer(aggregateCtx,\n+            false,\n+            mock -> mock.apply(null),", "originalCommit": "b0cbb59f4e0e8edd073713d12227544043cbeee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1NDU1NQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400154555", "bodyText": "\u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043b", "author": "heruv1m", "createdAt": "2020-03-30T12:33:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2ODA3NA=="}], "type": "inlineReview", "revised_code": {"commit": "73d77e0c98369570a23e38612ddda6f407b731ae", "chunk": "diff --git a/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java b/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\nindex 58b4056d..0aae5a9b 100644\n--- a/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\n+++ b/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\n\n@@ -69,8 +68,8 @@ public class NabApplicationTest {\n     NabApplication nabApplication = new NabApplication(new NabServletContextConfig());\n     JettyServer jettyServer = nabApplication.createJettyServer(aggregateCtx,\n             false,\n-            mock -> mock.apply(null),\n-            v -> v.addLifeCycleListener(lifeCycleListener)\n+            portSupplier -> portSupplier.apply(null),\n+            webAppContext -> webAppContext.addLifeCycleListener(lifeCycleListener)\n             );\n \n     ConsulService consulService = aggregateCtx.getBean(ConsulService.class);\n"}}, {"oid": "73d77e0c98369570a23e38612ddda6f407b731ae", "url": "https://github.com/hhru/nuts-and-bolts/commit/73d77e0c98369570a23e38612ddda6f407b731ae", "message": "HH-106303 review. move logic to webInitializer", "committedDate": "2020-03-30T12:29:02Z", "type": "commit"}, {"oid": "86d0846fb564fc499729d3afafd915ac36d694a2", "url": "https://github.com/hhru/nuts-and-bolts/commit/86d0846fb564fc499729d3afafd915ac36d694a2", "message": "HH-106303 registration in consul properly", "committedDate": "2020-03-30T12:32:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyMzE0OA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400223148", "bodyText": "\u043f\u043e\u0447\u0435\u043c\u0443 \u043e\u043f\u044f\u0442\u044c public?", "author": "dzharikhin", "createdAt": "2020-03-30T14:11:48Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java", "diffHunk": "@@ -68,27 +71,45 @@ public JettyServer run(WebApplicationContext baseContext,\n     try {\n       configureLogger();\n       configureSentry(baseContext);\n-      FileSettings fileSettings = baseContext.getBean(FileSettings.class);\n-      ThreadPool threadPool = baseContext.getBean(ThreadPool.class);\n-      WebAppInitializer webAppInitializer = createWebAppInitializer(servletContextConfig, baseContext, directlyUseAsWebAppRoot);\n-      JettyServer jettyServer = serverStarter.apply(port -> {\n-        FileSettings effectiveSettings = fileSettings;\n-        if (port != null) {\n-          Properties properties = fileSettings.getProperties();\n-          properties.setProperty(JETTY_PORT, String.valueOf(port));\n-          effectiveSettings = new FileSettings(properties);\n-        }\n-        JettyServer server = JettyServerFactory.create(effectiveSettings, threadPool, webAppInitializer);\n-        server.start();\n-        return server;\n-      });\n+      JettyServer jettyServer = createJettyServer(baseContext, directlyUseAsWebAppRoot, serverStarter);\n+      jettyServer.start();\n       logStartupInfo(baseContext);\n       return jettyServer;\n     } catch (Exception e) {\n       return logErrorAndExit(e, exitOnError);\n     }\n   }\n \n+  private JettyServer createJettyServer(WebApplicationContext baseContext,\n+                                       boolean directlyUseAsWebAppRoot,\n+                                       Function<Function<Integer, JettyServer>, JettyServer> serverStarter\n+  ) {\n+    return createJettyServer(baseContext, directlyUseAsWebAppRoot, serverStarter,\n+            webAppContext -> webAppContext.addLifeCycleListener(new JettyLifeCycleListener(baseContext)));\n+  }\n+\n+  public JettyServer createJettyServer(WebApplicationContext baseContext,", "originalCommit": "86d0846fb564fc499729d3afafd915ac36d694a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2NDEwMw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400264103", "bodyText": "\u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043b \u043f\u0435\u043a\u0435\u0434\u0436", "author": "heruv1m", "createdAt": "2020-03-30T15:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyMzE0OA=="}], "type": "inlineReview", "revised_code": {"commit": "8812e4da6e1bcb7f4d03c290481dbb17af53b5d4", "chunk": "diff --git a/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java b/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java\nindex 60db4939..fab8c607 100644\n--- a/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java\n+++ b/nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java\n\n@@ -88,7 +88,7 @@ public final class NabApplication {\n             webAppContext -> webAppContext.addLifeCycleListener(new JettyLifeCycleListener(baseContext)));\n   }\n \n-  public JettyServer createJettyServer(WebApplicationContext baseContext,\n+  JettyServer createJettyServer(WebApplicationContext baseContext,\n                                        boolean directlyUseAsWebAppRoot,\n                                        Function<Function<Integer, JettyServer>, JettyServer> serverStarter,\n                                        WebAppInitializer extwebAppInitializer\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyNDMxNA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400224314", "bodyText": "\u0447\u0438\u0441\u0442\u043e \u043d\u0430 \u0432\u043a\u0443\u0441 - \u043d\u0443 \u043b\u0438\u0431\u043e \u0443\u0436\u0435 \u043d\u0430 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0441 JettyServer \u0441\u043a\u043e\u0431\u043a\u0443, \u043b\u0438\u0431\u043e \u043f\u043e-\u043f\u0438\u0442\u043e\u043d\u044f\u0447\u044c\u0438 \u0432 \u043a\u043e\u043d\u0435\u0446 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438", "author": "dzharikhin", "createdAt": "2020-03-30T14:13:22Z", "path": "nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java", "diffHunk": "@@ -46,6 +57,45 @@ public void runShouldStartJetty() {\n     }\n   }\n \n+  @Test\n+  public void testRightStartupOrderForConsul() {\n+    AnnotationConfigWebApplicationContext aggregateCtx = new AnnotationConfigWebApplicationContext();\n+    aggregateCtx.register(NabAppTestConfig.class);\n+    aggregateCtx.refresh();\n+\n+    JettyLifeCycleListener lifeCycleListener = spy(new JettyLifeCycleListener(aggregateCtx));\n+\n+    NabApplication nabApplication = new NabApplication(new NabServletContextConfig());\n+    JettyServer jettyServer = nabApplication.createJettyServer(aggregateCtx,\n+            false,\n+            portSupplier -> portSupplier.apply(null),\n+            webAppContext -> webAppContext.addLifeCycleListener(lifeCycleListener)\n+            );\n+\n+    ConsulService consulService = aggregateCtx.getBean(ConsulService.class);\n+\n+    jettyServer.start();\n+\n+    InOrder inOrder = inOrder(lifeCycleListener, consulService);\n+    inOrder.verify(lifeCycleListener).lifeCycleStarted(any());\n+    inOrder.verify(consulService).register();\n+  }\n+\n+  @Test(expected = ConsulServiceException.class)\n+  public void testFailWithoutConsul() {\n+    AnnotationConfigWebApplicationContext aggregateCtx = new AnnotationConfigWebApplicationContext();\n+    aggregateCtx.register(BrokenConsul.class);\n+    aggregateCtx.refresh();\n+\n+    JettyServer jettyServer = new NabApplication(new NabServletContextConfig()).createJettyServer(aggregateCtx,\n+            false,\n+            portSupplier -> portSupplier.apply(0),\n+            webAppContext -> webAppContext.addLifeCycleListener(new JettyLifeCycleListener(aggregateCtx))\n+            );", "originalCommit": "86d0846fb564fc499729d3afafd915ac36d694a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0ODA4MA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400248080", "bodyText": "\u043f\u0435\u0440\u0435\u043d\u0435\u0441", "author": "heruv1m", "createdAt": "2020-03-30T14:43:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyNDMxNA=="}], "type": "inlineReview", "revised_code": {"commit": "ea2ad5b79d79d8e880ee56dff6615d97c92f1b44", "chunk": "diff --git a/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java b/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\nindex 0aae5a9b..c2b90a4c 100644\n--- a/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\n+++ b/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\n\n@@ -84,14 +83,13 @@ public class NabApplicationTest {\n   @Test(expected = ConsulServiceException.class)\n   public void testFailWithoutConsul() {\n     AnnotationConfigWebApplicationContext aggregateCtx = new AnnotationConfigWebApplicationContext();\n-    aggregateCtx.register(BrokenConsul.class);\n+    aggregateCtx.register(BrokenConsulConfig.class);\n     aggregateCtx.refresh();\n \n     JettyServer jettyServer = new NabApplication(new NabServletContextConfig()).createJettyServer(aggregateCtx,\n             false,\n             portSupplier -> portSupplier.apply(0),\n-            webAppContext -> webAppContext.addLifeCycleListener(new JettyLifeCycleListener(aggregateCtx))\n-            );\n+            webAppContext -> webAppContext.addLifeCycleListener(new JettyLifeCycleListener(aggregateCtx)));\n \n     jettyServer.start();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyNDc4Mw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/231#discussion_r400224783", "bodyText": "\u043f\u043e \u0438\u0434\u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u0435\u0437 Primary - \u0442\u0432\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433 \u043f\u0435\u0440\u0435\u043a\u0440\u043e\u0435\u0442, \u0435\u0441\u043b\u0438 \u0431\u0438\u043d \u0442\u0430\u043a \u0436\u0435 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f. \u043d\u043e \u0432\u043e\u0442 \u043e\u043d \u0447\u0435-\u0442\u043e \u043d\u0435 \u0442\u0430\u043a \u0436\u0435 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e-\u043c\u043e\u0435\u043c\u0443", "author": "dzharikhin", "createdAt": "2020-03-30T14:13:56Z", "path": "nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java", "diffHunk": "@@ -82,4 +132,17 @@ String failedBean() {\n       throw new RuntimeException(\"failed to load bean\");\n     }\n   }\n+\n+  @Configuration\n+  @Import(NabAppTestConfig.class)\n+  public static class BrokenConsul {\n+    @Bean\n+    @Primary", "originalCommit": "86d0846fb564fc499729d3afafd915ac36d694a2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea2ad5b79d79d8e880ee56dff6615d97c92f1b44", "chunk": "diff --git a/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java b/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\nindex 0aae5a9b..c2b90a4c 100644\n--- a/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\n+++ b/nab-tests/src/test/java/ru/hh/nab/starter/NabApplicationTest.java\n\n@@ -135,13 +133,13 @@ public class NabApplicationTest {\n \n   @Configuration\n   @Import(NabAppTestConfig.class)\n-  public static class BrokenConsul {\n+  public static class BrokenConsulConfig {\n     @Bean\n-    @Primary\n-    Properties properties() {\n+    Properties serviceProperties() {\n       Properties properties = new Properties();\n-      properties.put(\"consul.enabled\", true);\n-      properties.put(\"serviceName\", \"testService\");\n+      properties.setProperty(\"consul.enabled\", \"true\");\n+      properties.setProperty(\"serviceName\", \"testService\");\n+      properties.setProperty(\"consul.http.port\", \"123\");\n       return properties;\n     }\n   }\n"}}, {"oid": "ea2ad5b79d79d8e880ee56dff6615d97c92f1b44", "url": "https://github.com/hhru/nuts-and-bolts/commit/ea2ad5b79d79d8e880ee56dff6615d97c92f1b44", "message": "HH-106303 fix config in tests", "committedDate": "2020-03-30T15:02:10Z", "type": "commit"}, {"oid": "8812e4da6e1bcb7f4d03c290481dbb17af53b5d4", "url": "https://github.com/hhru/nuts-and-bolts/commit/8812e4da6e1bcb7f4d03c290481dbb17af53b5d4", "message": "HH-106303 clear code", "committedDate": "2020-03-30T15:08:38Z", "type": "commit"}]}