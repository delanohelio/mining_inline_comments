{"pr_number": 239, "pr_title": "HH-107814 return Acknowledgment for kafka batch messages", "pr_createdAt": "2020-04-17T19:12:20Z", "pr_url": "https://github.com/hhru/nuts-and-bolts/pull/239", "timeline": [{"oid": "cb4092ec352709c268f55d42aef2be221a9351c4", "url": "https://github.com/hhru/nuts-and-bolts/commit/cb4092ec352709c268f55d42aef2be221a9351c4", "message": "HH-107814 override all methods of Acknowledgment in Ack interface", "committedDate": "2020-04-20T10:05:54Z", "type": "forcePushed"}, {"oid": "291615824f27128b72d0a49a909e2c7085fc58c8", "url": "https://github.com/hhru/nuts-and-bolts/commit/291615824f27128b72d0a49a909e2c7085fc58c8", "message": "HH-107814 override all methods of Acknowledgment in Ack interface", "committedDate": "2020-04-20T10:16:24Z", "type": "commit"}, {"oid": "291615824f27128b72d0a49a909e2c7085fc58c8", "url": "https://github.com/hhru/nuts-and-bolts/commit/291615824f27128b72d0a49a909e2c7085fc58c8", "message": "HH-107814 override all methods of Acknowledgment in Ack interface", "committedDate": "2020-04-20T10:16:24Z", "type": "forcePushed"}, {"oid": "52a11a17c928736c4d26475135915feaa4995dcf", "url": "https://github.com/hhru/nuts-and-bolts/commit/52a11a17c928736c4d26475135915feaa4995dcf", "message": "HH-107814 add ExponentialBackOff for SeekToCurrentBatchErrorHandler", "committedDate": "2020-04-20T14:27:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MDQ3MQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411440471", "bodyText": "\u041d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d, \u0447\u0442\u043e \u043d\u043e\u0440\u043c, \u0447\u0442\u043e \u044d\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432 \u043a\u0430\u0444\u043a\u0443 \u043f\u043e\u043b\u0435\u0442\u044f\u0442 \u0442\u043e\u0436\u0435", "author": "bokshitsky", "createdAt": "2020-04-20T14:49:11Z", "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java", "diffHunk": "@@ -79,10 +86,20 @@ public void nack(int index, long sleep) {\n   }\n \n   private <T> ConcurrentMessageListenerContainer<String, T> getSpringMessageListenerContainer(ConsumerFactory<String, T> consumerFactory,\n-                                                                                              ContainerProperties containerProperties) {\n-\n+                                                                                              ContainerProperties containerProperties,\n+                                                                                              String topicName) {\n     var container = new ConcurrentMessageListenerContainer<>(consumerFactory, containerProperties);\n-    container.setBatchErrorHandler(new SeekToCurrentBatchErrorHandler());\n+    SeekToCurrentBatchErrorHandler errorHandler = new SeekToCurrentBatchErrorHandler();\n+    Map<String, Object> consumerConfig = configProvider.getConsumerConfig(topicName);\n+    ExponentialBackOff backOff = new ExponentialBackOff(\n+        Long.parseLong(consumerConfig.getOrDefault(BACKOFF_INITIAL_INTERVAL_NAME, DEFAULT_BACKOFF_INITIAL_INTERVAL).toString()),", "originalCommit": "52a11a17c928736c4d26475135915feaa4995dcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MzE2MQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411443161", "bodyText": "\u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u043c\u0435\u0435\u0442 \u0441\u043c\u044b\u0441\u043b \u0432\u0432\u0435\u0441\u0442\u0438 \u0432 \u043a\u043e\u043d\u0441\u0443\u043c\u0435\u0440\u0441\u043a\u043e\u043c \u043a\u043e\u043d\u0444\u0438\u0433\u0435 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u0435\u0444\u0438\u043a\u0441, \u0442\u0438\u043f\u0430 custom\n\u0432\u0440\u043e\u0434\u0435  kafka_site.consume._custom.backoff.initial.interval \u0438 \u043d\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432 \u043a\u0430\u0444\u043a\u0443 \u0432\u0441\u0451, \u0447\u0442\u043e \u0441 \u044d\u0442\u0438\u043f \u043f\u0440\u0438\u0444\u0438\u043a\u0441\u043e\u043c", "author": "bokshitsky", "createdAt": "2020-04-20T14:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MDQ3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2827d9ec63cc8d91e64d8b34779b0cb2cf86519d", "chunk": "diff --git a/nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java b/nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java\nindex 77fb0225..ab3f4ce8 100644\n--- a/nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java\n+++ b/nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java\n\n@@ -90,14 +90,12 @@ public class DefaultConsumerFactory implements KafkaConsumerFactory {\n                                                                                               String topicName) {\n     var container = new ConcurrentMessageListenerContainer<>(consumerFactory, containerProperties);\n     SeekToCurrentBatchErrorHandler errorHandler = new SeekToCurrentBatchErrorHandler();\n-    Map<String, Object> consumerConfig = configProvider.getConsumerConfig(topicName);\n+    FileSettings settings = configProvider.getNabSettings(topicName);\n     ExponentialBackOff backOff = new ExponentialBackOff(\n-        Long.parseLong(consumerConfig.getOrDefault(BACKOFF_INITIAL_INTERVAL_NAME, DEFAULT_BACKOFF_INITIAL_INTERVAL).toString()),\n-        Double.parseDouble(consumerConfig.getOrDefault(BACKOFF_MULTIPLIER_NAME, DEFAULT_BACKOFF_MULTIPLIER).toString())\n-    );\n-    backOff.setMaxInterval(\n-        Long.parseLong(consumerConfig.getOrDefault(BACKOFF_MAX_INTERVAL_NAME, DEFAULT_BACKOFF_MAX_INTERVAL).toString())\n+        settings.getLong(BACKOFF_INITIAL_INTERVAL_NAME, DEFAULT_BACKOFF_INITIAL_INTERVAL),\n+        settings.getDouble(BACKOFF_MULTIPLIER_NAME, DEFAULT_BACKOFF_MULTIPLIER)\n     );\n+    backOff.setMaxInterval(settings.getLong(BACKOFF_MAX_INTERVAL_NAME, DEFAULT_BACKOFF_MAX_INTERVAL));\n     errorHandler.setBackOff(backOff);\n     container.setBatchErrorHandler(errorHandler);\n \n"}}, {"oid": "2827d9ec63cc8d91e64d8b34779b0cb2cf86519d", "url": "https://github.com/hhru/nuts-and-bolts/commit/2827d9ec63cc8d91e64d8b34779b0cb2cf86519d", "message": "HH-107814 add ExponentialBackOff for SeekToCurrentBatchErrorHandler", "committedDate": "2020-04-20T15:56:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5NTc0NA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411495744", "bodyText": "else \u043b\u0438\u0448\u043d\u0438\u0439", "author": "bokshitsky", "createdAt": "2020-04-20T15:58:23Z", "path": "nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java", "diffHunk": "@@ -17,19 +17,56 @@ public String getString(String key) {\n     return properties.getProperty(key);\n   }\n \n+  public Integer getInteger(String key, Integer defaultValue) {\n+    String value = getString(key);\n+    if (value == null) {\n+      return defaultValue;\n+    } else {", "originalCommit": "2827d9ec63cc8d91e64d8b34779b0cb2cf86519d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6babccb23c084386bf3f6774adeb3f3049f69322", "chunk": "diff --git a/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java b/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java\nindex 234b5fdb..eaf454d5 100644\n--- a/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java\n+++ b/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java\n\n@@ -17,56 +18,36 @@ public class FileSettings {\n     return properties.getProperty(key);\n   }\n \n-  public Integer getInteger(String key, Integer defaultValue) {\n-    String value = getString(key);\n-    if (value == null) {\n-      return defaultValue;\n-    } else {\n-      return Integer.parseInt(value);\n-    }\n+  public int getInteger(String key, int defaultValue) {\n+    return parseValueOrDefault(key, Integer::parseInt, defaultValue);\n   }\n \n   public Integer getInteger(String key) {\n-    return getInteger(key, null);\n+    return parseValueOrDefault(key, Integer::parseInt, null);\n   }\n \n-  public Long getLong(final String key, Long defaultValue) {\n-    String value = getString(key);\n-    if (value == null) {\n-      return defaultValue;\n-    } else {\n-      return Long.parseLong(value);\n-    }\n+  public long getLong(final String key, long defaultValue) {\n+    return parseValueOrDefault(key, Long::parseLong, defaultValue);\n   }\n \n   public Long getLong(final String key) {\n-    return getLong(key, null);\n+    return parseValueOrDefault(key, Long::parseLong, null);\n   }\n \n-  public Double getDouble(final String key, Double defaultValue) {\n-    String value = getString(key);\n-    if (value == null) {\n-      return defaultValue;\n-    } else {\n-      return Double.parseDouble(value);\n-    }\n+  public double getDouble(final String key, double defaultValue) {\n+    return parseValueOrDefault(key, Double::parseDouble, defaultValue);\n   }\n \n   public Double getDouble(final String key) {\n-    return getDouble(key, null);\n+    return parseValueOrDefault(key, Double::parseDouble, null);\n   }\n \n-  public Boolean getBoolean(String key, Boolean defaultValue) {\n-    String value = getString(key);\n-    if (value == null) {\n-      return defaultValue;\n-    } else {\n-      return Boolean.parseBoolean(value);\n-    }\n+  public boolean getBoolean(String key, boolean defaultValue) {\n+    return parseValueOrDefault(key, Boolean::parseBoolean, defaultValue);\n   }\n \n   public Boolean getBoolean(String key) {\n-    return getBoolean(key, null);\n+    return parseValueOrDefault(key, Boolean::parseBoolean, null);\n   }\n \n   public Properties getSubProperties(String prefix) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5OTc0NA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411499744", "bodyText": "\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c \u0431\u044b - \u0442\u0443\u0442 \u0432\u0435\u0434\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e \u043a\u043e\u043d\u0441\u0443\u043c\u0435\u0440\ngetNabSettings -> getNabConsumerSettings", "author": "bokshitsky", "createdAt": "2020-04-20T16:03:02Z", "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "diffHunk": "@@ -34,9 +43,31 @@ public String getServiceName() {\n     consumeConfig.putAll(getCommonProperties());\n     consumeConfig.putAll(getDefaultConsumerProperties());\n     consumeConfig.putAll(getTopicOverriddenConsumerProperties(topicName));\n+    removeNabProperties(consumeConfig);\n     return consumeConfig;\n   }\n \n+  public FileSettings getNabSettings(String topicName) {", "originalCommit": "2827d9ec63cc8d91e64d8b34779b0cb2cf86519d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NTAwNA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411555004", "bodyText": "\u043e\u043a", "author": "SCREEN88", "createdAt": "2020-04-20T17:21:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5OTc0NA=="}], "type": "inlineReview", "revised_code": {"commit": "6babccb23c084386bf3f6774adeb3f3049f69322", "chunk": "diff --git a/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java b/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java\nindex 8cf757a5..1bfd8c49 100644\n--- a/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java\n+++ b/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java\n\n@@ -47,7 +47,7 @@ public class ConfigProvider {\n     return consumeConfig;\n   }\n \n-  public FileSettings getNabSettings(String topicName) {\n+  public FileSettings getNabConsumerSettings(String topicName) {\n     Properties allProperties = new Properties();\n     allProperties.putAll(getCommonProperties());\n     allProperties.putAll(getDefaultConsumerProperties());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMDcyOQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411500729", "bodyText": "\u0434\u0430\u0432\u0430\u0439 \u0442\u043e\u0433\u0434\u0430 \u0437\u0434\u0435\u0441\u044c \u0438 \u0434\u0430\u043b\u0435\u0435 \u0443\u0436 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u044b\u0439 defaultValue \u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u0430 \u0442\u043e \u043d\u0435 nullSafe - \u043d\u0435\u0445\u043e\u0440\u043e\u0448\u043e", "author": "dzharikhin", "createdAt": "2020-04-20T16:04:16Z", "path": "nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java", "diffHunk": "@@ -17,19 +17,56 @@ public String getString(String key) {\n     return properties.getProperty(key);\n   }\n \n+  public Integer getInteger(String key, Integer defaultValue) {", "originalCommit": "2827d9ec63cc8d91e64d8b34779b0cb2cf86519d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMTIxMw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411501213", "bodyText": "\u0434\u0430, \u043d\u0435 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0448\u044c \u0432\u043d\u0443\u0442\u0440\u0438, \u0437\u0430\u0442\u043e \u0441\u043d\u0430\u0440\u0443\u0436\u0438 \u0431\u0435\u0437 \u0432\u044b\u0441\u0442\u0435\u043b\u043e\u0432 \u0432 \u043d\u043e\u0433\u0443", "author": "dzharikhin", "createdAt": "2020-04-20T16:04:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMDcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NTE5NA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411555194", "bodyText": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043b", "author": "SCREEN88", "createdAt": "2020-04-20T17:22:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMDcyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "6babccb23c084386bf3f6774adeb3f3049f69322", "chunk": "diff --git a/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java b/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java\nindex 234b5fdb..eaf454d5 100644\n--- a/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java\n+++ b/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java\n\n@@ -17,56 +18,36 @@ public class FileSettings {\n     return properties.getProperty(key);\n   }\n \n-  public Integer getInteger(String key, Integer defaultValue) {\n-    String value = getString(key);\n-    if (value == null) {\n-      return defaultValue;\n-    } else {\n-      return Integer.parseInt(value);\n-    }\n+  public int getInteger(String key, int defaultValue) {\n+    return parseValueOrDefault(key, Integer::parseInt, defaultValue);\n   }\n \n   public Integer getInteger(String key) {\n-    return getInteger(key, null);\n+    return parseValueOrDefault(key, Integer::parseInt, null);\n   }\n \n-  public Long getLong(final String key, Long defaultValue) {\n-    String value = getString(key);\n-    if (value == null) {\n-      return defaultValue;\n-    } else {\n-      return Long.parseLong(value);\n-    }\n+  public long getLong(final String key, long defaultValue) {\n+    return parseValueOrDefault(key, Long::parseLong, defaultValue);\n   }\n \n   public Long getLong(final String key) {\n-    return getLong(key, null);\n+    return parseValueOrDefault(key, Long::parseLong, null);\n   }\n \n-  public Double getDouble(final String key, Double defaultValue) {\n-    String value = getString(key);\n-    if (value == null) {\n-      return defaultValue;\n-    } else {\n-      return Double.parseDouble(value);\n-    }\n+  public double getDouble(final String key, double defaultValue) {\n+    return parseValueOrDefault(key, Double::parseDouble, defaultValue);\n   }\n \n   public Double getDouble(final String key) {\n-    return getDouble(key, null);\n+    return parseValueOrDefault(key, Double::parseDouble, null);\n   }\n \n-  public Boolean getBoolean(String key, Boolean defaultValue) {\n-    String value = getString(key);\n-    if (value == null) {\n-      return defaultValue;\n-    } else {\n-      return Boolean.parseBoolean(value);\n-    }\n+  public boolean getBoolean(String key, boolean defaultValue) {\n+    return parseValueOrDefault(key, Boolean::parseBoolean, defaultValue);\n   }\n \n   public Boolean getBoolean(String key) {\n-    return getBoolean(key, null);\n+    return parseValueOrDefault(key, Boolean::parseBoolean, null);\n   }\n \n   public Properties getSubProperties(String prefix) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMTY0Mg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411501642", "bodyText": "\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 consumeConfig \u0442\u043e\u0433\u0434\u0430 \u0441\u0442\u043e \u043d\u0430\u0437\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e config", "author": "bokshitsky", "createdAt": "2020-04-20T16:05:25Z", "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "diffHunk": "@@ -69,4 +100,20 @@ public String getServiceName() {\n   private Map<String, Object> getConfigAsMap(String prefix) {\n     return new HashMap<>((Map) fileSettings.getSubProperties(prefix));\n   }\n+\n+  private void removeNabProperties(Map<String, Object> consumeConfig) {", "originalCommit": "2827d9ec63cc8d91e64d8b34779b0cb2cf86519d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NDkzMA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411554930", "bodyText": "\u043e\u043a", "author": "SCREEN88", "createdAt": "2020-04-20T17:21:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMTY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "6babccb23c084386bf3f6774adeb3f3049f69322", "chunk": "diff --git a/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java b/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java\nindex 8cf757a5..1bfd8c49 100644\n--- a/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java\n+++ b/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java\n\n@@ -101,10 +101,10 @@ public class ConfigProvider {\n     return new HashMap<>((Map) fileSettings.getSubProperties(prefix));\n   }\n \n-  private void removeNabProperties(Map<String, Object> consumeConfig) {\n-    for (String key : consumeConfig.keySet()) {\n+  private void removeNabProperties(Map<String, Object> config) {\n+    for (String key : config.keySet()) {\n       if (key.contains(NAB_SETTING)) {\n-        consumeConfig.remove(key);\n+        config.remove(key);\n       }\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMjQ3OA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411502478", "bodyText": "\u0442\u0443\u0442-\u0442\u043e \u0432\u043e\u0442 \u0443\u0436\u0435 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u044b", "author": "dzharikhin", "createdAt": "2020-04-20T16:06:27Z", "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java", "diffHunk": "@@ -79,10 +86,18 @@ public void nack(int index, long sleep) {\n   }\n \n   private <T> ConcurrentMessageListenerContainer<String, T> getSpringMessageListenerContainer(ConsumerFactory<String, T> consumerFactory,\n-                                                                                              ContainerProperties containerProperties) {\n-\n+                                                                                              ContainerProperties containerProperties,\n+                                                                                              String topicName) {\n     var container = new ConcurrentMessageListenerContainer<>(consumerFactory, containerProperties);\n-    container.setBatchErrorHandler(new SeekToCurrentBatchErrorHandler());\n+    SeekToCurrentBatchErrorHandler errorHandler = new SeekToCurrentBatchErrorHandler();\n+    FileSettings settings = configProvider.getNabSettings(topicName);\n+    ExponentialBackOff backOff = new ExponentialBackOff(\n+        settings.getLong(BACKOFF_INITIAL_INTERVAL_NAME, DEFAULT_BACKOFF_INITIAL_INTERVAL),", "originalCommit": "2827d9ec63cc8d91e64d8b34779b0cb2cf86519d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6babccb23c084386bf3f6774adeb3f3049f69322", "chunk": "diff --git a/nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java b/nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java\nindex ab3f4ce8..cbeb32c6 100644\n--- a/nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java\n+++ b/nab-kafka/src/main/java/ru/hh/nab/kafka/consumer/DefaultConsumerFactory.java\n\n@@ -90,7 +90,7 @@ public class DefaultConsumerFactory implements KafkaConsumerFactory {\n                                                                                               String topicName) {\n     var container = new ConcurrentMessageListenerContainer<>(consumerFactory, containerProperties);\n     SeekToCurrentBatchErrorHandler errorHandler = new SeekToCurrentBatchErrorHandler();\n-    FileSettings settings = configProvider.getNabSettings(topicName);\n+    FileSettings settings = configProvider.getNabConsumerSettings(topicName);\n     ExponentialBackOff backOff = new ExponentialBackOff(\n         settings.getLong(BACKOFF_INITIAL_INTERVAL_NAME, DEFAULT_BACKOFF_INITIAL_INTERVAL),\n         settings.getDouble(BACKOFF_MULTIPLIER_NAME, DEFAULT_BACKOFF_MULTIPLIER)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwNDM2OA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411504368", "bodyText": "\u041d\u0435 \u043e\u0447\u0435\u043d\u044c \u0447\u0435\u0441\u0442\u043d\u043e \u043d\u0430 \u043c\u0430\u043f\u0435 \u0434\u0435\u043b\u0430\u0442\u044c .remove - \u0442\u0430\u043c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c immutable map-\u0430, \u0442\u043e\u0433\u0434\u0430 \u0432 \u0440\u0430\u043d\u0442\u0430\u0439\u043c\u0435 \u0443\u043f\u0430\u0434\u0435\u0442.\n\u0421\u0442\u043e\u0438\u0442 \u043b\u0438\u0431\u043e HashMap \u0441\u043d\u0430\u0440\u0443\u0436\u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c (\u0447\u0442\u043e \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0435 \u043f\u0440\u0438\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442\u0441\u044f \u044d\u0441\u0442\u0435\u0442\u0430\u043c\u0438) \u043b\u0438\u0431\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043c\u0430\u043f\u0443 \u0431\u0435\u0437 \u043d\u0443\u0436\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0432.\n\u0422.\u043a. \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f 1 \u0440\u0430\u0437 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438, \u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435 \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u0431\u044b\u0442\u044c \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e", "author": "bokshitsky", "createdAt": "2020-04-20T16:09:04Z", "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "diffHunk": "@@ -69,4 +100,20 @@ public String getServiceName() {\n   private Map<String, Object> getConfigAsMap(String prefix) {\n     return new HashMap<>((Map) fileSettings.getSubProperties(prefix));\n   }\n+\n+  private void removeNabProperties(Map<String, Object> consumeConfig) {\n+    for (String key : consumeConfig.keySet()) {\n+      if (key.contains(NAB_SETTING)) {\n+        consumeConfig.remove(key);", "originalCommit": "2827d9ec63cc8d91e64d8b34779b0cb2cf86519d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NDg0Nw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411554847", "bodyText": "\u044d\u0442\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u043c\u0435\u0442\u043e\u0434, \u043c\u044b \u0442\u043e\u0447\u043d\u043e \u0437\u043d\u0430\u0435\u043c \u0447\u0442\u043e \u0442\u0443\u0434\u0430 \u043f\u0440\u0438\u043b\u0435\u0442\u0430\u0435\u0442", "author": "SCREEN88", "createdAt": "2020-04-20T17:21:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwNDM2OA=="}], "type": "inlineReview", "revised_code": {"commit": "6babccb23c084386bf3f6774adeb3f3049f69322", "chunk": "diff --git a/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java b/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java\nindex 8cf757a5..1bfd8c49 100644\n--- a/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java\n+++ b/nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java\n\n@@ -101,10 +101,10 @@ public class ConfigProvider {\n     return new HashMap<>((Map) fileSettings.getSubProperties(prefix));\n   }\n \n-  private void removeNabProperties(Map<String, Object> consumeConfig) {\n-    for (String key : consumeConfig.keySet()) {\n+  private void removeNabProperties(Map<String, Object> config) {\n+    for (String key : config.keySet()) {\n       if (key.contains(NAB_SETTING)) {\n-        consumeConfig.remove(key);\n+        config.remove(key);\n       }\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNTQyMg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/239#discussion_r411605422", "bodyText": "\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c Integer \u0437\u0430\u0447\u0435\u043c? int \u0436\u0435", "author": "dzharikhin", "createdAt": "2020-04-20T18:41:14Z", "path": "nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java", "diffHunk": "@@ -17,19 +18,36 @@ public String getString(String key) {\n     return properties.getProperty(key);\n   }\n \n+  public Integer getInteger(String key, int defaultValue) {", "originalCommit": "91a4e59ea640a02f96ec0facb3d0e378a57c36dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6babccb23c084386bf3f6774adeb3f3049f69322", "chunk": "diff --git a/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java b/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java\nindex 9c814cff..eaf454d5 100644\n--- a/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java\n+++ b/nab-common/src/main/java/ru/hh/nab/common/properties/FileSettings.java\n\n@@ -18,7 +18,7 @@ public class FileSettings {\n     return properties.getProperty(key);\n   }\n \n-  public Integer getInteger(String key, int defaultValue) {\n+  public int getInteger(String key, int defaultValue) {\n     return parseValueOrDefault(key, Integer::parseInt, defaultValue);\n   }\n \n"}}, {"oid": "6babccb23c084386bf3f6774adeb3f3049f69322", "url": "https://github.com/hhru/nuts-and-bolts/commit/6babccb23c084386bf3f6774adeb3f3049f69322", "message": "HH-107814 fixes after review - 1", "committedDate": "2020-04-20T19:02:31Z", "type": "forcePushed"}, {"oid": "ebd2462adfb1631e6799c17984e1569b9a2fd063", "url": "https://github.com/hhru/nuts-and-bolts/commit/ebd2462adfb1631e6799c17984e1569b9a2fd063", "message": "HH-107814 add ExponentialBackOff for SeekToCurrentBatchErrorHandler\n\nHH-107814 fixes after review - 1", "committedDate": "2020-04-22T07:19:33Z", "type": "commit"}, {"oid": "ebd2462adfb1631e6799c17984e1569b9a2fd063", "url": "https://github.com/hhru/nuts-and-bolts/commit/ebd2462adfb1631e6799c17984e1569b9a2fd063", "message": "HH-107814 add ExponentialBackOff for SeekToCurrentBatchErrorHandler\n\nHH-107814 fixes after review - 1", "committedDate": "2020-04-22T07:19:33Z", "type": "forcePushed"}, {"oid": "bff4c9a77cad1ef724cca84c66c6709ee524e7e0", "url": "https://github.com/hhru/nuts-and-bolts/commit/bff4c9a77cad1ef724cca84c66c6709ee524e7e0", "message": "[maven-release-plugin] prepare release nuts-and-bolts-parent-4.23.3", "committedDate": "2020-04-22T07:37:34Z", "type": "commit"}, {"oid": "7c92d913cc386949ff8a640ef1a59660d4a4fca2", "url": "https://github.com/hhru/nuts-and-bolts/commit/7c92d913cc386949ff8a640ef1a59660d4a4fca2", "message": "[maven-release-plugin] prepare for next development iteration", "committedDate": "2020-04-22T07:37:45Z", "type": "commit"}]}