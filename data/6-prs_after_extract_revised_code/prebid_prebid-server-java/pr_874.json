{"pr_number": 874, "pr_title": "Move version reading and parsing logic to separate class", "pr_createdAt": "2020-08-25T13:25:26Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/874", "timeline": [{"oid": "b715b68059636f48af725b19d0f5e83fb5a57a34", "url": "https://github.com/prebid/prebid-server-java/commit/b715b68059636f48af725b19d0f5e83fb5a57a34", "message": "Move version reading and parsing logic to separate class", "committedDate": "2020-08-25T11:51:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk5NzQ2OA==", "url": "https://github.com/prebid/prebid-server-java/pull/874#discussion_r521997468", "bodyText": "Do we really need helper method to the handler?\nMaybe for simplicity we can use plain constructor since no exceptions throwing.", "author": "rpanchyk", "createdAt": "2020-11-12T10:25:03Z", "path": "src/main/java/org/prebid/server/handler/VersionHandler.java", "diffHunk": "@@ -24,43 +18,25 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(VersionHandler.class);\n \n-    private static final String UNDEFINED = \"undefined\";\n-\n     private final String revisionResponseBody;\n \n-    private VersionHandler(String revisionResponseBody) {\n+    public VersionHandler(String revisionResponseBody) {\n         this.revisionResponseBody = revisionResponseBody;\n     }\n \n-    public static VersionHandler create(String revisionFilePath, JacksonMapper mapper) {\n-        Revision revision;\n-        try {\n-            revision = mapper.mapper().readValue(ResourceUtil.readFromClasspath(revisionFilePath), Revision.class);\n-        } catch (IllegalArgumentException | IOException e) {\n-            logger.error(\"Was not able to read revision file {0}. Reason: {1}\", revisionFilePath, e.getMessage());\n-            revision = Revision.EMPTY;\n-        }\n-        return new VersionHandler(createRevisionResponseBody(revision, mapper));\n+    public static VersionHandler create(String version, String commitHash, JacksonMapper mapper) {", "originalCommit": "b715b68059636f48af725b19d0f5e83fb5a57a34", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a91e3063460ff8070e65e8a6b9b409b709949e93", "chunk": "diff --git a/src/main/java/org/prebid/server/handler/VersionHandler.java b/src/main/java/org/prebid/server/handler/VersionHandler.java\nindex ef347b8c..4e04d7a1 100644\n--- a/src/main/java/org/prebid/server/handler/VersionHandler.java\n+++ b/src/main/java/org/prebid/server/handler/VersionHandler.java\n\n@@ -20,12 +20,8 @@ public class VersionHandler implements Handler<RoutingContext> {\n \n     private final String revisionResponseBody;\n \n-    public VersionHandler(String revisionResponseBody) {\n-        this.revisionResponseBody = revisionResponseBody;\n-    }\n-\n-    public static VersionHandler create(String version, String commitHash, JacksonMapper mapper) {\n-        return new VersionHandler(createRevisionResponseBody(version, commitHash, mapper));\n+    public VersionHandler(String version, String commitHash, JacksonMapper mapper) {\n+        this.revisionResponseBody = createRevisionResponseBody(version, commitHash, mapper);\n     }\n \n     private static String createRevisionResponseBody(String version, String commitHash, JacksonMapper mapper) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAxNTgwNQ==", "url": "https://github.com/prebid/prebid-server-java/pull/874#discussion_r522015805", "bodyText": "We can use lombok's @Getter for  version & commitHash fields.", "author": "rpanchyk", "createdAt": "2020-11-12T10:54:30Z", "path": "src/main/java/org/prebid/server/util/VersionInfo.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.prebid.server.util;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import io.vertx.core.logging.Logger;\n+import io.vertx.core.logging.LoggerFactory;\n+import lombok.AllArgsConstructor;\n+import lombok.Value;\n+import org.prebid.server.json.JacksonMapper;\n+\n+import java.io.IOException;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class VersionInfo {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(VersionInfo.class);\n+    private static final String UNDEFINED = \"undefined\";\n+\n+    private final String version;\n+    private final String commitHash;\n+\n+    private VersionInfo(String version, String commitHash) {\n+        this.version = version;\n+        this.commitHash = commitHash;\n+    }\n+\n+    public static VersionInfo create(String revisionFilePath, JacksonMapper jacksonMapper) {\n+        Revision revision;\n+        try {\n+            revision = jacksonMapper.mapper().readValue(ResourceUtil.readFromClasspath(revisionFilePath),\n+                    Revision.class);\n+        } catch (IllegalArgumentException | IOException e) {\n+            logger.error(\"Was not able to read revision file {0}. Reason: {1}\", revisionFilePath, e.getMessage());\n+            return new VersionInfo(UNDEFINED, UNDEFINED);\n+        }\n+        final String pbsVersion = revision.getPbsVersion();\n+        final String commitHash = revision.getCommitHash();\n+        return new VersionInfo(\n+                pbsVersion != null ? extractVersion(pbsVersion) : UNDEFINED,\n+                commitHash != null ? commitHash : UNDEFINED);\n+    }\n+\n+    private static String extractVersion(String buildVersion) {\n+        final Pattern versionPattern = Pattern.compile(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d\");\n+        final Matcher versionMatcher = versionPattern.matcher(buildVersion);\n+\n+        return versionMatcher.lookingAt() ? versionMatcher.group() : null;\n+    }\n+\n+    public String getVersion() {", "originalCommit": "b715b68059636f48af725b19d0f5e83fb5a57a34", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a91e3063460ff8070e65e8a6b9b409b709949e93", "chunk": "diff --git a/src/main/java/org/prebid/server/util/VersionInfo.java b/src/main/java/org/prebid/server/util/VersionInfo.java\nindex 70b30b32..71b2fa87 100644\n--- a/src/main/java/org/prebid/server/util/VersionInfo.java\n+++ b/src/main/java/org/prebid/server/util/VersionInfo.java\n\n@@ -11,13 +11,14 @@ import java.io.IOException;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+@Value\n public class VersionInfo {\n \n     private static final Logger logger = LoggerFactory.getLogger(VersionInfo.class);\n     private static final String UNDEFINED = \"undefined\";\n \n-    private final String version;\n-    private final String commitHash;\n+    String version;\n+    String commitHash;\n \n     private VersionInfo(String version, String commitHash) {\n         this.version = version;\n"}}, {"oid": "a91e3063460ff8070e65e8a6b9b409b709949e93", "url": "https://github.com/prebid/prebid-server-java/commit/a91e3063460ff8070e65e8a6b9b409b709949e93", "message": "Use regular constructor for VersionHandler and lombok Value annotation for VersionInfo", "committedDate": "2020-11-12T11:46:08Z", "type": "commit"}, {"oid": "0e20cc6cc9c82a544bd3b3599eb4e032e1c8f705", "url": "https://github.com/prebid/prebid-server-java/commit/0e20cc6cc9c82a544bd3b3599eb4e032e1c8f705", "message": "Merge branch 'master' into move-version-logic-parsing", "committedDate": "2020-11-12T11:52:03Z", "type": "commit"}]}