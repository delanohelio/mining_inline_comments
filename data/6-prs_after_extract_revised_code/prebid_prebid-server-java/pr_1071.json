{"pr_number": 1071, "pr_title": "Mobilefuse bidder review", "pr_createdAt": "2020-12-15T00:20:36Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/1071", "timeline": [{"oid": "300dc817dc3a4fb6ab183b2ff119921272a82ce8", "url": "https://github.com/prebid/prebid-server-java/commit/300dc817dc3a4fb6ab183b2ff119921272a82ce8", "message": "Mobilefuse bidder review", "committedDate": "2020-12-15T00:15:30Z", "type": "commit"}, {"oid": "e6efa8a3702609508f27f4fa2c2bb314e743f347", "url": "https://github.com/prebid/prebid-server-java/commit/e6efa8a3702609508f27f4fa2c2bb314e743f347", "message": "Add imps length check", "committedDate": "2020-12-15T00:17:58Z", "type": "commit"}, {"oid": "8fcb4c42fb357d016a38c57b537192c3b8dee242", "url": "https://github.com/prebid/prebid-server-java/commit/8fcb4c42fb357d016a38c57b537192c3b8dee242", "message": "Replace isEmpty with !isPresent due to java version", "committedDate": "2020-12-15T00:27:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDI5NTg0Mg==", "url": "https://github.com/prebid/prebid-server-java/pull/1071#discussion_r570295842", "bodyText": "i'd say we don't strongly require to involve Optional here. It is just usual checking for NULL.\nSo, pls align it with our project style.", "author": "rpanchyk", "createdAt": "2021-02-04T15:05:08Z", "path": "src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java", "diffHunk": "@@ -46,26 +47,30 @@ public MobilefuseBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n-        final ExtImpMobilefuse firstExtImpMobilefuse = request.getImp().stream()\n+        final Optional<ExtImpMobilefuse> firstExtImpMobilefuse = request.getImp().stream()", "originalCommit": "8fcb4c42fb357d016a38c57b537192c3b8dee242", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0442fbe03bab3a260397ec7a3436408c2055d021", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java b/src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java\nindex 38d29e46..282e6b76 100644\n--- a/src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/mobilefuse/MobilefuseBidder.java\n\n@@ -47,30 +46,38 @@ public class MobilefuseBidder implements Bidder<BidRequest> {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n-        final Optional<ExtImpMobilefuse> firstExtImpMobilefuse = request.getImp().stream()\n-                .map(this::parseImpExt)\n-                .filter(Objects::nonNull)\n-                .findFirst();\n+        ExtImpMobilefuse firstExtImpMobilefuse = null;\n+        for (Imp imp : request.getImp()) {\n+            final ExtImpMobilefuse impExt = parseImpExt(imp);\n+            if (impExt != null) {\n+                firstExtImpMobilefuse = impExt;\n+                break;\n+            }\n+        }\n \n-        if (!firstExtImpMobilefuse.isPresent()) {\n+        if (firstExtImpMobilefuse == null) {\n             return Result.withError(BidderError.badInput(\"Invalid ExtImpMobilefuse value\"));\n         }\n \n-        final Optional<Imp> requestImp = request.getImp().stream()\n-                .map(imp -> modifyImp(imp, firstExtImpMobilefuse.get()))\n-                .filter(Objects::nonNull)\n-                .findFirst();\n+        Imp requestImp = null;\n+        for (Imp imp : request.getImp()) {\n+            final Imp modifiedImp = modifyImp(imp, firstExtImpMobilefuse);\n+            if (modifiedImp != null) {\n+                requestImp = modifiedImp;\n+                break;\n+            }\n+        }\n \n-        if (!requestImp.isPresent()) {\n+        if (requestImp == null) {\n             return Result.withError(BidderError.badInput(\"No valid imps\"));\n         }\n \n-        final BidRequest outgoingRequest = request.toBuilder().imp(Collections.singletonList(requestImp.get())).build();\n+        final BidRequest outgoingRequest = request.toBuilder().imp(Collections.singletonList(requestImp)).build();\n         final String body = mapper.encode(outgoingRequest);\n \n         return Result.withValue(HttpRequest.<BidRequest>builder()\n                 .method(HttpMethod.POST)\n-                .uri(makeUrl(firstExtImpMobilefuse.get()))\n+                .uri(makeUrl(firstExtImpMobilefuse))\n                 .headers(HttpUtil.headers())\n                 .payload(outgoingRequest)\n                 .body(body)\n"}}, {"oid": "0442fbe03bab3a260397ec7a3436408c2055d021", "url": "https://github.com/prebid/prebid-server-java/commit/0442fbe03bab3a260397ec7a3436408c2055d021", "message": "Fixes after review", "committedDate": "2021-02-10T08:55:46Z", "type": "commit"}]}