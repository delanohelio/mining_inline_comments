{"pr_number": 1001, "pr_title": "YieldLab bidder review", "pr_createdAt": "2020-11-10T07:33:14Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/1001", "timeline": [{"oid": "861a46c35473d2379cbbae44c1db601e2e8dfeb4", "url": "https://github.com/prebid/prebid-server-java/commit/861a46c35473d2379cbbae44c1db601e2e8dfeb4", "message": "YieldLab bidder review", "committedDate": "2020-11-10T07:32:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU1OTg3MA==", "url": "https://github.com/prebid/prebid-server-java/pull/1001#discussion_r520559870", "bodyText": "It is not friendly to throw npe here which will fall the whole auction.\nMay be let's cover by condition?\nPls review Objects.nonNull(..) usages.", "author": "rpanchyk", "createdAt": "2020-11-10T13:27:03Z", "path": "src/main/java/org/prebid/server/bidder/yieldlab/YieldlabBidder.java", "diffHunk": "@@ -110,6 +95,25 @@ private ExtImpYieldlab constructExtImp(List<ExtImpYieldlab> extImps) {\n         return ExtImpYieldlab.builder().adslotId(adSlotIdsParams).targeting(targeting).build();\n     }\n \n+    private List<ExtImpYieldlab> collectImpExt(List<Imp> imps) {\n+        final List<ExtImpYieldlab> extImps = new ArrayList<>();\n+        for (Imp imp : imps) {\n+            final ExtImpYieldlab extImpYieldlab = parseImpExt(imp);\n+            if (Objects.nonNull(extImpYieldlab)) {", "originalCommit": "861a46c35473d2379cbbae44c1db601e2e8dfeb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU4OTgwMg==", "url": "https://github.com/prebid/prebid-server-java/pull/1001#discussion_r520589802", "bodyText": "Not the issue, confused by requireNonNull method.", "author": "rpanchyk", "createdAt": "2020-11-10T14:10:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU1OTg3MA=="}], "type": "inlineReview", "revised_code": {"commit": "29fd7fbe69905611306b7b71fa3276eed7759a57", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/yieldlab/YieldlabBidder.java b/src/main/java/org/prebid/server/bidder/yieldlab/YieldlabBidder.java\nindex ce4456cfc..80734dfea 100644\n--- a/src/main/java/org/prebid/server/bidder/yieldlab/YieldlabBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/yieldlab/YieldlabBidder.java\n\n@@ -84,11 +84,14 @@ public class YieldlabBidder implements Bidder<Void> {\n \n         final List<String> adSlotIds = extImps.stream()\n                 .map(ExtImpYieldlab::getAdslotId)\n+                .filter(Objects::nonNull)\n                 .collect(Collectors.toList());\n \n         final Map<String, String> targeting = extImps.stream()\n                 .map(ExtImpYieldlab::getTargeting)\n+                .filter(Objects::nonNull)\n                 .flatMap(map -> map.entrySet().stream())\n+                .filter(entry -> entry.getKey() != null)\n                 .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n         final String adSlotIdsParams = adSlotIds.stream().sorted().collect(Collectors.joining(AD_SLOT_ID_SEPARATOR));\n"}}, {"oid": "29fd7fbe69905611306b7b71fa3276eed7759a57", "url": "https://github.com/prebid/prebid-server-java/commit/29fd7fbe69905611306b7b71fa3276eed7759a57", "message": "Fixes after review", "committedDate": "2020-11-10T14:09:07Z", "type": "commit"}, {"oid": "6569c80e1adfa4e4198a5520c098f2f91477bf4e", "url": "https://github.com/prebid/prebid-server-java/commit/6569c80e1adfa4e4198a5520c098f2f91477bf4e", "message": "Fixes after review", "committedDate": "2020-11-10T14:54:12Z", "type": "forcePushed"}, {"oid": "b016319617a04676e1f8bad76d1d202d1a10f9c7", "url": "https://github.com/prebid/prebid-server-java/commit/b016319617a04676e1f8bad76d1d202d1a10f9c7", "message": "Fixes after review", "committedDate": "2020-11-10T14:57:10Z", "type": "commit"}, {"oid": "b016319617a04676e1f8bad76d1d202d1a10f9c7", "url": "https://github.com/prebid/prebid-server-java/commit/b016319617a04676e1f8bad76d1d202d1a10f9c7", "message": "Fixes after review", "committedDate": "2020-11-10T14:57:10Z", "type": "forcePushed"}]}