{"pr_number": 723, "pr_title": "Add ignore for empty vendor list", "pr_createdAt": "2020-05-18T15:05:50Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/723", "timeline": [{"oid": "10fb6b3299608f366bb259c452ac3dfc22a827ce", "url": "https://github.com/prebid/prebid-server-java/commit/10fb6b3299608f366bb259c452ac3dfc22a827ce", "message": "Ignore empty vendor list", "committedDate": "2020-05-18T15:04:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwMjEzNA==", "url": "https://github.com/prebid/prebid-server-java/pull/723#discussion_r426702134", "bodyText": "I think we can leave 0 here, since it is non-regular version.", "author": "rpanchyk", "createdAt": "2020-05-18T15:16:07Z", "path": "src/main/java/org/prebid/server/privacy/gdpr/model/TCStringEmpty.java", "diffHunk": "@@ -54,7 +54,7 @@ public String getConsentLanguage() {\n \n     @Override\n     public int getVendorListVersion() {\n-        return 0;\n+        return -1;", "originalCommit": "10fb6b3299608f366bb259c452ac3dfc22a827ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ae1fcd2ab9f1ad08f5c5e1db5e68bf14f35bed8", "chunk": "diff --git a/src/main/java/org/prebid/server/privacy/gdpr/model/TCStringEmpty.java b/src/main/java/org/prebid/server/privacy/gdpr/model/TCStringEmpty.java\nindex 17689d23..98123ba2 100644\n--- a/src/main/java/org/prebid/server/privacy/gdpr/model/TCStringEmpty.java\n+++ b/src/main/java/org/prebid/server/privacy/gdpr/model/TCStringEmpty.java\n\n@@ -54,7 +54,7 @@ public class TCStringEmpty implements TCString {\n \n     @Override\n     public int getVendorListVersion() {\n-        return -1;\n+        return 0;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwNTI0MA==", "url": "https://github.com/prebid/prebid-server-java/pull/723#discussion_r426705240", "bodyText": "We can do version checking as <= 0 (see upper comment).\nAlso, i'd like see more granular message here, with included input version, like: Vendor list of {0} version is not valid", "author": "rpanchyk", "createdAt": "2020-05-18T15:20:43Z", "path": "src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java", "diffHunk": "@@ -159,6 +159,10 @@ private static void createAndCheckWritePermissionsFor(FileSystem fileSystem, Str\n      * Returns a map with vendor ID as a key and a set of purposes as a value for given vendor list version.\n      */\n     public Future<Map<Integer, V>> forVersion(int version) {\n+        if (version == -1) {", "originalCommit": "10fb6b3299608f366bb259c452ac3dfc22a827ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ae1fcd2ab9f1ad08f5c5e1db5e68bf14f35bed8", "chunk": "diff --git a/src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java b/src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java\nindex dce7b754..b7134335 100644\n--- a/src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java\n+++ b/src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java\n\n@@ -159,8 +159,8 @@ public abstract class VendorListService<T, V> {\n      * Returns a map with vendor ID as a key and a set of purposes as a value for given vendor list version.\n      */\n     public Future<Map<Integer, V>> forVersion(int version) {\n-        if (version == -1) {\n-            return Future.failedFuture(\"Vendor list not required\");\n+        if (version <= 0) {\n+            return Future.failedFuture(String.format(\"Vendor list for version %s not valid.\", version));\n         }\n \n         final Map<Integer, V> idToVendor = cache.get(version);\n"}}, {"oid": "8ae1fcd2ab9f1ad08f5c5e1db5e68bf14f35bed8", "url": "https://github.com/prebid/prebid-server-java/commit/8ae1fcd2ab9f1ad08f5c5e1db5e68bf14f35bed8", "message": "fix after review", "committedDate": "2020-05-18T15:28:53Z", "type": "commit"}]}