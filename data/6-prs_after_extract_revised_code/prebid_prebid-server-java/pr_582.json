{"pr_number": 582, "pr_title": "Ccpa phase 2", "pr_createdAt": "2020-01-13T11:14:21Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/582", "timeline": [{"oid": "d753ca0ef8e4a88fc6130baf9b69a41bdd80dc45", "url": "https://github.com/prebid/prebid-server-java/commit/d753ca0ef8e4a88fc6130baf9b69a41bdd80dc45", "message": "cppa phase 2 initial commit", "committedDate": "2020-01-13T06:53:58Z", "type": "commit"}, {"oid": "9eaa8f094ee804c18db08cf2344e94e5a8ab2525", "url": "https://github.com/prebid/prebid-server-java/commit/9eaa8f094ee804c18db08cf2344e94e5a8ab2525", "message": "Tests were updated", "committedDate": "2020-01-13T11:11:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU2ODAwMw==", "url": "https://github.com/prebid/prebid-server-java/pull/582#discussion_r369568003", "bodyText": "This can moved down near usage (before if statement).", "author": "rpanchyk", "createdAt": "2020-01-22T13:48:37Z", "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java", "diffHunk": "@@ -63,11 +70,51 @@ public PrivacyEnforcementService(GdprService gdprService, BidderCatalog bidderCa\n \n         final Regs regs = bidRequest.getRegs();\n         final Device device = bidRequest.getDevice();\n+        final User user = bidRequest.getUser();\n+\n+        final Privacy privacy = PrivacyExtractor.validPrivacyFrom(regs, user);", "originalCommit": "9eaa8f094ee804c18db08cf2344e94e5a8ab2525", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4697f5fed65adcc8fb6bf082c876589bffdafe3f", "chunk": "diff --git a/src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java b/src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java\nindex b764bd1b5..7bfb90b0c 100644\n--- a/src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java\n+++ b/src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java\n\n@@ -72,12 +72,11 @@ public class PrivacyEnforcementService {\n         final Device device = bidRequest.getDevice();\n         final User user = bidRequest.getUser();\n \n-        final Privacy privacy = PrivacyExtractor.validPrivacyFrom(regs, user);\n-\n         if (isCoppaMaskingRequired(regs)) {\n             return maskCoppa(bidderToUser, device, user);\n         }\n \n+        final Privacy privacy = PrivacyExtractor.validPrivacyFrom(regs, user);\n         if (isCcpaEnforced(privacy.getCcpa())) {\n             return maskCcpa(bidderToUser, device, user);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU3MjgyMw==", "url": "https://github.com/prebid/prebid-server-java/pull/582#discussion_r369572823", "bodyText": "Minor. Pls check for null.", "author": "rpanchyk", "createdAt": "2020-01-22T13:57:34Z", "path": "src/main/java/org/prebid/server/handler/CookieSyncHandler.java", "diffHunk": "@@ -77,6 +83,7 @@ public CookieSyncHandler(String externalUrl, long defaultTimeout, UidsCookieServ\n         this.bidderCatalog = Objects.requireNonNull(bidderCatalog);\n         activeBidders = activeBidders(bidderCatalog);\n         this.gdprService = Objects.requireNonNull(gdprService);\n+        this.privacyEnforcementService = privacyEnforcementService;", "originalCommit": "9eaa8f094ee804c18db08cf2344e94e5a8ab2525", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4697f5fed65adcc8fb6bf082c876589bffdafe3f", "chunk": "diff --git a/src/main/java/org/prebid/server/handler/CookieSyncHandler.java b/src/main/java/org/prebid/server/handler/CookieSyncHandler.java\nindex 19f542f3d..5f099fe05 100644\n--- a/src/main/java/org/prebid/server/handler/CookieSyncHandler.java\n+++ b/src/main/java/org/prebid/server/handler/CookieSyncHandler.java\n\n@@ -83,7 +83,7 @@ public class CookieSyncHandler implements Handler<RoutingContext> {\n         this.bidderCatalog = Objects.requireNonNull(bidderCatalog);\n         activeBidders = activeBidders(bidderCatalog);\n         this.gdprService = Objects.requireNonNull(gdprService);\n-        this.privacyEnforcementService = privacyEnforcementService;\n+        this.privacyEnforcementService = Objects.requireNonNull(privacyEnforcementService);\n         this.gdprHostVendorId = gdprHostVendorId;\n         this.useGeoLocation = useGeoLocation;\n         this.defaultCoopSync = defaultCoopSync;\n"}}, {"oid": "46f03efcbaf1e57dba6ae33f41afae4bc0b90321", "url": "https://github.com/prebid/prebid-server-java/commit/46f03efcbaf1e57dba6ae33f41afae4bc0b90321", "message": "Merge master branch", "committedDate": "2020-02-05T10:10:47Z", "type": "commit"}, {"oid": "4697f5fed65adcc8fb6bf082c876589bffdafe3f", "url": "https://github.com/prebid/prebid-server-java/commit/4697f5fed65adcc8fb6bf082c876589bffdafe3f", "message": "Fix pull request comments and merge effects", "committedDate": "2020-02-05T10:50:16Z", "type": "commit"}]}