{"pr_number": 644, "pr_title": "Write to Device.Ua", "pr_createdAt": "2020-03-26T10:37:30Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/644", "timeline": [{"oid": "9640b9068b14f6d83215b8eae6e0ea8572ab0e33", "url": "https://github.com/prebid/prebid-server-java/commit/9640b9068b14f6d83215b8eae6e0ea8572ab0e33", "message": "Write User-Agent to Device.Ua if Device.Ua and User-Agent Header are not empty.", "committedDate": "2020-03-26T10:33:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxNTk5NQ==", "url": "https://github.com/prebid/prebid-server-java/pull/644#discussion_r399315995", "bodyText": "First of all. Don't you thing that\n1 Check if Device is null\n2 Create new Device if it is Null and insert into request.\n3 call bidRequestVideo.getDevice() 4 times\n4 ...\n5 Then create new request. And create new device again. And set UA.", "author": "DGarbar", "createdAt": "2020-03-27T14:44:09Z", "path": "src/main/java/org/prebid/server/auction/VideoRequestFactory.java", "diffHunk": "@@ -85,7 +87,22 @@ private BidRequestVideo parseRequest(RoutingContext context) {\n         }\n \n         try {\n-            return mapper.decodeValue(body, BidRequestVideo.class);\n+            BidRequestVideo bidRequestVideo = mapper.decodeValue(body, BidRequestVideo.class);\n+            if (bidRequestVideo.getDevice() == null) {\n+                bidRequestVideo = bidRequestVideo.toBuilder().device(Device.builder().build()).build();\n+            }\n+            if (StringUtils.isEmpty(bidRequestVideo.getDevice().getUa())) {\n+                final String userAgentHeader = context.request().getHeader(HttpUtil.USER_AGENT_HEADER);\n+                if (StringUtils.isEmpty(userAgentHeader)) {\n+                    throw new InvalidRequestException(\"Device.UA and User-Agent Header is not presented\");\n+                }\n+                bidRequestVideo = bidRequestVideo.toBuilder()\n+                        .device(bidRequestVideo.getDevice().toBuilder()\n+                                .ua(userAgentHeader)\n+                                .build())\n+                        .build();\n+            }", "originalCommit": "9640b9068b14f6d83215b8eae6e0ea8572ab0e33", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae8693ac6822ba583d82d89a343980b93913a0ad", "chunk": "diff --git a/src/main/java/org/prebid/server/auction/VideoRequestFactory.java b/src/main/java/org/prebid/server/auction/VideoRequestFactory.java\nindex 4839c488..1ce0a0e7 100644\n--- a/src/main/java/org/prebid/server/auction/VideoRequestFactory.java\n+++ b/src/main/java/org/prebid/server/auction/VideoRequestFactory.java\n\n@@ -87,27 +87,32 @@ public class VideoRequestFactory {\n         }\n \n         try {\n-            BidRequestVideo bidRequestVideo = mapper.decodeValue(body, BidRequestVideo.class);\n-            if (bidRequestVideo.getDevice() == null) {\n-                bidRequestVideo = bidRequestVideo.toBuilder().device(Device.builder().build()).build();\n-            }\n-            if (StringUtils.isEmpty(bidRequestVideo.getDevice().getUa())) {\n-                final String userAgentHeader = context.request().getHeader(HttpUtil.USER_AGENT_HEADER);\n-                if (StringUtils.isEmpty(userAgentHeader)) {\n-                    throw new InvalidRequestException(\"Device.UA and User-Agent Header is not presented\");\n-                }\n-                bidRequestVideo = bidRequestVideo.toBuilder()\n-                        .device(bidRequestVideo.getDevice().toBuilder()\n-                                .ua(userAgentHeader)\n-                                .build())\n-                        .build();\n-            }\n-            return bidRequestVideo;\n+            final BidRequestVideo bidRequestVideo = mapper.decodeValue(body, BidRequestVideo.class);\n+            return insertDeviceUa(context, bidRequestVideo);\n         } catch (DecodeException e) {\n             throw new InvalidRequestException(e.getMessage());\n         }\n     }\n \n+    private BidRequestVideo insertDeviceUa(RoutingContext context, BidRequestVideo bidRequestVideo) {\n+        final Device device = bidRequestVideo.getDevice();\n+        final String deviceUa = device != null ? device.getUa() : null;\n+        if (StringUtils.isBlank(deviceUa)) {\n+            final String userAgentHeader = context.request().getHeader(HttpUtil.USER_AGENT_HEADER);\n+            if (StringUtils.isEmpty(userAgentHeader)) {\n+                throw new InvalidRequestException(\"Device.UA and User-Agent Header is not presented\");\n+            }\n+            final Device.DeviceBuilder deviceBuilder = device == null ? Device.builder() : device.toBuilder();\n+\n+            return bidRequestVideo.toBuilder()\n+                    .device(deviceBuilder\n+                            .ua(userAgentHeader)\n+                            .build())\n+                    .build();\n+        }\n+        return bidRequestVideo;\n+    }\n+\n     private static Set<String> podConfigIds(BidRequestVideo incomingBidRequest) {\n         final Podconfig podconfig = incomingBidRequest.getPodconfig();\n         if (podconfig != null && CollectionUtils.isNotEmpty(podconfig.getPods())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxNjEwMA==", "url": "https://github.com/prebid/prebid-server-java/pull/644#discussion_r399316100", "bodyText": "private BidRequestVideo insertDeviceUa(RoutingContext context, BidRequestVideo bidRequestVideo) {\n        final Device device = bidRequestVideo.getDevice();\n        final String deviceUa = device != null ? device.getUa() : null;\n        if (StringUtils.isBlank(deviceUa)) {\n            final String userAgentHeader = context.request().getHeader(HttpUtil.USER_AGENT_HEADER);\n            if (StringUtils.isEmpty(userAgentHeader)) {\n                throw new InvalidRequestException(\"Device.UA and User-Agent Header is not present\");\n            }\n            final Device.DeviceBuilder deviceBuilder = device == null ? Device.builder() : device.toBuilder();\n\n            return bidRequestVideo.toBuilder()\n                    .device(deviceBuilder\n                            .ua(userAgentHeader)\n                            .build())\n                    .build();\n        }\n        return bidRequestVideo;\n    }", "author": "DGarbar", "createdAt": "2020-03-27T14:44:20Z", "path": "src/main/java/org/prebid/server/auction/VideoRequestFactory.java", "diffHunk": "@@ -85,7 +87,22 @@ private BidRequestVideo parseRequest(RoutingContext context) {\n         }\n \n         try {\n-            return mapper.decodeValue(body, BidRequestVideo.class);\n+            BidRequestVideo bidRequestVideo = mapper.decodeValue(body, BidRequestVideo.class);\n+            if (bidRequestVideo.getDevice() == null) {\n+                bidRequestVideo = bidRequestVideo.toBuilder().device(Device.builder().build()).build();\n+            }\n+            if (StringUtils.isEmpty(bidRequestVideo.getDevice().getUa())) {\n+                final String userAgentHeader = context.request().getHeader(HttpUtil.USER_AGENT_HEADER);\n+                if (StringUtils.isEmpty(userAgentHeader)) {\n+                    throw new InvalidRequestException(\"Device.UA and User-Agent Header is not presented\");\n+                }\n+                bidRequestVideo = bidRequestVideo.toBuilder()\n+                        .device(bidRequestVideo.getDevice().toBuilder()\n+                                .ua(userAgentHeader)\n+                                .build())\n+                        .build();\n+            }\n+            return bidRequestVideo;", "originalCommit": "9640b9068b14f6d83215b8eae6e0ea8572ab0e33", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae8693ac6822ba583d82d89a343980b93913a0ad", "chunk": "diff --git a/src/main/java/org/prebid/server/auction/VideoRequestFactory.java b/src/main/java/org/prebid/server/auction/VideoRequestFactory.java\nindex 4839c488..1ce0a0e7 100644\n--- a/src/main/java/org/prebid/server/auction/VideoRequestFactory.java\n+++ b/src/main/java/org/prebid/server/auction/VideoRequestFactory.java\n\n@@ -87,27 +87,32 @@ public class VideoRequestFactory {\n         }\n \n         try {\n-            BidRequestVideo bidRequestVideo = mapper.decodeValue(body, BidRequestVideo.class);\n-            if (bidRequestVideo.getDevice() == null) {\n-                bidRequestVideo = bidRequestVideo.toBuilder().device(Device.builder().build()).build();\n-            }\n-            if (StringUtils.isEmpty(bidRequestVideo.getDevice().getUa())) {\n-                final String userAgentHeader = context.request().getHeader(HttpUtil.USER_AGENT_HEADER);\n-                if (StringUtils.isEmpty(userAgentHeader)) {\n-                    throw new InvalidRequestException(\"Device.UA and User-Agent Header is not presented\");\n-                }\n-                bidRequestVideo = bidRequestVideo.toBuilder()\n-                        .device(bidRequestVideo.getDevice().toBuilder()\n-                                .ua(userAgentHeader)\n-                                .build())\n-                        .build();\n-            }\n-            return bidRequestVideo;\n+            final BidRequestVideo bidRequestVideo = mapper.decodeValue(body, BidRequestVideo.class);\n+            return insertDeviceUa(context, bidRequestVideo);\n         } catch (DecodeException e) {\n             throw new InvalidRequestException(e.getMessage());\n         }\n     }\n \n+    private BidRequestVideo insertDeviceUa(RoutingContext context, BidRequestVideo bidRequestVideo) {\n+        final Device device = bidRequestVideo.getDevice();\n+        final String deviceUa = device != null ? device.getUa() : null;\n+        if (StringUtils.isBlank(deviceUa)) {\n+            final String userAgentHeader = context.request().getHeader(HttpUtil.USER_AGENT_HEADER);\n+            if (StringUtils.isEmpty(userAgentHeader)) {\n+                throw new InvalidRequestException(\"Device.UA and User-Agent Header is not presented\");\n+            }\n+            final Device.DeviceBuilder deviceBuilder = device == null ? Device.builder() : device.toBuilder();\n+\n+            return bidRequestVideo.toBuilder()\n+                    .device(deviceBuilder\n+                            .ua(userAgentHeader)\n+                            .build())\n+                    .build();\n+        }\n+        return bidRequestVideo;\n+    }\n+\n     private static Set<String> podConfigIds(BidRequestVideo incomingBidRequest) {\n         final Podconfig podconfig = incomingBidRequest.getPodconfig();\n         if (podconfig != null && CollectionUtils.isNotEmpty(podconfig.getPods())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxNjQxOQ==", "url": "https://github.com/prebid/prebid-server-java/pull/644#discussion_r399316419", "bodyText": "check style", "author": "DGarbar", "createdAt": "2020-03-27T14:44:46Z", "path": "src/test/java/org/prebid/server/auction/VideoRequestFactoryTest.java", "diffHunk": "@@ -29,15 +30,14 @@\n import org.prebid.server.proto.openrtb.ext.request.ExtRequestPrebidCache;\n import org.prebid.server.proto.openrtb.ext.request.ExtRequestPrebidCacheVastxml;\n import org.prebid.server.proto.openrtb.ext.request.ExtRequestTargeting;\n+import org.prebid.server.util.HttpUtil;\n \n import java.util.Arrays;\n \n import static java.util.Collections.emptySet;\n import static java.util.Collections.singletonList;\n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.ArgumentMatchers.anyLong;\n-import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.*;", "originalCommit": "9640b9068b14f6d83215b8eae6e0ea8572ab0e33", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68b574324fc4356af8ab1eec0df410c4ff942bb3", "chunk": "diff --git a/src/test/java/org/prebid/server/auction/VideoRequestFactoryTest.java b/src/test/java/org/prebid/server/auction/VideoRequestFactoryTest.java\nindex 17b5cb24..835c231a 100644\n--- a/src/test/java/org/prebid/server/auction/VideoRequestFactoryTest.java\n+++ b/src/test/java/org/prebid/server/auction/VideoRequestFactoryTest.java\n\n@@ -37,7 +37,10 @@ import java.util.Arrays;\n import static java.util.Collections.emptySet;\n import static java.util.Collections.singletonList;\n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.ArgumentMatchers.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.anyLong;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.BDDMockito.given;\n import static org.mockito.Mockito.verify;\n \n"}}, {"oid": "ae8693ac6822ba583d82d89a343980b93913a0ad", "url": "https://github.com/prebid/prebid-server-java/commit/ae8693ac6822ba583d82d89a343980b93913a0ad", "message": "change request", "committedDate": "2020-03-31T07:31:49Z", "type": "commit"}, {"oid": "68b574324fc4356af8ab1eec0df410c4ff942bb3", "url": "https://github.com/prebid/prebid-server-java/commit/68b574324fc4356af8ab1eec0df410c4ff942bb3", "message": "change request", "committedDate": "2020-03-31T07:33:01Z", "type": "commit"}, {"oid": "1f529c5f0daa6808040081bb93ab6c708065a3ce", "url": "https://github.com/prebid/prebid-server-java/commit/1f529c5f0daa6808040081bb93ab6c708065a3ce", "message": "Merge branch 'master' into replace-device-ua-with-header\n\n# Conflicts:\n#\tsrc/test/java/org/prebid/server/auction/VideoRequestFactoryTest.java", "committedDate": "2020-05-14T11:20:41Z", "type": "commit"}]}