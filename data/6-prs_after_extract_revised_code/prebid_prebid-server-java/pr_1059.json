{"pr_number": 1059, "pr_title": "GumGum bidder review", "pr_createdAt": "2020-12-08T12:33:30Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/1059", "timeline": [{"oid": "0db251de96b0db36f4cd79341ed17be48603a30a", "url": "https://github.com/prebid/prebid-server-java/commit/0db251de96b0db36f4cd79341ed17be48603a30a", "message": "GumGum bidder review", "committedDate": "2020-12-08T12:33:02Z", "type": "commit"}, {"oid": "a515ed172edce0b6afdf913f6a9820771402fa0c", "url": "https://github.com/prebid/prebid-server-java/commit/a515ed172edce0b6afdf913f6a9820771402fa0c", "message": "Update adm resolve logic", "committedDate": "2020-12-08T13:07:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM0Mjk0Mg==", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538342942", "bodyText": "Minor. Not the issue but just to inform, in this case we may use ObjectUtils.defaultIfNull(..) since trackingId is a string value.", "author": "rpanchyk", "createdAt": "2020-12-08T13:03:15Z", "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -156,7 +158,7 @@ private static boolean isNullOrZero(Integer number) {\n     }\n \n     private static Site modifySite(Site site, String trackingId) {\n-        return site != null ? site.toBuilder().id(trackingId).build() : null;\n+        return site != null ? site.toBuilder().id(Objects.toString(trackingId, \"\")).build() : null;", "originalCommit": "0db251de96b0db36f4cd79341ed17be48603a30a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c00cbe80a393fc67a50ce5b07e693fa2595fadec", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\nindex dfd8ab1c..e5cfe5dc 100644\n--- a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n\n@@ -158,7 +160,7 @@ public class GumgumBidder implements Bidder<BidRequest> {\n     }\n \n     private static Site modifySite(Site site, String trackingId) {\n-        return site != null ? site.toBuilder().id(Objects.toString(trackingId, \"\")).build() : null;\n+        return site != null ? site.toBuilder().id(ObjectUtils.defaultIfNull(trackingId, \"\")).build() : null;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM3MzI3Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538373273", "bodyText": "use ? :", "author": "DGarbar", "createdAt": "2020-12-08T13:33:23Z", "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -177,26 +180,34 @@ private static Site modifySite(Site site, String trackingId) {\n \n     private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n+                .filter(Objects::nonNull)\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n+                .filter(Objects::nonNull)\n                 .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n         final Bid updatedBid = bidType == BidType.video\n-                ? bid.toBuilder().adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice()))).build()\n-                : bid;\n+                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build() : bid;\n         return BidderBid.of(updatedBid, bidType, currency);\n     }\n \n     private static BidType getMediaType(String impId, List<Imp> requestImps) {\n         for (Imp imp : requestImps) {\n-            if (imp.getId().equals(impId) && imp.getBanner() != null) {\n-                return BidType.banner;\n+            if (imp.getId().equals(impId)) {\n+                if (imp.getBanner() != null) {", "originalCommit": "a515ed172edce0b6afdf913f6a9820771402fa0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c00cbe80a393fc67a50ce5b07e693fa2595fadec", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\nindex 5810576c..e5cfe5dc 100644\n--- a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n\n@@ -191,17 +192,15 @@ public class GumgumBidder implements Bidder<BidRequest> {\n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n         final Bid updatedBid = bidType == BidType.video\n-                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build() : bid;\n+                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build()\n+                : bid;\n         return BidderBid.of(updatedBid, bidType, currency);\n     }\n \n     private static BidType getMediaType(String impId, List<Imp> requestImps) {\n         for (Imp imp : requestImps) {\n             if (imp.getId().equals(impId)) {\n-                if (imp.getBanner() != null) {\n-                    return BidType.banner;\n-                }\n-                return BidType.video;\n+                return imp.getBanner() != null ? BidType.banner : BidType.video;\n             }\n         }\n         return BidType.video;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM3MzkyMw==", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538373923", "bodyText": "should set What?", "author": "DGarbar", "createdAt": "2020-12-08T13:33:58Z", "path": "src/test/java/org/prebid/server/bidder/gumgum/GumgumBidderTest.java", "diffHunk": "@@ -121,12 +128,37 @@ public void makeHttpRequestsShouldSkipImpressionsWithoutBannerOrVideo() {\n \n         // then\n         assertThat(result.getErrors()).isEmpty();\n-        assertThat(result.getValue()).hasSize(1)\n-                .extracting(httpRequest -> mapper.readValue(httpRequest.getBody(), BidRequest.class))\n+        assertThat(result.getValue())\n+                .extracting(HttpRequest::getPayload)\n                 .flatExtracting(BidRequest::getImp)\n                 .extracting(Imp::getBanner)\n                 .extracting(Banner::getId)\n-                .containsOnly(\"banner_id\");\n+                .containsExactly(\"banner_id\");\n+    }\n+\n+    @Test\n+    public void makeHttpRequestsShouldSet() {", "originalCommit": "a515ed172edce0b6afdf913f6a9820771402fa0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c00cbe80a393fc67a50ce5b07e693fa2595fadec", "chunk": "diff --git a/src/test/java/org/prebid/server/bidder/gumgum/GumgumBidderTest.java b/src/test/java/org/prebid/server/bidder/gumgum/GumgumBidderTest.java\nindex 190c88f6..30eba2a7 100644\n--- a/src/test/java/org/prebid/server/bidder/gumgum/GumgumBidderTest.java\n+++ b/src/test/java/org/prebid/server/bidder/gumgum/GumgumBidderTest.java\n\n@@ -137,7 +137,7 @@ public class GumgumBidderTest extends VertxTest {\n     }\n \n     @Test\n-    public void makeHttpRequestsShouldSet() {\n+    public void makeHttpRequestsShouldSetEmtyStringIfZoneIsNull() {\n         // given\n         final BidRequest bidRequest = givenBidRequest(bidRequestBuilder ->\n                         bidRequestBuilder.site(Site.builder().build()),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM4NDA3Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538384073", "bodyText": "/n", "author": "DGarbar", "createdAt": "2020-12-08T13:43:50Z", "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -177,26 +180,34 @@ private static Site modifySite(Site site, String trackingId) {\n \n     private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n+                .filter(Objects::nonNull)\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n+                .filter(Objects::nonNull)\n                 .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n         final Bid updatedBid = bidType == BidType.video\n-                ? bid.toBuilder().adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice()))).build()\n-                : bid;\n+                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build() : bid;", "originalCommit": "a515ed172edce0b6afdf913f6a9820771402fa0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c00cbe80a393fc67a50ce5b07e693fa2595fadec", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\nindex 5810576c..e5cfe5dc 100644\n--- a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n\n@@ -191,17 +192,15 @@ public class GumgumBidder implements Bidder<BidRequest> {\n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n         final Bid updatedBid = bidType == BidType.video\n-                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build() : bid;\n+                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build()\n+                : bid;\n         return BidderBid.of(updatedBid, bidType, currency);\n     }\n \n     private static BidType getMediaType(String impId, List<Imp> requestImps) {\n         for (Imp imp : requestImps) {\n             if (imp.getId().equals(impId)) {\n-                if (imp.getBanner() != null) {\n-                    return BidType.banner;\n-                }\n-                return BidType.video;\n+                return imp.getBanner() != null ? BidType.banner : BidType.video;\n             }\n         }\n         return BidType.video;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5MDc4Mg==", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538390782", "bodyText": "replaceAll", "author": "DGarbar", "createdAt": "2020-12-08T13:49:49Z", "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -177,26 +180,34 @@ private static Site modifySite(Site site, String trackingId) {\n \n     private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n+                .filter(Objects::nonNull)\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n+                .filter(Objects::nonNull)\n                 .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n         final Bid updatedBid = bidType == BidType.video\n-                ? bid.toBuilder().adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice()))).build()\n-                : bid;\n+                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build() : bid;\n         return BidderBid.of(updatedBid, bidType, currency);\n     }\n \n     private static BidType getMediaType(String impId, List<Imp> requestImps) {\n         for (Imp imp : requestImps) {\n-            if (imp.getId().equals(impId) && imp.getBanner() != null) {\n-                return BidType.banner;\n+            if (imp.getId().equals(impId)) {\n+                if (imp.getBanner() != null) {\n+                    return BidType.banner;\n+                }\n+                return BidType.video;\n             }\n         }\n         return BidType.video;\n     }\n+\n+    private static String resolveAdm(String bidAdm, BigDecimal price) {\n+        return StringUtils.isNotBlank(bidAdm) ? bidAdm.replace(\"${AUCTION_PRICE}\", String.valueOf(price)) : bidAdm;", "originalCommit": "a515ed172edce0b6afdf913f6a9820771402fa0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQyMzUzNw==", "url": "https://github.com/prebid/prebid-server-java/pull/1059#discussion_r538423537", "bodyText": "replaceAll works with regex  when replace works with string but also replaces every occurrences", "author": "snahornyi", "createdAt": "2020-12-08T14:19:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5MDc4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c00cbe80a393fc67a50ce5b07e693fa2595fadec", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\nindex 5810576c..e5cfe5dc 100644\n--- a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n\n@@ -191,17 +192,15 @@ public class GumgumBidder implements Bidder<BidRequest> {\n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n         final Bid updatedBid = bidType == BidType.video\n-                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build() : bid;\n+                ? bid.toBuilder().adm(resolveAdm(bid.getAdm(), bid.getPrice())).build()\n+                : bid;\n         return BidderBid.of(updatedBid, bidType, currency);\n     }\n \n     private static BidType getMediaType(String impId, List<Imp> requestImps) {\n         for (Imp imp : requestImps) {\n             if (imp.getId().equals(impId)) {\n-                if (imp.getBanner() != null) {\n-                    return BidType.banner;\n-                }\n-                return BidType.video;\n+                return imp.getBanner() != null ? BidType.banner : BidType.video;\n             }\n         }\n         return BidType.video;\n"}}, {"oid": "c00cbe80a393fc67a50ce5b07e693fa2595fadec", "url": "https://github.com/prebid/prebid-server-java/commit/c00cbe80a393fc67a50ce5b07e693fa2595fadec", "message": "Fixes after review", "committedDate": "2020-12-08T14:21:05Z", "type": "commit"}]}