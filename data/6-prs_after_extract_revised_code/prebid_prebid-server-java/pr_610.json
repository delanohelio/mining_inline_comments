{"pr_number": 610, "pr_title": "Add TagId to Synacormedia Bidder", "pr_createdAt": "2020-02-06T15:37:48Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/610", "timeline": [{"oid": "a1bda4c063821127795af8cdeafab411a3167956", "url": "https://github.com/prebid/prebid-server-java/commit/a1bda4c063821127795af8cdeafab411a3167956", "message": "Add TagId to SynacormediaBidder and tests", "committedDate": "2020-02-06T15:35:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0OTQ0Ng==", "url": "https://github.com/prebid/prebid-server-java/pull/610#discussion_r376349446", "bodyText": "They have BadServerResponse for errors, but I prefer badInput.\nThe decision is up to @rpanchyk", "author": "DGarbar", "createdAt": "2020-02-07T11:42:35Z", "path": "src/main/java/org/prebid/server/bidder/synacormedia/SynacormediaBidder.java", "diffHunk": "@@ -53,7 +53,13 @@ public SynacormediaBidder(String endpointUrl) {\n         for (Imp imp : bidRequest.getImp()) {\n             try {\n                 final ExtImpSynacormedia extImpSynacormedia = parseExtImp(imp.getExt());\n-                validImps.add(imp);\n+                if (StringUtils.isBlank(extImpSynacormedia.getSeatId())\n+                        || StringUtils.isBlank(extImpSynacormedia.getTagId())) {\n+                    errors.add(BidderError.badInput(\"Invalid Impression\"));", "originalCommit": "a1bda4c063821127795af8cdeafab411a3167956", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5MDg3OQ==", "url": "https://github.com/prebid/prebid-server-java/pull/610#discussion_r376390879", "bodyText": "i'm fine with badInput.", "author": "rpanchyk", "createdAt": "2020-02-07T13:32:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0OTQ0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0OTU0Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/610#discussion_r376349543", "bodyText": "They have BadServerResponse for errors, but I prefer badInput.\nThe decision is up to @rpanchyk", "author": "DGarbar", "createdAt": "2020-02-07T11:42:54Z", "path": "src/main/java/org/prebid/server/bidder/synacormedia/SynacormediaBidder.java", "diffHunk": "@@ -67,8 +73,9 @@ public SynacormediaBidder(String endpointUrl) {\n             return Result.of(Collections.emptyList(), errors);\n         }\n \n-        if (firstExtImp == null || StringUtils.isBlank(firstExtImp.getSeatId())) {\n-            errors.add(BidderError.badInput(\"Impression missing seat id\"));\n+        if (firstExtImp == null || StringUtils.isBlank(firstExtImp.getSeatId())\n+                || StringUtils.isBlank(firstExtImp.getTagId())) {\n+            errors.add(BidderError.badInput(\"Invalid Impression\"));", "originalCommit": "a1bda4c063821127795af8cdeafab411a3167956", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1MDE3Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/610#discussion_r376350173", "bodyText": "Space", "author": "DGarbar", "createdAt": "2020-02-07T11:44:36Z", "path": "src/test/java/org/prebid/server/bidder/synacormedia/SynacormediaBidderTest.java", "diffHunk": "@@ -268,7 +284,7 @@ private static BidRequest givenBidRequest(\n \n     private static Imp givenImp(Function<Imp.ImpBuilder, Imp.ImpBuilder> impCustomizer) {\n         return impCustomizer.apply(Imp.builder()\n-                .ext(mapper.valueToTree(ExtPrebid.of(null, ExtImpSynacormedia.of(\"seatId\")))))\n+                .ext(mapper.valueToTree(ExtPrebid.of(null, ExtImpSynacormedia.of(\"seatId\",\"tagId\")))))", "originalCommit": "a1bda4c063821127795af8cdeafab411a3167956", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d28b10ecc02cb1d1f1b9d1791b95f2f95ea714d6", "chunk": "diff --git a/src/test/java/org/prebid/server/bidder/synacormedia/SynacormediaBidderTest.java b/src/test/java/org/prebid/server/bidder/synacormedia/SynacormediaBidderTest.java\nindex d8342cf0..5218e23a 100644\n--- a/src/test/java/org/prebid/server/bidder/synacormedia/SynacormediaBidderTest.java\n+++ b/src/test/java/org/prebid/server/bidder/synacormedia/SynacormediaBidderTest.java\n\n@@ -284,7 +283,7 @@ public class SynacormediaBidderTest extends VertxTest {\n \n     private static Imp givenImp(Function<Imp.ImpBuilder, Imp.ImpBuilder> impCustomizer) {\n         return impCustomizer.apply(Imp.builder()\n-                .ext(mapper.valueToTree(ExtPrebid.of(null, ExtImpSynacormedia.of(\"seatId\",\"tagId\")))))\n+                .ext(mapper.valueToTree(ExtPrebid.of(null, ExtImpSynacormedia.of(\"seatId\", \"tagId\")))))\n                 .build();\n     }\n \n"}}, {"oid": "d28b10ecc02cb1d1f1b9d1791b95f2f95ea714d6", "url": "https://github.com/prebid/prebid-server-java/commit/d28b10ecc02cb1d1f1b9d1791b95f2f95ea714d6", "message": "Format code in SynarcomediaBidderTest", "committedDate": "2020-02-07T14:09:16Z", "type": "commit"}]}