{"pr_number": 781, "pr_title": "Brightroll adapter - Adding bid floor config parameter", "pr_createdAt": "2020-07-02T00:55:10Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/781", "timeline": [{"oid": "be214a17ffcafc1416a932f2614b02ca8adc3491", "url": "https://github.com/prebid/prebid-server-java/commit/be214a17ffcafc1416a932f2614b02ca8adc3491", "message": " Adding global bid floor field as config", "committedDate": "2020-06-30T22:41:45Z", "type": "commit"}, {"oid": "2ea1d582d79cecc7d2798a17652d196854f15d33", "url": "https://github.com/prebid/prebid-server-java/commit/2ea1d582d79cecc7d2798a17652d196854f15d33", "message": "added bid floor config", "committedDate": "2020-07-02T00:45:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMTU5MQ==", "url": "https://github.com/prebid/prebid-server-java/pull/781#discussion_r449401591", "bodyText": "Not critical, but is it possible we don't need to update the imp?\nIn this case toBuilder() -> build() operations is redundant.", "author": "rpanchyk", "createdAt": "2020-07-03T06:36:47Z", "path": "src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java", "diffHunk": "@@ -170,6 +170,12 @@ private static boolean isImpValid(Imp imp, List<BidderError> errors) {\n      * Updates {@link Imp} {@link Banner} and/or {@link Video}.\n      */\n     private Imp updateImp(Imp imp, PublisherOverride publisherOverride) {\n+        final Imp.ImpBuilder impBuilder = imp.toBuilder();", "originalCommit": "2ea1d582d79cecc7d2798a17652d196854f15d33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMzc1MA==", "url": "https://github.com/prebid/prebid-server-java/pull/781#discussion_r450503750", "bodyText": "Imp has to be updated in atleast one of the scenarios. Publishers need almost all of those configuration as there is no exchange in between to configure those. So imp update is a required one.", "author": "smithaammassamveettil", "createdAt": "2020-07-06T22:04:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMTU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4MDkzNQ==", "url": "https://github.com/prebid/prebid-server-java/pull/781#discussion_r451380935", "bodyText": "Yeah, but i mean can it be the case when we don't need to create builder at all.\nFor example in prev. implementation we had 2 conditions:\n\nif (banner != null) {...}\nif (video != null && publisherOverride != null) {...}\nIf those conditions don't pass - we just return existing imp without any modifications.\n\nYou've added new condition if (publisherOverride != null && publisherOverride.getBidFloor() != null) {...} which may not  fire too. So, builder is not required in this case.", "author": "rpanchyk", "createdAt": "2020-07-08T08:42:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMTU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwMTU1OA==", "url": "https://github.com/prebid/prebid-server-java/pull/781#discussion_r451701558", "bodyText": "yes, I added just as a precaution. One or another case need to be executed atleast in this block as I mentioned above, publishers need those configuration since no exchange is present in between to configure those in the Prebid setup. BusinessInsider need all those configuration. May be some other publisher in future may pass bid floor, but need to go thru banner/video sections. So it is big chance that we need builder to be created all the time. Or I can remove the final declaration/initialization of ImpBuilder and create/initialize the Builder object in each if block if required(if Builder is not already created). Do you think is that better?", "author": "smithaammassamveettil", "createdAt": "2020-07-08T17:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMTU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU5MDc2NQ==", "url": "https://github.com/prebid/prebid-server-java/pull/781#discussion_r453590765", "bodyText": "Honestly, yes. If we can avoid creating builders, just let's do it.\nPlease, consider this approach just as an idea:\nprivate Imp updateImp(Imp imp, PublisherOverride publisherOverride) {\n    final BigDecimal bidFloor = publisherOverride != null && publisherOverride.getBidFloor() != null\n            ? publisherOverride.getBidFloor()\n            : null;\n    final List<Integer> impBattr = publisherOverride != null && publisherOverride.getImpBattr() != null\n            ? publisherOverride.getImpBattr()\n            : null;\n\n    final Banner banner = imp.getBanner();\n    if (banner != null) {\n        final boolean noSizes = banner.getW() == null && banner.getH() == null\n                && CollectionUtils.isNotEmpty(banner.getFormat());\n\n        if (bidFloor != null || impBattr != null || noSizes) {\n            final Imp.ImpBuilder impBuilder = imp.toBuilder();\n\n            if (bidFloor != null) {\n                impBuilder.bidfloor(bidFloor);\n            }\n            if (impBattr != null || noSizes) {\n                impBuilder.banner(updateBanner(banner, impBattr, noSizes));\n            }\n\n            return impBuilder.build();\n        }\n    }\n    final Video video = imp.getVideo();\n    if (video != null && (bidFloor != null || impBattr != null)) {\n        final Imp.ImpBuilder impBuilder = imp.toBuilder();\n\n        if (bidFloor != null) {\n            impBuilder.bidfloor(bidFloor);\n        }\n        if (impBattr != null) {\n            impBuilder.video(updateVideo(video, impBattr));\n        }\n\n        return impBuilder.build();\n    }\n\n    return imp;\n}\n\nprivate static Banner updateBanner(Banner banner, List<Integer> impBattr, boolean noSizes) {\n    final Banner.BannerBuilder bannerBuilder = banner.toBuilder();\n\n    if (impBattr != null) {\n        bannerBuilder.battr(impBattr);\n    }\n    if (noSizes) {\n        // update banner with size from first format\n        final Format firstFormat = banner.getFormat().get(0);\n        bannerBuilder\n                .w(firstFormat.getW())\n                .h(firstFormat.getH());\n    }\n\n    return bannerBuilder.build();\n}\n\nprivate static Video updateVideo(Video video, List<Integer> impBattr) {\n    return video.toBuilder()\n            .battr(impBattr)\n            .build();\n}\n\nHere we'll create imp.builder on demand if one of several conditions fired.", "author": "rpanchyk", "createdAt": "2020-07-13T11:43:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMTU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxNDMzOA==", "url": "https://github.com/prebid/prebid-server-java/pull/781#discussion_r454714338", "bodyText": "Ok, sure. Will do. thanks.", "author": "smithaammassamveettil", "createdAt": "2020-07-15T00:07:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMTU5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "199d006cf4416f0c004bd421f7399dd546752b08", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java b/src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java\nindex 6a81c49a..5ca4642f 100644\n--- a/src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java\n\n@@ -170,35 +171,64 @@ public class BrightrollBidder implements Bidder<BidRequest> {\n      * Updates {@link Imp} {@link Banner} and/or {@link Video}.\n      */\n     private Imp updateImp(Imp imp, PublisherOverride publisherOverride) {\n-        final Imp.ImpBuilder impBuilder = imp.toBuilder();\n-\n-        if (publisherOverride != null && publisherOverride.getBidFloor() != null) {\n-            impBuilder.bidfloor(publisherOverride.getBidFloor());\n-        }\n+        final BigDecimal bidFloor = publisherOverride != null && publisherOverride.getBidFloor() != null\n+                ? publisherOverride.getBidFloor()\n+                : null;\n+        final List<Integer> impBattr = publisherOverride != null && publisherOverride.getImpBattr() != null\n+                ? publisherOverride.getImpBattr()\n+                : null;\n \n         final Banner banner = imp.getBanner();\n         if (banner != null) {\n-            final Banner.BannerBuilder bannerBuilder = banner.toBuilder();\n-            if (banner.getW() == null && banner.getH() == null && CollectionUtils.isNotEmpty(banner.getFormat())) {\n-                // update banner with size from first format\n-                final Format firstFormat = banner.getFormat().get(0);\n-                bannerBuilder\n-                        .w(firstFormat.getW())\n-                        .h(firstFormat.getH());\n-            }\n-            if (publisherOverride != null && publisherOverride.getImpBattr() != null) {\n-                bannerBuilder.battr(publisherOverride.getImpBattr());\n+            final boolean noSizes = banner.getW() == null && banner.getH() == null\n+                    && CollectionUtils.isNotEmpty(banner.getFormat());\n+\n+            if (bidFloor != null || impBattr != null || noSizes) {\n+                final Imp.ImpBuilder impBuilder = imp.toBuilder();\n+\n+                if (bidFloor != null) {\n+                    impBuilder.bidfloor(bidFloor);\n+                }\n+                if (impBattr != null || noSizes) {\n+                    impBuilder.banner(updateBanner(banner, impBattr, noSizes));\n+                }\n+\n+                return impBuilder.build();\n             }\n-            impBuilder.banner(bannerBuilder.build());\n         }\n \n         final Video video = imp.getVideo();\n-        if (video != null && publisherOverride != null && publisherOverride.getImpBattr() != null) {\n-            impBuilder.video(video.toBuilder()\n-                    .battr(publisherOverride.getImpBattr())\n-                    .build());\n+        if (video != null && (bidFloor != null && impBattr != null)) {\n+            final Imp.ImpBuilder impBuilder = imp.toBuilder();\n+\n+            if (bidFloor != null) {\n+                impBuilder.bidfloor(bidFloor);\n+            }\n+            if (impBattr != null) {\n+                impBuilder.video(video.toBuilder()\n+                        .battr(impBattr)\n+                        .build());\n+            }\n+            return impBuilder.build();\n         }\n-        return impBuilder.build();\n+        return imp;\n+    }\n+\n+    private static Banner updateBanner(Banner banner, List<Integer> impBattr, boolean noSizes) {\n+        final Banner.BannerBuilder bannerBuilder = banner.toBuilder();\n+\n+        if (impBattr != null) {\n+            bannerBuilder.battr(impBattr);\n+        }\n+        if (noSizes) {\n+            // update banner with size from first format\n+            final Format firstFormat = banner.getFormat().get(0);\n+            bannerBuilder\n+                    .w(firstFormat.getW())\n+                    .h(firstFormat.getH());\n+        }\n+\n+        return bannerBuilder.build();\n     }\n \n     /**\n"}}, {"oid": "199d006cf4416f0c004bd421f7399dd546752b08", "url": "https://github.com/prebid/prebid-server-java/commit/199d006cf4416f0c004bd421f7399dd546752b08", "message": "addressed review comments", "committedDate": "2020-07-14T23:55:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk1NDM2NA==", "url": "https://github.com/prebid/prebid-server-java/pull/781#discussion_r454954364", "bodyText": "Just to confirm. Do you expect here both bidFloor and impBattr should not be null for video?\nIf so, below checking for null is not required.", "author": "rpanchyk", "createdAt": "2020-07-15T10:33:25Z", "path": "src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java", "diffHunk": "@@ -170,34 +171,66 @@ private static boolean isImpValid(Imp imp, List<BidderError> errors) {\n      * Updates {@link Imp} {@link Banner} and/or {@link Video}.\n      */\n     private Imp updateImp(Imp imp, PublisherOverride publisherOverride) {\n+        final BigDecimal bidFloor = publisherOverride != null && publisherOverride.getBidFloor() != null\n+                ? publisherOverride.getBidFloor()\n+                : null;\n+        final List<Integer> impBattr = publisherOverride != null && publisherOverride.getImpBattr() != null\n+                ? publisherOverride.getImpBattr()\n+                : null;\n+\n         final Banner banner = imp.getBanner();\n         if (banner != null) {\n-            final Banner.BannerBuilder bannerBuilder = banner.toBuilder();\n-            if (banner.getW() == null && banner.getH() == null && CollectionUtils.isNotEmpty(banner.getFormat())) {\n-                // update banner with size from first format\n-                final Format firstFormat = banner.getFormat().get(0);\n-                bannerBuilder\n-                        .w(firstFormat.getW())\n-                        .h(firstFormat.getH());\n-            }\n-            if (publisherOverride != null) {\n-                bannerBuilder.battr(publisherOverride.getImpBattr());\n+            final boolean noSizes = banner.getW() == null && banner.getH() == null\n+                    && CollectionUtils.isNotEmpty(banner.getFormat());\n+\n+            if (bidFloor != null || impBattr != null || noSizes) {\n+                final Imp.ImpBuilder impBuilder = imp.toBuilder();\n+\n+                if (bidFloor != null) {\n+                    impBuilder.bidfloor(bidFloor);\n+                }\n+                if (impBattr != null || noSizes) {\n+                    impBuilder.banner(updateBanner(banner, impBattr, noSizes));\n+                }\n+\n+                return impBuilder.build();\n             }\n-            return imp.toBuilder()\n-                    .banner(bannerBuilder.build())\n-                    .build();\n         }\n+\n         final Video video = imp.getVideo();\n-        if (video != null && publisherOverride != null) {\n-            return imp.toBuilder()\n-                    .video(video.toBuilder()\n-                            .battr(publisherOverride.getImpBattr())\n-                            .build())\n-                    .build();\n+        if (video != null && (bidFloor != null && impBattr != null)) {", "originalCommit": "199d006cf4416f0c004bd421f7399dd546752b08", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5OTU5Ng==", "url": "https://github.com/prebid/prebid-server-java/pull/781#discussion_r455999596", "bodyText": "good catch..fixed. thanks.", "author": "smithaammassamveettil", "createdAt": "2020-07-16T18:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk1NDM2NA=="}], "type": "inlineReview", "revised_code": {"commit": "8d37aa39ec561e46514a1bfa7ebabe0628872632", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java b/src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java\nindex 5ca4642f..7114ab39 100644\n--- a/src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/brightroll/BrightrollBidder.java\n\n@@ -198,7 +198,7 @@ public class BrightrollBidder implements Bidder<BidRequest> {\n         }\n \n         final Video video = imp.getVideo();\n-        if (video != null && (bidFloor != null && impBattr != null)) {\n+        if (video != null && (bidFloor != null || impBattr != null)) {\n             final Imp.ImpBuilder impBuilder = imp.toBuilder();\n \n             if (bidFloor != null) {\n"}}, {"oid": "8d37aa39ec561e46514a1bfa7ebabe0628872632", "url": "https://github.com/prebid/prebid-server-java/commit/8d37aa39ec561e46514a1bfa7ebabe0628872632", "message": "fixed condition check", "committedDate": "2020-07-16T18:46:12Z", "type": "commit"}]}