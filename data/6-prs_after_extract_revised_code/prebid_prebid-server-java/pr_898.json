{"pr_number": 898, "pr_title": "Add video support for GumGumBidder", "pr_createdAt": "2020-09-04T17:21:33Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/898", "timeline": [{"oid": "6ec69a2a33b579279f9c044ace7578ca938ce7af", "url": "https://github.com/prebid/prebid-server-java/commit/6ec69a2a33b579279f9c044ace7578ca938ce7af", "message": "Add video support", "committedDate": "2020-09-04T17:18:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc4NzQ5Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/898#discussion_r492787493", "bodyText": "Seems we need builder for video.\nUsually, creating of builder is expensive operation for performance, pls avoid if possible.", "author": "rpanchyk", "createdAt": "2020-09-22T14:37:07Z", "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -138,26 +154,47 @@ private static Site modifySite(Site site, String trackingId) {\n     public Result<List<BidderBid>> makeBids(HttpCall<BidRequest> httpCall, BidRequest bidRequest) {\n         try {\n             final BidResponse bidResponse = mapper.decodeValue(httpCall.getResponse().getBody(), BidResponse.class);\n-            return Result.of(extractBids(bidResponse), Collections.emptyList());\n+            return Result.of(extractBids(bidResponse, bidRequest), Collections.emptyList());\n         } catch (DecodeException | PreBidException e) {\n             return Result.emptyWithError(BidderError.badServerResponse(e.getMessage()));\n         }\n     }\n \n-    private static List<BidderBid> extractBids(BidResponse bidResponse) {\n+    private static List<BidderBid> extractBids(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse == null || bidResponse.getSeatbid() == null\n                 ? Collections.emptyList()\n-                : bidsFromResponse(bidResponse);\n+                : bidsFromResponse(bidResponse, bidRequest);\n     }\n \n-    private static List<BidderBid> bidsFromResponse(BidResponse bidResponse) {\n+    private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n-                .map(bid -> BidderBid.of(bid, BidType.banner, DEFAULT_BID_CURRENCY))\n+                .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n+    private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n+        final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n+        final Bid.BidBuilder bidBuilder = bid.toBuilder();", "originalCommit": "6ec69a2a33b579279f9c044ace7578ca938ce7af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\nindex e21184dd..2fdd6f49 100644\n--- a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n\n@@ -176,12 +175,10 @@ public class GumgumBidder implements Bidder<BidRequest> {\n \n     private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n         final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n-        final Bid.BidBuilder bidBuilder = bid.toBuilder();\n-        if (bidType == BidType.video) {\n-            bidBuilder\n-                    .adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice())));\n-        }\n-        return BidderBid.of(bidBuilder.build(), bidType, StringUtils.stripToNull(currency));\n+        final Bid updatedBid = bidType == BidType.video\n+                ? bid.toBuilder().adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice()))).build()\n+                : bid;\n+        return BidderBid.of(updatedBid, bidType, currency);\n     }\n \n     private static BidType getMediaType(String impId, List<Imp> requestImps) {\n"}}, {"oid": "af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3", "url": "https://github.com/prebid/prebid-server-java/commit/af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3", "message": "Remove builder for bid", "committedDate": "2020-09-22T16:31:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkxNzMzMg==", "url": "https://github.com/prebid/prebid-server-java/pull/898#discussion_r492917332", "bodyText": "What is happen if the field will be null?\nSeems we need to fix the case for all mentioned fields here.", "author": "rpanchyk", "createdAt": "2020-09-22T17:38:15Z", "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -127,6 +135,13 @@ private static Imp modifyImp(Imp imp) {\n         return imp;\n     }\n \n+    private void validateVideoParams(Video video) {\n+        if (video.getW() == 0 || video.getH() == 0 || video.getMinduration() == 0 || video.getMaxduration() == 0", "originalCommit": "af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18fdab628e59205f1eeb98975f8fd7525c3c4f6a", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\nindex 2fdd6f49..9d0107a6 100644\n--- a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n\n@@ -136,8 +136,15 @@ public class GumgumBidder implements Bidder<BidRequest> {\n     }\n \n     private void validateVideoParams(Video video) {\n-        if (video.getW() == 0 || video.getH() == 0 || video.getMinduration() == 0 || video.getMaxduration() == 0\n-                || video.getPlacement() == 0 || video.getLinearity() == 0) {\n+        final Integer w = video.getW();\n+        final Integer h = video.getH();\n+        final Integer minduration = video.getMinduration();\n+        final Integer maxduration = video.getMaxduration();\n+        final Integer placement = video.getPlacement();\n+        final Integer linearity = video.getLinearity();\n+        if (w == null || w == 0 || h == null || h == 0 || minduration == null || minduration == 0\n+                || maxduration == null || maxduration == 0 || placement == null || placement == 0\n+                || linearity == null || linearity == 0) {\n             throw new PreBidException(\"Invalid or missing video field(s)\");\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkxNzgyMA==", "url": "https://github.com/prebid/prebid-server-java/pull/898#discussion_r492917820", "bodyText": "Pls combine this condition with upper one.", "author": "rpanchyk", "createdAt": "2020-09-22T17:39:05Z", "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -138,26 +153,45 @@ private static Site modifySite(Site site, String trackingId) {\n     public Result<List<BidderBid>> makeBids(HttpCall<BidRequest> httpCall, BidRequest bidRequest) {\n         try {\n             final BidResponse bidResponse = mapper.decodeValue(httpCall.getResponse().getBody(), BidResponse.class);\n-            return Result.of(extractBids(bidResponse), Collections.emptyList());\n+            return Result.of(extractBids(bidResponse, bidRequest), Collections.emptyList());\n         } catch (DecodeException | PreBidException e) {\n             return Result.emptyWithError(BidderError.badServerResponse(e.getMessage()));\n         }\n     }\n \n-    private static List<BidderBid> extractBids(BidResponse bidResponse) {\n+    private static List<BidderBid> extractBids(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse == null || bidResponse.getSeatbid() == null\n                 ? Collections.emptyList()\n-                : bidsFromResponse(bidResponse);\n+                : bidsFromResponse(bidResponse, bidRequest);\n     }\n \n-    private static List<BidderBid> bidsFromResponse(BidResponse bidResponse) {\n+    private static List<BidderBid> bidsFromResponse(BidResponse bidResponse, BidRequest bidRequest) {\n         return bidResponse.getSeatbid().stream()\n                 .map(SeatBid::getBid)\n                 .flatMap(Collection::stream)\n-                .map(bid -> BidderBid.of(bid, BidType.banner, DEFAULT_BID_CURRENCY))\n+                .map(bid -> toBidderBid(bid, bidRequest, bidResponse.getCur()))\n                 .collect(Collectors.toList());\n     }\n \n+    private static BidderBid toBidderBid(Bid bid, BidRequest bidRequest, String currency) {\n+        final BidType bidType = getMediaType(bid.getImpid(), bidRequest.getImp());\n+        final Bid updatedBid = bidType == BidType.video\n+                ? bid.toBuilder().adm(bid.getAdm().replace(\"${AUCTION_PRICE}\", String.valueOf(bid.getPrice()))).build()\n+                : bid;\n+        return BidderBid.of(updatedBid, bidType, currency);\n+    }\n+\n+    private static BidType getMediaType(String impId, List<Imp> requestImps) {\n+        for (Imp imp : requestImps) {\n+            if (imp.getId().equals(impId)) {\n+                if (imp.getBanner() != null) {", "originalCommit": "af619d3d4b4a1f4dc2b698b06cf38329b13f3bc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18fdab628e59205f1eeb98975f8fd7525c3c4f6a", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\nindex 2fdd6f49..9d0107a6 100644\n--- a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n\n@@ -183,10 +190,8 @@ public class GumgumBidder implements Bidder<BidRequest> {\n \n     private static BidType getMediaType(String impId, List<Imp> requestImps) {\n         for (Imp imp : requestImps) {\n-            if (imp.getId().equals(impId)) {\n-                if (imp.getBanner() != null) {\n-                    return BidType.banner;\n-                }\n+            if (imp.getId().equals(impId) && imp.getBanner() != null) {\n+                return BidType.banner;\n             }\n         }\n         return BidType.video;\n"}}, {"oid": "18fdab628e59205f1eeb98975f8fd7525c3c4f6a", "url": "https://github.com/prebid/prebid-server-java/commit/18fdab628e59205f1eeb98975f8fd7525c3c4f6a", "message": "Fix video fields validation", "committedDate": "2020-09-22T19:37:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQxMDA3OQ==", "url": "https://github.com/prebid/prebid-server-java/pull/898#discussion_r493410079", "bodyText": "It is to cryptic to see. May be it will be better to add universal method like positiveOrNull(..) for each param.\nThen in condition below we can compare with NULL only.", "author": "rpanchyk", "createdAt": "2020-09-23T10:13:52Z", "path": "src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java", "diffHunk": "@@ -127,6 +135,20 @@ private static Imp modifyImp(Imp imp) {\n         return imp;\n     }\n \n+    private void validateVideoParams(Video video) {\n+        final Integer w = video.getW();", "originalCommit": "18fdab628e59205f1eeb98975f8fd7525c3c4f6a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2728086b6eaffbab4b62e4ee136f2a2c84309679", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\nindex 9d0107a6..458f1545 100644\n--- a/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/gumgum/GumgumBidder.java\n\n@@ -136,19 +136,20 @@ public class GumgumBidder implements Bidder<BidRequest> {\n     }\n \n     private void validateVideoParams(Video video) {\n-        final Integer w = video.getW();\n-        final Integer h = video.getH();\n-        final Integer minduration = video.getMinduration();\n-        final Integer maxduration = video.getMaxduration();\n-        final Integer placement = video.getPlacement();\n-        final Integer linearity = video.getLinearity();\n-        if (w == null || w == 0 || h == null || h == 0 || minduration == null || minduration == 0\n-                || maxduration == null || maxduration == 0 || placement == null || placement == 0\n-                || linearity == null || linearity == 0) {\n+        if (positiveOrNull(video.getW()) == null || positiveOrNull(video.getH()) == null\n+                || positiveOrNull(video.getMinduration()) == null || positiveOrNull(video.getMaxduration()) == null\n+                || positiveOrNull(video.getPlacement()) == null || positiveOrNull(video.getLinearity()) == null) {\n             throw new PreBidException(\"Invalid or missing video field(s)\");\n         }\n     }\n \n+    public static Integer positiveOrNull(Integer parameter) {\n+        if (parameter == null) {\n+            return null;\n+        }\n+        return parameter == 0 ? null : parameter;\n+    }\n+\n     private static Site modifySite(Site site, String trackingId) {\n         if (site != null) {\n             return site.toBuilder().id(trackingId).build();\n"}}, {"oid": "2728086b6eaffbab4b62e4ee136f2a2c84309679", "url": "https://github.com/prebid/prebid-server-java/commit/2728086b6eaffbab4b62e4ee136f2a2c84309679", "message": "Refactor of validateVideoParameters method", "committedDate": "2020-09-23T11:56:54Z", "type": "commit"}, {"oid": "9d5da3f2a771a651e0e4fcac658dc2d2650bd383", "url": "https://github.com/prebid/prebid-server-java/commit/9d5da3f2a771a651e0e4fcac658dc2d2650bd383", "message": "Clean code", "committedDate": "2020-09-23T14:32:09Z", "type": "commit"}]}