{"pr_number": 863, "pr_title": "Update imp extension with zoneId for KubientBidder", "pr_createdAt": "2020-08-13T12:08:45Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/863", "timeline": [{"oid": "9fd9429148af899f8c216926941e5f88cd6d591d", "url": "https://github.com/prebid/prebid-server-java/commit/9fd9429148af899f8c216926941e5f88cd6d591d", "message": "Update imp extention with zoneId", "committedDate": "2020-08-13T12:05:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NTUwMQ==", "url": "https://github.com/prebid/prebid-server-java/pull/863#discussion_r469945501", "bodyText": "Just use special Result method for this occurrence", "author": "DGarbar", "createdAt": "2020-08-13T13:20:44Z", "path": "src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java", "diffHunk": "@@ -46,6 +55,21 @@ public KubientBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n+        final List<BidderError> errors = new ArrayList<>();\n+\n+        if (CollectionUtils.isEmpty(request.getImp())) {\n+            errors.add(BidderError.badInput(\"No valid impressions in the bid request\"));\n+            return Result.of(Collections.emptyList(), errors);", "originalCommit": "9fd9429148af899f8c216926941e5f88cd6d591d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76def6165e60fbeefc8adc42caaa2fa6b24f1f33", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java b/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java\nindex 4882cbf61..56ba8d561 100644\n--- a/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java\n\n@@ -58,15 +58,14 @@ public class KubientBidder implements Bidder<BidRequest> {\n         final List<BidderError> errors = new ArrayList<>();\n \n         if (CollectionUtils.isEmpty(request.getImp())) {\n-            errors.add(BidderError.badInput(\"No valid impressions in the bid request\"));\n-            return Result.of(Collections.emptyList(), errors);\n+            return Result.emptyWithError(BidderError.badInput(\"No valid impressions in the bid request\"));\n         }\n \n         for (Imp imp : request.getImp()) {\n             try {\n-                parseAndValidateImpExt(imp);\n+                validateImpExt(imp);\n             } catch (PreBidException e) {\n-                errors.add(BidderError.badInput(e.getMessage()));\n+                return Result.emptyWithError(BidderError.badInput(e.getMessage()));\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0ODQxMg==", "url": "https://github.com/prebid/prebid-server-java/pull/863#discussion_r469948412", "bodyText": "just validateImpExt", "author": "DGarbar", "createdAt": "2020-08-13T13:25:12Z", "path": "src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java", "diffHunk": "@@ -46,6 +55,21 @@ public KubientBidder(String endpointUrl, JacksonMapper mapper) {\n \n     @Override\n     public Result<List<HttpRequest<BidRequest>>> makeHttpRequests(BidRequest request) {\n+        final List<BidderError> errors = new ArrayList<>();\n+\n+        if (CollectionUtils.isEmpty(request.getImp())) {\n+            errors.add(BidderError.badInput(\"No valid impressions in the bid request\"));\n+            return Result.of(Collections.emptyList(), errors);\n+        }\n+\n+        for (Imp imp : request.getImp()) {\n+            try {\n+                parseAndValidateImpExt(imp);", "originalCommit": "9fd9429148af899f8c216926941e5f88cd6d591d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76def6165e60fbeefc8adc42caaa2fa6b24f1f33", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java b/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java\nindex 4882cbf61..56ba8d561 100644\n--- a/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java\n\n@@ -58,15 +58,14 @@ public class KubientBidder implements Bidder<BidRequest> {\n         final List<BidderError> errors = new ArrayList<>();\n \n         if (CollectionUtils.isEmpty(request.getImp())) {\n-            errors.add(BidderError.badInput(\"No valid impressions in the bid request\"));\n-            return Result.of(Collections.emptyList(), errors);\n+            return Result.emptyWithError(BidderError.badInput(\"No valid impressions in the bid request\"));\n         }\n \n         for (Imp imp : request.getImp()) {\n             try {\n-                parseAndValidateImpExt(imp);\n+                validateImpExt(imp);\n             } catch (PreBidException e) {\n-                errors.add(BidderError.badInput(e.getMessage()));\n+                return Result.emptyWithError(BidderError.badInput(e.getMessage()));\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0ODkwMA==", "url": "https://github.com/prebid/prebid-server-java/pull/863#discussion_r469948900", "bodyText": "They will return empty result with errors if there any", "author": "DGarbar", "createdAt": "2020-08-13T13:25:57Z", "path": "src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java", "diffHunk": "@@ -62,7 +86,21 @@ public KubientBidder(String endpointUrl, JacksonMapper mapper) {\n                         .headers(HttpUtil.headers())\n                         .payload(request)\n                         .build()),\n-                Collections.emptyList());\n+                errors);", "originalCommit": "9fd9429148af899f8c216926941e5f88cd6d591d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76def6165e60fbeefc8adc42caaa2fa6b24f1f33", "chunk": "diff --git a/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java b/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java\nindex 4882cbf61..56ba8d561 100644\n--- a/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java\n+++ b/src/main/java/org/prebid/server/bidder/kubient/KubientBidder.java\n\n@@ -86,10 +85,10 @@ public class KubientBidder implements Bidder<BidRequest> {\n                         .headers(HttpUtil.headers())\n                         .payload(request)\n                         .build()),\n-                errors);\n+                Collections.emptyList());\n     }\n \n-    private void parseAndValidateImpExt(Imp imp) {\n+    private void validateImpExt(Imp imp) {\n         final ExtImpKubient extImpKubient;\n         try {\n             extImpKubient = mapper.mapper().convertValue(imp.getExt(), KUBIENT_EXT_TYPE_REFERENCE)\n"}}, {"oid": "76def6165e60fbeefc8adc42caaa2fa6b24f1f33", "url": "https://github.com/prebid/prebid-server-java/commit/76def6165e60fbeefc8adc42caaa2fa6b24f1f33", "message": "Fix caching of errors", "committedDate": "2020-08-13T14:30:01Z", "type": "commit"}, {"oid": "4ee214157e46d5a7cfeb69da73b585c07e9d45ae", "url": "https://github.com/prebid/prebid-server-java/commit/4ee214157e46d5a7cfeb69da73b585c07e9d45ae", "message": "Merge branch 'master' into kubient-add-extimp-parameters", "committedDate": "2020-09-18T09:15:14Z", "type": "commit"}, {"oid": "58b12c054addd508dff83ddc3520602f6d36c4a2", "url": "https://github.com/prebid/prebid-server-java/commit/58b12c054addd508dff83ddc3520602f6d36c4a2", "message": "Fixes", "committedDate": "2020-09-18T09:23:17Z", "type": "commit"}]}