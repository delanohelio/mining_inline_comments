{"pr_number": 2660, "pr_title": "Fix #2651: SharedInformers should ignore resync on zero resyncPeriod", "pr_createdAt": "2020-12-11T17:26:22Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2660", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0OTI5NQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2660#discussion_r542149295", "bodyText": "Is this ever not a Executors.newSingleThreadScheduledExecutor() ?", "author": "manusa", "createdAt": "2020-12-14T06:51:29Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java", "diffHunk": "@@ -48,18 +47,18 @@\n   private final AtomicBoolean isWatcherStarted;\n   private final AtomicReference<Watch> watch;\n \n-  public Reflector(Class<T> apiTypeClass, ListerWatcher<T, L> listerWatcher, Store store, OperationContext operationContext, long resyncPeriodMillis) {\n+  public Reflector(Class<T> apiTypeClass, ListerWatcher<T, L> listerWatcher, Store store, OperationContext operationContext, long resyncPeriodMillis, ScheduledExecutorService resyncExecutor) {\n     this.apiTypeClass = apiTypeClass;\n     this.listerWatcher = listerWatcher;\n     this.store = store;\n     this.operationContext = operationContext;\n     this.resyncPeriodMillis = resyncPeriodMillis;\n-    lastSyncResourceVersion = new AtomicReference<>();\n-    resyncExecutor = Executors.newSingleThreadScheduledExecutor();\n-    watcher = new ReflectorWatcher<>(store, lastSyncResourceVersion, this::startWatcher, this::reListAndSync);\n-    isActive = new AtomicBoolean(true);\n-    isWatcherStarted = new AtomicBoolean(false);\n-    watch = new AtomicReference<>(null);\n+    this.lastSyncResourceVersion = new AtomicReference<>();\n+    this.resyncExecutor = resyncExecutor;", "originalCommit": "6f3d9ec7da126fb5b2209607fc4974c2f0ad2421", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0OTkyOQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2660#discussion_r542149929", "bodyText": "Or maybe you forgot to pass the variable in Controller.java in lines 171 & 173?", "author": "manusa", "createdAt": "2020-12-14T06:53:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0OTI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MDk2OQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2660#discussion_r542150969", "bodyText": "I exposed this so that I could mock this variable for testing. Do you want me to revert to old behavior?", "author": "rohanKanojia", "createdAt": "2020-12-14T06:55:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0OTI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1Mzg5OA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2660#discussion_r542153898", "bodyText": "Ok, then maybe provide an extra constructor with the default value instead so we can simplify initialization in Controller method.", "author": "manusa", "createdAt": "2020-12-14T07:03:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0OTI5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "adad437b6629b7eb84c86a3cd37d1640935bd699", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java\nindex 2460182f2..f4187252f 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java\n\n@@ -47,6 +48,10 @@ public class Reflector<T extends HasMetadata, L extends KubernetesResourceList<T\n   private final AtomicBoolean isWatcherStarted;\n   private final AtomicReference<Watch> watch;\n \n+  public Reflector(Class<T> apiTypeClass, ListerWatcher<T, L> listerWatcher, Store store, OperationContext operationContext, long resyncPeriodMillis) {\n+    this(apiTypeClass, listerWatcher, store, operationContext, resyncPeriodMillis, Executors.newSingleThreadScheduledExecutor());\n+  }\n+\n   public Reflector(Class<T> apiTypeClass, ListerWatcher<T, L> listerWatcher, Store store, OperationContext operationContext, long resyncPeriodMillis, ScheduledExecutorService resyncExecutor) {\n     this.apiTypeClass = apiTypeClass;\n     this.listerWatcher = listerWatcher;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MzE0Nw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2660#discussion_r542153147", "bodyText": "Given the fact that resync period is expected to be positive, maybe we should add a check+IllegalArgumentException here so that users won't remain clueless in case for some reason this class was instantiated directly (not through Controller.java)", "author": "manusa", "createdAt": "2020-12-14T07:01:19Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java", "diffHunk": "@@ -48,18 +47,18 @@\n   private final AtomicBoolean isWatcherStarted;\n   private final AtomicReference<Watch> watch;\n \n-  public Reflector(Class<T> apiTypeClass, ListerWatcher<T, L> listerWatcher, Store store, OperationContext operationContext, long resyncPeriodMillis) {\n+  public Reflector(Class<T> apiTypeClass, ListerWatcher<T, L> listerWatcher, Store store, OperationContext operationContext, long resyncPeriodMillis, ScheduledExecutorService resyncExecutor) {\n     this.apiTypeClass = apiTypeClass;\n     this.listerWatcher = listerWatcher;\n     this.store = store;\n     this.operationContext = operationContext;\n     this.resyncPeriodMillis = resyncPeriodMillis;", "originalCommit": "6f3d9ec7da126fb5b2209607fc4974c2f0ad2421", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2NTc1Mw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2660#discussion_r542265753", "bodyText": "ohk, right now we were using a Default resync period of 5 seconds upon invalid resync period. But throwing IllegalArgumentException sounds better to me. Let me update", "author": "rohanKanojia", "createdAt": "2020-12-14T10:15:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MzE0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "adad437b6629b7eb84c86a3cd37d1640935bd699", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java\nindex 2460182f2..f4187252f 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/informers/cache/Reflector.java\n\n@@ -47,6 +48,10 @@ public class Reflector<T extends HasMetadata, L extends KubernetesResourceList<T\n   private final AtomicBoolean isWatcherStarted;\n   private final AtomicReference<Watch> watch;\n \n+  public Reflector(Class<T> apiTypeClass, ListerWatcher<T, L> listerWatcher, Store store, OperationContext operationContext, long resyncPeriodMillis) {\n+    this(apiTypeClass, listerWatcher, store, operationContext, resyncPeriodMillis, Executors.newSingleThreadScheduledExecutor());\n+  }\n+\n   public Reflector(Class<T> apiTypeClass, ListerWatcher<T, L> listerWatcher, Store store, OperationContext operationContext, long resyncPeriodMillis, ScheduledExecutorService resyncExecutor) {\n     this.apiTypeClass = apiTypeClass;\n     this.listerWatcher = listerWatcher;\n"}}, {"oid": "95b93c3ad38284d44767a7f4b23e61597a052771", "url": "https://github.com/fabric8io/kubernetes-client/commit/95b93c3ad38284d44767a7f4b23e61597a052771", "message": "Fix #2651: SharedInformers should ignore resync on zero resyncPeriod\n\nRefactor Reflector to ignore resync if resyncPeriod is set to zero", "committedDate": "2020-12-14T10:16:08Z", "type": "commit"}, {"oid": "adad437b6629b7eb84c86a3cd37d1640935bd699", "url": "https://github.com/fabric8io/kubernetes-client/commit/adad437b6629b7eb84c86a3cd37d1640935bd699", "message": "Throw IllegalArgumentException on negative resync period instead", "committedDate": "2020-12-14T10:16:09Z", "type": "commit"}, {"oid": "adad437b6629b7eb84c86a3cd37d1640935bd699", "url": "https://github.com/fabric8io/kubernetes-client/commit/adad437b6629b7eb84c86a3cd37d1640935bd699", "message": "Throw IllegalArgumentException on negative resync period instead", "committedDate": "2020-12-14T10:16:09Z", "type": "forcePushed"}]}