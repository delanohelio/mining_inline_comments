{"pr_number": 1985, "pr_title": "Fix: authenticator uses id-token from ~/.kube/config", "pr_createdAt": "2020-02-04T08:09:23Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/1985", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYzOTg4Mw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/1985#discussion_r374639883", "bodyText": "I'm not really sure if this will introduce any regression as we are completely ditching ACCES_TOKEN which was added in #636 > #650\nI would probably do as the issue suggests (\"...Probably this code needs to be adapted to use either access-token or id-token, depending on what is available..\"): so try to use ID_TOKEN or try to fallback to ACCESS_TOKEN", "author": "manusa", "createdAt": "2020-02-04T12:24:41Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "diffHunk": "@@ -537,8 +537,9 @@ private static boolean loadFromKubeconfig(Config config, String context, String\n           config.setUsername(currentAuthInfo.getUsername());\n           config.setPassword(currentAuthInfo.getPassword());\n \n-          if (Utils.isNullOrEmpty(config.getOauthToken()) && currentAuthInfo.getAuthProvider() != null && !Utils.isNullOrEmpty(currentAuthInfo.getAuthProvider().getConfig().get(ACCESS_TOKEN))) {\n-            config.setOauthToken(currentAuthInfo.getAuthProvider().getConfig().get(ACCESS_TOKEN));\n+          if (Utils.isNullOrEmpty(config.getOauthToken()) && currentAuthInfo.getAuthProvider() != null && !Utils.isNullOrEmpty(currentAuthInfo.getAuthProvider().getConfig().get(", "originalCommit": "a65eb089e23454df31d08a2061c2c0de8aec36b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY0Njk2NQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/1985#discussion_r374646965", "bodyText": "@manusa good point... reading the kubectl source code I thought it cannot use access-token directly, but in fact it's used on gcloud.\nI will refactor the code to support both cases.", "author": "matthyx", "createdAt": "2020-02-04T12:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYzOTg4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "9a544ba01a83ba65ebaa229f8bb7543150b8c842", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java\nindex ba71c91d3..df48e78aa 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java\n\n@@ -537,9 +538,14 @@ public class Config {\n           config.setUsername(currentAuthInfo.getUsername());\n           config.setPassword(currentAuthInfo.getPassword());\n \n-          if (Utils.isNullOrEmpty(config.getOauthToken()) && currentAuthInfo.getAuthProvider() != null && !Utils.isNullOrEmpty(currentAuthInfo.getAuthProvider().getConfig().get(\n-            ID_TOKEN))) {\n-            config.setOauthToken(currentAuthInfo.getAuthProvider().getConfig().get(ID_TOKEN));\n+          if (Utils.isNullOrEmpty(config.getOauthToken()) && currentAuthInfo.getAuthProvider() != null )\n+            if (!Utils.isNullOrEmpty(currentAuthInfo.getAuthProvider().getConfig().get(ACCESS_TOKEN))) {\n+              // GKE token\n+              config.setOauthToken(currentAuthInfo.getAuthProvider().getConfig().get(ACCESS_TOKEN));\n+            } else if (!Utils.isNullOrEmpty(currentAuthInfo.getAuthProvider().getConfig().get(ID_TOKEN))) {\n+              // OpenID Connect token\n+              config.setOauthToken(currentAuthInfo.getAuthProvider().getConfig().get(ID_TOKEN));\n+            }\n           } else if (config.getOauthTokenProvider() == null) {  // https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins\n             ExecConfig exec = currentAuthInfo.getExec();\n             if (exec != null) {\n"}}, {"oid": "9a544ba01a83ba65ebaa229f8bb7543150b8c842", "url": "https://github.com/fabric8io/kubernetes-client/commit/9a544ba01a83ba65ebaa229f8bb7543150b8c842", "message": "Adding support for id-token from ~/.kube/config", "committedDate": "2020-02-04T13:13:47Z", "type": "forcePushed"}, {"oid": "258c352bb5dc52276f085a824b78ff9a54e4cac1", "url": "https://github.com/fabric8io/kubernetes-client/commit/258c352bb5dc52276f085a824b78ff9a54e4cac1", "message": "Added support for OpenID Connect token in kubeconfig", "committedDate": "2020-02-04T13:18:49Z", "type": "forcePushed"}, {"oid": "d0076f343478cfa24e2924d0dc552ff211d279d6", "url": "https://github.com/fabric8io/kubernetes-client/commit/d0076f343478cfa24e2924d0dc552ff211d279d6", "message": "Added support for OpenID Connect token in kubeconfig", "committedDate": "2020-02-04T13:39:51Z", "type": "commit"}, {"oid": "d0076f343478cfa24e2924d0dc552ff211d279d6", "url": "https://github.com/fabric8io/kubernetes-client/commit/d0076f343478cfa24e2924d0dc552ff211d279d6", "message": "Added support for OpenID Connect token in kubeconfig", "committedDate": "2020-02-04T13:39:51Z", "type": "forcePushed"}]}