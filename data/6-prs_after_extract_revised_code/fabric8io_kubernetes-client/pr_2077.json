{"pr_number": 2077, "pr_title": "Fix #2019: customResource.get() Returns 404 if name is specified", "pr_createdAt": "2020-03-20T15:05:42Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2077", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwNzU3NQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2077#discussion_r396307575", "bodyText": "Is there any reason for concatenating the string > \"stable.example.com/v1\"\nMaybe you actually meant: KubernetesDeserializer.registerCustomKind(\"stable.example.com\",\"/v1\", \"CronTab\", CronTab.class); ?", "author": "manusa", "createdAt": "2020-03-23T09:20:08Z", "path": "kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceCrudTest.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.client.mock;\n+\n+import io.fabric8.kubernetes.api.model.ObjectMetaBuilder;\n+import io.fabric8.kubernetes.api.model.apiextensions.CustomResourceDefinition;\n+import io.fabric8.kubernetes.client.KubernetesClient;\n+import io.fabric8.kubernetes.client.dsl.MixedOperation;\n+import io.fabric8.kubernetes.client.dsl.Resource;\n+import io.fabric8.kubernetes.client.mock.crd.CronTabSpec;\n+import io.fabric8.kubernetes.client.mock.crd.DoneableCronTab;\n+import io.fabric8.kubernetes.client.mock.crd.CronTab;\n+import io.fabric8.kubernetes.client.mock.crd.CronTabList;\n+import io.fabric8.kubernetes.client.server.mock.KubernetesServer;\n+import io.fabric8.kubernetes.internal.KubernetesDeserializer;\n+import org.junit.Rule;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.migrationsupport.rules.EnableRuleMigrationSupport;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+@EnableRuleMigrationSupport\n+public class CustomResourceCrudTest {\n+  @Rule\n+  public KubernetesServer kubernetesServer = new KubernetesServer(true,true);\n+\n+  private MixedOperation<CronTab, CronTabList, DoneableCronTab, Resource<CronTab, DoneableCronTab>> podSetClient;\n+\n+  @Test\n+  public void testCrud() {\n+    CronTab cronTab1 = createCronTab(\"my-new-cron-object\", \"* * * * */5\", 3, \"my-awesome-cron-image\");\n+    CronTab cronTab2 = createCronTab(\"my-second-cron-object\", \"* * * * */4\", 2, \"my-second-cron-image\");\n+    CronTab cronTab3 = createCronTab(\"my-third-cron-object\", \"* * * * */3\", 1, \"my-third-cron-image\");\n+    KubernetesClient client = kubernetesServer.getClient();\n+\n+    KubernetesDeserializer.registerCustomKind(\"stable.example.com\" + \"/v1\", \"CronTab\", CronTab.class);", "originalCommit": "e466851d2c5ed34e019c310630f9818e824c4e3f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59ecacce1a81bd2db5a54470e55befab9b5fd42e", "chunk": "diff --git a/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceCrudTest.java b/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceCrudTest.java\nindex 43bbfc886..1324bde53 100644\n--- a/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceCrudTest.java\n+++ b/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CustomResourceCrudTest.java\n\n@@ -47,7 +47,7 @@ public class CustomResourceCrudTest {\n     CronTab cronTab3 = createCronTab(\"my-third-cron-object\", \"* * * * */3\", 1, \"my-third-cron-image\");\n     KubernetesClient client = kubernetesServer.getClient();\n \n-    KubernetesDeserializer.registerCustomKind(\"stable.example.com\" + \"/v1\", \"CronTab\", CronTab.class);\n+    KubernetesDeserializer.registerCustomKind(\"stable.example.com/v1\", \"CronTab\", CronTab.class);\n     CustomResourceDefinition cronTabCrd = client.customResourceDefinitions().load(getClass().getResourceAsStream(\"/crontab-crd.yml\")).get();\n     client.customResourceDefinitions().create(cronTabCrd);\n \n"}}, {"oid": "59ecacce1a81bd2db5a54470e55befab9b5fd42e", "url": "https://github.com/fabric8io/kubernetes-client/commit/59ecacce1a81bd2db5a54470e55befab9b5fd42e", "message": "Fix #2019: customResource.get() Returns 404 if name is specified\n\nAdded CustomResourceCrudTest for demonstrating usage of CRUD mode\nfor Custom Resources.", "committedDate": "2020-03-23T10:13:38Z", "type": "commit"}, {"oid": "59ecacce1a81bd2db5a54470e55befab9b5fd42e", "url": "https://github.com/fabric8io/kubernetes-client/commit/59ecacce1a81bd2db5a54470e55befab9b5fd42e", "message": "Fix #2019: customResource.get() Returns 404 if name is specified\n\nAdded CustomResourceCrudTest for demonstrating usage of CRUD mode\nfor Custom Resources.", "committedDate": "2020-03-23T10:13:38Z", "type": "forcePushed"}]}