{"pr_number": 2036, "pr_title": "Fix #1820: Override Createable.create(T) to avoid generic array creation", "pr_createdAt": "2020-02-28T13:49:55Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2036", "timeline": [{"oid": "394f78a027dc822559470c72ea5806d6adf8eed4", "url": "https://github.com/fabric8io/kubernetes-client/commit/394f78a027dc822559470c72ea5806d6adf8eed4", "message": "Fix #1820: Override Createable.create(T) to avoid generic array creation", "committedDate": "2020-03-02T13:45:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNjM3MQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386816371", "bodyText": "You can reuse the #create(KubernetesList... items) method so logic will be the same in both scenarios:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Override\n          \n          \n            \n              public KubernetesList create(KubernetesList list) {\n          \n          \n            \n                if (list.getItems().isEmpty()) {\n          \n          \n            \n                  list = get();\n          \n          \n            \n                }\n          \n          \n            \n                return new KubernetesListBuilder().withItems(createItemsInKubernetesList(list)).build();\n          \n          \n            \n              }\n          \n          \n            \n              @SuppressWarnings(\"squid:S3878\")\n          \n          \n            \n              @Override\n          \n          \n            \n              public KubernetesList create(KubernetesList list) {\n          \n          \n            \n                return create(new KubernetesList[]{list});\n          \n          \n            \n              }", "author": "manusa", "createdAt": "2020-03-03T06:11:14Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/KubernetesListOperationsImpl.java", "diffHunk": "@@ -79,17 +80,22 @@ public KubernetesList create(KubernetesList... items) {\n       items = new KubernetesList[]{get()};\n     }\n     for (KubernetesList i : items) {\n-      for (HasMetadata r : i.getItems()) {\n-        HasMetadata created = create(r);\n-        createdItems.add(created);\n-      }\n+      createdItems.addAll(createItemsInKubernetesList(i));\n     }\n \n     KubernetesList createdList = new KubernetesList();\n     createdList.setItems(createdItems);\n     return createdList;\n   }\n \n+  @Override\n+  public KubernetesList create(KubernetesList list) {\n+    if (list.getItems().isEmpty()) {\n+      list = get();\n+    }\n+    return new KubernetesListBuilder().withItems(createItemsInKubernetesList(list)).build();\n+  }", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/KubernetesListOperationsImpl.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/KubernetesListOperationsImpl.java\nindex 772383c16..b082ff4b9 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/KubernetesListOperationsImpl.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/KubernetesListOperationsImpl.java\n\n@@ -90,10 +88,7 @@ public class KubernetesListOperationsImpl\n \n   @Override\n   public KubernetesList create(KubernetesList list) {\n-    if (list.getItems().isEmpty()) {\n-      list = get();\n-    }\n-    return new KubernetesListBuilder().withItems(createItemsInKubernetesList(list)).build();\n+    return create(new KubernetesList[]{list});\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzAzNg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817036", "bodyText": "Although right now it doesn't really matter, reusing the method with the array signature will prevent bugs in the future in case one of both methods gets changed:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Override\n          \n          \n            \n              public SubjectAccessReview create(SubjectAccessReview resource) {\n          \n          \n            \n                return new CreatableSubjectAccessReview().create(resource);\n          \n          \n            \n              }\n          \n          \n            \n              @SuppressWarnings(\"squid:S3878\")\n          \n          \n            \n              @Override\n          \n          \n            \n              public SubjectAccessReview create(SubjectAccessReview resource) {\n          \n          \n            \n                return create(new SubjectAccessReview[]{resource});\n          \n          \n            \n              }", "author": "manusa", "createdAt": "2020-03-03T06:14:07Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java", "diffHunk": "@@ -68,6 +68,11 @@ public SubjectAccessReview create(SubjectAccessReview... resources) {\n     return new CreatableSubjectAccessReview().create(resources);\n   }\n \n+  @Override\n+  public SubjectAccessReview create(SubjectAccessReview resource) {\n+    return new CreatableSubjectAccessReview().create(resource);\n+  }\n+", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\nindex dcdfb1f90..1a0a76e43 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n\n@@ -70,7 +70,7 @@ public class SubjectAccessReviewDSLImpl extends OperationSupport implements Subj\n \n   @Override\n   public SubjectAccessReview create(SubjectAccessReview resource) {\n-    return new CreatableSubjectAccessReview().create(resource);\n+    return create(new SubjectAccessReview[]{resource});\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzIzMw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817233", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Override\n          \n          \n            \n                public LocalSubjectAccessReview create(LocalSubjectAccessReview resource) {\n          \n          \n            \n                  try {\n          \n          \n            \n                    if (resource != null) {\n          \n          \n            \n                      setNamespace(resource);\n          \n          \n            \n                      return handleCreate(resource, LocalSubjectAccessReview.class);\n          \n          \n            \n                    } else {\n          \n          \n            \n                      throw new IllegalArgumentException(\"Nothing to create.\");\n          \n          \n            \n                    }\n          \n          \n            \n                  } catch (InterruptedException | ExecutionException | IOException e) {\n          \n          \n            \n                    throw KubernetesClientException.launderThrowable(e);\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n          \n            \n              @SuppressWarnings(\"squid:S3878\")\n          \n          \n            \n              @Override\n          \n          \n            \n              public LocalSubjectAccessReview create(LocalSubjectAccessReview resource) {\n          \n          \n            \n                return create(new LocalSubjectAccessReview[]{resource});\n          \n          \n            \n              }", "author": "manusa", "createdAt": "2020-03-03T06:15:03Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java", "diffHunk": "@@ -128,6 +133,20 @@ public LocalSubjectAccessReview create(LocalSubjectAccessReview... resources) {\n       }\n     }\n \n+    @Override\n+    public LocalSubjectAccessReview create(LocalSubjectAccessReview resource) {\n+      try {\n+        if (resource != null) {\n+          setNamespace(resource);\n+          return handleCreate(resource, LocalSubjectAccessReview.class);\n+        } else {\n+          throw new IllegalArgumentException(\"Nothing to create.\");\n+        }\n+      } catch (InterruptedException | ExecutionException | IOException e) {\n+        throw KubernetesClientException.launderThrowable(e);\n+      }\n+    }", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\nindex dcdfb1f90..1a0a76e43 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n\n@@ -135,16 +135,7 @@ public class SubjectAccessReviewDSLImpl extends OperationSupport implements Subj\n \n     @Override\n     public LocalSubjectAccessReview create(LocalSubjectAccessReview resource) {\n-      try {\n-        if (resource != null) {\n-          setNamespace(resource);\n-          return handleCreate(resource, LocalSubjectAccessReview.class);\n-        } else {\n-          throw new IllegalArgumentException(\"Nothing to create.\");\n-        }\n-      } catch (InterruptedException | ExecutionException | IOException e) {\n-        throw KubernetesClientException.launderThrowable(e);\n-      }\n+      return create(new LocalSubjectAccessReview[]{resource});\n     }\n \n     private void setNamespace(LocalSubjectAccessReview resource) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzMyNQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817325", "bodyText": "Same as previous comments", "author": "manusa", "createdAt": "2020-03-03T06:15:27Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java", "diffHunk": "@@ -172,6 +191,19 @@ public SubjectAccessReview create(SubjectAccessReview... resources) {\n       }\n     }\n \n+    @Override\n+    public SubjectAccessReview create(SubjectAccessReview resource) {\n+      try {\n+        if (resource != null) {\n+          return handleCreate(resource, SubjectAccessReview.class);\n+        } else {\n+          throw new IllegalArgumentException(\"Nothing to create.\");\n+        }\n+      } catch (InterruptedException | ExecutionException | IOException e) {\n+        throw KubernetesClientException.launderThrowable(e);\n+      }\n+    }\n+", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\nindex dcdfb1f90..1a0a76e43 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n\n@@ -193,15 +184,7 @@ public class SubjectAccessReviewDSLImpl extends OperationSupport implements Subj\n \n     @Override\n     public SubjectAccessReview create(SubjectAccessReview resource) {\n-      try {\n-        if (resource != null) {\n-          return handleCreate(resource, SubjectAccessReview.class);\n-        } else {\n-          throw new IllegalArgumentException(\"Nothing to create.\");\n-        }\n-      } catch (InterruptedException | ExecutionException | IOException e) {\n-        throw KubernetesClientException.launderThrowable(e);\n-      }\n+      return create(new SubjectAccessReview[]{resource});\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzM2MA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817360", "bodyText": "Same as previous comments", "author": "manusa", "createdAt": "2020-03-03T06:15:38Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java", "diffHunk": "@@ -195,6 +227,19 @@ public SelfSubjectAccessReview create(SelfSubjectAccessReview... resources) {\n       }\n     }\n \n+    @Override\n+    public SelfSubjectAccessReview create(SelfSubjectAccessReview resource) {\n+      try {\n+        if (resource != null) {\n+          return handleCreate(resource, SelfSubjectAccessReview.class);\n+        } else {\n+          throw new IllegalArgumentException(\"Nothing to create.\");\n+        }\n+      } catch (InterruptedException | ExecutionException | IOException e) {\n+        throw KubernetesClientException.launderThrowable(e);\n+      }\n+    }", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\nindex dcdfb1f90..1a0a76e43 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n\n@@ -229,15 +212,7 @@ public class SubjectAccessReviewDSLImpl extends OperationSupport implements Subj\n \n     @Override\n     public SelfSubjectAccessReview create(SelfSubjectAccessReview resource) {\n-      try {\n-        if (resource != null) {\n-          return handleCreate(resource, SelfSubjectAccessReview.class);\n-        } else {\n-          throw new IllegalArgumentException(\"Nothing to create.\");\n-        }\n-      } catch (InterruptedException | ExecutionException | IOException e) {\n-        throw KubernetesClientException.launderThrowable(e);\n-      }\n+      return create(new SelfSubjectAccessReview[]{resource});\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzQxOQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817419", "bodyText": "Same as previous comments", "author": "manusa", "createdAt": "2020-03-03T06:15:49Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java", "diffHunk": "@@ -218,6 +263,20 @@ public SelfSubjectRulesReview create(SelfSubjectRulesReview... resources) {\n       }\n     }\n \n+    @Override\n+    public SelfSubjectRulesReview create(SelfSubjectRulesReview resource) {\n+      try {\n+        if (resource != null) {\n+          return handleCreate(resource, SelfSubjectRulesReview.class);\n+        } else {\n+          throw new IllegalArgumentException(\"Nothing to create.\");\n+        }\n+      } catch (InterruptedException | ExecutionException | IOException e) {\n+        throw KubernetesClientException.launderThrowable(e);\n+      }\n+\n+    }", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\nindex dcdfb1f90..1a0a76e43 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/SubjectAccessReviewDSLImpl.java\n\n@@ -265,16 +240,7 @@ public class SubjectAccessReviewDSLImpl extends OperationSupport implements Subj\n \n     @Override\n     public SelfSubjectRulesReview create(SelfSubjectRulesReview resource) {\n-      try {\n-        if (resource != null) {\n-          return handleCreate(resource, SelfSubjectRulesReview.class);\n-        } else {\n-          throw new IllegalArgumentException(\"Nothing to create.\");\n-        }\n-      } catch (InterruptedException | ExecutionException | IOException e) {\n-        throw KubernetesClientException.launderThrowable(e);\n-      }\n-\n+      return create(new SelfSubjectRulesReview[]{resource});\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzQ5Mg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817492", "bodyText": "Same as previous comments", "author": "manusa", "createdAt": "2020-03-03T06:16:07Z", "path": "openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java", "diffHunk": "@@ -90,6 +90,19 @@ public ProjectRequest create(ProjectRequest... resources) {\n     }\n   }\n \n+  @Override\n+  public ProjectRequest create(ProjectRequest resource) {\n+    try {\n+      if (resource != null) {\n+        return handleCreate(resource, ProjectRequest.class);\n+      } else {\n+        throw new IllegalArgumentException(\"Nothing to create.\");\n+      }\n+    } catch (InterruptedException | ExecutionException | IOException e) {\n+      throw KubernetesClientException.launderThrowable(e);\n+    }\n+  }", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java\nindex e3a797cd4..580c48c18 100644\n--- a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java\n+++ b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java\n\n@@ -92,15 +92,7 @@ public class ProjectRequestsOperationImpl extends OperationSupport implements Pr\n \n   @Override\n   public ProjectRequest create(ProjectRequest resource) {\n-    try {\n-      if (resource != null) {\n-        return handleCreate(resource, ProjectRequest.class);\n-      } else {\n-        throw new IllegalArgumentException(\"Nothing to create.\");\n-      }\n-    } catch (InterruptedException | ExecutionException | IOException e) {\n-      throw KubernetesClientException.launderThrowable(e);\n-    }\n+    return create(new ProjectRequest[]{resource});\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzU0NQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817545", "bodyText": "Same as previous comments", "author": "manusa", "createdAt": "2020-03-03T06:16:21Z", "path": "openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java", "diffHunk": "@@ -61,6 +61,11 @@ public SubjectAccessReviewResponse create(SubjectAccessReview... item) {\n     return new CreateableSubjectAccessReviewImpl(client).create(item);\n   }\n \n+  @Override\n+  public SubjectAccessReviewResponse create(SubjectAccessReview item) {\n+    return new CreateableSubjectAccessReviewImpl(client).create(item);\n+  }", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\nindex 766dbd198..838d30e11 100644\n--- a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\n+++ b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\n\n@@ -63,7 +63,7 @@ public class SubjectAccessReviewOperationImpl extends OperationSupport implement\n \n   @Override\n   public SubjectAccessReviewResponse create(SubjectAccessReview item) {\n-    return new CreateableSubjectAccessReviewImpl(client).create(item);\n+    return create(new SubjectAccessReview[] {item});\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzYwNA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817604", "bodyText": "Same as previous comments", "author": "manusa", "createdAt": "2020-03-03T06:16:31Z", "path": "openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java", "diffHunk": "@@ -130,6 +135,19 @@ public SubjectAccessReviewResponse create(LocalSubjectAccessReview... resources)\n       }\n     }\n \n+    @Override\n+    public SubjectAccessReviewResponse create(LocalSubjectAccessReview resource) {\n+      try {\n+        if (resource != null) {\n+          return handleCreate(resource, SubjectAccessReviewResponse.class);\n+        } else {\n+          throw new IllegalArgumentException(\"Nothing to create.\");\n+        }\n+      } catch (InterruptedException | ExecutionException | IOException e) {\n+        throw KubernetesClientException.launderThrowable(e);\n+      }\n+    }", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\nindex 766dbd198..838d30e11 100644\n--- a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\n+++ b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\n\n@@ -137,15 +137,7 @@ public class SubjectAccessReviewOperationImpl extends OperationSupport implement\n \n     @Override\n     public SubjectAccessReviewResponse create(LocalSubjectAccessReview resource) {\n-      try {\n-        if (resource != null) {\n-          return handleCreate(resource, SubjectAccessReviewResponse.class);\n-        } else {\n-          throw new IllegalArgumentException(\"Nothing to create.\");\n-        }\n-      } catch (InterruptedException | ExecutionException | IOException e) {\n-        throw KubernetesClientException.launderThrowable(e);\n-      }\n+      return create(new LocalSubjectAccessReview[]{resource});\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzY1MQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817651", "bodyText": "Same as previous comments", "author": "manusa", "createdAt": "2020-03-03T06:16:39Z", "path": "openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java", "diffHunk": "@@ -191,6 +209,19 @@ public SubjectAccessReviewResponse create(SubjectAccessReview... resources) {\n       }\n     }\n \n+    @Override\n+    public SubjectAccessReviewResponse create(SubjectAccessReview resource) {\n+      try {\n+        if (resource != null) {\n+          return handleCreate(resource, SubjectAccessReviewResponse.class);\n+        } else {\n+          throw new IllegalArgumentException(\"Nothing to create.\");\n+        }\n+      } catch (InterruptedException | ExecutionException | IOException e) {\n+        throw KubernetesClientException.launderThrowable(e);\n+      }\n+    }", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\nindex 766dbd198..838d30e11 100644\n--- a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\n+++ b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\n\n@@ -211,15 +203,7 @@ public class SubjectAccessReviewOperationImpl extends OperationSupport implement\n \n     @Override\n     public SubjectAccessReviewResponse create(SubjectAccessReview resource) {\n-      try {\n-        if (resource != null) {\n-          return handleCreate(resource, SubjectAccessReviewResponse.class);\n-        } else {\n-          throw new IllegalArgumentException(\"Nothing to create.\");\n-        }\n-      } catch (InterruptedException | ExecutionException | IOException e) {\n-        throw KubernetesClientException.launderThrowable(e);\n-      }\n+      return create(new SubjectAccessReview[]{resource});\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzY4NA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2036#discussion_r386817684", "bodyText": "Same as previous comments", "author": "manusa", "createdAt": "2020-03-03T06:16:46Z", "path": "openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java", "diffHunk": "@@ -231,6 +262,19 @@ public SubjectAccessReviewResponse create(SelfSubjectAccessReview... resources)\n       }\n     }\n \n+    @Override\n+    public SubjectAccessReviewResponse create(SelfSubjectAccessReview resource) {\n+      try {\n+        if (resource != null) {\n+          return handleCreate(resource, SubjectAccessReviewResponse.class);\n+        } else {\n+          throw new IllegalArgumentException(\"Nothing to create.\");\n+        }\n+      } catch (InterruptedException | ExecutionException | IOException e) {\n+        throw KubernetesClientException.launderThrowable(e);\n+      }\n+    }", "originalCommit": "394f78a027dc822559470c72ea5806d6adf8eed4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "chunk": "diff --git a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\nindex 766dbd198..838d30e11 100644\n--- a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\n+++ b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/SubjectAccessReviewOperationImpl.java\n\n@@ -264,15 +248,7 @@ public class SubjectAccessReviewOperationImpl extends OperationSupport implement\n \n     @Override\n     public SubjectAccessReviewResponse create(SelfSubjectAccessReview resource) {\n-      try {\n-        if (resource != null) {\n-          return handleCreate(resource, SubjectAccessReviewResponse.class);\n-        } else {\n-          throw new IllegalArgumentException(\"Nothing to create.\");\n-        }\n-      } catch (InterruptedException | ExecutionException | IOException e) {\n-        throw KubernetesClientException.launderThrowable(e);\n-      }\n+      return create(new SelfSubjectAccessReview[]{resource});\n     }\n \n     @Override\n"}}, {"oid": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "url": "https://github.com/fabric8io/kubernetes-client/commit/df7a3536a7573f4214e47c5f8f1974941baa71ac", "message": "Fix #1820: Override Createable.create(T) to avoid generic array creation", "committedDate": "2020-03-04T07:05:30Z", "type": "commit"}, {"oid": "df7a3536a7573f4214e47c5f8f1974941baa71ac", "url": "https://github.com/fabric8io/kubernetes-client/commit/df7a3536a7573f4214e47c5f8f1974941baa71ac", "message": "Fix #1820: Override Createable.create(T) to avoid generic array creation", "committedDate": "2020-03-04T07:05:30Z", "type": "forcePushed"}]}