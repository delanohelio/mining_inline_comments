{"pr_number": 2538, "pr_title": "Fix isReady call for DeploymentConfigs", "pr_createdAt": "2020-10-09T22:13:52Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2538", "timeline": [{"oid": "c5f930c2128d5654da6782e631d6f75907280ded", "url": "https://github.com/fabric8io/kubernetes-client/commit/c5f930c2128d5654da6782e631d6f75907280ded", "message": "Fix isReady call for DeploymentConfigs - Closes #2537\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-10-09T22:02:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTIwOA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2538#discussion_r503109208", "bodyText": "Just a minor nitpick. Shall we create a separate test for testing this instead? WDYT?\n@Test\nvoid testIsReady() {\n  // Given\n  DeploymentConfig deploymentConfig = getDeploymentConfig().withNewStatus()\n    .addNewCondition()\n    .withType(\"Available\")\n    .endCondition()\n    .withReplicas(1).withAvailableReplicas(1)\n    .endStatus().build();\n  server.expect().get().withPath(\"/apis/apps.openshift.io/v1/namespaces/ns1/deploymentconfigs/dc1\")\n    .andReturn(HttpURLConnection.HTTP_OK, deploymentConfig)\n    .always();\n  OpenShiftClient client = server.getOpenshiftClient();\n\n  // When\n  boolean result =  client.deploymentConfigs().inNamespace(\"ns1\").withName(\"dc1\").isReady();\n\n  // Then\n  assertTrue(result);\n}", "author": "rohanKanojia", "createdAt": "2020-10-12T08:03:19Z", "path": "kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/DeploymentConfigTest.java", "diffHunk": "@@ -323,6 +323,7 @@ void testWaitUntilReady() throws InterruptedException {\n     assertNotNull(deploymentConfig);\n     assertEquals(1, deploymentConfig.getStatus().getAvailableReplicas().intValue());\n     assertTrue(deploymentConfig.getStatus().getConditions().stream().anyMatch(c -> c.getType().equals(\"Available\")));\n+    assertTrue(client.deploymentConfigs().inNamespace(\"ns1\").withName(\"dc1\").isReady());", "originalCommit": "c5f930c2128d5654da6782e631d6f75907280ded", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExMDM0MA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2538#discussion_r503110340", "bodyText": "Sure, I can add it", "author": "scholzj", "createdAt": "2020-10-12T08:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTIwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE1MjYyNw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2538#discussion_r503152627", "bodyText": "Done.", "author": "scholzj", "createdAt": "2020-10-12T09:13:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTIwOA=="}], "type": "inlineReview", "revised_code": {"commit": "bf67c85270cb94af75641d99ee0d87b307ac14ec", "chunk": "diff --git a/kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/DeploymentConfigTest.java b/kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/DeploymentConfigTest.java\nindex 8c51eb0a7..baf94d561 100644\n--- a/kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/DeploymentConfigTest.java\n+++ b/kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/DeploymentConfigTest.java\n\n@@ -323,7 +323,27 @@ class DeploymentConfigTest {\n     assertNotNull(deploymentConfig);\n     assertEquals(1, deploymentConfig.getStatus().getAvailableReplicas().intValue());\n     assertTrue(deploymentConfig.getStatus().getConditions().stream().anyMatch(c -> c.getType().equals(\"Available\")));\n-    assertTrue(client.deploymentConfigs().inNamespace(\"ns1\").withName(\"dc1\").isReady());\n+  }\n+\n+  @Test\n+  void testIsReady() {\n+    // Given\n+    DeploymentConfig deploymentConfig = getDeploymentConfig().withNewStatus()\n+      .addNewCondition()\n+      .withType(\"Available\")\n+      .endCondition()\n+      .withReplicas(1).withAvailableReplicas(1)\n+      .endStatus().build();\n+    server.expect().get().withPath(\"/apis/apps.openshift.io/v1/namespaces/ns1/deploymentconfigs/dc1\")\n+      .andReturn(HttpURLConnection.HTTP_OK, deploymentConfig)\n+      .always();\n+    OpenShiftClient client = server.getOpenshiftClient();\n+\n+    // When\n+    boolean result =  client.deploymentConfigs().inNamespace(\"ns1\").withName(\"dc1\").isReady();\n+\n+    // Then\n+    assertTrue(result);\n   }\n \n   private DeploymentConfigBuilder getDeploymentConfig() {\n"}}, {"oid": "bf67c85270cb94af75641d99ee0d87b307ac14ec", "url": "https://github.com/fabric8io/kubernetes-client/commit/bf67c85270cb94af75641d99ee0d87b307ac14ec", "message": "Use separate test for isReady instead of adding it to waitUntilReady test\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-10-12T09:12:57Z", "type": "commit"}]}