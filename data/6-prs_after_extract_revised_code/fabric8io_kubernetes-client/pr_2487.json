{"pr_number": 2487, "pr_title": "Read process output stream before waiting the exit code of the process", "pr_createdAt": "2020-09-15T08:20:26Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2487", "timeline": [{"oid": "e8b439d1997b1cce1502a6c950063ba1bf36e886", "url": "https://github.com/fabric8io/kubernetes-client/commit/e8b439d1997b1cce1502a6c950063ba1bf36e886", "message": "Resolve Conflict", "committedDate": "2020-09-15T06:58:04Z", "type": "commit"}, {"oid": "32d4cef0a241c78f3b58c0ad3f4eccef2b33f19e", "url": "https://github.com/fabric8io/kubernetes-client/commit/32d4cef0a241c78f3b58c0ad3f4eccef2b33f19e", "message": "Read process output stream before waiting the exit code of the process", "committedDate": "2020-09-15T08:17:35Z", "type": "commit"}, {"oid": "e17125cbd279b7b84b86bf4c195bd0ab0d28d5ee", "url": "https://github.com/fabric8io/kubernetes-client/commit/e17125cbd279b7b84b86bf4c195bd0ab0d28d5ee", "message": "Merge branch 'master' into iss_2458", "committedDate": "2020-09-21T08:37:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r491903604", "bodyText": "In this excerpt you are no longer considering the error stream.\nWould something like this work with your solution?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  StringBuilder sb = new StringBuilder();\n          \n          \n            \n                  try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {\n          \n          \n            \n                    String line;\n          \n          \n            \n                    while ((line = in.readLine()) != null) {\n          \n          \n            \n                      sb.append(line);\n          \n          \n            \n                    }\n          \n          \n            \n                  }\n          \n          \n            \n                  if (p.waitFor() != 0) {\n          \n          \n            \n                    LOGGER.warn(IOHelpers.readFully(p.getErrorStream()));\n          \n          \n            \n                    LOGGER.warn(sb.toString());\n          \n          \n            \n                  }\n          \n          \n            \n                  ExecCredential ec = Serialization.unmarshal(p.getInputStream(), ExecCredential.class);\n          \n          \n            \n                  ExecCredential ec = Serialization.unmarshal(sb.toString(), ExecCredential.class);\n          \n          \n            \n                  final String errorOutput = IOHelpers.readFully(p.getErrorStream());\n          \n          \n            \n                  final String standardOutput = IOHelpers.readFully(p.getInputStream());\n          \n          \n            \n                  if (p.waitFor() != 0) {\n          \n          \n            \n                    LOGGER.warn(errorOutput);\n          \n          \n            \n                  }\n          \n          \n            \n                  ExecCredential ec = Serialization.unmarshal(standardOutput, ExecCredential.class);", "author": "manusa", "createdAt": "2020-09-21T09:28:41Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "diffHunk": "@@ -634,15 +634,23 @@ protected static ExecCredential getExecCredentialFromExecConfig(ExecConfig exec,\n       List<ExecEnvVar> env = exec.getEnv();\n       // TODO check behavior of tty & stdin\n       ProcessBuilder pb = new ProcessBuilder(getAuthenticatorCommandFromExecConfig(exec, configFile, Utils.getSystemPathVariable()));\n+      pb.redirectErrorStream(true);\n       if (env != null) {\n         Map<String, String> environment = pb.environment();\n         env.forEach(var -> environment.put(var.getName(), var.getValue()));\n       }\n       Process p = pb.start();\n+      StringBuilder sb = new StringBuilder();\n+      try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {\n+        String line;\n+        while ((line = in.readLine()) != null) {\n+          sb.append(line);\n+        }\n+      }\n       if (p.waitFor() != 0) {\n-        LOGGER.warn(IOHelpers.readFully(p.getErrorStream()));\n+        LOGGER.warn(sb.toString());\n       }\n-      ExecCredential ec = Serialization.unmarshal(p.getInputStream(), ExecCredential.class);\n+      ExecCredential ec = Serialization.unmarshal(sb.toString(), ExecCredential.class);", "originalCommit": "e17125cbd279b7b84b86bf4c195bd0ab0d28d5ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwMjAyMw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r492502023", "bodyText": "I am redirecting the error stream to outputstream with the following code\npb.redirectErrorStream(true);\nand if the command exit code is other than 0 then reading the outputstream as error log, so we don't need to read ErrorStream anymore", "author": "umutkocasarac", "createdAt": "2020-09-22T06:37:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwOTE4OA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493209188", "bodyText": "Oh, sorry I missed that line.\nHowever, I still don't see why we removed IOHelpers#readFully method in favor of the read stream boilerplate code.", "author": "manusa", "createdAt": "2020-09-23T05:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MzY0OQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493263649", "bodyText": "@manusa because we have redirected all output to outputstream of the process and that will be read with the following code.\ntry (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {\n        String line;\n        while ((line = in.readLine()) != null) {\n          sb.append(line);\n        }\n      }\n\nand in case of failure sb variable will have the error messages\nIn case of error sb variable will have the error output", "author": "umutkocasarac", "createdAt": "2020-09-23T07:39:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2NjUxNw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493266517", "bodyText": "Yes, but can't seem to understand why that stream can't be read using\nfinal String output = IOHelpers.readFully(p.getInputStream());\nwhich in essence encapsulates that expanded code (or should).", "author": "manusa", "createdAt": "2020-09-23T07:43:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3ODA3Mw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493278073", "bodyText": "I could read the output with that command however that helper method was not closing the anything. If you want I could change the\ntry (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) { String line; while ((line = in.readLine()) != null) { sb.append(line); } } \nwith final String output = IOHelpers.readFully(p.getInputStream());", "author": "umutkocasarac", "createdAt": "2020-09-23T07:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI5Njk1Nw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493296957", "bodyText": "This should take care of closing the stream and avoid extra boilerplate code:\nString output;\ntry (InputStream is = p.getInputStream()) {\n  output = IOHelpers.readFully(is);\n}\nMy main concern is that I wouldn't like to keep same read stream logic lying around several parts of the codebase. It would be hard then to maintain buffer sizes or other stream reading configurations.\nIOHelpers also requires a refactor. Besides, in case we want to delegate this to some library (e.g. commons-io), we'll only need to change this in a single place.", "author": "manusa", "createdAt": "2020-09-23T08:17:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQwMTY4OA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493401688", "bodyText": "It is updated with IOHelpers", "author": "umutkocasarac", "createdAt": "2020-09-23T10:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwOTc2Mg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493509762", "bodyText": "Great, thx!", "author": "manusa", "createdAt": "2020-09-23T12:06:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}], "type": "inlineReview", "revised_code": {"commit": "12839a5e934540061436a9551ced4655239a48f9", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java\nindex 15d091012..e6c07211b 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java\n\n@@ -640,17 +640,14 @@ public class Config {\n         env.forEach(var -> environment.put(var.getName(), var.getValue()));\n       }\n       Process p = pb.start();\n-      StringBuilder sb = new StringBuilder();\n-      try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {\n-        String line;\n-        while ((line = in.readLine()) != null) {\n-          sb.append(line);\n-        }\n+      String output;\n+      try (InputStream is = p.getInputStream()) {\n+        output = IOHelpers.readFully(is);\n       }\n       if (p.waitFor() != 0) {\n-        LOGGER.warn(sb.toString());\n+        LOGGER.warn(output);\n       }\n-      ExecCredential ec = Serialization.unmarshal(sb.toString(), ExecCredential.class);\n+      ExecCredential ec = Serialization.unmarshal(output, ExecCredential.class);\n       if (!apiVersion.equals(ec.apiVersion)) {\n         LOGGER.warn(\"Wrong apiVersion {} vs. {}\", ec.apiVersion, apiVersion);\n       } else {\n"}}, {"oid": "12839a5e934540061436a9551ced4655239a48f9", "url": "https://github.com/fabric8io/kubernetes-client/commit/12839a5e934540061436a9551ced4655239a48f9", "message": "IOHelper used for reading message", "committedDate": "2020-09-23T09:35:36Z", "type": "commit"}, {"oid": "6b20cb70eff324962d9e58b5d4c77f6642671894", "url": "https://github.com/fabric8io/kubernetes-client/commit/6b20cb70eff324962d9e58b5d4c77f6642671894", "message": "Merge branch 'iss_2458' of github.com-personal:umutkocasarac/kubernetes-client into iss_2458", "committedDate": "2020-09-23T09:41:56Z", "type": "commit"}]}