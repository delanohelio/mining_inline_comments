{"pr_number": 2186, "pr_title": "Fix #2165: list() should also be able to handle ListOptions", "pr_createdAt": "2020-05-04T06:07:49Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2186", "timeline": [{"oid": "5c67f0f3a82f52d2b9ae1f6a23af082d918397e6", "url": "https://github.com/fabric8io/kubernetes-client/commit/5c67f0f3a82f52d2b9ae1f6a23af082d918397e6", "message": "Fix #2165: list() should also be able to handle ListOptions", "committedDate": "2020-05-04T08:55:42Z", "type": "forcePushed"}, {"oid": "f084a8a54c10faa14a42d944f11dd6197297249d", "url": "https://github.com/fabric8io/kubernetes-client/commit/f084a8a54c10faa14a42d944f11dd6197297249d", "message": "Fix #2165: list() should also be able to handle ListOptions", "committedDate": "2020-05-04T17:40:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg3NTE2Mg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2186#discussion_r419875162", "bodyText": "Since the new method already covers the functionality of this one, it maybe good to add a @Deprecated annotation (plus some JavaDoc indicating to use the new method) so we can remove it in the next major release.", "author": "manusa", "createdAt": "2020-05-05T05:44:48Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/Listable.java", "diffHunk": "@@ -15,7 +15,10 @@\n  */\n package io.fabric8.kubernetes.client.dsl;\n \n+import io.fabric8.kubernetes.api.model.ListOptions;\n+\n public interface Listable<T> {\n   T list();\n   T list(Integer limitVal, String continueVal);", "originalCommit": "f084a8a54c10faa14a42d944f11dd6197297249d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58abca40521b780da2e0a29333fba25431ceb5fa", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/Listable.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/Listable.java\nindex 66e019405..ad6e6f609 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/Listable.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/Listable.java\n\n@@ -19,6 +19,24 @@ import io.fabric8.kubernetes.api.model.ListOptions;\n \n public interface Listable<T> {\n   T list();\n+\n+  /**\n+   * List resources from APIServer.\n+   * @deprecated : Please use {@link #list(ListOptions)} instead\n+   *\n+   *\n+   * @param limitVal number of resources to list\n+   * @param continueVal an offset to pick listing from\n+   * @return resource list\n+   */\n+  @Deprecated\n   T list(Integer limitVal, String continueVal);\n+\n+  /**\n+   * List resource from Kubernetes API server.\n+   *\n+   * @param listOptions ListOptions is the query options to a standard REST list call.\n+   * @return list of resource type\n+   */\n   T list(ListOptions listOptions);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4Mjk5Ng==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2186#discussion_r419882996", "bodyText": "This doesn't look good as getLimit will return null.\nWhy not use the same Url builder you used in BaseOperation", "author": "manusa", "createdAt": "2020-05-05T06:12:05Z", "path": "openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java", "diffHunk": "@@ -119,19 +121,23 @@ public Status list() {\n \n   @Override\n   public Status list(Integer limitVal, String continueVal) {\n+    return list(new ListOptionsBuilder().withLimit(Long.parseLong(limitVal.toString())).withContinue(continueVal).build());\n+  }\n+\n+  @Override\n+  public Status list(ListOptions listOptions) {\n     try {\n       URL requestUrl = getNamespacedUrl();\n-      if(limitVal != null) {\n-        requestUrl = new URL(URLUtils.join(requestUrl.toString(), \"?limit=\" + limitVal.toString()));\n-      } else if(continueVal != null) {\n-        requestUrl = new URL(URLUtils.join(requestUrl.toString(), \"?limit=\" + limitVal.toString() + \"&continue=\" + continueVal));\n+      if(listOptions.getLimit() != null) {\n+        requestUrl = new URL(URLUtils.join(requestUrl.toString(), \"?limit=\" + listOptions.getLimit().toString()));\n+      } else if(listOptions.getContinue() != null) {", "originalCommit": "f084a8a54c10faa14a42d944f11dd6197297249d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58abca40521b780da2e0a29333fba25431ceb5fa", "chunk": "diff --git a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java\nindex e126fd380..e7becbffd 100644\n--- a/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java\n+++ b/openshift-client/src/main/java/io/fabric8/openshift/client/dsl/internal/ProjectRequestsOperationImpl.java\n\n@@ -127,13 +128,34 @@ public class ProjectRequestsOperationImpl extends OperationSupport implements Pr\n   @Override\n   public Status list(ListOptions listOptions) {\n     try {\n-      URL requestUrl = getNamespacedUrl();\n+      HttpUrl.Builder urlBuilder = HttpUrl.get(getNamespacedUrl().toString()).newBuilder();\n       if(listOptions.getLimit() != null) {\n-        requestUrl = new URL(URLUtils.join(requestUrl.toString(), \"?limit=\" + listOptions.getLimit().toString()));\n-      } else if(listOptions.getContinue() != null) {\n-        requestUrl = new URL(URLUtils.join(requestUrl.toString(), \"?limit=\" + listOptions.getLimit().toString() + \"&continue=\" + listOptions.getContinue()));\n+        urlBuilder.addQueryParameter(\"limit\", listOptions.getLimit().toString());\n       }\n-      Request.Builder requestBuilder = new Request.Builder().get().url(requestUrl);\n+      if(listOptions.getContinue() != null) {\n+        urlBuilder.addQueryParameter(\"continue\", listOptions.getContinue());\n+      }\n+\n+      if (listOptions.getResourceVersion() != null) {\n+        urlBuilder.addQueryParameter(\"resourceVersion\", listOptions.getResourceVersion());\n+      }\n+\n+      if (listOptions.getFieldSelector() != null) {\n+        urlBuilder.addQueryParameter(\"fieldSelector\", listOptions.getFieldSelector());\n+      }\n+\n+      if (listOptions.getLabelSelector() != null) {\n+        urlBuilder.addQueryParameter(\"labelSelector\", listOptions.getLabelSelector());\n+      }\n+\n+      if (listOptions.getTimeoutSeconds() != null) {\n+        urlBuilder.addQueryParameter(\"timeoutSeconds\", listOptions.getTimeoutSeconds().toString());\n+      }\n+\n+      if (listOptions.getAllowWatchBookmarks() != null) {\n+        urlBuilder.addQueryParameter(\"allowWatchBookmarks\", listOptions.getAllowWatchBookmarks().toString());\n+      }\n+      Request.Builder requestBuilder = new Request.Builder().get().url(urlBuilder.build());\n       return handleResponse(requestBuilder, Status.class);\n     } catch (InterruptedException | ExecutionException | IOException e) {\n       throw KubernetesClientException.launderThrowable(e);\n"}}, {"oid": "58abca40521b780da2e0a29333fba25431ceb5fa", "url": "https://github.com/fabric8io/kubernetes-client/commit/58abca40521b780da2e0a29333fba25431ceb5fa", "message": "Fix #2165: list() should also be able to handle ListOptions", "committedDate": "2020-05-05T09:24:42Z", "type": "commit"}, {"oid": "58abca40521b780da2e0a29333fba25431ceb5fa", "url": "https://github.com/fabric8io/kubernetes-client/commit/58abca40521b780da2e0a29333fba25431ceb5fa", "message": "Fix #2165: list() should also be able to handle ListOptions", "committedDate": "2020-05-05T09:24:42Z", "type": "forcePushed"}]}