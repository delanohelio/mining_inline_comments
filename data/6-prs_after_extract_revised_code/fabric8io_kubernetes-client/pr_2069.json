{"pr_number": 2069, "pr_title": "Fix #2046: OpenshiftClient getVersion returns null for Openshift ContainerPlatform v4", "pr_createdAt": "2020-03-16T11:59:05Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2069", "timeline": [{"oid": "ee8d58b7870907b5bbbca8d21d3128cde02647bb", "url": "https://github.com/fabric8io/kubernetes-client/commit/ee8d58b7870907b5bbbca8d21d3128cde02647bb", "message": "Fix #2046: OpenshiftClient getVersion returns null for Openshift ContainerPlatform v4", "committedDate": "2020-03-16T12:02:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MTE1NA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2069#discussion_r395461154", "bodyText": "This getter method (plus field) seems to be something that is not used and not necessary. It's also something that prevents refactoring this class to be more resilient.\nCan we remove it?", "author": "manusa", "createdAt": "2020-03-20T06:52:33Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java", "diffHunk": "@@ -95,4 +98,15 @@ public VersionInfo(Map<String, String> jsonData) throws ParseException {\n   }\n \n   public Map<String, String> getData() { return data; }", "originalCommit": "ee8d58b7870907b5bbbca8d21d3128cde02647bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "069403daae225384c9acbe1897f154ad6b63a998", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java\nindex 5f66c8ff6..97b1935c2 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java\n\n@@ -84,29 +81,85 @@ public class VersionInfo {\n     return compiler;\n   }\n \n-  public VersionInfo(Map<String, String> jsonData) throws ParseException {\n-      this.data = jsonData;\n-      this.buildDate = new SimpleDateFormat(VERSION_KEYS.BUILD_DATE_FORMAT).parse(jsonData.get(VERSION_KEYS.BUILD_DATE));\n-      this.gitCommit = jsonData.get(VERSION_KEYS.GIT_COMMIT);\n-      this.gitVersion = jsonData.get(VERSION_KEYS.GIT_VERSION);\n-      this.major = jsonData.get(VERSION_KEYS.MAJOR);\n-      this.minor = jsonData.get(VERSION_KEYS.MINOR);\n-      this.gitTreeState = jsonData.get(VERSION_KEYS.GIT_TREE_STATE);\n-      this.platform = jsonData.get(VERSION_KEYS.PLATFORM);\n-      this.goVersion = jsonData.get(VERSION_KEYS.GO_VERSION);\n-      this.compiler = jsonData.get(VERSION_KEYS.COMPILER);\n-  }\n-\n-  public Map<String, String> getData() { return data; }\n+  private VersionInfo() { }\n \n   public static VersionInfo parseVersionInfoFromClusterVersion(ClusterVersion clusterVersion) throws ParseException {\n     String[] versionParts = clusterVersion.getStatus().getDesired().getVersion().split(\"\\\\.\");\n-    Map<String, String> data = new HashMap<>();\n+    VersionInfo.Builder versionInfoBuilder = new VersionInfo.Builder();\n     if (versionParts.length == 3) {\n-      data.put(VERSION_KEYS.MAJOR, versionParts[0]);\n-      data.put(VERSION_KEYS.MINOR, versionParts[1] + \".\" + versionParts[2]);\n+      versionInfoBuilder.withMajor(versionParts[0]);\n+      versionInfoBuilder.withMinor(versionParts[1] + \".\" + versionParts[2]);\n+    }\n+    versionInfoBuilder.withBuildDate(clusterVersion.getMetadata().getCreationTimestamp());\n+    return versionInfoBuilder.build();\n+  }\n+\n+  public static class Builder {\n+    private VersionInfo versionInfo = new VersionInfo();\n+\n+    public Builder() { }\n+\n+    public Builder(VersionInfo versionInfo) {\n+      if (versionInfo != null) {\n+        this.versionInfo.buildDate = versionInfo.getBuildDate();\n+        this.versionInfo.gitCommit = versionInfo.getGitCommit();\n+        this.versionInfo.gitVersion = versionInfo.getGitVersion();\n+        this.versionInfo.major = versionInfo.getMajor();\n+        this.versionInfo.minor = versionInfo.getMinor();\n+        this.versionInfo.gitTreeState = versionInfo.getGitTreeState();\n+        this.versionInfo.platform = versionInfo.getPlatform();\n+        this.versionInfo.goVersion = versionInfo.getGoVersion();\n+        this.versionInfo.compiler = versionInfo.getCompiler();\n+      }\n+    }\n+\n+    public Builder withBuildDate(String buildDate) throws ParseException {\n+      this.versionInfo.buildDate = new SimpleDateFormat(VERSION_KEYS.BUILD_DATE_FORMAT).parse(buildDate);\n+      return this;\n+    }\n+\n+    public Builder withGitCommit(String gitCommit) {\n+      this.versionInfo.gitCommit = gitCommit;\n+      return this;\n+    }\n+\n+    public Builder withGitVersion(String gitVersion) {\n+      this.versionInfo.gitVersion = gitVersion;\n+      return this;\n+    }\n+\n+    public Builder withMajor(String major) {\n+      this.versionInfo.major = major;\n+      return this;\n+    }\n+\n+    public Builder withMinor(String minor) {\n+      this.versionInfo.minor = minor;\n+      return this;\n+    }\n+\n+    public Builder withGitTreeState(String gitTreeState) {\n+      this.versionInfo.gitTreeState = gitTreeState;\n+      return this;\n+    }\n+\n+    public Builder withPlatform(String platform) {\n+      this.versionInfo.platform = platform;\n+      return this;\n+    }\n+\n+    public Builder withGoVersion(String goVersion) {\n+      this.versionInfo.goVersion = goVersion;\n+      return this;\n+    }\n+\n+    public Builder withCompiler(String compiler) {\n+      this.versionInfo.compiler = compiler;\n+      return this;\n+    }\n+\n+    public VersionInfo build() {\n+      return versionInfo;\n     }\n-    data.put(VERSION_KEYS.BUILD_DATE, clusterVersion.getMetadata().getCreationTimestamp());\n-    return new VersionInfo(data);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MjIyNg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2069#discussion_r395462226", "bodyText": "Can we create a constructor, or a builder, that enables us to pass field values directly instead of parsing a Map.\ne.g.\nfinal VersionInfo versionInfo = new VersionBuilder().major(\"1\").minor(\"9\").build()", "author": "manusa", "createdAt": "2020-03-20T06:56:44Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java", "diffHunk": "@@ -16,9 +16,12 @@\n \n package io.fabric8.kubernetes.client;\n \n+import io.fabric8.openshift.api.model.ClusterVersion;\n+\n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n+import java.util.HashMap;\n import java.util.Map;\n \n public class VersionInfo {", "originalCommit": "ee8d58b7870907b5bbbca8d21d3128cde02647bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2Mjk3MQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2069#discussion_r395462971", "bodyText": "Following this approach, it would also be good to completely remove the VersionInfo(Map<String, String> jsonData) constructor and create a parser for it (similar to public static VersionInfo parseVersionInfoFromClusterVersion > parseVersionInfoFromJsonData)\nConstructors shouldn't have logic.\nWe can then add specific unit tests for each parser.", "author": "manusa", "createdAt": "2020-03-20T06:59:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MjIyNg=="}], "type": "inlineReview", "revised_code": {"commit": "069403daae225384c9acbe1897f154ad6b63a998", "chunk": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java\nindex 5f66c8ff6..97b1935c2 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/VersionInfo.java\n\n@@ -21,12 +21,9 @@ import io.fabric8.openshift.api.model.ClusterVersion;\n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n-import java.util.HashMap;\n-import java.util.Map;\n \n public class VersionInfo {\n-  private Map<String, String> data;\n-  private final class VERSION_KEYS {\n+  public final class VERSION_KEYS {\n     public static final String BUILD_DATE = \"buildDate\";\n     public static final String GIT_COMMIT = \"gitCommit\";\n     public static final String GIT_VERSION = \"gitVersion\";\n"}}, {"oid": "069403daae225384c9acbe1897f154ad6b63a998", "url": "https://github.com/fabric8io/kubernetes-client/commit/069403daae225384c9acbe1897f154ad6b63a998", "message": "Fix #2046: OpenshiftClient getVersion returns null for Openshift ContainerPlatform v4", "committedDate": "2020-03-24T09:41:00Z", "type": "forcePushed"}, {"oid": "3da62e3ae158cdf1084042ff1db40d0ec2bd0e10", "url": "https://github.com/fabric8io/kubernetes-client/commit/3da62e3ae158cdf1084042ff1db40d0ec2bd0e10", "message": "Fix #2046: OpenshiftClient getVersion returns null for Openshift ContainerPlatform v4", "committedDate": "2020-03-24T14:01:06Z", "type": "forcePushed"}, {"oid": "2d32334629dcf854785e7def8b8815f3dac9ffb2", "url": "https://github.com/fabric8io/kubernetes-client/commit/2d32334629dcf854785e7def8b8815f3dac9ffb2", "message": "Fix #2046: OpenshiftClient getVersion returns null for Openshift ContainerPlatform v4", "committedDate": "2020-03-24T14:05:54Z", "type": "commit"}, {"oid": "2d32334629dcf854785e7def8b8815f3dac9ffb2", "url": "https://github.com/fabric8io/kubernetes-client/commit/2d32334629dcf854785e7def8b8815f3dac9ffb2", "message": "Fix #2046: OpenshiftClient getVersion returns null for Openshift ContainerPlatform v4", "committedDate": "2020-03-24T14:05:54Z", "type": "forcePushed"}]}