{"pr_number": 1408, "pr_title": "SAMZA-2574: improve flexibility of SystemFactory interface", "pr_createdAt": "2020-08-04T01:37:41Z", "pr_url": "https://github.com/apache/samza/pull/1408", "timeline": [{"oid": "e7d30676d24f159c1f51c8bbdc7c634330513b4e", "url": "https://github.com/apache/samza/commit/e7d30676d24f159c1f51c8bbdc7c634330513b4e", "message": "Merge pull request #1 from apache/master\n\nMerge from origin branch", "committedDate": "2020-08-04T00:31:34Z", "type": "commit"}, {"oid": "984978ba9127dee4d5a1ccbbf12e269111253661", "url": "https://github.com/apache/samza/commit/984978ba9127dee4d5a1ccbbf12e269111253661", "message": "SAMZA-2574:improve flexibility of SystemFactory interface", "committedDate": "2020-08-04T01:30:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkyMjQyOQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r465922429", "bodyText": "please rename callClass to 'consumerIdPrefix'", "author": "sborya", "createdAt": "2020-08-05T18:30:16Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String callerClass) {", "originalCommit": "984978ba9127dee4d5a1ccbbf12e269111253661", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2092530b4a58a31914f0ce28ca9b19506902151b", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex 268b46d9..9816baf4 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -33,15 +33,15 @@ public interface SystemFactory {\n \n   SystemAdmin getAdmin(String systemName, Config config);\n \n-  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {\n     return getConsumer(systemName, config, registry);\n   }\n \n-  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerIdPrefix) {\n     return getProducer(systemName, config, registry);\n   }\n \n-  default SystemAdmin getAdmin(String systemName, Config config, String callerClass) {\n+  default SystemAdmin getAdmin(String systemName, Config config, String adminIdPrefix) {\n     return getAdmin(systemName, config);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkyMjcxNw==", "url": "https://github.com/apache/samza/pull/1408#discussion_r465922717", "bodyText": "please rename callClass to 'producerIdPrefix'", "author": "sborya", "createdAt": "2020-08-05T18:30:44Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String callerClass) {", "originalCommit": "984978ba9127dee4d5a1ccbbf12e269111253661", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2092530b4a58a31914f0ce28ca9b19506902151b", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex 268b46d9..9816baf4 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -33,15 +33,15 @@ public interface SystemFactory {\n \n   SystemAdmin getAdmin(String systemName, Config config);\n \n-  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {\n     return getConsumer(systemName, config, registry);\n   }\n \n-  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerIdPrefix) {\n     return getProducer(systemName, config, registry);\n   }\n \n-  default SystemAdmin getAdmin(String systemName, Config config, String callerClass) {\n+  default SystemAdmin getAdmin(String systemName, Config config, String adminIdPrefix) {\n     return getAdmin(systemName, config);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkyMzM5MQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r465923391", "bodyText": "please rename callClass to 'adminIdPrefix'", "author": "sborya", "createdAt": "2020-08-05T18:31:54Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+    return getProducer(systemName, config, registry);\n+  }\n+\n+  default SystemAdmin getAdmin(String systemName, Config config, String callerClass) {", "originalCommit": "984978ba9127dee4d5a1ccbbf12e269111253661", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2092530b4a58a31914f0ce28ca9b19506902151b", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex 268b46d9..9816baf4 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -33,15 +33,15 @@ public interface SystemFactory {\n \n   SystemAdmin getAdmin(String systemName, Config config);\n \n-  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {\n     return getConsumer(systemName, config, registry);\n   }\n \n-  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerIdPrefix) {\n     return getProducer(systemName, config, registry);\n   }\n \n-  default SystemAdmin getAdmin(String systemName, Config config, String callerClass) {\n+  default SystemAdmin getAdmin(String systemName, Config config, String adminIdPrefix) {\n     return getAdmin(systemName, config);\n   }\n }\n"}}, {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b", "url": "https://github.com/apache/samza/commit/2092530b4a58a31914f0ce28ca9b19506902151b", "message": "rename the input parameter", "committedDate": "2020-08-05T18:53:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466563595", "bodyText": "i think it is ok to hardcode the prefix to \"DiagnosticsUtil\" too.", "author": "sborya", "createdAt": "2020-08-06T17:16:59Z", "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "diffHunk": "@@ -144,7 +145,8 @@ public MetadataFileContents(String version, String metricsSnapshot) {\n       }\n       SystemFactory systemFactory = ReflectionUtil.getObj(diagnosticsSystemFactoryName.get(), SystemFactory.class);\n       SystemProducer systemProducer =\n-          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap());\n+          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap(),\n+              MethodHandles.lookup().lookupClass().getSimpleName());", "originalCommit": "2092530b4a58a31914f0ce28ca9b19506902151b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2ODU2Nw==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466668567", "bodyText": "Why not use Class.getSimpleName() here too?", "author": "prateekm", "createdAt": "2020-08-06T20:30:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5ODA4Ng==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466698086", "bodyText": "I think it is a static method. And we CAN use simpleName(), but we don't have too. As long as it is unique for the caller.", "author": "sborya", "createdAt": "2020-08-06T21:32:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwNjUxOQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466706519", "bodyText": "Got it, thanks. We can probably use DiagnosticsUtil.class.getSimpleName() so that any refactoring updates it.", "author": "prateekm", "createdAt": "2020-08-06T21:53:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjczMDY2Mg==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466730662", "bodyText": "Got it. Will do.", "author": "MabelYC", "createdAt": "2020-08-06T23:02:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a05c6e456b265380b1d0363d3de58177f03f65d5", "chunk": "diff --git a/samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java b/samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java\nindex 71ce2939..3a0c017d 100644\n--- a/samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java\n+++ b/samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java\n\n@@ -146,7 +146,7 @@ public class DiagnosticsUtil {\n       SystemFactory systemFactory = ReflectionUtil.getObj(diagnosticsSystemFactoryName.get(), SystemFactory.class);\n       SystemProducer systemProducer =\n           systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap(),\n-              MethodHandles.lookup().lookupClass().getSimpleName());\n+              DiagnosticsUtil.class.getSimpleName());\n \n       DiagnosticsManager diagnosticsManager =\n           new DiagnosticsManager(jobName, jobId, jobModel.getContainers(), containerMemoryMb, containerNumCores,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466669710", "bodyText": "Why assume that it's used as prefix in the API? Maybe just call this consumerName/consumerId and let the actual implementation figure out how to use it?", "author": "prateekm", "createdAt": "2020-08-06T20:32:28Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "originalCommit": "2092530b4a58a31914f0ce28ca9b19506902151b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjA1NQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466696055", "bodyText": "I think we don't want caller to assume that this is the id and it must be used as is. The idea is that it should be a unique piece of info that can be used to construct an id. Please suggest your name.", "author": "sborya", "createdAt": "2020-08-06T21:28:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDQ0NQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466710445", "bodyText": "I'm assuming this is intended to be used as part of the Kafka clientId to figure out who owns the instance?\nMaybe consumerLabel. We should add some documentation on what this should be set to by the caller (e.g., set this to indicate ownership of the client instance), how this will be used by system implementers (e.g., to identify consumers in logs, threads and client instances etc., along with other relevant information like systemName).", "author": "prateekm", "createdAt": "2020-08-06T22:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyNDYwNw==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466724607", "bodyText": "by \"add some documentation\" you mean add  javadoc or open source documentation?", "author": "MabelYC", "createdAt": "2020-08-06T22:43:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjczNDk2OQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466734969", "bodyText": "this one: https://samza.apache.org/learn/documentation/0.7.0/api/javadocs/org/apache/samza/system/SystemFactory.html ?", "author": "MabelYC", "createdAt": "2020-08-06T23:15:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1OTUwMQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466759501", "bodyText": "@MabelYC I mean Javadocs. The page you linked is auto-generated from Javadocs.", "author": "prateekm", "createdAt": "2020-08-07T00:44:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}], "type": "inlineReview", "revised_code": {"commit": "a05c6e456b265380b1d0363d3de58177f03f65d5", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex 9816baf4..d6cca62d 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -33,15 +33,44 @@ public interface SystemFactory {\n \n   SystemAdmin getAdmin(String systemName, Config config);\n \n-  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n     return getConsumer(systemName, config, registry);\n   }\n \n-  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerIdPrefix) {\n+  /**\n+   * This function provides an extra input parameter than {@link #getProducer}, which can be used to provide extra\n+   * information e.g. ownership of client instance\n+   *\n+   * @param systemName The name of the system to create producer for.\n+   * @param config The config to create producer with.\n+   * @param registry MetricsRegistry to which to publish producer specific metrics.\n+   * @param producerLabel a string used to provide info the producer instance.\n+   * @return A SystemProducer\n+   */\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerLabel) {\n     return getProducer(systemName, config, registry);\n   }\n \n-  default SystemAdmin getAdmin(String systemName, Config config, String adminIdPrefix) {\n+  /**\n+   *This function provides an extra input parameter than {@link #getAdmin}, which can be used to provide extra\n+   * information e.g. ownership of client instance\n+   *\n+   * @param systemName The name of the system to create admin for.\n+   * @param config The config to create admin with.\n+   * @param adminLabel a string used to provide info the admin instance.\n+   * @return A SystemAmind\n+   */\n+  default SystemAdmin getAdmin(String systemName, Config config, String adminLabel) {\n     return getAdmin(systemName, config);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466670112", "bodyText": "Please add method Javadocs clarifying what the parameters are, and how these methods are different than the ones above.", "author": "prateekm", "createdAt": "2020-08-06T20:33:18Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "originalCommit": "2092530b4a58a31914f0ce28ca9b19506902151b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDg3Ng==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466670876", "bodyText": "Also, let's make this the second parameter after systemName to group naming related parameters together.", "author": "prateekm", "createdAt": "2020-08-06T20:34:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyNzEzNA==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466727134", "bodyText": "good point. Thanks. Will do.", "author": "MabelYC", "createdAt": "2020-08-06T22:51:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjczNDU0Ng==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466734546", "bodyText": "Also, let's make this the second parameter after systemName to group naming related parameters together.\n\nI think change order may not be a good option. We are adding functions to help make previous ones more flexible, so may be better to keep the order the same as previous one. And also, systemName is not intended to be a naming parameter. So i think it may be better to keep it in current order. what do you think\uff1f", "author": "MabelYC", "createdAt": "2020-08-06T23:14:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2MDQxNw==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466760417", "bodyText": "That's a good point, let's keep this order and add javadocs.", "author": "prateekm", "createdAt": "2020-08-07T00:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg=="}], "type": "inlineReview", "revised_code": {"commit": "a05c6e456b265380b1d0363d3de58177f03f65d5", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex 9816baf4..d6cca62d 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -33,15 +33,44 @@ public interface SystemFactory {\n \n   SystemAdmin getAdmin(String systemName, Config config);\n \n-  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n     return getConsumer(systemName, config, registry);\n   }\n \n-  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerIdPrefix) {\n+  /**\n+   * This function provides an extra input parameter than {@link #getProducer}, which can be used to provide extra\n+   * information e.g. ownership of client instance\n+   *\n+   * @param systemName The name of the system to create producer for.\n+   * @param config The config to create producer with.\n+   * @param registry MetricsRegistry to which to publish producer specific metrics.\n+   * @param producerLabel a string used to provide info the producer instance.\n+   * @return A SystemProducer\n+   */\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerLabel) {\n     return getProducer(systemName, config, registry);\n   }\n \n-  default SystemAdmin getAdmin(String systemName, Config config, String adminIdPrefix) {\n+  /**\n+   *This function provides an extra input parameter than {@link #getAdmin}, which can be used to provide extra\n+   * information e.g. ownership of client instance\n+   *\n+   * @param systemName The name of the system to create admin for.\n+   * @param config The config to create admin with.\n+   * @param adminLabel a string used to provide info the admin instance.\n+   * @return A SystemAmind\n+   */\n+  default SystemAdmin getAdmin(String systemName, Config config, String adminLabel) {\n     return getAdmin(systemName, config);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDk3NQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466710975", "bodyText": "Should we mark the other methods as @deprecated to encourage use of the new methods and identify other call sites that need to be updated?", "author": "prateekm", "createdAt": "2020-08-06T22:04:39Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "originalCommit": "2092530b4a58a31914f0ce28ca9b19506902151b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyNjk5MQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466726991", "bodyText": "Not sure if it is better. With deprecated, user will still have to implement them later. Can it work as we expect?", "author": "MabelYC", "createdAt": "2020-08-06T22:51:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDk3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2MDIzNQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466760235", "bodyText": "@MabelYC what do you mean? I'm suggesting that we add the annotation to mark them as deprecated (e.g. https://www.baeldung.com/java-deprecated). We will not remove the older methods. This will mean that when some code calls the older methods, the author will get build time warnings that the method they're calling is deprecated, so that they can start using the new (better) method instead.", "author": "prateekm", "createdAt": "2020-08-07T00:47:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDk3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc3MTkxMA==", "url": "https://github.com/apache/samza/pull/1408#discussion_r466771910", "bodyText": "@prateekm  make sense. Marked theme as @deprecated.", "author": "MabelYC", "createdAt": "2020-08-07T01:32:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDk3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a05c6e456b265380b1d0363d3de58177f03f65d5", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex 9816baf4..d6cca62d 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -33,15 +33,44 @@ public interface SystemFactory {\n \n   SystemAdmin getAdmin(String systemName, Config config);\n \n-  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n     return getConsumer(systemName, config, registry);\n   }\n \n-  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerIdPrefix) {\n+  /**\n+   * This function provides an extra input parameter than {@link #getProducer}, which can be used to provide extra\n+   * information e.g. ownership of client instance\n+   *\n+   * @param systemName The name of the system to create producer for.\n+   * @param config The config to create producer with.\n+   * @param registry MetricsRegistry to which to publish producer specific metrics.\n+   * @param producerLabel a string used to provide info the producer instance.\n+   * @return A SystemProducer\n+   */\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerLabel) {\n     return getProducer(systemName, config, registry);\n   }\n \n-  default SystemAdmin getAdmin(String systemName, Config config, String adminIdPrefix) {\n+  /**\n+   *This function provides an extra input parameter than {@link #getAdmin}, which can be used to provide extra\n+   * information e.g. ownership of client instance\n+   *\n+   * @param systemName The name of the system to create admin for.\n+   * @param config The config to create admin with.\n+   * @param adminLabel a string used to provide info the admin instance.\n+   * @return A SystemAmind\n+   */\n+  default SystemAdmin getAdmin(String systemName, Config config, String adminLabel) {\n     return getAdmin(systemName, config);\n   }\n }\n"}}, {"oid": "a05c6e456b265380b1d0363d3de58177f03f65d5", "url": "https://github.com/apache/samza/commit/a05c6e456b265380b1d0363d3de58177f03f65d5", "message": "address comment: adding javadoc and change to a more reasonable name", "committedDate": "2020-08-07T00:24:30Z", "type": "commit"}, {"oid": "dcbdf8929cf462c869a49e85f760d5ebb55bb570", "url": "https://github.com/apache/samza/commit/dcbdf8929cf462c869a49e85f760d5ebb55bb570", "message": "clean up comments and code", "committedDate": "2020-08-07T01:30:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0MTAyNQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r467141025", "bodyText": "nit. add '.' at the end.", "author": "sborya", "createdAt": "2020-08-07T16:22:06Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName", "originalCommit": "dcbdf8929cf462c869a49e85f760d5ebb55bb570", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7aa658008fc511783109ce6932fa5dd91b8ae545", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex c17b2817..36c97764 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -39,12 +39,12 @@ public interface SystemFactory {\n   /**\n    * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n    * information e.g. ownership of client instance, to helper better identify consumers in logs,\n-   * threads and client instances etc., along with other relevant information like systemName\n+   * threads and client instances etc., along with other relevant information like systemName.\n    *\n    * @param systemName The name of the system to create consumer for.\n    * @param config The config to create consumer with.\n    * @param registry MetricsRegistry to which to publish consumer specific metrics.\n-   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @param consumerLabel a string to provide info the consumer instance.\n    * @return A SystemConsumer\n    */\n   default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NjUxNg==", "url": "https://github.com/apache/samza/pull/1408#discussion_r467146516", "bodyText": "\" a string to provide extra info for the consumer instance.\"", "author": "sborya", "createdAt": "2020-08-07T16:32:49Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string used to provide info the consumer instance.", "originalCommit": "dcbdf8929cf462c869a49e85f760d5ebb55bb570", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7aa658008fc511783109ce6932fa5dd91b8ae545", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex c17b2817..36c97764 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -39,12 +39,12 @@ public interface SystemFactory {\n   /**\n    * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n    * information e.g. ownership of client instance, to helper better identify consumers in logs,\n-   * threads and client instances etc., along with other relevant information like systemName\n+   * threads and client instances etc., along with other relevant information like systemName.\n    *\n    * @param systemName The name of the system to create consumer for.\n    * @param config The config to create consumer with.\n    * @param registry MetricsRegistry to which to publish consumer specific metrics.\n-   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @param consumerLabel a string to provide info the consumer instance.\n    * @return A SystemConsumer\n    */\n   default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0Njc0MA==", "url": "https://github.com/apache/samza/pull/1408#discussion_r467146740", "bodyText": "see above.", "author": "sborya", "createdAt": "2020-08-07T16:33:18Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getProducer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify producers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create producer for.\n+   * @param config The config to create producer with.\n+   * @param registry MetricsRegistry to which to publish producer specific metrics.\n+   * @param producerLabel a string used to provide info the producer instance.", "originalCommit": "dcbdf8929cf462c869a49e85f760d5ebb55bb570", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7aa658008fc511783109ce6932fa5dd91b8ae545", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex c17b2817..36c97764 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -39,12 +39,12 @@ public interface SystemFactory {\n   /**\n    * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n    * information e.g. ownership of client instance, to helper better identify consumers in logs,\n-   * threads and client instances etc., along with other relevant information like systemName\n+   * threads and client instances etc., along with other relevant information like systemName.\n    *\n    * @param systemName The name of the system to create consumer for.\n    * @param config The config to create consumer with.\n    * @param registry MetricsRegistry to which to publish consumer specific metrics.\n-   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @param consumerLabel a string to provide info the consumer instance.\n    * @return A SystemConsumer\n    */\n   default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NjkzNg==", "url": "https://github.com/apache/samza/pull/1408#discussion_r467146936", "bodyText": "^^^", "author": "sborya", "createdAt": "2020-08-07T16:33:42Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getProducer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify producers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create producer for.\n+   * @param config The config to create producer with.\n+   * @param registry MetricsRegistry to which to publish producer specific metrics.\n+   * @param producerLabel a string used to provide info the producer instance.\n+   * @return A SystemProducer\n+   */\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerLabel) {\n+    return getProducer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getAdmin}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify admins in logs,\n+   * threads and client instances etc., along with other relevant information like systemName", "originalCommit": "dcbdf8929cf462c869a49e85f760d5ebb55bb570", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7aa658008fc511783109ce6932fa5dd91b8ae545", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex c17b2817..36c97764 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -39,12 +39,12 @@ public interface SystemFactory {\n   /**\n    * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n    * information e.g. ownership of client instance, to helper better identify consumers in logs,\n-   * threads and client instances etc., along with other relevant information like systemName\n+   * threads and client instances etc., along with other relevant information like systemName.\n    *\n    * @param systemName The name of the system to create consumer for.\n    * @param config The config to create consumer with.\n    * @param registry MetricsRegistry to which to publish consumer specific metrics.\n-   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @param consumerLabel a string to provide info the consumer instance.\n    * @return A SystemConsumer\n    */\n   default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n"}}, {"oid": "7aa658008fc511783109ce6932fa5dd91b8ae545", "url": "https://github.com/apache/samza/commit/7aa658008fc511783109ce6932fa5dd91b8ae545", "message": "clean up comments", "committedDate": "2020-08-07T17:10:21Z", "type": "commit"}, {"oid": "10d5d2fa325039260bdefa24cc12aa5334a6ab9c", "url": "https://github.com/apache/samza/commit/10d5d2fa325039260bdefa24cc12aa5334a6ab9c", "message": "address comments and provide better comments", "committedDate": "2020-08-11T16:59:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQxNzE2MA==", "url": "https://github.com/apache/samza/pull/1408#discussion_r469417160", "bodyText": "s/helper/help", "author": "sborya", "createdAt": "2020-08-12T17:17:44Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getConsumer}, which can be used to provide extra\n+   * information for the consumer instance, e.g. ownership of client instance, to helper better identify consumers in logs,", "originalCommit": "10d5d2fa325039260bdefa24cc12aa5334a6ab9c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "926c758269ce372aa20a02d0d11a25b19db8c405", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex 10e693b0..08c1b495 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -38,7 +38,7 @@ public interface SystemFactory {\n \n   /**\n    * This function provides an extra input parameter to {@link #getConsumer}, which can be used to provide extra\n-   * information for the consumer instance, e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * information for the consumer instance, e.g. ownership of client instance, to help better identify consumers in logs,\n    * threads and client instances etc., along with other relevant information like systemName.\n    *\n    * @param systemName The name of the system to create consumer for.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQxNzQyNQ==", "url": "https://github.com/apache/samza/pull/1408#discussion_r469417425", "bodyText": "see above.", "author": "sborya", "createdAt": "2020-08-12T17:18:13Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getConsumer}, which can be used to provide extra\n+   * information for the consumer instance, e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName.\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getProducer}, which can be used to provide extra\n+   * information for the producer instance, e.g. ownership of client instance, to helper better identify producers in logs,", "originalCommit": "10d5d2fa325039260bdefa24cc12aa5334a6ab9c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "926c758269ce372aa20a02d0d11a25b19db8c405", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex 10e693b0..08c1b495 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -38,7 +38,7 @@ public interface SystemFactory {\n \n   /**\n    * This function provides an extra input parameter to {@link #getConsumer}, which can be used to provide extra\n-   * information for the consumer instance, e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * information for the consumer instance, e.g. ownership of client instance, to help better identify consumers in logs,\n    * threads and client instances etc., along with other relevant information like systemName.\n    *\n    * @param systemName The name of the system to create consumer for.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQxNzk1MA==", "url": "https://github.com/apache/samza/pull/1408#discussion_r469417950", "bodyText": "see above.", "author": "sborya", "createdAt": "2020-08-12T17:19:03Z", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getConsumer}, which can be used to provide extra\n+   * information for the consumer instance, e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName.\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getProducer}, which can be used to provide extra\n+   * information for the producer instance, e.g. ownership of client instance, to helper better identify producers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName.\n+   *\n+   * @param systemName The name of the system to create producer for.\n+   * @param config The config to create producer with.\n+   * @param registry MetricsRegistry to which to publish producer specific metrics.\n+   * @param producerLabel a string to provide info the producer instance.\n+   * @return A SystemProducer\n+   */\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerLabel) {\n+    return getProducer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getAdmin}, which can be used to provide extra\n+   * information for the admin instance, e.g. ownership of client instance, to helper better identify admins in logs,", "originalCommit": "10d5d2fa325039260bdefa24cc12aa5334a6ab9c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "926c758269ce372aa20a02d0d11a25b19db8c405", "chunk": "diff --git a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\nindex 10e693b0..08c1b495 100644\n--- a/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n+++ b/samza-api/src/main/java/org/apache/samza/system/SystemFactory.java\n\n@@ -38,7 +38,7 @@ public interface SystemFactory {\n \n   /**\n    * This function provides an extra input parameter to {@link #getConsumer}, which can be used to provide extra\n-   * information for the consumer instance, e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * information for the consumer instance, e.g. ownership of client instance, to help better identify consumers in logs,\n    * threads and client instances etc., along with other relevant information like systemName.\n    *\n    * @param systemName The name of the system to create consumer for.\n"}}, {"oid": "926c758269ce372aa20a02d0d11a25b19db8c405", "url": "https://github.com/apache/samza/commit/926c758269ce372aa20a02d0d11a25b19db8c405", "message": "address comment: clean typo", "committedDate": "2020-08-12T18:05:41Z", "type": "commit"}]}