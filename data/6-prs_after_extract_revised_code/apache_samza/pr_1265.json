{"pr_number": 1265, "pr_title": "SAMZA-2441: Update ApplicationRunnerMain#ApplicationRunnerCommandLine not to load local file", "pr_createdAt": "2020-01-31T00:15:15Z", "pr_url": "https://github.com/apache/samza/pull/1265", "timeline": [{"oid": "4f8b40d072604c3eb86a0af825653f79e62ee0e4", "url": "https://github.com/apache/samza/commit/4f8b40d072604c3eb86a0af825653f79e62ee0e4", "message": "SAMZA-2441: Update ApplicationRunnerMain#ApplicationRunnerCommandLine not to load local file\n\nDesign:\nhttps://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner\n\nChanges:\n1. Override ApplicationRunnerCommandLine#loadConfig not to invoke config loader.\n2. Add JobRunnerCommandLine for JobRunner as it still needs full job config for special use cases.\n\nAPI Changes:\nNone\n\nUpgrade Instructions:\nNone\n\nUsage Instructions:\nNone\n\nTests:\n1. Unit Tests", "committedDate": "2020-01-31T00:13:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNzc1OQ==", "url": "https://github.com/apache/samza/pull/1265#discussion_r374937759", "bodyText": "Do you feel that the \"base\" use case for CommandLine is to need the full config? To me, it looks a little awkward to need to override loadConfig here with an implementation which is almost the same as the base loadConfig.\nI suppose one alternative would be to make this impl here the base impl, and then have each use case call ConfigUtil.loadConfig if is needs it. What do you see as the tradeoffs?", "author": "cameronlee314", "createdAt": "2020-02-04T21:39:22Z", "path": "samza-core/src/main/java/org/apache/samza/runtime/ApplicationRunnerMain.java", "diffHunk": "@@ -43,9 +49,33 @@ public ApplicationRunnerOperation getOperation(OptionSet options) {\n       String rawOp = options.valueOf(operationOpt);\n       return ApplicationRunnerOperation.fromString(rawOp);\n     }\n+\n+    @Override\n+    public Config loadConfig(OptionSet options) {", "originalCommit": "4f8b40d072604c3eb86a0af825653f79e62ee0e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2NDQ5OQ==", "url": "https://github.com/apache/samza/pull/1265#discussion_r374964499", "bodyText": "Good question, in all 13 direct usage of CommandLine, and 5 sub classes of CommandLine, they are all expecting full job configs to work properly, e.g. RocksDbReadingTool extends CommandLine to read full job config before being able to read data from Rocks DB, which is being invoked by CLI.\nIf we change CommandLine to the other way, that means we need to invoke ConfigUtil.loadConfig explicitly in 13 places, and override loadConfigs in 5 sub classes to invoke ConfigUtil.loadConfig too, compared to overriding once in ApplicationRunnerCommandLine only.\nI would prefer the current way to keep the base class to serve majority use case.", "author": "kw2542", "createdAt": "2020-02-04T22:40:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNzc1OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzODQ2Nw==", "url": "https://github.com/apache/samza/pull/1265#discussion_r374938467", "bodyText": "Minor suggestion: Instead of needing to check the size and each individual entry, could you build the expected config map and then do an equals check?", "author": "cameronlee314", "createdAt": "2020-02-04T21:40:57Z", "path": "samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java", "diffHunk": "@@ -79,6 +82,28 @@ public void TestStatusOperation() throws Exception {\n     assertEquals(1, TestApplicationRunnerInvocationCounts.statusCount);\n   }\n \n+  @Test\n+  public void TestLoadConfig() {\n+    ApplicationRunnerMain.ApplicationRunnerCommandLine cmdLine = new ApplicationRunnerMain.ApplicationRunnerCommandLine();\n+    OptionSet options = cmdLine.parser().parse(\n+        \"--config-loader-factory\",\n+        \"org.apache.samza.config.loaders.PropertiesConfigLoaderFactory\",\n+        \"--config-loader-properties\",\n+        \"path=\" + getClass().getResource(\"/test.properties\").getPath(),\n+        \"-config\", String.format(\"%s=%s\", ApplicationConfig.APP_CLASS, MockStreamApplication.class.getName()),\n+        \"-config\", String.format(\"app.runner.class=%s\", TestApplicationRunnerInvocationCounts.class.getName()));\n+\n+    Config actual = cmdLine.loadConfig(options);\n+\n+    assertEquals(4, actual.size());\n+    assertEquals(\"org.apache.samza.config.loaders.PropertiesConfigLoaderFactory\", actual.get(JobConfig.CONFIG_LOADER_FACTORY));\n+    assertEquals(\n+        getClass().getResource(\"/test.properties\").getPath(),\n+        actual.get(ConfigLoaderFactory.CONFIG_LOADER_PROPERTIES_PREFIX + \"path\"));\n+    assertEquals(MockStreamApplication.class.getName(), actual.get(ApplicationConfig.APP_CLASS));\n+    assertEquals(TestApplicationRunnerInvocationCounts.class.getName(), actual.get(\"app.runner.class\"));", "originalCommit": "4f8b40d072604c3eb86a0af825653f79e62ee0e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk1MTkwNg==", "url": "https://github.com/apache/samza/pull/1265#discussion_r374951906", "bodyText": "Good point, updated.", "author": "kw2542", "createdAt": "2020-02-04T22:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzODQ2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "029dd64b66e810ba603827a3359d4ed855b98284", "chunk": "diff --git a/samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java b/samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java\nindex 69d352233..ef8dd34d5 100644\n--- a/samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java\n+++ b/samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java\n\n@@ -95,13 +97,13 @@ public class TestApplicationRunnerMain {\n \n     Config actual = cmdLine.loadConfig(options);\n \n-    assertEquals(4, actual.size());\n-    assertEquals(\"org.apache.samza.config.loaders.PropertiesConfigLoaderFactory\", actual.get(JobConfig.CONFIG_LOADER_FACTORY));\n-    assertEquals(\n-        getClass().getResource(\"/test.properties\").getPath(),\n-        actual.get(ConfigLoaderFactory.CONFIG_LOADER_PROPERTIES_PREFIX + \"path\"));\n-    assertEquals(MockStreamApplication.class.getName(), actual.get(ApplicationConfig.APP_CLASS));\n-    assertEquals(TestApplicationRunnerInvocationCounts.class.getName(), actual.get(\"app.runner.class\"));\n+    Config expected = new MapConfig(ImmutableMap.of(\n+        JobConfig.CONFIG_LOADER_FACTORY, \"org.apache.samza.config.loaders.PropertiesConfigLoaderFactory\",\n+        ConfigLoaderFactory.CONFIG_LOADER_PROPERTIES_PREFIX + \"path\", getClass().getResource(\"/test.properties\").getPath(),\n+        ApplicationConfig.APP_CLASS, MockStreamApplication.class.getName(),\n+        \"app.runner.class\", TestApplicationRunnerInvocationCounts.class.getName()));\n+\n+    assertEquals(expected, actual);\n   }\n \n   public static class TestApplicationRunnerInvocationCounts implements ApplicationRunner {\n"}}, {"oid": "029dd64b66e810ba603827a3359d4ed855b98284", "url": "https://github.com/apache/samza/commit/029dd64b66e810ba603827a3359d4ed855b98284", "message": "Update Unit Tests", "committedDate": "2020-02-04T22:40:09Z", "type": "commit"}]}