{"pr_number": 1422, "pr_title": "SAMZA-2585: Modify shutdown sequence to handle orphaned AMs", "pr_createdAt": "2020-08-27T19:57:16Z", "pr_url": "https://github.com/apache/samza/pull/1422", "timeline": [{"oid": "4c4d77b64a5b2951fecf2609498b38c1ff6e4648", "url": "https://github.com/apache/samza/commit/4c4d77b64a5b2951fecf2609498b38c1ff6e4648", "message": "Modify shutdown sequence for orphaned AMs", "committedDate": "2020-08-27T19:44:02Z", "type": "commit"}, {"oid": "fafb795c26bec36d11b681c48b2c6333ff623e9a", "url": "https://github.com/apache/samza/commit/fafb795c26bec36d11b681c48b2c6333ff623e9a", "message": "Modify test for shutdown sequence for orphaned AMs", "committedDate": "2020-08-27T20:13:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3ODYzMQ==", "url": "https://github.com/apache/samza/pull/1422#discussion_r478678631", "bodyText": "why not leverage stop(SamzaAppStatus.FAILED) up top? I like some additional logs. so maybe modify the stop(...) to include this logs for better debuggability.", "author": "mynameborat", "createdAt": "2020-08-27T20:31:57Z", "path": "samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java", "diffHunk": "@@ -485,7 +485,15 @@ public void onContainersAllocated(List<Container> containers) {\n   //nodes being updated. We always return 0 when asked for progress by Yarn.\n   @Override\n   public void onShutdownRequest() {\n-    //not implemented currently.\n+    log.info(\"Stopping the AM client on shutdown request.\");\n+    lifecycle.onShutdown(SamzaApplicationState.SamzaAppStatus.FAILED);\n+    amClient.stop();\n+    log.info(\"Stopping the NM client on shutdown request.\");\n+    nmClientAsync.stop();\n+    log.info(\"Stopping the SamzaYarnAppMasterService service on shutdown request.\");\n+    service.onShutdown();\n+    log.info(\"Stopping SamzaAppMasterMetrics on shutdown request.\");\n+    metrics.stop();", "originalCommit": "fafb795c26bec36d11b681c48b2c6333ff623e9a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4cb2bbc67d80cb1ed4c81dd006a73d671d5e661", "chunk": "diff --git a/samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java b/samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java\nindex ec07a1d8..7a971a98 100644\n--- a/samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java\n+++ b/samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java\n\n@@ -485,15 +486,7 @@ public class YarnClusterResourceManager extends ClusterResourceManager implement\n   //nodes being updated. We always return 0 when asked for progress by Yarn.\n   @Override\n   public void onShutdownRequest() {\n-    log.info(\"Stopping the AM client on shutdown request.\");\n-    lifecycle.onShutdown(SamzaApplicationState.SamzaAppStatus.FAILED);\n-    amClient.stop();\n-    log.info(\"Stopping the NM client on shutdown request.\");\n-    nmClientAsync.stop();\n-    log.info(\"Stopping the SamzaYarnAppMasterService service on shutdown request.\");\n-    service.onShutdown();\n-    log.info(\"Stopping SamzaAppMasterMetrics on shutdown request.\");\n-    metrics.stop();\n+    stop(SamzaApplicationState.SamzaAppStatus.FAILED);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4MjQwOA==", "url": "https://github.com/apache/samza/pull/1422#discussion_r478682408", "bodyText": "Perhaps add cases for unregister throwing exceptions too.", "author": "mynameborat", "createdAt": "2020-08-27T20:39:47Z", "path": "samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java", "diffHunk": "@@ -103,4 +104,30 @@ public void testAllocatedResourceExpiryForYarn() {\n \n     Assert.assertTrue(yarnClusterResourceManager.isResourceExpired(allocatedResource));\n   }\n+\n+  @Test\n+  public void testAMShutdownOnRMCallback() {", "originalCommit": "fafb795c26bec36d11b681c48b2c6333ff623e9a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4cb2bbc67d80cb1ed4c81dd006a73d671d5e661", "chunk": "diff --git a/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java b/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java\nindex e6511362..f10c61a7 100644\n--- a/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java\n+++ b/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java\n\n@@ -96,8 +98,9 @@ public class TestYarnClusterResourceManager {\n     ClusterResourceManager.Callback callback = mock(ClusterResourceManager.Callback.class);\n \n     // start the cluster manager\n-    YarnClusterResourceManager yarnClusterResourceManager = new YarnClusterResourceManager(asyncClient, asyncNMClient,\n-        callback, yarnAppState, lifecycle, service, metrics, yarnConfiguration, config);\n+    YarnClusterResourceManager yarnClusterResourceManager =\n+        new YarnClusterResourceManager(asyncClient, asyncNMClient, callback, yarnAppState, lifecycle, service, metrics,\n+            yarnConfiguration, config);\n \n     SamzaResource allocatedResource = mock(SamzaResource.class);\n     when(allocatedResource.getTimestamp()).thenReturn(System.currentTimeMillis() - Duration.ofMinutes(10).toMillis());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4MzExOQ==", "url": "https://github.com/apache/samza/pull/1422#discussion_r478683119", "bodyText": "should we also verify if unregister is called? Since if we don't unregister, we will end up retrying and its important this code path doesn't get broken when someone modifies to use a different status to invoke lifecycle.onShutdown(...)", "author": "mynameborat", "createdAt": "2020-08-27T20:41:12Z", "path": "samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java", "diffHunk": "@@ -103,4 +104,30 @@ public void testAllocatedResourceExpiryForYarn() {\n \n     Assert.assertTrue(yarnClusterResourceManager.isResourceExpired(allocatedResource));\n   }\n+\n+  @Test\n+  public void testAMShutdownOnRMCallback() {\n+    // create mocks\n+    YarnConfiguration yarnConfiguration = mock(YarnConfiguration.class);\n+    SamzaAppMasterMetrics metrics = mock(SamzaAppMasterMetrics.class);\n+    Config config = mock(Config.class);\n+    AMRMClientAsync asyncClient = mock(AMRMClientAsync.class);\n+    YarnAppState yarnAppState = new YarnAppState(0, mock(ContainerId.class), \"host\", 8080, 8081);\n+    SamzaYarnAppMasterLifecycle lifecycle = mock(SamzaYarnAppMasterLifecycle.class);\n+    SamzaYarnAppMasterService service = mock(SamzaYarnAppMasterService.class);\n+    NMClientAsync asyncNMClient = mock(NMClientAsync.class);\n+    ClusterResourceManager.Callback callback = mock(ClusterResourceManager.Callback.class);\n+\n+    // start the cluster manager\n+    YarnClusterResourceManager yarnClusterResourceManager = new YarnClusterResourceManager(asyncClient, asyncNMClient,\n+        callback, yarnAppState, lifecycle, service, metrics, yarnConfiguration, config);\n+\n+    yarnClusterResourceManager.onShutdownRequest();\n+\n+    verify(lifecycle, times(1)).onShutdown(SamzaApplicationState.SamzaAppStatus.FAILED);", "originalCommit": "fafb795c26bec36d11b681c48b2c6333ff623e9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI0NDExNw==", "url": "https://github.com/apache/samza/pull/1422#discussion_r480244117", "bodyText": "Done.", "author": "PawasChhokra", "createdAt": "2020-08-31T16:26:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4MzExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "c4cb2bbc67d80cb1ed4c81dd006a73d671d5e661", "chunk": "diff --git a/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java b/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java\nindex e6511362..f10c61a7 100644\n--- a/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java\n+++ b/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java\n\n@@ -96,8 +98,9 @@ public class TestYarnClusterResourceManager {\n     ClusterResourceManager.Callback callback = mock(ClusterResourceManager.Callback.class);\n \n     // start the cluster manager\n-    YarnClusterResourceManager yarnClusterResourceManager = new YarnClusterResourceManager(asyncClient, asyncNMClient,\n-        callback, yarnAppState, lifecycle, service, metrics, yarnConfiguration, config);\n+    YarnClusterResourceManager yarnClusterResourceManager =\n+        new YarnClusterResourceManager(asyncClient, asyncNMClient, callback, yarnAppState, lifecycle, service, metrics,\n+            yarnConfiguration, config);\n \n     SamzaResource allocatedResource = mock(SamzaResource.class);\n     when(allocatedResource.getTimestamp()).thenReturn(System.currentTimeMillis() - Duration.ofMinutes(10).toMillis());\n"}}, {"oid": "c4cb2bbc67d80cb1ed4c81dd006a73d671d5e661", "url": "https://github.com/apache/samza/commit/c4cb2bbc67d80cb1ed4c81dd006a73d671d5e661", "message": "Address review", "committedDate": "2020-08-31T16:23:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2Nzc3Mg==", "url": "https://github.com/apache/samza/pull/1422#discussion_r480367772", "bodyText": "nit: avoid * imports and import explicitly.", "author": "mynameborat", "createdAt": "2020-08-31T20:02:05Z", "path": "samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java", "diffHunk": "@@ -19,28 +19,36 @@\n \n package org.apache.samza.job.yarn;\n \n+import java.io.IOException;\n import java.time.Duration;\n import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;\n import org.apache.hadoop.yarn.api.records.ApplicationId;\n import org.apache.hadoop.yarn.api.records.Container;\n import org.apache.hadoop.yarn.api.records.ContainerId;\n+import org.apache.hadoop.yarn.api.records.FinalApplicationStatus;\n import org.apache.hadoop.yarn.api.records.NodeId;\n import org.apache.hadoop.yarn.api.records.Priority;\n import org.apache.hadoop.yarn.api.records.Resource;\n import org.apache.hadoop.yarn.api.records.Token;\n import org.apache.hadoop.yarn.client.api.async.AMRMClientAsync;\n import org.apache.hadoop.yarn.client.api.async.NMClientAsync;\n import org.apache.hadoop.yarn.conf.YarnConfiguration;\n+import org.apache.hadoop.yarn.exceptions.InvalidApplicationMasterRequestException;\n+import org.apache.hadoop.yarn.exceptions.YarnException;\n import org.apache.samza.clustermanager.ClusterResourceManager;\n+import org.apache.samza.clustermanager.SamzaApplicationState;\n import org.apache.samza.clustermanager.SamzaResource;\n import org.apache.samza.config.Config;\n import org.junit.Assert;\n import org.junit.Test;\n+import org.mockito.Mockito;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.mockito.Matchers.anyObject;\n+import static org.junit.Assert.*;\n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.any;\n import static org.mockito.Mockito.*;", "originalCommit": "c4cb2bbc67d80cb1ed4c81dd006a73d671d5e661", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea669d43b50665e76b4136f0a14590844d453653", "chunk": "diff --git a/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java b/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java\nindex f10c61a7..1ed1d095 100644\n--- a/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java\n+++ b/samza-yarn/src/test/java/org/apache/samza/job/yarn/TestYarnClusterResourceManager.java\n\n@@ -43,8 +43,8 @@ import org.junit.Assert;\n import org.junit.Test;\n import org.mockito.Mockito;\n \n-import static org.junit.Assert.*;\n-import static org.mockito.Matchers.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Matchers.anyObject;\n import static org.mockito.Mockito.any;\n import static org.mockito.Mockito.*;\n \n"}}, {"oid": "ea669d43b50665e76b4136f0a14590844d453653", "url": "https://github.com/apache/samza/commit/ea669d43b50665e76b4136f0a14590844d453653", "message": "Address review", "committedDate": "2020-09-01T02:07:27Z", "type": "commit"}]}