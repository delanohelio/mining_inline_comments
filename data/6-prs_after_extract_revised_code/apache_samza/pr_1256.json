{"pr_number": 1256, "pr_title": "SAMZA-2420: Update CommandLine to use config loader for local config file", "pr_createdAt": "2020-01-22T00:21:30Z", "pr_url": "https://github.com/apache/samza/pull/1256", "timeline": [{"oid": "21f65d9dc6b4cd31f92a4240d2f1f2986de16ce3", "url": "https://github.com/apache/samza/commit/21f65d9dc6b4cd31f92a4240d2f1f2986de16ce3", "message": "SAMZA-2420: Update CommandLine to use config loader for local config file\n\nDesign:\nhttps://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner\n\nChanges:\n1. Update CommandLine to use config loader instead of config factory\n2. Removed common.properties and adds its values to each job config\n3. Update CheckpointTool to read new offsets from local file only.\n\nAPI Changes:\n1. Add config-loader-factory and config-loader-properties in CommandLine to support specifying ConfigLoaderFactory and its properties needed to load config.\n2. Remove config-factory and config-path in CommandLine to discountinue the usage of ConfigFactory\n3. Update CheckpointTool to read new offsets from local file only.\n\nUpgrade Instructions:\n\nAll usages in CommandLine and its subclasses will switch from --config-factory & --config-path to --config-loader-factory & --config-loader-properties, including job launch.\n\nUsage Instructions\n\nFor example,\n\n--config-factory=org.apache.samza.config.factories.PropertiesConfigFactory --config-path=file:///location/file.txt\n\nwill be changed to\n\n--config-loader-factory=org.apache.samza.config.loaders.PropertiesConfigLoaderFactory --config-loader-properties path=file:///location/file.txt\n\nTests\n\n1. Unit tests\n2. Test against Hello Samza example with\n\n  deploy/samza/bin/run-app.sh --config-loader-factory=org.apache.samza.config.loaders.PropertiesConfigLoaderFactory --config-loader-properties path=$PWD/deploy/samza/config/wikipedia-feed.properties", "committedDate": "2020-01-22T00:08:49Z", "type": "commit"}, {"oid": "01aee7ccb791dd43f036fbb5aec1e583f78d51d0", "url": "https://github.com/apache/samza/commit/01aee7ccb791dd43f036fbb5aec1e583f78d51d0", "message": "Revert changes on ApplicationRunnerMain", "committedDate": "2020-01-22T00:30:35Z", "type": "commit"}, {"oid": "72a6261e81b8750b083b2840dac5edb915c39a70", "url": "https://github.com/apache/samza/commit/72a6261e81b8750b083b2840dac5edb915c39a70", "message": "Fix TestCheckpointTool", "committedDate": "2020-01-22T01:05:58Z", "type": "commit"}, {"oid": "2e2ed66eee09f607708687b3730d3e58a05c6cd5", "url": "https://github.com/apache/samza/commit/2e2ed66eee09f607708687b3730d3e58a05c6cd5", "message": "Switch unit tests to config loader.", "committedDate": "2020-01-22T18:24:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3Mjg1OA==", "url": "https://github.com/apache/samza/pull/1256#discussion_r369872858", "bodyText": "nit: might as well fix the entire doc. \"Recovers the state store from the changelog stream and stores in the directory provided....\"", "author": "mynameborat", "createdAt": "2020-01-23T00:07:21Z", "path": "samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java", "diffHunk": "@@ -63,11 +62,11 @@\n \n \n /**\n- * Recovers the state storages from the changelog streams and store the storages\n+ * Recovers the state storage from the changelog streams and store the storages", "originalCommit": "2e2ed66eee09f607708687b3730d3e58a05c6cd5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "160f59c666488c3c31c0f5b32cf8bfb5f7696115", "chunk": "diff --git a/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java b/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\nindex 8a164b88..0bdc0633 100644\n--- a/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\n+++ b/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\n\n@@ -62,7 +62,7 @@ import org.slf4j.LoggerFactory;\n \n \n /**\n- * Recovers the state storage from the changelog streams and store the storages\n+ * Recovers the state storage from both the changelog streams and stores\n  * in the directory provided by the users. The changelog streams are derived\n  * from the job's config file.\n  */\n"}}, {"oid": "160f59c666488c3c31c0f5b32cf8bfb5f7696115", "url": "https://github.com/apache/samza/commit/160f59c666488c3c31c0f5b32cf8bfb5f7696115", "message": "Address Prateek's comments", "committedDate": "2020-01-23T00:24:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2NTM1OQ==", "url": "https://github.com/apache/samza/pull/1256#discussion_r371565359", "bodyText": "Can you please clarify this documentation change? The usage of the term \"both\" is unclear to me.\nIs it supposed to be \"Recovers the state storage from the changelog streams and stores the state in the directory provided by the users.\"?", "author": "cameronlee314", "createdAt": "2020-01-28T01:02:09Z", "path": "samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java", "diffHunk": "@@ -63,11 +62,11 @@\n \n \n /**\n- * Recovers the state storages from the changelog streams and store the storages\n+ * Recovers the state storage from both the changelog streams and stores", "originalCommit": "160f59c666488c3c31c0f5b32cf8bfb5f7696115", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjExNDM0Ng==", "url": "https://github.com/apache/samza/pull/1256#discussion_r372114346", "bodyText": "I misunderstood the previous document, updated.", "author": "kw2542", "createdAt": "2020-01-28T23:22:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2NTM1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2aff69fed15b9962b25f8b69325ec4947b95a44a", "chunk": "diff --git a/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java b/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\nindex 0bdc0633..5d341767 100644\n--- a/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\n+++ b/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\n\n@@ -62,7 +62,7 @@ import org.slf4j.LoggerFactory;\n \n \n /**\n- * Recovers the state storage from both the changelog streams and stores\n+ * Recovers the state storage from the changelog streams and stores the state\n  * in the directory provided by the users. The changelog streams are derived\n  * from the job's config file.\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2NTkzMw==", "url": "https://github.com/apache/samza/pull/1256#discussion_r371565933", "bodyText": "Instead of doing a blanket suppress for the whole method, could you please consider doing a suppression for the single line that needs to be suppressed? Then, if someone accidentally makes a change which should not be suppressed, then there will still be a warning for it.", "author": "cameronlee314", "createdAt": "2020-01-28T01:04:36Z", "path": "samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java", "diffHunk": "@@ -158,6 +155,7 @@ private void getContainerModels() {\n    * Get the changelog streams and the storage factories from the config file\n    * and put them into the maps\n    */\n+  @SuppressWarnings(\"unchecked\")", "originalCommit": "160f59c666488c3c31c0f5b32cf8bfb5f7696115", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjExNTc5Mg==", "url": "https://github.com/apache/samza/pull/1256#discussion_r372115792", "bodyText": "Updated to suppress the single line.", "author": "kw2542", "createdAt": "2020-01-28T23:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2NTkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "2aff69fed15b9962b25f8b69325ec4947b95a44a", "chunk": "diff --git a/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java b/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\nindex 0bdc0633..5d341767 100644\n--- a/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\n+++ b/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\n\n@@ -155,7 +155,6 @@ public class StorageRecovery {\n    * Get the changelog streams and the storage factories from the config file\n    * and put them into the maps\n    */\n-  @SuppressWarnings(\"unchecked\")\n   private void getChangeLogSystemStreamsAndStorageFactories() {\n     StorageConfig config = new StorageConfig(jobConfig);\n     List<String> storeNames = config.getStoreNames();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2NjA3MQ==", "url": "https://github.com/apache/samza/pull/1256#discussion_r371566071", "bodyText": "Same as above about suppression", "author": "cameronlee314", "createdAt": "2020-01-28T01:05:08Z", "path": "samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java", "diffHunk": "@@ -195,6 +191,7 @@ private void getChangeLogMaxPartitionNumber() {\n     maxPartitionNumber = maxPartitionId + 1;\n   }\n \n+  @SuppressWarnings(\"unchecked\")", "originalCommit": "160f59c666488c3c31c0f5b32cf8bfb5f7696115", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjExNTgyNg==", "url": "https://github.com/apache/samza/pull/1256#discussion_r372115826", "bodyText": "Updated to suppress the single line.", "author": "kw2542", "createdAt": "2020-01-28T23:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2NjA3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2aff69fed15b9962b25f8b69325ec4947b95a44a", "chunk": "diff --git a/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java b/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\nindex 0bdc0633..5d341767 100644\n--- a/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\n+++ b/samza-core/src/main/java/org/apache/samza/storage/StorageRecovery.java\n\n@@ -191,7 +194,6 @@ public class StorageRecovery {\n     maxPartitionNumber = maxPartitionId + 1;\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n   private Map<String, Serde<Object>> getSerdes() {\n     Map<String, Serde<Object>> serdeMap = new HashMap<>();\n     SerializerConfig serializerConfig = new SerializerConfig(jobConfig);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3MTY1Ng==", "url": "https://github.com/apache/samza/pull/1256#discussion_r371571656", "bodyText": "The intention to have the \"unused\" config was so that a custom fork could use the config if necessary (see comment inside buildExternalContext. Could we please keep the config?", "author": "cameronlee314", "createdAt": "2020-01-28T01:28:58Z", "path": "samza-test/src/main/java/org/apache/samza/test/integration/LocalApplicationRunnerMain.java", "diffHunk": "@@ -53,14 +53,14 @@ public static void main(String[] args) throws Exception {\n \n     try {\n       LOGGER.info(\"Launching stream application: {} to run.\", app);\n-      runner.run(buildExternalContext(config).orElse(null));\n+      runner.run(buildExternalContext().orElse(null));\n       runner.waitForFinish();\n     } catch (Exception e) {\n       LOGGER.error(\"Exception occurred when running application: {}.\", app, e);\n     }\n   }\n \n-  private static Optional<ExternalContext> buildExternalContext(Config config) {\n+  private static Optional<ExternalContext> buildExternalContext() {", "originalCommit": "160f59c666488c3c31c0f5b32cf8bfb5f7696115", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjExMzE3Nw==", "url": "https://github.com/apache/samza/pull/1256#discussion_r372113177", "bodyText": "Added back.", "author": "kw2542", "createdAt": "2020-01-28T23:18:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3MTY1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "2aff69fed15b9962b25f8b69325ec4947b95a44a", "chunk": "diff --git a/samza-test/src/main/java/org/apache/samza/test/integration/LocalApplicationRunnerMain.java b/samza-test/src/main/java/org/apache/samza/test/integration/LocalApplicationRunnerMain.java\nindex 936e2615..f490132a 100644\n--- a/samza-test/src/main/java/org/apache/samza/test/integration/LocalApplicationRunnerMain.java\n+++ b/samza-test/src/main/java/org/apache/samza/test/integration/LocalApplicationRunnerMain.java\n\n@@ -53,14 +53,14 @@ public class LocalApplicationRunnerMain {\n \n     try {\n       LOGGER.info(\"Launching stream application: {} to run.\", app);\n-      runner.run(buildExternalContext().orElse(null));\n+      runner.run(buildExternalContext(config).orElse(null));\n       runner.waitForFinish();\n     } catch (Exception e) {\n       LOGGER.error(\"Exception occurred when running application: {}.\", app, e);\n     }\n   }\n \n-  private static Optional<ExternalContext> buildExternalContext() {\n+  private static Optional<ExternalContext> buildExternalContext(@SuppressWarnings(\"unused\") Config config) {\n     /*\n      * By default, use an empty ExternalContext here. In a custom fork of Samza, this can be implemented to pass\n      * a non-empty ExternalContext. Only config should be used to build the external context. In the future, components\n"}}, {"oid": "2aff69fed15b9962b25f8b69325ec4947b95a44a", "url": "https://github.com/apache/samza/commit/2aff69fed15b9962b25f8b69325ec4947b95a44a", "message": "Update", "committedDate": "2020-01-28T23:28:41Z", "type": "commit"}, {"oid": "5b2f273f8f3d1e64903240c38e7c40fb90dae071", "url": "https://github.com/apache/samza/commit/5b2f273f8f3d1e64903240c38e7c40fb90dae071", "message": "Remove the config loader properties check as it can be empty", "committedDate": "2020-01-29T00:03:15Z", "type": "commit"}]}