{"pr_number": 4185, "pr_title": "fix-NXP-29297-audit-extended-info-json-writter", "pr_createdAt": "2020-06-25T05:57:07Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4185", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQwNzQyMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445407421", "bodyText": "missing new line", "author": "NourNuxeo", "createdAt": "2020-06-25T08:52:48Z", "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java", "diffHunk": "@@ -147,20 +148,15 @@ protected void writeExtendedInfo(JsonGenerator jg, String key, Serializable valu\n             jg.writeObjectField(key, value);\n         } else if (Map.class.isAssignableFrom(clazz)) {\n             @SuppressWarnings(\"unchecked\")\n-            Map<String, Serializable> map = //\n-                    ((Map<String, Serializable>) value).entrySet()\n-                                                       .stream()\n-                                                       // keep primitive values\n-                                                       // blobs can be in WorkflowVariables for instance\n-                                                       .filter(entry -> entry.getValue() != null\n-                                                               && ClassUtils.isPrimitiveOrWrapper(\n-                                                                       entry.getValue().getClass()))\n-                                                       .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n-            jg.writeObjectField(key, map);\n+            Map<String,Serializable> map = (Map<String, Serializable>) value;\n+            jg.writeObjectFieldStart(key);\n+            for(Entry<String,Serializable> entry : map.entrySet()) {\n+                writeExtendedInfo(jg,entry.getKey(),entry.getValue());\n+            }\n+            jg.writeEndObject();\n         } else {\n             // mainly blobs\n             jg.writeStringField(key, value.toString());\n         }\n     }\n-\n-}\n+}", "originalCommit": "34235d367098e4a141b260dc7694184aa3a1937b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NjIyMg==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445986222", "bodyText": "done", "author": "michaelva", "createdAt": "2020-06-26T06:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQwNzQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c19e8265ab917ba0b6f2bba8b039077ad030a702", "chunk": "diff --git a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java\nindex 3ccb21df2de..56655c941ec 100644\n--- a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java\n+++ b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java\n\n@@ -148,10 +145,10 @@ public class LogEntryJsonWriter extends ExtensibleEntityJsonWriter<LogEntry> {\n             jg.writeObjectField(key, value);\n         } else if (Map.class.isAssignableFrom(clazz)) {\n             @SuppressWarnings(\"unchecked\")\n-            Map<String,Serializable> map = (Map<String, Serializable>) value;\n+            Map<String, Serializable> map = (Map<String, Serializable>) value;\n             jg.writeObjectFieldStart(key);\n-            for(Entry<String,Serializable> entry : map.entrySet()) {\n-                writeExtendedInfo(jg,entry.getKey(),entry.getValue());\n+            for (Entry<String, Serializable> entry : map.entrySet()) {\n+                writeExtendedInfo(jg, entry.getKey(), entry.getValue());\n             }\n             jg.writeEndObject();\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxODczNw==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445418737", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"String\").isEquals(\"abcde\");\n          \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Date\").isEquals(formatISODateTime(now));\n          \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Integer\").isEquals(1);\n          \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Double\").isEquals(2.0,0.0);\n          \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Boolean\").isEquals(false);\n          \n          \n            \n                    var extended = json.has(\"extended\").properties(1).has(\"params\").isObject();\n          \n          \n            \n                    extended.has(\"String\").isEquals(\"abcde\");\n          \n          \n            \n                    extended.has(\"Date\").isEquals(formatISODateTime(now));\n          \n          \n            \n                    extended.has(\"Integer\").isEquals(1);\n          \n          \n            \n                    extended.has(\"Double\").isEquals(2.0,0.0);\n          \n          \n            \n                    extended.has(\"Boolean\").isEquals(false);", "author": "NourNuxeo", "createdAt": "2020-06-25T09:12:18Z", "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java", "diffHunk": "@@ -114,4 +119,42 @@ public void testArrayInExtendedInfo() throws Exception {\n         json.has(\"extended\").properties(1).has(\"params\").isArray().contains(\"a simple string\");\n     }\n \n+    @Test\n+    public void testMapInExtendedInfo() throws Exception {\n+        Map<String, ExtendedInfo> infos = new HashMap<>();\n+\n+        HashMap<String, Serializable> infoMap = new HashMap<>();\n+        infoMap.put(\"String\",\"abcde\");\n+        Date now = new Date();\n+        infoMap.put(\"Date\", now);\n+        infoMap.put(\"Boolean\",false);\n+        infoMap.put(\"Integer\",1);\n+        infoMap.put(\"Double\",2.0);\n+        infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));\n+\n+        LogEntry logEntry = new LogEntryImpl();\n+        logEntry.setExtendedInfos(infos);\n+\n+        JsonAssert json = jsonAssert(logEntry);\n+        json.properties(14);\n+        json.has(\"entity-type\").isEquals(\"logEntry\");\n+        json.has(\"id\").isEquals(0);\n+        json.has(\"category\").isNull();\n+        json.has(\"principalName\").isNull();\n+        json.has(\"docPath\").isNull();\n+        json.has(\"docType\").isNull();\n+        json.has(\"docUUID\").isNull();\n+        json.has(\"eventId\").isNull();\n+        json.has(\"repositoryId\").isNull();\n+        json.has(\"eventDate\").isText();\n+        json.has(\"logDate\").isText();\n+        json.has(\"comment\").isNull();\n+        json.has(\"docLifeCycle\").isNull();\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"String\").isEquals(\"abcde\");\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Date\").isEquals(formatISODateTime(now));\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Integer\").isEquals(1);\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Double\").isEquals(2.0,0.0);\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Boolean\").isEquals(false);", "originalCommit": "34235d367098e4a141b260dc7694184aa3a1937b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MzY5Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445453692", "bodyText": "Yes but avoid using var if you want an easy backport", "author": "efge", "createdAt": "2020-06-25T10:13:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxODczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NjI3MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445986271", "bodyText": "done without var", "author": "michaelva", "createdAt": "2020-06-26T06:10:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxODczNw=="}], "type": "inlineReview", "revised_code": {"commit": "c19e8265ab917ba0b6f2bba8b039077ad030a702", "chunk": "diff --git a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\nindex 6dc35a70e15..d54725b576f 100644\n--- a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\n+++ b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\n\n@@ -124,12 +121,12 @@ public class LogEntryJsonWriterTest extends AbstractJsonWriterTest.External<LogE\n         Map<String, ExtendedInfo> infos = new HashMap<>();\n \n         HashMap<String, Serializable> infoMap = new HashMap<>();\n-        infoMap.put(\"String\",\"abcde\");\n+        infoMap.put(\"String\", \"abcde\");\n         Date now = new Date();\n         infoMap.put(\"Date\", now);\n-        infoMap.put(\"Boolean\",false);\n-        infoMap.put(\"Integer\",1);\n-        infoMap.put(\"Double\",2.0);\n+        infoMap.put(\"Boolean\", false);\n+        infoMap.put(\"Integer\", 1);\n+        infoMap.put(\"Double\", 2.0);\n         infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));\n \n         LogEntry logEntry = new LogEntryImpl();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQzNDQ2Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445434462", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    HashMap<String, Serializable> infoMap = new HashMap<>();\n          \n          \n            \n                    infoMap.put(\"String\",\"abcde\");\n          \n          \n            \n                    Date now = new Date();\n          \n          \n            \n                    infoMap.put(\"Date\", now);\n          \n          \n            \n                    infoMap.put(\"Boolean\",false);\n          \n          \n            \n                    infoMap.put(\"Integer\",1);\n          \n          \n            \n                    infoMap.put(\"Double\",2.0);\n          \n          \n            \n                    infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));\n          \n          \n            \n                    var infoMap = Map.of(\"String\", \"abcde\", \"Date\", new Date(), \"Boolean\", false, \"Integer\", 1, \"Double\", 2.0);\n          \n          \n            \n                    infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo((Serializable) infoMap));", "author": "NourNuxeo", "createdAt": "2020-06-25T09:39:01Z", "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java", "diffHunk": "@@ -114,4 +119,42 @@ public void testArrayInExtendedInfo() throws Exception {\n         json.has(\"extended\").properties(1).has(\"params\").isArray().contains(\"a simple string\");\n     }\n \n+    @Test\n+    public void testMapInExtendedInfo() throws Exception {\n+        Map<String, ExtendedInfo> infos = new HashMap<>();\n+\n+        HashMap<String, Serializable> infoMap = new HashMap<>();\n+        infoMap.put(\"String\",\"abcde\");\n+        Date now = new Date();\n+        infoMap.put(\"Date\", now);\n+        infoMap.put(\"Boolean\",false);\n+        infoMap.put(\"Integer\",1);\n+        infoMap.put(\"Double\",2.0);\n+        infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));", "originalCommit": "34235d367098e4a141b260dc7694184aa3a1937b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MzE0MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445453141", "bodyText": "@NourNuxeo if we do that it wont' be directly backportable. And for a test it isn't as readable.", "author": "efge", "createdAt": "2020-06-25T10:12:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQzNDQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NjMyNg==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445986326", "bodyText": "didn't do", "author": "michaelva", "createdAt": "2020-06-26T06:11:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQzNDQ2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c19e8265ab917ba0b6f2bba8b039077ad030a702", "chunk": "diff --git a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\nindex 6dc35a70e15..d54725b576f 100644\n--- a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\n+++ b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\n\n@@ -124,12 +121,12 @@ public class LogEntryJsonWriterTest extends AbstractJsonWriterTest.External<LogE\n         Map<String, ExtendedInfo> infos = new HashMap<>();\n \n         HashMap<String, Serializable> infoMap = new HashMap<>();\n-        infoMap.put(\"String\",\"abcde\");\n+        infoMap.put(\"String\", \"abcde\");\n         Date now = new Date();\n         infoMap.put(\"Date\", now);\n-        infoMap.put(\"Boolean\",false);\n-        infoMap.put(\"Integer\",1);\n-        infoMap.put(\"Double\",2.0);\n+        infoMap.put(\"Boolean\", false);\n+        infoMap.put(\"Integer\", 1);\n+        infoMap.put(\"Double\", 2.0);\n         infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));\n \n         LogEntry logEntry = new LogEntryImpl();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MjEwOA==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445452108", "bodyText": "Space before ( and after , here an in several other places", "author": "efge", "createdAt": "2020-06-25T10:10:28Z", "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java", "diffHunk": "@@ -147,20 +148,15 @@ protected void writeExtendedInfo(JsonGenerator jg, String key, Serializable valu\n             jg.writeObjectField(key, value);\n         } else if (Map.class.isAssignableFrom(clazz)) {\n             @SuppressWarnings(\"unchecked\")\n-            Map<String, Serializable> map = //\n-                    ((Map<String, Serializable>) value).entrySet()\n-                                                       .stream()\n-                                                       // keep primitive values\n-                                                       // blobs can be in WorkflowVariables for instance\n-                                                       .filter(entry -> entry.getValue() != null\n-                                                               && ClassUtils.isPrimitiveOrWrapper(\n-                                                                       entry.getValue().getClass()))\n-                                                       .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n-            jg.writeObjectField(key, map);\n+            Map<String,Serializable> map = (Map<String, Serializable>) value;\n+            jg.writeObjectFieldStart(key);\n+            for(Entry<String,Serializable> entry : map.entrySet()) {\n+                writeExtendedInfo(jg,entry.getKey(),entry.getValue());", "originalCommit": "34235d367098e4a141b260dc7694184aa3a1937b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NjM4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445986384", "bodyText": "done", "author": "michaelva", "createdAt": "2020-06-26T06:11:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MjEwOA=="}], "type": "inlineReview", "revised_code": {"commit": "c19e8265ab917ba0b6f2bba8b039077ad030a702", "chunk": "diff --git a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java\nindex 3ccb21df2de..56655c941ec 100644\n--- a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java\n+++ b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java\n\n@@ -148,10 +145,10 @@ public class LogEntryJsonWriter extends ExtensibleEntityJsonWriter<LogEntry> {\n             jg.writeObjectField(key, value);\n         } else if (Map.class.isAssignableFrom(clazz)) {\n             @SuppressWarnings(\"unchecked\")\n-            Map<String,Serializable> map = (Map<String, Serializable>) value;\n+            Map<String, Serializable> map = (Map<String, Serializable>) value;\n             jg.writeObjectFieldStart(key);\n-            for(Entry<String,Serializable> entry : map.entrySet()) {\n-                writeExtendedInfo(jg,entry.getKey(),entry.getValue());\n+            for (Entry<String, Serializable> entry : map.entrySet()) {\n+                writeExtendedInfo(jg, entry.getKey(), entry.getValue());\n             }\n             jg.writeEndObject();\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MjQ0Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445452447", "bodyText": "The formatter should put static imports before standard ones", "author": "efge", "createdAt": "2020-06-25T10:11:07Z", "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java", "diffHunk": "@@ -41,6 +44,8 @@\n import org.nuxeo.runtime.test.runner.Deploy;\n import org.nuxeo.runtime.test.runner.Features;\n \n+import static org.nuxeo.common.utils.DateUtils.formatISODateTime;", "originalCommit": "34235d367098e4a141b260dc7694184aa3a1937b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NjQyMA==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445986420", "bodyText": "done", "author": "michaelva", "createdAt": "2020-06-26T06:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MjQ0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c19e8265ab917ba0b6f2bba8b039077ad030a702", "chunk": "diff --git a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\nindex 6dc35a70e15..d54725b576f 100644\n--- a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\n+++ b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\n\n@@ -44,22 +35,28 @@ import org.nuxeo.ecm.platform.query.api.PageProviderService;\n import org.nuxeo.runtime.test.runner.Deploy;\n import org.nuxeo.runtime.test.runner.Features;\n \n+import javax.inject.Inject;\n+import java.io.Serializable;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n import static org.nuxeo.common.utils.DateUtils.formatISODateTime;\n \n @Features(AuditFeature.class)\n @Deploy(\"org.nuxeo.ecm.platform.audit.tests:test-pageprovider-contrib.xml\")\n public class LogEntryJsonWriterTest extends AbstractJsonWriterTest.External<LogEntryJsonWriter, LogEntry> {\n \n-    public LogEntryJsonWriterTest() {\n-        super(LogEntryJsonWriter.class, LogEntry.class);\n-    }\n-\n     @Inject\n     private PageProviderService pps;\n-\n     @Inject\n     private CoreSession session;\n \n+    public LogEntryJsonWriterTest() {\n+        super(LogEntryJsonWriter.class, LogEntry.class);\n+    }\n+\n     @Test\n     public void test() throws Exception {\n         DocumentModel root = session.getDocument(new PathRef(\"/\"));\n"}}, {"oid": "c19e8265ab917ba0b6f2bba8b039077ad030a702", "url": "https://github.com/nuxeo/nuxeo/commit/c19e8265ab917ba0b6f2bba8b039077ad030a702", "message": "NXP-29297: serialize string and date values from map in audit extended info", "committedDate": "2020-06-26T05:58:05Z", "type": "forcePushed"}, {"oid": "cf67d07647b9aa5e2b78234b740652da831270e5", "url": "https://github.com/nuxeo/nuxeo/commit/cf67d07647b9aa5e2b78234b740652da831270e5", "message": "NXP-29297: serialize string and date values from map in audit extended info", "committedDate": "2020-06-26T06:04:42Z", "type": "forcePushed"}, {"oid": "5ac1789d53a29c41a51f4c5d3c4b68f8680cfb5e", "url": "https://github.com/nuxeo/nuxeo/commit/5ac1789d53a29c41a51f4c5d3c4b68f8680cfb5e", "message": "NXP-29297: serialize string and date values from map in audit extended info", "committedDate": "2020-06-26T06:06:07Z", "type": "forcePushed"}, {"oid": "550ec5bd23f2ae852a6fbb7107851818f190d256", "url": "https://github.com/nuxeo/nuxeo/commit/550ec5bd23f2ae852a6fbb7107851818f190d256", "message": "NXP-29297: serialize string and date values from map in audit extended info", "committedDate": "2020-06-26T06:08:53Z", "type": "forcePushed"}, {"oid": "33e4569493ad3fe82814c09bce66d9a98689d01b", "url": "https://github.com/nuxeo/nuxeo/commit/33e4569493ad3fe82814c09bce66d9a98689d01b", "message": "NXP-29297: serialize string and date values from map in audit extended info", "committedDate": "2020-08-28T12:20:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODc3MA==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r479468770", "bodyText": "I wonder if we want to check these properties in this specific test?\nThey're already tested in other tests.", "author": "ataillefer", "createdAt": "2020-08-28T18:27:10Z", "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java", "diffHunk": "@@ -114,4 +118,44 @@ public void testArrayInExtendedInfo() throws Exception {\n         json.has(\"extended\").properties(1).has(\"params\").isArray().contains(\"a simple string\");\n     }\n \n+    @Test\n+    public void testMapInExtendedInfo() throws Exception {\n+        Map<String, ExtendedInfo> infos = new HashMap<>();\n+\n+        HashMap<String, Serializable> infoMap = new HashMap<>();\n+        infoMap.put(\"String\", \"abcde\");\n+        Date now = new Date();\n+        infoMap.put(\"Date\", now);\n+        infoMap.put(\"Boolean\", false);\n+        infoMap.put(\"Integer\", 1);\n+        infoMap.put(\"Double\", 2.0);\n+        infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));\n+\n+        LogEntry logEntry = new LogEntryImpl();\n+        logEntry.setExtendedInfos(infos);\n+\n+        JsonAssert json = jsonAssert(logEntry);\n+        json.properties(14);\n+        json.has(\"entity-type\").isEquals(\"logEntry\");\n+        json.has(\"id\").isEquals(0);\n+        json.has(\"category\").isNull();\n+        json.has(\"principalName\").isNull();\n+        json.has(\"docPath\").isNull();\n+        json.has(\"docType\").isNull();\n+        json.has(\"docUUID\").isNull();\n+        json.has(\"eventId\").isNull();\n+        json.has(\"repositoryId\").isNull();\n+        json.has(\"eventDate\").isText();\n+        json.has(\"logDate\").isText();\n+        json.has(\"comment\").isNull();\n+        json.has(\"docLifeCycle\").isNull();", "originalCommit": "33e4569493ad3fe82814c09bce66d9a98689d01b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2MTE3Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r479961176", "bodyText": "I would say yes to be consistent with testArrayInExtendedInfo, but didn't have a strong opinion about it.", "author": "kevinleturc", "createdAt": "2020-08-31T07:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODc3MA=="}], "type": "inlineReview", "revised_code": {"commit": "37f6cff6a1c699109e61f919ee78e8c069d7f4cb", "chunk": "diff --git a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\nindex b6e0448f2d7..902835e1eaa 100644\n--- a/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\n+++ b/modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java\n\n@@ -129,6 +130,7 @@ public class LogEntryJsonWriterTest extends AbstractJsonWriterTest.External<LogE\n         infoMap.put(\"Boolean\", false);\n         infoMap.put(\"Integer\", 1);\n         infoMap.put(\"Double\", 2.0);\n+        infoMap.put(\"Blob\", (Serializable) Blobs.createBlob(\"Some blob\"));\n         infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));\n \n         LogEntry logEntry = new LogEntryImpl();\n"}}, {"oid": "37f6cff6a1c699109e61f919ee78e8c069d7f4cb", "url": "https://github.com/nuxeo/nuxeo/commit/37f6cff6a1c699109e61f919ee78e8c069d7f4cb", "message": "NXP-29297: serialize string and date values from map in audit extended info", "committedDate": "2020-08-31T08:00:54Z", "type": "commit"}, {"oid": "37f6cff6a1c699109e61f919ee78e8c069d7f4cb", "url": "https://github.com/nuxeo/nuxeo/commit/37f6cff6a1c699109e61f919ee78e8c069d7f4cb", "message": "NXP-29297: serialize string and date values from map in audit extended info", "committedDate": "2020-08-31T08:00:54Z", "type": "forcePushed"}]}