{"pr_number": 4241, "pr_title": "NXP-29499: fix error management on invalid operation/chain/codec (lazy check on chains)", "pr_createdAt": "2020-08-06T12:02:18Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4241", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMTE2MA==", "url": "https://github.com/nuxeo/nuxeo/pull/4241#discussion_r466411160", "bodyText": "What do you think about merging the two try/catch? Something like below:\n            try {\n                Class<?> type = Class.forName(opc.type);\n                service.putOperation(type, opc.replace, contributor.getName().toString(), widgetDefinitionList);\n            } catch (ClassNotFoundException e) {\n                throw new IllegalArgumentException(\"Invalid operation class '\" + opc.type + \"': class not found.\");\n            } catch (OperationException e) {\n                throw new RuntimeException(e);\n            }", "author": "kevinleturc", "createdAt": "2020-08-06T13:27:38Z", "path": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java", "diffHunk": "@@ -135,21 +136,25 @@ public void registerContribution(Object contribution, String extensionPoint, Com\n                     widgetDefinitionList.add(widgetDescriptor.getWidgetDefinition());\n                 }\n             }\n+            Class<?> type;\n             try {\n-                service.putOperation(opc.type, opc.replace, contributor.getName().toString(), widgetDefinitionList);\n+                type = Class.forName(opc.type);\n+            } catch (ClassNotFoundException e) {\n+                throw new IllegalArgumentException(\"Invalid operation class '\" + opc.type + \"': class not found.\");\n+            }\n+            try {\n+                service.putOperation(type, opc.replace, contributor.getName().toString(), widgetDefinitionList);", "originalCommit": "b1da43408bff7ec1ecfe1524a542a5d3c57e126a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxODY1OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4241#discussion_r466418659", "bodyText": "will let the T&P go through like this first, and will make the change after", "author": "atchertchian", "createdAt": "2020-08-06T13:38:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMTE2MA=="}], "type": "inlineReview", "revised_code": {"commit": "b32609afd602099902c028adda6aac7eb889a6d5", "chunk": "diff --git a/modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java b/modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java\nindex de65de58b63..883e2c2b6c7 100644\n--- a/modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java\n+++ b/modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java\n\n@@ -139,11 +139,9 @@ public class AutomationComponent extends DefaultComponent {\n             Class<?> type;\n             try {\n                 type = Class.forName(opc.type);\n+                service.putOperation(type, opc.replace, contributor.getName().toString(), widgetDefinitionList);\n             } catch (ClassNotFoundException e) {\n                 throw new IllegalArgumentException(\"Invalid operation class '\" + opc.type + \"': class not found.\");\n-            }\n-            try {\n-                service.putOperation(type, opc.replace, contributor.getName().toString(), widgetDefinitionList);\n             } catch (OperationException e) {\n                 throw new RuntimeException(e);\n             }\n"}}, {"oid": "b32609afd602099902c028adda6aac7eb889a6d5", "url": "https://github.com/nuxeo/nuxeo/commit/b32609afd602099902c028adda6aac7eb889a6d5", "message": "NXP-29499: check operation references in chains after startup to avoid enforcing requirements at registration\n\nThis is needed to handle the scripting operations use case, and provides a better behaviour regarding compatibility.", "committedDate": "2020-08-07T07:24:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3NDY3NA==", "url": "https://github.com/nuxeo/nuxeo/pull/4241#discussion_r467074674", "bodyText": "Not sure you need this declaration outside the try/catch?", "author": "kevinleturc", "createdAt": "2020-08-07T14:25:56Z", "path": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java", "diffHunk": "@@ -135,21 +136,23 @@ public void registerContribution(Object contribution, String extensionPoint, Com\n                     widgetDefinitionList.add(widgetDescriptor.getWidgetDefinition());\n                 }\n             }\n+            Class<?> type;", "originalCommit": "b32609afd602099902c028adda6aac7eb889a6d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3NzUzOA==", "url": "https://github.com/nuxeo/nuxeo/pull/4241#discussion_r467077538", "bodyText": "indeed", "author": "atchertchian", "createdAt": "2020-08-07T14:30:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3NDY3NA=="}], "type": "inlineReview", "revised_code": {"commit": "391a70f916793e8b7ec38983a36e2f436246625b", "chunk": "diff --git a/modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java b/modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java\nindex 883e2c2b6c7..a657dd1388a 100644\n--- a/modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java\n+++ b/modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java\n\n@@ -136,9 +136,8 @@ public class AutomationComponent extends DefaultComponent {\n                     widgetDefinitionList.add(widgetDescriptor.getWidgetDefinition());\n                 }\n             }\n-            Class<?> type;\n             try {\n-                type = Class.forName(opc.type);\n+                Class<?> type = Class.forName(opc.type);\n                 service.putOperation(type, opc.replace, contributor.getName().toString(), widgetDefinitionList);\n             } catch (ClassNotFoundException e) {\n                 throw new IllegalArgumentException(\"Invalid operation class '\" + opc.type + \"': class not found.\");\n"}}, {"oid": "4c60e0c9573480d5615662fe92cd16a170e9d9a9", "url": "https://github.com/nuxeo/nuxeo/commit/4c60e0c9573480d5615662fe92cd16a170e9d9a9", "message": "NXP-29499: check operation references in chains after startup to avoid enforcing requirements at registration\n\nThis is needed to handle the scripting operations use case, and provides a better behaviour regarding compatibility.", "committedDate": "2020-08-07T15:18:32Z", "type": "forcePushed"}, {"oid": "391a70f916793e8b7ec38983a36e2f436246625b", "url": "https://github.com/nuxeo/nuxeo/commit/391a70f916793e8b7ec38983a36e2f436246625b", "message": "NXP-29499: cleanup easyshare runtime contributions (and remove JSF dependencies)", "committedDate": "2020-08-07T16:01:19Z", "type": "forcePushed"}, {"oid": "b447c139ea1c31463b7aeee0bf3fee2423f35b52", "url": "https://github.com/nuxeo/nuxeo/commit/b447c139ea1c31463b7aeee0bf3fee2423f35b52", "message": "NXP-29499: cleanup easyshare runtime contributions (and remove JSF dependencies)", "committedDate": "2020-08-08T07:24:43Z", "type": "forcePushed"}, {"oid": "aeb066ad95b1f64684f9d181ade854f22dca60b6", "url": "https://github.com/nuxeo/nuxeo/commit/aeb066ad95b1f64684f9d181ade854f22dca60b6", "message": "NXP-29499: fix error management on invalid operation/chain/codec registration", "committedDate": "2020-08-11T06:26:35Z", "type": "commit"}, {"oid": "b28ca1348fc51da401729df7a0fddf78977f3946", "url": "https://github.com/nuxeo/nuxeo/commit/b28ca1348fc51da401729df7a0fddf78977f3946", "message": "NXP-29499: make sure chain declarations are registered after operations that they reference", "committedDate": "2020-08-11T06:26:44Z", "type": "commit"}, {"oid": "a0a30ac9e473ea27fccbbe9a079703ebb116d99a", "url": "https://github.com/nuxeo/nuxeo/commit/a0a30ac9e473ea27fccbbe9a079703ebb116d99a", "message": "NXP-29499: adapt test contribs to registration changes", "committedDate": "2020-08-11T06:26:44Z", "type": "commit"}, {"oid": "d81c7028630bd1701e26889a3bf0f5a378c27e0b", "url": "https://github.com/nuxeo/nuxeo/commit/d81c7028630bd1701e26889a3bf0f5a378c27e0b", "message": "NXP-29499: check operation references in chains after startup to avoid enforcing requirements at registration\n\nThis is needed to handle the scripting operations use case, and provides a better behaviour regarding compatibility.", "committedDate": "2020-08-11T06:27:17Z", "type": "commit"}, {"oid": "1989eff00540726db5af4f7a32da6c9f7f0a03b8", "url": "https://github.com/nuxeo/nuxeo/commit/1989eff00540726db5af4f7a32da6c9f7f0a03b8", "message": "NXP-29499: cleanup easyshare runtime contributions (and remove JSF dependencies)", "committedDate": "2020-08-11T06:27:24Z", "type": "commit"}, {"oid": "1989eff00540726db5af4f7a32da6c9f7f0a03b8", "url": "https://github.com/nuxeo/nuxeo/commit/1989eff00540726db5af4f7a32da6c9f7f0a03b8", "message": "NXP-29499: cleanup easyshare runtime contributions (and remove JSF dependencies)", "committedDate": "2020-08-11T06:27:24Z", "type": "forcePushed"}]}