{"pr_number": 3858, "pr_title": "NXP-28799: remove CoreSession and DocumentModel session id", "pr_createdAt": "2020-03-24T15:39:45Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3858", "timeline": [{"oid": "324344957992b61bd6dbe39fd29a88097d063254", "url": "https://github.com/nuxeo/nuxeo/commit/324344957992b61bd6dbe39fd29a88097d063254", "message": "NXP-28799: remove CoreSession and DocumentModel session id (sid) WIP to squash", "committedDate": "2020-03-24T17:16:39Z", "type": "forcePushed"}, {"oid": "b3ddfe9dfa980d2bd4bfcf340b50ea388e5e6d6b", "url": "https://github.com/nuxeo/nuxeo/commit/b3ddfe9dfa980d2bd4bfcf340b50ea388e5e6d6b", "message": "remove CloseableCoreSession from tests (WIP)", "committedDate": "2020-03-25T02:52:39Z", "type": "forcePushed"}, {"oid": "18b084c8e0ace39bd73ce55ed7ef9ef94d109463", "url": "https://github.com/nuxeo/nuxeo/commit/18b084c8e0ace39bd73ce55ed7ef9ef94d109463", "message": "NXP-28799: remove CloseableCoreSession from tests", "committedDate": "2020-03-25T22:54:50Z", "type": "forcePushed"}, {"oid": "3e5d92336d2f544e0dc6732a65f73513c9fd21b4", "url": "https://github.com/nuxeo/nuxeo/commit/3e5d92336d2f544e0dc6732a65f73513c9fd21b4", "message": "NXP-28799: remove CloseableCoreSession from tests", "committedDate": "2020-03-26T01:15:56Z", "type": "forcePushed"}, {"oid": "d09261f66b008135217baa4465381b173a928b48", "url": "https://github.com/nuxeo/nuxeo/commit/d09261f66b008135217baa4465381b173a928b48", "message": "NXP-28799: remove usage of CloseableCoreSession", "committedDate": "2020-03-26T15:23:15Z", "type": "forcePushed"}, {"oid": "de835ec670be8484bb2ac1631cbe50a901a37f63", "url": "https://github.com/nuxeo/nuxeo/commit/de835ec670be8484bb2ac1631cbe50a901a37f63", "message": "NXP-28799: remove usage of CloseableCoreSession", "committedDate": "2020-03-26T22:19:39Z", "type": "forcePushed"}, {"oid": "ea8dc7f33c816229c07f713e100ff82128e76408", "url": "https://github.com/nuxeo/nuxeo/commit/ea8dc7f33c816229c07f713e100ff82128e76408", "message": "NXP-28799: remove usage of CloseableCoreSession", "committedDate": "2020-03-27T17:33:06Z", "type": "forcePushed"}, {"oid": "eb40044bcbf253302ffca1afe4157ac98979a97f", "url": "https://github.com/nuxeo/nuxeo/commit/eb40044bcbf253302ffca1afe4157ac98979a97f", "message": "NXP-28799: remove usage of CloseableCoreSession", "committedDate": "2020-03-30T11:06:50Z", "type": "forcePushed"}, {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a", "url": "https://github.com/nuxeo/nuxeo/commit/4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a", "message": "NXP-28799: remove usage of CloseableCoreSession", "committedDate": "2020-03-30T18:20:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxNDQ4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401614484", "bodyText": "If it's only for unit tests, shouldn't we move that method to test code, such as CoreFeature or something?\nDoes it make sense?", "author": "troger", "createdAt": "2020-04-01T13:28:26Z", "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreInstance.java", "diffHunk": "@@ -38,97 +38,145 @@\n     private CoreInstance() {\n     }\n \n+    /**\n+     * Gets a {@link CoreSession} for the currently logged-in user.\n+     *\n+     * @param repositoryName the repository name, or {@code null} for the default repository\n+     * @return the session\n+     * @since 11.1\n+     */\n+    public static CoreSession getCoreSession(String repositoryName) {\n+        return getCoreSession(repositoryName, getPrincipal(null));\n+    }\n+\n+    /**\n+     * MUST ONLY BE USED IN UNIT TESTS to get a {@link CoreSession} for the given user.", "originalCommit": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyOTE2Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403029162", "bodyText": "Yes this will have to be cleaned up in the future. For now I'm keeping it also because it's used by the deprecated openCoreSession signature that delegates to it.\nAlso there's still one non-unit-test use in the CMIS code that I need to review.", "author": "efge", "createdAt": "2020-04-03T14:04:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxNDQ4NA=="}], "type": "inlineReview", "revised_code": {"commit": "7eb8d717dd876f65f6510f126608ca68f673767b", "chunk": "diff --git a/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreInstance.java b/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreInstance.java\nindex 87e584d419e..f207f424420 100644\n--- a/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreInstance.java\n+++ b/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreInstance.java\n\n@@ -38,145 +38,97 @@ public class CoreInstance {\n     private CoreInstance() {\n     }\n \n-    /**\n-     * Gets a {@link CoreSession} for the currently logged-in user.\n-     *\n-     * @param repositoryName the repository name, or {@code null} for the default repository\n-     * @return the session\n-     * @since 11.1\n-     */\n-    public static CoreSession getCoreSession(String repositoryName) {\n-        return getCoreSession(repositoryName, getPrincipal(null));\n-    }\n-\n-    /**\n-     * MUST ONLY BE USED IN UNIT TESTS to get a {@link CoreSession} for the given user.\n-     *\n-     * @param repositoryName the repository name, or {@code null} for the default repository\n-     * @param username the user name\n-     * @return the session\n-     * @since 11.1\n-     */\n-    public static CoreSession getCoreSession(String repositoryName, String username) {\n-        return getCoreSession(repositoryName, getPrincipal(username));\n-    }\n-\n-    /**\n-     * Gets a {@link CoreSession} for a system user.\n-     *\n-     * @param repositoryName the repository name, or {@code null} for the default repository\n-     * @return the session\n-     * @since 11.1\n-     */\n-    public static CoreSession getCoreSessionSystem(String repositoryName) {\n-        return getCoreSession(repositoryName, new SystemPrincipal(null));\n-    }\n-\n-    /**\n-     * Gets a {@link CoreSession} for a system user with an optional originating username.\n-     *\n-     * @param repositoryName the repository name, or {@code null} for the default repository\n-     * @param originatingUsername the originating username to set on the SystemPrincipal\n-     * @return the session\n-     * @since 11.1\n-     */\n-    public static CoreSession getCoreSessionSystem(String repositoryName, String originatingUsername) {\n-        return getCoreSession(repositoryName, new SystemPrincipal(originatingUsername));\n-    }\n-\n-    /**\n-     * Gets a {@link CoreSession} for the given principal.\n-     *\n-     * @param repositoryName the repository name, or {@code null} for the default repository\n-     * @param principal the principal\n-     * @return the session\n-     * @since 11.1\n-     */\n-    public static CoreSession getCoreSession(String repositoryName, NuxeoPrincipal principal) {\n-        if (repositoryName == null) {\n-            RepositoryManager repositoryManager = Framework.getService(RepositoryManager.class);\n-            repositoryName = repositoryManager.getDefaultRepositoryName();\n-        }\n-        return Framework.getService(CoreSessionService.class).createCoreSession(repositoryName, principal);\n-    }\n-\n     /**\n      * Opens a {@link CoreSession} for the currently logged-in user.\n+     * <p>\n+     * The session must be closed using {@link CloseableCoreSession#close}.\n      *\n      * @param repositoryName the repository name, or {@code null} for the default repository\n      * @return the session\n      * @since 5.9.3\n-     * @deprecated since 11.1, use {@link #getCoreSession(String)} instead\n      */\n-    @Deprecated\n     public static CloseableCoreSession openCoreSession(String repositoryName) {\n-        return (CloseableCoreSession) getCoreSession(repositoryName);\n+        return openCoreSession(repositoryName, getPrincipal(null));\n     }\n \n     /**\n      * MUST ONLY BE USED IN UNIT TESTS to open a {@link CoreSession} for the given user.\n+     * <p>\n+     * The session must be closed using {@link CloseableCoreSession#close}.\n      *\n      * @param repositoryName the repository name, or {@code null} for the default repository\n      * @param username the user name\n      * @return the session\n      * @since 5.9.3\n-     * @deprecated since 11.1, use {@link #getCoreSession(String, String)} instead\n      */\n-    @Deprecated\n     public static CloseableCoreSession openCoreSession(String repositoryName, String username) {\n-        return (CloseableCoreSession) getCoreSession(repositoryName, username);\n+        return openCoreSession(repositoryName, getPrincipal(username));\n     }\n \n     /**\n      * Opens a {@link CoreSession} for a system user.\n+     * <p>\n+     * The session must be closed using {@link CloseableCoreSession#close}.\n      *\n      * @param repositoryName the repository name, or {@code null} for the default repository\n      * @return the session\n      * @since 5.9.3\n-     * @deprecated since 11.1, use {@link #getCoreSessionSystem(String)} instead\n      */\n-    @Deprecated\n     public static CloseableCoreSession openCoreSessionSystem(String repositoryName) {\n-        return (CloseableCoreSession) getCoreSessionSystem(repositoryName);\n+        return openCoreSession(repositoryName, new SystemPrincipal(null));\n     }\n \n     /**\n      * Opens a {@link CoreSession} for a system user with an optional originating username.\n+     * <p>\n+     * The session must be closed using {@link CloseableCoreSession#close}.\n      *\n      * @param repositoryName the repository name, or {@code null} for the default repository\n      * @param originatingUsername the originating username to set on the SystemPrincipal\n      * @return the session\n      * @since 8.1\n-     * @deprecated since 11.1, use {@link #getCoreSessionSystem(String, String)} instead\n      */\n-    @Deprecated\n     public static CloseableCoreSession openCoreSessionSystem(String repositoryName, String originatingUsername) {\n-        return (CloseableCoreSession) getCoreSessionSystem(repositoryName, originatingUsername);\n+        return openCoreSession(repositoryName, new SystemPrincipal(originatingUsername));\n     }\n \n     /**\n      * Opens a {@link CoreSession} for the given principal.\n+     * <p>\n+     * The session must be closed using {@link CloseableCoreSession#close}.\n      *\n      * @param repositoryName the repository name, or {@code null} for the default repository\n      * @param principal the principal\n      * @return the session\n      * @since 5.9.3\n-     * @deprecated since 11.1, use {@link #getCoreSession(String, NuxeoPrincipal)} instead\n      */\n-    @Deprecated\n     public static CloseableCoreSession openCoreSession(String repositoryName, NuxeoPrincipal principal) {\n-        return (CloseableCoreSession) getCoreSession(repositoryName, principal);\n+        if (repositoryName == null) {\n+            RepositoryManager repositoryManager = Framework.getService(RepositoryManager.class);\n+            repositoryName = repositoryManager.getDefaultRepositoryName();\n+        }\n+        return Framework.getService(CoreSessionService.class).createCoreSession(repositoryName, principal);\n+    }\n+\n+    /**\n+     * Gets an existing open session for the given session id.\n+     * <p>\n+     * The returned CoreSession must not be closed, as it is owned by someone else.\n+     *\n+     * @param sessionId the session id\n+     * @return the session, which must not be closed\n+     */\n+    public CoreSession getSession(String sessionId) {\n+        return Framework.getService(CoreSessionService.class).getCoreSession(sessionId);\n     }\n \n     /**\n-     * Does nothing.\n+     * Use {@link CloseableCoreSession#close} instead.\n      *\n      * @since 5.9.3\n-     * @deprecated since 11.1, does nothing\n      */\n-    @Deprecated\n     public static void closeCoreSession(CloseableCoreSession session) {\n-        // nothing (the session holds no resources to close)\n+        Framework.getService(CoreSessionService.class).releaseCoreSession(session);\n     }\n \n     protected static NuxeoPrincipal getPrincipal(String username) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxODkzMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401618930", "bodyText": "As the whole interface is deprecated, why removing the method?", "author": "troger", "createdAt": "2020-04-01T13:34:40Z", "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CloseableCoreSession.java", "diffHunk": "@@ -22,22 +22,18 @@\n  * Closeable Core Session.\n  *\n  * @since 10.1\n+ * @deprecated since 11.1, use just {@link CoreSession} instead\n  */\n+@Deprecated\n public interface CloseableCoreSession extends CoreSession, AutoCloseable {\n \n     /**\n-     * Closes this session.\n+     * Does nothing.\n      *\n      * @since 5.9.3\n+     * @deprecated since 11.1\n      */\n     @Override\n     void close();\n \n-    /**\n-     * Destroys any system resources held by this instance.\n-     * <p>\n-     * Called when the instance is no more needed.\n-     */\n-    void destroy();", "originalCommit": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzNTA4OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403035089", "bodyText": "Yes I'll keep it deprecated doing nothing.", "author": "efge", "createdAt": "2020-04-03T14:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxODkzMA=="}], "type": "inlineReview", "revised_code": {"commit": "7eb8d717dd876f65f6510f126608ca68f673767b", "chunk": "diff --git a/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CloseableCoreSession.java b/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CloseableCoreSession.java\nindex 03784ed135e..b64c9e7cece 100644\n--- a/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CloseableCoreSession.java\n+++ b/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CloseableCoreSession.java\n\n@@ -22,18 +22,22 @@ package org.nuxeo.ecm.core.api;\n  * Closeable Core Session.\n  *\n  * @since 10.1\n- * @deprecated since 11.1, use just {@link CoreSession} instead\n  */\n-@Deprecated\n public interface CloseableCoreSession extends CoreSession, AutoCloseable {\n \n     /**\n-     * Does nothing.\n+     * Closes this session.\n      *\n      * @since 5.9.3\n-     * @deprecated since 11.1\n      */\n     @Override\n     void close();\n \n+    /**\n+     * Destroys any system resources held by this instance.\n+     * <p>\n+     * Called when the instance is no more needed.\n+     */\n+    void destroy();\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxOTY5OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401619698", "bodyText": "Quick question, we are assuming that there is only one session (id) per user?", "author": "troger", "createdAt": "2020-04-01T13:35:44Z", "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/impl/DocumentModelImpl.java", "diffHunk": "@@ -320,7 +340,12 @@ public String getTitle() {\n \n     @Override\n     public String getSessionId() {\n-        return sid;\n+        return principal == null ? null : repositoryName + \"/\" + principal;", "originalCommit": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzNjQ2Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403036462", "bodyText": "There's as many CoreSession as we want per user but they don't hold any state anymore, so are all equivalent. The real state is held by the lower-level Session that is fetched through a ThreadLocal and cleaned up at transaction commit.", "author": "efge", "createdAt": "2020-04-03T14:15:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxOTY5OA=="}], "type": "inlineReview", "revised_code": {"commit": "7eb8d717dd876f65f6510f126608ca68f673767b", "chunk": "diff --git a/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/impl/DocumentModelImpl.java b/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/impl/DocumentModelImpl.java\nindex 79d39a9584e..bd3096f7e22 100644\n--- a/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/impl/DocumentModelImpl.java\n+++ b/modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/impl/DocumentModelImpl.java\n\n@@ -340,12 +320,7 @@ public class DocumentModelImpl implements DocumentModel, Cloneable {\n \n     @Override\n     public String getSessionId() {\n-        return principal == null ? null : repositoryName + \"/\" + principal;\n-    }\n-\n-    @Override\n-    public NuxeoPrincipal getPrincipal() {\n-        return principal;\n+        return sid;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNTE2Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401625163", "bodyText": "Worth adding a comment if there is any need to call getRootDocument?", "author": "troger", "createdAt": "2020-04-01T13:43:12Z", "path": "modules/core/nuxeo-core-management-jtajca/src/main/java/org/nuxeo/ecm/core/management/jtajca/internal/DefaultMonitorComponent.java", "diffHunk": "@@ -129,9 +129,8 @@ protected void install() {\n      * Make sure we open the repository, to initialize its connection manager.\n      */\n     protected void activateRepository(String repositoryName) {\n-        try (CloseableCoreSession session = CoreInstance.openCoreSessionSystem(repositoryName)) {\n-            // do nothing, just open and close\n-        }\n+        CoreSession session = CoreInstance.getCoreSessionSystem(repositoryName);\n+        session.getRootDocument();", "originalCommit": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzOTAxMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403039010", "bodyText": "Actually this method activateRepository is unused in our codebase, so I'll just deprecate it.", "author": "efge", "createdAt": "2020-04-03T14:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNTE2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7eb8d717dd876f65f6510f126608ca68f673767b", "chunk": "diff --git a/modules/core/nuxeo-core-management-jtajca/src/main/java/org/nuxeo/ecm/core/management/jtajca/internal/DefaultMonitorComponent.java b/modules/core/nuxeo-core-management-jtajca/src/main/java/org/nuxeo/ecm/core/management/jtajca/internal/DefaultMonitorComponent.java\nindex a11c374a2a2..b34be1b8b3d 100644\n--- a/modules/core/nuxeo-core-management-jtajca/src/main/java/org/nuxeo/ecm/core/management/jtajca/internal/DefaultMonitorComponent.java\n+++ b/modules/core/nuxeo-core-management-jtajca/src/main/java/org/nuxeo/ecm/core/management/jtajca/internal/DefaultMonitorComponent.java\n\n@@ -129,8 +129,9 @@ public class DefaultMonitorComponent extends DefaultComponent {\n      * Make sure we open the repository, to initialize its connection manager.\n      */\n     protected void activateRepository(String repositoryName) {\n-        CoreSession session = CoreInstance.getCoreSessionSystem(repositoryName);\n-        session.getRootDocument();\n+        try (CloseableCoreSession session = CoreInstance.openCoreSessionSystem(repositoryName)) {\n+            // do nothing, just open and close\n+        }\n     }\n \n     protected void uninstall() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0MDQyNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401640425", "bodyText": "I'm wondering, won't it be an issue? cc @bdelbosc", "author": "troger", "createdAt": "2020-04-01T14:03:32Z", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/commands/IndexingCommandsStacker.java", "diffHunk": "@@ -212,8 +212,7 @@ protected IndexingCommands getOrCreateCommands(DocumentModel doc) {\n     }\n \n     protected String getDocKey(DocumentModel doc) {\n-        // Don't merge commands with different session, so we work only on attached doc\n-        return doc.getId() + \"#\" + doc.getSessionId();\n+        return doc.getId();", "originalCommit": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0MDc1NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403040754", "bodyText": "I already discussed it with @bdelbosc and we agreed that given that indexing is only done for a single transaction at a time and there's a cleanup of the map for which this is used as the key at the end of the transaction. So not an issue.", "author": "efge", "createdAt": "2020-04-03T14:22:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0MDQyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7eb8d717dd876f65f6510f126608ca68f673767b", "chunk": "diff --git a/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/commands/IndexingCommandsStacker.java b/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/commands/IndexingCommandsStacker.java\nindex 8b4a13123fb..9232bccff5f 100644\n--- a/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/commands/IndexingCommandsStacker.java\n+++ b/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/commands/IndexingCommandsStacker.java\n\n@@ -212,7 +212,8 @@ public abstract class IndexingCommandsStacker {\n     }\n \n     protected String getDocKey(DocumentModel doc) {\n-        return doc.getId();\n+        // Don't merge commands with different session, so we work only on attached doc\n+        return doc.getId() + \"#\" + doc.getSessionId();\n     }\n \n }\n"}}, {"oid": "04a1dd9988de2791f952919661b9ecff46503599", "url": "https://github.com/nuxeo/nuxeo/commit/04a1dd9988de2791f952919661b9ecff46503599", "message": "NXP-28799: remove usage of CloseableCoreSession", "committedDate": "2020-04-03T01:21:23Z", "type": "forcePushed"}, {"oid": "7eb8d717dd876f65f6510f126608ca68f673767b", "url": "https://github.com/nuxeo/nuxeo/commit/7eb8d717dd876f65f6510f126608ca68f673767b", "message": "NXP-28799: add DocumentModel.getPrincipal", "committedDate": "2020-04-03T14:22:41Z", "type": "commit"}, {"oid": "60b085af3206ad0b411d7cd0b9ea84c5fdffe1eb", "url": "https://github.com/nuxeo/nuxeo/commit/60b085af3206ad0b411d7cd0b9ea84c5fdffe1eb", "message": "NXP-28799: remove metrics instance fields", "committedDate": "2020-04-03T14:22:41Z", "type": "commit"}, {"oid": "d5a517d9e1f8973c8c8eb660931f0ed723b3d067", "url": "https://github.com/nuxeo/nuxeo/commit/d5a517d9e1f8973c8c8eb660931f0ed723b3d067", "message": "NXP-28799: remove CoreSession and DocumentModel session id (sid)", "committedDate": "2020-04-03T14:22:42Z", "type": "commit"}, {"oid": "af64605849d03d883a11ddec8b62060c0b17f91f", "url": "https://github.com/nuxeo/nuxeo/commit/af64605849d03d883a11ddec8b62060c0b17f91f", "message": "NXP-28799: don't use deprecated constructors", "committedDate": "2020-04-03T14:22:42Z", "type": "commit"}, {"oid": "6bfa834499fb48bb2e2f8e3bbac5085f29d70ad6", "url": "https://github.com/nuxeo/nuxeo/commit/6bfa834499fb48bb2e2f8e3bbac5085f29d70ad6", "message": "NXP-28799: remove usage of CloseableCoreSession", "committedDate": "2020-04-03T14:22:42Z", "type": "commit"}, {"oid": "6bfa834499fb48bb2e2f8e3bbac5085f29d70ad6", "url": "https://github.com/nuxeo/nuxeo/commit/6bfa834499fb48bb2e2f8e3bbac5085f29d70ad6", "message": "NXP-28799: remove usage of CloseableCoreSession", "committedDate": "2020-04-03T14:22:42Z", "type": "forcePushed"}]}