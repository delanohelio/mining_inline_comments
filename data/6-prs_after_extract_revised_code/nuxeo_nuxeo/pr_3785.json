{"pr_number": 3785, "pr_title": "NXP-28558: disallow concurrent startup for scheduler service", "pr_createdAt": "2020-02-25T14:35:07Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3785", "timeline": [{"oid": "0d0dd60e5b3544b1589c8008a95809b8703ba740", "url": "https://github.com/nuxeo/nuxeo/commit/0d0dd60e5b3544b1589c8008a95809b8703ba740", "message": "NXP-28558: cosmit", "committedDate": "2020-02-25T14:08:19Z", "type": "commit"}, {"oid": "6d92aab3062a5329dbac86a21d8c29553c0c6bf0", "url": "https://github.com/nuxeo/nuxeo/commit/6d92aab3062a5329dbac86a21d8c29553c0c6bf0", "message": "NXP-28558: disallow concurrent startup for scheduler service", "committedDate": "2020-02-25T14:33:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5NjUwOQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3785#discussion_r384096509", "bodyText": "Third time we do the same code, WDYT about adding a method to ClusterService or a helper to retrieve the duration from a given Framework property name?\nOn 10.10 and 9.10, it could be on the ClusterLockHelper.", "author": "troger", "createdAt": "2020-02-25T20:04:33Z", "path": "nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java", "diffHunk": "@@ -139,11 +149,33 @@ public void deactivate(ComponentContext context) {\n \n     @Override\n     public void start(ComponentContext context) {\n+        startScheduler();\n+    }\n+\n+    protected void startScheduler() {\n+        ClusterService clusterService = Framework.getService(ClusterService.class);\n+        Duration duration;\n         try {\n-            setupScheduler();\n-        } catch (IOException | SchedulerException e) {\n-            throw new NuxeoException(e);\n+            String prop = Framework.getProperty(CLUSTER_START_DURATION_PROP);\n+            if (isBlank(prop)) {\n+                duration = Duration.ZERO;\n+            } else {\n+                duration = DurationUtils.parse(prop);\n+            }\n+        } catch (DateTimeParseException e) {\n+            duration = Duration.ZERO;\n+        }\n+        if (duration.isZero() || duration.isNegative()) {\n+            duration = Duration.ofMinutes(1);\n         }", "originalCommit": "6d92aab3062a5329dbac86a21d8c29553c0c6bf0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MjY0MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3785#discussion_r384152641", "bodyText": "How about I put it in DurationUtils instead?", "author": "efge", "createdAt": "2020-02-25T22:00:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5NjUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MTUzNw==", "url": "https://github.com/nuxeo/nuxeo/pull/3785#discussion_r384171537", "bodyText": "I pushed 2 more commits for this", "author": "efge", "createdAt": "2020-02-25T22:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5NjUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQwOTU5MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3785#discussion_r384409591", "bodyText": "Even better \ud83d\udc4d", "author": "troger", "createdAt": "2020-02-26T10:39:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5NjUwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "f9a32a78c0758bd6b41e374f5ae22dbfad123572", "chunk": "diff --git a/nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java b/nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java\nindex aaa7c560bcd..4699e3c69ec 100644\n--- a/nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java\n+++ b/nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java\n\n@@ -154,20 +154,8 @@ public class SchedulerServiceImpl extends DefaultComponent implements SchedulerS\n \n     protected void startScheduler() {\n         ClusterService clusterService = Framework.getService(ClusterService.class);\n-        Duration duration;\n-        try {\n-            String prop = Framework.getProperty(CLUSTER_START_DURATION_PROP);\n-            if (isBlank(prop)) {\n-                duration = Duration.ZERO;\n-            } else {\n-                duration = DurationUtils.parse(prop);\n-            }\n-        } catch (DateTimeParseException e) {\n-            duration = Duration.ZERO;\n-        }\n-        if (duration.isZero() || duration.isNegative()) {\n-            duration = Duration.ofMinutes(1);\n-        }\n+        String prop = Framework.getProperty(CLUSTER_START_DURATION_PROP);\n+        Duration duration = DurationUtils.parsePositive(prop, CLUSTER_START_DURATION_DEFAULT);\n         Duration pollDelay = Duration.ofSeconds(1);\n         clusterService.runAtomically(\"start-scheduler\", duration, pollDelay, () -> {\n             try {\n"}}, {"oid": "e5f8600c7f9e19bed7097845785a498fa100d5a5", "url": "https://github.com/nuxeo/nuxeo/commit/e5f8600c7f9e19bed7097845785a498fa100d5a5", "message": "NXP-28558: improve DurationUtils", "committedDate": "2020-02-25T22:38:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxOTk5NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3785#discussion_r384319994", "bodyText": "Is there an interest for static?", "author": "ataillefer", "createdAt": "2020-02-26T07:50:10Z", "path": "nuxeo-common/src/test/java/org/nuxeo/common/utils/TestDurationUtils.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Florent Guillaume\n+ */\n+package org.nuxeo.common.utils;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.time.Duration;\n+import java.time.format.DateTimeParseException;\n+\n+import org.junit.Test;\n+\n+public class TestDurationUtils {\n+\n+    protected static final Duration parse(String s) {", "originalCommit": "e5f8600c7f9e19bed7097845785a498fa100d5a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQxMjg4Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3785#discussion_r384412882", "bodyText": "It's an indirection for a static method... But I could go either way. I'll leave it as is though as it doesn't change the test.", "author": "efge", "createdAt": "2020-02-26T10:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxOTk5NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyODA5OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3785#discussion_r384328099", "bodyText": "It might be more clear to have 1 as a constant: since there is no default for org.nuxeo.scheduler.cluster.start.duration, most of the time it is this default parameter of DurationUtils#parsePositive that will be used.\nThough it's the caller's responsibility to set the timeout, as we are always using 1 minute, it could be in DurationUtils:\npublic static final long DURATION_DEFAULT_1_M = 1;", "author": "ataillefer", "createdAt": "2020-02-26T08:11:11Z", "path": "nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java", "diffHunk": "@@ -154,20 +151,8 @@ public void start(ComponentContext context) {\n \n     protected void startScheduler() {\n         ClusterService clusterService = Framework.getService(ClusterService.class);\n-        Duration duration;\n-        try {\n-            String prop = Framework.getProperty(CLUSTER_START_DURATION_PROP);\n-            if (isBlank(prop)) {\n-                duration = Duration.ZERO;\n-            } else {\n-                duration = DurationUtils.parse(prop);\n-            }\n-        } catch (DateTimeParseException e) {\n-            duration = Duration.ZERO;\n-        }\n-        if (duration.isZero() || duration.isNegative()) {\n-            duration = Duration.ofMinutes(1);\n-        }\n+        String prop = Framework.getProperty(CLUSTER_START_DURATION_PROP);\n+        Duration duration = DurationUtils.parsePositive(prop, Duration.ofMinutes(1));", "originalCommit": "df6a94a2aac591050c62fde2e5777c161c3e5d21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQxNTI0OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3785#discussion_r384415248", "bodyText": "Ok for a constant but I don't want to push it to DurationUtils itself, I think it's too low level to have any responsibility in the default value.", "author": "efge", "createdAt": "2020-02-26T10:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyODA5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f9a32a78c0758bd6b41e374f5ae22dbfad123572", "chunk": "diff --git a/nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java b/nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java\nindex a71b2c23096..4699e3c69ec 100644\n--- a/nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java\n+++ b/nuxeo-core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/scheduler/SchedulerServiceImpl.java\n\n@@ -152,7 +155,7 @@ public class SchedulerServiceImpl extends DefaultComponent implements SchedulerS\n     protected void startScheduler() {\n         ClusterService clusterService = Framework.getService(ClusterService.class);\n         String prop = Framework.getProperty(CLUSTER_START_DURATION_PROP);\n-        Duration duration = DurationUtils.parsePositive(prop, Duration.ofMinutes(1));\n+        Duration duration = DurationUtils.parsePositive(prop, CLUSTER_START_DURATION_DEFAULT);\n         Duration pollDelay = Duration.ofSeconds(1);\n         clusterService.runAtomically(\"start-scheduler\", duration, pollDelay, () -> {\n             try {\n"}}, {"oid": "f9a32a78c0758bd6b41e374f5ae22dbfad123572", "url": "https://github.com/nuxeo/nuxeo/commit/f9a32a78c0758bd6b41e374f5ae22dbfad123572", "message": "NXP-28558: use DurationUtils.parsePositive", "committedDate": "2020-02-26T10:52:14Z", "type": "commit"}, {"oid": "f9a32a78c0758bd6b41e374f5ae22dbfad123572", "url": "https://github.com/nuxeo/nuxeo/commit/f9a32a78c0758bd6b41e374f5ae22dbfad123572", "message": "NXP-28558: use DurationUtils.parsePositive", "committedDate": "2020-02-26T10:52:14Z", "type": "forcePushed"}]}