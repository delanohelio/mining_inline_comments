{"pr_number": 4272, "pr_title": "NXP-29573 runtime errors/warnings tracking", "pr_createdAt": "2020-08-25T06:27:05Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4272", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQwNTk4Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r476405983", "bodyText": "To remove?", "author": "kevinleturc", "createdAt": "2020-08-25T12:22:28Z", "path": "modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java", "diffHunk": "@@ -20,12 +20,16 @@\n package org.nuxeo.ecm.core.schema;\n \n import org.nuxeo.runtime.RuntimeMessage.Level;\n+import org.nuxeo.runtime.RuntimeMessage.Source;\n import org.nuxeo.runtime.RuntimeServiceException;\n import org.nuxeo.runtime.logging.DeprecationLogger;\n import org.nuxeo.runtime.model.ComponentContext;\n import org.nuxeo.runtime.model.ComponentInstance;\n+import org.nuxeo.runtime.model.ComponentName;\n import org.nuxeo.runtime.model.DefaultComponent;\n \n+import jnr.ffi.Struct.socklen_t;", "originalCommit": "0ce2f522bcf83d8fd4a9d6a6e8707456b8f3b1a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1NDc1Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r476454752", "bodyText": "oops \ud83d\udc4d", "author": "atchertchian", "createdAt": "2020-08-25T13:38:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQwNTk4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6daaf613396c1fbe5625119515b11935e0d3ad0a", "chunk": "diff --git a/modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java b/modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java\nindex 11cc1418c50..6214356742c 100644\n--- a/modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java\n+++ b/modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java\n\n@@ -28,8 +28,6 @@ import org.nuxeo.runtime.model.ComponentInstance;\n import org.nuxeo.runtime.model.ComponentName;\n import org.nuxeo.runtime.model.DefaultComponent;\n \n-import jnr.ffi.Struct.socklen_t;\n-\n /**\n  * The TypeService is the component dealing with registration of schemas and document types (and facets and prefetch\n  * configuration).\n"}}, {"oid": "6daaf613396c1fbe5625119515b11935e0d3ad0a", "url": "https://github.com/nuxeo/nuxeo/commit/6daaf613396c1fbe5625119515b11935e0d3ad0a", "message": "NXP-29573: reset only bundle/component/extension runtime messages on hot reload", "committedDate": "2020-08-25T13:39:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQxMjY5Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r476412693", "bodyText": "Spurious import", "author": "efge", "createdAt": "2020-08-25T12:34:29Z", "path": "modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java", "diffHunk": "@@ -20,12 +20,16 @@\n package org.nuxeo.ecm.core.schema;\n \n import org.nuxeo.runtime.RuntimeMessage.Level;\n+import org.nuxeo.runtime.RuntimeMessage.Source;\n import org.nuxeo.runtime.RuntimeServiceException;\n import org.nuxeo.runtime.logging.DeprecationLogger;\n import org.nuxeo.runtime.model.ComponentContext;\n import org.nuxeo.runtime.model.ComponentInstance;\n+import org.nuxeo.runtime.model.ComponentName;\n import org.nuxeo.runtime.model.DefaultComponent;\n \n+import jnr.ffi.Struct.socklen_t;", "originalCommit": "7f481653b2d46cd6d85806ed0f3228f330328539", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ5NTI4OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r476495289", "bodyText": "Thanks, already fixed (spotted by Kevin above too)", "author": "atchertchian", "createdAt": "2020-08-25T14:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQxMjY5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6daaf613396c1fbe5625119515b11935e0d3ad0a", "chunk": "diff --git a/modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java b/modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java\nindex 11cc1418c50..6214356742c 100644\n--- a/modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java\n+++ b/modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java\n\n@@ -28,8 +28,6 @@ import org.nuxeo.runtime.model.ComponentInstance;\n import org.nuxeo.runtime.model.ComponentName;\n import org.nuxeo.runtime.model.DefaultComponent;\n \n-import jnr.ffi.Struct.socklen_t;\n-\n /**\n  * The TypeService is the component dealing with registration of schemas and document types (and facets and prefetch\n  * configuration).\n"}}, {"oid": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0", "url": "https://github.com/nuxeo/nuxeo/commit/c9e0770002ed355adc4c0599d8d01ec9ecb458b0", "message": "NXP-29573: remove now useless RuntimeMessageHandler#addMessage(level, message) newly added API", "committedDate": "2020-08-27T16:57:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMzE2OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479433168", "bodyText": "Could we deprecate this constructor?\nFurthermore, can we pass CODE as source and this class name as sourceId to avoid future check on these fields due to deprecation?", "author": "kevinleturc", "createdAt": "2020-08-28T17:11:31Z", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/RuntimeMessage.java", "diffHunk": "@@ -32,9 +32,19 @@\n \n     protected final String message;\n \n-    public RuntimeMessage(Level level, String message) {\n+    protected final Source source;\n+\n+    protected final String sourceId;\n+\n+    public RuntimeMessage(Level level, String message, Source source, String sourceId) {\n         this.level = level;\n         this.message = message;\n+        this.source = source;\n+        this.sourceId = sourceId;\n+    }\n+\n+    public RuntimeMessage(Level level, String message) {\n+        this(level, message, null, null);", "originalCommit": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk1MTA3OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479951079", "bodyText": "I removed the constructor since it was introduced recently.\nI added an unknown source and fallback values for getters to avoid dealing with null values.", "author": "atchertchian", "createdAt": "2020-08-31T07:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMzE2OA=="}], "type": "inlineReview", "revised_code": {"commit": "d329ce45a68e088fc278aedc6cafc89f343e0110", "chunk": "diff --git a/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/RuntimeMessage.java b/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/RuntimeMessage.java\nindex 2dae6499f30..44d8a23958b 100644\n--- a/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/RuntimeMessage.java\n+++ b/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/RuntimeMessage.java\n\n@@ -43,10 +43,6 @@ public class RuntimeMessage {\n         this.sourceId = sourceId;\n     }\n \n-    public RuntimeMessage(Level level, String message) {\n-        this(level, message, null, null);\n-    }\n-\n     public Level getLevel() {\n         return level;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMzQxOA==", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479433418", "bodyText": "Extra line.", "author": "kevinleturc", "createdAt": "2020-08-28T17:12:01Z", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java", "diffHunk": "@@ -131,6 +134,7 @@ public synchronized void start() {\n         try {\n             loadConfig();\n         } catch (IOException e) {\n+", "originalCommit": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "79630f3c3d72906a3f88cdeac960cd9357b24f9c", "chunk": "diff --git a/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java b/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java\nindex 5ae68672607..a86510f5628 100644\n--- a/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java\n+++ b/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java\n\n@@ -134,7 +131,6 @@ public abstract class AbstractRuntimeService implements RuntimeService {\n         try {\n             loadConfig();\n         } catch (IOException e) {\n-\n             throw new RuntimeServiceException(e);\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzNDM4OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479434388", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                      org.nuxeo.runtime.RuntimeMessage.Level.ERROR, err, Source.DEPLOYMENT, null)));\n          \n          \n            \n                                      RuntimeMessage.Level.ERROR, err, Source.DEPLOYMENT, \"org.nuxeo.runtime.deployment.preprocessor.DeploymentPreprocessor\")));\n          \n      \n    \n    \n  \n\n?", "author": "kevinleturc", "createdAt": "2020-08-28T17:14:01Z", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java", "diffHunk": "@@ -99,7 +100,9 @@ protected AbstractRuntimeService(DefaultRuntimeContext context, Map<String, Stri\n         // get errors set by NuxeoDeployer\n         String errs = System.getProperty(\"org.nuxeo.runtime.deployment.errors\");\n         if (errs != null) {\n-            Arrays.asList(errs.split(\"\\n\")).forEach(err -> messageHandler.addMessage(RuntimeMessage.Level.ERROR, err));\n+            Arrays.asList(errs.split(\"\\n\"))\n+                  .forEach(err -> messageHandler.addMessage(new RuntimeMessage(\n+                          org.nuxeo.runtime.RuntimeMessage.Level.ERROR, err, Source.DEPLOYMENT, null)));", "originalCommit": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "79630f3c3d72906a3f88cdeac960cd9357b24f9c", "chunk": "diff --git a/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java b/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java\nindex 5ae68672607..a86510f5628 100644\n--- a/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java\n+++ b/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java\n\n@@ -100,9 +99,7 @@ public abstract class AbstractRuntimeService implements RuntimeService {\n         // get errors set by NuxeoDeployer\n         String errs = System.getProperty(\"org.nuxeo.runtime.deployment.errors\");\n         if (errs != null) {\n-            Arrays.asList(errs.split(\"\\n\"))\n-                  .forEach(err -> messageHandler.addMessage(new RuntimeMessage(\n-                          org.nuxeo.runtime.RuntimeMessage.Level.ERROR, err, Source.DEPLOYMENT, null)));\n+            Arrays.asList(errs.split(\"\\n\")).forEach(err -> messageHandler.addMessage(RuntimeMessage.Level.ERROR, err));\n             System.clearProperty(\"org.nuxeo.runtime.deployment.errors\");\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzNTE0MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479435141", "bodyText": "Why not giving just the Source?", "author": "kevinleturc", "createdAt": "2020-08-28T17:15:32Z", "path": "modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/RuntimeInitializationTest.java", "diffHunk": "@@ -53,13 +56,26 @@ public void testContributions() {\n \n     protected void checkDupe(boolean detected) {\n         List<String> errors = Framework.getRuntime().getMessageHandler().getMessages(Level.ERROR);\n+        List<RuntimeMessage> errorMessages = Framework.getRuntime().getMessageHandler().getRuntimeMessages(Level.ERROR);\n         if (detected) {\n             assertEquals(List.of(\"Duplicate component name: service:my.comp2\"), errors);\n+            assertEquals(List.of(Source.COMPONENT),\n+                    errorMessages.stream().map(RuntimeMessage::getSource).collect(Collectors.toList()));\n+            assertEquals(List.of(\"my.comp2\"),\n+                    errorMessages.stream().map(RuntimeMessage::getSourceId).collect(Collectors.toList()));\n         } else {\n             assertTrue(errors.isEmpty());\n         }\n     }\n \n+    protected void checkErrorSource(boolean fromExtension) {", "originalCommit": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "79630f3c3d72906a3f88cdeac960cd9357b24f9c", "chunk": "diff --git a/modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/RuntimeInitializationTest.java b/modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/RuntimeInitializationTest.java\nindex c79c9abf48d..849dd9ba8d9 100644\n--- a/modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/RuntimeInitializationTest.java\n+++ b/modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/RuntimeInitializationTest.java\n\n@@ -56,26 +53,13 @@ public class RuntimeInitializationTest {\n \n     protected void checkDupe(boolean detected) {\n         List<String> errors = Framework.getRuntime().getMessageHandler().getMessages(Level.ERROR);\n-        List<RuntimeMessage> errorMessages = Framework.getRuntime().getMessageHandler().getRuntimeMessages(Level.ERROR);\n         if (detected) {\n             assertEquals(List.of(\"Duplicate component name: service:my.comp2\"), errors);\n-            assertEquals(List.of(Source.COMPONENT),\n-                    errorMessages.stream().map(RuntimeMessage::getSource).collect(Collectors.toList()));\n-            assertEquals(List.of(\"my.comp2\"),\n-                    errorMessages.stream().map(RuntimeMessage::getSourceId).collect(Collectors.toList()));\n         } else {\n             assertTrue(errors.isEmpty());\n         }\n     }\n \n-    protected void checkErrorSource(boolean fromExtension) {\n-        List<RuntimeMessage> errors = Framework.getRuntime().getMessageHandler().getRuntimeMessages(Level.ERROR);\n-        assertFalse(errors.isEmpty());\n-        Source source = fromExtension ? Source.EXTENSION : Source.COMPONENT;\n-        errors.forEach(e -> assertEquals(source, e.getSource()));\n-        errors.forEach(e -> assertEquals(\"invalid.comp\", e.getSourceId()));\n-    }\n-\n     @Test\n     @Deploy(\"org.nuxeo.runtime.test.tests:MyComp1.xml\")\n     @Deploy(\"org.nuxeo.runtime.test.tests:MyComp2.xml\")\n"}}, {"oid": "79630f3c3d72906a3f88cdeac960cd9357b24f9c", "url": "https://github.com/nuxeo/nuxeo/commit/79630f3c3d72906a3f88cdeac960cd9357b24f9c", "message": "NXP-29573: add a source and source id to runtime messages", "committedDate": "2020-08-31T07:33:47Z", "type": "commit"}, {"oid": "8f8f10ba6663a7586de59378c248afffeb2c61e3", "url": "https://github.com/nuxeo/nuxeo/commit/8f8f10ba6663a7586de59378c248afffeb2c61e3", "message": "NXP-29573: fill source and source id on runtime messages", "committedDate": "2020-08-31T07:35:48Z", "type": "commit"}, {"oid": "fd2044515b4431e79412e249a0b96b53d1235711", "url": "https://github.com/nuxeo/nuxeo/commit/fd2044515b4431e79412e249a0b96b53d1235711", "message": "NXP-29573: track originating extension for some contributions registration", "committedDate": "2020-08-31T07:35:50Z", "type": "commit"}, {"oid": "991bf7f53ceb27cb86c463e3d15d681453b2f13f", "url": "https://github.com/nuxeo/nuxeo/commit/991bf7f53ceb27cb86c463e3d15d681453b2f13f", "message": "NXP-29573: reset only bundle/component/extension runtime messages on hot reload", "committedDate": "2020-08-31T07:35:50Z", "type": "commit"}, {"oid": "d329ce45a68e088fc278aedc6cafc89f343e0110", "url": "https://github.com/nuxeo/nuxeo/commit/d329ce45a68e088fc278aedc6cafc89f343e0110", "message": "NXP-29573: remove now useless RuntimeMessageHandler#addMessage(level, message) newly added API\n\nIntroduces an unknown source and fallback values for source and source id, to avoid null values.", "committedDate": "2020-08-31T07:35:50Z", "type": "commit"}, {"oid": "d329ce45a68e088fc278aedc6cafc89f343e0110", "url": "https://github.com/nuxeo/nuxeo/commit/d329ce45a68e088fc278aedc6cafc89f343e0110", "message": "NXP-29573: remove now useless RuntimeMessageHandler#addMessage(level, message) newly added API\n\nIntroduces an unknown source and fallback values for source and source id, to avoid null values.", "committedDate": "2020-08-31T07:35:50Z", "type": "forcePushed"}]}