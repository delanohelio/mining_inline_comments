{"pr_number": 4155, "pr_title": "fix-NXP-29171-task-update-with-group-assignees", "pr_createdAt": "2020-06-15T19:39:27Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4155", "timeline": [{"oid": "398fa04bf3558f1d6f81d7919e116def1b4a28f5", "url": "https://github.com/nuxeo/nuxeo/commit/398fa04bf3558f1d6f81d7919e116def1b4a28f5", "message": "NXP-29171: Fix fetched properties unmarshalling", "committedDate": "2020-06-16T08:56:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2ODAwMA==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r441668000", "bodyText": "Can we use e::getMessage instead?", "author": "efge", "createdAt": "2020-06-17T16:19:13Z", "path": "modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java", "diffHunk": "@@ -199,14 +205,17 @@ private Object getScalarPropertyValue(Property property, JsonNode jn, Type type)\n                         return blob.getString();\n                     }\n                 }\n-                log.info(\"Unable to parse the property {}\", property::getXPath);\n-                return null;\n+                throw new MarshallingException(\"Unable to parse the property \" +  property.getXPath());\n             }\n             Object object = null;\n             for (Class<?> clazz : resolver.getManagedClasses()) {\n-                object = readEntity(clazz, clazz, jn);\n-                if (object != null) {\n-                    break;\n+                try {\n+                    object = readEntity(clazz, clazz, jn);\n+                    if (object != null) {\n+                        break;\n+                    }\n+                } catch (Exception e) {\n+                    log.info(\"Unable to read the entity - {}\", e.getMessage(), e);", "originalCommit": "398fa04bf3558f1d6f81d7919e116def1b4a28f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzNjI3NA==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r442836274", "bodyText": "AFAIK there's no API allowing to mix Supplier and throwable. Regarding the Javadoc Supplier seems to be for parameters only.\nOtherwise, the following is correct:\nlog.info(() -> String.format(\"Unable to read the entity - %s\", e.getMessage()), e);\nDon't really know if it's beneficial regarding verbosity and code reading, wdyt?", "author": "kevinleturc", "createdAt": "2020-06-19T13:20:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2ODAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NjE2MA==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r442866160", "bodyText": "Ah yes I always forget if it's valid or not. No then keep your old code, it doesn't matter for an INFO message that will have to be generated to go to Datadog anyway.", "author": "efge", "createdAt": "2020-06-19T14:16:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2ODAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQzMDg1Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r443430856", "bodyText": "We could also do the following, we have some occurrences in the code:\nlog.info(\"Unable to read the entity - {}\", e::getMessage, () -> e);", "author": "ataillefer", "createdAt": "2020-06-22T09:27:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2ODAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQzMzA3Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r443433077", "bodyText": "Didn't know that, many thanks. Let's do that!", "author": "kevinleturc", "createdAt": "2020-06-22T09:31:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2ODAwMA=="}], "type": "inlineReview", "revised_code": {"commit": "edc03b0aa7c6bcca6f532b0f07baf11d29bd1b09", "chunk": "diff --git a/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java b/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java\nindex ff4dfe74da3..8d178c9df3b 100644\n--- a/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java\n+++ b/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java\n\n@@ -214,7 +215,7 @@ public class DocumentPropertiesJsonReader extends AbstractJsonReader<List<Proper\n                     if (object != null) {\n                         break;\n                     }\n-                } catch (Exception e) {\n+                } catch (MarshallingException e) {\n                     log.info(\"Unable to read the entity - {}\", e.getMessage(), e);\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNDI5NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r441704295", "bodyText": "Shouldn't we want to handle InterruptedException and so on here? @efge?\nBut what about just catching IOException in fact?", "author": "troger", "createdAt": "2020-06-17T17:19:22Z", "path": "modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java", "diffHunk": "@@ -200,14 +205,17 @@ private Object getScalarPropertyValue(Property property, JsonNode jn, Type type)\n                         return blob.getString();\n                     }\n                 }\n-                log.info(\"Unable to parse the property {}\", property::getXPath);\n-                return null;\n+                throw new MarshallingException(\"Unable to parse the property \" +  property.getXPath());\n             }\n             Object object = null;\n             for (Class<?> clazz : resolver.getManagedClasses()) {\n-                object = readEntity(clazz, clazz, jn);\n-                if (object != null) {\n-                    break;\n+                try {\n+                    object = readEntity(clazz, clazz, jn);\n+                    if (object != null) {\n+                        break;\n+                    }\n+                } catch (Exception e) {", "originalCommit": "398fa04bf3558f1d6f81d7919e116def1b4a28f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MDQzMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r441750431", "bodyText": "Yes I made a comment about this in the 10.10 PR as I was wondering if throwing instead of returning null was really backportable and if this was related too this catch. Any more specific exception than Exception would be better.", "author": "efge", "createdAt": "2020-06-17T18:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNDI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1OTk0OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r442859949", "bodyText": "We've changed the Exception type to catch to MarshallingException as it's all that we want..", "author": "kevinleturc", "createdAt": "2020-06-19T14:04:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNDI5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "edc03b0aa7c6bcca6f532b0f07baf11d29bd1b09", "chunk": "diff --git a/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java b/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java\nindex ff4dfe74da3..8d178c9df3b 100644\n--- a/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java\n+++ b/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java\n\n@@ -214,7 +215,7 @@ public class DocumentPropertiesJsonReader extends AbstractJsonReader<List<Proper\n                     if (object != null) {\n                         break;\n                     }\n-                } catch (Exception e) {\n+                } catch (MarshallingException e) {\n                     log.info(\"Unable to read the entity - {}\", e.getMessage(), e);\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNDUyNA==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r441704524", "bodyText": "@since.", "author": "troger", "createdAt": "2020-06-17T17:19:46Z", "path": "modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java", "diffHunk": "@@ -93,6 +92,8 @@\n \n     public static final String DEFAULT_SCHEMA_NAME = \"DEFAULT_SCHEMA_NAME\";\n \n+    public static final String FALLBACK_RESOLVER = \"resolver.\";", "originalCommit": "398fa04bf3558f1d6f81d7919e116def1b4a28f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edc03b0aa7c6bcca6f532b0f07baf11d29bd1b09", "chunk": "diff --git a/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java b/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java\nindex ff4dfe74da3..8d178c9df3b 100644\n--- a/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java\n+++ b/modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/document/DocumentPropertiesJsonReader.java\n\n@@ -92,6 +92,7 @@ public class DocumentPropertiesJsonReader extends AbstractJsonReader<List<Proper\n \n     public static final String DEFAULT_SCHEMA_NAME = \"DEFAULT_SCHEMA_NAME\";\n \n+    /** @since 11.2 */\n     public static final String FALLBACK_RESOLVER = \"resolver.\";\n \n     @Inject\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwODE3Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r441708176", "bodyText": "Is there any check we can add to validate that the assignees is administrators?", "author": "troger", "createdAt": "2020-06-17T17:25:59Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java", "diffHunk": "@@ -1396,6 +1404,45 @@ public void testRejectTaskInSubWorkflow() throws IOException {\n \n     }\n \n+    /*\n+     * NXP-29171\n+     */\n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.restapi.server.routing.test:test-specific-task-request-unmarshalling.xml\")\n+    public void testSpecificTaskRequestWithFetchedGroup() throws IOException {\n+        DocumentModel note = RestServerInit.getNote(0, session);\n+\n+        // create workflow as Administrator\n+        String workflowInstanceId;\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"/workflow\",\n+                getCreateAndStartWorkflowBodyContent(\"confirm\", singletonList(note.getId())))) {\n+            assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatus());\n+\n+            JsonNode node = mapper.readTree(response.getEntityInputStream());\n+            workflowInstanceId = node.get(\"id\").textValue();\n+        }\n+\n+        // get tasks for child WF\n+        String taskId;\n+        try (CloseableClientResponse response = getResponse(RequestType.GET,\n+                \"/id/\" + note.getId() + \"/@\" + WorkflowAdapter.NAME + \"/\" + workflowInstanceId + \"/task\")) {\n+            JsonNode node = mapper.readTree(response.getEntityInputStream());\n+            assertEquals(1, node.get(\"entries\").size());\n+            taskId = node.get(\"entries\").get(0).get(\"id\").textValue();\n+        }\n+\n+        NuxeoGroup group = userManager.getGroup(\"administrators\");\n+\n+        String groupJson = MarshallerHelper.objectToJson(group, RenderingContext.CtxBuilder.get());\n+        String body = String.format(\"{\\\"entity-type\\\":\\\"task\\\", \\\"id\\\":\\\"%s\\\", \\\"variables\\\":{\\\"assignees\\\":[%s]}}\",\n+                taskId, groupJson);\n+        // assign it with a fetched entity\n+        try (CloseableClientResponse response = getResponse(RequestType.PUT, \"/task/\" + taskId + \"/confirm\", body)) {\n+            assertEquals(Response.Status.OK.getStatusCode(), response.getStatus());", "originalCommit": "398fa04bf3558f1d6f81d7919e116def1b4a28f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0MDM4Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r442840387", "bodyText": "Of course, good idea \ud83d\udc4d", "author": "kevinleturc", "createdAt": "2020-06-19T13:28:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwODE3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "edc03b0aa7c6bcca6f532b0f07baf11d29bd1b09", "chunk": "diff --git a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java\nindex aad6e64c315..b483e979ef3 100644\n--- a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java\n+++ b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java\n\n@@ -1439,6 +1439,19 @@ public class WorkflowEndpointTest extends RoutingRestBaseTest {\n         // assign it with a fetched entity\n         try (CloseableClientResponse response = getResponse(RequestType.PUT, \"/task/\" + taskId + \"/confirm\", body)) {\n             assertEquals(Response.Status.OK.getStatusCode(), response.getStatus());\n+\n+            JsonNode node = mapper.readTree(response.getEntityInputStream());\n+\n+            JsonNode nodeVariables = node.get(\"variables\");\n+            assertNotNull(nodeVariables);\n+\n+            JsonNode nodeAssignees = nodeVariables.get(\"assignees\");\n+            assertNotNull(nodeAssignees);\n+            assertTrue(nodeAssignees.isArray());\n+\n+            ArrayNode arrayAssignees = (ArrayNode) nodeAssignees;\n+            assertEquals(\"Number of assignees is wrong\", 1, arrayAssignees.size());\n+            assertEquals(\"group:administrators\", arrayAssignees.get(0).textValue());\n         }\n \n     }\n"}}, {"oid": "edc03b0aa7c6bcca6f532b0f07baf11d29bd1b09", "url": "https://github.com/nuxeo/nuxeo/commit/edc03b0aa7c6bcca6f532b0f07baf11d29bd1b09", "message": "NXP-29171: Fix fetched properties unmarshalling", "committedDate": "2020-06-19T13:40:01Z", "type": "forcePushed"}, {"oid": "511b80a6276d800ccfaba516af29989b1ea25035", "url": "https://github.com/nuxeo/nuxeo/commit/511b80a6276d800ccfaba516af29989b1ea25035", "message": "NXP-29171: Fix fetched properties unmarshalling", "committedDate": "2020-06-22T09:32:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQzNDUwNA==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r443434504", "bodyText": "Format commit?", "author": "ataillefer", "createdAt": "2020-06-22T09:34:09Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java", "diffHunk": "@@ -425,7 +432,7 @@ public void testTerminateTaskPermissions()  throws IOException {\n         try (CloseableClientResponse response = getResponse(RequestType.GET, \"/id/\" + note.getId(), headers)) {\n             JsonNode node = mapper.readTree(response.getEntityInputStream());\n             ArrayNode runnableWorkflowModels = (ArrayNode) node.get(RestConstants.CONTRIBUTOR_CTX_PARAMETERS)\n-                    .get(RunnableWorkflowJsonEnricher.NAME);\n+                                                               .get(RunnableWorkflowJsonEnricher.NAME);", "originalCommit": "511b80a6276d800ccfaba516af29989b1ea25035", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQzNDYwOA==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r443434608", "bodyText": "Format commit?", "author": "ataillefer", "createdAt": "2020-06-22T09:34:20Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java", "diffHunk": "@@ -1099,8 +1106,8 @@ public void testWorkflowCleanUp() throws Exception {\n      */\n     @Test\n     public void testWorkflowCleanUpDisabling() throws Exception {\n-        Framework.getProperties().put(DocumentRoutingWorkflowInstancesCleanup.CLEANUP_WORKFLOW_INSTANCES_PROPERTY,\n-                \"true\");\n+        Framework.getProperties()\n+                 .put(DocumentRoutingWorkflowInstancesCleanup.CLEANUP_WORKFLOW_INSTANCES_PROPERTY, \"true\");", "originalCommit": "511b80a6276d800ccfaba516af29989b1ea25035", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQzNDgzMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4155#discussion_r443434831", "bodyText": "Format commit?", "author": "ataillefer", "createdAt": "2020-06-22T09:34:42Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java", "diffHunk": "@@ -1151,9 +1158,10 @@ public void testTaskWithoutWorkflowInstance() throws IOException {\n         DocumentModel note = RestServerInit.getNote(0, session);\n \n         // Create a task not related to a workflow instance\n-        List<Task> tasks = Framework.getService(TaskService.class).createTask(session,\n-                session.getPrincipal(), note, \"testNoWorkflowTask\",\n-                singletonList(\"user:Administrator\"), false, null, null, null, Collections.emptyMap(), null);\n+        List<Task> tasks = Framework.getService(TaskService.class)\n+                                    .createTask(session, session.getPrincipal(), note, \"testNoWorkflowTask\",\n+                                            singletonList(\"user:Administrator\"), false, null, null, null,\n+                                            Collections.emptyMap(), null);", "originalCommit": "511b80a6276d800ccfaba516af29989b1ea25035", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "cee7520c97bae61cc312c3cdab46251268d5b83f", "url": "https://github.com/nuxeo/nuxeo/commit/cee7520c97bae61cc312c3cdab46251268d5b83f", "message": "NXP-29171: Cleanup / Format", "committedDate": "2020-06-23T12:26:18Z", "type": "commit"}, {"oid": "a0a26c05f733a440d8af898ed9cadbeede2efaf0", "url": "https://github.com/nuxeo/nuxeo/commit/a0a26c05f733a440d8af898ed9cadbeede2efaf0", "message": "NXP-29171: Fix fetched properties unmarshalling", "committedDate": "2020-06-23T12:26:24Z", "type": "commit"}, {"oid": "a0a26c05f733a440d8af898ed9cadbeede2efaf0", "url": "https://github.com/nuxeo/nuxeo/commit/a0a26c05f733a440d8af898ed9cadbeede2efaf0", "message": "NXP-29171: Fix fetched properties unmarshalling", "committedDate": "2020-06-23T12:26:24Z", "type": "forcePushed"}]}