{"pr_number": 3687, "pr_title": "feature-NXP-28537-upgrade-dependencies", "pr_createdAt": "2020-01-22T18:23:00Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3687", "timeline": [{"oid": "ea7ef3b42e28847728d73ab4aaa13f6615ff8fd4", "url": "https://github.com/nuxeo/nuxeo/commit/ea7ef3b42e28847728d73ab4aaa13f6615ff8fd4", "message": "NXP-28537: upgrade various dependencies", "committedDate": "2020-01-22T14:29:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2MDgxMw==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369760813", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // bad badding\n          \n          \n            \n                    // bad padding", "author": "ataillefer", "createdAt": "2020-01-22T19:33:29Z", "path": "nuxeo-common/src/test/java/org/nuxeo/common/codec/CryptoTest.java", "diffHunk": "@@ -98,18 +98,22 @@ public void testDecryptionFailSilently() throws Exception {\n         assertFalse(Crypto.isEncrypted(\"\"));\n         assertFalse(Crypto.isEncrypted(\"{$$}\"));\n \n+        // bad padding\n         String encryptedString = \"{$$xoWODkBtRXnsdzIBdosUFA==}\";\n         String decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // last block FB== is not valid (B is not a possible value)\n         encryptedString = \"{$$xoWODkCtRXnSuqIBdosUFB==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // illegal block size\n         encryptedString = \"{$REVTL0VDQi9QS0NTNVBhZGRpbmc=$w/wCDLXoGsasskNaEpMt0wg==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // bad badding", "originalCommit": "df975063024e49cadbd45202264031a192b33e10", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5f57f666a95722fb259906d635190bd1841af476", "chunk": "diff --git a/nuxeo-common/src/test/java/org/nuxeo/common/codec/CryptoTest.java b/nuxeo-common/src/test/java/org/nuxeo/common/codec/CryptoTest.java\nindex 244e78ae001..65b8d06f10a 100644\n--- a/nuxeo-common/src/test/java/org/nuxeo/common/codec/CryptoTest.java\n+++ b/nuxeo-common/src/test/java/org/nuxeo/common/codec/CryptoTest.java\n\n@@ -113,7 +113,7 @@ public class CryptoTest {\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n-        // bad badding\n+        // bad padding\n         encryptedString = \"{$REVTL0VDQi9QS0NTNVBhZGRpbmc=$w/wCDLXoG5VFkNbEpMt0wg==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2MjExNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369762114", "bodyText": "What's the point of logging the beginning of the content?", "author": "ataillefer", "createdAt": "2020-01-22T19:36:25Z", "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/impl/AbstractDocumentModelWriter.java", "diffHunk": "@@ -382,7 +383,18 @@ private static Object getElementData(ExportedDocument xdoc, Element element, Typ\n                 }\n                 if (blob == null) { // maybe the blob is embedded in Base64\n                     // encoded data\n-                    byte[] bytes = Base64.decodeBase64(content);\n+                    byte[] bytes;\n+                    try {\n+                        bytes = Base64.decodeBase64(content);\n+                    } catch (IllegalArgumentException e) {\n+                        // example invalid base64: fd7b9e4.blob\n+                        if (log.isDebugEnabled()) {\n+                            log.warn(\"Invalid blob base64 in document: \" + xdoc.getId() + \": \" + StringUtils.abbreviate(content, 50));", "originalCommit": "df975063024e49cadbd45202264031a192b33e10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3MzE5MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369773190", "bodyText": "It allows for better debugging, to find out where the invalid content comes from.", "author": "efge", "createdAt": "2020-01-22T19:59:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2MjExNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2Mjg2Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369762867", "bodyText": "Isn't false the default value?\nAnd why this change? Maybe add a comment to explain the semantics.", "author": "ataillefer", "createdAt": "2020-01-22T19:38:02Z", "path": "nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/transform/BaseExport.java", "diffHunk": "@@ -36,7 +36,7 @@\n \n     String uuid;\n \n-    protected boolean skipBlobs = true;\n+    protected boolean skipBlobs = false;", "originalCommit": "df975063024e49cadbd45202264031a192b33e10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3NTU3Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369775572", "bodyText": "I'm leaving the false for emphasis, although nothing ever changes it in the rest of the tests (maybe some code was removed at some point). Adding the following comment to explain:\n // don't skip blobs because otherwise when reimporting documents the\n // \"data\" field is interpreted as (invalid) base64 instead of a filename", "author": "efge", "createdAt": "2020-01-22T20:04:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2Mjg2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5f57f666a95722fb259906d635190bd1841af476", "chunk": "diff --git a/nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/transform/BaseExport.java b/nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/transform/BaseExport.java\nindex 164be32e36b..4f5ee659c8d 100644\n--- a/nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/transform/BaseExport.java\n+++ b/nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/transform/BaseExport.java\n\n@@ -36,6 +36,8 @@ public class BaseExport {\n \n     String uuid;\n \n+    // don't skip blobs because otherwise when reimporting documents the\n+    // \"data\" field is interpreted as (invalid) base64 instead of a filename\n     protected boolean skipBlobs = false;\n \n     public static final String IODIR = \"NX-Export-Import\";\n"}}, {"oid": "5f57f666a95722fb259906d635190bd1841af476", "url": "https://github.com/nuxeo/nuxeo/commit/5f57f666a95722fb259906d635190bd1841af476", "message": "NXP-28537: upgrade commons-codec", "committedDate": "2020-01-22T20:05:04Z", "type": "commit"}, {"oid": "c951666abb28c32cbd38ca8ffa48b054e421f00f", "url": "https://github.com/nuxeo/nuxeo/commit/c951666abb28c32cbd38ca8ffa48b054e421f00f", "message": "NXP-28537: upgrade javax.mail", "committedDate": "2020-01-22T20:05:04Z", "type": "commit"}, {"oid": "c951666abb28c32cbd38ca8ffa48b054e421f00f", "url": "https://github.com/nuxeo/nuxeo/commit/c951666abb28c32cbd38ca8ffa48b054e421f00f", "message": "NXP-28537: upgrade javax.mail", "committedDate": "2020-01-22T20:05:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyNzk2Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369827966", "bodyText": "Why doing several bad padding cases ? Maybe the answer should be in the comments ?\nHow about extracting the error message in a local variable ?", "author": "NourNuxeo", "createdAt": "2020-01-22T22:01:19Z", "path": "nuxeo-common/src/test/java/org/nuxeo/common/codec/CryptoTest.java", "diffHunk": "@@ -98,18 +98,22 @@ public void testDecryptionFailSilently() throws Exception {\n         assertFalse(Crypto.isEncrypted(\"\"));\n         assertFalse(Crypto.isEncrypted(\"{$$}\"));\n \n+        // bad padding\n         String encryptedString = \"{$$xoWODkBtRXnsdzIBdosUFA==}\";\n         String decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // last block FB== is not valid (B is not a possible value)\n         encryptedString = \"{$$xoWODkCtRXnSuqIBdosUFB==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // illegal block size\n         encryptedString = \"{$REVTL0VDQi9QS0NTNVBhZGRpbmc=$w/wCDLXoGsasskNaEpMt0wg==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // bad padding\n         encryptedString = \"{$REVTL0VDQi9QS0NTNVBhZGRpbmc=$w/wCDLXoG5VFkNbEpMt0wg==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);", "originalCommit": "5f57f666a95722fb259906d635190bd1841af476", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzMTQyMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369831420", "bodyText": "These are not my tests, I just added a small bit of doc about the error cases while resolving a related issue.\nAlso this is a test, putting common error messages in variables or constants doesn't bring anything. In tests it's ok to repeat things sometimes.", "author": "efge", "createdAt": "2020-01-22T22:09:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyNzk2Ng=="}], "type": "inlineReview", "revised_code": null}]}