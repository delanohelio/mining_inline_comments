{"pr_number": 4417, "pr_title": "Fix NXP-29699 by returning 400-class error on bad queries", "pr_createdAt": "2020-10-28T09:49:48Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4417", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2MzY4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513563684", "bodyText": "Space after ,", "author": "efge", "createdAt": "2020-10-28T15:59:15Z", "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/NXQLQueryMaker.java", "diffHunk": "@@ -1101,7 +1101,7 @@ public void visitFromClause(FromClause node) {\n                 }\n                 Set<String> subTypes = model.getDocumentSubTypes(typeName);\n                 if (subTypes == null) {\n-                    throw new QueryParseException(\"Unknown type: \" + typeName);\n+                    throw new QueryParseException(\"Unknown type: \" + typeName,SC_BAD_REQUEST);", "originalCommit": "68b0c7ef4192d88cfb9081f6604e07ebefc4af80", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b89ac93bf2974af0ab326521b94b23ef1cb4c392", "chunk": "diff --git a/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/NXQLQueryMaker.java b/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/NXQLQueryMaker.java\nindex d092931c022..b88ff553055 100644\n--- a/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/NXQLQueryMaker.java\n+++ b/modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/NXQLQueryMaker.java\n\n@@ -1101,7 +1099,7 @@ public class NXQLQueryMaker implements QueryMaker {\n                 }\n                 Set<String> subTypes = model.getDocumentSubTypes(typeName);\n                 if (subTypes == null) {\n-                    throw new QueryParseException(\"Unknown type: \" + typeName,SC_BAD_REQUEST);\n+                    throw new QueryParseException(\"Unknown type: \" + typeName);\n                 }\n                 fromTypes.addAll(subTypes);\n                 boolean isRelation = false;\n"}}, {"oid": "b89ac93bf2974af0ab326521b94b23ef1cb4c392", "url": "https://github.com/nuxeo/nuxeo/commit/b89ac93bf2974af0ab326521b94b23ef1cb4c392", "message": "Fix NXP-29699 by returning 400-class error on bad queries", "committedDate": "2020-10-28T16:13:16Z", "type": "forcePushed"}, {"oid": "2feb3b345210ba2cea85072002e470bc8b8f2639", "url": "https://github.com/nuxeo/nuxeo/commit/2feb3b345210ba2cea85072002e470bc8b8f2639", "message": "Fix NXP-29699 by returning 400-class error on bad queries", "committedDate": "2020-10-28T16:14:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODQ2NA==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513578464", "bodyText": "Formatter should put static imports before regular ones.", "author": "efge", "createdAt": "2020-10-28T16:17:35Z", "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -22,6 +22,7 @@\n package org.nuxeo.ecm.core.query;\n \n import org.nuxeo.ecm.core.api.NuxeoException;\n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "originalCommit": "2feb3b345210ba2cea85072002e470bc8b8f2639", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8fa7a82e8a170780eb1170c825915c5d6e4f1551", "chunk": "diff --git a/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java b/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\nindex 0554b0dd67c..73c6ede2177 100644\n--- a/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\n+++ b/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\n\n@@ -21,9 +21,10 @@\n \n package org.nuxeo.ecm.core.query;\n \n-import org.nuxeo.ecm.core.api.NuxeoException;\n import static org.apache.http.HttpStatus.SC_BAD_REQUEST;\n \n+import org.nuxeo.ecm.core.api.NuxeoException;\n+\n /**\n  * @author <a href=\"mailto:bs@nuxeo.com\">Bogdan Stefanescu</a>\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODY1MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513578651", "bodyText": "Ok but all other super calls in other constructors should do the same", "author": "efge", "createdAt": "2020-10-28T16:17:51Z", "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -34,7 +35,7 @@ public QueryParseException() {\n     }\n \n     public QueryParseException(String message) {\n-        super(message);\n+        super(message, SC_BAD_REQUEST);", "originalCommit": "2feb3b345210ba2cea85072002e470bc8b8f2639", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "98c7fcf9d51b4f48697cac12a68165b790308ecd", "chunk": "diff --git a/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java b/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\nindex 0554b0dd67c..1f9ae3879f9 100644\n--- a/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\n+++ b/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\n\n@@ -39,11 +39,11 @@ public class QueryParseException extends NuxeoException {\n     }\n \n     public QueryParseException(String message, Throwable cause) {\n-        super(message, cause);\n+        super(message, cause, SC_BAD_REQUEST);\n     }\n \n     public QueryParseException(Throwable cause) {\n-        super(cause);\n+        super(cause, SC_BAD_REQUEST);\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODg0Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513578843", "bodyText": "All changes in this class not needed after the constructor changes are done.", "author": "efge", "createdAt": "2020-10-28T16:18:09Z", "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/JDBCMapper.java", "diffHunk": "@@ -428,7 +430,7 @@ public IterableQueryResult queryAndFetch(String query, String queryType, QueryFi\n         try {\n             return new ResultSetQueryResult(queryMaker, query, queryFilter, pathResolver, this, params);\n         } catch (SQLException e) {\n-            throw new NuxeoException(\"Invalid query: \" + queryType + \": \" + query, e);\n+            throw new NuxeoException(\"Invalid query: \" + queryType + \": \" + query, e, SC_BAD_REQUEST);", "originalCommit": "2feb3b345210ba2cea85072002e470bc8b8f2639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3OTE2MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513579161", "bodyText": "Hm sorry forget about this, I was wrong.", "author": "efge", "createdAt": "2020-10-28T16:18:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU4MDQ2Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513580463", "bodyText": "It's a NuxeoException not a QueryParseException, so by default it throws a 500 status code if not precised otherwise.", "author": "charlesboidot", "createdAt": "2020-10-28T16:20:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODg0Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "98c7fcf9d51b4f48697cac12a68165b790308ecd", "url": "https://github.com/nuxeo/nuxeo/commit/98c7fcf9d51b4f48697cac12a68165b790308ecd", "message": "Fix NXP-29699 by returning 400-class error on bad queries", "committedDate": "2020-10-28T16:21:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI0NDY5MA==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r514244690", "bodyText": "This one should call super(SC_BAD_REQUEST);", "author": "kevinleturc", "createdAt": "2020-10-29T13:09:20Z", "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -34,15 +35,15 @@ public QueryParseException() {\n     }", "originalCommit": "98c7fcf9d51b4f48697cac12a68165b790308ecd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8fa7a82e8a170780eb1170c825915c5d6e4f1551", "chunk": "diff --git a/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java b/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\nindex 1f9ae3879f9..73c6ede2177 100644\n--- a/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\n+++ b/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\n\n@@ -32,6 +33,7 @@ public class QueryParseException extends NuxeoException {\n     private static final long serialVersionUID = 1L;\n \n     public QueryParseException() {\n+        super(SC_BAD_REQUEST);\n     }\n \n     public QueryParseException(String message) {\n"}}, {"oid": "8fa7a82e8a170780eb1170c825915c5d6e4f1551", "url": "https://github.com/nuxeo/nuxeo/commit/8fa7a82e8a170780eb1170c825915c5d6e4f1551", "message": "Fix NXP-29699 by returning 400-class error on bad queries", "committedDate": "2020-10-29T13:16:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r514340281", "bodyText": "What about using javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST like what we did in other Exception such as DocumentNotFoundException or ConcurrentUpdateException?\nSame for other status code.", "author": "troger", "createdAt": "2020-10-29T15:16:18Z", "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n package org.nuxeo.ecm.core.query;\n \n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "originalCommit": "8fa7a82e8a170780eb1170c825915c5d6e4f1551", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAwNDQ4OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515004488", "bodyText": "I used the same SC_BAD_REQUEST as the PR here", "author": "charlesboidot", "createdAt": "2020-10-30T10:35:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAyMTAyMw==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515021023", "bodyText": "Oh well, ok ...\n@efge shouldn't we want to align on javax.servlet.http.HttpServletResponse instead of relying on org.apache.httpcomponents:httpcore for those constants?", "author": "troger", "createdAt": "2020-10-30T11:08:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIwNjY0OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515206649", "bodyText": "@troger that would be a possible cleanup yes but I'd say the benefit is very low. We don't plan on removing HttpComponents from our dependencies anytime soon anyway.", "author": "efge", "createdAt": "2020-10-30T16:01:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIwNzE1NA==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515207154", "bodyText": "On the other hand for new code it's worth using standard-based classes so javax.servlet.http.HttpServletResponse is slightly better", "author": "efge", "createdAt": "2020-10-30T16:02:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIwODQwMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515208401", "bodyText": "@charlesboidot if you're not tired of doing iterations on this PR you could change the import yes, otherwise forget it", "author": "efge", "createdAt": "2020-10-30T16:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyMTM4OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515221389", "bodyText": "It's ok I'll change it", "author": "charlesboidot", "createdAt": "2020-10-30T16:26:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "eac0a77549ca429c10620c8e84b221cc620327e2", "chunk": "diff --git a/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java b/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\nindex 73c6ede2177..fb2a4625d00 100644\n--- a/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\n+++ b/modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java\n\n@@ -21,7 +21,7 @@\n \n package org.nuxeo.ecm.core.query;\n \n-import static org.apache.http.HttpStatus.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n \n import org.nuxeo.ecm.core.api.NuxeoException;\n \n"}}, {"oid": "eac0a77549ca429c10620c8e84b221cc620327e2", "url": "https://github.com/nuxeo/nuxeo/commit/eac0a77549ca429c10620c8e84b221cc620327e2", "message": "Fix NXP-29699 by returning 400-class error on bad queries", "committedDate": "2020-10-30T16:23:54Z", "type": "commit"}, {"oid": "eac0a77549ca429c10620c8e84b221cc620327e2", "url": "https://github.com/nuxeo/nuxeo/commit/eac0a77549ca429c10620c8e84b221cc620327e2", "message": "Fix NXP-29699 by returning 400-class error on bad queries", "committedDate": "2020-10-30T16:23:54Z", "type": "forcePushed"}]}