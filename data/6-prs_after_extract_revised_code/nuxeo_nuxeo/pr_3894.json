{"pr_number": 3894, "pr_title": "feature-NXP-28604-Prevent-replace-content-of-document-stored-in-S3-Glacier", "pr_createdAt": "2020-04-06T17:59:18Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3894", "timeline": [{"oid": "294e6560a026a9ea83467873b112306cb7fe317e", "url": "https://github.com/nuxeo/nuxeo/commit/294e6560a026a9ea83467873b112306cb7fe317e", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage", "committedDate": "2020-04-07T12:45:01Z", "type": "forcePushed"}, {"oid": "4a628e8a653096139a08429ca873bf8074f708a2", "url": "https://github.com/nuxeo/nuxeo/commit/4a628e8a653096139a08429ca873bf8074f708a2", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage", "committedDate": "2020-04-07T12:47:03Z", "type": "forcePushed"}, {"oid": "e152f8a21a40fdc4346ce8e14ebf63b72aeb6373", "url": "https://github.com/nuxeo/nuxeo/commit/e152f8a21a40fdc4346ce8e14ebf63b72aeb6373", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage", "committedDate": "2020-04-07T13:13:10Z", "type": "forcePushed"}, {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68", "url": "https://github.com/nuxeo/nuxeo/commit/f9128ed424f8002e9f671e0d364072b884ce0a68", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage", "committedDate": "2020-04-07T13:19:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MjAxMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405352011", "bodyText": "You could use document instead of its id to log more information.", "author": "ataillefer", "createdAt": "2020-04-08T08:35:07Z", "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.core.coldstorage;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_FORBIDDEN;\n+\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.event.CoreEventConstants;\n+import org.nuxeo.ecm.core.api.model.Property;\n+import org.nuxeo.ecm.core.blob.ColdStorageHelper;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventContext;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.core.schema.FacetNames;\n+\n+/**\n+ * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n+ * \n+ * @since 11.1\n+ */\n+public class CheckUpdateMainContentInColdStorage implements EventListener {\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        EventContext eventContext = event.getContext();\n+        if (!(eventContext instanceof DocumentEventContext)) {\n+            return;\n+        }\n+\n+        DocumentModel previousDocument = (DocumentModel) eventContext.getProperty(\n+                CoreEventConstants.PREVIOUS_DOCUMENT_MODEL);\n+        if (previousDocument.hasFacet(FacetNames.COLD_STORAGE)) {\n+            if (previousDocument.getPropertyValue(ColdStorageHelper.COLD_STORAGE_CONTENT_PROPERTY) != null) {\n+                DocumentModel document = ((DocumentEventContext) eventContext).getSourceDocument();\n+                Property mainContent = document.getProperty(ColdStorageHelper.FILE_CONTENT_PROPERTY);\n+                if (mainContent.isDirty()) {\n+                    // mark the event to bubble the exception, which results on a TX rollback\n+                    event.markBubbleException();\n+                    throw new NuxeoException(String.format(\n+                            \"The main content of document: %s cannot be updated. It's already in cold storage.\",\n+                            document.getId()), SC_FORBIDDEN);", "originalCommit": "f9128ed424f8002e9f671e0d364072b884ce0a68", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a730be05e395fcea5ab92dfca797081ec20b302", "chunk": "diff --git a/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java b/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java\nindex c7b14c5876e..2e852563b2e 100644\n--- a/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java\n+++ b/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java\n\n@@ -57,7 +57,7 @@ public class CheckUpdateMainContentInColdStorage implements EventListener {\n                     event.markBubbleException();\n                     throw new NuxeoException(String.format(\n                             \"The main content of document: %s cannot be updated. It's already in cold storage.\",\n-                            document.getId()), SC_FORBIDDEN);\n+                            document), SC_FORBIDDEN);\n                 }\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1Mjk5Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405352993", "bodyText": "Don't we want to use DocumentModel#refresh now @efge ?", "author": "ataillefer", "createdAt": "2020-04-08T08:36:44Z", "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java", "diffHunk": "@@ -244,6 +244,43 @@ public void shouldCheckAvailability() {\n         checkAvailabilityOfDocuments(Arrays.asList(documents.get(1), documents.get(2)), downloadableUntil, 0);\n     }\n \n+    @Test\n+    public void shouldFailUpdateMainContentAlreadyInColdStorage() throws IOException {\n+        // move the main content into the cold storage\n+        DocumentModel documentModel = createFileDocument(DEFAULT_DOC_NAME, true);\n+        moveAndVerifyContent(session, documentModel);\n+\n+        // we cannot update the main content as it is already in cold storage\n+        documentModel = session.getDocument(documentModel.getRef());", "originalCommit": "f9128ed424f8002e9f671e0d364072b884ce0a68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ0OTY5OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405449698", "bodyText": "Yes it's shorter and more explicit but no big deal.", "author": "efge", "createdAt": "2020-04-08T11:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1Mjk5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "1a730be05e395fcea5ab92dfca797081ec20b302", "chunk": "diff --git a/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java b/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\nindex 2dea7d1b6cc..fc0f868f74e 100644\n--- a/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\n+++ b/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\n\n@@ -251,7 +251,7 @@ public class TestColdStorage {\n         moveAndVerifyContent(session, documentModel);\n \n         // we cannot update the main content as it is already in cold storage\n-        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.refresh();\n         documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n                 (Serializable) Blobs.createBlob(FILE_CONTENT));\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzM4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405353384", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // but we should be able to update the others properties even the attachments\n          \n          \n            \n                    // but we should be able to update the other properties, even the attachments", "author": "ataillefer", "createdAt": "2020-04-08T08:37:26Z", "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java", "diffHunk": "@@ -244,6 +244,43 @@ public void shouldCheckAvailability() {\n         checkAvailabilityOfDocuments(Arrays.asList(documents.get(1), documents.get(2)), downloadableUntil, 0);\n     }\n \n+    @Test\n+    public void shouldFailUpdateMainContentAlreadyInColdStorage() throws IOException {\n+        // move the main content into the cold storage\n+        DocumentModel documentModel = createFileDocument(DEFAULT_DOC_NAME, true);\n+        moveAndVerifyContent(session, documentModel);\n+\n+        // we cannot update the main content as it is already in cold storage\n+        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n+                (Serializable) Blobs.createBlob(FILE_CONTENT));\n+        try {\n+            session.saveDocument(documentModel);\n+            fail(\"Should fail because a main content document in cold storage cannot be updated.\");\n+        } catch (NuxeoException e) {\n+            assertEquals(SC_FORBIDDEN, e.getStatusCode());\n+            assertEquals(\n+                    String.format(\"The main content of document: %s cannot be updated. It's already in cold storage.\",\n+                            documentModel.getId()),\n+                    e.getMessage());\n+        }\n+\n+        // but we should be able to update the others properties even the attachments", "originalCommit": "f9128ed424f8002e9f671e0d364072b884ce0a68", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a730be05e395fcea5ab92dfca797081ec20b302", "chunk": "diff --git a/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java b/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\nindex 2dea7d1b6cc..fc0f868f74e 100644\n--- a/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\n+++ b/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\n\n@@ -251,7 +251,7 @@ public class TestColdStorage {\n         moveAndVerifyContent(session, documentModel);\n \n         // we cannot update the main content as it is already in cold storage\n-        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.refresh();\n         documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n                 (Serializable) Blobs.createBlob(FILE_CONTENT));\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzYzNw==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405353637", "bodyText": "not necessary I believe", "author": "ataillefer", "createdAt": "2020-04-08T08:37:50Z", "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java", "diffHunk": "@@ -244,6 +244,43 @@ public void shouldCheckAvailability() {\n         checkAvailabilityOfDocuments(Arrays.asList(documents.get(1), documents.get(2)), downloadableUntil, 0);\n     }\n \n+    @Test\n+    public void shouldFailUpdateMainContentAlreadyInColdStorage() throws IOException {\n+        // move the main content into the cold storage\n+        DocumentModel documentModel = createFileDocument(DEFAULT_DOC_NAME, true);\n+        moveAndVerifyContent(session, documentModel);\n+\n+        // we cannot update the main content as it is already in cold storage\n+        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n+                (Serializable) Blobs.createBlob(FILE_CONTENT));\n+        try {\n+            session.saveDocument(documentModel);\n+            fail(\"Should fail because a main content document in cold storage cannot be updated.\");\n+        } catch (NuxeoException e) {\n+            assertEquals(SC_FORBIDDEN, e.getStatusCode());\n+            assertEquals(\n+                    String.format(\"The main content of document: %s cannot be updated. It's already in cold storage.\",\n+                            documentModel.getId()),\n+                    e.getMessage());\n+        }\n+\n+        // but we should be able to update the others properties even the attachments\n+        documentModel = session.getDocument(documentModel.getRef());", "originalCommit": "f9128ed424f8002e9f671e0d364072b884ce0a68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM2NzUzOA==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405367538", "bodyText": "the reload of the document is needed otherwise my test fail, because before this part of the test I tried to update the blob, if i don't reload it i will find myself with a document contains the new blob.", "author": "RSalem07", "createdAt": "2020-04-08T08:59:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzYzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM2OTk4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405369984", "bodyText": "but we can use refresh instead of the getDocument", "author": "RSalem07", "createdAt": "2020-04-08T09:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzYzNw=="}], "type": "inlineReview", "revised_code": {"commit": "1a730be05e395fcea5ab92dfca797081ec20b302", "chunk": "diff --git a/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java b/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\nindex 2dea7d1b6cc..fc0f868f74e 100644\n--- a/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\n+++ b/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\n\n@@ -251,7 +251,7 @@ public class TestColdStorage {\n         moveAndVerifyContent(session, documentModel);\n \n         // we cannot update the main content as it is already in cold storage\n-        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.refresh();\n         documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n                 (Serializable) Blobs.createBlob(FILE_CONTENT));\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NjEwNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405356104", "bodyText": "Could we use CollecitonUtils.isEqualCollection here?", "author": "ataillefer", "createdAt": "2020-04-08T08:41:36Z", "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java", "diffHunk": "@@ -244,6 +244,43 @@ public void shouldCheckAvailability() {\n         checkAvailabilityOfDocuments(Arrays.asList(documents.get(1), documents.get(2)), downloadableUntil, 0);\n     }\n \n+    @Test\n+    public void shouldFailUpdateMainContentAlreadyInColdStorage() throws IOException {\n+        // move the main content into the cold storage\n+        DocumentModel documentModel = createFileDocument(DEFAULT_DOC_NAME, true);\n+        moveAndVerifyContent(session, documentModel);\n+\n+        // we cannot update the main content as it is already in cold storage\n+        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n+                (Serializable) Blobs.createBlob(FILE_CONTENT));\n+        try {\n+            session.saveDocument(documentModel);\n+            fail(\"Should fail because a main content document in cold storage cannot be updated.\");\n+        } catch (NuxeoException e) {\n+            assertEquals(SC_FORBIDDEN, e.getStatusCode());\n+            assertEquals(\n+                    String.format(\"The main content of document: %s cannot be updated. It's already in cold storage.\",\n+                            documentModel.getId()),\n+                    e.getMessage());\n+        }\n+\n+        // but we should be able to update the others properties even the attachments\n+        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.setPropertyValue(\"dc:title\", \"I update the title\");\n+        documentModel.setPropertyValue(\"dc:description\", \"I add a description\");\n+        var attachments = List.of(Map.of(\"file\", Blobs.createBlob(\"bar\", \"text/plain\")));\n+        documentModel.setPropertyValue(\"files:files\", (Serializable) attachments);\n+\n+        documentModel = session.saveDocument(documentModel);\n+        assertEquals(\"I update the title\", documentModel.getPropertyValue(\"dc:title\"));\n+        assertEquals(\"I add a description\", documentModel.getPropertyValue(\"dc:description\"));\n+        attachments = (List<Map<String, Blob>>) documentModel.getPropertyValue(\"files:files\");\n+        assertEquals(1, attachments.size());", "originalCommit": "f9128ed424f8002e9f671e0d364072b884ce0a68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3NDU2OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405374569", "bodyText": "yep \ud83d\udc4d and i tried using directly the org.junit.Assert#assertEquals(java.lang.Object, java.lang.Object) and it works fine. if you agree i can use it.", "author": "RSalem07", "createdAt": "2020-04-08T09:09:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NjEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM4NDYxNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405384614", "bodyText": "I would suggest using CollectionUtils otherwise we're relying on the equals method of the asserted object. This could not work as expected, in our case, we probably have an ArrayList which has a correct equals implementation. But we shouldn't leverage it.", "author": "kevinleturc", "createdAt": "2020-04-08T09:25:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NjEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ0OTQxNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405449415", "bodyText": "For collections I don't see a problem with using assertEquals, their equals method are supposed to do the right thing by definition.", "author": "efge", "createdAt": "2020-04-08T11:20:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NjEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ2MzkzMw==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405463933", "bodyText": "I agree with you that almost all implementations have a good implementation for equals, but not all. Which forces us to use CollectionUtils if we want a coding convention.", "author": "kevinleturc", "createdAt": "2020-04-08T11:49:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NjEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ2NDMxMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405464310", "bodyText": "I'm happy to discuss this.", "author": "kevinleturc", "createdAt": "2020-04-08T11:50:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NjEwNA=="}], "type": "inlineReview", "revised_code": {"commit": "1a730be05e395fcea5ab92dfca797081ec20b302", "chunk": "diff --git a/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java b/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\nindex 2dea7d1b6cc..fc0f868f74e 100644\n--- a/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\n+++ b/modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java\n\n@@ -251,7 +251,7 @@ public class TestColdStorage {\n         moveAndVerifyContent(session, documentModel);\n \n         // we cannot update the main content as it is already in cold storage\n-        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.refresh();\n         documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n                 (Serializable) Blobs.createBlob(FILE_CONTENT));\n         try {\n"}}, {"oid": "1a730be05e395fcea5ab92dfca797081ec20b302", "url": "https://github.com/nuxeo/nuxeo/commit/1a730be05e395fcea5ab92dfca797081ec20b302", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage", "committedDate": "2020-04-08T09:14:49Z", "type": "forcePushed"}, {"oid": "77d9b81ab84cb759d257eb743bf6d6a913e49522", "url": "https://github.com/nuxeo/nuxeo/commit/77d9b81ab84cb759d257eb743bf6d6a913e49522", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage", "committedDate": "2020-04-08T09:31:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM4NTM0MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405385341", "bodyText": "Those if could be merged.", "author": "troger", "createdAt": "2020-04-08T09:26:49Z", "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.core.coldstorage;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_FORBIDDEN;\n+\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.event.CoreEventConstants;\n+import org.nuxeo.ecm.core.api.model.Property;\n+import org.nuxeo.ecm.core.blob.ColdStorageHelper;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventContext;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.core.schema.FacetNames;\n+\n+/**\n+ * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n+ * \n+ * @since 11.1\n+ */\n+public class CheckUpdateMainContentInColdStorage implements EventListener {\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        EventContext eventContext = event.getContext();\n+        if (!(eventContext instanceof DocumentEventContext)) {\n+            return;\n+        }\n+\n+        DocumentModel previousDocument = (DocumentModel) eventContext.getProperty(\n+                CoreEventConstants.PREVIOUS_DOCUMENT_MODEL);\n+        if (previousDocument.hasFacet(FacetNames.COLD_STORAGE)) {\n+            if (previousDocument.getPropertyValue(ColdStorageHelper.COLD_STORAGE_CONTENT_PROPERTY) != null) {", "originalCommit": "1a730be05e395fcea5ab92dfca797081ec20b302", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6498605d4357834e86fd2c68733fe00a7bc3ecb4", "chunk": "diff --git a/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java b/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java\nindex 2e852563b2e..2288f8e7d57 100644\n--- a/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java\n+++ b/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java\n\n@@ -33,7 +33,7 @@ import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n import org.nuxeo.ecm.core.schema.FacetNames;\n \n /**\n- * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n+ * A synchronous listener that prevents any main content replacement when it's stored in cold storage.\n  * \n  * @since 11.1\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM5MzY5NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405393694", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n          \n          \n            \n             * A synchronous listener that prevents any document's main content replacement when it's stored in cold storage.\n          \n      \n    \n    \n  \n\nOr just\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n          \n          \n            \n             * A synchronous listener that prevents any main content replacement when it's stored in cold storage.", "author": "troger", "createdAt": "2020-04-08T09:40:00Z", "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.core.coldstorage;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_FORBIDDEN;\n+\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.event.CoreEventConstants;\n+import org.nuxeo.ecm.core.api.model.Property;\n+import org.nuxeo.ecm.core.blob.ColdStorageHelper;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventContext;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.core.schema.FacetNames;\n+\n+/**\n+ * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.", "originalCommit": "77d9b81ab84cb759d257eb743bf6d6a913e49522", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6498605d4357834e86fd2c68733fe00a7bc3ecb4", "chunk": "diff --git a/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java b/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java\nindex 2e852563b2e..2288f8e7d57 100644\n--- a/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java\n+++ b/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java\n\n@@ -33,7 +33,7 @@ import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n import org.nuxeo.ecm.core.schema.FacetNames;\n \n /**\n- * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n+ * A synchronous listener that prevents any main content replacement when it's stored in cold storage.\n  * \n  * @since 11.1\n  */\n"}}, {"oid": "6498605d4357834e86fd2c68733fe00a7bc3ecb4", "url": "https://github.com/nuxeo/nuxeo/commit/6498605d4357834e86fd2c68733fe00a7bc3ecb4", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage", "committedDate": "2020-04-08T09:45:51Z", "type": "commit"}, {"oid": "6498605d4357834e86fd2c68733fe00a7bc3ecb4", "url": "https://github.com/nuxeo/nuxeo/commit/6498605d4357834e86fd2c68733fe00a7bc3ecb4", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage", "committedDate": "2020-04-08T09:45:51Z", "type": "forcePushed"}]}