{"pr_number": 4246, "pr_title": "Fix NXP-29503 bulk index multi repo", "pr_createdAt": "2020-08-07T08:48:11Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4246", "timeline": [{"oid": "6a66908d45233b1c1257dddbf046af4a124156ce", "url": "https://github.com/nuxeo/nuxeo/commit/6a66908d45233b1c1257dddbf046af4a124156ce", "message": "NXP-29503: Cleanup / Format", "committedDate": "2020-08-07T08:44:52Z", "type": "commit"}, {"oid": "47f00f94046f720a66a2c388286ac87fab44ee51", "url": "https://github.com/nuxeo/nuxeo/commit/47f00f94046f720a66a2c388286ac87fab44ee51", "message": "NXP-29503: Fix bulk index on multi repository", "committedDate": "2020-08-07T08:59:21Z", "type": "forcePushed"}, {"oid": "e2ea7485020ddfe15e52918902a033db33e4f395", "url": "https://github.com/nuxeo/nuxeo/commit/e2ea7485020ddfe15e52918902a033db33e4f395", "message": "NXP-29503: Fix bulk index on multi repository", "committedDate": "2020-08-07T09:04:34Z", "type": "forcePushed"}, {"oid": "58c78f2846d9fa251f7d71f493479dc39fef4929", "url": "https://github.com/nuxeo/nuxeo/commit/58c78f2846d9fa251f7d71f493479dc39fef4929", "message": "NXP-29503: Fix bulk index on multi repository", "committedDate": "2020-08-07T09:24:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkxNzAxMw==", "url": "https://github.com/nuxeo/nuxeo/pull/4246#discussion_r466917013", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // nothing indexed because of disable indexing flag\n          \n          \n            \n                    // nothing indexed because of disabled indexing flag", "author": "ataillefer", "createdAt": "2020-08-07T09:04:27Z", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-automation/src/test/java/org/nuxeo/ecm/automation/elasticsearch/test/TestElasticsearchAutomationMultiRepo.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Benoit Delbosc\n+ *     Kevin Leturc <kleturc@nuxeo.com>\n+ */\n+package org.nuxeo.ecm.automation.elasticsearch.test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.automation.AutomationService;\n+import org.nuxeo.ecm.automation.OperationContext;\n+import org.nuxeo.ecm.automation.elasticsearch.ElasticsearchBulkIndexOperation;\n+import org.nuxeo.ecm.core.api.CoreInstance;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.elasticsearch.ElasticSearchConstants;\n+import org.nuxeo.elasticsearch.api.ElasticSearchAdmin;\n+import org.nuxeo.elasticsearch.api.ElasticSearchService;\n+import org.nuxeo.elasticsearch.query.NxQueryBuilder;\n+import org.nuxeo.elasticsearch.test.RepositoryLightElasticSearchFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features(RepositoryLightElasticSearchFeature.class)\n+@Deploy(\"org.nuxeo.ecm.automation.core\")\n+@Deploy(\"org.nuxeo.elasticsearch.automation\")\n+@Deploy(\"org.nuxeo.ecm.automation.elasticsearch.test:test-second-repository-contrib.xml\")\n+public class TestElasticsearchAutomationMultiRepo {\n+\n+    @Inject\n+    protected TransactionalFeature txFeature;\n+\n+    @Inject\n+    protected CoreSession defaultSession;\n+\n+    protected CoreSession secondSession;\n+\n+    @Inject\n+    protected ElasticSearchService ess;\n+\n+    @Inject\n+    protected ElasticSearchAdmin esa;\n+\n+    @Inject\n+    protected AutomationService automationService;\n+\n+    @Before\n+    public void init() {\n+        secondSession = CoreInstance.getCoreSession(\"second\");\n+\n+        // reset index\n+        esa.initIndexes(true);\n+        createDocs(defaultSession);\n+        createDocs(secondSession);\n+    }\n+\n+    protected void createDocs(CoreSession session) {\n+        // create 2 docs without indexing them\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"my-folder\", \"Folder\");\n+        doc.setPropertyValue(\"dc:title\", \"A folder\");\n+        doc.putContextData(ElasticSearchConstants.DISABLE_AUTO_INDEXING, Boolean.TRUE);\n+        doc = session.createDocument(doc);\n+\n+        doc = session.createDocumentModel(\"/my-folder/\", \"my-file\", \"File\");\n+        doc.setPropertyValue(\"dc:title\", \"A file\");\n+        doc.putContextData(ElasticSearchConstants.DISABLE_AUTO_INDEXING, Boolean.TRUE);\n+        session.createDocument(doc);\n+\n+        txFeature.nextTransaction();\n+\n+        // nothing indexed because of disable indexing flag", "originalCommit": "47f00f94046f720a66a2c388286ac87fab44ee51", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58c78f2846d9fa251f7d71f493479dc39fef4929", "chunk": "diff --git a/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-automation/src/test/java/org/nuxeo/ecm/automation/elasticsearch/test/TestElasticsearchAutomationMultiRepo.java b/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-automation/src/test/java/org/nuxeo/ecm/automation/elasticsearch/test/TestElasticsearchAutomationMultiRepo.java\nindex 7a3f11895b3..cc79bf08aa0 100644\n--- a/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-automation/src/test/java/org/nuxeo/ecm/automation/elasticsearch/test/TestElasticsearchAutomationMultiRepo.java\n+++ b/modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-automation/src/test/java/org/nuxeo/ecm/automation/elasticsearch/test/TestElasticsearchAutomationMultiRepo.java\n\n@@ -101,9 +101,8 @@ public class TestElasticsearchAutomationMultiRepo {\n             automationService.run(defaultCtx, ElasticsearchBulkIndexOperation.ID);\n             automationService.run(secondCtx, ElasticsearchBulkIndexOperation.ID);\n \n-            txFeature.nextTransaction();\n             // indexing is done but refresh is processed just after, do it sync\n-            esa.refresh();\n+            txFeature.nextTransaction(); // will wait for bulk, wait for es indexing, do an es refresh\n \n             assertEquals(2, ess.query(new NxQueryBuilder(defaultSession).nxql(\"SELECT * from Document\")).totalSize());\n             assertEquals(2, ess.query(new NxQueryBuilder(secondSession).nxql(\"SELECT * from Document\")).totalSize());\n"}}, {"oid": "7bf8b426277248b41d201ec729cbdb4b9681d535", "url": "https://github.com/nuxeo/nuxeo/commit/7bf8b426277248b41d201ec729cbdb4b9681d535", "message": "NXP-29503: Fix bulk index on multi repository", "committedDate": "2020-08-07T09:56:59Z", "type": "forcePushed"}, {"oid": "f90d749f67be74f4b9944be5da33f245aab9987e", "url": "https://github.com/nuxeo/nuxeo/commit/f90d749f67be74f4b9944be5da33f245aab9987e", "message": "NXP-29503: Fix bulk index on multi repository", "committedDate": "2020-08-07T10:04:10Z", "type": "commit"}, {"oid": "f90d749f67be74f4b9944be5da33f245aab9987e", "url": "https://github.com/nuxeo/nuxeo/commit/f90d749f67be74f4b9944be5da33f245aab9987e", "message": "NXP-29503: Fix bulk index on multi repository", "committedDate": "2020-08-07T10:04:10Z", "type": "forcePushed"}]}