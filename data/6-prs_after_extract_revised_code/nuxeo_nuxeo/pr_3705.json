{"pr_number": 3705, "pr_title": "Improvement-NXP-28576-Add-coverage-tests-on-mail-notification", "pr_createdAt": "2020-01-28T19:27:42Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3705", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5OTQzMg==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372099432", "bodyText": "Please write these booleans asserts with an additional mailContent in first argument as the message that will get displayed if the boolean is false, for diagnostic purposes.", "author": "efge", "createdAt": "2020-01-28T22:40:37Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToMainDocument() {\n+        // create a File document and\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscriptions(documentModel);\n+\n+        // fire the dummy event\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(documentModel, DOCUMENT_NAME);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        // create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\n+        DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification on the parent document\n+        addSubscriptions(parentDocModel);\n+\n+        // create a child document\n+        DocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);\n+\n+        // fire the dummy event on the child document\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), mainDocModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(mainDocModel, ANOTHER_DOCUMENT_NAME);\n+    }\n+\n+    protected void checkMailContent(final DocumentModel documentModel, String documentName) {\n+        assertEquals(1, emailsResult.getMails().size());\n+        SmtpMailServerFeature.MailMessage mailMessage = emailsResult.getMails().get(0);\n+        assertEquals(String.format(\"[Dummy]Notification on the document '%s'\", documentName), mailMessage.getSubject());\n+\n+        // check the mail content (see templates/dummyNotificationToSendMail.ftl)\n+        String mailContent = getMailContent(mailMessage);\n+        // description\n+        assertTrue(mailContent.contains(String.format(\"The document %s is now available.\", documentName)));", "originalCommit": "9b5ef7f3014e2611da34c1cdff3836ce92f27670", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 67b43e92234..44dcc79a2ed 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -12,7 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *  \n+ *\n  * Contributors:\n  *     Salem Aouana\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5OTg4OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372099888", "bodyText": "Why not match the full mail content, maybe with a regexp for the parts that are too random to predict (if any)?", "author": "efge", "createdAt": "2020-01-28T22:41:40Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToMainDocument() {\n+        // create a File document and\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscriptions(documentModel);\n+\n+        // fire the dummy event\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(documentModel, DOCUMENT_NAME);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        // create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\n+        DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification on the parent document\n+        addSubscriptions(parentDocModel);\n+\n+        // create a child document\n+        DocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);\n+\n+        // fire the dummy event on the child document\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), mainDocModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(mainDocModel, ANOTHER_DOCUMENT_NAME);\n+    }\n+\n+    protected void checkMailContent(final DocumentModel documentModel, String documentName) {\n+        assertEquals(1, emailsResult.getMails().size());\n+        SmtpMailServerFeature.MailMessage mailMessage = emailsResult.getMails().get(0);\n+        assertEquals(String.format(\"[Dummy]Notification on the document '%s'\", documentName), mailMessage.getSubject());\n+\n+        // check the mail content (see templates/dummyNotificationToSendMail.ftl)\n+        String mailContent = getMailContent(mailMessage);\n+        // description\n+        assertTrue(mailContent.contains(String.format(\"The document %s is now available.\", documentName)));\n+        // author\n+        assertTrue(mailContent.contains(session.getPrincipal().getName()));\n+        // location\n+        assertTrue(mailContent.contains(documentModel.getPathAsString()));\n+        // version\n+        assertTrue(mailContent.contains(documentModel.getVersionLabel()));\n+        // state\n+        assertTrue(mailContent.contains(documentModel.getCurrentLifeCycleState()));\n+        // link to the document\n+        assertTrue(mailContent.contains(String.format(\"Consult the document %s\", documentName)));", "originalCommit": "9b5ef7f3014e2611da34c1cdff3836ce92f27670", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxODEyMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372218121", "bodyText": "Even better, you could have a file with the expected content, using variables to be expended in the test.\nThen you would only need to compare the received and expected email strings.\nSee what is done for WOPI to check some JSON responses:\nhttps://github.com/nuxeo/nuxeo/blob/master/addons/nuxeo-wopi/nuxeo-wopi/src/test/java/org/nuxeo/wopi/jaxrs/TestFilesEndpoint.java#L1235\nhttps://github.com/nuxeo/nuxeo/blob/master/addons/nuxeo-wopi/nuxeo-wopi/src/test/java/org/nuxeo/wopi/JSONHelper.java#L35", "author": "ataillefer", "createdAt": "2020-01-29T07:09:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5OTg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM1ODA5Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372358097", "bodyText": "yep i did the same things on comments / annotation notification,  please see https://github.com/nuxeo/nuxeo/pull/3705/files#r372356410 if it suits you.", "author": "RSalem07", "createdAt": "2020-01-29T12:38:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5OTg4OA=="}], "type": "inlineReview", "revised_code": {"commit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 67b43e92234..44dcc79a2ed 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -12,7 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *  \n+ *\n  * Contributors:\n  *     Salem Aouana\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwMDIzNg==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372100236", "bodyText": "Why this check, can't you assert that we get HTML? There's no variability here, is there?", "author": "efge", "createdAt": "2020-01-28T22:42:39Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToMainDocument() {\n+        // create a File document and\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscriptions(documentModel);\n+\n+        // fire the dummy event\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(documentModel, DOCUMENT_NAME);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        // create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\n+        DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification on the parent document\n+        addSubscriptions(parentDocModel);\n+\n+        // create a child document\n+        DocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);\n+\n+        // fire the dummy event on the child document\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), mainDocModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(mainDocModel, ANOTHER_DOCUMENT_NAME);\n+    }\n+\n+    protected void checkMailContent(final DocumentModel documentModel, String documentName) {\n+        assertEquals(1, emailsResult.getMails().size());\n+        SmtpMailServerFeature.MailMessage mailMessage = emailsResult.getMails().get(0);\n+        assertEquals(String.format(\"[Dummy]Notification on the document '%s'\", documentName), mailMessage.getSubject());\n+\n+        // check the mail content (see templates/dummyNotificationToSendMail.ftl)\n+        String mailContent = getMailContent(mailMessage);\n+        // description\n+        assertTrue(mailContent.contains(String.format(\"The document %s is now available.\", documentName)));\n+        // author\n+        assertTrue(mailContent.contains(session.getPrincipal().getName()));\n+        // location\n+        assertTrue(mailContent.contains(documentModel.getPathAsString()));\n+        // version\n+        assertTrue(mailContent.contains(documentModel.getVersionLabel()));\n+        // state\n+        assertTrue(mailContent.contains(documentModel.getCurrentLifeCycleState()));\n+        // link to the document\n+        assertTrue(mailContent.contains(String.format(\"Consult the document %s\", documentName)));\n+    }\n+\n+    protected DocumentModel createDocument(DocumentModel parent, String name) {\n+        DocumentModel documentModel = session.createDocumentModel(parent.getPathAsString(), name, \"File\");\n+        return session.createDocument(documentModel);\n+    }\n+\n+    protected void addSubscriptions(DocumentModel documentModel) {\n+        NuxeoPrincipal principal = session.getPrincipal();\n+        String subscriber = NotificationConstants.USER_PREFIX + principal.getName();\n+        notificationManager.addSubscription(subscriber, DUMMY_NOTIFICATION_NAME, documentModel, false, principal,\n+                DUMMY_NOTIFICATION_NAME);\n+    }\n+\n+    protected String getMailContent(SmtpMailServerFeature.MailMessage mailMessage) {\n+        String content = mailMessage.getContent();\n+        if (!mailMessage.getContentType().contains(\"text/html\")) {\n+            return content;", "originalCommit": "9b5ef7f3014e2611da34c1cdff3836ce92f27670", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM1NzQxOQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372357419", "bodyText": "my idea is to be closer to the real use case where we have a html content and the idea is just to extract the text and verify it to the expected text", "author": "RSalem07", "createdAt": "2020-01-29T12:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwMDIzNg=="}], "type": "inlineReview", "revised_code": {"commit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 67b43e92234..44dcc79a2ed 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -12,7 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *  \n+ *\n  * Contributors:\n  *     Salem Aouana\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNDA5MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372214091", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.\n          \n          \n            \n             * Tests the whole email notification process: from subscribing to a given event to the reception of the email for this event.", "author": "ataillefer", "createdAt": "2020-01-29T06:53:41Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.", "originalCommit": "9b5ef7f3014e2611da34c1cdff3836ce92f27670", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 67b43e92234..44dcc79a2ed 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -12,7 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *  \n+ *\n  * Contributors:\n  *     Salem Aouana\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNDc1MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372214751", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void shouldReceiveNotificationMailWhenSubscribeToMainDocument() {\n          \n          \n            \n                public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n          \n      \n    \n    \n  \n\nMain sounds weird, having another  test with \"ParentDocument\" seems enough to distinguish.", "author": "ataillefer", "createdAt": "2020-01-29T06:56:31Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToMainDocument() {", "originalCommit": "9b5ef7f3014e2611da34c1cdff3836ce92f27670", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 67b43e92234..44dcc79a2ed 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -12,7 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *  \n+ *\n  * Contributors:\n  *     Salem Aouana\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNDgyNw==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372214827", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // create a File document and\n          \n          \n            \n                    // create a File document", "author": "ataillefer", "createdAt": "2020-01-29T06:56:51Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToMainDocument() {\n+        // create a File document and", "originalCommit": "9b5ef7f3014e2611da34c1cdff3836ce92f27670", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 67b43e92234..44dcc79a2ed 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -12,7 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *  \n+ *\n  * Contributors:\n  *     Salem Aouana\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNTEyMw==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372215123", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected void addSubscriptions(DocumentModel documentModel) {\n          \n          \n            \n                protected void addSubscription(DocumentModel documentModel) {", "author": "ataillefer", "createdAt": "2020-01-29T06:58:05Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToMainDocument() {\n+        // create a File document and\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscriptions(documentModel);\n+\n+        // fire the dummy event\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(documentModel, DOCUMENT_NAME);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        // create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\n+        DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification on the parent document\n+        addSubscriptions(parentDocModel);\n+\n+        // create a child document\n+        DocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);\n+\n+        // fire the dummy event on the child document\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), mainDocModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(mainDocModel, ANOTHER_DOCUMENT_NAME);\n+    }\n+\n+    protected void checkMailContent(final DocumentModel documentModel, String documentName) {\n+        assertEquals(1, emailsResult.getMails().size());\n+        SmtpMailServerFeature.MailMessage mailMessage = emailsResult.getMails().get(0);\n+        assertEquals(String.format(\"[Dummy]Notification on the document '%s'\", documentName), mailMessage.getSubject());\n+\n+        // check the mail content (see templates/dummyNotificationToSendMail.ftl)\n+        String mailContent = getMailContent(mailMessage);\n+        // description\n+        assertTrue(mailContent.contains(String.format(\"The document %s is now available.\", documentName)));\n+        // author\n+        assertTrue(mailContent.contains(session.getPrincipal().getName()));\n+        // location\n+        assertTrue(mailContent.contains(documentModel.getPathAsString()));\n+        // version\n+        assertTrue(mailContent.contains(documentModel.getVersionLabel()));\n+        // state\n+        assertTrue(mailContent.contains(documentModel.getCurrentLifeCycleState()));\n+        // link to the document\n+        assertTrue(mailContent.contains(String.format(\"Consult the document %s\", documentName)));\n+    }\n+\n+    protected DocumentModel createDocument(DocumentModel parent, String name) {\n+        DocumentModel documentModel = session.createDocumentModel(parent.getPathAsString(), name, \"File\");\n+        return session.createDocument(documentModel);\n+    }\n+\n+    protected void addSubscriptions(DocumentModel documentModel) {", "originalCommit": "9b5ef7f3014e2611da34c1cdff3836ce92f27670", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 67b43e92234..44dcc79a2ed 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -12,7 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *  \n+ *\n  * Contributors:\n  *     Salem Aouana\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyMjAzNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372222035", "bodyText": "Could be placed right after DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME); to clearly match the comment \"create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\".", "author": "ataillefer", "createdAt": "2020-01-29T07:18:49Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToMainDocument() {\n+        // create a File document and\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscriptions(documentModel);\n+\n+        // fire the dummy event\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(documentModel, DOCUMENT_NAME);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        // create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\n+        DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification on the parent document\n+        addSubscriptions(parentDocModel);\n+\n+        // create a child document\n+        DocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);", "originalCommit": "9b5ef7f3014e2611da34c1cdff3836ce92f27670", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 67b43e92234..44dcc79a2ed 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -12,7 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *  \n+ *\n  * Contributors:\n  *     Salem Aouana\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2NTE5NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372265195", "bodyText": "No need for final keyword.", "author": "kevinleturc", "createdAt": "2020-01-29T09:15:16Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Test the whole process: from subscribing to a given event until the reception of the mail notification on this event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToMainDocument() {\n+        // create a File document and\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscriptions(documentModel);\n+\n+        // fire the dummy event\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(documentModel, DOCUMENT_NAME);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        // create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\n+        DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification on the parent document\n+        addSubscriptions(parentDocModel);\n+\n+        // create a child document\n+        DocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);\n+\n+        // fire the dummy event on the child document\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), mainDocModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(mainDocModel, ANOTHER_DOCUMENT_NAME);\n+    }\n+\n+    protected void checkMailContent(final DocumentModel documentModel, String documentName) {", "originalCommit": "9b5ef7f3014e2611da34c1cdff3836ce92f27670", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 67b43e92234..44dcc79a2ed 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -12,7 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *  \n+ *\n  * Contributors:\n  *     Salem Aouana\n  */\n"}}, {"oid": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "url": "https://github.com/nuxeo/nuxeo/commit/ae4369b1dfaccb0986aac663d69fd95d0984abb4", "message": "NXP-28576: Add test coverage on mail notification", "committedDate": "2020-01-29T12:39:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM2MzMwMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372363300", "bodyText": "What's the point though? Can't you just compare the HTML strings?", "author": "efge", "createdAt": "2020-01-29T12:50:33Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,198 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.text.SimpleDateFormat;\n+import java.time.Instant;\n+import java.util.Date;\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.common.utils.StringUtils;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+import net.htmlparser.jericho.Renderer;\n+import net.htmlparser.jericho.Source;\n+\n+/**\n+ * Tests the whole email notification process: from subscribing to a given event to the reception of the email for this\n+ * event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    protected static final SimpleDateFormat EVENT_DATE_FORMAT = new SimpleDateFormat(\"dd/MM/yyyy - HH:mm\");\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n+        // create a File document\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscription(documentModel);\n+\n+        // fire the dummy event\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(documentModel, event);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification on the parent document\n+        addSubscription(parentDocModel);\n+\n+        // create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\n+        DocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);\n+\n+        // fire the dummy event on the child document\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), mainDocModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(mainDocModel, event);\n+    }\n+\n+    protected void checkMailContent(DocumentModel documentModel, Event event) {\n+        assertEquals(1, emailsResult.getMails().size());\n+        SmtpMailServerFeature.MailMessage mailMessage = emailsResult.getMails().get(0);\n+        // check the subject\n+        assertEquals(String.format(\"[Dummy]Notification on the document '%s'\", documentModel.getTitle()),\n+                mailMessage.getSubject());\n+\n+        // check the text content\n+        String expectedMailContent = getExpectedMailContent(documentModel, event);\n+        assertEquals(expectedMailContent, getMailContent(mailMessage));\n+    }\n+\n+    protected DocumentModel createDocument(DocumentModel parent, String name) {\n+        DocumentModel documentModel = session.createDocumentModel(parent.getPathAsString(), name, \"File\");\n+        return session.createDocument(documentModel);\n+    }\n+\n+    protected void addSubscription(DocumentModel documentModel) {\n+        NuxeoPrincipal principal = session.getPrincipal();\n+        String subscriber = NotificationConstants.USER_PREFIX + principal.getName();\n+        notificationManager.addSubscription(subscriber, DUMMY_NOTIFICATION_NAME, documentModel, false, principal,\n+                DUMMY_NOTIFICATION_NAME);\n+    }\n+\n+    protected String getMailContent(SmtpMailServerFeature.MailMessage mailMessage) {\n+        String content = mailMessage.getContent();\n+        if (!mailMessage.getContentType().contains(\"text/html\")) {\n+            return content;\n+        }\n+\n+        Renderer renderer = new Source(mailMessage.getContent()).getRenderer();", "originalCommit": "ae4369b1dfaccb0986aac663d69fd95d0984abb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM2NjE4Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372366182", "bodyText": "my idea was to create a html file and then use this method to extract the content without any html tag and to compare it to a text content. my point of view is to keep the things more closer to the real things where we have a html file (see #3705 (comment))\nmy idea is to not create a second html file, but if you think it  is better to have only html and compare them i will change it (i means i will create  a html expected content that will be compared to the received one)", "author": "RSalem07", "createdAt": "2020-01-29T12:56:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM2MzMwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM3NTE1Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372375153", "bodyText": "My point is that your goal here is not to unit test a HTML to text transformer, or FreeMarker generation. So you shouldn't care about either of those, and just compare expected to actual HTML.", "author": "efge", "createdAt": "2020-01-29T13:16:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM2MzMwMA=="}], "type": "inlineReview", "revised_code": {"commit": "0a76e0709885dee193740ada06ee7c580b0ca230", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 44dcc79a2ed..73a8d00d6c8 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -52,9 +52,6 @@ import org.nuxeo.runtime.test.runner.Features;\n import org.nuxeo.runtime.test.runner.FeaturesRunner;\n import org.nuxeo.runtime.test.runner.TransactionalFeature;\n \n-import net.htmlparser.jericho.Renderer;\n-import net.htmlparser.jericho.Source;\n-\n /**\n  * Tests the whole email notification process: from subscribing to a given event to the reception of the email for this\n  * event.\n"}}, {"oid": "0a76e0709885dee193740ada06ee7c580b0ca230", "url": "https://github.com/nuxeo/nuxeo/commit/0a76e0709885dee193740ada06ee7c580b0ca230", "message": "NXP-28576: Add test coverage on mail notification", "committedDate": "2020-01-29T13:55:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQxOTExMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r372419111", "bodyText": "Maybe put it directly inside the Map.of, as for the other fields?", "author": "ataillefer", "createdAt": "2020-01-29T14:38:21Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.text.SimpleDateFormat;\n+import java.time.Instant;\n+import java.util.Date;\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.common.utils.StringUtils;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+/**\n+ * Tests the whole email notification process: from subscribing to a given event to the reception of the email for this\n+ * event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    protected static final SimpleDateFormat EVENT_DATE_FORMAT = new SimpleDateFormat(\"dd/MM/yyyy - HH:mm\");\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n+        // create a File document\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscription(documentModel);\n+\n+        // fire the dummy event\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(documentModel, event);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification on the parent document\n+        addSubscription(parentDocModel);\n+\n+        // create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\n+        DocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);\n+\n+        // fire the dummy event on the child document\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), mainDocModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(mainDocModel, event);\n+    }\n+\n+    protected void checkMailContent(DocumentModel documentModel, Event event) {\n+        assertEquals(1, emailsResult.getMails().size());\n+        SmtpMailServerFeature.MailMessage mailMessage = emailsResult.getMails().get(0);\n+        // check the subject\n+        assertEquals(String.format(\"[Dummy]Notification on the document '%s'\", documentModel.getTitle()),\n+                mailMessage.getSubject());\n+\n+        // check the text content\n+        String expectedMailContent = getExpectedMailContent(documentModel, event);\n+        assertEquals(expectedMailContent, mailMessage.getContent());\n+    }\n+\n+    protected DocumentModel createDocument(DocumentModel parent, String name) {\n+        DocumentModel documentModel = session.createDocumentModel(parent.getPathAsString(), name, \"File\");\n+        return session.createDocument(documentModel);\n+    }\n+\n+    protected void addSubscription(DocumentModel documentModel) {\n+        NuxeoPrincipal principal = session.getPrincipal();\n+        String subscriber = NotificationConstants.USER_PREFIX + principal.getName();\n+        notificationManager.addSubscription(subscriber, DUMMY_NOTIFICATION_NAME, documentModel, false, principal,\n+                DUMMY_NOTIFICATION_NAME);\n+    }\n+\n+    protected String getExpectedMailContent(DocumentModel documentModel, Event event) {\n+        URL url = TestEmailNotification.class.getResource(\"/templates/dummyExpectedMail.html\");\n+        String author = ((String[]) documentModel.getPropertyValue(\"dc:contributors\"))[0];", "originalCommit": "0a76e0709885dee193740ada06ee7c580b0ca230", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ed4df6babb165544f0399c65829a815479e6c59a", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 73a8d00d6c8..d733144c413 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -163,18 +163,18 @@ public class TestEmailNotification {\n     }\n \n     protected String getExpectedMailContent(DocumentModel documentModel, Event event) {\n-        URL url = TestEmailNotification.class.getResource(\"/templates/dummyExpectedMail.html\");\n-        String author = ((String[]) documentModel.getPropertyValue(\"dc:contributors\"))[0];\n         try {\n-            String content = Files.readString(Paths.get(url.toURI()));\n+            URL url = TestEmailNotification.class.getResource(\"/templates/dummyExpectedMail.html\");\n+            String fileContent = Files.readString(Paths.get(url.toURI()));\n             var model = Map.of(\"TITLE\", documentModel.getTitle(), //\n                     \"CREATION_DATE\", EVENT_DATE_FORMAT.format(Date.from(Instant.ofEpochMilli(event.getTime()))), //\n-                    \"AUTHOR\", author, //\n+                    \"AUTHOR\", ((String[]) documentModel.getPropertyValue(\"dc:contributors\"))[0], //\n                     \"LOCATION\", documentModel.getPathAsString(), //\n                     \"VERSION\", documentModel.getVersionLabel(), //\n                     \"STATE\", documentModel.getCurrentLifeCycleState());\n+            String content = StringUtils.expandVars(fileContent, model);\n             // just put the content on one line as it will be when retrieved from fake smtp\n-            return StringUtils.expandVars(content, model).replaceAll(\"\\\\n\", \"\");\n+            return content.replaceAll(\"\\\\n\", \"\");\n         } catch (URISyntaxException | IOException e) {\n             throw new NuxeoException(e);\n         }\n"}}, {"oid": "ed4df6babb165544f0399c65829a815479e6c59a", "url": "https://github.com/nuxeo/nuxeo/commit/ed4df6babb165544f0399c65829a815479e6c59a", "message": "NXP-28576: Add test coverage on mail notification", "committedDate": "2020-01-30T11:19:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwNjk2NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r374106965", "bodyText": "I haven't been conquered by this kind of method.\nWe're having them in more and more test classes, leading me to the question: why don't we want it in the sources for all usage?\nThey can change from one test to another, which doesn't help when reviewing code as we can't be sure that method does the thing we're used to/expect to. Furthermore, I think it's surprising to have code which doesn't use this method in the same test (we can see it in the @Before). Surprising because the method has the same name than the core session one and because it's not coherent with rest of test.\nWhen it comes to use it, we often need to put a comment in front of, in the end we don't benefit from the saved line this method gives.\nFor instance, I would prefer the \"old way\" in the text block below:\n// create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\nDocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);\nDocumentModel mainDocModel = session.createDocumentModel(\"/domain/anyFile\", ANOTHER_DOCUMENT_NAME, \"File\");\nmainDocModel = session.createDocument(parentDocModel);\nI'm in favor of removing this kind of method and doing light and explicit things.\nNote: the example above highlights the fact you're creating a File under another File which is permitted since the comment improvement but I'm not sure this is what we want to do here, we may want to do something closer to reality.", "author": "kevinleturc", "createdAt": "2020-02-03T13:41:38Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.text.SimpleDateFormat;\n+import java.time.Instant;\n+import java.util.Date;\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.common.utils.StringUtils;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+/**\n+ * Tests the whole email notification process: from subscribing to a given event to the reception of the email for this\n+ * event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    protected static final SimpleDateFormat EVENT_DATE_FORMAT = new SimpleDateFormat(\"dd/MM/yyyy - HH:mm\");\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n+        // create a File document\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscription(documentModel);\n+\n+        // fire the dummy event\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(documentModel, event);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        DocumentModel parentDocModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification on the parent document\n+        addSubscription(parentDocModel);\n+\n+        // create a simple hierarchy (domain <- DOCUMENT_NAME <- ANOTHER_DOCUMENT_NAME)\n+        DocumentModel mainDocModel = createDocument(parentDocModel, ANOTHER_DOCUMENT_NAME);\n+\n+        // fire the dummy event on the child document\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), mainDocModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        // check the received mail\n+        checkMailContent(mainDocModel, event);\n+    }\n+\n+    protected void checkMailContent(DocumentModel documentModel, Event event) {\n+        assertEquals(1, emailsResult.getMails().size());\n+        SmtpMailServerFeature.MailMessage mailMessage = emailsResult.getMails().get(0);\n+        // check the subject\n+        assertEquals(String.format(\"[Dummy]Notification on the document '%s'\", documentModel.getTitle()),\n+                mailMessage.getSubject());\n+\n+        // check the text content\n+        String expectedMailContent = getExpectedMailContent(documentModel, event);\n+        assertEquals(expectedMailContent, mailMessage.getContent());\n+    }\n+\n+    protected DocumentModel createDocument(DocumentModel parent, String name) {\n+        DocumentModel documentModel = session.createDocumentModel(parent.getPathAsString(), name, \"File\");\n+        return session.createDocument(documentModel);\n+    }", "originalCommit": "ed4df6babb165544f0399c65829a815479e6c59a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e417b9bcae1a5f98cec69b30eeb6e2100950cf50", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex d733144c413..6807f40ebe9 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -73,8 +73,6 @@ public class TestEmailNotification {\n \n     protected static final String DOCUMENT_NAME = \"anyFile\";\n \n-    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n-\n     protected static final SimpleDateFormat EVENT_DATE_FORMAT = new SimpleDateFormat(\"dd/MM/yyyy - HH:mm\");\n \n     @Inject\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTk2NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r374109964", "bodyText": "Renaming the method addDummySubscription would be more explicit, and the comment could be removed.", "author": "kevinleturc", "createdAt": "2020-02-03T13:47:29Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.text.SimpleDateFormat;\n+import java.time.Instant;\n+import java.util.Date;\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.common.utils.StringUtils;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+/**\n+ * Tests the whole email notification process: from subscribing to a given event to the reception of the email for this\n+ * event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n+\n+    protected static final SimpleDateFormat EVENT_DATE_FORMAT = new SimpleDateFormat(\"dd/MM/yyyy - HH:mm\");\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n+        // create a File document\n+        DocumentModel documentModel = createDocument(domain, DOCUMENT_NAME);\n+\n+        // subscribe to the dummy notification\n+        addSubscription(documentModel);", "originalCommit": "ed4df6babb165544f0399c65829a815479e6c59a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e417b9bcae1a5f98cec69b30eeb6e2100950cf50", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex d733144c413..6807f40ebe9 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -73,8 +73,6 @@ public class TestEmailNotification {\n \n     protected static final String DOCUMENT_NAME = \"anyFile\";\n \n-    protected static final String ANOTHER_DOCUMENT_NAME = \"anyFile2\";\n-\n     protected static final SimpleDateFormat EVENT_DATE_FORMAT = new SimpleDateFormat(\"dd/MM/yyyy - HH:mm\");\n \n     @Inject\n"}}, {"oid": "e417b9bcae1a5f98cec69b30eeb6e2100950cf50", "url": "https://github.com/nuxeo/nuxeo/commit/e417b9bcae1a5f98cec69b30eeb6e2100950cf50", "message": "NXP-28576: Add test coverage on mail notification", "committedDate": "2020-02-03T14:27:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzODYzOA==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r374138638", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DocumentModel documentModel = session.createDocumentModel(domain.getPathAsString(), DOCUMENT_NAME, \"File\");\n          \n          \n            \n                    DocumentModel documentModel = session.createDocumentModel(\"/domain\", DOCUMENT_NAME, \"File\");", "author": "kevinleturc", "createdAt": "2020-02-03T14:40:30Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,171 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.text.SimpleDateFormat;\n+import java.time.Instant;\n+import java.util.Date;\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.common.utils.StringUtils;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+/**\n+ * Tests the whole email notification process: from subscribing to a given event to the reception of the email for this\n+ * event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final SimpleDateFormat EVENT_DATE_FORMAT = new SimpleDateFormat(\"dd/MM/yyyy - HH:mm\");\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n+        DocumentModel documentModel = session.createDocumentModel(domain.getPathAsString(), DOCUMENT_NAME, \"File\");", "originalCommit": "e417b9bcae1a5f98cec69b30eeb6e2100950cf50", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f0bb792aeaa810fb0e7cca8e50f8cca50993e8b", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 6807f40ebe9..83639ea3dd3 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -100,7 +100,7 @@ public class TestEmailNotification {\n \n     @Test\n     public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n-        DocumentModel documentModel = session.createDocumentModel(domain.getPathAsString(), DOCUMENT_NAME, \"File\");\n+        DocumentModel documentModel = session.createDocumentModel(\"/domain\", DOCUMENT_NAME, \"File\");\n         documentModel = session.createDocument(documentModel);\n \n         addDummySubscription(documentModel);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzODg5OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r374138899", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DocumentModel folder = session.createDocumentModel(domain.getPathAsString(), \"anyFolder\", \"Folder\");\n          \n          \n            \n                    DocumentModel folder = session.createDocumentModel(\"/domain\", \"anyFolder\", \"Folder\");", "author": "kevinleturc", "createdAt": "2020-02-03T14:40:59Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,171 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.text.SimpleDateFormat;\n+import java.time.Instant;\n+import java.util.Date;\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.common.utils.StringUtils;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+/**\n+ * Tests the whole email notification process: from subscribing to a given event to the reception of the email for this\n+ * event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final SimpleDateFormat EVENT_DATE_FORMAT = new SimpleDateFormat(\"dd/MM/yyyy - HH:mm\");\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n+        DocumentModel documentModel = session.createDocumentModel(domain.getPathAsString(), DOCUMENT_NAME, \"File\");\n+        documentModel = session.createDocument(documentModel);\n+\n+        addDummySubscription(documentModel);\n+\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        checkMailContent(documentModel, event);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        DocumentModel folder = session.createDocumentModel(domain.getPathAsString(), \"anyFolder\", \"Folder\");", "originalCommit": "e417b9bcae1a5f98cec69b30eeb6e2100950cf50", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f0bb792aeaa810fb0e7cca8e50f8cca50993e8b", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 6807f40ebe9..83639ea3dd3 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -100,7 +100,7 @@ public class TestEmailNotification {\n \n     @Test\n     public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n-        DocumentModel documentModel = session.createDocumentModel(domain.getPathAsString(), DOCUMENT_NAME, \"File\");\n+        DocumentModel documentModel = session.createDocumentModel(\"/domain\", DOCUMENT_NAME, \"File\");\n         documentModel = session.createDocument(documentModel);\n \n         addDummySubscription(documentModel);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0NjI2OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3705#discussion_r374146269", "bodyText": "Could you remove the comment and replace the createDocumentModel line by a real path which will show us the hierarchy:\n        DocumentModel mainDocModel = session.createDocumentModel(\"/domain/anyFolder\", DOCUMENT_NAME, \"File\");\n        mainDocModel = session.createDocument(mainDocModel);", "author": "kevinleturc", "createdAt": "2020-02-03T14:53:27Z", "path": "nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java", "diffHunk": "@@ -0,0 +1,171 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.platform.ec.notification;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.text.SimpleDateFormat;\n+import java.time.Instant;\n+import java.util.Date;\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.common.utils.StringUtils;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.NuxeoPrincipal;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.notification.api.NotificationManager;\n+import org.nuxeo.ecm.platform.test.PlatformFeature;\n+import org.nuxeo.mail.SmtpMailServerFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n+\n+/**\n+ * Tests the whole email notification process: from subscribing to a given event to the reception of the email for this\n+ * event.\n+ *\n+ * @since 11.1\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ PlatformFeature.class, SmtpMailServerFeature.class })\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.api\")\n+@Deploy(\"org.nuxeo.ecm.platform.url.core\")\n+@Deploy(\"org.nuxeo.ecm.platform.notification.core.tests:OSGI-INF/notification-event-listener-contrib.xml\")\n+public class TestEmailNotification {\n+\n+    protected static final String DUMMY_NOTIFICATION_NAME = \"DummyNotificationToSendMail\";\n+\n+    protected static final String DUMMY_EVENT_NAME = \"dummyNotificationToSendMail\";\n+\n+    protected static final String DOCUMENT_NAME = \"anyFile\";\n+\n+    protected static final SimpleDateFormat EVENT_DATE_FORMAT = new SimpleDateFormat(\"dd/MM/yyyy - HH:mm\");\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @Inject\n+    protected NotificationManager notificationManager;\n+\n+    @Inject\n+    protected EventService eventService;\n+\n+    @Inject\n+    protected TransactionalFeature transactionalFeature;\n+\n+    @Inject\n+    protected SmtpMailServerFeature.MailsResult emailsResult;\n+\n+    protected DocumentModel domain;\n+\n+    @Before\n+    public void before() {\n+        domain = session.createDocumentModel(\"/\", \"domain\", \"Domain\");\n+        domain = session.createDocument(domain);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n+        DocumentModel documentModel = session.createDocumentModel(domain.getPathAsString(), DOCUMENT_NAME, \"File\");\n+        documentModel = session.createDocument(documentModel);\n+\n+        addDummySubscription(documentModel);\n+\n+        DocumentEventContext ctx = new DocumentEventContext(session, session.getPrincipal(), documentModel);\n+        Event event = ctx.newEvent(DUMMY_EVENT_NAME);\n+        eventService.fireEvent(event);\n+        transactionalFeature.nextTransaction();\n+\n+        checkMailContent(documentModel, event);\n+    }\n+\n+    @Test\n+    public void shouldReceiveNotificationMailWhenSubscribeToParentDocument() {\n+        DocumentModel folder = session.createDocumentModel(domain.getPathAsString(), \"anyFolder\", \"Folder\");\n+        folder = session.createDocument(folder);\n+\n+        addDummySubscription(folder);\n+\n+        // create a simple hierarchy (domain <- anyFolder <- DOCUMENT_NAME)\n+        DocumentModel mainDocModel = session.createDocumentModel(folder.getPathAsString(), DOCUMENT_NAME, \"File\");\n+        mainDocModel = session.createDocument(mainDocModel);", "originalCommit": "e417b9bcae1a5f98cec69b30eeb6e2100950cf50", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f0bb792aeaa810fb0e7cca8e50f8cca50993e8b", "chunk": "diff --git a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\nindex 6807f40ebe9..83639ea3dd3 100644\n--- a/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n+++ b/nuxeo-features/nuxeo-platform-notification/nuxeo-platform-notification-core/src/test/java/org/nuxeo/ecm/platform/ec/notification/TestEmailNotification.java\n\n@@ -100,7 +100,7 @@ public class TestEmailNotification {\n \n     @Test\n     public void shouldReceiveNotificationMailWhenSubscribeToDocument() {\n-        DocumentModel documentModel = session.createDocumentModel(domain.getPathAsString(), DOCUMENT_NAME, \"File\");\n+        DocumentModel documentModel = session.createDocumentModel(\"/domain\", DOCUMENT_NAME, \"File\");\n         documentModel = session.createDocument(documentModel);\n \n         addDummySubscription(documentModel);\n"}}, {"oid": "9f0bb792aeaa810fb0e7cca8e50f8cca50993e8b", "url": "https://github.com/nuxeo/nuxeo/commit/9f0bb792aeaa810fb0e7cca8e50f8cca50993e8b", "message": "NXP-28576: Add test coverage on mail notification", "committedDate": "2020-02-03T15:29:19Z", "type": "commit"}, {"oid": "9f0bb792aeaa810fb0e7cca8e50f8cca50993e8b", "url": "https://github.com/nuxeo/nuxeo/commit/9f0bb792aeaa810fb0e7cca8e50f8cca50993e8b", "message": "NXP-28576: Add test coverage on mail notification", "committedDate": "2020-02-03T15:29:19Z", "type": "forcePushed"}]}