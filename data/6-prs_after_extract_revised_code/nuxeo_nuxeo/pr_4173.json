{"pr_number": 4173, "pr_title": "NXP-29100: Orphaned DocumentRoute listener", "pr_createdAt": "2020-06-22T15:47:38Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4173", "timeline": [{"oid": "f16053cabda2d5b27e399159be6fe693a71b7dde", "url": "https://github.com/nuxeo/nuxeo/commit/f16053cabda2d5b27e399159be6fe693a71b7dde", "message": "NXP-29100: Orphaned DocumentRoute listener", "committedDate": "2020-06-22T16:00:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA1NTM0NA==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444055344", "bodyText": "Use DocumentRoutingConstants#ATTACHED_DOCUMENTS_PROPERTY_NAME?\nAlso, do we want to sort like in DocumentRoutingServiceImpl#getDocumentRoutesForAttachedDocument?", "author": "ataillefer", "createdAt": "2020-06-23T08:33:47Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n+\n+import java.util.List;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventBundle;\n+import org.nuxeo.ecm.core.event.PostCommitEventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+\n+/**\n+ * Listener that deletes orphan DocumentRoutes.\n+ *\n+ * @since 11.2\n+ */\n+public class DocumentRouteOrphanedListener implements PostCommitEventListener {\n+\n+    protected static final String QUERY_GET_RELATED_DOCUMENT_ROUTES = \"SELECT * FROM \" + DOCUMENT_ROUTE_DOCUMENT_TYPE\n+            + \" WHERE docri:participatingDocuments/* = '%s'\";", "originalCommit": "f16053cabda2d5b27e399159be6fe693a71b7dde", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ad1b9d19b742fb4bcd21a298878a5ee6a362821", "chunk": "diff --git a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\nindex 0cd94677bb5..62fd2b9ecd2 100644\n--- a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n+++ b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n\n@@ -18,6 +18,7 @@\n  */\n package org.nuxeo.ecm.platform.routing.core.listener;\n \n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ATTACHED_DOCUMENTS_PROPERTY_NAME;\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MDA0NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444060045", "bodyText": "Is there an alternative to peek? See the Sonar code smell.", "author": "ataillefer", "createdAt": "2020-06-23T08:41:24Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n+\n+import java.util.List;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventBundle;\n+import org.nuxeo.ecm.core.event.PostCommitEventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+\n+/**\n+ * Listener that deletes orphan DocumentRoutes.\n+ *\n+ * @since 11.2\n+ */\n+public class DocumentRouteOrphanedListener implements PostCommitEventListener {\n+\n+    protected static final String QUERY_GET_RELATED_DOCUMENT_ROUTES = \"SELECT * FROM \" + DOCUMENT_ROUTE_DOCUMENT_TYPE\n+            + \" WHERE docri:participatingDocuments/* = '%s'\";\n+\n+    @Override\n+    public void handleEvent(EventBundle events) {\n+        for (Event event : events) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            if (!DOCUMENT_ROUTE_DOCUMENT_TYPE.equals(docModel.getType())\n+                    && !ROUTING_TASK_DOC_TYPE.equals(docModel.getType())) {\n+                deleteOrphanDocumentRoutes(context.getCoreSession(), docModel.getId());\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Removes the given id from DocumentRoutes attached documents list and deletes the DocumentRoutes if they are not\n+     * attached to a document anymore.\n+     */\n+    protected void deleteOrphanDocumentRoutes(CoreSession session, String id) {\n+        String query = String.format(QUERY_GET_RELATED_DOCUMENT_ROUTES, id);\n+        session.query(query)\n+               .stream()\n+               .map(r -> r.getAdapter(DocumentRoute.class))\n+               .peek(r -> r.setAttachedDocuments(removeAttachedDoc(r, id)))", "originalCommit": "f16053cabda2d5b27e399159be6fe693a71b7dde", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3OTU3OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444079578", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                           .peek(r -> r.setAttachedDocuments(removeAttachedDoc(r, id)))\n          \n          \n            \n                           .map(r -> {\n          \n          \n            \n                               r.setAttachedDocuments(removeAttachedDoc(r, id));\n          \n          \n            \n                               return r;\n          \n          \n            \n                           })", "author": "NourNuxeo", "createdAt": "2020-06-23T09:12:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MDA0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE4OTczOA==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444189738", "bodyText": "Frankly at this point it would be more readable to write a standard for loop.", "author": "efge", "createdAt": "2020-06-23T12:38:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MDA0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5ad1b9d19b742fb4bcd21a298878a5ee6a362821", "chunk": "diff --git a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\nindex 0cd94677bb5..62fd2b9ecd2 100644\n--- a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n+++ b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n\n@@ -18,6 +18,7 @@\n  */\n package org.nuxeo.ecm.platform.routing.core.listener;\n \n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ATTACHED_DOCUMENTS_PROPERTY_NAME;\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MDM0MA==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444060340", "bodyText": "Use isEmpty() to check whether the collection is empty or not.", "author": "ataillefer", "createdAt": "2020-06-23T08:41:54Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n+\n+import java.util.List;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventBundle;\n+import org.nuxeo.ecm.core.event.PostCommitEventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+\n+/**\n+ * Listener that deletes orphan DocumentRoutes.\n+ *\n+ * @since 11.2\n+ */\n+public class DocumentRouteOrphanedListener implements PostCommitEventListener {\n+\n+    protected static final String QUERY_GET_RELATED_DOCUMENT_ROUTES = \"SELECT * FROM \" + DOCUMENT_ROUTE_DOCUMENT_TYPE\n+            + \" WHERE docri:participatingDocuments/* = '%s'\";\n+\n+    @Override\n+    public void handleEvent(EventBundle events) {\n+        for (Event event : events) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            if (!DOCUMENT_ROUTE_DOCUMENT_TYPE.equals(docModel.getType())\n+                    && !ROUTING_TASK_DOC_TYPE.equals(docModel.getType())) {\n+                deleteOrphanDocumentRoutes(context.getCoreSession(), docModel.getId());\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Removes the given id from DocumentRoutes attached documents list and deletes the DocumentRoutes if they are not\n+     * attached to a document anymore.\n+     */\n+    protected void deleteOrphanDocumentRoutes(CoreSession session, String id) {\n+        String query = String.format(QUERY_GET_RELATED_DOCUMENT_ROUTES, id);\n+        session.query(query)\n+               .stream()\n+               .map(r -> r.getAdapter(DocumentRoute.class))\n+               .peek(r -> r.setAttachedDocuments(removeAttachedDoc(r, id)))\n+               .peek(r -> session.saveDocument(r.getDocument()))\n+               .filter(r -> r.getAttachedDocuments().size() == 0)", "originalCommit": "f16053cabda2d5b27e399159be6fe693a71b7dde", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ad1b9d19b742fb4bcd21a298878a5ee6a362821", "chunk": "diff --git a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\nindex 0cd94677bb5..62fd2b9ecd2 100644\n--- a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n+++ b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n\n@@ -18,6 +18,7 @@\n  */\n package org.nuxeo.ecm.platform.routing.core.listener;\n \n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ATTACHED_DOCUMENTS_PROPERTY_NAME;\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MjU1NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444062555", "bodyText": "saveDocument is useless if createDocument was called just before and no property was updated", "author": "ataillefer", "createdAt": "2020-06-23T08:45:38Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -384,6 +385,31 @@ public void testOrphanTasksDeletion() {\n         assertFalse(session.exists(task.getRef()));\n     }\n \n+    @Test\n+    public void testOrphanDocumentRoutesDeletion() {\n+        DocumentModel file1 = session.createDocumentModel(\"/\", \"File1\", \"File\");\n+        file1 = session.createDocument(file1);\n+        file1 = session.saveDocument(file1);", "originalCommit": "f16053cabda2d5b27e399159be6fe693a71b7dde", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ad1b9d19b742fb4bcd21a298878a5ee6a362821", "chunk": "diff --git a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java\nindex ebb7b6ab6db..6eda269eecd 100644\n--- a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java\n+++ b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java\n\n@@ -389,16 +389,13 @@ public class TestDocumentRoutingService extends DocumentRoutingTestCase {\n     public void testOrphanDocumentRoutesDeletion() {\n         DocumentModel file1 = session.createDocumentModel(\"/\", \"File1\", \"File\");\n         file1 = session.createDocument(file1);\n-        file1 = session.saveDocument(file1);\n         DocumentModel file2 = session.createDocumentModel(\"/\", \"File2\", \"File\");\n         file2 = session.createDocument(file2);\n-        file2 = session.saveDocument(file2);\n         List<String> docIds = List.of(file1.getId(), file2.getId());\n         DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute1\",\n                 DOCUMENT_ROUTE_DOCUMENT_TYPE);\n         route.setPropertyValue(DocumentRoutingConstants.ATTACHED_DOCUMENTS_PROPERTY_NAME, (Serializable) docIds);\n         route = session.createDocument(route);\n-        route = session.saveDocument(route);\n \n         session.removeDocument(file1.getRef());\n         txFeature.nextTransaction();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MjgxNA==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444062814", "bodyText": "useless", "author": "ataillefer", "createdAt": "2020-06-23T08:46:03Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -384,6 +385,31 @@ public void testOrphanTasksDeletion() {\n         assertFalse(session.exists(task.getRef()));\n     }\n \n+    @Test\n+    public void testOrphanDocumentRoutesDeletion() {\n+        DocumentModel file1 = session.createDocumentModel(\"/\", \"File1\", \"File\");\n+        file1 = session.createDocument(file1);\n+        file1 = session.saveDocument(file1);\n+        DocumentModel file2 = session.createDocumentModel(\"/\", \"File2\", \"File\");\n+        file2 = session.createDocument(file2);\n+        file2 = session.saveDocument(file2);\n+        List<String> docIds = List.of(file1.getId(), file2.getId());\n+        DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute1\",\n+                DOCUMENT_ROUTE_DOCUMENT_TYPE);\n+        route.setPropertyValue(DocumentRoutingConstants.ATTACHED_DOCUMENTS_PROPERTY_NAME, (Serializable) docIds);\n+        route = session.createDocument(route);\n+        route = session.saveDocument(route);", "originalCommit": "f16053cabda2d5b27e399159be6fe693a71b7dde", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ad1b9d19b742fb4bcd21a298878a5ee6a362821", "chunk": "diff --git a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java\nindex ebb7b6ab6db..6eda269eecd 100644\n--- a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java\n+++ b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java\n\n@@ -389,16 +389,13 @@ public class TestDocumentRoutingService extends DocumentRoutingTestCase {\n     public void testOrphanDocumentRoutesDeletion() {\n         DocumentModel file1 = session.createDocumentModel(\"/\", \"File1\", \"File\");\n         file1 = session.createDocument(file1);\n-        file1 = session.saveDocument(file1);\n         DocumentModel file2 = session.createDocumentModel(\"/\", \"File2\", \"File\");\n         file2 = session.createDocument(file2);\n-        file2 = session.saveDocument(file2);\n         List<String> docIds = List.of(file1.getId(), file2.getId());\n         DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute1\",\n                 DOCUMENT_ROUTE_DOCUMENT_TYPE);\n         route.setPropertyValue(DocumentRoutingConstants.ATTACHED_DOCUMENTS_PROPERTY_NAME, (Serializable) docIds);\n         route = session.createDocument(route);\n-        route = session.saveDocument(route);\n \n         session.removeDocument(file1.getRef());\n         txFeature.nextTransaction();\n"}}, {"oid": "5ad1b9d19b742fb4bcd21a298878a5ee6a362821", "url": "https://github.com/nuxeo/nuxeo/commit/5ad1b9d19b742fb4bcd21a298878a5ee6a362821", "message": "NXP-29100: Orphaned DocumentRoute listener", "committedDate": "2020-06-23T09:27:25Z", "type": "forcePushed"}, {"oid": "cdcd3b2e78545d1ecb33640e25f8ec6ec4051fe5", "url": "https://github.com/nuxeo/nuxeo/commit/cdcd3b2e78545d1ecb33640e25f8ec6ec4051fe5", "message": "NXP-29100: Orphaned DocumentRoute listener", "committedDate": "2020-06-23T13:58:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2Mjg4OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444262888", "bodyText": "I would just work with the doc itself and doc#getPropertyValue/doc#setPropertyValue than mixing adapter and session/doc - I find it hardly understandable.", "author": "troger", "createdAt": "2020-06-23T14:22:13Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ATTACHED_DOCUMENTS_PROPERTY_NAME;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventBundle;\n+import org.nuxeo.ecm.core.event.PostCommitEventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+\n+/**\n+ * Listener that deletes orphan DocumentRoutes.\n+ *\n+ * @since 11.2\n+ */\n+public class DocumentRouteOrphanedListener implements PostCommitEventListener {\n+\n+    protected static final String QUERY_GET_RELATED_DOCUMENT_ROUTES = \"SELECT * FROM \" + DOCUMENT_ROUTE_DOCUMENT_TYPE\n+            + \" WHERE \" + ATTACHED_DOCUMENTS_PROPERTY_NAME + \" = '%s' ORDER BY dc:created\";\n+\n+    @Override\n+    public void handleEvent(EventBundle events) {\n+        for (Event event : events) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            if (!DOCUMENT_ROUTE_DOCUMENT_TYPE.equals(docModel.getType())\n+                    && !ROUTING_TASK_DOC_TYPE.equals(docModel.getType())) {\n+                deleteOrphanDocumentRoutes(context.getCoreSession(), docModel.getId());\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Removes the given id from DocumentRoutes attached documents list and deletes the DocumentRoutes if they are not\n+     * attached to a document anymore.\n+     */\n+    protected void deleteOrphanDocumentRoutes(CoreSession session, String id) {\n+        String query = String.format(QUERY_GET_RELATED_DOCUMENT_ROUTES, id);\n+        for (DocumentModel doc : session.query(query)) {\n+            DocumentRoute route = doc.getAdapter(DocumentRoute.class);\n+            var attachedDocuments = route.getAttachedDocuments();\n+            attachedDocuments.remove(id);\n+            if (attachedDocuments.isEmpty()) {\n+                session.removeDocument(doc.getRef());\n+            } else {\n+                route.setAttachedDocuments(attachedDocuments);\n+                session.saveDocument(doc);\n+            }", "originalCommit": "cdcd3b2e78545d1ecb33640e25f8ec6ec4051fe5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI4Mzc0Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444283746", "bodyText": "Makes it simpler for me as well. I thought it would be more robust to use the adapter.", "author": "NourNuxeo", "createdAt": "2020-06-23T14:48:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2Mjg4OA=="}], "type": "inlineReview", "revised_code": {"commit": "6b0d63eb99f35c9dfc901c90588973ad47f27a9e", "chunk": "diff --git a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\nindex 7f3b007d83c..ea7fefe0864 100644\n--- a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n+++ b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n\n@@ -22,6 +22,9 @@ import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ATTACH\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n \n+import java.io.Serializable;\n+import java.util.List;\n+\n import org.nuxeo.ecm.core.api.CoreSession;\n import org.nuxeo.ecm.core.api.DocumentModel;\n import org.nuxeo.ecm.core.event.Event;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2NTMwMw==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444265303", "bodyText": "Why the order?", "author": "troger", "createdAt": "2020-06-23T14:25:14Z", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ATTACHED_DOCUMENTS_PROPERTY_NAME;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventBundle;\n+import org.nuxeo.ecm.core.event.PostCommitEventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+\n+/**\n+ * Listener that deletes orphan DocumentRoutes.\n+ *\n+ * @since 11.2\n+ */\n+public class DocumentRouteOrphanedListener implements PostCommitEventListener {\n+\n+    protected static final String QUERY_GET_RELATED_DOCUMENT_ROUTES = \"SELECT * FROM \" + DOCUMENT_ROUTE_DOCUMENT_TYPE\n+            + \" WHERE \" + ATTACHED_DOCUMENTS_PROPERTY_NAME + \" = '%s' ORDER BY dc:created\";", "originalCommit": "cdcd3b2e78545d1ecb33640e25f8ec6ec4051fe5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI3Nzk3OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444277979", "bodyText": "Just saw @ataillefer comment... I'm still not sure we need to add a sort here...", "author": "troger", "createdAt": "2020-06-23T14:41:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2NTMwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI4NTc5NA==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444285794", "bodyText": "I thought if you delete a parent workflow you don't need to check the subworkflows, but now that I think about it, but even if it was to work we would run into DocumentNotFoundException.", "author": "NourNuxeo", "createdAt": "2020-06-23T14:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2NTMwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MDg2NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4173#discussion_r444290865", "bodyText": "In fact, the sorting clause I was talking about was added for the UI, see NXP-11738 and nuxeo-archives/nuxeo-platform-document-routing@bcfa699, so I think it's indeed not relevant here.", "author": "ataillefer", "createdAt": "2020-06-23T14:57:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2NTMwMw=="}], "type": "inlineReview", "revised_code": {"commit": "6b0d63eb99f35c9dfc901c90588973ad47f27a9e", "chunk": "diff --git a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\nindex 7f3b007d83c..ea7fefe0864 100644\n--- a/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n+++ b/modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteOrphanedListener.java\n\n@@ -22,6 +22,9 @@ import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ATTACH\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.ROUTING_TASK_DOC_TYPE;\n \n+import java.io.Serializable;\n+import java.util.List;\n+\n import org.nuxeo.ecm.core.api.CoreSession;\n import org.nuxeo.ecm.core.api.DocumentModel;\n import org.nuxeo.ecm.core.event.Event;\n"}}, {"oid": "6b0d63eb99f35c9dfc901c90588973ad47f27a9e", "url": "https://github.com/nuxeo/nuxeo/commit/6b0d63eb99f35c9dfc901c90588973ad47f27a9e", "message": "NXP-29100: Orphaned DocumentRoute listener", "committedDate": "2020-06-23T15:41:10Z", "type": "commit"}, {"oid": "6b0d63eb99f35c9dfc901c90588973ad47f27a9e", "url": "https://github.com/nuxeo/nuxeo/commit/6b0d63eb99f35c9dfc901c90588973ad47f27a9e", "message": "NXP-29100: Orphaned DocumentRoute listener", "committedDate": "2020-06-23T15:41:10Z", "type": "forcePushed"}]}