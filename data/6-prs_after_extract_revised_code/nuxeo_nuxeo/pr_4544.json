{"pr_number": 4544, "pr_title": "NXP-29969: component manager listener", "pr_createdAt": "2020-12-14T14:11:42Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4544", "timeline": [{"oid": "54030b3d214c43b473ebffada2b93b68826a18cb", "url": "https://github.com/nuxeo/nuxeo/commit/54030b3d214c43b473ebffada2b93b68826a18cb", "message": "NXP-29969: adapt components registering component manager listeners", "committedDate": "2020-12-21T17:59:37Z", "type": "forcePushed"}, {"oid": "632df06619e4fa8f7ad6a843809bed25acfc635c", "url": "https://github.com/nuxeo/nuxeo/commit/632df06619e4fa8f7ad6a843809bed25acfc635c", "message": "NXP-29969: adapt components registering component manager listeners", "committedDate": "2020-12-22T09:38:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxNDc5OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4544#discussion_r547214798", "bodyText": "Old code but = 0 is redundant. You should probably keep Bogdan's name in the contributors as well.", "author": "efge", "createdAt": "2020-12-22T11:06:15Z", "path": "modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/MockEventsInfo.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Anahide Tchertchian\n+ */\n+package org.nuxeo.runtime;\n+\n+/**\n+ * @since 11.5\n+ */\n+public class MockEventsInfo {\n+\n+    public int beforeStop = 0;", "originalCommit": "5d37accf92cfea39967d740d496a46ecd6932fb9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c4ec2dd611a7ca219958d73c20a1bfb1ffe7210", "chunk": "diff --git a/modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/MockEventsInfo.java b/modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/MockEventsInfo.java\nindex 0f6a97a0c8a..5c3acc9a5d5 100644\n--- a/modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/MockEventsInfo.java\n+++ b/modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/MockEventsInfo.java\n\n@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ * (C) Copyright 2006-2020 Nuxeo (http://nuxeo.com/) and others.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxOTc3Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/4544#discussion_r547219772", "bodyText": "Maybe change the debug messages?", "author": "efge", "createdAt": "2020-12-22T11:17:16Z", "path": "modules/runtime/nuxeo-runtime-stream/src/main/java/org/nuxeo/runtime/stream/StreamServiceImpl.java", "diffHunk": "@@ -247,21 +246,18 @@ public void stopProcessors() {\n         processors.clear();\n     }\n \n-    protected class ComponentsLifeCycleListener implements ComponentManager.Listener {\n-        @Override\n-        public void afterStart(ComponentManager mgr, boolean isResume) {\n-            // this is called once all components are started and ready\n-            log.debug(\"afterStart\");\n-            startProcessors();\n-        }\n+    @Override\n+    public void afterRuntimeStart(ComponentManager mgr, boolean isResume) {\n+        // this is called once all components are started and ready\n+        log.debug(\"afterStart\");", "originalCommit": "632df06619e4fa8f7ad6a843809bed25acfc635c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c4ec2dd611a7ca219958d73c20a1bfb1ffe7210", "chunk": "diff --git a/modules/runtime/nuxeo-runtime-stream/src/main/java/org/nuxeo/runtime/stream/StreamServiceImpl.java b/modules/runtime/nuxeo-runtime-stream/src/main/java/org/nuxeo/runtime/stream/StreamServiceImpl.java\nindex 8fe065ad34e..04fb2bc0b3d 100644\n--- a/modules/runtime/nuxeo-runtime-stream/src/main/java/org/nuxeo/runtime/stream/StreamServiceImpl.java\n+++ b/modules/runtime/nuxeo-runtime-stream/src/main/java/org/nuxeo/runtime/stream/StreamServiceImpl.java\n\n@@ -249,14 +249,14 @@ public class StreamServiceImpl extends DefaultComponent implements StreamService\n     @Override\n     public void afterRuntimeStart(ComponentManager mgr, boolean isResume) {\n         // this is called once all components are started and ready\n-        log.debug(\"afterStart\");\n+        log.debug(\"afterRuntimeStart\");\n         startProcessors();\n     }\n \n     @Override\n     public void beforeRuntimeStop(ComponentManager mgr, boolean isStandby) {\n         // this is called before components are stopped\n-        log.debug(\"beforeStop\");\n+        log.debug(\"beforeRuntimeStop\");\n         stopProcessors();\n     }\n \n"}}, {"oid": "2c4ec2dd611a7ca219958d73c20a1bfb1ffe7210", "url": "https://github.com/nuxeo/nuxeo/commit/2c4ec2dd611a7ca219958d73c20a1bfb1ffe7210", "message": "NXP-29969: adapt components registering component manager listeners", "committedDate": "2020-12-22T12:44:00Z", "type": "forcePushed"}, {"oid": "c86c17316abd7a52d4491a4a5e58e74d2a0ef884", "url": "https://github.com/nuxeo/nuxeo/commit/c86c17316abd7a52d4491a4a5e58e74d2a0ef884", "message": "NXP-29969: adapt components registering component manager listeners", "committedDate": "2020-12-22T13:14:02Z", "type": "forcePushed"}, {"oid": "2c43aecd4ebb153c196f13f7dd6ec85b722e6641", "url": "https://github.com/nuxeo/nuxeo/commit/2c43aecd4ebb153c196f13f7dd6ec85b722e6641", "message": "NXP-29969: call listener start methods following start order on components", "committedDate": "2020-12-23T09:12:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3NzcyMA==", "url": "https://github.com/nuxeo/nuxeo/pull/4544#discussion_r547877720", "bodyText": "To be consistent I think that stop should use the reverse order.", "author": "efge", "createdAt": "2020-12-23T10:04:26Z", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/ComponentManagerImpl.java", "diffHunk": "@@ -1283,49 +1293,63 @@ public void remove(ComponentManager.Listener listener) {\n \n         public void beforeActivation() {\n             for (Object listener : listeners.getListeners()) {\n-                ((ComponentManager.Listener) listener).beforeActivation(ComponentManagerImpl.this);\n+                ((ComponentManager.Listener) listener).beforeRuntimeActivation(ComponentManagerImpl.this);\n             }\n         }\n \n         public void afterActivation() {\n             for (Object listener : listeners.getListeners()) {\n-                ((ComponentManager.Listener) listener).afterActivation(ComponentManagerImpl.this);\n+                ((ComponentManager.Listener) listener).afterRuntimeActivation(ComponentManagerImpl.this);\n             }\n         }\n \n         public void beforeDeactivation() {\n             for (Object listener : listeners.getListeners()) {\n-                ((ComponentManager.Listener) listener).beforeDeactivation(ComponentManagerImpl.this);\n+                ((ComponentManager.Listener) listener).beforeRuntimeDeactivation(ComponentManagerImpl.this);\n             }\n         }\n \n         public void afterDeactivation() {\n             for (Object listener : listeners.getListeners()) {\n-                ((ComponentManager.Listener) listener).afterDeactivation(ComponentManagerImpl.this);\n+                ((ComponentManager.Listener) listener).afterRuntimeDeactivation(ComponentManagerImpl.this);\n             }\n         }\n \n+        /**\n+         * Sort listeners to follow start order on components.\n+         *\n+         * @since 11.5\n+         */\n+        protected Stream<ComponentManager.Listener> sortedForStart() {\n+            Stream<ComponentManager.Listener> regularListeners = Arrays.stream(listeners.getListeners())\n+                                                                       .filter(l -> !(l instanceof Component))\n+                                                                       .map(ComponentManager.Listener.class::cast);\n+            Stream<ComponentManager.Listener> componentListeners = Arrays.stream(listeners.getListeners())\n+                                                                         .filter(Component.class::isInstance)\n+                                                                         .map(Component.class::cast)\n+                                                                         .sorted(Comparator.comparingInt(\n+                                                                                 Component::getApplicationStartedOrder))\n+                                                                         .map(ComponentManager.Listener.class::cast);\n+            return Stream.concat(regularListeners, componentListeners);\n+        }\n+\n         public void beforeStart(boolean isResume) {\n-            for (Object listener : listeners.getListeners()) {\n-                ((ComponentManager.Listener) listener).beforeStart(ComponentManagerImpl.this, isResume);\n-            }\n+            sortedForStart().forEach(listener -> listener.beforeRuntimeStart(ComponentManagerImpl.this, isResume));\n         }\n \n         public void afterStart(boolean isResume) {\n-            for (Object listener : listeners.getListeners()) {\n-                ((ComponentManager.Listener) listener).afterStart(ComponentManagerImpl.this, isResume);\n-            }\n+            sortedForStart().forEach(listener -> listener.afterRuntimeStart(ComponentManagerImpl.this, isResume));", "originalCommit": "2c43aecd4ebb153c196f13f7dd6ec85b722e6641", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "07009317c32bc733d4ed95cf2d3910241f02b507", "chunk": "diff --git a/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/ComponentManagerImpl.java b/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/ComponentManagerImpl.java\nindex c0a67d40edb..c99205ee46b 100644\n--- a/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/ComponentManagerImpl.java\n+++ b/modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/ComponentManagerImpl.java\n\n@@ -1342,15 +1342,13 @@ public class ComponentManagerImpl implements ComponentManager {\n         }\n \n         public void beforeStop(boolean isStandby) {\n-            for (Object listener : listeners.getListeners()) {\n-                ((ComponentManager.Listener) listener).beforeRuntimeStop(ComponentManagerImpl.this, isStandby);\n-            }\n+            sortedForStart().sorted(Collections.reverseOrder())\n+                            .forEach(listener -> listener.beforeRuntimeStop(ComponentManagerImpl.this, isStandby));\n         }\n \n         public void afterStop(boolean isStandby) {\n-            for (Object listener : listeners.getListeners()) {\n-                ((ComponentManager.Listener) listener).afterRuntimeStop(ComponentManagerImpl.this, isStandby);\n-            }\n+            sortedForStart().sorted(Collections.reverseOrder())\n+                            .forEach(listener -> listener.afterRuntimeStop(ComponentManagerImpl.this, isStandby));\n         }\n \n     }\n"}}, {"oid": "07009317c32bc733d4ed95cf2d3910241f02b507", "url": "https://github.com/nuxeo/nuxeo/commit/07009317c32bc733d4ed95cf2d3910241f02b507", "message": "NXP-29969: call listener start/stop methods following start order on components", "committedDate": "2020-12-23T10:10:23Z", "type": "forcePushed"}, {"oid": "03222b49058495bc8fa66965f849e8239643d7c8", "url": "https://github.com/nuxeo/nuxeo/commit/03222b49058495bc8fa66965f849e8239643d7c8", "message": "NXP-29969: call listener start/stop methods following start order on components", "committedDate": "2020-12-23T10:59:51Z", "type": "forcePushed"}, {"oid": "9e632bb72d6bdb5c71cd540619c681ae6eb0d208", "url": "https://github.com/nuxeo/nuxeo/commit/9e632bb72d6bdb5c71cd540619c681ae6eb0d208", "message": "NXP-29969: automatically register as listeners all components that implement the listener interface", "committedDate": "2021-01-08T08:21:31Z", "type": "commit"}, {"oid": "ce467e14bc2f1bb6e9c08128936b7149d0c39550", "url": "https://github.com/nuxeo/nuxeo/commit/ce467e14bc2f1bb6e9c08128936b7149d0c39550", "message": "NXP-29969: add alternative API for ComponentManager.Listener", "committedDate": "2021-01-08T08:21:31Z", "type": "commit"}, {"oid": "e8f23d44e4faee8ccdcaa5e1123031c50111092e", "url": "https://github.com/nuxeo/nuxeo/commit/e8f23d44e4faee8ccdcaa5e1123031c50111092e", "message": "NXP-29969: call listener start/stop methods following start order on components", "committedDate": "2021-01-08T08:21:32Z", "type": "forcePushed"}, {"oid": "d2a32a99573b9f30b632d9885ff341850e54c589", "url": "https://github.com/nuxeo/nuxeo/commit/d2a32a99573b9f30b632d9885ff341850e54c589", "message": "NXP-29969: adapt components registering component manager listeners", "committedDate": "2021-01-08T17:03:50Z", "type": "commit"}, {"oid": "278ac779a30e3e8c392232304a0e54758d39f7c7", "url": "https://github.com/nuxeo/nuxeo/commit/278ac779a30e3e8c392232304a0e54758d39f7c7", "message": "NXP-29969: call listener start/stop methods following start order on components", "committedDate": "2021-01-08T17:03:50Z", "type": "commit"}, {"oid": "278ac779a30e3e8c392232304a0e54758d39f7c7", "url": "https://github.com/nuxeo/nuxeo/commit/278ac779a30e3e8c392232304a0e54758d39f7c7", "message": "NXP-29969: call listener start/stop methods following start order on components", "committedDate": "2021-01-08T17:03:50Z", "type": "forcePushed"}]}