{"pr_number": 4411, "pr_title": "NXP-29791: forbid deletion of the main blob of a document under retention / legal hold", "pr_createdAt": "2020-10-22T15:24:30Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4411", "timeline": [{"oid": "b65f2dd57707081d3f7451f90dc96ea01e8df7c5", "url": "https://github.com/nuxeo/nuxeo/commit/b65f2dd57707081d3f7451f90dc96ea01e8df7c5", "message": "NXP-29791: make impossible the blob deletion of a document under retention", "committedDate": "2020-10-22T15:57:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4MTk5Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r512581992", "bodyText": "Not sure if I'm seeing this correctly but, would it make sense to just declare key and call setPropertyValue inside the try block?", "author": "nmpcunha", "createdAt": "2020-10-27T10:41:07Z", "path": "modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java", "diffHunk": "@@ -691,17 +691,13 @@ protected void setValueBlob(T state, Blob blob, String xpath) throws PropertyExc\n     }\n \n     protected void setPropertyBlobData(String xpath, String string) {\n+        Blob blob = StringUtils.isNotEmpty(string) ? Blobs.createBlob(string) : null;\n+        DocumentBlobManager blobManager = Framework.getService(DocumentBlobManager.class);\n         String key;\n-        if (string == null) {\n-            key = null;\n-        } else {\n-            Blob blob = Blobs.createBlob(string);\n-            DocumentBlobManager blobManager = Framework.getService(DocumentBlobManager.class);\n-            try {\n-                key = blobManager.writeBlob(blob, this, xpath);\n-            } catch (IOException e) {\n-                throw new PropertyException(\"Cannot write binary for doc: \" + getUUID(), e);\n-            }\n+        try {\n+            key = blobManager.writeBlob(blob, this, xpath);\n+        } catch (IOException e) {", "originalCommit": "b65f2dd57707081d3f7451f90dc96ea01e8df7c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE4Njc0OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r518186748", "bodyText": "It's preferable to have try/catch blocks cover just what's needed and nothing more.", "author": "efge", "createdAt": "2020-11-05T16:29:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4MTk5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "657ef5c91333cee3e9421cf32a8235f337dbd57d", "chunk": "diff --git a/modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java b/modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java\nindex dcd27673472..d51363eebee 100644\n--- a/modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java\n+++ b/modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java\n\n@@ -691,7 +691,7 @@ public abstract class BaseDocument<T extends StateAccessor> implements Document\n     }\n \n     protected void setPropertyBlobData(String xpath, String string) {\n-        Blob blob = StringUtils.isNotEmpty(string) ? Blobs.createBlob(string) : null;\n+        Blob blob = string == null ? null : Blobs.createBlob(string);\n         DocumentBlobManager blobManager = Framework.getService(DocumentBlobManager.class);\n         String key;\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4NDM1OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r512584358", "bodyText": "IIRC it is only about file:content, right? Other blobs can be modified if a document is under retention?", "author": "nmpcunha", "createdAt": "2020-10-27T10:44:55Z", "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/blob/DocumentBlobManagerComponent.java", "diffHunk": "@@ -182,6 +182,14 @@ protected BlobProvider getBlobProvider(String key, String repositoryName) {\n      */\n     @Override\n     public String writeBlob(Blob blob, Document doc, String xpath) throws IOException {\n+        if (blob == null) {\n+            if (MAIN_BLOB_XPATH.equals(xpath) && doc.isUnderRetentionOrLegalHold()) {", "originalCommit": "b65f2dd57707081d3f7451f90dc96ea01e8df7c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgzMDAwOA==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r512830008", "bodyText": "Yes, I reused almost the same check, initially I extract it as a variable but some tests failed, and just let copy the same check. And file:content I think so I discussed with Julien (you can find more on Slack on our discussion)", "author": "RSalem07", "createdAt": "2020-10-27T16:12:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4NDM1OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NzE1MA==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r514157150", "bodyText": "What do you think about adding a new API such as isBlobWriteable which does this check, and maybe the one l. 211(?), in order to avoid to allow null values for blob in this API?", "author": "kevinleturc", "createdAt": "2020-10-29T10:33:31Z", "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/blob/DocumentBlobManagerComponent.java", "diffHunk": "@@ -182,6 +182,14 @@ protected BlobProvider getBlobProvider(String key, String repositoryName) {\n      */\n     @Override\n     public String writeBlob(Blob blob, Document doc, String xpath) throws IOException {\n+        if (blob == null) {\n+            if (MAIN_BLOB_XPATH.equals(xpath) && doc.isUnderRetentionOrLegalHold()) {\n+                throw new DocumentSecurityException(\n+                        \"Cannot delete blob from document \" + doc.getUUID() + \", it is under retention / hold\");\n+            }\n+            return null;\n+        }", "originalCommit": "b65f2dd57707081d3f7451f90dc96ea01e8df7c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDE1MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r514300151", "bodyText": "Not sure if I understood and maybe the one l. 211(?), could you please elaborate a little bit?\nRegarding the new API, would it also make sense for the 10.10 backport?\nThanks!", "author": "nmpcunha", "createdAt": "2020-10-29T14:26:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NzE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEwOTY0OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r518109648", "bodyText": "Not sure if I understood and maybe the one l. 211(?), could you please elaborate a little bit?\n\nSure, I was talking about this part of the code \n  \n    \n      nuxeo/modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/blob/DocumentBlobManagerComponent.java\n    \n    \n        Lines 219 to 222\n      in\n      b65f2dd\n    \n    \n    \n    \n\n        \n          \n           if (MAIN_BLOB_XPATH.equals(xpath) && blobProvider.isRecordMode() && doc.isUnderRetentionOrLegalHold()) { \n        \n\n        \n          \n               throw new DocumentSecurityException( \n        \n\n        \n          \n                       \"Cannot change blob from document \" + doc.getUUID() + \", it is under retention / hold\"); \n        \n\n        \n          \n           } \n        \n    \n  \n\n which could leverage\nthe new API.\n\nRegarding the new API, would it also make sense for the 10.10 backport?\n\nIt would make sense for the 10.10 backport if the API has a default implementation.", "author": "kevinleturc", "createdAt": "2020-11-05T14:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NzE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE4OTUyOQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r518189529", "bodyText": "It's not clear to me on what class you want to add this new API.\nAs it's a detail, let's postpone refactorings and just do a minimal change + backport.", "author": "efge", "createdAt": "2020-11-05T16:33:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NzE1MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "657ef5c91333cee3e9421cf32a8235f337dbd57d", "url": "https://github.com/nuxeo/nuxeo/commit/657ef5c91333cee3e9421cf32a8235f337dbd57d", "message": "NXP-29791: forbid deletion of the main blob of a document under retention / legal hold", "committedDate": "2020-11-05T16:43:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE4NDkxNg==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r518184916", "bodyText": "Testing for \"empty\" is wrong, it's legal too have a blob containing a 0-byte content.\nEven though for now this is used in cases where the difference doesn't really matter (binary fulltext), it's not the case in general.", "author": "efge", "createdAt": "2020-11-05T16:27:27Z", "path": "modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java", "diffHunk": "@@ -691,17 +691,13 @@ protected void setValueBlob(T state, Blob blob, String xpath) throws PropertyExc\n     }\n \n     protected void setPropertyBlobData(String xpath, String string) {\n+        Blob blob = StringUtils.isNotEmpty(string) ? Blobs.createBlob(string) : null;", "originalCommit": "b65f2dd57707081d3f7451f90dc96ea01e8df7c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "657ef5c91333cee3e9421cf32a8235f337dbd57d", "chunk": "diff --git a/modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java b/modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java\nindex dcd27673472..d51363eebee 100644\n--- a/modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java\n+++ b/modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/BaseDocument.java\n\n@@ -691,7 +691,7 @@ public abstract class BaseDocument<T extends StateAccessor> implements Document\n     }\n \n     protected void setPropertyBlobData(String xpath, String string) {\n-        Blob blob = StringUtils.isNotEmpty(string) ? Blobs.createBlob(string) : null;\n+        Blob blob = string == null ? null : Blobs.createBlob(string);\n         DocumentBlobManager blobManager = Framework.getService(DocumentBlobManager.class);\n         String key;\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE5ODE2OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4411#discussion_r518198169", "bodyText": "I added the Javadoc to.", "author": "efge", "createdAt": "2020-11-05T16:45:33Z", "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/blob/DocumentBlobManager.java", "diffHunk": "@@ -60,6 +60,9 @@\n \n     /**\n      * Writes a {@link Blob} to storage and returns its key.\n+     * <p>\n+     * The passed blob may be {@code null}, in which case a {@code null} key is returned after checking that deleting\n+     * this blob is allowed.", "originalCommit": "657ef5c91333cee3e9421cf32a8235f337dbd57d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "3c18bc19451fbb7fb8a0d58d8a7ed73cad8354fd", "url": "https://github.com/nuxeo/nuxeo/commit/3c18bc19451fbb7fb8a0d58d8a7ed73cad8354fd", "message": "NXP-29791: forbid deletion of the main blob of a document under retention / legal hold", "committedDate": "2020-11-05T16:46:27Z", "type": "commit"}, {"oid": "3c18bc19451fbb7fb8a0d58d8a7ed73cad8354fd", "url": "https://github.com/nuxeo/nuxeo/commit/3c18bc19451fbb7fb8a0d58d8a7ed73cad8354fd", "message": "NXP-29791: forbid deletion of the main blob of a document under retention / legal hold", "committedDate": "2020-11-05T16:46:27Z", "type": "forcePushed"}]}