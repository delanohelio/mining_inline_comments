{"pr_number": 3666, "pr_title": "[Streaming] Increasing configuration of various streaming exchanges, small improvements", "pr_createdAt": "2020-08-23T20:11:40Z", "pr_url": "https://github.com/knowm/XChange/pull/3666", "timeline": [{"oid": "5fbb5b283fcba70972b29519758e3138d29828cb", "url": "https://github.com/knowm/XChange/commit/5fbb5b283fcba70972b29519758e3138d29828cb", "message": "Increasing configurability of various streaming exchanges, small improvements", "committedDate": "2020-08-23T20:08:55Z", "type": "commit"}, {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61", "url": "https://github.com/knowm/XChange/commit/8ff9e41ef607a4d1cc4d8d617959904b67e6bc61", "message": "exposing subscription channel", "committedDate": "2020-08-23T21:33:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MTk3Ng==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475271976", "bodyText": "nit: methods like this are called a lot in high-volume code. This would be more efficient:\nvar split = productId.split('-');\nreturn new CurrencyPair(split[0], split[1]);", "author": "badgerwithagun", "createdAt": "2020-08-23T21:55:54Z", "path": "xchange-coinbasepro/src/main/java/org/knowm/xchange/coinbasepro/CoinbaseProAdapters.java", "diffHunk": "@@ -100,6 +100,10 @@ protected static Date parseDate(final String rawDate) {\n     }\n   }\n \n+  public static CurrencyPair toCurrencyPair(final String productId) {\n+    return new CurrencyPair(productId.replace('-', '/'));", "originalCommit": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjQzNw==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272437", "bodyText": "updated", "author": "earce", "createdAt": "2020-08-23T22:00:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MTk3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "79bd5fc7920b09011d9b64c00ffded585b5c3a11", "chunk": "diff --git a/xchange-coinbasepro/src/main/java/org/knowm/xchange/coinbasepro/CoinbaseProAdapters.java b/xchange-coinbasepro/src/main/java/org/knowm/xchange/coinbasepro/CoinbaseProAdapters.java\nindex 9b695f820c..49e53870dd 100644\n--- a/xchange-coinbasepro/src/main/java/org/knowm/xchange/coinbasepro/CoinbaseProAdapters.java\n+++ b/xchange-coinbasepro/src/main/java/org/knowm/xchange/coinbasepro/CoinbaseProAdapters.java\n\n@@ -101,7 +101,8 @@ public class CoinbaseProAdapters {\n   }\n \n   public static CurrencyPair toCurrencyPair(final String productId) {\n-    return new CurrencyPair(productId.replace('-', '/'));\n+    final String[] parts = productId.split(\"-\");\n+    return new CurrencyPair(parts[0], parts[1]);\n   }\n \n   public static Ticker adaptTicker(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzMQ==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272131", "bodyText": "Why make this public?", "author": "badgerwithagun", "createdAt": "2020-08-23T21:57:39Z", "path": "xchange-stream-kraken/src/main/java/info/bitrich/xchangestream/kraken/KrakenStreamingExchange.java", "diffHunk": "@@ -29,7 +29,7 @@\n \n   public KrakenStreamingExchange() {}\n \n-  private static String pickUri(boolean isPrivate, boolean useBeta) {\n+  public static String pickUri(boolean isPrivate, boolean useBeta) {", "originalCommit": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjE2OQ==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272169", "bodyText": "@badgerwithagun I use these urls directly in my own code and would like to expose them.", "author": "earce", "createdAt": "2020-08-23T21:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzNg==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272136", "bodyText": "Or this?", "author": "badgerwithagun", "createdAt": "2020-08-23T21:57:44Z", "path": "xchange-stream-kraken/src/main/java/info/bitrich/xchangestream/kraken/KrakenStreamingMarketDataService.java", "diffHunk": "@@ -143,7 +143,7 @@ public KrakenStreamingMarketDataService(KrakenStreamingService service) {\n             });\n   }\n \n-  private String getChannelName(\n+  public String getChannelName(", "originalCommit": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIzNA==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272234", "bodyText": "same reason, I use these functions directly and would like a handle on them and receive updates for them if the underlying code changes.", "author": "earce", "createdAt": "2020-08-23T21:59:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272228", "bodyText": "You've added these constructor overloads but no code that uses them. Are you planning to call them on construction in the StreamingExchange implementations in some follow-up PR?", "author": "badgerwithagun", "createdAt": "2020-08-23T21:58:52Z", "path": "xchange-stream-binance/src/main/java/info/bitrich/xchangestream/binance/BinanceStreamingService.java", "diffHunk": "@@ -14,6 +15,16 @@ public BinanceStreamingService(String baseUri, ProductSubscription productSubscr\n     this.productSubscription = productSubscription;\n   }\n \n+  public BinanceStreamingService(String baseUri,", "originalCommit": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjMyMg==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272322", "bodyText": "I don't have immediate plans for them, I think being restricted to use the defaults is not ideal and I use these outside of this codebase (I think it makes sense to have them in place)", "author": "earce", "createdAt": "2020-08-23T21:59:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MzU5NQ==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475273595", "bodyText": "I'd be intrigued to hear how and why you are using the underlying streaming services directly (rather than just exposing nice entry points in the StreamingExchanges, but fair enough for now.", "author": "badgerwithagun", "createdAt": "2020-08-23T22:13:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3Mzg0NQ==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475273845", "bodyText": "@badgerwithagun in short I want raw json payloads, I'm not interested in the unified objects Xchange uses so I have found a few ways of accomplishing this and using the mature parts of Xchange's code.", "author": "earce", "createdAt": "2020-08-23T22:16:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3Mzg4Ng==", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475273886", "bodyText": "thanks for approving", "author": "earce", "createdAt": "2020-08-23T22:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "79bd5fc7920b09011d9b64c00ffded585b5c3a11", "url": "https://github.com/knowm/XChange/commit/79bd5fc7920b09011d9b64c00ffded585b5c3a11", "message": "adding optimization for coinbase currency pair code", "committedDate": "2020-08-23T22:00:33Z", "type": "commit"}]}