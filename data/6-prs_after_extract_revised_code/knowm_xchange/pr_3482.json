{"pr_number": 3482, "pr_title": "[Gemini] Candles in raw service", "pr_createdAt": "2020-04-02T15:58:49Z", "pr_url": "https://github.com/knowm/XChange/pull/3482", "timeline": [{"oid": "76308324aec8fa4a00486b83279e97637d2bc518", "url": "https://github.com/knowm/XChange/commit/76308324aec8fa4a00486b83279e97637d2bc518", "message": "[Gemini] Candles in raw service", "committedDate": "2020-04-02T15:56:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3ODYwNQ==", "url": "https://github.com/knowm/XChange/pull/3482#discussion_r403678605", "bodyText": "please make this a value object like GeminiTicker2 with private final fields\nas this is (de)serialized as an array you don't have to annotate constructor args with JsonProperty - just make sure the orders is correct", "author": "walec51", "createdAt": "2020-04-05T10:04:30Z", "path": "xchange-gemini/src/main/java/org/knowm/xchange/gemini/v2/dto/marketdata/GeminiCandle.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.knowm.xchange.gemini.v2.dto.marketdata;\n+\n+import com.fasterxml.jackson.annotation.JsonFormat;\n+import java.math.BigDecimal;\n+\n+@JsonFormat(shape = JsonFormat.Shape.ARRAY)\n+public class GeminiCandle {\n+  public Long time;\n+  public BigDecimal open, high, low, close, volume;", "originalCommit": "76308324aec8fa4a00486b83279e97637d2bc518", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59e0ed132d825fac17aa9adf22c9045e2d15c43e", "chunk": "diff --git a/xchange-gemini/src/main/java/org/knowm/xchange/gemini/v2/dto/marketdata/GeminiCandle.java b/xchange-gemini/src/main/java/org/knowm/xchange/gemini/v2/dto/marketdata/GeminiCandle.java\nindex c5a5787fff..9aed6f8150 100644\n--- a/xchange-gemini/src/main/java/org/knowm/xchange/gemini/v2/dto/marketdata/GeminiCandle.java\n+++ b/xchange-gemini/src/main/java/org/knowm/xchange/gemini/v2/dto/marketdata/GeminiCandle.java\n\n@@ -3,10 +3,50 @@ package org.knowm.xchange.gemini.v2.dto.marketdata;\n import com.fasterxml.jackson.annotation.JsonFormat;\n import java.math.BigDecimal;\n \n+/** https://docs.gemini.com/rest-api/#candles */\n @JsonFormat(shape = JsonFormat.Shape.ARRAY)\n public class GeminiCandle {\n-  public Long time;\n-  public BigDecimal open, high, low, close, volume;\n+  private final Long time;\n+  private final BigDecimal open, high, low, close, volume;\n+\n+  public GeminiCandle(\n+      Long time,\n+      BigDecimal open,\n+      BigDecimal high,\n+      BigDecimal low,\n+      BigDecimal close,\n+      BigDecimal volume) {\n+    this.time = time;\n+    this.open = open;\n+    this.high = high;\n+    this.low = low;\n+    this.close = close;\n+    this.volume = volume;\n+  }\n+\n+  public Long getTime() {\n+    return time;\n+  }\n+\n+  public BigDecimal getOpen() {\n+    return open;\n+  }\n+\n+  public BigDecimal getHigh() {\n+    return high;\n+  }\n+\n+  public BigDecimal getLow() {\n+    return low;\n+  }\n+\n+  public BigDecimal getClose() {\n+    return close;\n+  }\n+\n+  public BigDecimal getVolume() {\n+    return volume;\n+  }\n \n   @Override\n   public String toString() {\n"}}, {"oid": "59e0ed132d825fac17aa9adf22c9045e2d15c43e", "url": "https://github.com/knowm/XChange/commit/59e0ed132d825fac17aa9adf22c9045e2d15c43e", "message": "[Gemini] add constructor to GeminiCandle", "committedDate": "2020-04-05T13:11:03Z", "type": "commit"}, {"oid": "44d89c959a875921b9a601c173e9a2ec5b8bd800", "url": "https://github.com/knowm/XChange/commit/44d89c959a875921b9a601c173e9a2ec5b8bd800", "message": "[Gemini] GeminiCandle fields can not be final (but we can use Lombok to simplify with @Data)\nSee Bitfinex LedgerEntry for similar implementation", "committedDate": "2020-04-05T13:34:29Z", "type": "commit"}]}