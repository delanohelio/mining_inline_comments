{"pr_number": 3457, "pr_title": "[bithumb] bug fixes - averagePrice", "pr_createdAt": "2020-03-18T23:27:07Z", "pr_url": "https://github.com/knowm/XChange/pull/3457", "timeline": [{"oid": "b5263f4ec686ed0c6b55c6c831bcf9994faa519a", "url": "https://github.com/knowm/XChange/commit/b5263f4ec686ed0c6b55c6c831bcf9994faa519a", "message": "fix incorrect sum for cumulative quantity", "committedDate": "2020-03-18T20:02:49Z", "type": "commit"}, {"oid": "8c9ee842db913159a31e760401e5e31898f73662", "url": "https://github.com/knowm/XChange/commit/8c9ee842db913159a31e760401e5e31898f73662", "message": "fix incorrect calc for averagePrice", "committedDate": "2020-03-18T20:06:02Z", "type": "commit"}, {"oid": "51a0cc58915a117f90271c0d44cd4f0611e88c5b", "url": "https://github.com/knowm/XChange/commit/51a0cc58915a117f90271c0d44cd4f0611e88c5b", "message": "cancelOrder extend API", "committedDate": "2020-03-18T23:39:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4NzI4Ng==", "url": "https://github.com/knowm/XChange/pull/3457#discussion_r395987286", "bodyText": "CancelOrderByIdParams is meant to be used then you can cancel an order by just passing its id\nCancelOrderByCurrencyPair i meant to be used then you can cancel all orders for a given currency pair\nI don't think this is needed, just use CancelOrderByPairAndIdParams\nbesides this code doesn't do proper error handling", "author": "walec51", "createdAt": "2020-03-21T12:07:41Z", "path": "xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java", "diffHunk": "@@ -96,9 +93,13 @@ public boolean cancelOrder(CancelOrderParams orderParams) throws IOException {\n       } catch (BithumbException e) {\n         throw BithumbErrorAdapter.adapt(e);\n       }\n+    } else if (orderParams instanceof CancelOrderByIdParams && orderParams instanceof CancelOrderByCurrencyPair) {", "originalCommit": "51a0cc58915a117f90271c0d44cd4f0611e88c5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAwMzM5NQ==", "url": "https://github.com/knowm/XChange/pull/3457#discussion_r396003395", "bodyText": "I disagree with the premise her that interfaces a exclusive.  If this were the case then a client application has no way of knowing which variant of CancelOrderParams an exchange requires.\ninterface CancelOrderByCurrencyPair extends CancelOrderParams\ninterface CancelOrderByIdParams extends CancelOrderParams\ninterface CancelOrderByPairAndIdParams extends CancelOrderByIdParams\nthese combinations are not consistent\nOne fix would be to:\npublic interface CancelOrderByPairAndIdParams extends CancelOrderByIdParams, CancelOrderByCurrencyPair {\n}\nhowever if we look at class TradeHistoryParamsAll,we see that these interfaces are clearly meant to be additive, rather than exclusive.\nimplements TradeHistoryParamsTimeSpan,\nTradeHistoryParamPaging,\nTradeHistoryParamsIdSpan,\nTradeHistoryParamOffset,\nTradeHistoryParamCurrencyPair,\nTradeHistoryParamMultiCurrencyPair,\nTradeHistoryParamLimit\nsince TradeHistoryParamCurrencyPair and TradeHistoryParamMultiCurrencyPair are mutually exclusive\nNB: CancelOrderByPairAndIdParams is used by only two exchanges (bithumb and bx) and we are in the process of fixing bithumb\n\nbesides this code doesn't do proper error handling\nPR does no more than extend the existing error handling, if that is incorrect then it should be under another PR", "author": "mdvx", "createdAt": "2020-03-21T15:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4NzI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAwNTMyNQ==", "url": "https://github.com/knowm/XChange/pull/3457#discussion_r396005325", "bodyText": "SimulatedTradeService:104\n      if (orderParams instanceof CancelOrderByIdParams\n          && orderParams instanceof CancelOrderByOrderTypeParams)\n\nKrakenTradeService:60\n    if (orderParams instanceof CancelOrderByIdParams) {\n      return cancelOrder(((CancelOrderByIdParams) orderParams).getOrderId());\n    }\n    if (orderParams instanceof CancelOrderByUserReferenceParams) {\n      return cancelOrder(((CancelOrderByUserReferenceParams) orderParams).getUserReference());\n    }", "author": "mdvx", "createdAt": "2020-03-21T16:14:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4NzI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMjExMw==", "url": "https://github.com/knowm/XChange/pull/3457#discussion_r396022113", "bodyText": "interfaces are clearly meant to be additive, rather than exclusive.\n\nok, your right", "author": "walec51", "createdAt": "2020-03-21T19:34:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4NzI4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "20bdd37f02dee3a1ac0298a6e33fb85ca0c0c648", "chunk": "diff --git a/xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java b/xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java\nindex f4f3ac5de0..6f2714c581 100644\n--- a/xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java\n+++ b/xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java\n\n@@ -86,20 +86,20 @@ public class BithumbTradeService extends BithumbTradeServiceRaw implements Trade\n   @Override\n   public boolean cancelOrder(CancelOrderParams orderParams) throws IOException {\n \n-    if (orderParams instanceof CancelOrderByPairAndIdParams) {\n-      try {\n-        final CancelOrderByPairAndIdParams params = (CancelOrderByPairAndIdParams) orderParams;\n-        return cancelBithumbOrder(params.getOrderId(), params.getCurrencyPair());\n-      } catch (BithumbException e) {\n-        throw BithumbErrorAdapter.adapt(e);\n+    try {\n+      if (orderParams instanceof CancelOrderByPairAndIdParams) {\n+          final CancelOrderByPairAndIdParams params = (CancelOrderByPairAndIdParams) orderParams;\n+          return cancelBithumbOrder(params.getOrderId(), params.getCurrencyPair());\n+      } else if (orderParams instanceof CancelOrderByIdParams && orderParams instanceof CancelOrderByCurrencyPair) {\n+        String orderId = ((CancelOrderByIdParams) orderParams).getOrderId();\n+        CurrencyPair pair = ((CancelOrderByCurrencyPair) orderParams).getCurrencyPair();\n+        return cancelBithumbOrder(orderId, pair);\n+      } else {\n+        throw new NotYetImplementedForExchangeException(\n+            \"Only CancelOrderByPairAndIdParams || (CancelOrderByIdParams && CancelOrderByCurrencyPair) supported\");\n       }\n-    } else if (orderParams instanceof CancelOrderByIdParams && orderParams instanceof CancelOrderByCurrencyPair) {\n-      String orderId = ((CancelOrderByIdParams)orderParams).getOrderId();\n-      CurrencyPair pair = ((CancelOrderByCurrencyPair)orderParams).getCurrencyPair();\n-      return cancelBithumbOrder(orderId, pair);\n-    } else {\n-      throw new NotYetImplementedForExchangeException(\n-          \"Only CancelOrderByPairAndIdParams || (CancelOrderByIdParams && CancelOrderByCurrencyPair) supported\");\n+    } catch (BithumbException e) {\n+      throw BithumbErrorAdapter.adapt(e);\n     }\n   }\n \n"}}, {"oid": "20bdd37f02dee3a1ac0298a6e33fb85ca0c0c648", "url": "https://github.com/knowm/XChange/commit/20bdd37f02dee3a1ac0298a6e33fb85ca0c0c648", "message": "cancelOrder extend API - error handling fix", "committedDate": "2020-03-21T16:06:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMTk2NQ==", "url": "https://github.com/knowm/XChange/pull/3457#discussion_r396021965", "bodyText": "ok, if we are going in this direction:\nCancelOrderByPairAndIdParams extends CancelOrderByIdParams, CancelOrderByCurrencyPair\n\nthen this method can be implemented in a much simpler way\n  @Override\n  public boolean cancelOrder(CancelOrderParams orderParams) throws IOException {\n    try {\n      if (!(orderParams instanceof CancelOrderByIdParams && orderParams instanceof CancelOrderByCurrencyPair)) {\n                throw new NotYetImplementedForExchangeException(\n                    \"Only CancelOrderByPairAndIdParams || (CancelOrderByIdParams && CancelOrderByCurrencyPair) supported\");\n      }\n      String orderId = ((CancelOrderByIdParams) orderParams).getOrderId();\n      CurrencyPair pair = ((CancelOrderByCurrencyPair) orderParams).getCurrencyPair();\n      return cancelBithumbOrder(orderId, pair);\n    } catch (BithumbException e) {\n      throw BithumbErrorAdapter.adapt(e);\n    }\n  }", "author": "walec51", "createdAt": "2020-03-21T19:32:28Z", "path": "xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java", "diffHunk": "@@ -89,16 +86,20 @@ public String placeLimitOrder(LimitOrder limitOrder) throws IOException {\n   @Override\n   public boolean cancelOrder(CancelOrderParams orderParams) throws IOException {\n \n-    if (orderParams instanceof CancelOrderByPairAndIdParams) {\n-      try {\n-        final CancelOrderByPairAndIdParams params = (CancelOrderByPairAndIdParams) orderParams;\n-        return cancelBithumbOrder(params.getOrderId(), params.getCurrencyPair());\n-      } catch (BithumbException e) {\n-        throw BithumbErrorAdapter.adapt(e);\n+    try {", "originalCommit": "20bdd37f02dee3a1ac0298a6e33fb85ca0c0c648", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyNDM4OQ==", "url": "https://github.com/knowm/XChange/pull/3457#discussion_r396024389", "bodyText": "I totally agree, i just didn't want to obfuscate it at that time", "author": "mdvx", "createdAt": "2020-03-21T20:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMTk2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "fa3bacbe758fb539f8d07099ab13bac3627dc4f2", "chunk": "diff --git a/xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java b/xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java\nindex 6f2714c581..1572bc3e52 100644\n--- a/xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java\n+++ b/xchange-bithumb/src/main/java/org/knowm/xchange/bithumb/service/BithumbTradeService.java\n\n@@ -85,19 +85,15 @@ public class BithumbTradeService extends BithumbTradeServiceRaw implements Trade\n \n   @Override\n   public boolean cancelOrder(CancelOrderParams orderParams) throws IOException {\n-\n     try {\n-      if (orderParams instanceof CancelOrderByPairAndIdParams) {\n-          final CancelOrderByPairAndIdParams params = (CancelOrderByPairAndIdParams) orderParams;\n-          return cancelBithumbOrder(params.getOrderId(), params.getCurrencyPair());\n-      } else if (orderParams instanceof CancelOrderByIdParams && orderParams instanceof CancelOrderByCurrencyPair) {\n-        String orderId = ((CancelOrderByIdParams) orderParams).getOrderId();\n-        CurrencyPair pair = ((CancelOrderByCurrencyPair) orderParams).getCurrencyPair();\n-        return cancelBithumbOrder(orderId, pair);\n-      } else {\n+      if (!(orderParams instanceof CancelOrderByIdParams && orderParams instanceof CancelOrderByCurrencyPair)) {\n         throw new NotYetImplementedForExchangeException(\n-            \"Only CancelOrderByPairAndIdParams || (CancelOrderByIdParams && CancelOrderByCurrencyPair) supported\");\n+                \"Only CancelOrderByPairAndIdParams || (CancelOrderByIdParams && CancelOrderByCurrencyPair) supported\");\n       }\n+\n+      String orderId = ((CancelOrderByIdParams) orderParams).getOrderId();\n+      CurrencyPair pair = ((CancelOrderByCurrencyPair) orderParams).getCurrencyPair();\n+      return cancelBithumbOrder(orderId, pair);\n     } catch (BithumbException e) {\n       throw BithumbErrorAdapter.adapt(e);\n     }\n"}}, {"oid": "fa3bacbe758fb539f8d07099ab13bac3627dc4f2", "url": "https://github.com/knowm/XChange/commit/fa3bacbe758fb539f8d07099ab13bac3627dc4f2", "message": "added @walec51 suggestions for simplification", "committedDate": "2020-03-21T20:05:55Z", "type": "commit"}]}