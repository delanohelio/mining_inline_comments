{"pr_number": 3504, "pr_title": "[okcoin] future bills", "pr_createdAt": "2020-05-04T09:06:54Z", "pr_url": "https://github.com/knowm/XChange/pull/3504", "timeline": [{"oid": "5fbdc02ed72dd3c82e3bf1581b2a69415fe53342", "url": "https://github.com/knowm/XChange/commit/5fbdc02ed72dd3c82e3bf1581b2a69415fe53342", "message": "added future bills", "committedDate": "2020-05-04T08:17:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM0MzIwNw==", "url": "https://github.com/knowm/XChange/pull/3504#discussion_r419343207", "bodyText": "wouldn't it be better to just return null in this case also?", "author": "walec51", "createdAt": "2020-05-04T10:28:50Z", "path": "xchange-okcoin/src/main/java/org/knowm/xchange/okcoin/v3/dto/MarginMode.java", "diffHunk": "@@ -1,6 +1,28 @@\n package org.knowm.xchange.okcoin.v3.dto;\n \n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n public enum MarginMode {\n   crossed,\n-  fixed;\n+  fixed,\n+  empty // special case, for some wallets okex returns empty margin mode\n+;\n+\n+  @JsonCreator\n+  public static MarginMode create(String s) {\n+    if (s == null) {\n+      return null;\n+    }\n+    if (s.isEmpty()) {\n+      return empty;", "originalCommit": "5fbdc02ed72dd3c82e3bf1581b2a69415fe53342", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1NDk1Ng==", "url": "https://github.com/knowm/XChange/pull/3504#discussion_r419354956", "bodyText": "sure, we could use null here. But what if you need to differ between null and empty?\nwas not sure and decided to keep empty type in place", "author": "andre77", "createdAt": "2020-05-04T10:55:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM0MzIwNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM0NDgxOA==", "url": "https://github.com/knowm/XChange/pull/3504#discussion_r419344818", "bodyText": "Collections.EMPTY_LIST instead of new ArrayList<>() would be better", "author": "walec51", "createdAt": "2020-05-04T10:32:12Z", "path": "xchange-okcoin/src/main/java/org/knowm/xchange/okcoin/v3/service/OkexAccountServiceRaw.java", "diffHunk": "@@ -63,7 +85,8 @@ public OkexWithdrawalResponse withdrawal(OkexWithdrawalRequest req) throws IOExc\n     FuturesPositionsResponse res =\n         okex.getFuturesPositions(apikey, digest, timestamp(), passphrase);\n     res.checkResult();\n-    return res.getHolding().get(0);\n+    List<List<FuturesPosition>> holding = res.getHolding();\n+    return holding == null || holding.isEmpty() ? new ArrayList<>() : holding.get(0);", "originalCommit": "5fbdc02ed72dd3c82e3bf1581b2a69415fe53342", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1NTMwNQ==", "url": "https://github.com/knowm/XChange/pull/3504#discussion_r419355305", "bodyText": "you mean Collections.emptyList() :-)", "author": "andre77", "createdAt": "2020-05-04T10:55:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM0NDgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "5ddc60f42047d1bb7f96951a4ba7ea6adbf40cd5", "chunk": "diff --git a/xchange-okcoin/src/main/java/org/knowm/xchange/okcoin/v3/service/OkexAccountServiceRaw.java b/xchange-okcoin/src/main/java/org/knowm/xchange/okcoin/v3/service/OkexAccountServiceRaw.java\nindex 076568fbb4..782322e389 100644\n--- a/xchange-okcoin/src/main/java/org/knowm/xchange/okcoin/v3/service/OkexAccountServiceRaw.java\n+++ b/xchange-okcoin/src/main/java/org/knowm/xchange/okcoin/v3/service/OkexAccountServiceRaw.java\n\n@@ -86,7 +86,7 @@ public class OkexAccountServiceRaw extends OkexBaseService {\n         okex.getFuturesPositions(apikey, digest, timestamp(), passphrase);\n     res.checkResult();\n     List<List<FuturesPosition>> holding = res.getHolding();\n-    return holding == null || holding.isEmpty() ? new ArrayList<>() : holding.get(0);\n+    return holding == null || holding.isEmpty() ? Collections.emptyList() : holding.get(0);\n   }\n \n   public FuturesAccountsResponse getFuturesAccounts() throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM0NTI5Nw==", "url": "https://github.com/knowm/XChange/pull/3504#discussion_r419345297", "bodyText": "could we use @Value instead of @Data?", "author": "walec51", "createdAt": "2020-05-04T10:33:16Z", "path": "xchange-okcoin/src/main/java/org/knowm/xchange/okcoin/v3/dto/account/FuturesBillsResponse.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.knowm.xchange.okcoin.v3.dto.account;\n+\n+import com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy;\n+import com.fasterxml.jackson.databind.annotation.JsonNaming;\n+import java.math.BigDecimal;\n+import java.util.Date;\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+\n+@Data", "originalCommit": "5fbdc02ed72dd3c82e3bf1581b2a69415fe53342", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM1NjEyNQ==", "url": "https://github.com/knowm/XChange/pull/3504#discussion_r419356125", "bodyText": "sure, @value is a good option here, but i simply wanted to be consistent to other classes in this package", "author": "andre77", "createdAt": "2020-05-04T10:57:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM0NTI5Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "5ddc60f42047d1bb7f96951a4ba7ea6adbf40cd5", "url": "https://github.com/knowm/XChange/commit/5ddc60f42047d1bb7f96951a4ba7ea6adbf40cd5", "message": "review", "committedDate": "2020-05-04T10:56:24Z", "type": "commit"}]}