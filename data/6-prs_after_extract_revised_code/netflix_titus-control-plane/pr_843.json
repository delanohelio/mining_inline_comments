{"pr_number": 843, "pr_title": "Fix producer/consumer jooq configs", "pr_createdAt": "2020-04-28T17:01:10Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/843", "timeline": [{"oid": "2fbff07312837473852cca2655e7c3741803cbd0", "url": "https://github.com/Netflix/titus-control-plane/commit/2fbff07312837473852cca2655e7c3741803cbd0", "message": "Fix producer/consumer jooq configs", "committedDate": "2020-04-28T17:00:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1MDEzNg==", "url": "https://github.com/Netflix/titus-control-plane/pull/843#discussion_r416850136", "bodyText": "We can use Archaius2 annotations and dynamic proxies with Spring. The dynamic wrapper is created by Archaius2Ext util.", "author": "tbak", "createdAt": "2020-04-28T18:58:42Z", "path": "titus-ext/jooqflyway/src/main/java/com/netflix/titus/ext/jooqflyway/jobactivity/JooqConfiguration.java", "diffHunk": "@@ -16,18 +16,33 @@\n \n package com.netflix.titus.ext.jooqflyway.jobactivity;\n \n-import com.netflix.archaius.api.annotations.Configuration;\n-import com.netflix.archaius.api.annotations.DefaultValue;\n+import javax.inject.Inject;\n \n-@Configuration(prefix = \"titus.ext.jooqflyway\")\n-public interface JooqConfiguration {\n+import com.netflix.titus.common.util.SpringConfigurationUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.env.Environment;\n \n-    @DefaultValue(\"jdbc://localhost\")\n-    String getDatabaseUrl();\n+public class JooqConfiguration {", "originalCommit": "2fbff07312837473852cca2655e7c3741803cbd0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fec5cd5b169b983bfc8b31baf7a2d04b5bccdae9", "chunk": "diff --git a/titus-ext/jooqflyway/src/main/java/com/netflix/titus/ext/jooqflyway/jobactivity/JooqConfiguration.java b/titus-ext/jooqflyway/src/main/java/com/netflix/titus/ext/jooqflyway/jobactivity/JooqConfiguration.java\nindex a60703c0b..49aff96a0 100644\n--- a/titus-ext/jooqflyway/src/main/java/com/netflix/titus/ext/jooqflyway/jobactivity/JooqConfiguration.java\n+++ b/titus-ext/jooqflyway/src/main/java/com/netflix/titus/ext/jooqflyway/jobactivity/JooqConfiguration.java\n\n@@ -43,6 +43,6 @@ public class JooqConfiguration {\n     }\n \n     public String getProducerDatatabaseUrl() {\n-        return SpringConfigurationUtil.getString(environment, PREFIX + \"producerDatabaseUrl\", \"jdbc://notSet\");\n+        return SpringConfigurationUtil.getString(environment, PREFIX + \"producer.databaseUrl\", \"jdbc://notSet\");\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1MTE3OA==", "url": "https://github.com/Netflix/titus-control-plane/pull/843#discussion_r416851178", "bodyText": "What is the difference between this database connection and the other one?", "author": "tbak", "createdAt": "2020-04-28T19:00:33Z", "path": "titus-ext/jooqflyway/src/main/java/com/netflix/titus/ext/jooqflyway/jobactivity/producer/JooqJobActivityProducerConnectorComponent.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.netflix.titus.ext.jooqflyway.jobactivity.producer;\n+\n+import javax.sql.DataSource;\n+\n+import com.netflix.titus.ext.jooqflyway.jobactivity.RDSSSLSocketFactory;\n+import com.zaxxer.hikari.HikariConfig;\n+import com.zaxxer.hikari.HikariDataSource;\n+import org.jooq.DSLContext;\n+import org.jooq.SQLDialect;\n+import org.jooq.impl.DSL;\n+import org.postgresql.PGProperty;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.env.Environment;\n+\n+@Configuration\n+public class JooqJobActivityProducerConnectorComponent {", "originalCommit": "2fbff07312837473852cca2655e7c3741803cbd0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NDA2NA==", "url": "https://github.com/Netflix/titus-control-plane/pull/843#discussion_r416984064", "bodyText": "It was complaining about having two data sources with one configuration, I tried separating it out but after talking to runtime, marking one as primary with correct qualifiers seems to work and is the recommended way", "author": "amitaekbote", "createdAt": "2020-04-28T23:27:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1MTE3OA=="}], "type": "inlineReview", "revised_code": {"commit": "fec5cd5b169b983bfc8b31baf7a2d04b5bccdae9", "chunk": "diff --git a/titus-ext/jooqflyway/src/main/java/com/netflix/titus/ext/jooqflyway/jobactivity/producer/JooqJobActivityProducerConnectorComponent.java b/titus-ext/jooqflyway/src/main/java/com/netflix/titus/ext/jooqflyway/jobactivity/producer/JooqJobActivityProducerConnectorComponent.java\ndeleted file mode 100644\nindex c46c1a42d..000000000\n--- a/titus-ext/jooqflyway/src/main/java/com/netflix/titus/ext/jooqflyway/jobactivity/producer/JooqJobActivityProducerConnectorComponent.java\n+++ /dev/null\n\n@@ -1,54 +0,0 @@\n-package com.netflix.titus.ext.jooqflyway.jobactivity.producer;\n-\n-import javax.sql.DataSource;\n-\n-import com.netflix.titus.ext.jooqflyway.jobactivity.RDSSSLSocketFactory;\n-import com.zaxxer.hikari.HikariConfig;\n-import com.zaxxer.hikari.HikariDataSource;\n-import org.jooq.DSLContext;\n-import org.jooq.SQLDialect;\n-import org.jooq.impl.DSL;\n-import org.postgresql.PGProperty;\n-import org.springframework.beans.factory.annotation.Qualifier;\n-import org.springframework.context.annotation.Bean;\n-import org.springframework.context.annotation.Configuration;\n-import org.springframework.core.env.Environment;\n-\n-@Configuration\n-public class JooqJobActivityProducerConnectorComponent {\n-    @Bean\n-    public JooqProducerConfiguration getJooqConfiguration(Environment environment) {\n-        return new JooqProducerConfiguration(environment);\n-    }\n-\n-    @Bean\n-    public SQLDialect dialect() {\n-        return SQLDialect.POSTGRES;\n-    }\n-\n-    @Bean\n-    public DataSource getProducerDataSource(JooqProducerConfiguration jooqProducerConfiguration) {\n-        HikariConfig hikariConfig = new HikariConfig();\n-\n-        hikariConfig.setDriverClassName(\"org.postgresql.Driver\");\n-        hikariConfig.addDataSourceProperty(PGProperty.SSL.getName(), \"true\");\n-        hikariConfig.addDataSourceProperty(PGProperty.SSL_MODE.getName(), \"verify-ca\");\n-        hikariConfig.addDataSourceProperty(PGProperty.SSL_FACTORY.getName(), RDSSSLSocketFactory.class.getName());\n-        hikariConfig.setJdbcUrl(jooqProducerConfiguration.getDatabaseUrl());\n-\n-        // Connection management\n-        hikariConfig.setConnectionTimeout(10000);\n-        hikariConfig.setMaximumPoolSize(10);\n-        hikariConfig.setLeakDetectionThreshold(3000);\n-\n-        return new HikariDataSource(hikariConfig);\n-    }\n-\n-    @Bean\n-    @Qualifier(\"producerDSLContext\")\n-    public DSLContext getProducerDSLContext(JooqProducerConfiguration configuration) {\n-        DSLContext dslContext = DSL.using(getProducerDataSource(configuration), dialect());\n-        dslContext.settings().setQueryTimeout(60);\n-        return dslContext;\n-    }\n-}\n"}}, {"oid": "fec5cd5b169b983bfc8b31baf7a2d04b5bccdae9", "url": "https://github.com/Netflix/titus-control-plane/commit/fec5cd5b169b983bfc8b31baf7a2d04b5bccdae9", "message": "Changing it to the recommended way", "committedDate": "2020-04-28T22:35:18Z", "type": "commit"}, {"oid": "56750e7c2efaf284bdc2f6f086b1a3c227e5591b", "url": "https://github.com/Netflix/titus-control-plane/commit/56750e7c2efaf284bdc2f6f086b1a3c227e5591b", "message": "Adding @Configuration", "committedDate": "2020-04-28T23:01:09Z", "type": "commit"}]}