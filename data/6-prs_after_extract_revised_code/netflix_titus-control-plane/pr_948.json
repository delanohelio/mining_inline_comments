{"pr_number": 948, "pr_title": "Improve messaging and timestamps when containers are terminated due to unresponsive nodes", "pr_createdAt": "2020-11-03T23:42:24Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/948", "timeline": [{"oid": "1257d03d75c1cb4838b4e787bdfcad5c8c0f7fc1", "url": "https://github.com/Netflix/titus-control-plane/commit/1257d03d75c1cb4838b4e787bdfcad5c8c0f7fc1", "message": "Set appropriate message when the Node is confirmed lost and use the same timestamp for all events generated in podDelete", "committedDate": "2020-11-03T23:36:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAyMTE2NA==", "url": "https://github.com/Netflix/titus-control-plane/pull/948#discussion_r517021164", "bodyText": "move NodeLost to the constants file", "author": "corindwyer", "createdAt": "2020-11-03T23:48:23Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java", "diffHunk": "@@ -674,25 +675,24 @@ private void podDeleted(V1Pod pod) {\n             Task task = taskOpt.get();\n             String phase = StringExt.nonNull(status.getPhase());\n             String reasonMessage = StringExt.nonNull(status.getMessage());\n-            boolean hasDeletionTimestamp = metadata.getDeletionTimestamp() != null;\n+            String reasonCode = REASON_NORMAL;\n \n             Optional<TaskStatus> killInitiatedOpt = JobFunctions.findTaskStatus(task, KillInitiated);\n             if (!killInitiatedOpt.isPresent()) {\n-                logger.debug(\"Publishing missing task status: KillInitiated for task: {}\", podName);\n-                Optional<Long> timestampOpt = hasDeletionTimestamp ? Optional.of(metadata.getDeletionTimestamp().getMillis()) : Optional.empty();\n-                publishContainerEvent(podName, KillInitiated, REASON_TASK_KILLED, \"Container was terminated without going through Titus\", executorDetails, timestampOpt);\n-            }\n-\n-            String reasonCode = REASON_NORMAL;\n-            if (hasDeletionTimestamp) {\n                 reasonCode = REASON_TASK_KILLED;\n+                logger.debug(\"Publishing missing task status: KillInitiated for task: {}\", podName);\n+                if (\"NodeLost\".equals(status.getReason())) {", "originalCommit": "1257d03d75c1cb4838b4e787bdfcad5c8c0f7fc1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a93113862b7e03eb8456d9490b1019cde72e3ce5", "chunk": "diff --git a/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java b/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java\nindex 76eba20a1..62b22cf1d 100644\n--- a/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java\n+++ b/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java\n\n@@ -681,10 +682,10 @@ public class KubeApiServerIntegrator implements VirtualMachineMasterService {\n             if (!killInitiatedOpt.isPresent()) {\n                 reasonCode = REASON_TASK_KILLED;\n                 logger.debug(\"Publishing missing task status: KillInitiated for task: {}\", podName);\n-                if (\"NodeLost\".equals(status.getReason())) {\n+                if (NODE_LOST.equals(status.getReason())) {\n                     publishContainerEvent(podName, KillInitiated, reasonCode, \"The host running the container was unexpectedly terminated\", executorDetails, eventTimestamp);\n                 } else {\n-                    publishContainerEvent(podName, KillInitiated, reasonCode, \"Container was terminated without going through Titus\", executorDetails, eventTimestamp);\n+                    publishContainerEvent(podName, KillInitiated, reasonCode, \"Container was terminated without going through the Titus API\", executorDetails, eventTimestamp);\n                 }\n             } else if (phase.equalsIgnoreCase(SUCCEEDED)) {\n                 reasonCode = REASON_NORMAL;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAyMTM3MQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/948#discussion_r517021371", "bodyText": "Titus -> the Titus API", "author": "corindwyer", "createdAt": "2020-11-03T23:49:09Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java", "diffHunk": "@@ -674,25 +675,24 @@ private void podDeleted(V1Pod pod) {\n             Task task = taskOpt.get();\n             String phase = StringExt.nonNull(status.getPhase());\n             String reasonMessage = StringExt.nonNull(status.getMessage());\n-            boolean hasDeletionTimestamp = metadata.getDeletionTimestamp() != null;\n+            String reasonCode = REASON_NORMAL;\n \n             Optional<TaskStatus> killInitiatedOpt = JobFunctions.findTaskStatus(task, KillInitiated);\n             if (!killInitiatedOpt.isPresent()) {\n-                logger.debug(\"Publishing missing task status: KillInitiated for task: {}\", podName);\n-                Optional<Long> timestampOpt = hasDeletionTimestamp ? Optional.of(metadata.getDeletionTimestamp().getMillis()) : Optional.empty();\n-                publishContainerEvent(podName, KillInitiated, REASON_TASK_KILLED, \"Container was terminated without going through Titus\", executorDetails, timestampOpt);\n-            }\n-\n-            String reasonCode = REASON_NORMAL;\n-            if (hasDeletionTimestamp) {\n                 reasonCode = REASON_TASK_KILLED;\n+                logger.debug(\"Publishing missing task status: KillInitiated for task: {}\", podName);\n+                if (\"NodeLost\".equals(status.getReason())) {\n+                    publishContainerEvent(podName, KillInitiated, reasonCode, \"The host running the container was unexpectedly terminated\", executorDetails, eventTimestamp);\n+                } else {\n+                    publishContainerEvent(podName, KillInitiated, reasonCode, \"Container was terminated without going through Titus\", executorDetails, eventTimestamp);", "originalCommit": "1257d03d75c1cb4838b4e787bdfcad5c8c0f7fc1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a93113862b7e03eb8456d9490b1019cde72e3ce5", "chunk": "diff --git a/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java b/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java\nindex 76eba20a1..62b22cf1d 100644\n--- a/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java\n+++ b/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java\n\n@@ -681,10 +682,10 @@ public class KubeApiServerIntegrator implements VirtualMachineMasterService {\n             if (!killInitiatedOpt.isPresent()) {\n                 reasonCode = REASON_TASK_KILLED;\n                 logger.debug(\"Publishing missing task status: KillInitiated for task: {}\", podName);\n-                if (\"NodeLost\".equals(status.getReason())) {\n+                if (NODE_LOST.equals(status.getReason())) {\n                     publishContainerEvent(podName, KillInitiated, reasonCode, \"The host running the container was unexpectedly terminated\", executorDetails, eventTimestamp);\n                 } else {\n-                    publishContainerEvent(podName, KillInitiated, reasonCode, \"Container was terminated without going through Titus\", executorDetails, eventTimestamp);\n+                    publishContainerEvent(podName, KillInitiated, reasonCode, \"Container was terminated without going through the Titus API\", executorDetails, eventTimestamp);\n                 }\n             } else if (phase.equalsIgnoreCase(SUCCEEDED)) {\n                 reasonCode = REASON_NORMAL;\n"}}, {"oid": "a93113862b7e03eb8456d9490b1019cde72e3ce5", "url": "https://github.com/Netflix/titus-control-plane/commit/a93113862b7e03eb8456d9490b1019cde72e3ce5", "message": "Addressing code review comments", "committedDate": "2020-11-04T00:00:01Z", "type": "commit"}, {"oid": "b39da6801b38bb1e105c244bec705b1577ed9fcb", "url": "https://github.com/Netflix/titus-control-plane/commit/b39da6801b38bb1e105c244bec705b1577ed9fcb", "message": "Fix typo", "committedDate": "2020-11-04T00:02:04Z", "type": "commit"}]}