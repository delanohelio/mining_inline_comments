{"pr_number": 848, "pr_title": "Configurable KubeApiServerIntegrator orphaned pods token bucket", "pr_createdAt": "2020-05-20T19:43:36Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/848", "timeline": [{"oid": "1ea66db90a47a6f95ff2a6499b8b9afc8112e1ba", "url": "https://github.com/Netflix/titus-control-plane/commit/1ea66db90a47a6f95ff2a6499b8b9afc8112e1ba", "message": "Configurable KubeApiServerIntegrator orphaned pods token bucket", "committedDate": "2020-05-20T19:42:57Z", "type": "commit"}, {"oid": "f20716f5e57862fd201915f71753c9ae19ece119", "url": "https://github.com/Netflix/titus-control-plane/commit/f20716f5e57862fd201915f71753c9ae19ece119", "message": "Add proper cleanup logic", "committedDate": "2020-05-20T21:16:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2Nzk2OQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/848#discussion_r428367969", "bodyText": "Should the null check be also part of the isSame method because the latter is also used by get()?", "author": "joshi-keyur", "createdAt": "2020-05-20T23:41:11Z", "path": "titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/internal/FixedIntervalTokenBucketSupplier.java", "diffHunk": "@@ -0,0 +1,147 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.common.util.limiter.tokenbucket.internal;\n+\n+import java.util.Optional;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Consumer;\n+import java.util.function.Supplier;\n+\n+import com.google.common.base.Stopwatch;\n+import com.netflix.titus.common.runtime.TitusRuntime;\n+import com.netflix.titus.common.util.Evaluators;\n+import com.netflix.titus.common.util.ExceptionExt;\n+import com.netflix.titus.common.util.limiter.tokenbucket.FixedIntervalTokenBucketConfiguration;\n+import com.netflix.titus.common.util.limiter.tokenbucket.RefillStrategy;\n+import com.netflix.titus.common.util.limiter.tokenbucket.TokenBucket;\n+\n+/**\n+ * {@link TokenBucket} supplier which recreates a token bucket if any of its configurable parameters changes.\n+ * The configuration parameters are read from {@link FixedIntervalTokenBucketConfiguration}.\n+ */\n+public class FixedIntervalTokenBucketSupplier implements Supplier<TokenBucket> {\n+\n+    private final String name;\n+    private final FixedIntervalTokenBucketConfiguration configuration;\n+    private final Consumer<TokenBucket> onChangeListener;\n+    private final Optional<TitusRuntime> titusRuntime;\n+\n+    private volatile ActiveConfiguration activeConfiguration;\n+\n+    private final Object lock = new Object();\n+\n+    public FixedIntervalTokenBucketSupplier(String name,\n+                                            FixedIntervalTokenBucketConfiguration configuration,\n+                                            Consumer<TokenBucket> onChangeListener,\n+                                            Optional<TitusRuntime> titusRuntime) {\n+        this.name = name;\n+        this.configuration = configuration;\n+        this.onChangeListener = onChangeListener;\n+        this.titusRuntime = titusRuntime;\n+        this.activeConfiguration = reload();\n+    }\n+\n+    @Override\n+    public TokenBucket get() {\n+        return isSame() ? activeConfiguration.getTokenBucket() : reload().getTokenBucket();\n+    }\n+\n+    private boolean isSame() {\n+        return activeConfiguration.getCapacity() == configuration.getCapacity()\n+                && activeConfiguration.getInitialNumberOfTokens() == configuration.getInitialNumberOfTokens()\n+                && activeConfiguration.getIntervalMs() == configuration.getIntervalMs()\n+                && activeConfiguration.getNumberOfTokensPerInterval() == configuration.getNumberOfTokensPerInterval();\n+    }\n+\n+    private ActiveConfiguration reload() {\n+        boolean same;\n+        synchronized (lock) {\n+            same = activeConfiguration != null && isSame();", "originalCommit": "f20716f5e57862fd201915f71753c9ae19ece119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg4MzYwMw==", "url": "https://github.com/Netflix/titus-control-plane/pull/848#discussion_r428883603", "bodyText": "Good idea. I will change it as suggested.", "author": "tbak", "createdAt": "2020-05-21T20:03:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2Nzk2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "dfee9d94863d9ff3bde0f57f8e6298a718bd4aea", "chunk": "diff --git a/titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/internal/FixedIntervalTokenBucketSupplier.java b/titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/internal/FixedIntervalTokenBucketSupplier.java\nindex 02b97d44d..cbb1ca927 100644\n--- a/titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/internal/FixedIntervalTokenBucketSupplier.java\n+++ b/titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/internal/FixedIntervalTokenBucketSupplier.java\n\n@@ -61,7 +61,8 @@ public class FixedIntervalTokenBucketSupplier implements Supplier<TokenBucket> {\n     }\n \n     private boolean isSame() {\n-        return activeConfiguration.getCapacity() == configuration.getCapacity()\n+        return activeConfiguration != null\n+                && activeConfiguration.getCapacity() == configuration.getCapacity()\n                 && activeConfiguration.getInitialNumberOfTokens() == configuration.getInitialNumberOfTokens()\n                 && activeConfiguration.getIntervalMs() == configuration.getIntervalMs()\n                 && activeConfiguration.getNumberOfTokensPerInterval() == configuration.getNumberOfTokensPerInterval();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM4NDE4Mg==", "url": "https://github.com/Netflix/titus-control-plane/pull/848#discussion_r428384182", "bodyText": "Should we add Configuration prefix for better namespacing here?", "author": "joshi-keyur", "createdAt": "2020-05-21T00:39:09Z", "path": "titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/FixedIntervalTokenBucketConfiguration.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.common.util.limiter.tokenbucket;\n+\n+import com.netflix.archaius.api.annotations.DefaultValue;\n+\n+public interface FixedIntervalTokenBucketConfiguration {", "originalCommit": "f20716f5e57862fd201915f71753c9ae19ece119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg4MjA1Mw==", "url": "https://github.com/Netflix/titus-control-plane/pull/848#discussion_r428882053", "bodyText": "Prefix must be provided by a client, but we can create a default value here.", "author": "tbak", "createdAt": "2020-05-21T20:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM4NDE4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "dfee9d94863d9ff3bde0f57f8e6298a718bd4aea", "chunk": "diff --git a/titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/FixedIntervalTokenBucketConfiguration.java b/titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/FixedIntervalTokenBucketConfiguration.java\nindex b3357a990..d86955c46 100644\n--- a/titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/FixedIntervalTokenBucketConfiguration.java\n+++ b/titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/FixedIntervalTokenBucketConfiguration.java\n\n@@ -16,8 +16,10 @@\n \n package com.netflix.titus.common.util.limiter.tokenbucket;\n \n+import com.netflix.archaius.api.annotations.Configuration;\n import com.netflix.archaius.api.annotations.DefaultValue;\n \n+@Configuration(prefix = \"titus.common.tokenBucket\")\n public interface FixedIntervalTokenBucketConfiguration {\n \n     @DefaultValue(\"1\")\n"}}, {"oid": "dfee9d94863d9ff3bde0f57f8e6298a718bd4aea", "url": "https://github.com/Netflix/titus-control-plane/commit/dfee9d94863d9ff3bde0f57f8e6298a718bd4aea", "message": "Code review updates", "committedDate": "2020-05-21T20:05:41Z", "type": "commit"}]}