{"pr_number": 875, "pr_title": "Adding compliance check for container accountId and subnets", "pr_createdAt": "2020-06-18T07:54:18Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/875", "timeline": [{"oid": "93758795dd6d01f039cf1a479627be58aa7a504d", "url": "https://github.com/Netflix/titus-control-plane/commit/93758795dd6d01f039cf1a479627be58aa7a504d", "message": "Adding compliance check for container accountId and subnets", "committedDate": "2020-06-18T07:48:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMDE5Mg==", "url": "https://github.com/Netflix/titus-control-plane/pull/875#discussion_r442410192", "bodyText": "Isn't account/subnets configuration the same feature?", "author": "tbak", "createdAt": "2020-06-18T18:07:26Z", "path": "titus-api/src/main/java/com/netflix/titus/api/FeatureRolloutPlans.java", "diffHunk": "@@ -76,4 +76,19 @@\n             description = \"Integrate Kube scheduler\"\n     )\n     String KUBE_SCHEDULER_FEATURE = \"kubeSchedulerFeature\";\n+\n+    @FeatureRollout(\n+            featureId = \"accountId\",\n+            deadline = \"10/01/2020\",\n+            description = \"Jobs should explicity provide AWS accountId the container should launch in\"\n+    )\n+    String CONTAINER_ACCOUNT_ID_REQUIRED_FEATURE = \"accountId\";\n+\n+    @FeatureRollout(", "originalCommit": "93758795dd6d01f039cf1a479627be58aa7a504d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "85f169b7db4dcfba887f119039af538667896963", "chunk": "diff --git a/titus-api/src/main/java/com/netflix/titus/api/FeatureRolloutPlans.java b/titus-api/src/main/java/com/netflix/titus/api/FeatureRolloutPlans.java\nindex a71904200..2906ad7a7 100644\n--- a/titus-api/src/main/java/com/netflix/titus/api/FeatureRolloutPlans.java\n+++ b/titus-api/src/main/java/com/netflix/titus/api/FeatureRolloutPlans.java\n\n@@ -78,17 +78,10 @@ public interface FeatureRolloutPlans {\n     String KUBE_SCHEDULER_FEATURE = \"kubeSchedulerFeature\";\n \n     @FeatureRollout(\n-            featureId = \"accountId\",\n+            featureId = \"accountIdAndSubnetsFeature\",\n             deadline = \"10/01/2020\",\n-            description = \"Jobs should explicity provide AWS accountId the container should launch in\"\n+            description = \"Jobs should provide AWS accountId and corresponding subnets the container should launch in\"\n     )\n-    String CONTAINER_ACCOUNT_ID_REQUIRED_FEATURE = \"accountId\";\n-\n-    @FeatureRollout(\n-            featureId = \"subnets\",\n-            deadline = \"10/01/2020\",\n-            description = \"Each job specifying the accountId to run the containers in must also specify a list of \" +\n-                    \"subnets available in the accountId for provisioning networking.\"\n-    )\n-    String SUBNETS_REQUIRED_FEATURE = \"subnets\";\n+    String CONTAINER_ACCOUNT_ID_AND_SUBNETS_REQUIRED_FEATURE = \"accountIdAndSubnetsFeature\";\n+    \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMTU1OA==", "url": "https://github.com/Netflix/titus-control-plane/pull/875#discussion_r442411558", "bodyText": "What if a user sets an account id (non-default), but not subnets?  Setting default subnets will be incorrect.\nI think we should validate/set this data together, as they must be mutually consistent.", "author": "tbak", "createdAt": "2020-06-18T18:10:01Z", "path": "titus-server-gateway/src/main/java/com/netflix/titus/gateway/service/v3/internal/ExtendedJobSanitizer.java", "diffHunk": "@@ -151,6 +157,26 @@ public ExtendedJobSanitizer(JobManagerConfiguration jobManagerConfiguration,\n                 }\n             });\n \n+            Map<String, String> defaultContainerAttributes = new HashMap<>();\n+            violations.findViolation(CONTAINER_ACCOUNT_ID_REQUIRED_FEATURE).ifPresent(nonCompliance -> {\n+                if (!StringExt.isEmpty(jobManagerConfiguration.getDefaultContainerAccountId())) {\n+                    defaultContainerAttributes.put(JobAttributes.JOB_CONTAINER_ATTRIBUTE_ACCOUNT_ID, jobManagerConfiguration.getDefaultContainerAccountId());\n+                }\n+            });\n+            violations.findViolation(SUBNETS_REQUIRED_FEATURE).ifPresent(nonCompliance -> {", "originalCommit": "93758795dd6d01f039cf1a479627be58aa7a504d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "85f169b7db4dcfba887f119039af538667896963", "chunk": "diff --git a/titus-server-gateway/src/main/java/com/netflix/titus/gateway/service/v3/internal/ExtendedJobSanitizer.java b/titus-server-gateway/src/main/java/com/netflix/titus/gateway/service/v3/internal/ExtendedJobSanitizer.java\nindex 8b3e14a74..cc305486e 100644\n--- a/titus-server-gateway/src/main/java/com/netflix/titus/gateway/service/v3/internal/ExtendedJobSanitizer.java\n+++ b/titus-server-gateway/src/main/java/com/netflix/titus/gateway/service/v3/internal/ExtendedJobSanitizer.java\n\n@@ -158,16 +156,11 @@ class ExtendedJobSanitizer implements EntitySanitizer {\n             });\n \n             Map<String, String> defaultContainerAttributes = new HashMap<>();\n-            violations.findViolation(CONTAINER_ACCOUNT_ID_REQUIRED_FEATURE).ifPresent(nonCompliance -> {\n-                if (!StringExt.isEmpty(jobManagerConfiguration.getDefaultContainerAccountId())) {\n-                    defaultContainerAttributes.put(JobAttributes.JOB_CONTAINER_ATTRIBUTE_ACCOUNT_ID, jobManagerConfiguration.getDefaultContainerAccountId());\n-                }\n-            });\n-            violations.findViolation(SUBNETS_REQUIRED_FEATURE).ifPresent(nonCompliance -> {\n-                if (!StringExt.isEmpty(jobManagerConfiguration.getDefaultSubnets())) {\n-                    defaultContainerAttributes.put(JobAttributes.JOB_CONTAINER_ATTRIBUTE_SUBNETS, jobManagerConfiguration.getDefaultSubnets());\n-                }\n+            violations.findViolation(CONTAINER_ACCOUNT_ID_AND_SUBNETS_REQUIRED_FEATURE).ifPresent(nonCompliance -> {\n+                defaultContainerAttributes.put(JOB_CONTAINER_ATTRIBUTE_ACCOUNT_ID, jobManagerConfiguration.getDefaultContainerAccountId());\n+                defaultContainerAttributes.put(JOB_CONTAINER_ATTRIBUTE_SUBNETS, jobManagerConfiguration.getDefaultSubnets());\n             });\n+\n             if (!CollectionsExt.isNullOrEmpty(defaultContainerAttributes)) {\n                 Map<String, String> sanitizedContainerAttributes = new HashMap<>(sanitized.getContainer().getAttributes());\n                 sanitizedContainerAttributes.putAll(defaultContainerAttributes);\n"}}, {"oid": "85f169b7db4dcfba887f119039af538667896963", "url": "https://github.com/Netflix/titus-control-plane/commit/85f169b7db4dcfba887f119039af538667896963", "message": "Combine accountId and subnets validations and sanitize with defaults when applicable", "committedDate": "2020-06-19T01:37:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2MzQyOA==", "url": "https://github.com/Netflix/titus-control-plane/pull/875#discussion_r442963428", "bodyText": "If I understand it correctly, setting accontId parameter to the default account id is non-compliant?", "author": "tbak", "createdAt": "2020-06-19T17:28:40Z", "path": "titus-server-gateway/src/main/java/com/netflix/titus/gateway/service/v3/internal/JobFeatureComplianceChecks.java", "diffHunk": "@@ -106,6 +111,39 @@\n         };\n     }\n \n+    /**\n+     * A feature compliance is violated if there is a default accountId and subnets combination present in the {@link JobManagerConfiguration} for the deployment stack\n+     * but the container attributes in the {@link JobDescriptor} are missing one or both values.\n+     * @param jobManagerConfiguration {@link JobManagerConfiguration}\n+     * @return feature compliance evaluation\n+     */\n+    static FeatureCompliance<JobDescriptor<?>> missingContainerAccountIdAndSubnets(JobManagerConfiguration jobManagerConfiguration) {\n+        return jobDescriptor -> {\n+            String defaultAccountId = jobManagerConfiguration.getDefaultContainerAccountId();\n+            String defaultSubnets = jobManagerConfiguration.getDefaultSubnets();\n+            // Ignore this compliance check unless both default accountId and subnet configuration properties are set implying our\n+            // intent to aid the job descriptor sanitization\n+            if (StringExt.isEmpty(defaultAccountId) || StringExt.isEmpty(defaultSubnets)) {\n+                return Optional.empty();\n+            }\n+\n+            String accountIdContainerAttribute = jobDescriptor.getContainer().getAttributes().get(JOB_CONTAINER_ATTRIBUTE_ACCOUNT_ID);\n+            String subnetContainerAttribute = jobDescriptor.getContainer().getAttributes().get(JOB_CONTAINER_ATTRIBUTE_SUBNETS);\n+\n+            // Feature compliance is violated if either (i) both attributes are not set, or (ii) accountId is set to the default value but the subnets value is not set.\n+            // In either case, we should take action in response to this violation.\n+            if ((StringExt.isEmpty(accountIdContainerAttribute) || defaultAccountId.equals(accountIdContainerAttribute)) && StringExt.isEmpty(subnetContainerAttribute)) {", "originalCommit": "85f169b7db4dcfba887f119039af538667896963", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NTA5OA==", "url": "https://github.com/Netflix/titus-control-plane/pull/875#discussion_r442965098", "bodyText": "Non compliant if:\n(1). default account_id and subnets are set in the configuration (expected for the stack),\nAND\n(2a). account_id and subnets are empty in the job descriptor, OR\n(2b). account_id is set to the default account_id but subnets is not set in the job descriptor\nAll other cases are given a pass under current/default behavior.", "author": "joshi-keyur", "createdAt": "2020-06-19T17:32:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2MzQyOA=="}], "type": "inlineReview", "revised_code": null}]}