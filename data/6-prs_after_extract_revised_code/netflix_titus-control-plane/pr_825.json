{"pr_number": 825, "pr_title": "Make RDS timeout configurable in the Titus relocation service", "pr_createdAt": "2020-03-25T21:48:08Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/825", "timeline": [{"oid": "1a216240ca168914162d16dde795afd36193ce80", "url": "https://github.com/Netflix/titus-control-plane/commit/1a216240ca168914162d16dde795afd36193ce80", "message": "Make RDS timeout configurable in the Titus relocation service\n\nand increast the default from 30sec to 90sec", "committedDate": "2020-03-25T21:46:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5NTUxMg==", "url": "https://github.com/Netflix/titus-control-plane/pull/825#discussion_r398195512", "bodyText": "if you timeout the Mono, does the underlying sql query also get cancelled or is the query just going to run until completion?", "author": "corindwyer", "createdAt": "2020-03-25T21:57:39Z", "path": "titus-supplementary-component/task-relocation/src/main/java/com/netflix/titus/supplementary/relocation/workflow/step/MustBeRelocatedTaskStoreUpdateStep.java", "diffHunk": "@@ -119,7 +123,7 @@ private void updateInStore(List<TaskRelocationPlan> toUpdate) {\n         Map<String, Optional<Throwable>> result;\n         try {\n             result = store.createOrUpdateTaskRelocationPlans(toUpdate)\n-                    .timeout(STORE_UPDATE_TIMEOUT)\n+                    .timeout(Duration.ofMillis(configuration.getRdsTimeoutMs()))", "originalCommit": "1a216240ca168914162d16dde795afd36193ce80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMTM2Ng==", "url": "https://github.com/Netflix/titus-control-plane/pull/825#discussion_r398201366", "bodyText": "I think it will not be cancelled. This request is run synchronously on an internal executor.", "author": "tbak", "createdAt": "2020-03-25T22:10:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5NTUxMg=="}], "type": "inlineReview", "revised_code": null}]}