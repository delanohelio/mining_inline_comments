{"pr_number": 776, "pr_title": "Add the direct Kube integration metrics", "pr_createdAt": "2020-02-16T23:37:06Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/776", "timeline": [{"oid": "fec966cbdf7d72fef9339e9ceba8ff656d687ea4", "url": "https://github.com/Netflix/titus-control-plane/commit/fec966cbdf7d72fef9339e9ceba8ff656d687ea4", "message": "Add the direct Kube integration metrics", "committedDate": "2020-02-16T23:35:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMyMjAwNw==", "url": "https://github.com/Netflix/titus-control-plane/pull/776#discussion_r380322007", "bodyText": "new constant for \"informer\"?", "author": "corindwyer", "createdAt": "2020-02-17T18:26:47Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultKubeApiFacade.java", "diffHunk": "@@ -77,13 +86,20 @@ public DefaultKubeApiFacade(DirectKubeConfiguration configuration, ApiClient api\n         this.coreV1Api = new CoreV1Api(apiClient);\n         this.customObjectsApi = new CustomObjectsApi(apiClient);\n         this.titusRuntime = titusRuntime;\n+\n+        this.nodeSizeGaugeId = titusRuntime.getRegistry().createId(METRICS_ROOT + \"informer\", \"type\", \"node\");", "originalCommit": "fec966cbdf7d72fef9339e9ceba8ff656d687ea4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3c8d83f3d292197e2325af86eab3bc3666d1841", "chunk": "diff --git a/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultKubeApiFacade.java b/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultKubeApiFacade.java\nindex 81cb0409c..f6e306519 100644\n--- a/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultKubeApiFacade.java\n+++ b/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultKubeApiFacade.java\n\n@@ -87,9 +88,9 @@ public class DefaultKubeApiFacade implements KubeApiFacade {\n         this.customObjectsApi = new CustomObjectsApi(apiClient);\n         this.titusRuntime = titusRuntime;\n \n-        this.nodeSizeGaugeId = titusRuntime.getRegistry().createId(METRICS_ROOT + \"informer\", \"type\", \"node\");\n-        this.podSizeGaugeId = titusRuntime.getRegistry().createId(METRICS_ROOT + \"informer\", \"type\", \"pod\");\n-        this.opportunisticResourceSizeGaugeId = titusRuntime.getRegistry().createId(METRICS_ROOT + \"informer\", \"type\", \"opportunistic\");\n+        this.nodeSizeGaugeId = titusRuntime.getRegistry().createId(METRICS_INFORMER, \"type\", \"node\");\n+        this.podSizeGaugeId = titusRuntime.getRegistry().createId(METRICS_INFORMER, \"type\", \"pod\");\n+        this.opportunisticResourceSizeGaugeId = titusRuntime.getRegistry().createId(METRICS_INFORMER, \"type\", \"opportunistic\");\n     }\n \n     @PreDestroy\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM0MDIxNA==", "url": "https://github.com/Netflix/titus-control-plane/pull/776#discussion_r380340214", "bodyText": "as spoken in person, let's make sure this is not causing events to be potentially handled out of order (since we are flatMapping them all and processing them concurrently.", "author": "fabiokung", "createdAt": "2020-02-17T19:29:52Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/KubeNotificationProcessor.java", "diffHunk": "@@ -85,6 +87,9 @@ public void enterActiveMode() {\n                         return Mono.empty();\n                     }\n \n+                    if (event instanceof PodNotFoundEvent) {\n+                        return handlePodNotFoundEvent((PodNotFoundEvent) event);", "originalCommit": "fec966cbdf7d72fef9339e9ceba8ff656d687ea4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1NjgyNQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/776#discussion_r380356825", "bodyText": "I have added concurrency limit + a note (another PR).", "author": "tbak", "createdAt": "2020-02-17T20:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM0MDIxNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM0MDkyNQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/776#discussion_r380340925", "bodyText": "minor: can probably use monitorSize(Collection) here", "author": "fabiokung", "createdAt": "2020-02-17T19:32:12Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultDirectKubeApiServerIntegratorMetrics.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.master.mesos.kubeapiserver.direct;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentMap;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.netflix.spectator.api.Id;\n+import com.netflix.spectator.api.Registry;\n+import com.netflix.spectator.api.patterns.PolledMeter;\n+import com.netflix.titus.api.jobmanager.model.job.Task;\n+import com.netflix.titus.common.runtime.TitusRuntime;\n+import com.netflix.titus.master.MetricConstants;\n+import io.kubernetes.client.models.V1Pod;\n+\n+/**\n+ * Metrics companion class for {@link DefaultDirectKubeApiServerIntegrator}.\n+ */\n+class DefaultDirectKubeApiServerIntegratorMetrics {\n+\n+    private static final String ROOT = MetricConstants.METRIC_KUBERNETES + \"directKubeApiServerIntegrator.\";\n+\n+    private final Registry registry;\n+\n+    private final Id podGaugeId;\n+    private final Id launchCounterId;\n+    private final Id terminateCounterId;\n+    private final Id eventCounterId;\n+\n+    DefaultDirectKubeApiServerIntegratorMetrics(TitusRuntime titusRuntime) {\n+        this.registry = titusRuntime.getRegistry();\n+        this.podGaugeId = registry.createId(ROOT + \"pods\");\n+        this.launchCounterId = registry.createId(ROOT + \"launches\");\n+        this.terminateCounterId = registry.createId(ROOT + \"terminates\");\n+        this.eventCounterId = registry.createId(ROOT + \"events\");\n+    }\n+\n+    void shutdown() {\n+        PolledMeter.remove(registry, podGaugeId);\n+    }\n+\n+    void observePodsCollection(ConcurrentMap<String, V1Pod> pods) {\n+        PolledMeter.using(registry).withId(podGaugeId).monitorValue(pods, Map::size);", "originalCommit": "fec966cbdf7d72fef9339e9ceba8ff656d687ea4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3c8d83f3d292197e2325af86eab3bc3666d1841", "chunk": "diff --git a/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultDirectKubeApiServerIntegratorMetrics.java b/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultDirectKubeApiServerIntegratorMetrics.java\nindex 82ca25d21..396ea9148 100644\n--- a/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultDirectKubeApiServerIntegratorMetrics.java\n+++ b/titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultDirectKubeApiServerIntegratorMetrics.java\n\n@@ -16,7 +16,6 @@\n \n package com.netflix.titus.master.mesos.kubeapiserver.direct;\n \n-import java.util.Map;\n import java.util.concurrent.ConcurrentMap;\n import java.util.concurrent.TimeUnit;\n \n"}}, {"oid": "b3c8d83f3d292197e2325af86eab3bc3666d1841", "url": "https://github.com/Netflix/titus-control-plane/commit/b3c8d83f3d292197e2325af86eab3bc3666d1841", "message": "Code review updates", "committedDate": "2020-02-17T20:33:49Z", "type": "commit"}]}