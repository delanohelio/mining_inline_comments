{"pr_number": 379, "pr_title": "Add a line in /map showing which pools a map is in, if any.", "pr_createdAt": "2020-03-26T19:27:08Z", "pr_url": "https://github.com/PGMDev/PGM/pull/379", "timeline": [{"oid": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3", "url": "https://github.com/PGMDev/PGM/commit/9b7ec63d9eb7b812899fd7f33825313b9cb41cc3", "message": "Adds a check on /map that will show which pools a map is included in, if any.\n\nSigned-off-by: KingOfSquares <simonmorland@gmail.com>", "committedDate": "2020-03-26T19:29:13Z", "type": "commit"}, {"oid": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3", "url": "https://github.com/PGMDev/PGM/commit/9b7ec63d9eb7b812899fd7f33825313b9cb41cc3", "message": "Adds a check on /map that will show which pools a map is included in, if any.\n\nSigned-off-by: KingOfSquares <simonmorland@gmail.com>", "committedDate": "2020-03-26T19:29:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5MjExMg==", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r398892112", "bodyText": "This feels so specific that it looks out of place.\nJust from wherever you call, do:\npoolManager.getPools().stream()\n    .filter(p -> p.getMaps().contains(map)).collect(Collectors.toList());", "author": "Pablete1234", "createdAt": "2020-03-26T21:04:59Z", "path": "core/src/main/java/tc/oc/pgm/rotation/MapPoolManager.java", "diffHunk": "@@ -152,4 +152,16 @@ public void matchEnded(Match match) {\n \n     activeMapPool.matchEnded(match);\n   }\n+\n+  /**\n+   * Checks all loaded {@link MapPool}s for a given {@link MapInfo} and returns all {@link MapPool}s\n+   * that contains it\n+   */\n+  public List<MapPool> contains(MapInfo map) {\n+    List<MapPool> containedIn = new ArrayList<>();\n+    for (MapPool mapPool : this.mapPools) {\n+      if (mapPool.getMaps().contains(map)) containedIn.add(mapPool);\n+    }\n+    return containedIn;\n+  }", "originalCommit": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "301176677b39df3e579606189187d2575e9c4133", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/rotation/MapPoolManager.java b/core/src/main/java/tc/oc/pgm/rotation/MapPoolManager.java\nindex 447720a6..b17e96dd 100644\n--- a/core/src/main/java/tc/oc/pgm/rotation/MapPoolManager.java\n+++ b/core/src/main/java/tc/oc/pgm/rotation/MapPoolManager.java\n\n@@ -152,16 +152,4 @@ public class MapPoolManager implements MapOrder {\n \n     activeMapPool.matchEnded(match);\n   }\n-\n-  /**\n-   * Checks all loaded {@link MapPool}s for a given {@link MapInfo} and returns all {@link MapPool}s\n-   * that contains it\n-   */\n-  public List<MapPool> contains(MapInfo map) {\n-    List<MapPool> containedIn = new ArrayList<>();\n-    for (MapPool mapPool : this.mapPools) {\n-      if (mapPool.getMaps().contains(map)) containedIn.add(mapPool);\n-    }\n-    return containedIn;\n-  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTY4OA==", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r398895688", "bodyText": "String pools = ((MapPoolManager) ..).getPools().stream()\n    .filter(p -> p.getMaps().contains(map)).collect(Collectors.joining(\", \"));", "author": "Pablete1234", "createdAt": "2020-03-26T21:11:57Z", "path": "core/src/main/java/tc/oc/pgm/commands/MapCommands.java", "diffHunk": "@@ -192,6 +196,16 @@ public void map(Audience audience, CommandSender sender, @Text MapInfo map) {\n     }\n \n     audience.sendMessage(createTagsComponent(map.getTags()));\n+\n+    if (PGM.get().getMapOrder() instanceof MapPoolManager) {\n+      List<MapPool> mapPools = ((MapPoolManager) PGM.get().getMapOrder()).contains(map);", "originalCommit": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2NTQ4MA==", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r399465480", "bodyText": ".joining gives an error", "author": "KingOfSquares", "createdAt": "2020-03-27T18:34:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NTMwNQ==", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r399475305", "bodyText": "With the filter it will give me all MapPools i want right. But how do i make a Collector that collects all those MapPools names.", "author": "KingOfSquares", "createdAt": "2020-03-27T18:53:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3OTc5Mw==", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r399479793", "bodyText": "Nvm, i think i figured it out!", "author": "KingOfSquares", "createdAt": "2020-03-27T19:01:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTY4OA=="}], "type": "inlineReview", "revised_code": {"commit": "301176677b39df3e579606189187d2575e9c4133", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/commands/MapCommands.java b/core/src/main/java/tc/oc/pgm/commands/MapCommands.java\nindex 1a0dceac..c51de40b 100644\n--- a/core/src/main/java/tc/oc/pgm/commands/MapCommands.java\n+++ b/core/src/main/java/tc/oc/pgm/commands/MapCommands.java\n\n@@ -198,12 +197,17 @@ public class MapCommands {\n     audience.sendMessage(createTagsComponent(map.getTags()));\n \n     if (PGM.get().getMapOrder() instanceof MapPoolManager) {\n-      List<MapPool> mapPools = ((MapPoolManager) PGM.get().getMapOrder()).contains(map);\n+      String mapPools =\n+          ((MapPoolManager) PGM.get().getMapOrder())\n+              .getMapPools().stream()\n+                  .filter(pool -> pool.getMaps().contains(map))\n+                  .map(MapPool::getName)\n+                  .collect(Collectors.joining(\", \"));\n       if (!mapPools.isEmpty()) {\n         audience.sendMessage(\n             new PersonalizedText(\n-                mapInfoLabel(\"command.map.mapInfo.containedInMapPools\"),\n-                createContainedInMapPoolsComponent(mapPools).bold(false)));\n+                mapInfoLabel(\"command.map.mapInfo.pools\"),\n+                new PersonalizedText(mapPools).color(ChatColor.GOLD).bold(false)));\n       }\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTgyMQ==", "url": "https://github.com/PGMDev/PGM/pull/379#discussion_r398895821", "bodyText": "this can go away\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Component createContainedInMapPoolsComponent(List<MapPool> mapPools) {\n          \n          \n            \n                PersonalizedText pools = new PersonalizedText();\n          \n          \n            \n                int iteration = 1;\n          \n          \n            \n                for (MapPool mapPool : mapPools) {\n          \n          \n            \n                  pools.extra(mapPool.getName());\n          \n          \n            \n                  if (mapPools.size() > iteration) pools.extra(\", \");\n          \n          \n            \n                  iteration++;\n          \n          \n            \n                }\n          \n          \n            \n                return new PersonalizedText(pools, ChatColor.GOLD);\n          \n          \n            \n              }", "author": "Pablete1234", "createdAt": "2020-03-26T21:12:14Z", "path": "core/src/main/java/tc/oc/pgm/commands/MapCommands.java", "diffHunk": "@@ -246,6 +260,17 @@ private static Component createPlayerLimitComponent(CommandSender sender, MapInf\n     return total.extra(\" \").extra(verbose);\n   }\n \n+  private Component createContainedInMapPoolsComponent(List<MapPool> mapPools) {\n+    PersonalizedText pools = new PersonalizedText();\n+    int iteration = 1;\n+    for (MapPool mapPool : mapPools) {\n+      pools.extra(mapPool.getName());\n+      if (mapPools.size() > iteration) pools.extra(\", \");\n+      iteration++;\n+    }\n+    return new PersonalizedText(pools, ChatColor.GOLD);\n+  }\n+", "originalCommit": "9b7ec63d9eb7b812899fd7f33825313b9cb41cc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "301176677b39df3e579606189187d2575e9c4133", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/commands/MapCommands.java b/core/src/main/java/tc/oc/pgm/commands/MapCommands.java\nindex 1a0dceac..c51de40b 100644\n--- a/core/src/main/java/tc/oc/pgm/commands/MapCommands.java\n+++ b/core/src/main/java/tc/oc/pgm/commands/MapCommands.java\n\n@@ -260,17 +264,6 @@ public class MapCommands {\n     return total.extra(\" \").extra(verbose);\n   }\n \n-  private Component createContainedInMapPoolsComponent(List<MapPool> mapPools) {\n-    PersonalizedText pools = new PersonalizedText();\n-    int iteration = 1;\n-    for (MapPool mapPool : mapPools) {\n-      pools.extra(mapPool.getName());\n-      if (mapPools.size() > iteration) pools.extra(\", \");\n-      iteration++;\n-    }\n-    return new PersonalizedText(pools, ChatColor.GOLD);\n-  }\n-\n   @Command(\n       aliases = {\"mapnext\", \"mn\", \"nextmap\", \"nm\", \"next\"},\n       desc = \"Shows which map is coming up next\")\n"}}, {"oid": "301176677b39df3e579606189187d2575e9c4133", "url": "https://github.com/PGMDev/PGM/commit/301176677b39df3e579606189187d2575e9c4133", "message": "Remove unneeded methods. Use Streams!\n\nSigned-off-by: KingOfSquares <simonmorland@gmail.com>", "committedDate": "2020-03-27T19:13:31Z", "type": "commit"}]}