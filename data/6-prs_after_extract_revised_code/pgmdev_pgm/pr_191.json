{"pr_number": 191, "pr_title": "Allow to toggle observers", "pr_createdAt": "2020-01-04T19:38:34Z", "pr_url": "https://github.com/PGMDev/PGM/pull/191", "timeline": [{"oid": "a2c7982c8132038e8a826a6e6db7b60400d9dab4", "url": "https://github.com/PGMDev/PGM/commit/a2c7982c8132038e8a826a6e6db7b60400d9dab4", "message": "Allow to toggle observers\n\nSigned-off-by: TheMolkaPL <themolkapl@gmail.com>", "committedDate": "2020-01-04T19:35:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NjAwOA==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363056008", "bodyText": "Why not just on/off? I think it's better to be somewhat consistent with other settings if players want to be able to find/explore them easily.", "author": "Pablete1234", "createdAt": "2020-01-04T21:26:10Z", "path": "src/main/java/tc/oc/pgm/api/setting/SettingValue.java", "diffHunk": "@@ -21,7 +21,9 @@\n   DEATH_ALL(\"death\", \"all\"), // Send all death messages, highlight your own\n   PICKER_AUTO(\"picker\", \"auto\"), // Display after cycle, or with permissions.\n   PICKER_ON(\"picker\", \"on\"), // Display the picker GUI always\n-  PICKER_OFF(\"picker\", \"off\"); // Never display the picker GUI\n+  PICKER_OFF(\"picker\", \"off\"), // Never display the picker GUI\n+  OBSERVERS_SHOWN(\"observers\", \"shown\"), // Show observers\n+  OBSERVERS_HIDDEN(\"observers\", \"hidden\"); // Hide observers", "originalCommit": "a2c7982c8132038e8a826a6e6db7b60400d9dab4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzI0Ng==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363057246", "bodyText": "It's currently more understandable what it means.", "author": "TheMolkaPL", "createdAt": "2020-01-04T21:55:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NjAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzMwNw==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363057307", "bodyText": "Are you sure? I think obs on or obs off is just as easy to understeand as obs shown and obs hidden. It's just a matter of consistency with other settings tho, i am not too concerned about that as long as it's easy to tab-complete tho", "author": "Pablete1234", "createdAt": "2020-01-04T21:57:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NjAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzMzOA==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363057338", "bodyText": "Let's stick to on/off. Eventually we'll have a Gui with an explanation of what the setting does", "author": "Electroid", "createdAt": "2020-01-04T21:58:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NjAwOA=="}], "type": "inlineReview", "revised_code": {"commit": "ec8274f1ee6849a015069ab5587ed459545c48ff", "chunk": "diff --git a/src/main/java/tc/oc/pgm/api/setting/SettingValue.java b/src/main/java/tc/oc/pgm/api/setting/SettingValue.java\nindex ec279af9..1ccf6344 100644\n--- a/src/main/java/tc/oc/pgm/api/setting/SettingValue.java\n+++ b/src/main/java/tc/oc/pgm/api/setting/SettingValue.java\n\n@@ -22,8 +22,8 @@ public enum SettingValue {\n   PICKER_AUTO(\"picker\", \"auto\"), // Display after cycle, or with permissions.\n   PICKER_ON(\"picker\", \"on\"), // Display the picker GUI always\n   PICKER_OFF(\"picker\", \"off\"), // Never display the picker GUI\n-  OBSERVERS_SHOWN(\"observers\", \"shown\"), // Show observers\n-  OBSERVERS_HIDDEN(\"observers\", \"hidden\"); // Hide observers\n+  OBSERVERS_ON(\"observers\", \"shown\"), // Show observers\n+  OBSERVERS_OFF(\"observers\", \"hidden\"); // Hide observers\n \n   private final String key;\n   private final String name;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NjE4NA==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363056184", "bodyText": "This 4th branch should never occur, or am i missing something? If that's the case, maybe leave a comment saying that shouldn't happen.", "author": "Pablete1234", "createdAt": "2020-01-04T21:30:11Z", "path": "src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java", "diffHunk": "@@ -172,7 +174,13 @@ public boolean canInteract() {\n \n   @Override\n   public boolean canSee(MatchPlayer other) {\n-    return (isObserving() || other.isParticipating()) && other.isVisible();\n+    if (!other.isVisible()) return false;\n+    if (other.isParticipating()) return true;\n+    if (isObserving()) {\n+      SettingValue observers = getSettings().getValue(SettingKey.OBSERVERS);\n+      return observers.equals(SettingValue.OBSERVERS_SHOWN);\n+    }\n+    return false;", "originalCommit": "a2c7982c8132038e8a826a6e6db7b60400d9dab4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzI2NA==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363057264", "bodyText": "Maybe throw IllegalStateException?", "author": "TheMolkaPL", "createdAt": "2020-01-04T21:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NjE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzM0Ng==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363057346", "bodyText": "Maybe add a logger, but don't throw an exception, it's better not to crash PGM because of something that can easily be recoverable by just returning an arbitrary false", "author": "Pablete1234", "createdAt": "2020-01-04T21:58:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NjE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzQwMg==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363057402", "bodyText": "canX methods should never return an illegal state, see my comment below.", "author": "Electroid", "createdAt": "2020-01-04T22:00:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NjE4NA=="}], "type": "inlineReview", "revised_code": {"commit": "ec5a164bd4c31da670839f9bad12f3fe12301973", "chunk": "diff --git a/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java b/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java\nindex 3e124cc5..dc3e070e 100644\n--- a/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java\n+++ b/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java\n\n@@ -176,11 +176,7 @@ public class MatchPlayerImpl implements MatchPlayer, MultiAudience, Comparable<M\n   public boolean canSee(MatchPlayer other) {\n     if (!other.isVisible()) return false;\n     if (other.isParticipating()) return true;\n-    if (isObserving()) {\n-      SettingValue observers = getSettings().getValue(SettingKey.OBSERVERS);\n-      return observers.equals(SettingValue.OBSERVERS_SHOWN);\n-    }\n-    return false;\n+    return getSettings().getValue(SettingKey.OBSERVERS) == SettingValue.OBSERVERS_SHOWN;\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzM4MA==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363057380", "bodyText": "Change to:\nreturn getSettings().getValue(SettingKey.OBSERVERS) == SettingValue.OBSERVERS_SHOWN;", "author": "Electroid", "createdAt": "2020-01-04T22:00:10Z", "path": "src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java", "diffHunk": "@@ -172,7 +174,13 @@ public boolean canInteract() {\n \n   @Override\n   public boolean canSee(MatchPlayer other) {\n-    return (isObserving() || other.isParticipating()) && other.isVisible();\n+    if (!other.isVisible()) return false;\n+    if (other.isParticipating()) return true;\n+    if (isObserving()) {\n+      SettingValue observers = getSettings().getValue(SettingKey.OBSERVERS);\n+      return observers.equals(SettingValue.OBSERVERS_SHOWN);\n+    }\n+    return false;", "originalCommit": "a2c7982c8132038e8a826a6e6db7b60400d9dab4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1Nzc1NA==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363057754", "bodyText": "Actually, if you make it that, players inside the match will be able to see obs.", "author": "Pablete1234", "createdAt": "2020-01-04T22:09:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NzM4MA=="}], "type": "inlineReview", "revised_code": {"commit": "ec5a164bd4c31da670839f9bad12f3fe12301973", "chunk": "diff --git a/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java b/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java\nindex 3e124cc5..dc3e070e 100644\n--- a/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java\n+++ b/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java\n\n@@ -176,11 +176,7 @@ public class MatchPlayerImpl implements MatchPlayer, MultiAudience, Comparable<M\n   public boolean canSee(MatchPlayer other) {\n     if (!other.isVisible()) return false;\n     if (other.isParticipating()) return true;\n-    if (isObserving()) {\n-      SettingValue observers = getSettings().getValue(SettingKey.OBSERVERS);\n-      return observers.equals(SettingValue.OBSERVERS_SHOWN);\n-    }\n-    return false;\n+    return getSettings().getValue(SettingKey.OBSERVERS) == SettingValue.OBSERVERS_SHOWN;\n   }\n \n   @Override\n"}}, {"oid": "ec5a164bd4c31da670839f9bad12f3fe12301973", "url": "https://github.com/PGMDev/PGM/commit/ec5a164bd4c31da670839f9bad12f3fe12301973", "message": "Simplify canSee logic with obs setting\n\nSigned-off-by: TheMolkaPL <themolkapl@gmail.com>", "committedDate": "2020-01-04T22:04:59Z", "type": "commit"}, {"oid": "ec8274f1ee6849a015069ab5587ed459545c48ff", "url": "https://github.com/PGMDev/PGM/commit/ec8274f1ee6849a015069ab5587ed459545c48ff", "message": "Rename shown/hidden to on/off\n\nSigned-off-by: TheMolkaPL <themolkapl@gmail.com>", "committedDate": "2020-01-04T22:10:23Z", "type": "commit"}, {"oid": "dc83dc5c1ab35c1773d7286f9c2d7086e8166e89", "url": "https://github.com/PGMDev/PGM/commit/dc83dc5c1ab35c1773d7286f9c2d7086e8166e89", "message": "I forgot to rename them in SettingKey\n\nSigned-off-by: TheMolkaPL <themolkapl@gmail.com>", "committedDate": "2020-01-04T22:13:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1Nzk0OQ==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363057949", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return getSettings().getValue(SettingKey.OBSERVERS) == SettingValue.OBSERVERS_ON;\n          \n          \n            \n                return isObserving() && getSettings().getValue(SettingKey.OBSERVERS) == SettingValue.OBSERVERS_ON;", "author": "Pablete1234", "createdAt": "2020-01-04T22:15:15Z", "path": "src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java", "diffHunk": "@@ -172,7 +174,9 @@ public boolean canInteract() {\n \n   @Override\n   public boolean canSee(MatchPlayer other) {\n-    return (isObserving() || other.isParticipating()) && other.isVisible();\n+    if (!other.isVisible()) return false;\n+    if (other.isParticipating()) return true;\n+    return getSettings().getValue(SettingKey.OBSERVERS) == SettingValue.OBSERVERS_ON;", "originalCommit": "dc83dc5c1ab35c1773d7286f9c2d7086e8166e89", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7fa6b0d8b94d9b32a85ae869db1a5127388bc80d", "chunk": "diff --git a/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java b/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java\nindex 130107b4..f18cc22b 100644\n--- a/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java\n+++ b/src/main/java/tc/oc/pgm/match/MatchPlayerImpl.java\n\n@@ -176,7 +176,7 @@ public class MatchPlayerImpl implements MatchPlayer, MultiAudience, Comparable<M\n   public boolean canSee(MatchPlayer other) {\n     if (!other.isVisible()) return false;\n     if (other.isParticipating()) return true;\n-    return getSettings().getValue(SettingKey.OBSERVERS) == SettingValue.OBSERVERS_ON;\n+    return isObserving() && getSettings().getValue(SettingKey.OBSERVERS) == SettingValue.OBSERVERS_ON;\n   }\n \n   @Override\n"}}, {"oid": "7fa6b0d8b94d9b32a85ae869db1a5127388bc80d", "url": "https://github.com/PGMDev/PGM/commit/7fa6b0d8b94d9b32a85ae869db1a5127388bc80d", "message": "isObserving\n\nSigned-off-by: Pablo Herrera <pabloherrerapalacio@gmail.com>", "committedDate": "2020-01-04T22:16:49Z", "type": "forcePushed"}, {"oid": "16b5e85627822a0b85558f327ab180a268c650f6", "url": "https://github.com/PGMDev/PGM/commit/16b5e85627822a0b85558f327ab180a268c650f6", "message": "isObserving\n\nSigned-off-by: Pablo Herrera <pabloherrerapalacio@gmail.com>\nSigned-off-by: TheMolkaPL <themolkapl@gmail.com>", "committedDate": "2020-01-04T22:18:02Z", "type": "commit"}, {"oid": "16b5e85627822a0b85558f327ab180a268c650f6", "url": "https://github.com/PGMDev/PGM/commit/16b5e85627822a0b85558f327ab180a268c650f6", "message": "isObserving\n\nSigned-off-by: Pablo Herrera <pabloherrerapalacio@gmail.com>\nSigned-off-by: TheMolkaPL <themolkapl@gmail.com>", "committedDate": "2020-01-04T22:18:02Z", "type": "forcePushed"}, {"oid": "459621a2df2ac7ba8777ceb0b5dce7c6b3ff799d", "url": "https://github.com/PGMDev/PGM/commit/459621a2df2ac7ba8777ceb0b5dce7c6b3ff799d", "message": "Fix formatting\n\nSigned-off-by: TheMolkaPL <themolkapl@gmail.com>", "committedDate": "2020-01-04T22:20:25Z", "type": "commit"}, {"oid": "93716c6093b41e12d99f5f19b1e5b5bdaa3742bb", "url": "https://github.com/PGMDev/PGM/commit/93716c6093b41e12d99f5f19b1e5b5bdaa3742bb", "message": "Merge branch 'master' into toggle-obs", "committedDate": "2020-01-04T22:21:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2OTI0Mw==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363069243", "bodyText": "make the string constants on/off?", "author": "Pablete1234", "createdAt": "2020-01-05T04:43:25Z", "path": "src/main/java/tc/oc/pgm/api/setting/SettingValue.java", "diffHunk": "@@ -21,7 +21,9 @@\n   DEATH_ALL(\"death\", \"all\"), // Send all death messages, highlight your own\n   PICKER_AUTO(\"picker\", \"auto\"), // Display after cycle, or with permissions.\n   PICKER_ON(\"picker\", \"on\"), // Display the picker GUI always\n-  PICKER_OFF(\"picker\", \"off\"); // Never display the picker GUI\n+  PICKER_OFF(\"picker\", \"off\"), // Never display the picker GUI\n+  OBSERVERS_ON(\"observers\", \"shown\"), // Show observers\n+  OBSERVERS_OFF(\"observers\", \"hidden\"); // Hide observers", "originalCommit": "93716c6093b41e12d99f5f19b1e5b5bdaa3742bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f76076fd0fd3a591511c328936637cd2169fa800", "chunk": "diff --git a/src/main/java/tc/oc/pgm/api/setting/SettingValue.java b/src/main/java/tc/oc/pgm/api/setting/SettingValue.java\nindex 1ccf6344..ad183138 100644\n--- a/src/main/java/tc/oc/pgm/api/setting/SettingValue.java\n+++ b/src/main/java/tc/oc/pgm/api/setting/SettingValue.java\n\n@@ -22,8 +22,8 @@ public enum SettingValue {\n   PICKER_AUTO(\"picker\", \"auto\"), // Display after cycle, or with permissions.\n   PICKER_ON(\"picker\", \"on\"), // Display the picker GUI always\n   PICKER_OFF(\"picker\", \"off\"), // Never display the picker GUI\n-  OBSERVERS_ON(\"observers\", \"shown\"), // Show observers\n-  OBSERVERS_OFF(\"observers\", \"hidden\"); // Hide observers\n+  OBSERVERS_ON(\"observers\", \"on\"), // Show observers\n+  OBSERVERS_OFF(\"observers\", \"off\"); // Hide observers\n \n   private final String key;\n   private final String name;\n"}}, {"oid": "f76076fd0fd3a591511c328936637cd2169fa800", "url": "https://github.com/PGMDev/PGM/commit/f76076fd0fd3a591511c328936637cd2169fa800", "message": "Make obs setting updatable\n\nSigned-off-by: TheMolkaPL <themolkapl@gmail.com>", "committedDate": "2020-01-05T08:40:40Z", "type": "commit"}, {"oid": "f76076fd0fd3a591511c328936637cd2169fa800", "url": "https://github.com/PGMDev/PGM/commit/f76076fd0fd3a591511c328936637cd2169fa800", "message": "Make obs setting updatable\n\nSigned-off-by: TheMolkaPL <themolkapl@gmail.com>", "committedDate": "2020-01-05T08:40:40Z", "type": "forcePushed"}, {"oid": "b8c4b976517820d43459daa17f7f212fc45b26a0", "url": "https://github.com/PGMDev/PGM/commit/b8c4b976517820d43459daa17f7f212fc45b26a0", "message": "Merge branch 'master' into toggle-obs", "committedDate": "2020-01-05T08:45:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA3ODE3OA==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363078178", "bodyText": "A way to heavily simplify this, is to have a constructor overload:\nSettingKey(List<String> aliases, Consumer<MatchPlayer> update, SettingValue... values)\nThen this just becomes:\nOBSERVERS(Arrays.asList(\"observers\", \"obs\"), MatchPlayer::resetVisibility, OBSERVERS_ON, OBSERVERS_OFF)\nAs obvious, you'll need to keep the consumer on a variable, and on the update method call it if it's not null", "author": "Pablete1234", "createdAt": "2020-01-05T08:47:28Z", "path": "src/main/java/tc/oc/pgm/api/setting/SettingKey.java", "diffHunk": "@@ -18,10 +19,12 @@\n   DEATH(\n       Arrays.asList(\"death\", \"dms\"), DEATH_ALL, DEATH_OWN), // Changes which death messages are seen\n   PICKER(\"picker\", PICKER_AUTO, PICKER_ON, PICKER_OFF), // Changes when the picker is displayed\n-  OBSERVERS(\n-      Arrays.asList(\"observers\", \"obs\"),\n-      OBSERVERS_ON,\n-      OBSERVERS_OFF); // Changes if observers are visible\n+  OBSERVERS(Arrays.asList(\"observers\", \"obs\"), OBSERVERS_ON, OBSERVERS_OFF) {\n+    @Override\n+    public void update(MatchPlayer player) {\n+      player.resetVisibility();\n+    }\n+  }; // Changes if observers are visible", "originalCommit": "f76076fd0fd3a591511c328936637cd2169fa800", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA3OTQwNw==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363079407", "bodyText": "The current version is imo simpler, and I don't think there are going to be many settings with custom update logic.", "author": "TheMolkaPL", "createdAt": "2020-01-05T09:11:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA3ODE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA3OTUxNg==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363079516", "bodyText": "For now, either way works", "author": "Pablete1234", "createdAt": "2020-01-05T09:13:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA3ODE3OA=="}], "type": "inlineReview", "revised_code": {"commit": "a86c0e89d984e72fb874eda51fde423b027a1ca1", "chunk": "diff --git a/src/main/java/tc/oc/pgm/api/setting/SettingKey.java b/src/main/java/tc/oc/pgm/api/setting/SettingKey.java\nindex cfff6b96..37e5d390 100644\n--- a/src/main/java/tc/oc/pgm/api/setting/SettingKey.java\n+++ b/src/main/java/tc/oc/pgm/api/setting/SettingKey.java\n\n@@ -19,12 +19,18 @@ public enum SettingKey {\n   DEATH(\n       Arrays.asList(\"death\", \"dms\"), DEATH_ALL, DEATH_OWN), // Changes which death messages are seen\n   PICKER(\"picker\", PICKER_AUTO, PICKER_ON, PICKER_OFF), // Changes when the picker is displayed\n+  JOIN(Arrays.asList(\"join\", \"jms\"), JOIN_ON, JOIN_OFF), // Changes if join messages are seen\n+  MESSAGE(\n+      Arrays.asList(\"message\", \"dm\"),\n+      MESSAGE_ON,\n+      MESSAGE_OFF), // Changes if direct messages are accepted\n   OBSERVERS(Arrays.asList(\"observers\", \"obs\"), OBSERVERS_ON, OBSERVERS_OFF) {\n     @Override\n     public void update(MatchPlayer player) {\n       player.resetVisibility();\n     }\n-  }; // Changes if observers are visible\n+  }, // Changes if observers are visible\n+  ;\n \n   private final List<String> aliases;\n   private final SettingValue[] values;\n"}}, {"oid": "a86c0e89d984e72fb874eda51fde423b027a1ca1", "url": "https://github.com/PGMDev/PGM/commit/a86c0e89d984e72fb874eda51fde423b027a1ca1", "message": "Merge branch 'master' into toggle-obs", "committedDate": "2020-01-05T12:07:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA4ODcyMg==", "url": "https://github.com/PGMDev/PGM/pull/191#discussion_r363088722", "bodyText": "For future reference, I think this will be a stop gap solution. In making Datastore async, I think I'll add support for a Listener to be registered.", "author": "Electroid", "createdAt": "2020-01-05T12:10:21Z", "path": "src/main/java/tc/oc/pgm/api/setting/SettingKey.java", "diffHunk": "@@ -78,4 +85,11 @@ public SettingValue getDefaultValue() {\n   public String toString() {\n     return getName();\n   }\n+\n+  /**\n+   * Called whether setting has changed and is ready to be updated internally.\n+   *\n+   * @param player owner of the setting\n+   */\n+  public void update(MatchPlayer player) {}", "originalCommit": "a86c0e89d984e72fb874eda51fde423b027a1ca1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}