{"pr_number": 725, "pr_title": "Add owner-points module", "pr_createdAt": "2020-11-27T08:09:29Z", "pr_url": "https://github.com/PGMDev/PGM/pull/725", "timeline": [{"oid": "3ef58ccfd10ab7a52f4720f9d1ecfdf2b61cf14c", "url": "https://github.com/PGMDev/PGM/commit/3ef58ccfd10ab7a52f4720f9d1ecfdf2b61cf14c", "message": "Add bonus-points module\n\nSigned-off-by: Patrick <cowinkkeydinkinc@gmail.com>", "committedDate": "2020-11-27T08:05:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NTk4OA==", "url": "https://github.com/PGMDev/PGM/pull/725#discussion_r531445988", "bodyText": "The default should probably be 0", "author": "KingOfSquares", "createdAt": "2020-11-27T08:23:50Z", "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPointParser.java", "diffHunk": "@@ -87,6 +87,8 @@ public static ControlPointDefinition parseControlPoint(\n     boolean permanent = XMLUtils.parseBoolean(elControlPoint.getAttribute(\"permanent\"), false);\n     float pointsPerSecond =\n         XMLUtils.parseNumber(elControlPoint.getAttribute(\"points\"), Float.class, 1f);\n+    float pointsBonus =\n+        XMLUtils.parseNumber(elControlPoint.getAttribute(\"bonus-points\"), Float.class, 1f);", "originalCommit": "3ef58ccfd10ab7a52f4720f9d1ecfdf2b61cf14c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ2MDIyNg==", "url": "https://github.com/PGMDev/PGM/pull/725#discussion_r531460226", "bodyText": "Thanks for catching that, at the time I did this a few weeks ago I didn't realize this sets the default value.", "author": "CoWinkKeyDinkInc", "createdAt": "2020-11-27T08:52:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NTk4OA=="}], "type": "inlineReview", "revised_code": {"commit": "ee948b8ddf6f485c7e6c20eb76df76c7358d9f11", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/controlpoint/ControlPointParser.java b/core/src/main/java/tc/oc/pgm/controlpoint/ControlPointParser.java\nindex 11b58e77..614cd051 100644\n--- a/core/src/main/java/tc/oc/pgm/controlpoint/ControlPointParser.java\n+++ b/core/src/main/java/tc/oc/pgm/controlpoint/ControlPointParser.java\n\n@@ -87,8 +87,8 @@ public abstract class ControlPointParser {\n     boolean permanent = XMLUtils.parseBoolean(elControlPoint.getAttribute(\"permanent\"), false);\n     float pointsPerSecond =\n         XMLUtils.parseNumber(elControlPoint.getAttribute(\"points\"), Float.class, 1f);\n-    float pointsBonus =\n-        XMLUtils.parseNumber(elControlPoint.getAttribute(\"bonus-points\"), Float.class, 1f);\n+    float pointsOwner =\n+        XMLUtils.parseNumber(elControlPoint.getAttribute(\"owner-points\"), Float.class, 0f);\n     float pointsGrowth =\n         XMLUtils.parseNumber(\n             elControlPoint.getAttribute(\"points-growth\"), Float.class, Float.POSITIVE_INFINITY);\n"}}, {"oid": "ee948b8ddf6f485c7e6c20eb76df76c7358d9f11", "url": "https://github.com/PGMDev/PGM/commit/ee948b8ddf6f485c7e6c20eb76df76c7358d9f11", "message": "rename bonus-points to owner-points, set default owner points to 0\n\nSigned-off-by: Patrick <cowinkkeydinkinc@gmail.com>", "committedDate": "2020-11-27T22:52:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgwMzA3MQ==", "url": "https://github.com/PGMDev/PGM/pull/725#discussion_r531803071", "bodyText": "The points are added on capture but never removed when uncaptured, see:\nhttps://github.com/OvercastNetwork/ProjectAres/blob/master/PGM/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java#L349-L353\nAlso i belive this code should be a bit lower, when the controlling team changes, not when the capturing team does", "author": "Pablete1234", "createdAt": "2020-11-27T22:57:30Z", "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java", "diffHunk": "@@ -348,6 +348,11 @@ private void dominateAndFireEvents(@Nullable Competitor dominantTeam, Duration d\n     if (oldCapturingTeam != this.capturingTeam) {\n       this.match.callEvent(\n           new CapturingTeamChangeEvent(this.match, this, oldCapturingTeam, this.capturingTeam));\n+      ScoreMatchModule scoreMatchModule = this.getMatch().getModule(ScoreMatchModule.class);\n+      // Gives a set number of Owner points to a team when captured.\n+      if (this.capturingTeam != null && scoreMatchModule != null) {\n+        scoreMatchModule.incrementScore(this.capturingTeam, this.getDefinition().getPointsOwner());\n+      }", "originalCommit": "ee948b8ddf6f485c7e6c20eb76df76c7358d9f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a6e6f0522844821fc3ad3ec09e00d27b38b1d617", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java b/core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java\nindex bd91a672..cb674cd5 100644\n--- a/core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java\n+++ b/core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java\n\n@@ -348,17 +348,23 @@ public class ControlPoint extends SimpleGoal<ControlPointDefinition>\n     if (oldCapturingTeam != this.capturingTeam) {\n       this.match.callEvent(\n           new CapturingTeamChangeEvent(this.match, this, oldCapturingTeam, this.capturingTeam));\n-      ScoreMatchModule scoreMatchModule = this.getMatch().getModule(ScoreMatchModule.class);\n-      // Gives a set number of Owner points to a team when captured.\n-      if (this.capturingTeam != null && scoreMatchModule != null) {\n-        scoreMatchModule.incrementScore(this.capturingTeam, this.getDefinition().getPointsOwner());\n-      }\n     }\n \n     if (oldControllingTeam != this.controllingTeam) {\n       this.match.callEvent(\n           new ControllerChangeEvent(this.match, this, oldControllingTeam, this.controllingTeam));\n \n+      ScoreMatchModule scoreMatchModule = this.getMatch().getModule(ScoreMatchModule.class);\n+      // Gives a set number of owner points to a team when captured.\n+      if (this.controllingTeam != null && scoreMatchModule != null) {\n+        if (oldControllingTeam != null) {\n+          scoreMatchModule.incrementScore(\n+              oldControllingTeam, getDefinition().getPointsOwner() * -1);\n+        }\n+        if (this.controllingTeam != null) {\n+          scoreMatchModule.incrementScore(this.controllingTeam, getDefinition().getPointsOwner());\n+        }\n+      }\n       if (this.controllingTeam == null) {\n         this.match.callEvent(new GoalCompleteEvent(this.match, this, oldControllingTeam, false));\n       } else {\n"}}, {"oid": "a6e6f0522844821fc3ad3ec09e00d27b38b1d617", "url": "https://github.com/PGMDev/PGM/commit/a6e6f0522844821fc3ad3ec09e00d27b38b1d617", "message": "Implement traditional owner-points method of scoring, fix points system\n\nSigned-off-by: Patrick <cowinkkeydinkinc@gmail.com>", "committedDate": "2020-11-27T23:49:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwNzEwNA==", "url": "https://github.com/PGMDev/PGM/pull/725#discussion_r532007104", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (this.controllingTeam != null && scoreMatchModule != null) {\n          \n          \n            \n                  if (scoreMatchModule != null) {\n          \n      \n    \n    \n  \n\nIf you do not apply this logic when the controlling team is null, capturing won't give points since the current controlling team is null. In general points with a netrual state won't have this feature working as intended", "author": "Pablete1234", "createdAt": "2020-11-28T08:50:35Z", "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java", "diffHunk": "@@ -354,6 +354,17 @@ private void dominateAndFireEvents(@Nullable Competitor dominantTeam, Duration d\n       this.match.callEvent(\n           new ControllerChangeEvent(this.match, this, oldControllingTeam, this.controllingTeam));\n \n+      ScoreMatchModule scoreMatchModule = this.getMatch().getModule(ScoreMatchModule.class);\n+      // Gives a set number of owner points to a team when captured.\n+      if (this.controllingTeam != null && scoreMatchModule != null) {", "originalCommit": "a6e6f0522844821fc3ad3ec09e00d27b38b1d617", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1d1446207ed2fe7fe09ad04550b025e2cba54027", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java b/core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java\nindex cb674cd5..a0d34cbc 100644\n--- a/core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java\n+++ b/core/src/main/java/tc/oc/pgm/controlpoint/ControlPoint.java\n\n@@ -355,8 +355,8 @@ public class ControlPoint extends SimpleGoal<ControlPointDefinition>\n           new ControllerChangeEvent(this.match, this, oldControllingTeam, this.controllingTeam));\n \n       ScoreMatchModule scoreMatchModule = this.getMatch().getModule(ScoreMatchModule.class);\n-      // Gives a set number of owner points to a team when captured.\n-      if (this.controllingTeam != null && scoreMatchModule != null) {\n+      // Gives a set number of owner points to a team when captured, lost when an enemy captures\n+      if (scoreMatchModule != null) {\n         if (oldControllingTeam != null) {\n           scoreMatchModule.incrementScore(\n               oldControllingTeam, getDefinition().getPointsOwner() * -1);\n"}}, {"oid": "1d1446207ed2fe7fe09ad04550b025e2cba54027", "url": "https://github.com/PGMDev/PGM/commit/1d1446207ed2fe7fe09ad04550b025e2cba54027", "message": "Fix owner-points removal logic\n\nSigned-off-by: Patrick <cowinkkeydinkinc@gmail.com>", "committedDate": "2020-11-28T20:13:04Z", "type": "commit"}]}