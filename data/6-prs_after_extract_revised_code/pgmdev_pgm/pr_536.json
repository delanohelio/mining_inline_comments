{"pr_number": 536, "pr_title": "Fix a few text related issues", "pr_createdAt": "2020-06-14T08:20:30Z", "pr_url": "https://github.com/PGMDev/PGM/pull/536", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NTgzOA==", "url": "https://github.com/PGMDev/PGM/pull/536#discussion_r439845838", "bodyText": "We should be caching the Componet name. Instead, listen to the team rename event and change it.", "author": "Electroid", "createdAt": "2020-06-14T16:23:31Z", "path": "core/src/main/java/tc/oc/pgm/teams/Team.java", "diffHunk": "@@ -37,8 +37,6 @@\n   private TeamMatchModule tmm;\n   private JoinMatchModule jmm;\n   protected @Nullable String name = null;\n-  protected @Nullable Component componentName;", "originalCommit": "1ef9d118e2f18b2b064cfc6447da770ea28844eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1416dd88611a66872841345e0fe9d26762ee8aa2", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/teams/Team.java b/core/src/main/java/tc/oc/pgm/teams/Team.java\nindex c9382213..574c5b48 100644\n--- a/core/src/main/java/tc/oc/pgm/teams/Team.java\n+++ b/core/src/main/java/tc/oc/pgm/teams/Team.java\n\n@@ -37,6 +37,8 @@ public class Team extends SimpleParty implements Competitor, Feature<TeamFactory\n   private TeamMatchModule tmm;\n   private JoinMatchModule jmm;\n   protected @Nullable String name = null;\n+  protected @Nullable Component componentName;\n+  protected @Nullable Component chatPrefix;\n   protected Integer minPlayers, maxPlayers, maxOverfill;\n \n   // Recorded in the match document, Tourney plugin sets this\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1Mzk2Mg==", "url": "https://github.com/PGMDev/PGM/pull/536#discussion_r439853962", "bodyText": "I think we need to clean up this code. Maybe separate methods for each NameStyle?", "author": "Electroid", "createdAt": "2020-06-14T18:03:48Z", "path": "util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java", "diffHunk": "@@ -38,32 +38,49 @@ static Component of(@Nullable Player player, String defName, NameStyle style) {\n       return component.build();\n     }\n \n-    Component usernameComponent;\n+    // For name styles that don't allow vanished, make vanished appear offline\n+    if (!style.showVanish && isVanished(player)) {", "originalCommit": "1ef9d118e2f18b2b064cfc6447da770ea28844eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NDIzNw==", "url": "https://github.com/PGMDev/PGM/pull/536#discussion_r439854237", "bodyText": "I agree, with the previous refactor I tried to keep it similar to the old PersonalizedPlayer class, but imo would be better to separate into different methods as you suggested \ud83d\udc4d\nI\u2019ll take care of this in a bit.", "author": "applenick", "createdAt": "2020-06-14T18:07:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1Mzk2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0ca682c2f2cc629d2149daf25515e42f97173c48", "chunk": "diff --git a/util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java b/util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java\nindex 9dacb35b..81be38a1 100644\n--- a/util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java\n+++ b/util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java\n\n@@ -28,76 +28,149 @@ public interface PlayerComponent {\n   }\n \n   static Component of(@Nullable Player player, String defName, NameStyle style) {\n-    TextComponent.Builder component = TextComponent.builder();\n-\n-    // Offline player\n-    if (player == null || !player.isOnline()) {\n-      TextComponent name = TextComponent.of(defName);\n-      if (style != NameStyle.PLAIN) name = name.color(TextColor.DARK_AQUA);\n-      component.append(name);\n-      return component.build();\n+\n+    // Offline player or not visible\n+    if ((player == null || !player.isOnline())) {\n+      return formatOffline(defName, style == NameStyle.PLAIN);\n     }\n \n     // For name styles that don't allow vanished, make vanished appear offline\n     if (!style.showVanish && isVanished(player)) {\n-      TextComponent name = TextComponent.of(player.getName());\n-      if (style != NameStyle.PLAIN) name = name.color(TextColor.DARK_AQUA);\n-      component.append(name);\n-      return component.build();\n+      return formatOffline(player.getName(), style == NameStyle.PLAIN);\n     }\n \n-    String realName = player.getName();\n-    String displayName = player.getDisplayName();\n-    String prefix = displayName.replace(realName, \"\");\n+    switch (style) {\n+      case COLOR:\n+        return formatTeleport(formatColor(player), player.getName());\n+      case CONCISE:\n+        return formatConcise(player);\n+      case FANCY:\n+        return formatFancy(player);\n+      case PLAIN:\n+        return formatPlain(player);\n+      case TAB:\n+        return formatTab(player);\n+      case VERBOSE:\n+        return formatVerbose(player);\n+      default:\n+        return formatPlain(player);\n+    }\n+  }\n \n-    char colorChar = displayName.charAt((displayName.indexOf(realName) - 1));\n-    TextColor color =\n-        style != NameStyle.PLAIN\n-            ? TextFormatter.convert(ChatColor.getByChar(colorChar))\n-            : TextColor.WHITE;\n+  static Component of(UUID playerId, NameStyle style) {\n+    Player player = Bukkit.getPlayer(playerId);\n+    return player != null ? of(player, style) : UNKNOWN;\n+  }\n \n-    Component prefixComponent = TextComponent.of(prefix);\n-    Component usernameComponent = TextComponent.of(realName, color);\n+  static Component of(CommandSender sender, NameStyle style) {\n+    return sender instanceof Player\n+        ? of((Player) sender, style)\n+        : TranslatableComponent.of(\"misc.console\", TextColor.DARK_AQUA);\n+  }\n \n-    if (!style.showPrefix) {\n-      prefixComponent = TextComponent.empty();\n-    }\n+  // What an offline or vanished username renders as\n+  static Component formatOffline(String name, boolean plain) {\n+    TextComponent component = TextComponent.of(name);\n+    if (!plain) component = component.color(TextColor.DARK_AQUA);\n+    return component;\n+  }\n+\n+  // No color or formatting, simply the name\n+  static Component formatPlain(Player player) {\n+    return TextComponent.of(player.getName());\n+  }\n+\n+  // Color only\n+  static Component formatColor(Player player) {\n+    String displayName = player.getDisplayName();\n+    char colorChar = displayName.charAt((displayName.indexOf(player.getName()) - 1));\n+    TextColor color = TextFormatter.convert(ChatColor.getByChar(colorChar));\n+    return TextComponent.of(player.getName(), color);\n+  }\n+\n+  // Color, flair & teleport\n+  static Component formatFancy(Player player) {\n+    Component prefix = getPrefixComponent(player);\n+    Component colorName = formatColor(player);\n+    return formatTeleport(prefix.append(colorName), player.getName());\n+  }\n+\n+  // Color, flair, death status, and vanish\n+  static Component formatTab(Player player) {\n+    Component prefix = getPrefixComponent(player);\n+    Component colorName = formatColor(player);\n \n-    if (style.showDeath && isDead(player)) {\n-      usernameComponent = usernameComponent.color(TextColor.DARK_GRAY);\n+    if (isDead(player)) {\n+      colorName = colorName.color(TextColor.DARK_GRAY);\n     }\n \n-    if (style.showVanish && isVanished(player)) {\n-      usernameComponent = usernameComponent.decoration(TextDecoration.STRIKETHROUGH, true);\n+    if (isVanished(player)) {\n+      colorName = colorName.decoration(TextDecoration.STRIKETHROUGH, true);\n     }\n \n-    Component formattedUsername =\n-        TextComponent.builder().append(prefixComponent).append(usernameComponent).build();\n+    return prefix.append(colorName);\n+  }\n \n-    component.append(formattedUsername);\n+  // Color, flair, and vanish status\n+  static Component formatConcise(Player player) {\n+    Component prefix = getPrefixComponent(player);\n+    Component colorName = formatColor(player);\n \n-    if (style.teleport) {\n-      component.hoverEvent(\n-          HoverEvent.of(\n-              Action.SHOW_TEXT,\n-              TranslatableComponent.of(\"misc.teleportTo\", TextColor.GRAY).args(formattedUsername)));\n-      component.clickEvent(ClickEvent.runCommand(\"/tp \" + player.getName()));\n+    if (isVanished(player)) {\n+      colorName = colorName.decoration(TextDecoration.STRIKETHROUGH, true);\n     }\n \n-    return component.build();\n+    return prefix.append(colorName);\n   }\n \n-  static Component of(UUID playerId, NameStyle style) {\n-    Player player = Bukkit.getPlayer(playerId);\n-    return player != null ? of(player, style) : UNKNOWN;\n+  // Color, flair, vanished, and teleport\n+  static Component formatVerbose(Player player) {\n+    return formatTeleport(formatConcise(player), player.getName());\n   }\n \n-  static Component of(CommandSender sender, NameStyle style) {\n-    return sender instanceof Player\n-        ? of((Player) sender, style)\n-        : TranslatableComponent.of(\"misc.console\", TextColor.DARK_AQUA);\n+  /**\n+   * Get the player's prefix as a {@link Component}\n+   *\n+   * @param player The player\n+   * @return a component with a player's prefix\n+   */\n+  static Component getPrefixComponent(Player player) {\n+    String realName = player.getName();\n+    String displayName = player.getDisplayName();\n+    String prefix = displayName.substring(0, displayName.indexOf(realName) - 2);\n+\n+    TextComponent.Builder prefixComponent = TextComponent.builder();\n+    boolean isColor = false;\n+    TextColor color = null;\n+    for (int i = 0; i < prefix.length(); i++) {\n+      if (prefix.charAt(i) == ChatColor.COLOR_CHAR) {\n+        isColor = true;\n+        continue;\n+      }\n+\n+      if (isColor) {\n+        color = TextFormatter.convert(ChatColor.getByChar(prefix.charAt(i)));\n+        isColor = false;\n+      } else {\n+        prefixComponent.append(\n+            String.valueOf(prefix.charAt(i)), color != null ? color : TextColor.WHITE);\n+      }\n+    }\n+\n+    return prefixComponent.build();\n+  }\n+\n+  // Format component to have teleport click/hover\n+  static Component formatTeleport(Component username, String name) {\n+    return username\n+        .hoverEvent(\n+            HoverEvent.of(\n+                Action.SHOW_TEXT,\n+                TranslatableComponent.of(\"misc.teleportTo\", TextColor.GRAY, username)))\n+        .clickEvent(ClickEvent.runCommand(\"/tp \" + name));\n   }\n \n+  // Player state checks\n   static boolean isVanished(Player player) {\n     return player.hasMetadata(\"isVanished\");\n   }\n"}}, {"oid": "c8c46a2513789080b3c174b99651c4c56aa1eed5", "url": "https://github.com/PGMDev/PGM/commit/c8c46a2513789080b3c174b99651c4c56aa1eed5", "message": "Fix a few text related issues\nIncludes:\n* Vanished mapmakers are no longer exposed via various map info locations\n* Fixes issue related to names not rendering decorations (death message bug)\n* Resolve team chat prefix not using proper aliased name\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>", "committedDate": "2020-06-15T05:45:55Z", "type": "commit"}, {"oid": "1416dd88611a66872841345e0fe9d26762ee8aa2", "url": "https://github.com/PGMDev/PGM/commit/1416dd88611a66872841345e0fe9d26762ee8aa2", "message": "Add back caching of team name component & prefix\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>", "committedDate": "2020-06-15T05:45:56Z", "type": "commit"}, {"oid": "0ca682c2f2cc629d2149daf25515e42f97173c48", "url": "https://github.com/PGMDev/PGM/commit/0ca682c2f2cc629d2149daf25515e42f97173c48", "message": "Clean up NameStyle and PlayerComponent\n* Removed unused style attributes from NameStyle\n* Split up logic for PlayerComponent formatting\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>", "committedDate": "2020-06-15T05:45:56Z", "type": "commit"}, {"oid": "0ca682c2f2cc629d2149daf25515e42f97173c48", "url": "https://github.com/PGMDev/PGM/commit/0ca682c2f2cc629d2149daf25515e42f97173c48", "message": "Clean up NameStyle and PlayerComponent\n* Removed unused style attributes from NameStyle\n* Split up logic for PlayerComponent formatting\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>", "committedDate": "2020-06-15T05:45:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NzA0Ng==", "url": "https://github.com/PGMDev/PGM/pull/536#discussion_r440157046", "bodyText": "Make all of these functions return Component.Builder to avoid copying Components among the methods. In PlayerComponent.of you can build it before returning it.", "author": "Electroid", "createdAt": "2020-06-15T12:59:14Z", "path": "util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java", "diffHunk": "@@ -81,6 +68,109 @@ static Component of(CommandSender sender, NameStyle style) {\n         : TranslatableComponent.of(\"misc.console\", TextColor.DARK_AQUA);\n   }\n \n+  // What an offline or vanished username renders as\n+  static Component formatOffline(String name, boolean plain) {", "originalCommit": "0ca682c2f2cc629d2149daf25515e42f97173c48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM4NzEyMg==", "url": "https://github.com/PGMDev/PGM/pull/536#discussion_r440387122", "bodyText": "Ah better idea! I\u2019ll fix this up \ud83d\udc4d", "author": "applenick", "createdAt": "2020-06-15T19:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NzA0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ3NjM2NA==", "url": "https://github.com/PGMDev/PGM/pull/536#discussion_r440476364", "bodyText": "I believe you meant TextComponent.Builder, but it\u2019s all cleaned up now \ud83d\udc4d", "author": "applenick", "createdAt": "2020-06-15T22:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NzA0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0f27532ce48ae3d6f7a8c6c368eb57b41b4a00af", "chunk": "diff --git a/util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java b/util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java\nindex 81be38a1..7d55505b 100644\n--- a/util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java\n+++ b/util/src/main/java/tc/oc/pgm/util/text/types/PlayerComponent.java\n\n@@ -23,108 +23,116 @@ public interface PlayerComponent {\n   static Component UNKNOWN =\n       TranslatableComponent.of(\"misc.unknown\", TextColor.DARK_AQUA, TextDecoration.ITALIC);\n \n+  static Component of(UUID playerId, NameStyle style) {\n+    Player player = Bukkit.getPlayer(playerId);\n+    return player != null ? of(player, style) : UNKNOWN;\n+  }\n+\n+  static Component of(CommandSender sender, NameStyle style) {\n+    return sender instanceof Player\n+        ? of((Player) sender, style)\n+        : TranslatableComponent.of(\"misc.console\", TextColor.DARK_AQUA);\n+  }\n+\n   static Component of(Player player, NameStyle style) {\n     return of(player, \"\", style);\n   }\n \n   static Component of(@Nullable Player player, String defName, NameStyle style) {\n-\n     // Offline player or not visible\n     if ((player == null || !player.isOnline())) {\n-      return formatOffline(defName, style == NameStyle.PLAIN);\n+      return formatOffline(defName, style == NameStyle.PLAIN).build();\n     }\n \n     // For name styles that don't allow vanished, make vanished appear offline\n     if (!style.showVanish && isVanished(player)) {\n-      return formatOffline(player.getName(), style == NameStyle.PLAIN);\n+      return formatOffline(player.getName(), style == NameStyle.PLAIN).build();\n     }\n \n+    TextComponent.Builder builder = TextComponent.builder();\n+\n     switch (style) {\n       case COLOR:\n-        return formatTeleport(formatColor(player), player.getName());\n+        builder = formatTeleport(formatColor(player), player.getName());\n+        break;\n       case CONCISE:\n-        return formatConcise(player);\n+        builder = formatConcise(player);\n+        break;\n       case FANCY:\n-        return formatFancy(player);\n-      case PLAIN:\n-        return formatPlain(player);\n+        builder = formatFancy(player);\n+        break;\n       case TAB:\n-        return formatTab(player);\n+        builder = formatTab(player);\n+        break;\n       case VERBOSE:\n-        return formatVerbose(player);\n+        builder = formatVerbose(player);\n+        break;\n       default:\n-        return formatPlain(player);\n+        builder = formatPlain(player);\n+        break;\n     }\n-  }\n \n-  static Component of(UUID playerId, NameStyle style) {\n-    Player player = Bukkit.getPlayer(playerId);\n-    return player != null ? of(player, style) : UNKNOWN;\n-  }\n-\n-  static Component of(CommandSender sender, NameStyle style) {\n-    return sender instanceof Player\n-        ? of((Player) sender, style)\n-        : TranslatableComponent.of(\"misc.console\", TextColor.DARK_AQUA);\n+    return builder.build();\n   }\n \n   // What an offline or vanished username renders as\n-  static Component formatOffline(String name, boolean plain) {\n-    TextComponent component = TextComponent.of(name);\n-    if (!plain) component = component.color(TextColor.DARK_AQUA);\n+  static TextComponent.Builder formatOffline(String name, boolean plain) {\n+    TextComponent.Builder component = TextComponent.builder().append(name);\n+    if (!plain) component.color(TextColor.DARK_AQUA);\n     return component;\n   }\n \n   // No color or formatting, simply the name\n-  static Component formatPlain(Player player) {\n-    return TextComponent.of(player.getName());\n+  static TextComponent.Builder formatPlain(Player player) {\n+    return TextComponent.builder().append(player.getName());\n   }\n \n   // Color only\n-  static Component formatColor(Player player) {\n+  static TextComponent.Builder formatColor(Player player) {\n     String displayName = player.getDisplayName();\n     char colorChar = displayName.charAt((displayName.indexOf(player.getName()) - 1));\n     TextColor color = TextFormatter.convert(ChatColor.getByChar(colorChar));\n-    return TextComponent.of(player.getName(), color);\n+    return TextComponent.builder().append(player.getName(), color);\n   }\n \n   // Color, flair & teleport\n-  static Component formatFancy(Player player) {\n-    Component prefix = getPrefixComponent(player);\n-    Component colorName = formatColor(player);\n+  static TextComponent.Builder formatFancy(Player player) {\n+    TextComponent.Builder prefix = getPrefixComponent(player);\n+    TextComponent.Builder colorName = formatColor(player);\n+\n     return formatTeleport(prefix.append(colorName), player.getName());\n   }\n \n   // Color, flair, death status, and vanish\n-  static Component formatTab(Player player) {\n-    Component prefix = getPrefixComponent(player);\n-    Component colorName = formatColor(player);\n+  static TextComponent.Builder formatTab(Player player) {\n+    TextComponent.Builder prefix = getPrefixComponent(player);\n+    TextComponent.Builder colorName = formatColor(player);\n \n     if (isDead(player)) {\n-      colorName = colorName.color(TextColor.DARK_GRAY);\n+      colorName.color(TextColor.DARK_GRAY);\n     }\n \n     if (isVanished(player)) {\n-      colorName = colorName.decoration(TextDecoration.STRIKETHROUGH, true);\n+      colorName = formatVanished(colorName);\n     }\n \n     return prefix.append(colorName);\n   }\n \n   // Color, flair, and vanish status\n-  static Component formatConcise(Player player) {\n-    Component prefix = getPrefixComponent(player);\n-    Component colorName = formatColor(player);\n+  static TextComponent.Builder formatConcise(Player player) {\n+    TextComponent.Builder prefix = getPrefixComponent(player);\n+    TextComponent.Builder colorName = formatColor(player);\n \n     if (isVanished(player)) {\n-      colorName = colorName.decoration(TextDecoration.STRIKETHROUGH, true);\n+      colorName = formatVanished(colorName);\n     }\n \n     return prefix.append(colorName);\n   }\n \n   // Color, flair, vanished, and teleport\n-  static Component formatVerbose(Player player) {\n+  static TextComponent.Builder formatVerbose(Player player) {\n     return formatTeleport(formatConcise(player), player.getName());\n   }\n \n"}}, {"oid": "0f27532ce48ae3d6f7a8c6c368eb57b41b4a00af", "url": "https://github.com/PGMDev/PGM/commit/0f27532ce48ae3d6f7a8c6c368eb57b41b4a00af", "message": "Use component builders in PlayerComponent\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>", "committedDate": "2020-06-15T22:10:34Z", "type": "commit"}, {"oid": "7b2e5c2e03275859e01dcb1ebe4d2880f11e1d5a", "url": "https://github.com/PGMDev/PGM/commit/7b2e5c2e03275859e01dcb1ebe4d2880f11e1d5a", "message": "Remove lombok\n\nSigned-off-by: applenick <applenick@users.noreply.github.com>", "committedDate": "2020-06-15T23:10:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3MjM3Nw==", "url": "https://github.com/PGMDev/PGM/pull/536#discussion_r440272377", "bodyText": "Why remove this?", "author": "KingOfSquares", "createdAt": "2020-06-15T15:46:35Z", "path": "util/src/main/java/tc/oc/pgm/util/named/NameStyle.java", "diffHunk": "@@ -5,43 +5,27 @@\n  * only by context, and is independent of the viewer.\n  */\n public enum NameStyle {\n-  PLAIN(false, false, false, false, false, false, false, false, false), // No formatting\n-  COLOR(true, false, false, false, false, false, false, true, false), // Color only\n-  FANCY(\n-      true, true, true, true, true, false, false, true,\n-      false), // Color, flair, friend status, nick status, vanish status\n-  TAB(\n-      true, true, true, true, true, false, true, true,\n-      true), // Color, flair, friend status, nick status, death status, and vanish status\n-  VERBOSE(true, true, true, true, true, true, false, true, true), // Fancy plus nickname\n-  CONCISE(true, true, true, true, true, true, false, false, true); // Verbose, but removes teleport\n+  PLAIN(false, false, false, false, false), // No formatting\n+  COLOR(true, false, false, true, false), // Color and teleport\n+  FANCY(true, true, false, true, false), // Color, flair, and teleport\n+  TAB(true, true, true, false, true), // Color, flair, death status, and vanish\n+  VERBOSE(true, true, false, true, true), // Color, flair, teleport, and vanish\n+  CONCISE(true, true, false, false, true); // Color, flair, and vanish\n \n   public final boolean isColor;\n   public final boolean showPrefix;\n-  public final boolean showSelf; // Bold if self", "originalCommit": "0ca682c2f2cc629d2149daf25515e42f97173c48", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}