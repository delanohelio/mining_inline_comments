{"pr_number": 735, "pr_title": "Make length of death animation configurable", "pr_createdAt": "2020-12-11T19:15:12Z", "pr_url": "https://github.com/PGMDev/PGM/pull/735", "timeline": [{"oid": "e57cac11331dc67eac5ef03116d68b5176c08c9e", "url": "https://github.com/PGMDev/PGM/commit/e57cac11331dc67eac5ef03116d68b5176c08c9e", "message": "Make length of death animation configurable\n\nSigned-off-by: mrcookie <athertonmook@gmail.com>", "committedDate": "2020-12-11T19:04:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE4ODU3Ng==", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541188576", "bodyText": "gameplay.death-ticks", "author": "Electroid", "createdAt": "2020-12-11T19:20:43Z", "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "diffHunk": "@@ -164,6 +165,8 @@\n     this.verboseStats = parseBoolean(config.getString(\"ui.verbose-stats\", \"false\"));\n     this.griefScore =\n         parseInteger(config.getString(\"gameplay.grief-score\", \"-10\"), Range.atMost(0));\n+    this.deathAnimationLength =\n+        parseInteger(config.getString(\"gameplay.death-animation-length\", \"15\"));", "originalCommit": "e57cac11331dc67eac5ef03116d68b5176c08c9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE5MTY5OQ==", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541191699", "bodyText": "Oh, also make sure it is Range.atLeast(0). See the griefScore above for an example.", "author": "Electroid", "createdAt": "2020-12-11T19:24:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE4ODU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIyMDcwMQ==", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541220701", "bodyText": "This must be between 0 and under the minimum respawn time which currently in pgm is 20 ticks. If you set it to a higher number and the map has a low respawn time you'd start seeing some bad behaviour where a player may respawn before their death animation has ended.", "author": "Pablete1234", "createdAt": "2020-12-11T19:54:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE4ODU3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "eb4c610ca45cdb411414f6951abaaf9a7d1ca516", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/PGMConfig.java b/core/src/main/java/tc/oc/pgm/PGMConfig.java\nindex 2bff87e..7473521 100644\n--- a/core/src/main/java/tc/oc/pgm/PGMConfig.java\n+++ b/core/src/main/java/tc/oc/pgm/PGMConfig.java\n\n@@ -165,8 +165,8 @@ public final class PGMConfig implements Config {\n     this.verboseStats = parseBoolean(config.getString(\"ui.verbose-stats\", \"false\"));\n     this.griefScore =\n         parseInteger(config.getString(\"gameplay.grief-score\", \"-10\"), Range.atMost(0));\n-    this.deathAnimationLength =\n-        parseInteger(config.getString(\"gameplay.death-animation-length\", \"15\"));\n+    this.deathTicks =\n+        parseInteger(config.getString(\"gameplay.death-tick\", \"15\"), Range.atLeast(0));\n \n     this.minPlayers = parseInteger(config.getString(\"join.min-players\", \"1\"));\n     this.limitJoin = parseBoolean(config.getString(\"join.limit\", \"true\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE4ODg1OQ==", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541188859", "bodyText": "getDeathTicks", "author": "Electroid", "createdAt": "2020-12-11T19:21:00Z", "path": "core/src/main/java/tc/oc/pgm/api/Config.java", "diffHunk": "@@ -253,6 +253,13 @@\n    */\n   int getGriefScore();\n \n+  /**\n+   * Gets the length in ticks for how long the death animation is shown\n+   *\n+   * @return length of death animation\n+   */\n+  int getDeathAnimationLength();", "originalCommit": "e57cac11331dc67eac5ef03116d68b5176c08c9e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb4c610ca45cdb411414f6951abaaf9a7d1ca516", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/api/Config.java b/core/src/main/java/tc/oc/pgm/api/Config.java\nindex c3192dd..14599ef 100644\n--- a/core/src/main/java/tc/oc/pgm/api/Config.java\n+++ b/core/src/main/java/tc/oc/pgm/api/Config.java\n\n@@ -258,7 +258,7 @@ public interface Config {\n    *\n    * @return length of death animation\n    */\n-  int getDeathAnimationLength();\n+  int getDeathTicks();\n \n   /**\n    * Gets a group of players, used for prefixes and player sorting.\n"}}, {"oid": "eb4c610ca45cdb411414f6951abaaf9a7d1ca516", "url": "https://github.com/PGMDev/PGM/commit/eb4c610ca45cdb411414f6951abaaf9a7d1ca516", "message": "small changes\n\nSigned-off-by: mrcookie <athertonmook@gmail.com>", "committedDate": "2020-12-11T19:38:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIxODQ3OQ==", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541218479", "bodyText": "death-ticks, missing an s", "author": "Electroid", "createdAt": "2020-12-11T19:51:46Z", "path": "core/src/main/java/tc/oc/pgm/PGMConfig.java", "diffHunk": "@@ -164,6 +165,8 @@\n     this.verboseStats = parseBoolean(config.getString(\"ui.verbose-stats\", \"false\"));\n     this.griefScore =\n         parseInteger(config.getString(\"gameplay.grief-score\", \"-10\"), Range.atMost(0));\n+    this.deathTicks =\n+        parseInteger(config.getString(\"gameplay.death-tick\", \"15\"), Range.atLeast(0));", "originalCommit": "eb4c610ca45cdb411414f6951abaaf9a7d1ca516", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIyODI4MQ==", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541228281", "bodyText": "This must be between 0 and under the minimum respawn time which currently in pgm is 20 ticks. If you set it to a higher number and the map has a low respawn time you'd start seeing some bad behaviour where a player may respawn before their death animation has ended.", "author": "Pablete1234", "createdAt": "2020-12-11T20:02:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIxODQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c6a61b450bf0cce30a6b0044938d84a63598ad13", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/PGMConfig.java b/core/src/main/java/tc/oc/pgm/PGMConfig.java\nindex 7473521..a7a01b3 100644\n--- a/core/src/main/java/tc/oc/pgm/PGMConfig.java\n+++ b/core/src/main/java/tc/oc/pgm/PGMConfig.java\n\n@@ -166,7 +166,7 @@ public final class PGMConfig implements Config {\n     this.griefScore =\n         parseInteger(config.getString(\"gameplay.grief-score\", \"-10\"), Range.atMost(0));\n     this.deathTicks =\n-        parseInteger(config.getString(\"gameplay.death-tick\", \"15\"), Range.atLeast(0));\n+        parseInteger(config.getString(\"gameplay.death-ticks\", \"15\"), Range.closed(0, 20));\n \n     this.minPlayers = parseInteger(config.getString(\"join.min-players\", \"1\"));\n     this.limitJoin = parseBoolean(config.getString(\"join.limit\", \"true\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIwNzExNg==", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541207116", "bodyText": "see comment below", "author": "Pablete1234", "createdAt": "2020-12-11T19:40:00Z", "path": "core/src/main/java/tc/oc/pgm/spawns/states/Dead.java", "diffHunk": "@@ -32,6 +33,7 @@ public Dead(SpawnMatchModule smm, MatchPlayer player) {\n \n   public Dead(SpawnMatchModule smm, MatchPlayer player, long deathTick) {\n     super(smm, player);\n+    CORPSE_ROT_TICKS = PGM.get().getConfiguration().getDeathAnimationLength();", "originalCommit": "e57cac11331dc67eac5ef03116d68b5176c08c9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIyODU0Ng==", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541228546", "bodyText": "This is not a per-player configuration, you can have this as a static variable without having every Dead state object need to grab it", "author": "Pablete1234", "createdAt": "2020-12-11T20:03:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIwNzExNg=="}], "type": "inlineReview", "revised_code": {"commit": "c6a61b450bf0cce30a6b0044938d84a63598ad13", "chunk": "diff --git a/core/src/main/java/tc/oc/pgm/spawns/states/Dead.java b/core/src/main/java/tc/oc/pgm/spawns/states/Dead.java\nindex 7348390..96532c3 100644\n--- a/core/src/main/java/tc/oc/pgm/spawns/states/Dead.java\n+++ b/core/src/main/java/tc/oc/pgm/spawns/states/Dead.java\n\n@@ -33,7 +33,7 @@ public class Dead extends Spawning {\n \n   public Dead(SpawnMatchModule smm, MatchPlayer player, long deathTick) {\n     super(smm, player);\n-    CORPSE_ROT_TICKS = PGM.get().getConfiguration().getDeathAnimationLength();\n+    CORPSE_ROT_TICKS = PGM.get().getConfiguration().getDeathTicks();\n     this.deathTick = deathTick;\n   }\n \n"}}, {"oid": "c6a61b450bf0cce30a6b0044938d84a63598ad13", "url": "https://github.com/PGMDev/PGM/commit/c6a61b450bf0cce30a6b0044938d84a63598ad13", "message": "Fixed typo and fixed range of allowed values\n\nSigned-off-by: mrcookie <athertonmook@gmail.com>", "committedDate": "2020-12-11T22:16:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NjUzOA==", "url": "https://github.com/PGMDev/PGM/pull/735#discussion_r541386538", "bodyText": "This is still copying the value every time a player dies, which is unneeded", "author": "Pablete1234", "createdAt": "2020-12-11T23:01:29Z", "path": "core/src/main/java/tc/oc/pgm/spawns/states/Dead.java", "diffHunk": "@@ -33,7 +33,7 @@ public Dead(SpawnMatchModule smm, MatchPlayer player) {\n \n   public Dead(SpawnMatchModule smm, MatchPlayer player, long deathTick) {\n     super(smm, player);\n-    CORPSE_ROT_TICKS = PGM.get().getConfiguration().getDeathAnimationLength();\n+    CORPSE_ROT_TICKS = PGM.get().getConfiguration().getDeathTicks();", "originalCommit": "c6a61b450bf0cce30a6b0044938d84a63598ad13", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}