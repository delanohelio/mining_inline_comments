{"pr_number": 862, "pr_title": "remove all deprecated methods and usage", "pr_createdAt": "2020-03-06T17:37:18Z", "pr_url": "https://github.com/minio/minio-java/pull/862", "timeline": [{"oid": "b06278d1a4a0a656af8066c72f8a432cabf4ef6a", "url": "https://github.com/minio/minio-java/commit/b06278d1a4a0a656af8066c72f8a432cabf4ef6a", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-06T17:49:49Z", "type": "forcePushed"}, {"oid": "3949669591753b739e09633294fe3a18442aa0a8", "url": "https://github.com/minio/minio-java/commit/3949669591753b739e09633294fe3a18442aa0a8", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-07T02:23:14Z", "type": "forcePushed"}, {"oid": "fcad3da6c944b3604655008d574da48e8df15c10", "url": "https://github.com/minio/minio-java/commit/fcad3da6c944b3604655008d574da48e8df15c10", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-08T13:11:16Z", "type": "forcePushed"}, {"oid": "e38d2e3b6eb1a8aaeda486fed7f225faf844156e", "url": "https://github.com/minio/minio-java/commit/e38d2e3b6eb1a8aaeda486fed7f225faf844156e", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-09T05:26:53Z", "type": "forcePushed"}, {"oid": "24713d86c57b2640a29e3a85e1bd320c14c3f6de", "url": "https://github.com/minio/minio-java/commit/24713d86c57b2640a29e3a85e1bd320c14c3f6de", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-13T03:58:29Z", "type": "forcePushed"}, {"oid": "81fb99ea60347524551082d23f62494811085141", "url": "https://github.com/minio/minio-java/commit/81fb99ea60347524551082d23f62494811085141", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-14T08:49:11Z", "type": "forcePushed"}, {"oid": "427c712ac4271e081fc229c284b9a63e3fcaea68", "url": "https://github.com/minio/minio-java/commit/427c712ac4271e081fc229c284b9a63e3fcaea68", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-14T10:44:26Z", "type": "forcePushed"}, {"oid": "652d934c93a60a53211e993fed3a528371a34b61", "url": "https://github.com/minio/minio-java/commit/652d934c93a60a53211e993fed3a528371a34b61", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-14T10:50:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTk1MQ==", "url": "https://github.com/minio/minio-java/pull/862#discussion_r392591951", "bodyText": "we should keep the comment about exceptions being thrown to be consistent", "author": "kannappanr", "createdAt": "2020-03-14T14:21:09Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -4254,925 +3951,39 @@ public void removeBucket(String bucketName)\n   }\n \n   /**\n-   * Uploads given file as object in given bucket.\n-   * <p>\n-   * If the object is larger than 5MB, the client will automatically use a multipart session.\n-   * </p>\n-   * <p>\n-   * If the session fails, the user may attempt to re-upload the object by attempting to create\n-   * the exact same object again.\n-   * </p>\n-   * <p>\n-   * If the multipart session fails, we abort all the uploaded content.\n-   * </p>\n-   *\n-   * @param bucketName  Bucket name.\n-   * @param objectName  Object name to create in the bucket.\n-   * @param fileName    File name to upload.\n-   *\n-   * @throws InvalidBucketNameException  upon invalid bucket name is given\n-   * @throws NoSuchAlgorithmException\n-   *           upon requested algorithm was not found during signature calculation\n-   * @throws IOException                 upon connection error\n-   * @throws InvalidKeyException\n-   *           upon an invalid access key or secret key\n-   * @throws XmlPullParserException      upon parsing response xml\n-   * @throws ErrorResponseException      upon unsuccessful execution\n-   * @throws InternalException           upon internal library error\n-   * @throws IllegalArgumentException    upon invalid value is passed to a method.\n-   * @throws InsufficientDataException   upon getting EOFException while reading given\n-   * @throws InvalidResponseException    upon a non-xml response from server\n+   * Executes put object and returns ETag of the object.\n    *\n-   * @deprecated As of release 7.0\n+   * @param bucketName\n+   *          Bucket name.\n+   * @param objectName\n+   *          Object name in the bucket.\n+   * @param length\n+   *          Length of object data.\n+   * @param data\n+   *          Object data.\n+   * @param uploadId\n+   *          Upload ID of multipart put object.\n+   * @param partNumber\n+   *          Part number of multipart put object.\n    */", "originalCommit": "652d934c93a60a53211e993fed3a528371a34b61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NTUzNg==", "url": "https://github.com/minio/minio-java/pull/862#discussion_r392595536", "bodyText": "Its odd to have javadoc for private methods. I would suggest to remove such unnecessary docs.", "author": "balamurugana", "createdAt": "2020-03-14T15:15:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5Njc0Nw==", "url": "https://github.com/minio/minio-java/pull/862#discussion_r392596747", "bodyText": "ok. got it.", "author": "kannappanr", "createdAt": "2020-03-14T15:32:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTk1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "25c6e00277b65f1b7262860b683c3f5d01559f03", "chunk": "diff --git a/api/src/main/java/io/minio/MinioClient.java b/api/src/main/java/io/minio/MinioClient.java\nindex f3c13d0d..99f6aaf3 100755\n--- a/api/src/main/java/io/minio/MinioClient.java\n+++ b/api/src/main/java/io/minio/MinioClient.java\n\n@@ -3918,62 +4084,57 @@ public class MinioClient {\n \n   /**\n    * Removes a bucket.\n-   * <p>\n-   * NOTE: -\n-   * All objects (including all object versions and delete markers) in the bucket\n-   * must be deleted prior, this API will not recursively delete objects\n-   * </p>\n    *\n-   * </p><b>Example:</b><br>\n+   * <p>NOTE: - All objects (including all object versions and delete markers) in the bucket must be\n+   * deleted prior, this API will not recursively delete objects <b>Example:</b><br>\n+   *\n    * <pre>{@code minioClient.removeBucket(\"my-bucketname\");\n    * System.out.println(\"my-bucketname is removed successfully\"); }</pre>\n    *\n    * @param bucketName Bucket name.\n-   *\n-   * @throws InvalidBucketNameException  upon invalid bucket name is given\n-   * @throws NoSuchAlgorithmException\n-   *           upon requested algorithm was not found during signature calculation\n-   * @throws IOException                 upon connection error\n-   * @throws InvalidKeyException\n-   *           upon an invalid access key or secret key\n-   * @throws XmlPullParserException      upon parsing response xml\n-   * @throws ErrorResponseException      upon unsuccessful execution\n-   * @throws InternalException           upon internal library error\n-   * @throws IllegalArgumentException    upon invalid value is passed to a method.\n-   * @throws InsufficientDataException   upon getting EOFException while reading given\n-   * @throws InvalidResponseException    upon a non-xml response from server\n+   * @throws InvalidBucketNameException upon invalid bucket name is given\n+   * @throws NoSuchAlgorithmException upon requested algorithm was not found during signature\n+   *     calculation\n+   * @throws IOException upon connection error\n+   * @throws InvalidKeyException upon an invalid access key or secret key\n+   * @throws XmlPullParserException upon parsing response xml\n+   * @throws ErrorResponseException upon unsuccessful execution\n+   * @throws InternalException upon internal library error\n+   * @throws IllegalArgumentException upon invalid value is passed to a method.\n+   * @throws InsufficientDataException upon getting EOFException while reading given\n+   * @throws InvalidResponseException upon a non-xml response from server\n    */\n   public void removeBucket(String bucketName)\n-    throws InvalidBucketNameException, NoSuchAlgorithmException, InsufficientDataException, IOException,\n-           InvalidKeyException, XmlPullParserException, ErrorResponseException,\n-           InternalException, InvalidResponseException {\n+      throws InvalidBucketNameException, NoSuchAlgorithmException, InsufficientDataException,\n+          IOException, InvalidKeyException, XmlPullParserException, ErrorResponseException,\n+          InternalException, InvalidResponseException {\n     executeDelete(bucketName, null, null);\n   }\n \n   /**\n    * Executes put object and returns ETag of the object.\n    *\n-   * @param bucketName\n-   *          Bucket name.\n-   * @param objectName\n-   *          Object name in the bucket.\n-   * @param length\n-   *          Length of object data.\n-   * @param data\n-   *          Object data.\n-   * @param uploadId\n-   *          Upload ID of multipart put object.\n-   * @param partNumber\n-   *          Part number of multipart put object.\n+   * @param bucketName Bucket name.\n+   * @param objectName Object name in the bucket.\n+   * @param length Length of object data.\n+   * @param data Object data.\n+   * @param uploadId Upload ID of multipart put object.\n+   * @param partNumber Part number of multipart put object.\n    */\n-  private String putObject(String bucketName, String objectName, Object data, int length,\n-                           Map<String, String> headerMap, String uploadId, int partNumber)\n-    throws InvalidBucketNameException, NoSuchAlgorithmException, InsufficientDataException, IOException,\n-           InvalidKeyException, XmlPullParserException, ErrorResponseException,\n-           InternalException, InvalidResponseException {\n+  private String putObject(\n+      String bucketName,\n+      String objectName,\n+      Object data,\n+      int length,\n+      Map<String, String> headerMap,\n+      String uploadId,\n+      int partNumber)\n+      throws InvalidBucketNameException, NoSuchAlgorithmException, InsufficientDataException,\n+          IOException, InvalidKeyException, XmlPullParserException, ErrorResponseException,\n+          InternalException, InvalidResponseException {\n     HttpResponse response = null;\n \n-    Map<String,String> queryParamMap = null;\n+    Map<String, String> queryParamMap = null;\n     if (partNumber > 0 && uploadId != null && !\"\".equals(uploadId)) {\n       queryParamMap = new HashMap<>();\n       queryParamMap.put(\"partNumber\", Integer.toString(partNumber));\n"}}, {"oid": "25c6e00277b65f1b7262860b683c3f5d01559f03", "url": "https://github.com/minio/minio-java/commit/25c6e00277b65f1b7262860b683c3f5d01559f03", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-15T09:19:16Z", "type": "forcePushed"}, {"oid": "f1d2fd00bad0ca432c5b51c9f0bf17172b723913", "url": "https://github.com/minio/minio-java/commit/f1d2fd00bad0ca432c5b51c9f0bf17172b723913", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-15T10:52:58Z", "type": "commit"}, {"oid": "f1d2fd00bad0ca432c5b51c9f0bf17172b723913", "url": "https://github.com/minio/minio-java/commit/f1d2fd00bad0ca432c5b51c9f0bf17172b723913", "message": "remove all deprecated methods and usage", "committedDate": "2020-03-15T10:52:58Z", "type": "forcePushed"}]}