{"pr_number": 953, "pr_title": "Add arg builder to legal hold APIs", "pr_createdAt": "2020-05-25T13:34:44Z", "pr_url": "https://github.com/minio/minio-java/pull/953", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxNDc4OQ==", "url": "https://github.com/minio/minio-java/pull/953#discussion_r430214789", "bodyText": "Was the condition && !versionId.isEmpty() removed intentionally? Seems like a useful validation.\nMight be a good idea to add it as a validation (must be non-empty if non-null) in the args builder.", "author": "anjalshireesh", "createdAt": "2020-05-26T07:40:26Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3927,15 +3927,52 @@ public void enableObjectLegalHold(String bucketName, String objectName, String v\n       throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n           InternalException, InvalidBucketNameException, InvalidKeyException,\n           InvalidResponseException, IOException, NoSuchAlgorithmException, XmlParserException {\n+    this.enableObjectLegalHold(\n+        EnableObjectLegalHoldArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .versionId(versionId)\n+            .build());\n+  }\n+\n+  /**\n+   * Enables legal hold on an object.\n+   *\n+   * <pre>Example:{@code\n+   * minioClient.enableObjectLegalHold(\n+   *    EnableObjectLegalHoldArgs.builder()\n+   *        .bucket(\"my-bucketname\")\n+   *        .object(\"my-objectname\")\n+   *        .versionId(\"object-versionId\")\n+   *        .build());\n+   * }</pre>\n+   *\n+   * @param args {@link EnableObjectLegalHoldArgs} object.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public void enableObjectLegalHold(EnableObjectLegalHoldArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidKeyException,\n+          InvalidResponseException, IOException, NoSuchAlgorithmException, XmlParserException {\n     Map<String, String> queryParamMap = new HashMap<>();\n     queryParamMap.put(\"legal-hold\", \"\");\n \n-    if (versionId != null && !versionId.isEmpty()) {\n-      queryParamMap.put(\"versionId\", versionId);\n+    if (args.versionId() != null) {", "originalCommit": "82a4892cde13e29e1af708a6e6eeb1f267f750b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzMTUwMQ==", "url": "https://github.com/minio/minio-java/pull/953#discussion_r430431501", "bodyText": "As AWS works with empty string as versionId, the check is OK", "author": "balamurugana", "createdAt": "2020-05-26T13:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxNDc4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "78e922f9f94539e347ff4ecb4fa28329932e6245", "chunk": "diff --git a/api/src/main/java/io/minio/MinioClient.java b/api/src/main/java/io/minio/MinioClient.java\nindex 718f48c7..9dcc9fdd 100755\n--- a/api/src/main/java/io/minio/MinioClient.java\n+++ b/api/src/main/java/io/minio/MinioClient.java\n\n@@ -3923,11 +4005,12 @@ public class MinioClient {\n    * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n    * @throws XmlParserException thrown to indicate XML parsing error.\n    */\n+  @Deprecated\n   public void enableObjectLegalHold(String bucketName, String objectName, String versionId)\n       throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n           InternalException, InvalidBucketNameException, InvalidKeyException,\n           InvalidResponseException, IOException, NoSuchAlgorithmException, XmlParserException {\n-    this.enableObjectLegalHold(\n+    enableObjectLegalHold(\n         EnableObjectLegalHoldArgs.builder()\n             .bucket(bucketName)\n             .object(objectName)\n"}}, {"oid": "78e922f9f94539e347ff4ecb4fa28329932e6245", "url": "https://github.com/minio/minio-java/commit/78e922f9f94539e347ff4ecb4fa28329932e6245", "message": "add arg builder to legal hold APIs", "committedDate": "2020-05-28T15:42:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk2Mjk4Nw==", "url": "https://github.com/minio/minio-java/pull/953#discussion_r431962987", "bodyText": "It supposes to be disabled or not?", "author": "balamurugana", "createdAt": "2020-05-28T16:20:46Z", "path": "examples/DisableObjectLegalHold.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import io.minio.DisableObjectLegalHoldArgs;\n+import io.minio.IsObjectLegalHoldEnabledArgs;\n+import io.minio.MinioClient;\n+import io.minio.errors.MinioException;\n+import java.io.IOException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class DisableObjectLegalHold {\n+  /** MinioClient.disableObjectLegalHold() example. */\n+  public static void main(String[] args)\n+      throws IOException, NoSuchAlgorithmException, InvalidKeyException, IllegalArgumentException {\n+    try {\n+\n+      /* play.min.io for test and development. */\n+      MinioClient minioClient =\n+          new MinioClient(\n+              \"https://play.min.io\",\n+              \"Q3AM3UQ867SPQQA43P2F\",\n+              \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\");\n+\n+      // Disable object legal hold.\n+      minioClient.disableObjectLegalHold(\n+          DisableObjectLegalHoldArgs.builder()\n+              .bucket(\"my-bucketname\")\n+              .object(\"my-objectname\")\n+              .build());\n+\n+      // Check if the object legal hold is enabled or not.", "originalCommit": "78e922f9f94539e347ff4ecb4fa28329932e6245", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7745bfa773312237d6343039c6a67777449f3b01", "chunk": "diff --git a/examples/DisableObjectLegalHold.java b/examples/DisableObjectLegalHold.java\nindex 9da813bc..fb0013f1 100644\n--- a/examples/DisableObjectLegalHold.java\n+++ b/examples/DisableObjectLegalHold.java\n\n@@ -41,15 +41,18 @@ public class DisableObjectLegalHold {\n               .object(\"my-objectname\")\n               .build());\n \n-      // Check if the object legal hold is enabled or not.\n-      System.out.println(\n-          \" Is object legal hold is enabled \"\n-              + minioClient.isObjectLegalHoldEnabled(\n-                  IsObjectLegalHoldEnabledArgs.builder()\n-                      .bucket(\"my-bucketname\")\n-                      .object(\"my-objectname\")\n-                      .versionId(\"object-versionId\")\n-                      .build()));\n+      boolean status =\n+          minioClient.isObjectLegalHoldEnabled(\n+              IsObjectLegalHoldEnabledArgs.builder()\n+                  .bucket(\"my-bucketname\")\n+                  .object(\"my-objectname\")\n+                  .build());\n+\n+      if (status) {\n+        System.out.println(\"Legal hold is on\");\n+      } else {\n+        System.out.println(\"Legal hold is off\");\n+      }\n \n     } catch (MinioException e) {\n       System.out.println(\"Error occurred: \" + e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk2NTIwMg==", "url": "https://github.com/minio/minio-java/pull/953#discussion_r431965202", "bodyText": "We supposes to error out if its not disabled?", "author": "balamurugana", "createdAt": "2020-05-28T16:24:03Z", "path": "examples/DisableObjectLegalHold.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import io.minio.DisableObjectLegalHoldArgs;\n+import io.minio.IsObjectLegalHoldEnabledArgs;\n+import io.minio.MinioClient;\n+import io.minio.errors.MinioException;\n+import java.io.IOException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class DisableObjectLegalHold {\n+  /** MinioClient.disableObjectLegalHold() example. */\n+  public static void main(String[] args)\n+      throws IOException, NoSuchAlgorithmException, InvalidKeyException, IllegalArgumentException {\n+    try {\n+\n+      /* play.min.io for test and development. */\n+      MinioClient minioClient =\n+          new MinioClient(\n+              \"https://play.min.io\",\n+              \"Q3AM3UQ867SPQQA43P2F\",\n+              \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\");\n+\n+      // Disable object legal hold.\n+      minioClient.disableObjectLegalHold(\n+          DisableObjectLegalHoldArgs.builder()\n+              .bucket(\"my-bucketname\")\n+              .object(\"my-objectname\")\n+              .build());\n+\n+      // Check if the object legal hold is enabled or not.\n+      System.out.println(\n+          \" Is object legal hold is enabled \"\n+              + minioClient.isObjectLegalHoldEnabled(", "originalCommit": "78e922f9f94539e347ff4ecb4fa28329932e6245", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7745bfa773312237d6343039c6a67777449f3b01", "chunk": "diff --git a/examples/DisableObjectLegalHold.java b/examples/DisableObjectLegalHold.java\nindex 9da813bc..fb0013f1 100644\n--- a/examples/DisableObjectLegalHold.java\n+++ b/examples/DisableObjectLegalHold.java\n\n@@ -41,15 +41,18 @@ public class DisableObjectLegalHold {\n               .object(\"my-objectname\")\n               .build());\n \n-      // Check if the object legal hold is enabled or not.\n-      System.out.println(\n-          \" Is object legal hold is enabled \"\n-              + minioClient.isObjectLegalHoldEnabled(\n-                  IsObjectLegalHoldEnabledArgs.builder()\n-                      .bucket(\"my-bucketname\")\n-                      .object(\"my-objectname\")\n-                      .versionId(\"object-versionId\")\n-                      .build()));\n+      boolean status =\n+          minioClient.isObjectLegalHoldEnabled(\n+              IsObjectLegalHoldEnabledArgs.builder()\n+                  .bucket(\"my-bucketname\")\n+                  .object(\"my-objectname\")\n+                  .build());\n+\n+      if (status) {\n+        System.out.println(\"Legal hold is on\");\n+      } else {\n+        System.out.println(\"Legal hold is off\");\n+      }\n \n     } catch (MinioException e) {\n       System.out.println(\"Error occurred: \" + e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk2NTg5Mg==", "url": "https://github.com/minio/minio-java/pull/953#discussion_r431965892", "bodyText": "same as comments in examples/DisableObjectLegalHold.java", "author": "balamurugana", "createdAt": "2020-05-28T16:25:06Z", "path": "examples/EnableObjectLegalHold.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import io.minio.EnableObjectLegalHoldArgs;\n+import io.minio.IsObjectLegalHoldEnabledArgs;\n+import io.minio.MinioClient;\n+import io.minio.errors.MinioException;\n+import java.io.IOException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class EnableObjectLegalHold {\n+  /** MinioClient.enableObjectLegalHold() example. */\n+  public static void main(String[] args)\n+      throws IOException, NoSuchAlgorithmException, InvalidKeyException, IllegalArgumentException {\n+    try {\n+\n+      /* play.min.io for test and development. */\n+      MinioClient minioClient =\n+          new MinioClient(\n+              \"https://play.min.io\",\n+              \"Q3AM3UQ867SPQQA43P2F\",\n+              \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\");\n+\n+      // Enable object legal hold.\n+      minioClient.enableObjectLegalHold(\n+          EnableObjectLegalHoldArgs.builder()\n+              .bucket(\"my-bucketname\")\n+              .object(\"my-objectname\")\n+              .versionId(\"object-versionId\")\n+              .build());\n+\n+      // Check if the object legal hold is enabled or not.", "originalCommit": "78e922f9f94539e347ff4ecb4fa28329932e6245", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7745bfa773312237d6343039c6a67777449f3b01", "chunk": "diff --git a/examples/EnableObjectLegalHold.java b/examples/EnableObjectLegalHold.java\nindex 9fcf5a97..6cbdb314 100644\n--- a/examples/EnableObjectLegalHold.java\n+++ b/examples/EnableObjectLegalHold.java\n\n@@ -42,15 +42,18 @@ public class EnableObjectLegalHold {\n               .versionId(\"object-versionId\")\n               .build());\n \n-      // Check if the object legal hold is enabled or not.\n-      System.out.println(\n-          \" Is object legal hold is enabled \"\n-              + minioClient.isObjectLegalHoldEnabled(\n-                  IsObjectLegalHoldEnabledArgs.builder()\n-                      .bucket(\"my-bucketname\")\n-                      .object(\"my-objectname\")\n-                      .versionId(\"object-versionId\")\n-                      .build()));\n+      boolean status =\n+          minioClient.isObjectLegalHoldEnabled(\n+              IsObjectLegalHoldEnabledArgs.builder()\n+                  .bucket(\"my-bucketname\")\n+                  .object(\"my-objectname\")\n+                  .build());\n+\n+      if (status) {\n+        System.out.println(\"Legal hold is on\");\n+      } else {\n+        System.out.println(\"Legal hold is off\");\n+      }\n \n     } catch (MinioException e) {\n       System.out.println(\"Error occurred: \" + e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk2NzA0MA==", "url": "https://github.com/minio/minio-java/pull/953#discussion_r431967040", "bodyText": "You would need to use handleException() in all modifed tests.", "author": "balamurugana", "createdAt": "2020-05-28T16:26:54Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -3588,15 +3590,15 @@ public static void enableObjectLegalHold_test() throws Exception {\n           client.putObject(bucketName, objectName, is, new PutObjectOptions(1 * KB, -1));\n         }\n \n-        client.enableObjectLegalHold(bucketName, objectName, null);\n-        if (!client.isObjectLegalHoldEnabled(bucketName, objectName, null)) {\n+        client.enableObjectLegalHold(\n+            EnableObjectLegalHoldArgs.builder().bucket(bucketName).object(objectName).build());\n+        if (!client.isObjectLegalHoldEnabled(\n+            IsObjectLegalHoldEnabledArgs.builder().bucket(bucketName).object(objectName).build())) {\n           throw new Exception(\"[FAILED] isObjectLegalHoldEnabled(): expected: true, got: false\");\n         }\n-        client.disableObjectLegalHold(bucketName, objectName, null);\n-        mintSuccessLog(\n-            \"enableObjectLegalHold(String bucketName, String objectName, String versionId)\",\n-            null,\n-            startTime);\n+        client.disableObjectLegalHold(\n+            DisableObjectLegalHoldArgs.builder().bucket(bucketName).object(objectName).build());\n+        mintSuccessLog(\"enableObjectLegalHold(EnableObjectLegalHoldArgs args)\", null, startTime);\n       } finally {\n         client.removeObject(\n             RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());", "originalCommit": "78e922f9f94539e347ff4ecb4fa28329932e6245", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7745bfa773312237d6343039c6a67777449f3b01", "chunk": "diff --git a/functional/FunctionalTest.java b/functional/FunctionalTest.java\nindex 0ce16690..e325e4f5 100644\n--- a/functional/FunctionalTest.java\n+++ b/functional/FunctionalTest.java\n\n@@ -3598,38 +3595,22 @@ public class FunctionalTest {\n         }\n         client.disableObjectLegalHold(\n             DisableObjectLegalHoldArgs.builder().bucket(bucketName).object(objectName).build());\n-        mintSuccessLog(\"enableObjectLegalHold(EnableObjectLegalHoldArgs args)\", null, startTime);\n+        mintSuccessLog(methodName, null, startTime);\n       } finally {\n         client.removeObject(\n             RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n         client.removeBucket(RemoveBucketArgs.builder().bucket(bucketName).build());\n       }\n     } catch (Exception e) {\n-      ErrorResponse errorResponse = null;\n-      if (e instanceof ErrorResponseException) {\n-        ErrorResponseException exp = (ErrorResponseException) e;\n-        errorResponse = exp.errorResponse();\n-      }\n-\n-      // Ignore NotImplemented error\n-      if (errorResponse != null && errorResponse.errorCode() == ErrorCode.NOT_IMPLEMENTED) {\n-        mintIgnoredLog(\"enableObjectLegalHold(EnableObjectLegalHoldArgs args)\", null, startTime);\n-      } else {\n-        mintFailedLog(\n-            \"enableObjectLegalHold(EnableObjectLegalHoldArgs args)\",\n-            null,\n-            startTime,\n-            null,\n-            e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-        throw e;\n-      }\n+      handleException(methodName, null, startTime, e);\n     }\n   }\n \n   /** Test: disableObjectLegalHold(DisableObjectLegalHoldArgs args) */\n   public static void disableObjectLegalHold_test() throws Exception {\n+    String methodName = \"disableObjectLegalHold(DisableObjectLegalHoldArgs args)\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: disableObjectLegalHold(DisableObjectLegalHoldArgs args)\");\n+      System.out.println(\"Test: \" + methodName);\n     }\n     long startTime = System.currentTimeMillis();\n     String bucketName = getRandomName();\n"}}, {"oid": "7745bfa773312237d6343039c6a67777449f3b01", "url": "https://github.com/minio/minio-java/commit/7745bfa773312237d6343039c6a67777449f3b01", "message": "Address bala's comment", "committedDate": "2020-05-28T19:30:38Z", "type": "forcePushed"}, {"oid": "305c1f331515a5c0c35aaf7fb292766c5211b0b2", "url": "https://github.com/minio/minio-java/commit/305c1f331515a5c0c35aaf7fb292766c5211b0b2", "message": "Address bala's comment", "committedDate": "2020-05-29T12:22:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3NDU2MQ==", "url": "https://github.com/minio/minio-java/pull/953#discussion_r432474561", "bodyText": "It'll be good to add the deprecation javadoc comment also along with a link to the new method to be used", "author": "anjalshireesh", "createdAt": "2020-05-29T13:15:38Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -4211,18 +4289,66 @@ public void disableObjectLegalHold(String bucketName, String objectName, String\n    * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n    * @throws XmlParserException thrown to indicate XML parsing error.\n    */\n+  @Deprecated", "originalCommit": "305c1f331515a5c0c35aaf7fb292766c5211b0b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ee54f4b5e33eb946b69c00e8f5a6c3af7ed69a8", "chunk": "diff --git a/api/src/main/java/io/minio/MinioClient.java b/api/src/main/java/io/minio/MinioClient.java\nindex 598fa760..6329756b 100755\n--- a/api/src/main/java/io/minio/MinioClient.java\n+++ b/api/src/main/java/io/minio/MinioClient.java\n\n@@ -4288,6 +4365,7 @@ public class MinioClient {\n    * @throws IOException thrown to indicate I/O error on S3 operation.\n    * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n    * @throws XmlParserException thrown to indicate XML parsing error.\n+   * @deprecated use {@link #isObjectLegalHoldEnabled(IsObjectLegalHoldEnabledArgs)}\n    */\n   @Deprecated\n   public boolean isObjectLegalHoldEnabled(String bucketName, String objectName, String versionId)\n"}}, {"oid": "441f55db607a2d8ae3436a266e6e2759d012f1d8", "url": "https://github.com/minio/minio-java/commit/441f55db607a2d8ae3436a266e6e2759d012f1d8", "message": "add arg builder to legal hold APIs", "committedDate": "2020-05-30T20:41:59Z", "type": "commit"}, {"oid": "fe692c75eed9929cf39c0d62bf2c3ac13b66aca5", "url": "https://github.com/minio/minio-java/commit/fe692c75eed9929cf39c0d62bf2c3ac13b66aca5", "message": "Address bala's comment", "committedDate": "2020-05-30T20:41:59Z", "type": "commit"}, {"oid": "7ee54f4b5e33eb946b69c00e8f5a6c3af7ed69a8", "url": "https://github.com/minio/minio-java/commit/7ee54f4b5e33eb946b69c00e8f5a6c3af7ed69a8", "message": "add comment for deprecation", "committedDate": "2020-05-30T20:41:59Z", "type": "commit"}, {"oid": "45ab0950d938a2325062fd2c04fe852651255c37", "url": "https://github.com/minio/minio-java/commit/45ab0950d938a2325062fd2c04fe852651255c37", "message": "Add example for isObjectLegalHoldEnabled", "committedDate": "2020-05-30T20:43:58Z", "type": "commit"}, {"oid": "45ab0950d938a2325062fd2c04fe852651255c37", "url": "https://github.com/minio/minio-java/commit/45ab0950d938a2325062fd2c04fe852651255c37", "message": "Add example for isObjectLegalHoldEnabled", "committedDate": "2020-05-30T20:43:58Z", "type": "forcePushed"}]}