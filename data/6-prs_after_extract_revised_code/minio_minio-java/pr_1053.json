{"pr_number": 1053, "pr_title": "add {set,get}BucketVersioning APIs", "pr_createdAt": "2020-09-07T11:44:27Z", "pr_url": "https://github.com/minio/minio-java/pull/1053", "timeline": [{"oid": "468e9d6d9634801e24a131fa6ef17e6ebbcafb2c", "url": "https://github.com/minio/minio-java/commit/468e9d6d9634801e24a131fa6ef17e6ebbcafb2c", "message": "add {set,get}BucketVersioning APIs\n\nFixes #1050", "committedDate": "2020-09-15T15:25:01Z", "type": "forcePushed"}, {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70", "url": "https://github.com/minio/minio-java/commit/ed389872317612dc9d54aa72b53be9db91af3a70", "message": "add {set,get}BucketVersioning APIs\n\nFixes #1050", "committedDate": "2020-09-15T17:14:24Z", "type": "commit"}, {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70", "url": "https://github.com/minio/minio-java/commit/ed389872317612dc9d54aa72b53be9db91af3a70", "message": "add {set,get}BucketVersioning APIs\n\nFixes #1050", "committedDate": "2020-09-15T17:14:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5ODU5MA==", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489198590", "bodyText": "Should we also have a validate() method inside VersioningConfiguration and call it from here? The status field validation can be done in it.", "author": "anjalshireesh", "createdAt": "2020-09-16T06:41:45Z", "path": "api/src/main/java/io/minio/SetBucketVersioningArgs.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.messages.VersioningConfiguration;\n+\n+/** Argument class of MinioClient.setBucketVersioning(). */\n+public class SetBucketVersioningArgs extends BucketArgs {\n+  private VersioningConfiguration config;\n+\n+  public VersioningConfiguration config() {\n+    return config;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link SetBucketVersioningArgs}. */\n+  public static final class Builder extends BucketArgs.Builder<Builder, SetBucketVersioningArgs> {\n+    private void validateConfig(VersioningConfiguration config) {\n+      validateNotNull(config, \"versioning configuration\");", "originalCommit": "ed389872317612dc9d54aa72b53be9db91af3a70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2Mjk5Ng==", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489262996", "bodyText": "VersioningConfiguration has the check in the constructor. I do not think we need to validate status field here because of it.", "author": "balamurugana", "createdAt": "2020-09-16T08:36:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5ODU5MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwMTk5MA==", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489201990", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Boolean flag = (mfaDelete != null) ? Boolean.valueOf(\"Enabled\".equals(mfaDelete)) : null;\n          \n          \n            \n                return flag;\n          \n          \n            \n                return Boolean.valueOf(\"Enabled\".equals(mfaDelete));", "author": "anjalshireesh", "createdAt": "2020-09-16T06:49:11Z", "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "diffHunk": "@@ -33,19 +36,58 @@\n   @Element(name = \"Status\", required = false)\n   private String status;\n \n+  @Element(name = \"MFADelete\", required = false)\n+  private String mfaDelete;\n+\n   public VersioningConfiguration() {}\n \n   /** Constructs a new VersioningConfiguration object with given status. */\n-  public VersioningConfiguration(boolean status) {\n-    if (status) {\n-      this.status = \"Enabled\";\n-    } else {\n-      this.status = \"Suspended\";\n+  public VersioningConfiguration(@Nonnull Status status, @Nullable Boolean mfaDelete) {\n+    Objects.requireNonNull(status, \"Status must not be null\");\n+    if (status == Status.OFF) {\n+      throw new IllegalArgumentException(\"Status must be ENABLED or SUSPENDED\");\n+    }\n+    this.status = status.toString();\n+\n+    if (mfaDelete != null) {\n+      this.mfaDelete = mfaDelete ? \"Enabled\" : \"Disabled\";\n     }\n   }\n \n-  /** Indicates whether the bucket is version enabled or not. */\n-  public boolean status() {\n-    return (\"Enabled\").equals(status);\n+  public Status status() {\n+    return Status.fromString(status);\n+  }\n+\n+  public Boolean isMfaDeleteEnabled() {\n+    Boolean flag = (mfaDelete != null) ? Boolean.valueOf(\"Enabled\".equals(mfaDelete)) : null;\n+    return flag;", "originalCommit": "ed389872317612dc9d54aa72b53be9db91af3a70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2NTU3NA==", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489265574", "bodyText": "No. We need to return three possible values. None, Boolean.FALSE or Boolean.TRUE.", "author": "balamurugana", "createdAt": "2020-09-16T08:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwMTk5MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODA5Mw==", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489208093", "bodyText": "Can we use switch statement here?\nOr maybe we can just use the toString() method and make this a single statement.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (config.status() == VersioningConfiguration.Status.OFF) {\n          \n          \n            \n                    System.out.println(\"Versioning on bucket 'my-bucketname' is not enabled\");\n          \n          \n            \n                  } else if (config.status() == VersioningConfiguration.Status.ENABLED) {\n          \n          \n            \n                    System.out.println(\"Versioning on bucket 'my-bucketname' is enabled\");\n          \n          \n            \n                  } else if (config.status() == VersioningConfiguration.Status.SUSPENDED) {\n          \n          \n            \n                    System.out.println(\"Versioning on bucket 'my-bucketname' is suspended\");\n          \n          \n            \n                  }\n          \n          \n            \n                 String statusStr = config.status().toString();\n          \n          \n            \n                 System.out.println(\"Versioning on bucket 'my-bucketname' is \" + statusStr.isEmpty ? \"Off\" : statusStr);", "author": "anjalshireesh", "createdAt": "2020-09-16T07:01:58Z", "path": "examples/GetBucketVersioning.java", "diffHunk": "@@ -40,12 +41,16 @@ public static void main(String[] args)\n       //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n       //         .build();\n \n-      // Disable versioning on 'my-bucketname'.\n-      minioClient.disableVersioning(\n-          DisableVersioningArgs.builder().bucket(\"my-bucketname\").build());\n-\n-      System.out.println(\"Bucket versioning is disabled successfully\");\n-\n+      VersioningConfiguration config =\n+          minioClient.getBucketVersioning(\n+              GetBucketVersioningArgs.builder().bucket(\"my-bucketname\").build());\n+      if (config.status() == VersioningConfiguration.Status.OFF) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is not enabled\");\n+      } else if (config.status() == VersioningConfiguration.Status.ENABLED) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is enabled\");\n+      } else if (config.status() == VersioningConfiguration.Status.SUSPENDED) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is suspended\");\n+      }", "originalCommit": "ed389872317612dc9d54aa72b53be9db91af3a70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2OTQ5OQ==", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489269499", "bodyText": "Simplified to just print the status.", "author": "balamurugana", "createdAt": "2020-09-16T08:45:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODA5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ca2f4911453d6974ffbbc5fc2f13709a70ee6d15", "chunk": "diff --git a/examples/GetBucketVersioning.java b/examples/GetBucketVersioning.java\nindex 78e1d8a7..e3468295 100644\n--- a/examples/GetBucketVersioning.java\n+++ b/examples/GetBucketVersioning.java\n\n@@ -44,13 +44,7 @@ public class GetBucketVersioning {\n       VersioningConfiguration config =\n           minioClient.getBucketVersioning(\n               GetBucketVersioningArgs.builder().bucket(\"my-bucketname\").build());\n-      if (config.status() == VersioningConfiguration.Status.OFF) {\n-        System.out.println(\"Versioning on bucket 'my-bucketname' is not enabled\");\n-      } else if (config.status() == VersioningConfiguration.Status.ENABLED) {\n-        System.out.println(\"Versioning on bucket 'my-bucketname' is enabled\");\n-      } else if (config.status() == VersioningConfiguration.Status.SUSPENDED) {\n-        System.out.println(\"Versioning on bucket 'my-bucketname' is suspended\");\n-      }\n+      System.out.println(\"Versioning on bucket 'my-bucketname' is \" + config.status());\n     } catch (MinioException e) {\n       System.out.println(\"Error occurred: \" + e);\n     }\n"}}, {"oid": "ca2f4911453d6974ffbbc5fc2f13709a70ee6d15", "url": "https://github.com/minio/minio-java/commit/ca2f4911453d6974ffbbc5fc2f13709a70ee6d15", "message": "address review comments", "committedDate": "2020-09-16T08:46:26Z", "type": "commit"}]}