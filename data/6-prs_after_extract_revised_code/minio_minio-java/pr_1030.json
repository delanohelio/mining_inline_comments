{"pr_number": 1030, "pr_title": "add {set,get,delete}BucketReplication APIs", "pr_createdAt": "2020-07-30T17:07:00Z", "pr_url": "https://github.com/minio/minio-java/pull/1030", "timeline": [{"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8", "url": "https://github.com/minio/minio-java/commit/544c3ee84bcce1856894a1cb36e02c2f57d853d8", "message": "add {set,get,delete}BucketReplication APIs", "committedDate": "2020-07-31T15:27:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM1NjY2Nw==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465356667", "bodyText": "in the case of MinIO Role is not required - just the Replication Arn. Might want to highlight use with MinIO rather than with Aws here.", "author": "poornas", "createdAt": "2020-08-04T22:05:51Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5725,6 +5725,132 @@ public void deleteBucketNotification(DeleteBucketNotificationArgs args)\n     response.close();\n   }\n \n+  /**\n+   * Gets bucket replication configuration of a bucket.\n+   *\n+   * <pre>Example:{@code\n+   * String config =\n+   *     minioClient.getBucketReplication(\n+   *         GetBucketReplicationArgs.builder().bucket(\"my-bucketname\").build());\n+   * }</pre>\n+   *\n+   * @param args {@link GetBucketReplicationArgs} object.\n+   * @return String - Bucket replication configuration as JSON string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public String getBucketReplication(GetBucketReplicationArgs args)\n+      throws ErrorResponseException, InsufficientDataException, InternalException,\n+          InvalidBucketNameException, InvalidKeyException, InvalidResponseException, IOException,\n+          NoSuchAlgorithmException, ServerException, XmlParserException {\n+    checkArgs(args);\n+    try (Response response = executeGet(args, null, newMultimap(\"replication\", \"\"))) {\n+      return response.body().string();\n+    }\n+  }\n+\n+  /**\n+   * Sets bucket replication configuration to a bucket.\n+   *\n+   * <pre>Example:{@code\n+   * // Lets consider variable 'config' contains below XML String;\n+   * // <ReplicationConfiguration>\n+   * //   <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>", "originalCommit": "544c3ee84bcce1856894a1cb36e02c2f57d853d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "366a37a5a8b16eb6231b6daf9af8e6c0b6c7308d", "chunk": "diff --git a/api/src/main/java/io/minio/MinioClient.java b/api/src/main/java/io/minio/MinioClient.java\nindex dd4f959a..76e22db6 100644\n--- a/api/src/main/java/io/minio/MinioClient.java\n+++ b/api/src/main/java/io/minio/MinioClient.java\n\n@@ -5824,7 +5824,7 @@ public class MinioClient {\n   }\n \n   /**\n-   * Deletes bucket replication configuration to a bucket.\n+   * Deletes bucket replication configuration from a bucket.\n    *\n    * <pre>Example:{@code\n    * minioClient.deleteBucketReplication(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MjExNQ==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465392115", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Deletes bucket replication configuration to a bucket.\n          \n          \n            \n               * Deletes bucket replication configuration from a bucket.", "author": "poornas", "createdAt": "2020-08-04T23:50:21Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5725,6 +5725,132 @@ public void deleteBucketNotification(DeleteBucketNotificationArgs args)\n     response.close();\n   }\n \n+  /**\n+   * Gets bucket replication configuration of a bucket.\n+   *\n+   * <pre>Example:{@code\n+   * String config =\n+   *     minioClient.getBucketReplication(\n+   *         GetBucketReplicationArgs.builder().bucket(\"my-bucketname\").build());\n+   * }</pre>\n+   *\n+   * @param args {@link GetBucketReplicationArgs} object.\n+   * @return String - Bucket replication configuration as JSON string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public String getBucketReplication(GetBucketReplicationArgs args)\n+      throws ErrorResponseException, InsufficientDataException, InternalException,\n+          InvalidBucketNameException, InvalidKeyException, InvalidResponseException, IOException,\n+          NoSuchAlgorithmException, ServerException, XmlParserException {\n+    checkArgs(args);\n+    try (Response response = executeGet(args, null, newMultimap(\"replication\", \"\"))) {\n+      return response.body().string();\n+    }\n+  }\n+\n+  /**\n+   * Sets bucket replication configuration to a bucket.\n+   *\n+   * <pre>Example:{@code\n+   * // Lets consider variable 'config' contains below XML String;\n+   * // <ReplicationConfiguration>\n+   * //   <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>\n+   * //   <Rule>\n+   * //     <ID>rule1</ID>\n+   * //     <Status>Enabled</Status>\n+   * //     <Priority>1</Priority>\n+   * //     <DeleteMarkerReplication>\n+   * //        <Status>Disabled</Status>\n+   * //     </DeleteMarkerReplication>\n+   * //     <Filter>\n+   * //        <And>\n+   * //            <Prefix>TaxDocs</Prefix>\n+   * //            <Tag>\n+   * //              <Key>key1</Key>\n+   * //              <Value>value1</Value>\n+   * //            </Tag>\n+   * //            <Tag>\n+   * //              <Key>key1</Key>\n+   * //              <Value>value1</Value>\n+   * //            </Tag>\n+   * //        </And>\n+   * //     </Filter>\n+   * //     <Destination>\n+   * //       <Bucket>arn:aws:s3:::exampletargetbucket</Bucket>\n+   * //     </Destination>\n+   * //   </Rule>\n+   * // </ReplicationConfiguration>\n+   *\n+   * minioClient.setBucketReplication(\n+   *     SetBucketReplicationArgs.builder().bucket(\"my-bucketname\").config(config).build());\n+   * }</pre>\n+   *\n+   * @param args {@link SetBucketReplicationArgs} object.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public void setBucketReplication(SetBucketReplicationArgs args)\n+      throws ErrorResponseException, InsufficientDataException, InternalException,\n+          InvalidBucketNameException, InvalidKeyException, InvalidResponseException, IOException,\n+          NoSuchAlgorithmException, ServerException, XmlParserException {\n+    checkArgs(args);\n+    Response response =\n+        executePut(\n+            args,\n+            (args.objectLockToken() != null)\n+                ? newMultimap(\"x-amz-bucket-object-lock-token\", args.objectLockToken())\n+                : null,\n+            newMultimap(\"replication\", \"\"),\n+            args.config(),\n+            0);\n+    response.close();\n+  }\n+\n+  /**\n+   * Deletes bucket replication configuration to a bucket.", "originalCommit": "544c3ee84bcce1856894a1cb36e02c2f57d853d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "366a37a5a8b16eb6231b6daf9af8e6c0b6c7308d", "chunk": "diff --git a/api/src/main/java/io/minio/MinioClient.java b/api/src/main/java/io/minio/MinioClient.java\nindex dd4f959a..76e22db6 100644\n--- a/api/src/main/java/io/minio/MinioClient.java\n+++ b/api/src/main/java/io/minio/MinioClient.java\n\n@@ -5824,7 +5824,7 @@ public class MinioClient {\n   }\n \n   /**\n-   * Deletes bucket replication configuration to a bucket.\n+   * Deletes bucket replication configuration from a bucket.\n    *\n    * <pre>Example:{@code\n    * minioClient.deleteBucketReplication(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzA1MQ==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465407051", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n          \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.", "author": "poornas", "createdAt": "2020-08-05T00:44:08Z", "path": "examples/DeleteBucketReplication.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.", "originalCommit": "544c3ee84bcce1856894a1cb36e02c2f57d853d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "366a37a5a8b16eb6231b6daf9af8e6c0b6c7308d", "chunk": "diff --git a/examples/DeleteBucketReplication.java b/examples/DeleteBucketReplication.java\nindex 5919ae0d..68585877 100644\n--- a/examples/DeleteBucketReplication.java\n+++ b/examples/DeleteBucketReplication.java\n\n@@ -1,5 +1,5 @@\n /*\n- * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzI4Mg==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465407282", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n          \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.", "author": "poornas", "createdAt": "2020-08-05T00:44:49Z", "path": "examples/GetBucketReplication.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.", "originalCommit": "544c3ee84bcce1856894a1cb36e02c2f57d853d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "366a37a5a8b16eb6231b6daf9af8e6c0b6c7308d", "chunk": "diff --git a/examples/GetBucketReplication.java b/examples/GetBucketReplication.java\nindex ebccae4a..a98be18c 100644\n--- a/examples/GetBucketReplication.java\n+++ b/examples/GetBucketReplication.java\n\n@@ -1,5 +1,5 @@\n /*\n- * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzM1MA==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465407350", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n          \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.", "author": "poornas", "createdAt": "2020-08-05T00:45:04Z", "path": "examples/SetBucketReplication.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.", "originalCommit": "544c3ee84bcce1856894a1cb36e02c2f57d853d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "366a37a5a8b16eb6231b6daf9af8e6c0b6c7308d", "chunk": "diff --git a/examples/SetBucketReplication.java b/examples/SetBucketReplication.java\nindex 41425122..eea6248b 100644\n--- a/examples/SetBucketReplication.java\n+++ b/examples/SetBucketReplication.java\n\n@@ -1,5 +1,5 @@\n /*\n- * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzg1OQ==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465407859", "bodyText": "Use ReplicationArn instead of Role - arn:minio:replica::28285312-2dec-4982-b14d-c24e99d472e6:exampletargetbucket", "author": "poornas", "createdAt": "2020-08-05T00:47:08Z", "path": "examples/SetBucketReplication.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import io.minio.MinioClient;\n+import io.minio.SetBucketReplicationArgs;\n+import io.minio.errors.MinioException;\n+import java.io.IOException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class SetBucketReplication {\n+  /** MinioClient.setBucketReplication() example. */\n+  public static void main(String[] args)\n+      throws IOException, NoSuchAlgorithmException, InvalidKeyException {\n+    try {\n+      /* play.min.io for test and development. */\n+      MinioClient minioClient =\n+          MinioClient.builder()\n+              .endpoint(\"https://play.min.io\")\n+              .credentials(\"Q3AM3UQ867SPQQA43P2F\", \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\")\n+              .build();\n+\n+      /* Amazon S3: */\n+      // MinioClient minioClient =\n+      //     MinioClient.builder()\n+      //         .endpoint(\"https://s3.amazonaws.com\")\n+      //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n+      //         .build();\n+\n+      String config =\n+          \"<ReplicationConfiguration>\"\n+              + \"  <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>\"", "originalCommit": "544c3ee84bcce1856894a1cb36e02c2f57d853d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgxNzU1MQ==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r466817551", "bodyText": "Not necessarily be minio server specific string. Role value needs to be known before using the API. Any valid string works here.", "author": "balamurugana", "createdAt": "2020-08-07T04:43:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzg1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "366a37a5a8b16eb6231b6daf9af8e6c0b6c7308d", "chunk": "diff --git a/examples/SetBucketReplication.java b/examples/SetBucketReplication.java\nindex 41425122..eea6248b 100644\n--- a/examples/SetBucketReplication.java\n+++ b/examples/SetBucketReplication.java\n\n@@ -1,5 +1,5 @@\n /*\n- * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"oid": "366a37a5a8b16eb6231b6daf9af8e6c0b6c7308d", "url": "https://github.com/minio/minio-java/commit/366a37a5a8b16eb6231b6daf9af8e6c0b6c7308d", "message": "fix review comment and add functional tests", "committedDate": "2020-08-05T05:12:50Z", "type": "forcePushed"}, {"oid": "7af30a6f88942732f6d000b6cee83bc88d53da22", "url": "https://github.com/minio/minio-java/commit/7af30a6f88942732f6d000b6cee83bc88d53da22", "message": "fix review comment and add functional tests", "committedDate": "2020-08-05T15:55:40Z", "type": "forcePushed"}, {"oid": "8f6ea2f72639d93f957d2410cfac1d57187bd5bf", "url": "https://github.com/minio/minio-java/commit/8f6ea2f72639d93f957d2410cfac1d57187bd5bf", "message": "fix review comment and add functional tests", "committedDate": "2020-08-05T15:57:59Z", "type": "forcePushed"}, {"oid": "f8f0ac9dbc95427bfd6015f10db1d6d6857c40cd", "url": "https://github.com/minio/minio-java/commit/f8f0ac9dbc95427bfd6015f10db1d6d6857c40cd", "message": "fix review comment and add functional tests", "committedDate": "2020-08-05T16:50:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc3Mzg2Mw==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r466773863", "bodyText": "ReplicationArn was renamed to Role, so what you originally had is good - you can remove any references to ReplicationArn", "author": "poornas", "createdAt": "2020-08-07T01:40:01Z", "path": "examples/SetBucketReplication.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import io.minio.MinioClient;\n+import io.minio.SetBucketReplicationArgs;\n+import io.minio.errors.MinioException;\n+import java.io.IOException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class SetBucketReplication {\n+  /** MinioClient.setBucketReplication() example. */\n+  public static void main(String[] args)\n+      throws IOException, NoSuchAlgorithmException, InvalidKeyException {\n+    try {\n+      /* play.min.io for test and development. */\n+      MinioClient minioClient =\n+          MinioClient.builder()\n+              .endpoint(\"https://play.min.io\")\n+              .credentials(\"Q3AM3UQ867SPQQA43P2F\", \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\")\n+              .build();\n+\n+      /* Amazon S3: */\n+      // MinioClient minioClient =\n+      //     MinioClient.builder()\n+      //         .endpoint(\"https://s3.amazonaws.com\")\n+      //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n+      //         .build();\n+\n+      /* Amazon S3 specific configuration. */\n+      // String config =\n+      //     \"<ReplicationConfiguration>\"\n+      //         + \"  <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>\"\n+      //         + \"  <Rule>\"\n+      //         + \"    <ID>rule1</ID>\"\n+      //         + \"    <Status>Enabled</Status>\"\n+      //         + \"    <Priority>1</Priority>\"\n+      //         + \"    <DeleteMarkerReplication>\"\n+      //         + \"       <Status>Disabled</Status>\"\n+      //         + \"    </DeleteMarkerReplication>\"\n+      //         + \"    <Filter>\"\n+      //         + \"       <And>\"\n+      //         + \"           <Prefix>TaxDocs</Prefix>\"\n+      //         + \"           <Tag>\"\n+      //         + \"             <Key>key1</Key>\"\n+      //         + \"             <Value>value1</Value>\"\n+      //         + \"           </Tag>\"\n+      //         + \"           <Tag>\"\n+      //         + \"             <Key>key1</Key>\"\n+      //         + \"             <Value>value1</Value>\"\n+      //         + \"           </Tag>\"\n+      //         + \"       </And>\"\n+      //         + \"    </Filter>\"\n+      //         + \"    <Destination>\"\n+      //         + \"      <Bucket>arn:aws:s3:::exampletargetbucket</Bucket>\"\n+      //         + \"    </Destination>\"\n+      //         + \"  </Rule>\"\n+      //         + \"</ReplicationConfiguration>\";\n+\n+      /* MinIO server specific configuration. */\n+      String config =\n+          \"{\"\n+              + \"  \\\"ReplicationArn\\\" :\\\"arn:minio:replica::c5be6b16-769d-432a-9ef1-4567081f3566:destbucket\\\",\"", "originalCommit": "f8f0ac9dbc95427bfd6015f10db1d6d6857c40cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgxNTkzOQ==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r466815939", "bodyText": "No problem. Removed all minio server specific references.", "author": "balamurugana", "createdAt": "2020-08-07T04:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc3Mzg2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e27085ffed18b35c2433cfcbc88e8a750094e4f8", "chunk": "diff --git a/examples/SetBucketReplication.java b/examples/SetBucketReplication.java\nindex eea6248b..41425122 100644\n--- a/examples/SetBucketReplication.java\n+++ b/examples/SetBucketReplication.java\n\n@@ -1,5 +1,5 @@\n /*\n- * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"oid": "e27085ffed18b35c2433cfcbc88e8a750094e4f8", "url": "https://github.com/minio/minio-java/commit/e27085ffed18b35c2433cfcbc88e8a750094e4f8", "message": "add {set,get,delete}BucketReplication APIs", "committedDate": "2020-08-07T04:14:17Z", "type": "commit"}, {"oid": "5bcca882adaf770e51614143c0a4c07da4dc43e8", "url": "https://github.com/minio/minio-java/commit/5bcca882adaf770e51614143c0a4c07da4dc43e8", "message": "fix review comment and add functional tests", "committedDate": "2020-08-07T04:35:56Z", "type": "forcePushed"}, {"oid": "e894ca00d0cb1041de38c616903d90a16bc438a0", "url": "https://github.com/minio/minio-java/commit/e894ca00d0cb1041de38c616903d90a16bc438a0", "message": "fix review comment and add functional tests", "committedDate": "2020-08-07T05:41:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3NzUyOA==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r467177528", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!config.isEmpty()) {\n          \n          \n            \n                    if (config.isEmpty()) {", "author": "poornas", "createdAt": "2020-08-07T17:35:41Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -3371,6 +3376,211 @@ public static void deleteObjectTags() throws Exception {\n     }\n   }\n \n+  public static void setBucketReplication() throws Exception {\n+    String methodName = \"setBucketReplication()\";\n+    if (!mintEnv) {\n+      System.out.println(methodName);\n+    }\n+\n+    if (replicationRole == null || replicationBucketArn == null) {\n+      mintIgnoredLog(methodName, \"\", System.currentTimeMillis());\n+      return;\n+    }\n+\n+    long startTime = System.currentTimeMillis();\n+    String bucketName = getRandomName();\n+    try {\n+      client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n+      client.enableVersioning(EnableVersioningArgs.builder().bucket(bucketName).build());\n+      try {\n+        String config =\n+            \"<ReplicationConfiguration>\"\n+                + \"  <Role>\"\n+                + replicationRole\n+                + \"</Role>\"\n+                + \"  <Rule>\"\n+                + \"    <ID>rule1</ID>\"\n+                + \"    <Status>Enabled</Status>\"\n+                + \"    <Priority>1</Priority>\"\n+                + \"    <DeleteMarkerReplication>\"\n+                + \"      <Status>Disabled</Status>\"\n+                + \"    </DeleteMarkerReplication>\"\n+                + \"    <Filter>\"\n+                + \"      <And>\"\n+                + \"        <Prefix>TaxDocs</Prefix>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key1</Key>\"\n+                + \"          <Value>value1</Value>\"\n+                + \"        </Tag>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key2</Key>\"\n+                + \"          <Value>value2</Value>\"\n+                + \"        </Tag>\"\n+                + \"      </And>\"\n+                + \"    </Filter>\"\n+                + \"    <Destination>\"\n+                + \"      <Bucket>\"\n+                + replicationBucketArn\n+                + \"</Bucket>\"\n+                + \"    </Destination>\"\n+                + \"  </Rule>\"\n+                + \"</ReplicationConfiguration>\";\n+        client.setBucketReplication(\n+            SetBucketReplicationArgs.builder().bucket(bucketName).config(config).build());\n+        mintSuccessLog(methodName, null, startTime);\n+      } finally {\n+        client.removeBucket(RemoveBucketArgs.builder().bucket(bucketName).build());\n+      }\n+    } catch (Exception e) {\n+      handleException(methodName, null, startTime, e);\n+    }\n+  }\n+\n+  public static void getBucketReplication() throws Exception {\n+    String methodName = \"getBucketReplication()\";\n+    if (!mintEnv) {\n+      System.out.println(methodName);\n+    }\n+\n+    if (replicationRole == null || replicationBucketArn == null) {\n+      mintIgnoredLog(methodName, \"\", System.currentTimeMillis());\n+      return;\n+    }\n+\n+    long startTime = System.currentTimeMillis();\n+    String bucketName = getRandomName();\n+    try {\n+      client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n+      client.enableVersioning(EnableVersioningArgs.builder().bucket(bucketName).build());\n+      try {\n+        String config =\n+            client.getBucketReplication(\n+                GetBucketReplicationArgs.builder().bucket(bucketName).build());\n+        if (!\"\".equals(config)) {\n+          throw new Exception(\"config: expected: <empty>, got: \" + config);\n+        }\n+\n+        config =\n+            \"<ReplicationConfiguration>\"\n+                + \"  <Role>\"\n+                + replicationRole\n+                + \"</Role>\"\n+                + \"  <Rule>\"\n+                + \"    <ID>rule1</ID>\"\n+                + \"    <Status>Enabled</Status>\"\n+                + \"    <Priority>1</Priority>\"\n+                + \"    <DeleteMarkerReplication>\"\n+                + \"      <Status>Disabled</Status>\"\n+                + \"    </DeleteMarkerReplication>\"\n+                + \"    <Filter>\"\n+                + \"      <And>\"\n+                + \"        <Prefix>TaxDocs</Prefix>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key1</Key>\"\n+                + \"          <Value>value1</Value>\"\n+                + \"        </Tag>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key2</Key>\"\n+                + \"          <Value>value2</Value>\"\n+                + \"        </Tag>\"\n+                + \"      </And>\"\n+                + \"    </Filter>\"\n+                + \"    <Destination>\"\n+                + \"      <Bucket>\"\n+                + replicationBucketArn\n+                + \"</Bucket>\"\n+                + \"    </Destination>\"\n+                + \"  </Rule>\"\n+                + \"</ReplicationConfiguration>\";\n+        client.setBucketReplication(\n+            SetBucketReplicationArgs.builder().bucket(bucketName).config(config).build());\n+        config =\n+            client.getBucketReplication(\n+                GetBucketReplicationArgs.builder().bucket(bucketName).build());\n+        if (!config.isEmpty()) {", "originalCommit": "e894ca00d0cb1041de38c616903d90a16bc438a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1fcf8bf7118974c05dc5e64b7c0dbfe72601df45", "chunk": "diff --git a/functional/FunctionalTest.java b/functional/FunctionalTest.java\nindex fce40bc0..a4c26a92 100644\n--- a/functional/FunctionalTest.java\n+++ b/functional/FunctionalTest.java\n\n@@ -3497,8 +3497,8 @@ public class FunctionalTest {\n         config =\n             client.getBucketReplication(\n                 GetBucketReplicationArgs.builder().bucket(bucketName).build());\n-        if (!config.isEmpty()) {\n-          throw new Exception(\"config: non-empty string\");\n+        if (config.isEmpty()) {\n+          throw new Exception(\"config: expected: <non-empty>, got: \" + config);\n         }\n         mintSuccessLog(methodName, null, startTime);\n       } finally {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4ODEyMQ==", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r467188121", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      throw new Exception(\"config: non-empty string\");\n          \n          \n            \n                      throw new Exception(\"config: expected non-empty string\");", "author": "poornas", "createdAt": "2020-08-07T17:57:18Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -3371,6 +3376,211 @@ public static void deleteObjectTags() throws Exception {\n     }\n   }\n \n+  public static void setBucketReplication() throws Exception {\n+    String methodName = \"setBucketReplication()\";\n+    if (!mintEnv) {\n+      System.out.println(methodName);\n+    }\n+\n+    if (replicationRole == null || replicationBucketArn == null) {\n+      mintIgnoredLog(methodName, \"\", System.currentTimeMillis());\n+      return;\n+    }\n+\n+    long startTime = System.currentTimeMillis();\n+    String bucketName = getRandomName();\n+    try {\n+      client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n+      client.enableVersioning(EnableVersioningArgs.builder().bucket(bucketName).build());\n+      try {\n+        String config =\n+            \"<ReplicationConfiguration>\"\n+                + \"  <Role>\"\n+                + replicationRole\n+                + \"</Role>\"\n+                + \"  <Rule>\"\n+                + \"    <ID>rule1</ID>\"\n+                + \"    <Status>Enabled</Status>\"\n+                + \"    <Priority>1</Priority>\"\n+                + \"    <DeleteMarkerReplication>\"\n+                + \"      <Status>Disabled</Status>\"\n+                + \"    </DeleteMarkerReplication>\"\n+                + \"    <Filter>\"\n+                + \"      <And>\"\n+                + \"        <Prefix>TaxDocs</Prefix>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key1</Key>\"\n+                + \"          <Value>value1</Value>\"\n+                + \"        </Tag>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key2</Key>\"\n+                + \"          <Value>value2</Value>\"\n+                + \"        </Tag>\"\n+                + \"      </And>\"\n+                + \"    </Filter>\"\n+                + \"    <Destination>\"\n+                + \"      <Bucket>\"\n+                + replicationBucketArn\n+                + \"</Bucket>\"\n+                + \"    </Destination>\"\n+                + \"  </Rule>\"\n+                + \"</ReplicationConfiguration>\";\n+        client.setBucketReplication(\n+            SetBucketReplicationArgs.builder().bucket(bucketName).config(config).build());\n+        mintSuccessLog(methodName, null, startTime);\n+      } finally {\n+        client.removeBucket(RemoveBucketArgs.builder().bucket(bucketName).build());\n+      }\n+    } catch (Exception e) {\n+      handleException(methodName, null, startTime, e);\n+    }\n+  }\n+\n+  public static void getBucketReplication() throws Exception {\n+    String methodName = \"getBucketReplication()\";\n+    if (!mintEnv) {\n+      System.out.println(methodName);\n+    }\n+\n+    if (replicationRole == null || replicationBucketArn == null) {\n+      mintIgnoredLog(methodName, \"\", System.currentTimeMillis());\n+      return;\n+    }\n+\n+    long startTime = System.currentTimeMillis();\n+    String bucketName = getRandomName();\n+    try {\n+      client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n+      client.enableVersioning(EnableVersioningArgs.builder().bucket(bucketName).build());\n+      try {\n+        String config =\n+            client.getBucketReplication(\n+                GetBucketReplicationArgs.builder().bucket(bucketName).build());\n+        if (!\"\".equals(config)) {\n+          throw new Exception(\"config: expected: <empty>, got: \" + config);\n+        }\n+\n+        config =\n+            \"<ReplicationConfiguration>\"\n+                + \"  <Role>\"\n+                + replicationRole\n+                + \"</Role>\"\n+                + \"  <Rule>\"\n+                + \"    <ID>rule1</ID>\"\n+                + \"    <Status>Enabled</Status>\"\n+                + \"    <Priority>1</Priority>\"\n+                + \"    <DeleteMarkerReplication>\"\n+                + \"      <Status>Disabled</Status>\"\n+                + \"    </DeleteMarkerReplication>\"\n+                + \"    <Filter>\"\n+                + \"      <And>\"\n+                + \"        <Prefix>TaxDocs</Prefix>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key1</Key>\"\n+                + \"          <Value>value1</Value>\"\n+                + \"        </Tag>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key2</Key>\"\n+                + \"          <Value>value2</Value>\"\n+                + \"        </Tag>\"\n+                + \"      </And>\"\n+                + \"    </Filter>\"\n+                + \"    <Destination>\"\n+                + \"      <Bucket>\"\n+                + replicationBucketArn\n+                + \"</Bucket>\"\n+                + \"    </Destination>\"\n+                + \"  </Rule>\"\n+                + \"</ReplicationConfiguration>\";\n+        client.setBucketReplication(\n+            SetBucketReplicationArgs.builder().bucket(bucketName).config(config).build());\n+        config =\n+            client.getBucketReplication(\n+                GetBucketReplicationArgs.builder().bucket(bucketName).build());\n+        if (!config.isEmpty()) {\n+          throw new Exception(\"config: non-empty string\");", "originalCommit": "e894ca00d0cb1041de38c616903d90a16bc438a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1fcf8bf7118974c05dc5e64b7c0dbfe72601df45", "chunk": "diff --git a/functional/FunctionalTest.java b/functional/FunctionalTest.java\nindex fce40bc0..a4c26a92 100644\n--- a/functional/FunctionalTest.java\n+++ b/functional/FunctionalTest.java\n\n@@ -3497,8 +3497,8 @@ public class FunctionalTest {\n         config =\n             client.getBucketReplication(\n                 GetBucketReplicationArgs.builder().bucket(bucketName).build());\n-        if (!config.isEmpty()) {\n-          throw new Exception(\"config: non-empty string\");\n+        if (config.isEmpty()) {\n+          throw new Exception(\"config: expected: <non-empty>, got: \" + config);\n         }\n         mintSuccessLog(methodName, null, startTime);\n       } finally {\n"}}, {"oid": "1fcf8bf7118974c05dc5e64b7c0dbfe72601df45", "url": "https://github.com/minio/minio-java/commit/1fcf8bf7118974c05dc5e64b7c0dbfe72601df45", "message": "fix review comment and add functional tests", "committedDate": "2020-08-08T04:22:28Z", "type": "commit"}, {"oid": "1fcf8bf7118974c05dc5e64b7c0dbfe72601df45", "url": "https://github.com/minio/minio-java/commit/1fcf8bf7118974c05dc5e64b7c0dbfe72601df45", "message": "fix review comment and add functional tests", "committedDate": "2020-08-08T04:22:28Z", "type": "forcePushed"}]}