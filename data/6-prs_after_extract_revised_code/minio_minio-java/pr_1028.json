{"pr_number": 1028, "pr_title": "Handle error code generically for any S3 service.", "pr_createdAt": "2020-07-24T11:42:38Z", "pr_url": "https://github.com/minio/minio-java/pull/1028", "timeline": [{"oid": "17786227ae8050a4be07a189acdaf15790e61691", "url": "https://github.com/minio/minio-java/commit/17786227ae8050a4be07a189acdaf15790e61691", "message": "Add MinIO server specific error codes", "committedDate": "2020-07-24T13:18:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Mzk4Nw==", "url": "https://github.com/minio/minio-java/pull/1028#discussion_r461293987", "bodyText": "@balamurugana, since this can change especially XMinioAdmin, is not part of S3 API why do we need to add this?\nWhy not make non-translatable errors become ErrorResponse instead? instead of this type of hardcoded value - especially the error description for our Admin API errors can change anytime.", "author": "harshavardhana", "createdAt": "2020-07-28T03:22:05Z", "path": "api/src/main/java/io/minio/ErrorCode.java", "diffHunk": "@@ -32,6 +32,98 @@\n   RESOURCE_CONFLICT(\"ResourceConflict\", \"Request resource conflicts\"),\n   RETRY_HEAD_BUCKET(\"RetryHeadBucket\", \"Retry HEAD bucket request\"),\n \n+  // MinIO server specific error codes\n+  POST_POLICY_INVALID_KEY_NAME(\n+      \"PostPolicyInvalidKeyName\", \"Invalid according to Policy: Policy Condition failed\"),\n+  UNSUPPORTED_NOTIFICATION(\n+      \"UnsupportedNotification\",\n+      \"MinIO server does not support Topic or Cloud Function based notifications.\"),\n+  X_GCS_INTERNAL_ERROR(\"XGCSInternalError\", \"Error occurred at Google cloud storage.\"),\n+  X_MINIO_ADMIN_BUCKET_QUOTA_DISABLED(\n+      \"XMinioAdminBucketQuotaDisabled\",\n+      \"Quota specified but disk usage crawl is disabled on MinIO server\"),\n+  X_MINIO_ADMIN_BUCKET_QUOTA_EXCEEDED(\"XMinioAdminBucketQuotaExceeded\", \"Bucket quota exceeded\"),\n+  X_MINIO_ADMIN_BUCKET_REPLICATION_DISABLED(\n+      \"XMinioAdminBucketReplicationDisabled\",\n+      \"Replication specified but disk usage crawl is disabled on MinIO server\"),\n+  X_MINIO_ADMIN_CONFIG_BAD_JSON(\n+      \"XMinioAdminConfigBadJSON\", \"JSON configuration provided is of incorrect format\"),\n+  X_MINIO_ADMIN_CONFIG_DUPLICATE_KEYS(\n+      \"XMinioAdminConfigDuplicateKeys\",\n+      \"JSON configuration provided has objects with duplicate keys\"),\n+  X_MINIO_ADMIN_CONFIG_NO_QUORUM(\n+      \"XMinioAdminConfigNoQuorum\", \"Configuration update failed because server quorum was not met\"),\n+  X_MINIO_ADMIN_CONFIG_TOO_LARGE(", "originalCommit": "17786227ae8050a4be07a189acdaf15790e61691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NjQ3NA==", "url": "https://github.com/minio/minio-java/pull/1028#discussion_r461296474", "bodyText": "Better idea is to remove ErrorCode.java itself. It would ease out for any S3 services.", "author": "balamurugana", "createdAt": "2020-07-28T03:32:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Mzk4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NjcxNQ==", "url": "https://github.com/minio/minio-java/pull/1028#discussion_r461296715", "bodyText": "Yeah agreed @balamurugana", "author": "harshavardhana", "createdAt": "2020-07-28T03:33:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Mzk4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "634c5421ba6b0eff5f6a5f4120d84d33cdadc4ed", "chunk": "diff --git a/api/src/main/java/io/minio/ErrorCode.java b/api/src/main/java/io/minio/ErrorCode.java\ndeleted file mode 100644\nindex ba1e7d89..00000000\n--- a/api/src/main/java/io/minio/ErrorCode.java\n+++ /dev/null\n\n@@ -1,299 +0,0 @@\n-/*\n- * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2015 MinIO, Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package io.minio;\n-\n-import org.simpleframework.xml.Root;\n-import org.simpleframework.xml.convert.Convert;\n-import org.simpleframework.xml.convert.Converter;\n-import org.simpleframework.xml.stream.InputNode;\n-import org.simpleframework.xml.stream.OutputNode;\n-\n-/** Amazon AWS S3 error codes. */\n-@Root(name = \"ErrorCode\")\n-@Convert(ErrorCode.ErrorCodeConverter.class)\n-public enum ErrorCode {\n-  // custom error codes\n-  NO_SUCH_OBJECT(\"NoSuchKey\", \"Object does not exist\"),\n-  RESOURCE_NOT_FOUND(\"ResourceNotFound\", \"Request resource not found\"),\n-  RESOURCE_CONFLICT(\"ResourceConflict\", \"Request resource conflicts\"),\n-  RETRY_HEAD_BUCKET(\"RetryHeadBucket\", \"Retry HEAD bucket request\"),\n-\n-  // MinIO server specific error codes\n-  POST_POLICY_INVALID_KEY_NAME(\n-      \"PostPolicyInvalidKeyName\", \"Invalid according to Policy: Policy Condition failed\"),\n-  UNSUPPORTED_NOTIFICATION(\n-      \"UnsupportedNotification\",\n-      \"MinIO server does not support Topic or Cloud Function based notifications.\"),\n-  X_GCS_INTERNAL_ERROR(\"XGCSInternalError\", \"Error occurred at Google cloud storage.\"),\n-  X_MINIO_ADMIN_BUCKET_QUOTA_DISABLED(\n-      \"XMinioAdminBucketQuotaDisabled\",\n-      \"Quota specified but disk usage crawl is disabled on MinIO server\"),\n-  X_MINIO_ADMIN_BUCKET_QUOTA_EXCEEDED(\"XMinioAdminBucketQuotaExceeded\", \"Bucket quota exceeded\"),\n-  X_MINIO_ADMIN_BUCKET_REPLICATION_DISABLED(\n-      \"XMinioAdminBucketReplicationDisabled\",\n-      \"Replication specified but disk usage crawl is disabled on MinIO server\"),\n-  X_MINIO_ADMIN_CONFIG_BAD_JSON(\n-      \"XMinioAdminConfigBadJSON\", \"JSON configuration provided is of incorrect format\"),\n-  X_MINIO_ADMIN_CONFIG_DUPLICATE_KEYS(\n-      \"XMinioAdminConfigDuplicateKeys\",\n-      \"JSON configuration provided has objects with duplicate keys\"),\n-  X_MINIO_ADMIN_CONFIG_NO_QUORUM(\n-      \"XMinioAdminConfigNoQuorum\", \"Configuration update failed because server quorum was not met\"),\n-  X_MINIO_ADMIN_CONFIG_TOO_LARGE(\n-      \"XMinioAdminConfigTooLarge\", \"Configuration data provided exceeds the allowed size\"),\n-  X_MINIO_ADMIN_CREDENTIALS_MISMATCH(\n-      \"XMinioAdminCredentialsMismatch\",\n-      \"Credentials in config mismatch with server environment variables\"),\n-  X_MINIO_ADMIN_GROUP_NOT_EMPTY(\n-      \"XMinioAdminGroupNotEmpty\", \"The specified group is not empty - cannot remove it.\"),\n-  X_MINIO_ADMIN_INVALID_ACCESS_KEY(\"XMinioAdminInvalidAccessKey\", \"The access key is invalid.\"),\n-  X_MINIO_ADMIN_INVALID_ARGUMENT(\"XMinioAdminInvalidArgument\", \"Invalid arguments specified.\"),\n-  X_MINIO_ADMIN_INVALID_SECRET_KEY(\"XMinioAdminInvalidSecretKey\", \"The secret key is invalid.\"),\n-  X_MINIO_ADMIN_NOTIFICATION_TARGETS_TEST_FAILED(\n-      \"XMinioAdminNotificationTargetsTestFailed\",\n-      \"Configuration update failed due an unsuccessful \"\n-          + \"attempt to connect to one or more notification servers\"),\n-  X_MINIO_ADMIN_NO_SUCH_GROUP(\"XMinioAdminNoSuchGroup\", \"The specified group does not exist.\"),\n-  X_MINIO_ADMIN_NO_SUCH_POLICY(\"XMinioAdminNoSuchPolicy\", \"The canned policy does not exist.\"),\n-  X_MINIO_ADMIN_NO_SUCH_QUOTA_CONFIGURATION(\n-      \"XMinioAdminNoSuchQuotaConfiguration\", \"The quota configuration does not exist\"),\n-  X_MINIO_ADMIN_NO_SUCH_USER(\"XMinioAdminNoSuchUser\", \"The specified user does not exist.\"),\n-  X_MINIO_ADMIN_PROFILER_NOT_ENABLED(\n-      \"XMinioAdminProfilerNotEnabled\",\n-      \"Unable to perform the requested operation because profiling is not enabled\"),\n-  X_MINIO_BACKEND_DOWN(\"XMinioBackendDown\", \"Object storage backend is unreachable\"),\n-  X_MINIO_ENCRYPTION_ERROR(\"XMinIOEncryptionError\", \"Encryption error occurred.\"),\n-  X_MINIO_HEAL_ALREADY_RUNNING(\"XMinioHealAlreadyRunning\", \"Heal already running\"),\n-  X_MINIO_HEAL_INVALID_CLIENT_TOKEN(\"XMinioHealInvalidClientToken\", \"Client token mismatch\"),\n-  X_MINIO_HEAL_MISSING_BUCKET(\n-      \"XMinioHealMissingBucket\",\n-      \"A heal start request with a non-empty object-prefix parameter \"\n-          + \"requires a bucket to be specified.\"),\n-  X_MINIO_HEAL_NOT_IMPLEMENTED(\n-      \"XMinioHealNotImplemented\", \"This server does not implement heal functionality.\"),\n-  X_MINIO_HEAL_NO_SUCH_PROCESS(\n-      \"XMinioHealNoSuchProcess\", \"No such heal process is running on the server\"),\n-  X_MINIO_HEAL_OVERLAPPING_PATHS(\"XMinioHealOverlappingPaths\", \"Heal overlapping paths\"),\n-  X_MINIO_INSECURE_CLIENT_REQUEST(\n-      \"XMinioInsecureClientRequest\",\n-      \"Cannot respond to plain-text request from TLS-encrypted server\"),\n-  X_MINIO_INVALID_DECOMPRESSED_SIZE(\n-      \"XMinioInvalidDecompressedSize\", \"The data provided is unfit for decompression\"),\n-  X_MINIO_INVALID_IAM_CREDENTIALS(\n-      \"XMinioInvalidIAMCredentials\",\n-      \"The administrator key is not eligible for this operation (or) \"\n-          + \"The specified service account is not found (or) \"\n-          + \"User is not allowed to be same as admin access key\"),\n-  X_MINIO_INVALID_OBJECT_NAME(\n-      \"XMinioInvalidObjectName\",\n-      \"Object name contains unsupported characters (or) \"\n-          + \"Object name contains a leading slash.\"),\n-  X_MINIO_INVALID_RESOURCE_NAME(\n-      \"XMinioInvalidResourceName\",\n-      \"Resource name contains bad components such as \\\"..\\\" or \\\".\\\".\"),\n-  X_MINIO_MALFORMED_JSON(\n-      \"XMinioMalformedJSON\",\n-      \"The JSON you provided was not well-formed or did not \"\n-          + \"validate against our published format.\"),\n-  X_MINIO_OBJECT_EXISTS_AS_DIRECTORY(\n-      \"XMinioObjectExistsAsDirectory\", \"Object name already exists as a directory.\"),\n-  X_MINIO_OBJECT_TAMPERED(\n-      \"XMinioObjectTampered\", \"The requested object was modified and may be compromised\"),\n-  X_MINIO_PARENT_IS_OBJECT(\n-      \"XMinioParentIsObject\",\n-      \"Object-prefix is already an object, please choose a different object-prefix name.\"),\n-  X_MINIO_REQUEST_BODY_PARSE(\"XMinioRequestBodyParse\", \"The request body failed to parse.\"),\n-  X_MINIO_SERVER_NOT_INITIALIZED(\n-      \"XMinioServerNotInitialized\", \"Server not initialized, please try again.\"),\n-  X_MINIO_STORAGE_FULL(\n-      \"XMinioStorageFull\",\n-      \"Storage backend has reached its minimum free disk threshold. \"\n-          + \"Please delete a few objects to proceed.\"),\n-\n-  // S3 error codes\n-  ACCESS_DENIED(\"AccessDenied\", \"Access denied\"),\n-  ACCOUNT_PROBLEM(\"AccountProblem\", \"Problem with provided account\"),\n-  AMBIGUOUS_GRANT_BY_EMAIL_ADDRESS(\n-      \"AmbiguousGrantByEmailAddress\",\n-      \"The email address you provided is associated with more than one account\"),\n-  AUTHORIZATION_HEADER_MALFORMED(\n-      \"AuthorizationHeaderMalformed\", \"The authorization header is malformed\"),\n-  BAD_DIGEST(\"BadDigest\", \"Specified Content-MD5 does not match\"),\n-  BUCKET_ALREADY_EXISTS(\"BucketAlreadyExists\", \"Bucket already exists\"),\n-  BUCKET_ALREADY_OWNED_BY_YOU(\"BucketAlreadyOwnedByYou\", \"Bucket is already owned by you\"),\n-  BUCKET_NOT_EMPTY(\"BucketNotEmpty\", \"Bucket is not empty\"),\n-  CREDENTIALS_NOT_SUPPORTED(\"CredentialsNotSupported\", \"Request does not support credentials\"),\n-  CROSS_LOCATION_LOGGING_PROHIBITED(\n-      \"CrossLocationLoggingProhibited\", \"Cross-location logging not allowed\"),\n-  ENTITY_TOO_SMALL(\"EntityTooSmall\", \"Upload is smaller than the minimum allowed object size\"),\n-  ENTITY_TOO_LARGE(\"EntityTooLarge\", \"Upload exceeds the maximum allowed object size\"),\n-  EXPIRED_TOKEN(\"ExpiredToken\", \"The provided token has expired\"),\n-  ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION(\n-      \"IllegalVersioningConfigurationException\",\n-      \"The versioning configuration specified in the request is invalid.\"),\n-  INCOMPLETE_BODY(\n-      \"IncompleteBody\", \"HTTP body size does not match with the Content-Length HTTP header\"),\n-  INCORRECT_NUMBER_OF_FILES_IN_POST_REQUEST(\n-      \"IncorrectNumberOfFilesInPostRequest\", \"POST requires exactly one file upload per request\"),\n-  INLINE_DATA_TOO_LARGE(\"InlineDataTooLarge\", \"Inline data exceeds the maximum allowed size\"),\n-  INTERNAL_ERROR(\"InternalError\", \"Internal error. Please try again\"),\n-  INVALID_ACCESS_KEY_ID(\"InvalidAccessKeyId\", \"access key does not exist\"),\n-  INVALID_ADDRESSING_HEADER(\n-      \"InvalidAddressingHeader\", \"Invalid addressing header.  Specify the Anonymous role\"),\n-  INVALID_ARGUMENT(\"InvalidArgument\", \"Invalid Argument\"),\n-  INVALID_BUCKET_NAME(\"InvalidBucketName\", \"Bucket name is not valid\"),\n-  INVALID_BUCKET_STATE(\n-      \"InvalidBucketState\", \"The request is not valid with the current state of the bucket\"),\n-  INVALID_DIGEST(\"InvalidDigest\", \"Specified Content-MD5 is not valid\"),\n-  INVALID_ENCRYPTION_ALGORITHM_ERROR(\n-      \"InvalidEncryptionAlgorithmError\", \"Invalid encryption algorithm error\"),\n-  INVALID_LOCATION_CONSTRAINT(\n-      \"InvalidLocationConstraint\", \"The specified location constraint is not valid\"),\n-  INVALID_OBJECT_STATE(\n-      \"InvalidObjectState\", \"The operation is not valid for the current state of the object\"),\n-  INVALID_PART(\"InvalidPart\", \"One or more of the specified parts could not be found\"),\n-  INVALID_PART_ORDER(\n-      \"InvalidPartOrder\",\n-      \"The list of parts was not in ascending order.  \"\n-          + \"Parts list must specified in order by part number\"),\n-  INVALID_PAYER(\"InvalidPayer\", \"All access to this object has been disabled\"),\n-  INVALID_POLICY_DOCUMENT(\n-      \"InvalidPolicyDocument\",\n-      \"The content of the form does not meet the conditions specified in the policy document\"),\n-  INVALID_RANGE(\"InvalidRange\", \"The requested range cannot be satisfied\"),\n-  INVALID_REQUEST(\"InvalidRequest\", \"SOAP requests must be made over an HTTPS connection\"),\n-  INVALID_SECURITY(\"InvalidSecurity\", \"The provided security credentials are not valid\"),\n-  INVALID_SOAP_REQUEST(\"InvalidSOAPRequest\", \"The SOAP request body is invalid\"),\n-  INVALID_STORAGE_CLASS(\"InvalidStorageClass\", \"The storage class you specified is not valid\"),\n-  INVALID_TARGET_BUCKET_FOR_LOGGING(\n-      \"InvalidTargetBucketForLogging\",\n-      \"The target bucket for logging does not exist, is not owned by you, or does not \"\n-          + \"have the appropriate grants for the log-delivery group.\"),\n-  INVALID_TOKEN(\"InvalidToken\", \"malformed or invalid token\"),\n-  INVALID_URI(\"InvalidURI\", \"Couldn't parse the specified URI\"),\n-  KEY_TOO_LONG(\"KeyTooLong\", \"Key is too long\"),\n-  MALFORMED_ACL_ERROR(\n-      \"MalformedACLError\",\n-      \"The XML provided was not well-formed or did not validate against published schema\"),\n-  MALFORMED_POST_REQUEST(\n-      \"MalformedPOSTRequest\", \"The body of POST request is not well-formed multipart/form-data\"),\n-  MALFORMED_XML(\"MalformedXML\", \"Malformed XML\"),\n-  MAX_MESSAGE_LENGTH_EXCEEDED(\"MaxMessageLengthExceeded\", \"Request was too big\"),\n-  MAX_POST_PRE_DATA_LENGTH_EXCEEDED_ERROR(\n-      \"MaxPostPreDataLengthExceededError\",\n-      \"POST request fields preceding the upload file were too large\"),\n-  METADATA_TOO_LARGE(\n-      \"MetadataTooLarge\", \"Metadata headers exceed the maximum allowed metadata size\"),\n-  METHOD_NOT_ALLOWED(\n-      \"MethodNotAllowed\", \"The specified method is not allowed against this resource\"),\n-  MISSING_ATTACHMENT(\"MissingAttachment\", \"A SOAP attachment was expected, but none were found\"),\n-  MISSING_CONTENT_LENGTH(\"MissingContentLength\", \"missing the Content-Length HTTP header\"),\n-  MISSING_REQUEST_BODY_ERROR(\"MissingRequestBodyError\", \"Request body is empty\"),\n-  MISSING_SECURITY_ELEMENT(\n-      \"MissingSecurityElement\", \"The SOAP 1.1 request is missing a security element\"),\n-  MISSING_SECURITY_HEADER(\"MissingSecurityHeader\", \"Request is missing a required header\"),\n-  NO_LOGGING_STATUS_FOR_KEY(\n-      \"NoLoggingStatusForKey\", \"There is no such thing as a logging status subresource for a key\"),\n-  NO_SUCH_BUCKET(\"NoSuchBucket\", \"Bucket does not exist\"),\n-  NO_SUCH_KEY(\"NoSuchKey\", \"Object does not exist\"),\n-  NO_SUCH_LIFECYCLE_CONFIGURATION(\n-      \"NoSuchLifecycleConfiguration\", \"The lifecycle configuration does not exist\"),\n-  NO_SUCH_UPLOAD(\"NoSuchUpload\", \"Multipart upload does not exist\"),\n-  NO_SUCH_VERSION(\"NoSuchVersion\", \"Specified version ID does not match an existing version\"),\n-  NOT_IMPLEMENTED(\n-      \"NotImplemented\", \"A header you provided implies functionality that is not implemented.\"),\n-  NOT_SIGNED_UP(\"NotSignedUp\", \"Account is not signed up\"),\n-  NO_SUCH_BUCKET_POLICY(\"NoSuchBucketPolicy\", \"Bucket does not have a bucket policy\"),\n-  NO_SUCH_OBJECT_LOCK_CONFIGURATION(\n-      \"NoSuchObjectLockConfiguration\",\n-      \"The specified object does not have a ObjectLock configuration\"),\n-  NO_SUCH_TAG_SET(\"NoSuchTagSet\", \"The TagSet does not exist\"),\n-  OPERATION_ABORTED(\n-      \"OperationAborted\",\n-      \"A conflicting conditional operation is currently in progress \"\n-          + \"against this resource. Try again\"),\n-  PERMANENT_REDIRECT(\n-      \"PermanentRedirect\", \"Access to the bucket permanently redirected to this endpoint\"),\n-  PRECONDITION_FAILED(\"PreconditionFailed\", \"One of the preconditions specified did not hold\"),\n-  REDIRECT(\"Redirect\", \"Temporary redirect\"),\n-  RESTORE_ALREADY_IN_PROGRESS(\"RestoreAlreadyInProgress\", \"Object restore is already in progress\"),\n-  REQUEST_IS_NOT_MULTI_PART_CONTENT(\n-      \"RequestIsNotMultiPartContent\",\n-      \"Bucket POST must be of the enclosure-type multipart/form-data\"),\n-  REQUEST_TIMEOUT(\"RequestTimeout\", \"request timed out\"),\n-  REQUEST_TIME_TOO_SKEWED(\n-      \"RequestTimeTooSkewed\",\n-      \"The difference between the request time and the server's time is too large\"),\n-  REQUEST_TORRENT_OF_BUCKET_ERROR(\n-      \"RequestTorrentOfBucketError\", \"Requesting the torrent file of a bucket is not permitted\"),\n-  SIGNATURE_DOES_NOT_MATCH(\"SignatureDoesNotMatch\", \"The request signature does not match\"),\n-  SERVER_SIDE_ENCRYPTION_CONFIGURATION_NOT_FOUND_ERROR(\n-      \"ServerSideEncryptionConfigurationNotFoundError\",\n-      \"The server side encryption configuration was not found\"),\n-  SERVICE_UNAVAILABLE(\"ServiceUnavailable\", \"Service unavailable.  Retry again\"),\n-  SLOW_DOWN(\"SlowDown\", \"Reduce request rate\"),\n-  TEMPORARY_REDIRECT(\"TemporaryRedirect\", \"Temporary redirect due to DNS updates in progress\"),\n-  TOKEN_REFRESH_REQUIRED(\"TokenRefreshRequired\", \"The provided token must be refreshed\"),\n-  TOO_MANY_BUCKETS(\"TooManyBuckets\", \"Bucket creation is not allowed due to maximum limit reached\"),\n-  UNEXPECTED_CONTENT(\"UnexpectedContent\", \"Request does not support content\"),\n-  UNRESOLVABLE_GRANT_BY_EMAIL_ADDRESS(\n-      \"UnresolvableGrantByEmailAddress\", \"The email address provided does not match\"),\n-  USER_KEY_MUST_BE_SPECIFIED(\n-      \"UserKeyMustBeSpecified\",\n-      \"The bucket POST must contain the specified field name or check the order of the fields\"),\n-  X_AMZ_CONTENT_SHA256_MISMATCH(\"XAmzContentSHA256Mismatch\", \"content SHA256 mismatch\");\n-\n-  private final String code;\n-  private final String message;\n-\n-  private ErrorCode(String code, String message) {\n-    this.code = code;\n-    this.message = message;\n-  }\n-\n-  public String code() {\n-    return this.code;\n-  }\n-\n-  public String message() {\n-    return this.message;\n-  }\n-\n-  /** Returns ErrorCode of given code string. */\n-  public static ErrorCode fromString(String codeString) {\n-    for (ErrorCode ec : ErrorCode.values()) {\n-      if (codeString.equals(ec.code)) {\n-        return ec;\n-      }\n-    }\n-\n-    throw new IllegalArgumentException(\"unknown error code string '\" + codeString + \"'\");\n-  }\n-\n-  /** XML converter class. */\n-  public static class ErrorCodeConverter implements Converter<ErrorCode> {\n-    @Override\n-    public ErrorCode read(InputNode node) throws Exception {\n-      return ErrorCode.fromString(node.getValue());\n-    }\n-\n-    @Override\n-    public void write(OutputNode node, ErrorCode errorCode) throws Exception {\n-      node.setValue(errorCode.code());\n-    }\n-  }\n-}\n"}}, {"oid": "634c5421ba6b0eff5f6a5f4120d84d33cdadc4ed", "url": "https://github.com/minio/minio-java/commit/634c5421ba6b0eff5f6a5f4120d84d33cdadc4ed", "message": "Handle error code generically for any S3 service.", "committedDate": "2020-07-28T05:41:11Z", "type": "forcePushed"}, {"oid": "4e82b8b1231e7f7415b9bafd70a7c269534e4270", "url": "https://github.com/minio/minio-java/commit/4e82b8b1231e7f7415b9bafd70a7c269534e4270", "message": "Handle error code generically for any S3 service.", "committedDate": "2020-07-28T05:44:53Z", "type": "commit"}, {"oid": "4e82b8b1231e7f7415b9bafd70a7c269534e4270", "url": "https://github.com/minio/minio-java/commit/4e82b8b1231e7f7415b9bafd70a7c269534e4270", "message": "Handle error code generically for any S3 service.", "committedDate": "2020-07-28T05:44:53Z", "type": "forcePushed"}]}