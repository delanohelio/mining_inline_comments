{"pr_number": 1000, "pr_title": "simplify multimap creation", "pr_createdAt": "2020-07-01T09:44:55Z", "pr_url": "https://github.com/minio/minio-java/pull/1000", "timeline": [{"oid": "304e7ced74ef174614bb5e490a1c20a6dcdd04dc", "url": "https://github.com/minio/minio-java/commit/304e7ced74ef174614bb5e490a1c20a6dcdd04dc", "message": "simplify multimap creation", "committedDate": "2020-07-02T05:19:43Z", "type": "forcePushed"}, {"oid": "e682d3b0b9ad59a73fe1808c861eb21da6f34e86", "url": "https://github.com/minio/minio-java/commit/e682d3b0b9ad59a73fe1808c861eb21da6f34e86", "message": "simplify multimap creation", "committedDate": "2020-07-03T03:11:17Z", "type": "forcePushed"}, {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d", "url": "https://github.com/minio/minio-java/commit/2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d", "message": "simplify multimap creation", "committedDate": "2020-07-03T03:14:46Z", "type": "commit"}, {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d", "url": "https://github.com/minio/minio-java/commit/2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d", "message": "simplify multimap creation", "committedDate": "2020-07-03T03:14:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDY3OQ==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449570679", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Multimap<String, String> multimap = HashMultimap.create();\n          \n          \n            \n                if (map != null) multimap.putAll(map);\n          \n          \n            \n                return multimap;\n          \n          \n            \n                return (map != null) ? HashMultimap.create(map) : HashMultimap.create();", "author": "anjalshireesh", "createdAt": "2020-07-03T12:58:17Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -721,15 +721,37 @@ private void checkReadRequestSse(ServerSideEncryption sse) throws IllegalArgumen\n \n   private Multimap<String, String> merge(Multimap<String, String> m1, Multimap<String, String> m2) {\n     Multimap<String, String> map = HashMultimap.create();\n-    if (m1 != null) {\n-      map.putAll(m1);\n+    if (m1 != null) map.putAll(m1);\n+    if (m2 != null) map.putAll(m2);\n+    return map;\n+  }\n+\n+  /** Create new HashMultimap by alternating keys and values. */\n+  private Multimap<String, String> newMultimap(String... keysAndValues) {\n+    if (keysAndValues.length % 2 != 0) {\n+      throw new IllegalArgumentException(\"Expected alternating keys and values\");\n     }\n-    if (m2 != null) {\n-      map.putAll(m2);\n+\n+    Multimap<String, String> map = HashMultimap.create();\n+    for (int i = 0; i < keysAndValues.length; i += 2) {\n+      map.put(keysAndValues[i], keysAndValues[i + 1]);\n     }\n+\n     return map;\n   }\n \n+  /** Create new HashMultimap with copy of Map. */\n+  private Multimap<String, String> newMultimap(Map<String, String> map) {\n+    return (map != null) ? Multimaps.forMap(map) : HashMultimap.create();\n+  }\n+\n+  /** Create new HashMultimap with copy of Multimap. */\n+  private Multimap<String, String> newMultimap(Multimap<String, String> map) {\n+    Multimap<String, String> multimap = HashMultimap.create();\n+    if (map != null) multimap.putAll(map);\n+    return multimap;", "originalCommit": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYyOTQzNg==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449629436", "bodyText": "done", "author": "balamurugana", "createdAt": "2020-07-03T15:14:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDY3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5a4d595102ee89ebccd5553ef0aa72728255a732", "chunk": "diff --git a/api/src/main/java/io/minio/MinioClient.java b/api/src/main/java/io/minio/MinioClient.java\nindex c2bdc725..3779b9a5 100755\n--- a/api/src/main/java/io/minio/MinioClient.java\n+++ b/api/src/main/java/io/minio/MinioClient.java\n\n@@ -747,9 +747,7 @@ public class MinioClient {\n \n   /** Create new HashMultimap with copy of Multimap. */\n   private Multimap<String, String> newMultimap(Multimap<String, String> map) {\n-    Multimap<String, String> multimap = HashMultimap.create();\n-    if (map != null) multimap.putAll(map);\n-    return multimap;\n+    return (map != null) ? HashMultimap.create(map) : HashMultimap.create();\n   }\n \n   private HttpUrl buildUrl(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU4NTc3Mw==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449585773", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String range =\n          \n          \n            \n                    (offset != null)\n          \n          \n            \n                        ? (\"bytes=\" + offset + \"-\" + (length != null ? offset + length - 1 : \"\"))\n          \n          \n            \n                        : null;\n          \n          \n            \n                String range = null;\n          \n          \n            \n                if(offset != null) {\n          \n          \n            \n                  range = \"bytes=\" + offset + \"-\";\n          \n          \n            \n                  if(length != null) {\n          \n          \n            \n                    range = range + (offset + length - 1);\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nCouple of more lines, but I think this is more readable.", "author": "anjalshireesh", "createdAt": "2020-07-03T13:32:26Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -1692,16 +1707,14 @@ public InputStream getObject(GetObjectArgs args)\n       offset = 0L;\n     }\n \n-    Multimap<String, String> headers = HashMultimap.create();\n-    if (length != null) {\n-      headers.put(\"Range\", \"bytes=\" + offset + \"-\" + (offset + length - 1));\n-    } else if (offset != null) {\n-      headers.put(\"Range\", \"bytes=\" + offset + \"-\");\n-    }\n+    String range =\n+        (offset != null)\n+            ? (\"bytes=\" + offset + \"-\" + (length != null ? offset + length - 1 : \"\"))\n+            : null;", "originalCommit": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMDE4Mg==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449630182", "bodyText": "done", "author": "balamurugana", "createdAt": "2020-07-03T15:16:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU4NTc3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5a4d595102ee89ebccd5553ef0aa72728255a732", "chunk": "diff --git a/api/src/main/java/io/minio/MinioClient.java b/api/src/main/java/io/minio/MinioClient.java\nindex c2bdc725..3779b9a5 100755\n--- a/api/src/main/java/io/minio/MinioClient.java\n+++ b/api/src/main/java/io/minio/MinioClient.java\n\n@@ -1707,10 +1705,13 @@ public class MinioClient {\n       offset = 0L;\n     }\n \n-    String range =\n-        (offset != null)\n-            ? (\"bytes=\" + offset + \"-\" + (length != null ? offset + length - 1 : \"\"))\n-            : null;\n+    String range = null;\n+    if (offset != null) {\n+      range = \"bytes=\" + offset + \"-\";\n+      if (length != null) {\n+        range = range + (offset + length - 1);\n+      }\n+    }\n \n     Multimap<String, String> headers = HashMultimap.create();\n     if (range != null) headers.put(\"Range\", range);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU4OTA1Nw==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449589057", "bodyText": "Earlier, when the condition was false (bypassGovernanceMode() / args.versionId() != null), an empty multimap was being passed. Now null is being passed. Is this fine?", "author": "anjalshireesh", "createdAt": "2020-07-03T13:39:50Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2876,14 +2889,12 @@ public void removeObject(RemoveObjectArgs args)\n           InvalidResponseException, IOException, NoSuchAlgorithmException, ServerException,\n           XmlParserException {\n     checkArgs(args);\n-\n-    Multimap<String, String> headers = HashMultimap.create();\n-    if (args.bypassGovernanceMode()) headers.put(\"x-amz-bypass-governance-retention\", \"true\");\n-\n-    Multimap<String, String> queryParams = HashMultimap.create();\n-    if (args.versionId() != null) queryParams.put(\"versionId\", args.versionId());\n-\n-    executeDelete(args, headers, queryParams);\n+    executeDelete(\n+        args,\n+        args.bypassGovernanceMode()\n+            ? newMultimap(\"x-amz-bypass-governance-retention\", \"true\")\n+            : null,\n+        (args.versionId() != null) ? newMultimap(\"versionId\", args.versionId()) : null);", "originalCommit": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMDY2Mw==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449630663", "bodyText": "No problem. execute() takes care null values properly.", "author": "balamurugana", "createdAt": "2020-07-03T15:17:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU4OTA1Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5MTY3NA==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449591674", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        (!region.equals(US_EAST_1)) ? new CreateBucketConfiguration(region) : null,\n          \n          \n            \n                        region.equals(US_EAST_1) ? null : new CreateBucketConfiguration(region),\n          \n      \n    \n    \n  \n\nThis would be simpler", "author": "anjalshireesh", "createdAt": "2020-07-03T13:45:59Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3803,7 +3806,7 @@ public void makeBucket(MakeBucketArgs args)\n             region,\n             merge(args.extraHeaders(), headers),\n             args.extraQueryParams(),\n-            config,\n+            (!region.equals(US_EAST_1)) ? new CreateBucketConfiguration(region) : null,", "originalCommit": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMTMyOA==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449631328", "bodyText": "done", "author": "balamurugana", "createdAt": "2020-07-03T15:19:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5MTY3NA=="}], "type": "inlineReview", "revised_code": {"commit": "5a4d595102ee89ebccd5553ef0aa72728255a732", "chunk": "diff --git a/api/src/main/java/io/minio/MinioClient.java b/api/src/main/java/io/minio/MinioClient.java\nindex c2bdc725..3779b9a5 100755\n--- a/api/src/main/java/io/minio/MinioClient.java\n+++ b/api/src/main/java/io/minio/MinioClient.java\n\n@@ -3806,7 +3807,7 @@ public class MinioClient {\n             region,\n             merge(args.extraHeaders(), headers),\n             args.extraQueryParams(),\n-            (!region.equals(US_EAST_1)) ? new CreateBucketConfiguration(region) : null,\n+            region.equals(US_EAST_1) ? null : new CreateBucketConfiguration(region),\n             0)) {\n       if (isAwsHost) {\n         AwsRegionCache.INSTANCE.set(args.bucket(), region);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5NDQzMw==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449594433", "bodyText": "Earlier, when the condition was false (bypassGovernanceMode()), an empty multimap was being passed. Now null is being passed. Is this fine?", "author": "anjalshireesh", "createdAt": "2020-07-03T13:52:17Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -4249,15 +4232,17 @@ public void setObjectRetention(SetObjectRetentionArgs args)\n           InvalidResponseException, IOException, NoSuchAlgorithmException, ServerException,\n           XmlParserException {\n     checkArgs(args);\n-\n-    Multimap<String, String> queryParams = HashMultimap.create();\n-    queryParams.put(\"retention\", \"\");\n+    Multimap<String, String> queryParams = newMultimap(\"retention\", \"\");\n     if (args.versionId() != null) queryParams.put(\"versionId\", args.versionId());\n-\n-    Multimap<String, String> headers = HashMultimap.create();\n-    if (args.bypassGovernanceMode()) headers.put(\"x-amz-bypass-governance-retention\", \"True\");\n-\n-    Response response = executePut(args, headers, queryParams, args.config(), 0);\n+    Response response =\n+        executePut(\n+            args,\n+            args.bypassGovernanceMode()\n+                ? newMultimap(\"x-amz-bypass-governance-retention\", \"True\")\n+                : null,", "originalCommit": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMTQ2Mg==", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449631462", "bodyText": "No problem.", "author": "balamurugana", "createdAt": "2020-07-03T15:19:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5NDQzMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "5a4d595102ee89ebccd5553ef0aa72728255a732", "url": "https://github.com/minio/minio-java/commit/5a4d595102ee89ebccd5553ef0aa72728255a732", "message": "address review comments", "committedDate": "2020-07-03T15:24:37Z", "type": "commit"}, {"oid": "5a4d595102ee89ebccd5553ef0aa72728255a732", "url": "https://github.com/minio/minio-java/commit/5a4d595102ee89ebccd5553ef0aa72728255a732", "message": "address review comments", "committedDate": "2020-07-03T15:24:37Z", "type": "forcePushed"}]}