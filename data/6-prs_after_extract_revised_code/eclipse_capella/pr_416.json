{"pr_number": 416, "pr_title": "[568312] Project preferences and export no longer works", "pr_createdAt": "2020-10-27T08:24:27Z", "pr_url": "https://github.com/eclipse/capella/pull/416", "timeline": [{"oid": "2838b20eba48acb05e90c5687ccfb569e86b3810", "url": "https://github.com/eclipse/capella/commit/2838b20eba48acb05e90c5687ccfb569e86b3810", "message": "Move preference Store\n\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-27T16:17:07Z", "type": "forcePushed"}, {"oid": "4afda22bc3118a6e8dd0e8e239076597168ad429", "url": "https://github.com/eclipse/capella/commit/4afda22bc3118a6e8dd0e8e239076597168ad429", "message": "[568312] Project preferences no longer work properly\n\nWe were setting default preference store on fields and a second time\nwith the properties page one.\n\nWe still save Preferences in .settings and in\nIProject.persistentProperty, even if it seems useless. I have remove\npageId field as we don't use it when we read IProject.persistentProperty\nproperties\n\nBug: 568312\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-27T17:16:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3OTA5NA==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512879094", "bodyText": "moved to parent class handling UserMode, ConfigurableFieldEditorPreferencePage", "author": "pdulth", "createdAt": "2020-10-27T17:18:31Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java", "diffHunk": "@@ -67,20 +61,7 @@ public AbstractDefaultPreferencePage(String pageId) {\n     setTitle(getPageTitle());\n     setDescription(getPageDescription());\n   }\n-\n-  \n-  \n   \n-  /**\n-   * @see org.eclipse.ui.IWorkbenchPreferencePage#init(org.eclipse.ui.IWorkbench)\n-   */\n-  protected void setEnable(Composite parent, UserProfileModeEnum userMode) {", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NTA4OA==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512885088", "bodyText": "already done in jface", "author": "pdulth", "createdAt": "2020-10-27T17:26:09Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java", "diffHunk": "@@ -92,42 +73,16 @@ protected void setEnable(Composite parent, UserProfileModeEnum userMode) {\n    * @return\n    */\n   protected abstract String getPageDescription();\n-\n-  /**\n-   * @see org.eclipse.jface.preference.FieldEditorPreferencePage#performOk()\n-   */\n-  @Override\n-  public boolean performOk() {\n-    boolean ok = super.performOk();\n-    IPreferenceStore store = getPreferenceStore();", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java\nindex 604a10268..c30c1710e 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java\n\n@@ -73,16 +72,33 @@ public abstract class AbstractDefaultPreferencePage extends ConfigurableFieldEdi\n    * @return\n    */\n   protected abstract String getPageDescription();\n+\n+  /**\n+   * @see org.eclipse.jface.preference.FieldEditorPreferencePage#performOk()\n+   */\n+  @Override\n+  public boolean performOk() {\n+    boolean ok = super.performOk();\n+    IPreferenceStore store = getPreferenceStore();\n+    if (store instanceof IPersistentPreferenceStore) {\n+      try {\n+\n+        ((IPersistentPreferenceStore) store).save();\n+\n+      } catch (IOException e) {\n+        StringBuilder loggerMessage = new StringBuilder(Messages.AbstractDefaultPreferencePage_SavePreferences_ErrorMessage);\n+        __logger.warn(loggerMessage.toString(), e);\n+        return false;\n+      }\n+    }\n+\n+    return ok;\n+  }\n   \n   public boolean performCancel() {\n \t  return true;\n   }\n \n-  @Override\n-  protected IPreferenceStore doGetPreferenceStore() {\n-    return Activator.getDefault().getPreferenceStore();\n-  }\n-  \n   /**\n    * Create a new group in the page.\n    * @param label_p\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NTI5NQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512885295", "bodyText": "useless", "author": "pdulth", "createdAt": "2020-10-27T17:26:21Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java", "diffHunk": "@@ -92,42 +73,16 @@ protected void setEnable(Composite parent, UserProfileModeEnum userMode) {\n    * @return\n    */\n   protected abstract String getPageDescription();\n-\n-  /**\n-   * @see org.eclipse.jface.preference.FieldEditorPreferencePage#performOk()\n-   */\n-  @Override\n-  public boolean performOk() {\n-    boolean ok = super.performOk();\n-    IPreferenceStore store = getPreferenceStore();\n-    if (store instanceof IPersistentPreferenceStore) {\n-      try {\n-\n-        ((IPersistentPreferenceStore) store).save();\n-\n-      } catch (IOException e) {\n-        StringBuilder loggerMessage = new StringBuilder(Messages.AbstractDefaultPreferencePage_SavePreferences_ErrorMessage);\n-        __logger.warn(loggerMessage.toString(), e);\n-        return false;\n-      }\n-    }\n-\n-    return ok;\n-  }\n   \n   public boolean performCancel() {\n-      \n \t  return true;\n   }\n \n-  public IPreferenceStore getProjectPreferenceStore() {", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java\nindex 604a10268..c30c1710e 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/AbstractDefaultPreferencePage.java\n\n@@ -73,16 +72,33 @@ public abstract class AbstractDefaultPreferencePage extends ConfigurableFieldEdi\n    * @return\n    */\n   protected abstract String getPageDescription();\n+\n+  /**\n+   * @see org.eclipse.jface.preference.FieldEditorPreferencePage#performOk()\n+   */\n+  @Override\n+  public boolean performOk() {\n+    boolean ok = super.performOk();\n+    IPreferenceStore store = getPreferenceStore();\n+    if (store instanceof IPersistentPreferenceStore) {\n+      try {\n+\n+        ((IPersistentPreferenceStore) store).save();\n+\n+      } catch (IOException e) {\n+        StringBuilder loggerMessage = new StringBuilder(Messages.AbstractDefaultPreferencePage_SavePreferences_ErrorMessage);\n+        __logger.warn(loggerMessage.toString(), e);\n+        return false;\n+      }\n+    }\n+\n+    return ok;\n+  }\n   \n   public boolean performCancel() {\n \t  return true;\n   }\n \n-  @Override\n-  protected IPreferenceStore doGetPreferenceStore() {\n-    return Activator.getDefault().getPreferenceStore();\n-  }\n-  \n   /**\n    * Create a new group in the page.\n    * @param label_p\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NTg5NA==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512885894", "bodyText": "already done in FieldEditorPropertyPreferencePage", "author": "pdulth", "createdAt": "2020-10-27T17:27:02Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java", "diffHunk": "@@ -19,82 +19,53 @@\n import java.util.List;\n import java.util.Map;\n \n-import org.eclipse.core.resources.IResource;\n-import org.eclipse.core.runtime.IAdaptable;\n import org.eclipse.core.runtime.ListenerList;\n-import org.eclipse.core.runtime.Platform;\n import org.eclipse.core.runtime.Preferences;\n import org.eclipse.core.runtime.Preferences.IPropertyChangeListener;\n import org.eclipse.jface.dialogs.IPageChangeProvider;\n import org.eclipse.jface.dialogs.IPageChangedListener;\n import org.eclipse.jface.dialogs.PageChangedEvent;\n import org.eclipse.jface.preference.FieldEditor;\n-import org.eclipse.jface.preference.IPreferenceStore;\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.widgets.Composite;\n-import org.eclipse.swt.widgets.Control;\n import org.eclipse.ui.IWorkbench;\n-import org.eclipse.ui.IWorkbenchPropertyPage;\n-import org.osgi.service.prefs.BackingStoreException;\n import org.polarsys.capella.core.commands.preferences.preferences.ConfigurabilityPreferences;\n import org.polarsys.capella.core.commands.preferences.util.XmlPreferencesConfig;\n-import org.polarsys.capella.core.preferences.Activator;\n \n /**\n  * A special abstract preference page to host field editors.\n  * <p>\n- * Subclasses must implement the <code>createFieldEditors</code> method and should override <code>createLayout</code> if a special layout of the field editors\n- * is needed.\n+ * Subclasses must implement the <code>createFieldEditors</code> method and should override <code>createLayout</code> if\n+ * a special layout of the field editors is needed.\n  * </p>\n  */\n-public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorPropertyPreferencePage implements IConfigurableFieldEditorPreferencePage,\n-    IWorkbenchPropertyPage, IPageChangeProvider, IPropertyChangeListener {\n+public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorPropertyPreferencePage\n+    implements IConfigurableFieldEditorPreferencePage, IPageChangeProvider {\n \n   private String pageId;\n \n-  private IAdaptable element;\n-\n-  @Override", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\nindex da1c8b878..1159530ea 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n\n@@ -20,17 +20,19 @@ import java.util.List;\n import java.util.Map;\n \n import org.eclipse.core.runtime.ListenerList;\n-import org.eclipse.core.runtime.Preferences;\n-import org.eclipse.core.runtime.Preferences.IPropertyChangeListener;\n+import org.eclipse.core.runtime.Platform;\n import org.eclipse.jface.dialogs.IPageChangeProvider;\n import org.eclipse.jface.dialogs.IPageChangedListener;\n import org.eclipse.jface.dialogs.PageChangedEvent;\n import org.eclipse.jface.preference.FieldEditor;\n+import org.eclipse.jface.preference.IPreferenceStore;\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.widgets.Composite;\n import org.eclipse.ui.IWorkbench;\n+import org.osgi.service.prefs.BackingStoreException;\n import org.polarsys.capella.core.commands.preferences.preferences.ConfigurabilityPreferences;\n import org.polarsys.capella.core.commands.preferences.util.XmlPreferencesConfig;\n+import org.polarsys.capella.core.preferences.Activator;\n \n /**\n  * A special abstract preference page to host field editors.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NjA1Mw==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512886053", "bodyText": "useless", "author": "pdulth", "createdAt": "2020-10-27T17:27:12Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java", "diffHunk": "@@ -19,82 +19,53 @@\n import java.util.List;\n import java.util.Map;\n \n-import org.eclipse.core.resources.IResource;\n-import org.eclipse.core.runtime.IAdaptable;\n import org.eclipse.core.runtime.ListenerList;\n-import org.eclipse.core.runtime.Platform;\n import org.eclipse.core.runtime.Preferences;\n import org.eclipse.core.runtime.Preferences.IPropertyChangeListener;\n import org.eclipse.jface.dialogs.IPageChangeProvider;\n import org.eclipse.jface.dialogs.IPageChangedListener;\n import org.eclipse.jface.dialogs.PageChangedEvent;\n import org.eclipse.jface.preference.FieldEditor;\n-import org.eclipse.jface.preference.IPreferenceStore;\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.widgets.Composite;\n-import org.eclipse.swt.widgets.Control;\n import org.eclipse.ui.IWorkbench;\n-import org.eclipse.ui.IWorkbenchPropertyPage;\n-import org.osgi.service.prefs.BackingStoreException;\n import org.polarsys.capella.core.commands.preferences.preferences.ConfigurabilityPreferences;\n import org.polarsys.capella.core.commands.preferences.util.XmlPreferencesConfig;\n-import org.polarsys.capella.core.preferences.Activator;\n \n /**\n  * A special abstract preference page to host field editors.\n  * <p>\n- * Subclasses must implement the <code>createFieldEditors</code> method and should override <code>createLayout</code> if a special layout of the field editors\n- * is needed.\n+ * Subclasses must implement the <code>createFieldEditors</code> method and should override <code>createLayout</code> if\n+ * a special layout of the field editors is needed.\n  * </p>\n  */\n-public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorPropertyPreferencePage implements IConfigurableFieldEditorPreferencePage,\n-    IWorkbenchPropertyPage, IPageChangeProvider, IPropertyChangeListener {\n+public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorPropertyPreferencePage\n+    implements IConfigurableFieldEditorPreferencePage, IPageChangeProvider {\n \n   private String pageId;\n \n-  private IAdaptable element;\n-\n-  @Override\n-  public void setElement(IAdaptable elt) {\n-    this.element = elt;\n-  }\n-\n-  @Override\n-  public IAdaptable getElement() {\n-    return element;\n-  }\n-\n-  /*\n-\t * \n-\t */\n   private ListenerList pageChangedListener = new ListenerList();\n \n-  /*\n-\t * \n-\t */\n+  public static Map<FieldEditor, Composite> EXPERT_FIELD_EDITORS = new HashMap<>(0);\n \n-  public static Map<FieldEditor, Composite> EXPERT_FIEL_EDITORS = new HashMap<>(0);\n-  \n-  \n-  public static List<Composite> COMPOSITE_FIEL_EDITORS = new ArrayList<>(0);\n+  public static List<Composite> COMPOSITE_FIELD_EDITORS = new ArrayList<>(0);\n \n   /**\n    * Creates a new field editor preference page with the given style, an empty title, and no image.\n-   * @param style either <code>GRID</code> or <code>FLAT</code>\n+   * \n+   * @param style\n+   *          either <code>GRID</code> or <code>FLAT</code>\n    */\n   protected ConfigurableFieldEditorPreferencePage(int style) {\n     super(style);\n-\n   }\n \n   /**\n-   * Creates a new field editor preference page with the given style, an empty title, and no image.\n+   * Creates a new field editor preference page with the style FLAT, an empty title, and no image.\n    */\n   protected ConfigurableFieldEditorPreferencePage(String id) {\n     super(SWT.FLAT);\n     this.pageId = id;\n-    getPropertyPagesIdentifients().add(pageId);", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\nindex da1c8b878..1159530ea 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n\n@@ -20,17 +20,19 @@ import java.util.List;\n import java.util.Map;\n \n import org.eclipse.core.runtime.ListenerList;\n-import org.eclipse.core.runtime.Preferences;\n-import org.eclipse.core.runtime.Preferences.IPropertyChangeListener;\n+import org.eclipse.core.runtime.Platform;\n import org.eclipse.jface.dialogs.IPageChangeProvider;\n import org.eclipse.jface.dialogs.IPageChangedListener;\n import org.eclipse.jface.dialogs.PageChangedEvent;\n import org.eclipse.jface.preference.FieldEditor;\n+import org.eclipse.jface.preference.IPreferenceStore;\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.widgets.Composite;\n import org.eclipse.ui.IWorkbench;\n+import org.osgi.service.prefs.BackingStoreException;\n import org.polarsys.capella.core.commands.preferences.preferences.ConfigurabilityPreferences;\n import org.polarsys.capella.core.commands.preferences.util.XmlPreferencesConfig;\n+import org.polarsys.capella.core.preferences.Activator;\n \n /**\n  * A special abstract preference page to host field editors.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NjE2OQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512886169", "bodyText": "unused", "author": "pdulth", "createdAt": "2020-10-27T17:27:20Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java", "diffHunk": "@@ -105,35 +76,25 @@ public void init(IWorkbench workbench) {\n     this.addPageChangedListener(new EclipseNodePreferencesChangeListener());\n   }\n \n-  public void propertyChange(Preferences.PropertyChangeEvent event) {", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\nindex da1c8b878..1159530ea 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n\n@@ -90,11 +92,13 @@ public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorP\n       parent.setEnabled(\n           ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n     }\n+    editor.setPreferenceStore(Activator.getDefault().getPreferenceStore());\n     super.addField(editor);\n   }\n \n+  @Override\n   protected String getPageId() {\n-    return pageId;\n+    return this.pageId;\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NjMxMg==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512886312", "bodyText": "already in FieldEditorPropertyPreferencePage", "author": "pdulth", "createdAt": "2020-10-27T17:27:31Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java", "diffHunk": "@@ -105,35 +76,25 @@ public void init(IWorkbench workbench) {\n     this.addPageChangedListener(new EclipseNodePreferencesChangeListener());\n   }\n \n-  public void propertyChange(Preferences.PropertyChangeEvent event) {\n-  }\n-\n   /**\n    * @param editor\n    * @param userProfileModeEnum\n    * @param parent\n    */\n   protected void addField(FieldEditor editor, UserProfileModeEnum userProfileModeEnum, Composite parent) {\n     if (UserProfileModeEnum.Expert.equals(userProfileModeEnum) && (parent != null) && !parent.isDisposed()) {\n-      EXPERT_FIEL_EDITORS.put(editor, parent);\n-      editor.setEnabled(ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID), parent);\n-      parent.setEnabled(ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n+      EXPERT_FIELD_EDITORS.put(editor, parent);\n+      editor.setEnabled(\n+          ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID),\n+          parent);\n+      parent.setEnabled(\n+          ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n     }\n-    editor.setPreferenceStore(Activator.getDefault().getPreferenceStore());\n     super.addField(editor);\n   }\n \n-  @Override\n   protected String getPageId() {\n-    return this.pageId;\n-  }\n-\n-  /**\n-   * @return\n-   */\n-  @Override\n-  public boolean isPropertyPage() {", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\nindex da1c8b878..1159530ea 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n\n@@ -90,11 +92,13 @@ public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorP\n       parent.setEnabled(\n           ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n     }\n+    editor.setPreferenceStore(Activator.getDefault().getPreferenceStore());\n     super.addField(editor);\n   }\n \n+  @Override\n   protected String getPageId() {\n-    return pageId;\n+    return this.pageId;\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NjUxNw==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512886517", "bodyText": "useless", "author": "pdulth", "createdAt": "2020-10-27T17:27:44Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java", "diffHunk": "@@ -143,21 +104,21 @@ public boolean isPropertyPage() {\n    */\n   protected void addField(FieldEditor editor, UserProfileModeEnum userProfileModeEnum, Composite parent, Class scope) {\n     if (UserProfileModeEnum.Expert.equals(userProfileModeEnum) && (parent != null) && !parent.isDisposed()) {\n-      EXPERT_FIEL_EDITORS.put(editor, parent);\n-      editor.setEnabled(ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID), parent);\n-      parent.setEnabled(ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n-    } else if(parent != null){\n+      EXPERT_FIELD_EDITORS.put(editor, parent);\n+      editor.setEnabled(\n+          ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID),\n+          parent);\n+      parent.setEnabled(\n+          ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n+    } else if (parent != null) {\n       editor.setEnabled(true, parent);\n       parent.setEnabled(true);\n     }\n-    ScopedCapellaPreferencesStore.fields.put(editor, null);", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "583af94afd0a0e89ec086c16832b73d411ad4fe4", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\nindex da1c8b878..0cc5a96c9 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n\n@@ -121,7 +121,15 @@ public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorP\n   protected void addField(FieldEditor editor) {\n     this.addField(editor, UserProfileModeEnum.User, null);\n   }\n-\n+  \n+  /**\n+   * @see org.eclipse.ui.IWorkbenchPreferencePage#init(org.eclipse.ui.IWorkbench)\n+   */\n+  protected void setEnable(Composite parent, UserProfileModeEnum userMode) {\n+    parent.setEnabled(ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n+    COMPOSITE_FIELD_EDITORS.add(parent);\n+  }\n+  \n   @Override\n   protected void createFieldEditors() {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4Njg5Ng==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512886896", "bodyText": "now done in setPreferenceStore", "author": "pdulth", "createdAt": "2020-10-27T17:28:09Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java", "diffHunk": "@@ -143,21 +104,21 @@ public boolean isPropertyPage() {\n    */\n   protected void addField(FieldEditor editor, UserProfileModeEnum userProfileModeEnum, Composite parent, Class scope) {\n     if (UserProfileModeEnum.Expert.equals(userProfileModeEnum) && (parent != null) && !parent.isDisposed()) {\n-      EXPERT_FIEL_EDITORS.put(editor, parent);\n-      editor.setEnabled(ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID), parent);\n-      parent.setEnabled(ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n-    } else if(parent != null){\n+      EXPERT_FIELD_EDITORS.put(editor, parent);\n+      editor.setEnabled(\n+          ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID),\n+          parent);\n+      parent.setEnabled(\n+          ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n+    } else if (parent != null) {\n       editor.setEnabled(true, parent);\n       parent.setEnabled(true);\n     }\n-    ScopedCapellaPreferencesStore.fields.put(editor, null);\n-    editor.setPreferenceStore(Activator.getDefault().getPreferenceStore());", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "583af94afd0a0e89ec086c16832b73d411ad4fe4", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\nindex da1c8b878..0cc5a96c9 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n\n@@ -121,7 +121,15 @@ public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorP\n   protected void addField(FieldEditor editor) {\n     this.addField(editor, UserProfileModeEnum.User, null);\n   }\n-\n+  \n+  /**\n+   * @see org.eclipse.ui.IWorkbenchPreferencePage#init(org.eclipse.ui.IWorkbench)\n+   */\n+  protected void setEnable(Composite parent, UserProfileModeEnum userMode) {\n+    parent.setEnabled(ConfigurabilityPreferences.isInstanceScopePreferenceItemEnabled(XmlPreferencesConfig.USER_PROFILE_MODE_ID));\n+    COMPOSITE_FIELD_EDITORS.add(parent);\n+  }\n+  \n   @Override\n   protected void createFieldEditors() {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NzU3OQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512887579", "bodyText": "useless and risky super.getPreferenceStore call doGetPreferenceStore", "author": "pdulth", "createdAt": "2020-10-27T17:29:03Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java", "diffHunk": "@@ -197,69 +157,39 @@ public void addPageChangedListener(IPageChangedListener listener) {\n   @Override\n   public void removePageChangedListener(IPageChangedListener listener) {\n     pageChangedListener.remove(listener);\n-\n   }\n \n-  @Override\n-  public Control getControl() {\n-    return super.getControl();\n-  }\n+  public void enablePreferencesPage(boolean isEnable) {\n \n-  @Override\n-  protected IPreferenceStore doGetPreferenceStore() {\n-    if (isPropertyPage()) {\n-      return super.getPreferenceStore();", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\nindex da1c8b878..1159530ea 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n\n@@ -159,6 +173,26 @@ public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorP\n     pageChangedListener.remove(listener);\n   }\n \n+  @Override\n+  protected IPreferenceStore doGetPreferenceStore() {\n+    if (isPropertyPage()) {\n+      return super.getPreferenceStore();\n+    }\n+    return Activator.getDefault().getPreferenceStore();\n+  }\n+\n+  @Override\n+  public boolean performOk() {\n+    super.performOk();\n+    try {\n+      Platform.getPreferencesService().getRootNode().flush();\n+    } catch (BackingStoreException exception) {\n+      StringBuilder loggerMessage = new StringBuilder(\"ConfigurableFieldEditorPreferencePage.performOk(..) _ \"); //$NON-NLS-1$\n+    }\n+    ScopedCapellaPreferencesStore.getInstance(Activator.PLUGIN_ID).save();\n+    return super.performOk();\n+  }\n+\n   public void enablePreferencesPage(boolean isEnable) {\n \n     for (int i = 0; i < COMPOSITE_FIELD_EDITORS.size(); i++) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4ODE4NQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512888185", "bodyText": "useless, we already save preference store", "author": "pdulth", "createdAt": "2020-10-27T17:29:47Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java", "diffHunk": "@@ -197,69 +157,39 @@ public void addPageChangedListener(IPageChangedListener listener) {\n   @Override\n   public void removePageChangedListener(IPageChangedListener listener) {\n     pageChangedListener.remove(listener);\n-\n   }\n \n-  @Override\n-  public Control getControl() {\n-    return super.getControl();\n-  }\n+  public void enablePreferencesPage(boolean isEnable) {\n \n-  @Override\n-  protected IPreferenceStore doGetPreferenceStore() {\n-    if (isPropertyPage()) {\n-      return super.getPreferenceStore();\n-    }\n+    for (int i = 0; i < COMPOSITE_FIELD_EDITORS.size(); i++) {\n \n-    return Activator.getDefault().getPreferenceStore();\n-  }\n+      final Composite composite = COMPOSITE_FIELD_EDITORS.get(i);\n+      if ((composite != null) && composite.isDisposed()) {\n+        COMPOSITE_FIELD_EDITORS.remove(i);\n+      } else if (composite != null) {\n+        composite.setEnabled(isEnable);\n+        composite.pack();\n+      }\n \n-  @Override\n-  public boolean performOk() {\n-    super.performOk();\n-    try {", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\nindex da1c8b878..1159530ea 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/ConfigurableFieldEditorPreferencePage.java\n\n@@ -159,6 +173,26 @@ public abstract class ConfigurableFieldEditorPreferencePage extends FieldEditorP\n     pageChangedListener.remove(listener);\n   }\n \n+  @Override\n+  protected IPreferenceStore doGetPreferenceStore() {\n+    if (isPropertyPage()) {\n+      return super.getPreferenceStore();\n+    }\n+    return Activator.getDefault().getPreferenceStore();\n+  }\n+\n+  @Override\n+  public boolean performOk() {\n+    super.performOk();\n+    try {\n+      Platform.getPreferencesService().getRootNode().flush();\n+    } catch (BackingStoreException exception) {\n+      StringBuilder loggerMessage = new StringBuilder(\"ConfigurableFieldEditorPreferencePage.performOk(..) _ \"); //$NON-NLS-1$\n+    }\n+    ScopedCapellaPreferencesStore.getInstance(Activator.PLUGIN_ID).save();\n+    return super.performOk();\n+  }\n+\n   public void enablePreferencesPage(boolean isEnable) {\n \n     for (int i = 0; i < COMPOSITE_FIELD_EDITORS.size(); i++) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4OTE5Mg==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512889192", "bodyText": "moved to PropertyStore", "author": "pdulth", "createdAt": "2020-10-27T17:30:55Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java", "diffHunk": "@@ -213,109 +177,17 @@ protected void updateFieldEditors(boolean enabled) {\n     }\n   }\n \n-  /**\n-   * We override the performOk method. In case of property pages we copy the values in the overlay store into the property values of the selected project. We\n-   * also save the state of the radio buttons.\n-   * @see org.eclipse.jface.preference.IPreferencePage#performOk()\n-   */\n-  @Override\n-  public boolean performOk() {\n-    boolean result = super.performOk();\n-    if (isPropertyPage()) {\n-\n-      // Save state of radiobuttons in project properties\n-      IResource resource = (IResource) getElement();\n-      try {\n-        resource.setPersistentProperty(new QualifiedName(pageId, USEPROJECTSETTINGS), TRUE);", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "460a63f6f26932c409c4977e65219bda8a42fbe2", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\nindex d3b2fb78e..3444e356d 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n\n@@ -176,7 +176,7 @@ public abstract class FieldEditorPropertyPreferencePage extends FieldEditorPrefe\n       editor.setEnabled(enabled, parent);\n     }\n   }\n-\n+  \n   @Override\n   public boolean performCancel() {\n     IPreferenceStore store = (IPreferenceStore) getPreferenceStore();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4OTMyOQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512889329", "bodyText": "already done in jface", "author": "pdulth", "createdAt": "2020-10-27T17:31:04Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java", "diffHunk": "@@ -213,109 +177,17 @@ protected void updateFieldEditors(boolean enabled) {\n     }\n   }\n \n-  /**\n-   * We override the performOk method. In case of property pages we copy the values in the overlay store into the property values of the selected project. We\n-   * also save the state of the radio buttons.\n-   * @see org.eclipse.jface.preference.IPreferencePage#performOk()\n-   */\n-  @Override\n-  public boolean performOk() {\n-    boolean result = super.performOk();\n-    if (isPropertyPage()) {\n-\n-      // Save state of radiobuttons in project properties\n-      IResource resource = (IResource) getElement();\n-      try {\n-        resource.setPersistentProperty(new QualifiedName(pageId, USEPROJECTSETTINGS), TRUE);\n-\n-        resource.getPersistentProperty(new QualifiedName(pageId, USEPROJECTSETTINGS));\n-        if ((this.propertiesStore != null) && (this.propertiesStore instanceof IPropertyPersistentPreferenceStore)) {\n-          try {\n-            ((IPropertyPersistentPreferenceStore) this.propertiesStore).save();", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "460a63f6f26932c409c4977e65219bda8a42fbe2", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\nindex d3b2fb78e..3444e356d 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n\n@@ -176,7 +176,7 @@ public abstract class FieldEditorPropertyPreferencePage extends FieldEditorPrefe\n       editor.setEnabled(enabled, parent);\n     }\n   }\n-\n+  \n   @Override\n   public boolean performCancel() {\n     IPreferenceStore store = (IPreferenceStore) getPreferenceStore();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4OTQ1MQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512889451", "bodyText": "useless", "author": "pdulth", "createdAt": "2020-10-27T17:31:14Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java", "diffHunk": "@@ -213,109 +177,17 @@ protected void updateFieldEditors(boolean enabled) {\n     }\n   }\n \n-  /**\n-   * We override the performOk method. In case of property pages we copy the values in the overlay store into the property values of the selected project. We\n-   * also save the state of the radio buttons.\n-   * @see org.eclipse.jface.preference.IPreferencePage#performOk()\n-   */\n-  @Override\n-  public boolean performOk() {\n-    boolean result = super.performOk();\n-    if (isPropertyPage()) {\n-\n-      // Save state of radiobuttons in project properties\n-      IResource resource = (IResource) getElement();\n-      try {\n-        resource.setPersistentProperty(new QualifiedName(pageId, USEPROJECTSETTINGS), TRUE);\n-\n-        resource.getPersistentProperty(new QualifiedName(pageId, USEPROJECTSETTINGS));\n-        if ((this.propertiesStore != null) && (this.propertiesStore instanceof IPropertyPersistentPreferenceStore)) {\n-          try {\n-            ((IPropertyPersistentPreferenceStore) this.propertiesStore).save();\n-\n-          } catch (IOException exception_p) {\n-            StringBuilder loggerMessage = new StringBuilder(\"FieldEditorPropertyPreferencePage.performOk(..) _ \"); //$NON-NLS-1$\n-            __logger.warn(loggerMessage.toString(), exception_p);\n-          }\n-        }\n-      } catch (Exception exception_p) {\n-\n-      }\n-\n-    }\n-\n-    return result;\n-  }\n-\n-  /**\n-   * We override the performDefaults method. In case of property pages we switch back to the workspace settings and disable the field editors.\n-   * @see org.eclipse.jface.preference.PreferencePage#performDefaults()\n-   */\n-  @Override\n-  protected void performDefaults() {\n-    if (isPropertyPage()) {\n-    }\n-    super.performDefaults();\n-  }\n-\n   @Override\n   public boolean performCancel() {\n-    if (propertiesStore != null) {\n-      ((PropertyStore) this.propertiesStore).setCanceled(true);\n+    IPreferenceStore store = (IPreferenceStore) getPreferenceStore();\n+    if (store instanceof PropertyStore) {\n+      ((PropertyStore) store).setCanceled(true);\n     }\n-    return false;\n-  }\n-\n-  /**\n-   * Creates a new preferences page and opens it\n-   * @see com.bdaum.SpellChecker.preferences.SpellCheckerPreferencePage#configureWorkspaceSettings()\n-   */\n-  protected void configureWorkspaceSettings() {", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "460a63f6f26932c409c4977e65219bda8a42fbe2", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\nindex d3b2fb78e..3444e356d 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n\n@@ -176,7 +176,7 @@ public abstract class FieldEditorPropertyPreferencePage extends FieldEditorPrefe\n       editor.setEnabled(enabled, parent);\n     }\n   }\n-\n+  \n   @Override\n   public boolean performCancel() {\n     IPreferenceStore store = (IPreferenceStore) getPreferenceStore();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4OTUxMw==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512889513", "bodyText": "useless", "author": "pdulth", "createdAt": "2020-10-27T17:31:18Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java", "diffHunk": "@@ -213,109 +177,17 @@ protected void updateFieldEditors(boolean enabled) {\n     }\n   }\n \n-  /**\n-   * We override the performOk method. In case of property pages we copy the values in the overlay store into the property values of the selected project. We\n-   * also save the state of the radio buttons.\n-   * @see org.eclipse.jface.preference.IPreferencePage#performOk()\n-   */\n-  @Override\n-  public boolean performOk() {\n-    boolean result = super.performOk();\n-    if (isPropertyPage()) {\n-\n-      // Save state of radiobuttons in project properties\n-      IResource resource = (IResource) getElement();\n-      try {\n-        resource.setPersistentProperty(new QualifiedName(pageId, USEPROJECTSETTINGS), TRUE);\n-\n-        resource.getPersistentProperty(new QualifiedName(pageId, USEPROJECTSETTINGS));\n-        if ((this.propertiesStore != null) && (this.propertiesStore instanceof IPropertyPersistentPreferenceStore)) {\n-          try {\n-            ((IPropertyPersistentPreferenceStore) this.propertiesStore).save();\n-\n-          } catch (IOException exception_p) {\n-            StringBuilder loggerMessage = new StringBuilder(\"FieldEditorPropertyPreferencePage.performOk(..) _ \"); //$NON-NLS-1$\n-            __logger.warn(loggerMessage.toString(), exception_p);\n-          }\n-        }\n-      } catch (Exception exception_p) {\n-\n-      }\n-\n-    }\n-\n-    return result;\n-  }\n-\n-  /**\n-   * We override the performDefaults method. In case of property pages we switch back to the workspace settings and disable the field editors.\n-   * @see org.eclipse.jface.preference.PreferencePage#performDefaults()\n-   */\n-  @Override\n-  protected void performDefaults() {\n-    if (isPropertyPage()) {\n-    }\n-    super.performDefaults();\n-  }\n-\n   @Override\n   public boolean performCancel() {\n-    if (propertiesStore != null) {\n-      ((PropertyStore) this.propertiesStore).setCanceled(true);\n+    IPreferenceStore store = (IPreferenceStore) getPreferenceStore();\n+    if (store instanceof PropertyStore) {\n+      ((PropertyStore) store).setCanceled(true);\n     }\n-    return false;\n-  }\n-\n-  /**\n-   * Creates a new preferences page and opens it\n-   * @see com.bdaum.SpellChecker.preferences.SpellCheckerPreferencePage#configureWorkspaceSettings()\n-   */\n-  protected void configureWorkspaceSettings() {\n-    try {\n-      // create a new instance of the current class\n-      IPreferencePage page = this.getClass().newInstance();\n-      page.setTitle(getTitle());\n-      page.setImageDescriptor(image);\n-      // and show it\n-      showPreferencePage(pageId, page);\n-    } catch (InstantiationException e) {\n-      e.printStackTrace();\n-    } catch (IllegalAccessException e) {\n-      e.printStackTrace();\n-    }\n-  }\n-\n-  /**\n-   * Show a single preference pages\n-   * @param id - the preference page identification\n-   * @param page - the preference page\n-   */\n-  protected void showPreferencePage(String id, IPreferencePage page) {", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "460a63f6f26932c409c4977e65219bda8a42fbe2", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\nindex d3b2fb78e..3444e356d 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n\n@@ -176,7 +176,7 @@ public abstract class FieldEditorPropertyPreferencePage extends FieldEditorPrefe\n       editor.setEnabled(enabled, parent);\n     }\n   }\n-\n+  \n   @Override\n   public boolean performCancel() {\n     IPreferenceStore store = (IPreferenceStore) getPreferenceStore();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4OTU2Nw==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512889567", "bodyText": "useless", "author": "pdulth", "createdAt": "2020-10-27T17:31:23Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java", "diffHunk": "@@ -213,109 +177,17 @@ protected void updateFieldEditors(boolean enabled) {\n     }\n   }\n \n-  /**\n-   * We override the performOk method. In case of property pages we copy the values in the overlay store into the property values of the selected project. We\n-   * also save the state of the radio buttons.\n-   * @see org.eclipse.jface.preference.IPreferencePage#performOk()\n-   */\n-  @Override\n-  public boolean performOk() {\n-    boolean result = super.performOk();\n-    if (isPropertyPage()) {\n-\n-      // Save state of radiobuttons in project properties\n-      IResource resource = (IResource) getElement();\n-      try {\n-        resource.setPersistentProperty(new QualifiedName(pageId, USEPROJECTSETTINGS), TRUE);\n-\n-        resource.getPersistentProperty(new QualifiedName(pageId, USEPROJECTSETTINGS));\n-        if ((this.propertiesStore != null) && (this.propertiesStore instanceof IPropertyPersistentPreferenceStore)) {\n-          try {\n-            ((IPropertyPersistentPreferenceStore) this.propertiesStore).save();\n-\n-          } catch (IOException exception_p) {\n-            StringBuilder loggerMessage = new StringBuilder(\"FieldEditorPropertyPreferencePage.performOk(..) _ \"); //$NON-NLS-1$\n-            __logger.warn(loggerMessage.toString(), exception_p);\n-          }\n-        }\n-      } catch (Exception exception_p) {\n-\n-      }\n-\n-    }\n-\n-    return result;\n-  }\n-\n-  /**\n-   * We override the performDefaults method. In case of property pages we switch back to the workspace settings and disable the field editors.\n-   * @see org.eclipse.jface.preference.PreferencePage#performDefaults()\n-   */\n-  @Override\n-  protected void performDefaults() {\n-    if (isPropertyPage()) {\n-    }\n-    super.performDefaults();\n-  }\n-\n   @Override\n   public boolean performCancel() {\n-    if (propertiesStore != null) {\n-      ((PropertyStore) this.propertiesStore).setCanceled(true);\n+    IPreferenceStore store = (IPreferenceStore) getPreferenceStore();\n+    if (store instanceof PropertyStore) {\n+      ((PropertyStore) store).setCanceled(true);\n     }\n-    return false;\n-  }\n-\n-  /**\n-   * Creates a new preferences page and opens it\n-   * @see com.bdaum.SpellChecker.preferences.SpellCheckerPreferencePage#configureWorkspaceSettings()\n-   */\n-  protected void configureWorkspaceSettings() {\n-    try {\n-      // create a new instance of the current class\n-      IPreferencePage page = this.getClass().newInstance();\n-      page.setTitle(getTitle());\n-      page.setImageDescriptor(image);\n-      // and show it\n-      showPreferencePage(pageId, page);\n-    } catch (InstantiationException e) {\n-      e.printStackTrace();\n-    } catch (IllegalAccessException e) {\n-      e.printStackTrace();\n-    }\n-  }\n-\n-  /**\n-   * Show a single preference pages\n-   * @param id - the preference page identification\n-   * @param page - the preference page\n-   */\n-  protected void showPreferencePage(String id, IPreferencePage page) {\n-    final IPreferenceNode targetNode = new PreferenceNode(id, page);\n-    PreferenceManager manager = new PreferenceManager();\n-    manager.addToRoot(targetNode);\n-    final PreferenceDialog dialog = new PreferenceDialog(getControl().getShell(), manager);\n-    BusyIndicator.showWhile(getControl().getDisplay(), new Runnable() {\n-      public void run() {\n-        dialog.create();\n-        dialog.setMessage(targetNode.getLabelText());\n-        dialog.open();\n-      }\n-    });\n+    return true;\n   }\n \n-  /**\n-   * @return\n-   */\n-  public static Set<String> getPropertyPagesIdentifients() {", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "460a63f6f26932c409c4977e65219bda8a42fbe2", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\nindex d3b2fb78e..3444e356d 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/FieldEditorPropertyPreferencePage.java\n\n@@ -176,7 +176,7 @@ public abstract class FieldEditorPropertyPreferencePage extends FieldEditorPrefe\n       editor.setEnabled(enabled, parent);\n     }\n   }\n-\n+  \n   @Override\n   public boolean performCancel() {\n     IPreferenceStore store = (IPreferenceStore) getPreferenceStore();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4OTkxNQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512889915", "bodyText": "already done in super", "author": "pdulth", "createdAt": "2020-10-27T17:31:49Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/ui/AbstractCapellaCommandsPreferencePage.java", "diffHunk": "@@ -12,56 +12,22 @@\n  *******************************************************************************/\n package org.polarsys.capella.core.commands.preferences.ui;\n \n-import java.io.IOException;\n-\n-import org.eclipse.jface.dialogs.MessageDialog;\n-import org.eclipse.jface.preference.IPersistentPreferenceStore;\n-import org.eclipse.jface.preference.IPreferenceStore;\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.layout.GridData;\n import org.eclipse.swt.widgets.Composite;\n import org.eclipse.swt.widgets.Group;\n-import org.eclipse.ui.IWorkbench;\n-import org.eclipse.ui.IWorkbenchPreferencePage;\n-\n import org.polarsys.capella.core.commands.preferences.service.AbstractDefaultPreferencePage;\n \n /**\n  */\n-public class AbstractCapellaCommandsPreferencePage extends AbstractDefaultPreferencePage implements IWorkbenchPreferencePage {\n+public class AbstractCapellaCommandsPreferencePage extends AbstractDefaultPreferencePage {\n   /**\n    * Constructor.\n    */\n   public AbstractCapellaCommandsPreferencePage() {\n     super(GRID);\n   }\n \n-  /**\n-   * @see org.eclipse.ui.IWorkbenchPreferencePage#init(org.eclipse.ui.IWorkbench)\n-   */\n-  @Override\n-  public void init(IWorkbench workbench_p) {\n-    // Nothing to do.\n-  }\n-\n-  /**\n-   * @see org.eclipse.jface.preference.FieldEditorPreferencePage#performOk()\n-   */\n-  @Override\n-  public boolean performOk() {", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg5MDg4Mg==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512890882", "bodyText": "never occurs.\nthis method is called at startup.\neven if there is projects in workspace, there is no \"getPropertyPreferenceStore\" as it is only created when user click on Project/Properties", "author": "pdulth", "createdAt": "2020-10-27T17:32:59Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java", "diffHunk": "@@ -384,32 +378,7 @@ public void setPropertyStore(IResource iResource, IPreferenceStore propertiesSto\n    * @param capellaCommonNavigator\r\n    */\r\n   public void addProjectsPropertyChangeListener(IPropertyChangeListener capellaCommonNavigator) {\r\n-\r\n-    IProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();\r", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java\nindex 3128d6be3..9f26c0de3 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java\n\n@@ -378,7 +378,17 @@ public class Activator extends AbstractUIPlugin {\n    * @param capellaCommonNavigator\n    */\n   public void addProjectsPropertyChangeListener(IPropertyChangeListener capellaCommonNavigator) {\n-    PropertyStore.addToGuestListener(capellaCommonNavigator);\n+\n+    IProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();\n+\n+    for (IProject project : projects) {\n+      if (Activator.getDefault().getPropertyPreferenceStore(project) != null) {\n+        getPropertyPreferenceStore(project).addPropertyChangeListener(capellaCommonNavigator);\n+      } else {\n+        PropertyStore.addToGuestListener(capellaCommonNavigator);\n+      }\n+\n+    }\n   }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg5MTAyNA==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512891024", "bodyText": "unused", "author": "pdulth", "createdAt": "2020-10-27T17:33:10Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java", "diffHunk": "@@ -384,32 +378,7 @@ public void setPropertyStore(IResource iResource, IPreferenceStore propertiesSto\n    * @param capellaCommonNavigator\r\n    */\r\n   public void addProjectsPropertyChangeListener(IPropertyChangeListener capellaCommonNavigator) {\r\n-\r\n-    IProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();\r\n-\r\n-    for (IProject project : projects) {\r\n-      if (Activator.getDefault().getPropertyPreferenceStore(project) != null) {\r\n-        getPropertyPreferenceStore(project).addPropertyChangeListener(capellaCommonNavigator);\r\n-      } else {\r\n-        PropertyStore.addToGuestListener(capellaCommonNavigator);\r\n-      }\r\n-\r\n-    }\r\n-  }\r\n-\r\n-  /**\r\n-   * @param property\r\n-   * @return\r\n-   */\r\n-  @Deprecated\r\n-  public boolean existPropertyStore(PropertyChangeEvent event) {\r", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java\nindex 3128d6be3..9f26c0de3 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/preferences/Activator.java\n\n@@ -378,7 +378,17 @@ public class Activator extends AbstractUIPlugin {\n    * @param capellaCommonNavigator\n    */\n   public void addProjectsPropertyChangeListener(IPropertyChangeListener capellaCommonNavigator) {\n-    PropertyStore.addToGuestListener(capellaCommonNavigator);\n+\n+    IProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();\n+\n+    for (IProject project : projects) {\n+      if (Activator.getDefault().getPropertyPreferenceStore(project) != null) {\n+        getPropertyPreferenceStore(project).addPropertyChangeListener(capellaCommonNavigator);\n+      } else {\n+        PropertyStore.addToGuestListener(capellaCommonNavigator);\n+      }\n+\n+    }\n   }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg5MjkyMQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r512892921", "bodyText": "pageId is useless and make code unclear, we don't use it afterwards in ScopedCapellaProjectScope.getProjectValue", "author": "pdulth", "createdAt": "2020-10-27T17:35:20Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/PropertyStore.java", "diffHunk": "@@ -172,18 +149,22 @@ private void writeProperties(ProjectScope project) throws IOException {\n \n   /**\n    * Convenience method to set a property\n-   * @param name - the preference name\n-   * @param value - the property value or null to delete the property\n+   * \n+   * @param name\n+   *          - the preference name\n+   * @param value\n+   *          - the property value or null to delete the property\n    * @throws CoreException\n    */\n   private void setProperty(String name, String value) throws CoreException {\n-    resource.setPersistentProperty(new QualifiedName(pageId, name), value);", "originalCommit": "4afda22bc3118a6e8dd0e8e239076597168ad429", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "chunk": "diff --git a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/PropertyStore.java b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/PropertyStore.java\nindex bf082b458..1aacc5cc2 100644\n--- a/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/PropertyStore.java\n+++ b/core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/PropertyStore.java\n\n@@ -149,22 +172,18 @@ public class PropertyStore extends PreferenceStore implements IPropertyPersisten\n \n   /**\n    * Convenience method to set a property\n-   * \n-   * @param name\n-   *          - the preference name\n-   * @param value\n-   *          - the property value or null to delete the property\n+   * @param name - the preference name\n+   * @param value - the property value or null to delete the property\n    * @throws CoreException\n    */\n   private void setProperty(String name, String value) throws CoreException {\n-    resource.setPersistentProperty(new QualifiedName(Activator.PLUGIN_ID, name), value);\n+    resource.setPersistentProperty(new QualifiedName(pageId, name), value);\n   }\n \n   /*** Get default values (Delegate to workbench store) ***/\n \n   /*\n    * (non-Javadoc)\n-   * \n    * @see org.eclipse.jface.preference.IPreferenceStore#getDefaultBoolean(java.lang.String)\n    */\n   @Override\n"}}, {"oid": "460a63f6f26932c409c4977e65219bda8a42fbe2", "url": "https://github.com/eclipse/capella/commit/460a63f6f26932c409c4977e65219bda8a42fbe2", "message": "[568312] Project preferences no longer work properly\n\nWe were setting default preference store on fields and a second time\nwith the properties page one.\n\nWe still save Preferences in .settings and in\nIProject.persistentProperty, even if it seems useless. I have remove\npageId field as we don't use it when we read IProject.persistentProperty\nproperties\n\nBug: 568312\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-27T17:50:05Z", "type": "forcePushed"}, {"oid": "6787aa3f986b7e9a9c583b9a0eb455beb81495a8", "url": "https://github.com/eclipse/capella/commit/6787aa3f986b7e9a9c583b9a0eb455beb81495a8", "message": "[568312] Project preferences no longer work properly\n\nWe were setting default preference store on fields and a second time\nwith the properties page one.\n\nWe still save Preferences in .settings and in\nIProject.persistentProperty, even if it seems useless. I have remove\npageId field as we don't use it when we read IProject.persistentProperty\nproperties\n\nBug: 568312\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-27T20:23:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwNjc1MQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r513006751", "bodyText": "Useless, the properties page use a PropertyStore, not this one", "author": "pdulth", "createdAt": "2020-10-27T20:24:15Z", "path": "core/plugins/org.polarsys.capella.core.platform.sirius.ui.actions/src/org/polarsys/capella/core/platform/sirius/ui/preferences/CapellaPropertiesPage.java", "diffHunk": "@@ -1,64 +0,0 @@\n-/*******************************************************************************\r\n- * Copyright (c) 2006, 2016 THALES GLOBAL SERVICES.\r\n- * \r\n- * This program and the accompanying materials are made available under the\r\n- * terms of the Eclipse Public License 2.0 which is available at\r\n- * http://www.eclipse.org/legal/epl-2.0\r\n- * \r\n- * SPDX-License-Identifier: EPL-2.0\r\n- * \r\n- * Contributors:\r\n- *    Thales - initial API and implementation\r\n- *******************************************************************************/\r\n-\r\n-package org.polarsys.capella.core.platform.sirius.ui.preferences;\r\n-\r\n-import org.eclipse.core.resources.IProject;\r\n-import org.eclipse.core.resources.ProjectScope;\r\n-import org.eclipse.core.runtime.IAdaptable;\r\n-import org.eclipse.jface.preference.IPreferenceStore;\r\n-import org.eclipse.ui.IWorkbenchPropertyPage;\r\n-import org.eclipse.ui.preferences.ScopedPreferenceStore;\r\n-\r\n-import org.polarsys.capella.core.platform.sirius.ui.actions.CapellaActionsActivator;\r\n-\r\n-/**\r\n- * Main Capella properties page.\r\n- */\r\n-public class CapellaPropertiesPage extends CapellaPreferencePage implements IWorkbenchPropertyPage {\r\n-  /**\r\n-   * Storage for preferences.\r\n-   */\r\n-  private ScopedPreferenceStore preferenceStore;\r\n-\r\n-  private IProject project;\r\n-\r\n-  /**\r\n-   * @see org.eclipse.jface.preference.PreferencePage#doGetPreferenceStore()\r\n-   */\r\n-  @Override\r\n-  protected IPreferenceStore doGetPreferenceStore() {\r\n-    if (preferenceStore == null) {\r\n-      preferenceStore = new ScopedPreferenceStore(new ProjectScope(project), CapellaActionsActivator.getDefault().getBundle().getSymbolicName());\r", "originalCommit": "6787aa3f986b7e9a9c583b9a0eb455beb81495a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwNjkwMA==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r513006900", "bodyText": "Useless, the properties page use a PropertyStore, not this one", "author": "pdulth", "createdAt": "2020-10-27T20:24:30Z", "path": "core/plugins/org.polarsys.capella.core.platform.sirius.ui.actions/src/org/polarsys/capella/core/platform/sirius/ui/preferences/DeletePropertiesPage.java", "diffHunk": "@@ -1,64 +0,0 @@\n-/*******************************************************************************\r\n- * Copyright (c) 2006, 2016 THALES GLOBAL SERVICES.\r\n- * \r\n- * This program and the accompanying materials are made available under the\r\n- * terms of the Eclipse Public License 2.0 which is available at\r\n- * http://www.eclipse.org/legal/epl-2.0\r\n- * \r\n- * SPDX-License-Identifier: EPL-2.0\r\n- * \r\n- * Contributors:\r\n- *    Thales - initial API and implementation\r\n- *******************************************************************************/\r\n-\r\n-package org.polarsys.capella.core.platform.sirius.ui.preferences;\r\n-\r\n-import org.eclipse.core.resources.IProject;\r\n-import org.eclipse.core.resources.ProjectScope;\r\n-import org.eclipse.core.runtime.IAdaptable;\r\n-import org.eclipse.jface.preference.IPreferenceStore;\r\n-import org.eclipse.ui.IWorkbenchPropertyPage;\r\n-import org.eclipse.ui.preferences.ScopedPreferenceStore;\r\n-\r\n-import org.polarsys.capella.core.platform.sirius.ui.actions.CapellaActionsActivator;\r\n-\r\n-/**\r\n- * Delete properties page.\r\n- */\r\n-public class DeletePropertiesPage extends DeletePreferencePage implements IWorkbenchPropertyPage {\r\n-  /**\r\n-   * Storage for preferences.\r\n-   */\r\n-  private ScopedPreferenceStore preferenceStore;\r\n-\r\n-  private IProject project;\r\n-\r\n-  /**\r\n-   * @see org.eclipse.jface.preference.PreferencePage#doGetPreferenceStore()\r\n-   */\r\n-  @Override\r\n-  protected IPreferenceStore doGetPreferenceStore() {\r\n-    if (preferenceStore == null) {\r", "originalCommit": "6787aa3f986b7e9a9c583b9a0eb455beb81495a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b469456a84a7dc89161ae13bf270305675cb6494", "url": "https://github.com/eclipse/capella/commit/b469456a84a7dc89161ae13bf270305675cb6494", "message": "[568312] Project preferences no longer work properly\n\nWe were setting default preference store on fields and a second time\nwith the properties page one.\n\nWe still save Preferences in .settings and in\nIProject.persistentProperty, even if it seems useless. I have remove\npageId field as we don't use it when we read IProject.persistentProperty\nproperties\n\nBug: 568312\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-27T20:39:47Z", "type": "forcePushed"}, {"oid": "5ee3a8db0169b52c0ac37357550f0f73b9034da1", "url": "https://github.com/eclipse/capella/commit/5ee3a8db0169b52c0ac37357550f0f73b9034da1", "message": "[568312] Project preferences no longer work properly\n\nWe were setting default preference store on fields and a second time\nwith the properties page one.\n\nWe still save Preferences in .settings and in\nIProject.persistentProperty, even if it seems useless. I have remove\npageId field as we don't use it when we read IProject.persistentProperty\nproperties\n\nConflicts:\n\tcore/plugins/org.polarsys.capella.core.flexibility.wizards/src/org/polarsys/capella/core/flexibility/wizards/ui/CapellaPropertyPreferencePage.java\n\nBug: 568312\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-27T20:44:12Z", "type": "forcePushed"}, {"oid": "583af94afd0a0e89ec086c16832b73d411ad4fe4", "url": "https://github.com/eclipse/capella/commit/583af94afd0a0e89ec086c16832b73d411ad4fe4", "message": "[568312] Project preferences no longer work properly\n\nWe were setting default preference store on fields and a second time\nwith the properties page one.\n\nWe still save Preferences in .settings and in\nIProject.persistentProperty, even if it seems useless. I have remove\npageId field as we don't use it when we read IProject.persistentProperty\nproperties\n\nBug: 568312\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-27T21:05:59Z", "type": "forcePushed"}, {"oid": "5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "url": "https://github.com/eclipse/capella/commit/5b6048e6ebfce6c0e11b1cbc6622d3d5d83d8864", "message": "[568312] Cleanup as we don't understand anything\n\nBug: 568312\nChange-Id: Ie3803af7289a8554c1fb84f2a25628007b5b3357\nSigned-off-by: Philippe DUL <philippe.dul@thalesgroup.com>", "committedDate": "2020-10-27T21:11:58Z", "type": "commit"}, {"oid": "16085fd6b8bbf76799114ec2d481230f0e9b069d", "url": "https://github.com/eclipse/capella/commit/16085fd6b8bbf76799114ec2d481230f0e9b069d", "message": "[568312] Project preferences no longer work properly\n\nWe were setting default preference store on fields and a second time\nwith the properties page one.\n\nWe still save Preferences in .settings and in\nIProject.persistentProperty, even if it seems useless. I have remove\npageId field as we don't use it when we read IProject.persistentProperty\nproperties\n\nBug: 568312\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-27T21:13:00Z", "type": "forcePushed"}, {"oid": "63a3da32965ca48ea138d3b8ea4fa921a428c225", "url": "https://github.com/eclipse/capella/commit/63a3da32965ca48ea138d3b8ea4fa921a428c225", "message": "[568312] Project preferences no longer work properly\n\nWe were setting default preference store on fields and a second time\nwith the properties page one.\n\nWe still save Preferences in .settings and in\nIProject.persistentProperty, even if it seems useless. I have remove\npageId field as we don't use it when we read IProject.persistentProperty\nproperties\n\nBug: 568312\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-27T21:27:07Z", "type": "forcePushed"}, {"oid": "715cb839b910b8c0c1886e3c0d6a4d6c164ace88", "url": "https://github.com/eclipse/capella/commit/715cb839b910b8c0c1886e3c0d6a4d6c164ace88", "message": "[568312] Fix Export of Preferences\n\n- There was many classes for the export and most were unused\n- At export of preferences, (from File > Export > Preferences and\nWindows > Preferences > Export) with an event sent to IEventBroker, we\nexport InstanceScope preferences, but we ensure that all default values\nare set in it before export\n\nBug: 568312\nChange-Id: If802d69f5f6fa558095abf453c9078ebc5e03d5c\nSigned-off-by: Philippe DUL <philippe.dul@thalesgroup.com>", "committedDate": "2020-10-28T16:15:11Z", "type": "forcePushed"}, {"oid": "97f04eb46e71fafa340d9a4e7e9ec7bba9660005", "url": "https://github.com/eclipse/capella/commit/97f04eb46e71fafa340d9a4e7e9ec7bba9660005", "message": "[568312] Fix Export of Preferences\n\n- There was many classes for the export and most were unused\n- At export of preferences, (from File > Export > Preferences and\nWindows > Preferences > Export) with an event sent to IEventBroker, we\nexport InstanceScope preferences, but we ensure that all default values\nare set in it before export\n\nBug: 568312\nChange-Id: If802d69f5f6fa558095abf453c9078ebc5e03d5c\nSigned-off-by: Philippe DUL <philippe.dul@thalesgroup.com>", "committedDate": "2020-10-28T18:51:06Z", "type": "forcePushed"}, {"oid": "6d9e7830f896c70509f5c768b5f2b343988e0470", "url": "https://github.com/eclipse/capella/commit/6d9e7830f896c70509f5c768b5f2b343988e0470", "message": "[568312] Fix Export of Preferences\n\n- There was many classes for the export and most were unused\n- At export of preferences, (from File > Export > Preferences and\nWindows > Preferences > Export) with an event sent to IEventBroker, we\nexport InstanceScope preferences, but we ensure that all default values\nare set in it before export\n\nBug: 568312\nChange-Id: If802d69f5f6fa558095abf453c9078ebc5e03d5c\nSigned-off-by: Philippe DUL <philippe.dul@thalesgroup.com>", "committedDate": "2020-10-28T20:34:24Z", "type": "forcePushed"}, {"oid": "617c3827c0ecc80019a4b4420b6860e48510ad47", "url": "https://github.com/eclipse/capella/commit/617c3827c0ecc80019a4b4420b6860e48510ad47", "message": "[568351] Fix Export of Preferences\n\n- There was many classes for the export and most were unused\n- At export of preferences, (from File > Export > Preferences and\nWindows > Preferences > Export) with an event sent to IEventBroker, we\nexport InstanceScope preferences, but we ensure that all default values\nare set in it before export\n\nBug: 568351\nChange-Id: If802d69f5f6fa558095abf453c9078ebc5e03d5c\nSigned-off-by: Philippe DUL <philippe.dul@thalesgroup.com>", "committedDate": "2020-10-28T21:30:29Z", "type": "forcePushed"}, {"oid": "4ad48109501ec97cfd857fb9cd105f224350a849", "url": "https://github.com/eclipse/capella/commit/4ad48109501ec97cfd857fb9cd105f224350a849", "message": "[568312] Project preferences no longer work properly\n\nWe were setting default preference store on fields and a second time\nwith the properties page one.\n\nWe still save Preferences in .settings and in\nIProject.persistentProperty, even if it seems useless. I have remove\npageId field as we don't use it when we read IProject.persistentProperty\nproperties\n\nBug: 568312\nChange-Id: I5507178e9fb40faa1ed24d0d665db26c4c70051a", "committedDate": "2020-10-29T08:19:08Z", "type": "commit"}, {"oid": "a689e96dcd45fe6d735317ac0168732d8183be34", "url": "https://github.com/eclipse/capella/commit/a689e96dcd45fe6d735317ac0168732d8183be34", "message": "[568351] Fix Export of Preferences\n\n- There was many classes for the export and most were unused\n- At export of preferences, (from File > Export > Preferences and\nWindows > Preferences > Export) with an event sent to IEventBroker, we\nexport InstanceScope preferences, but we ensure that all default values\nare set in it before export\n\nBug: 568351\nChange-Id: If802d69f5f6fa558095abf453c9078ebc5e03d5c\nSigned-off-by: Philippe DUL <philippe.dul@thalesgroup.com>", "committedDate": "2020-10-29T08:19:23Z", "type": "forcePushed"}, {"oid": "dd4d638c3ca41952471f57bb740cccc3da68ee9c", "url": "https://github.com/eclipse/capella/commit/dd4d638c3ca41952471f57bb740cccc3da68ee9c", "message": "[568351] Fix Export of Preferences\n\n- There was many classes for the export and most were unused\n- At export of preferences, (from File > Export > Preferences and\nWindows > Preferences > Export) with an event sent to IEventBroker, we\nexport InstanceScope preferences, but we ensure that all default values\nare set in it before export\n\nBug: 568351\nChange-Id: If802d69f5f6fa558095abf453c9078ebc5e03d5c\nSigned-off-by: Philippe DUL <philippe.dul@thalesgroup.com>", "committedDate": "2020-10-29T09:03:05Z", "type": "commit"}, {"oid": "dd4d638c3ca41952471f57bb740cccc3da68ee9c", "url": "https://github.com/eclipse/capella/commit/dd4d638c3ca41952471f57bb740cccc3da68ee9c", "message": "[568351] Fix Export of Preferences\n\n- There was many classes for the export and most were unused\n- At export of preferences, (from File > Export > Preferences and\nWindows > Preferences > Export) with an event sent to IEventBroker, we\nexport InstanceScope preferences, but we ensure that all default values\nare set in it before export\n\nBug: 568351\nChange-Id: If802d69f5f6fa558095abf453c9078ebc5e03d5c\nSigned-off-by: Philippe DUL <philippe.dul@thalesgroup.com>", "committedDate": "2020-10-29T09:03:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk3NjE3NQ==", "url": "https://github.com/eclipse/capella/pull/416#discussion_r515976175", "bodyText": "Yes, I agree that it's strange to save project preferences using both ProjectScope (saved in project .settings) and IProject.getPersistentProperty (saved in the workspace with the path to the project). But it was like this before, so I think we could keep the same code.", "author": "minhtutonthat", "createdAt": "2020-11-02T13:38:20Z", "path": "core/plugins/org.polarsys.capella.core.preferences/src/org/polarsys/capella/core/commands/preferences/service/PropertyStore.java", "diffHunk": "@@ -26,52 +26,36 @@\n import org.eclipse.jface.preference.IPreferenceStore;\n import org.eclipse.jface.preference.PreferenceStore;\n import org.eclipse.jface.util.IPropertyChangeListener;\n-import org.osgi.service.prefs.BackingStoreException;\n-\n import org.polarsys.capella.common.tools.report.config.registry.ReportManagerRegistry;\n import org.polarsys.capella.common.tools.report.util.IReportManagerDefaultComponents;\n import org.polarsys.capella.core.preferences.Activator;\n \n /**\n+ * Its overall complicated but mainly:\n+ * \n+ * Unlike the default PreferenceStore, it stores all values even default ones. Indeed, Configuration projects and\n+ * Capella projects can be shared between users and all preferences shall be shared between users even default ones.\n+ * \n+ * It stores each preferences in the ProjectScope and as Properties using IProject.getPersistentProperty, which is idk", "originalCommit": "dd4d638c3ca41952471f57bb740cccc3da68ee9c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}