{"pr_number": 1007, "pr_title": "SQL DB Lock Exception added and IAM Cache Clean", "pr_createdAt": "2020-05-07T03:16:38Z", "pr_url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007", "timeline": [{"oid": "cbe8513eb7f367c94c98b25afd2798ce2b0bd5fa", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/cbe8513eb7f367c94c98b25afd2798ce2b0bd5fa", "message": "* IAM data will pile up on devices and down the road this could become an issue\n  * Includes cleaning impressions, clicks, dismissals and SQL data for IAMs\n* Db lock issue was present during opening db retries, related to #988\n  * Added an extra exception to go along with SQLiteCantOpenDatabaseException, SQLiteDatabaseLockedException\n* Replaced all `getWritableDatabase` and `getReadableDatabase` with `getSQLiteDatabase`\n* Replaced all `getWritableDatabase` and `getReadableDatabase` with `getSQLiteDatabaseWithRetries`", "committedDate": "2020-05-07T03:14:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzODI5OA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r421538298", "bodyText": "why are these methods (cleanCachedNotifications and cleanCachedUniqueOutcomeEventNotifications) inside the thread definition?", "author": "Jeasmine", "createdAt": "2020-05-07T14:15:24Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java", "diffHunk": "@@ -4,69 +4,188 @@\n import com.onesignal.OneSignalDbContract.CachedUniqueOutcomeNotificationTable;\n \n import android.content.Context;\n+import android.database.Cursor;\n import android.database.sqlite.SQLiteDatabase;\n import android.os.Process;\n+import android.support.annotation.WorkerThread;\n+\n+import java.util.Set;\n \n class OneSignalCacheCleaner {\n \n-    private static String OS_DELETE_OLD_CACHED_DATA = \"OS_DELETE_OLD_CACHED_DATA\";\n+    private final static long ONE_WEEK_IN_MILLIS = 604_800L;\n+    private final static long SIX_MONTHS_IN_MILLIS = 15_552_000L;\n+\n+    private final static String OS_DELETE_CACHED_NOTIFICATIONS_THREAD = \"OS_DELETE_CACHED_NOTIFICATIONS_THREAD\";\n+    private final static String OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD = \"OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD\";\n \n     /**\n      * We clean outdated cache from several places within the OneSignal SDK here\n-     * 1. In App Messaging id sets (impressions, clicks, views)\n-     * 2. Notifications after 1 week\n-     * 3. Unique outcome events linked to notification ids (1 week)\n+     * 1. Notifications & unique outcome events linked to notification ids (1 week)\n+     * 2. Cached In App Messaging Sets in SharedPreferences (impressions, clicks, views) and SQL IAMs\n      */\n-    synchronized static void cleanOldCachedData(final Context context) {\n-        new Thread(new Runnable() {\n-            @Override\n-            public void run() {\n-                Thread.currentThread().setPriority(Process.THREAD_PRIORITY_BACKGROUND);\n-                OneSignalDbHelper dbHelper = OneSignalDbHelper.getInstance(context);\n-                SQLiteDatabase writableDb = dbHelper.getWritableDbWithRetries();\n+    static void cleanOldCachedData(final Context context) {\n+        OneSignalDbHelper dbHelper = OneSignalDbHelper.getInstance(context);\n+        SQLiteDatabase writableDb = dbHelper.getSQLiteDatabaseWithRetries();\n \n-                cleanInAppMessagingCache();\n-                cleanNotificationCache(writableDb);\n-            }\n-        }, OS_DELETE_OLD_CACHED_DATA).start();\n-    }\n-\n-    /**\n-     * TODO: Needs to be implemented to clean out old IAM data used to track impressions, clicks, and viewed IAMs\n-     */\n-    static void cleanInAppMessagingCache() {\n-        // NOTE: Currently IAMs will pile up overtime and since IAMs can be modified, active, inactive, etc.\n-        //  we never truly know when it is the correct time to remove these ids form our cache\n+        cleanNotificationCache(writableDb);\n+        cleanCachedInAppMessages(writableDb);\n     }\n \n     /**\n      * Cleans two notification tables\n      * 1. NotificationTable.TABLE_NAME\n      * 2. CachedUniqueOutcomeNotificationTable.TABLE_NAME\n      */\n-    static void cleanNotificationCache(SQLiteDatabase writableDb) {\n-        cleanOldNotificationData(writableDb);\n-        cleanOldUniqueOutcomeEventNotificationsCache(writableDb);\n-    }\n+    synchronized static void cleanNotificationCache(final SQLiteDatabase writableDb) {\n+        new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                Thread.currentThread().setPriority(Process.THREAD_PRIORITY_BACKGROUND);\n \n-    /**\n-     * Deletes any notifications with created timestamps older than 7 days\n-     */\n-    private static void cleanOldNotificationData(SQLiteDatabase writableDb) {\n-        writableDb.delete(NotificationTable.TABLE_NAME,\n-                NotificationTable.COLUMN_NAME_CREATED_TIME + \" < \" + ((System.currentTimeMillis() / 1_000L) - 604_800L),\n-                null);\n+                cleanCachedNotifications(writableDb);\n+                cleanCachedUniqueOutcomeEventNotifications(writableDb);\n+            }\n+\n+            /**\n+             * Deletes notifications with created timestamps older than 7 days\n+             */\n+            private void cleanCachedNotifications(SQLiteDatabase writableDb) {", "originalCommit": "cbe8513eb7f367c94c98b25afd2798ce2b0bd5fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "452e1f55206e35e6b3fe3e8c9902babfbac70487", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\nindex 9f1950f8..49de30ba 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n\n@@ -9,12 +9,14 @@ import android.database.sqlite.SQLiteDatabase;\n import android.os.Process;\n import android.support.annotation.WorkerThread;\n \n+import org.json.JSONException;\n+\n import java.util.Set;\n \n class OneSignalCacheCleaner {\n \n-    private final static long ONE_WEEK_IN_MILLIS = 604_800L;\n-    private final static long SIX_MONTHS_IN_MILLIS = 15_552_000L;\n+    private final static long ONE_WEEK_IN_SECONDS = 604_800L;\n+    private final static long SIX_MONTHS_IN_SECONDS = 15_552_000L;\n \n     private final static String OS_DELETE_CACHED_NOTIFICATIONS_THREAD = \"OS_DELETE_CACHED_NOTIFICATIONS_THREAD\";\n     private final static String OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD = \"OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU0NTE2NQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r421545165", "bodyText": "small optimization, but you can avoid dismissedMessages and impressionedMessages shared preference query if you already know that oldMessageIds is null or empty", "author": "Jeasmine", "createdAt": "2020-05-07T14:24:09Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java", "diffHunk": "@@ -4,69 +4,188 @@\n import com.onesignal.OneSignalDbContract.CachedUniqueOutcomeNotificationTable;\n \n import android.content.Context;\n+import android.database.Cursor;\n import android.database.sqlite.SQLiteDatabase;\n import android.os.Process;\n+import android.support.annotation.WorkerThread;\n+\n+import java.util.Set;\n \n class OneSignalCacheCleaner {\n \n-    private static String OS_DELETE_OLD_CACHED_DATA = \"OS_DELETE_OLD_CACHED_DATA\";\n+    private final static long ONE_WEEK_IN_MILLIS = 604_800L;\n+    private final static long SIX_MONTHS_IN_MILLIS = 15_552_000L;\n+\n+    private final static String OS_DELETE_CACHED_NOTIFICATIONS_THREAD = \"OS_DELETE_CACHED_NOTIFICATIONS_THREAD\";\n+    private final static String OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD = \"OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD\";\n \n     /**\n      * We clean outdated cache from several places within the OneSignal SDK here\n-     * 1. In App Messaging id sets (impressions, clicks, views)\n-     * 2. Notifications after 1 week\n-     * 3. Unique outcome events linked to notification ids (1 week)\n+     * 1. Notifications & unique outcome events linked to notification ids (1 week)\n+     * 2. Cached In App Messaging Sets in SharedPreferences (impressions, clicks, views) and SQL IAMs\n      */\n-    synchronized static void cleanOldCachedData(final Context context) {\n-        new Thread(new Runnable() {\n-            @Override\n-            public void run() {\n-                Thread.currentThread().setPriority(Process.THREAD_PRIORITY_BACKGROUND);\n-                OneSignalDbHelper dbHelper = OneSignalDbHelper.getInstance(context);\n-                SQLiteDatabase writableDb = dbHelper.getWritableDbWithRetries();\n+    static void cleanOldCachedData(final Context context) {\n+        OneSignalDbHelper dbHelper = OneSignalDbHelper.getInstance(context);\n+        SQLiteDatabase writableDb = dbHelper.getSQLiteDatabaseWithRetries();\n \n-                cleanInAppMessagingCache();\n-                cleanNotificationCache(writableDb);\n-            }\n-        }, OS_DELETE_OLD_CACHED_DATA).start();\n-    }\n-\n-    /**\n-     * TODO: Needs to be implemented to clean out old IAM data used to track impressions, clicks, and viewed IAMs\n-     */\n-    static void cleanInAppMessagingCache() {\n-        // NOTE: Currently IAMs will pile up overtime and since IAMs can be modified, active, inactive, etc.\n-        //  we never truly know when it is the correct time to remove these ids form our cache\n+        cleanNotificationCache(writableDb);\n+        cleanCachedInAppMessages(writableDb);\n     }\n \n     /**\n      * Cleans two notification tables\n      * 1. NotificationTable.TABLE_NAME\n      * 2. CachedUniqueOutcomeNotificationTable.TABLE_NAME\n      */\n-    static void cleanNotificationCache(SQLiteDatabase writableDb) {\n-        cleanOldNotificationData(writableDb);\n-        cleanOldUniqueOutcomeEventNotificationsCache(writableDb);\n-    }\n+    synchronized static void cleanNotificationCache(final SQLiteDatabase writableDb) {\n+        new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                Thread.currentThread().setPriority(Process.THREAD_PRIORITY_BACKGROUND);\n \n-    /**\n-     * Deletes any notifications with created timestamps older than 7 days\n-     */\n-    private static void cleanOldNotificationData(SQLiteDatabase writableDb) {\n-        writableDb.delete(NotificationTable.TABLE_NAME,\n-                NotificationTable.COLUMN_NAME_CREATED_TIME + \" < \" + ((System.currentTimeMillis() / 1_000L) - 604_800L),\n-                null);\n+                cleanCachedNotifications(writableDb);\n+                cleanCachedUniqueOutcomeEventNotifications(writableDb);\n+            }\n+\n+            /**\n+             * Deletes notifications with created timestamps older than 7 days\n+             */\n+            private void cleanCachedNotifications(SQLiteDatabase writableDb) {\n+                String whereStr = NotificationTable.COLUMN_NAME_CREATED_TIME + \" < ?\";\n+\n+                String sevenDaysAgoInSeconds = String.valueOf((System.currentTimeMillis() / 1_000L) - ONE_WEEK_IN_MILLIS);\n+                String[] whereArgs = new String[]{ sevenDaysAgoInSeconds };\n+\n+                writableDb.delete(\n+                        NotificationTable.TABLE_NAME,\n+                        whereStr,\n+                        whereArgs);\n+            }\n+\n+            /**\n+             * Deletes cached unique outcome notifications whose ids do not exist inside of the NotificationTable.TABLE_NAME\n+             */\n+            private void cleanCachedUniqueOutcomeEventNotifications(SQLiteDatabase writableDb) {\n+                String whereStr = \"NOT EXISTS(SELECT NULL FROM \" + NotificationTable.TABLE_NAME +\n+                        \" n WHERE\" +\n+                        \" n.\" + NotificationTable.COLUMN_NAME_NOTIFICATION_ID +\n+                        \" = \" + CachedUniqueOutcomeNotificationTable.COLUMN_NAME_NOTIFICATION_ID + \")\";\n+\n+                writableDb.delete(\n+                        CachedUniqueOutcomeNotificationTable.TABLE_NAME,\n+                        whereStr,\n+                        null);\n+            }\n+\n+        }, OS_DELETE_CACHED_NOTIFICATIONS_THREAD).start();\n     }\n \n     /**\n-     * Deletes any notifications whose ids do not exist inside of the NotificationTable.TABLE_NAME\n+     * Remove IAMs that the last display time was six month ago\n+     * 1. Query for all old message ids and old clicked click ids\n+     * 2. Delete old IAMs from SQL\n+     * 3. Use queried data to clean SharedPreferences\n      */\n-    static void cleanOldUniqueOutcomeEventNotificationsCache(SQLiteDatabase writableDb) {\n-        writableDb.delete(CachedUniqueOutcomeNotificationTable.TABLE_NAME,\n-                \"NOT EXISTS(SELECT NULL FROM \" + NotificationTable.TABLE_NAME +\n-                        \" n WHERE\" +\n-                        \" n.\" + NotificationTable.COLUMN_NAME_NOTIFICATION_ID  + \" = \" + CachedUniqueOutcomeNotificationTable.COLUMN_NAME_NOTIFICATION_ID + \")\",\n-                null);\n+    @WorkerThread\n+    synchronized static void cleanCachedInAppMessages(final SQLiteDatabase writableDb) {\n+        new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                Thread.currentThread().setPriority(Process.THREAD_PRIORITY_BACKGROUND);\n+\n+                // 1. Query for all old message ids and old clicked click ids\n+                String[] retColumns = new String[]{\n+                        OneSignalDbContract.InAppMessageTable.COLUMN_NAME_MESSAGE_ID,\n+                        OneSignalDbContract.InAppMessageTable.COLUMN_CLICK_IDS\n+                };\n+\n+                String whereStr = OneSignalDbContract.InAppMessageTable.COLUMN_NAME_LAST_DISPLAY + \" < ?\";\n+\n+                String sixMonthsAgoInSeconds = String.valueOf((System.currentTimeMillis() / 1_000L) - SIX_MONTHS_IN_MILLIS);\n+                String[] whereArgs = new String[]{sixMonthsAgoInSeconds};\n+\n+                Cursor cursor = writableDb.query(OneSignalDbContract.InAppMessageTable.TABLE_NAME,\n+                        retColumns,\n+                        whereStr,\n+                        whereArgs,\n+                        null,\n+                        null,\n+                        null);\n+\n+                // From cursor get all of the old message ids and old clicked click ids\n+                Set<String> oldMessageIds = OSUtils.newConcurrentSet();\n+                Set<String> oldClickedClickIds = OSUtils.newConcurrentSet();\n+                if (cursor.moveToFirst()) {\n+                    do {\n+                        String oldMessageId = cursor.getString(\n+                                cursor.getColumnIndex(\n+                                        OneSignalDbContract.InAppMessageTable.COLUMN_NAME_MESSAGE_ID));\n+                        String oldClickIds = cursor.getString(\n+                                cursor.getColumnIndex(\n+                                        OneSignalDbContract.InAppMessageTable.COLUMN_NAME_MESSAGE_ID));\n+\n+                        oldMessageIds.add(oldMessageId);\n+                        oldClickedClickIds.addAll(OSUtils.newStringSetFromString(oldClickIds));\n+                    } while (cursor.moveToNext());\n+                }\n+                cursor.close();\n+\n+                // 2. Delete old IAMs from SQL\n+                writableDb.delete(\n+                        OneSignalDbContract.InAppMessageTable.TABLE_NAME,\n+                        whereStr,\n+                        whereArgs);\n+\n+                // 3. Use queried data to clean SharedPreferences\n+                cleanCachedSharedPreferenceIamData(oldMessageIds, oldClickedClickIds);\n+            }\n+\n+            private void cleanCachedSharedPreferenceIamData(Set<String> oldMessageIds, Set<String> oldClickedClickIds) {\n+                // IAMs without redisplay on with pile up and we need to clean these for dismissing, impressions, and clicks\n+                Set<String> dismissedMessages = OneSignalPrefs.getStringSet(\n+                        OneSignalPrefs.PREFS_ONESIGNAL,\n+                        OneSignalPrefs.PREFS_OS_DISMISSED_IAMS,\n+                        OSUtils.<String>newConcurrentSet());\n+\n+                Set<String> impressionedMessages = OneSignalPrefs.getStringSet(\n+                        OneSignalPrefs.PREFS_ONESIGNAL,\n+                        OneSignalPrefs.PREFS_OS_IMPRESSIONED_IAMS,\n+                        OSUtils.<String>newConcurrentSet());\n+\n+                Set<String> clickedClickIds = OneSignalPrefs.getStringSet(\n+                        OneSignalPrefs.PREFS_ONESIGNAL,\n+                        OneSignalPrefs.PREFS_OS_CLICKED_CLICK_IDS_IAMS,\n+                        OSUtils.<String>newConcurrentSet());\n+\n+                if (oldMessageIds != null) {", "originalCommit": "cbe8513eb7f367c94c98b25afd2798ce2b0bd5fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "452e1f55206e35e6b3fe3e8c9902babfbac70487", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\nindex 9f1950f8..49de30ba 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n\n@@ -9,12 +9,14 @@ import android.database.sqlite.SQLiteDatabase;\n import android.os.Process;\n import android.support.annotation.WorkerThread;\n \n+import org.json.JSONException;\n+\n import java.util.Set;\n \n class OneSignalCacheCleaner {\n \n-    private final static long ONE_WEEK_IN_MILLIS = 604_800L;\n-    private final static long SIX_MONTHS_IN_MILLIS = 15_552_000L;\n+    private final static long ONE_WEEK_IN_SECONDS = 604_800L;\n+    private final static long SIX_MONTHS_IN_SECONDS = 15_552_000L;\n \n     private final static String OS_DELETE_CACHED_NOTIFICATIONS_THREAD = \"OS_DELETE_CACHED_NOTIFICATIONS_THREAD\";\n     private final static String OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD = \"OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD\";\n"}}, {"oid": "452e1f55206e35e6b3fe3e8c9902babfbac70487", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/452e1f55206e35e6b3fe3e8c9902babfbac70487", "message": "Added UnitTest to validate all IAM data is cleaned after 6 months\n* Modified how we save IAMs so we can keep track of all IAMs in SQL and not just redisplays\n  * Now we can delete all IAMs after 6 months easily\n  * Now we clean dismissal, impression, and click Sets after 6 months also\n* Created OSUtil helper for converting a Set.toString into a Set<String>\n* Renamed DisplayStats to RedisplayStats so its a little more clear\n  * Replaced Integer.MAX_VALUE with 1 so IAMs that are not redisplay will only be shown once and easier to UnitTest\n* Refactored UnitTest helper for OneSignalPrefs to TestOneSignalPrefs", "committedDate": "2020-05-07T18:07:38Z", "type": "commit"}, {"oid": "4a04184d9c870fdc4fc45149d7f9c8bc1a90053c", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/4a04184d9c870fdc4fc45149d7f9c8bc1a90053c", "message": "Moved methods outside of OneSignalCacheCleaner Threads\n* Better run time optimization keeping these methods outside of the Threads they were written in\n* Originally done because these methods are \"owned\" by the parent methods starting the Threads\n* Cmmented these methods so we know when and where they should be used", "committedDate": "2020-05-07T18:43:16Z", "type": "commit"}, {"oid": "566c0694a87bb7e6bd77be46e7fe98135c26b255", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/566c0694a87bb7e6bd77be46e7fe98135c26b255", "message": "Optimization for when no old IAM data exists\n* No need to delete SQL or SharedPref IAM data if there is no old IAM data", "committedDate": "2020-05-07T18:55:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxNzQxNQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r422317415", "bodyText": "why is this deleted?", "author": "Jeasmine", "createdAt": "2020-05-08T19:02:32Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSInAppMessageController.java", "diffHunk": "@@ -448,24 +435,21 @@ void onFailure(int statusCode, String response, Throwable throwable) {\n      * For click counting, every message has it click id array\n      * */\n     private void setDataForRedisplay(OSInAppMessage message) {\n-        if (!message.getDisplayStats().isRedisplayEnabled())", "originalCommit": "566c0694a87bb7e6bd77be46e7fe98135c26b255", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTA2OQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423215069", "bodyText": "This is why im always trying to rename things, we want to have redisplay data for IAMs so when we save them to SQL it matches the scheme and nothing is NULL\nRedisplay isnt something we \"enable\" and \"disable\" also its just whether or not the IAM will show more than once. I think every IAM should have the same scheme and should be cached together, not separately", "author": "mikechoch", "createdAt": "2020-05-11T17:52:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxNzQxNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxODAyMA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r422318020", "bodyText": "Sry I think you already explained me this, but why is always saving redisplay now?", "author": "Jeasmine", "createdAt": "2020-05-08T19:03:52Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSInAppMessageController.java", "diffHunk": "@@ -572,14 +556,10 @@ private void dismissCurrentMessage(@Nullable OSInAppMessage message) {\n         }\n     }\n \n-    private void persistInAppMessageForRedisplay(final OSInAppMessage message) {\n-        //If the IAM doesn't have the re display configuration then no need to save it\n-        if (!message.getDisplayStats().isRedisplayEnabled())\n-            return;\n-\n+    private void persistInAppMessage(final OSInAppMessage message) {\n         long displayTimeSeconds = System.currentTimeMillis() / 1000;\n-        message.getDisplayStats().setLastDisplayTime(displayTimeSeconds);\n-        message.getDisplayStats().incrementDisplayQuantity();\n+        message.getRedisplayStats().setLastDisplayTime(displayTimeSeconds);", "originalCommit": "566c0694a87bb7e6bd77be46e7fe98135c26b255", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDA1Ng==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423214056", "bodyText": "We should treat all IAMs the same way as it creates consistency\nEven though we arent visually seeing an IAM with a limit of 1, we still need to cache it and keep track of it. Its confusing saving only specific set of IAMs to SQL when you can easily do them all.\nSpecifically why I did this was because I needed to know when to clean Shared Preferences after 6 months and if we arent saving all IAMs we only end up the redisplay ones", "author": "mikechoch", "createdAt": "2020-05-11T17:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxODAyMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxODMyMQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r422318321", "bodyText": "good one!", "author": "Jeasmine", "createdAt": "2020-05-08T19:04:27Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java", "diffHunk": "@@ -444,6 +447,18 @@ private static void openURLInBrowser(@NonNull Uri uri) {\n       return Collections.newSetFromMap(new ConcurrentHashMap<T, Boolean>());\n    }\n \n+   // Creates a new Set<String> from a Set String by converting and iterating a JSONArray\n+   static Set<String> newStringSetFromString(String setString) throws JSONException {", "originalCommit": "566c0694a87bb7e6bd77be46e7fe98135c26b255", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a552dd564f1b40f5cbb6b085181fc265527c961", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java\nindex b68b55c5..bbde2a88 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java\n\n@@ -448,12 +448,11 @@ class OSUtils {\n    }\n \n    // Creates a new Set<String> from a Set String by converting and iterating a JSONArray\n-   static Set<String> newStringSetFromString(String setString) throws JSONException {\n+   static Set<String> newStringSetFromJSONArray(JSONArray jsonArray) throws JSONException {\n       Set<String> stringSet = new HashSet<>();\n \n-      JSONArray clickIdsArray = new JSONArray(setString);\n-      for (int i = 0; i < clickIdsArray.length(); i++) {\n-         stringSet.add(clickIdsArray.getString(i));\n+      for (int i = 0; i < jsonArray.length(); i++) {\n+         stringSet.add(jsonArray.getString(i));\n       }\n \n       return stringSet;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4ODkyNw==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423288927", "bodyText": "Let's ensure the backend will always send this value for unlimited reshows.", "author": "jkasten2", "createdAt": "2020-05-11T20:08:19Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSInAppMessageRedisplayStats.java", "diffHunk": "@@ -3,31 +3,31 @@\n import org.json.JSONException;\n import org.json.JSONObject;\n \n-class OSInAppMessageDisplayStats {\n+class OSInAppMessageRedisplayStats {\n \n     private static final String DISPLAY_LIMIT = \"limit\";\n     private static final String DISPLAY_DELAY = \"delay\";\n \n-    //Last IAM display time in seconds\n+    // Last IAM display time in seconds\n     private long lastDisplayTime = -1;\n-    //Current quantity of displays\n+    // Current quantity of displays\n     private int displayQuantity = 0;\n-    //Quantity of displays limit\n-    private int displayLimit = Integer.MAX_VALUE;\n-    //Delay between displays in seconds\n+    // Quantity of displays limit\n+    private int displayLimit = 1;", "originalCommit": "566c0694a87bb7e6bd77be46e7fe98135c26b255", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMDY5OQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423300699", "bodyText": "good UnitTest, on it", "author": "mikechoch", "createdAt": "2020-05-11T20:30:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4ODkyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxNzk0Nw==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423317947", "bodyText": "are you making this change on iOS too?", "author": "Jeasmine", "createdAt": "2020-05-11T21:02:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4ODkyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MTc2Mg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423341762", "bodyText": "I will be but not yet", "author": "mikechoch", "createdAt": "2020-05-11T21:53:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4ODkyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1MjE2Nw==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423352167", "bodyText": "I did a quick check on the backed, looks like redisplay won't even get sent unless this value is set to 1 is what we want.", "author": "jkasten2", "createdAt": "2020-05-11T22:18:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4ODkyNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4OTY3Nw==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423289677", "bodyText": "setString should be something like jsonArray instead.", "author": "jkasten2", "createdAt": "2020-05-11T20:09:50Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java", "diffHunk": "@@ -444,6 +447,18 @@ private static void openURLInBrowser(@NonNull Uri uri) {\n       return Collections.newSetFromMap(new ConcurrentHashMap<T, Boolean>());\n    }\n \n+   // Creates a new Set<String> from a Set String by converting and iterating a JSONArray\n+   static Set<String> newStringSetFromString(String setString) throws JSONException {", "originalCommit": "566c0694a87bb7e6bd77be46e7fe98135c26b255", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMTIwMA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423301200", "bodyText": "good idea, on it", "author": "mikechoch", "createdAt": "2020-05-11T20:31:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4OTY3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3a552dd564f1b40f5cbb6b085181fc265527c961", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java\nindex b68b55c5..bbde2a88 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java\n\n@@ -448,12 +448,11 @@ class OSUtils {\n    }\n \n    // Creates a new Set<String> from a Set String by converting and iterating a JSONArray\n-   static Set<String> newStringSetFromString(String setString) throws JSONException {\n+   static Set<String> newStringSetFromJSONArray(JSONArray jsonArray) throws JSONException {\n       Set<String> stringSet = new HashSet<>();\n \n-      JSONArray clickIdsArray = new JSONArray(setString);\n-      for (int i = 0; i < clickIdsArray.length(); i++) {\n-         stringSet.add(clickIdsArray.getString(i));\n+      for (int i = 0; i < jsonArray.length(); i++) {\n+         stringSet.add(jsonArray.getString(i));\n       }\n \n       return stringSet;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MDA2OA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423290068", "bodyText": "I think you forgot to rename clickIdsArray to something more generic when you moved it to OSUtils.", "author": "jkasten2", "createdAt": "2020-05-11T20:10:27Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java", "diffHunk": "@@ -444,6 +447,18 @@ private static void openURLInBrowser(@NonNull Uri uri) {\n       return Collections.newSetFromMap(new ConcurrentHashMap<T, Boolean>());\n    }\n \n+   // Creates a new Set<String> from a Set String by converting and iterating a JSONArray\n+   static Set<String> newStringSetFromString(String setString) throws JSONException {\n+      Set<String> stringSet = new HashSet<>();\n+\n+      JSONArray clickIdsArray = new JSONArray(setString);", "originalCommit": "566c0694a87bb7e6bd77be46e7fe98135c26b255", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMTM3NA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423301374", "bodyText": "Whoops. thank you", "author": "mikechoch", "createdAt": "2020-05-11T20:31:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MDA2OA=="}], "type": "inlineReview", "revised_code": {"commit": "3a552dd564f1b40f5cbb6b085181fc265527c961", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java\nindex b68b55c5..bbde2a88 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSUtils.java\n\n@@ -448,12 +448,11 @@ class OSUtils {\n    }\n \n    // Creates a new Set<String> from a Set String by converting and iterating a JSONArray\n-   static Set<String> newStringSetFromString(String setString) throws JSONException {\n+   static Set<String> newStringSetFromJSONArray(JSONArray jsonArray) throws JSONException {\n       Set<String> stringSet = new HashSet<>();\n \n-      JSONArray clickIdsArray = new JSONArray(setString);\n-      for (int i = 0; i < clickIdsArray.length(); i++) {\n-         stringSet.add(clickIdsArray.getString(i));\n+      for (int i = 0; i < jsonArray.length(); i++) {\n+         stringSet.add(jsonArray.getString(i));\n       }\n \n       return stringSet;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTExNQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423291115", "bodyText": "SIX_MONTHS_IN_SECONDS should be something more descriptive to what is it used for like IAM_MAX_CACHE_SEC", "author": "jkasten2", "createdAt": "2020-05-11T20:12:31Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java", "diffHunk": "@@ -4,69 +4,218 @@\n import com.onesignal.OneSignalDbContract.CachedUniqueOutcomeNotificationTable;\n \n import android.content.Context;\n+import android.database.Cursor;\n import android.database.sqlite.SQLiteDatabase;\n import android.os.Process;\n+import android.support.annotation.WorkerThread;\n+\n+import org.json.JSONException;\n+\n+import java.util.Set;\n \n class OneSignalCacheCleaner {\n \n-    private static String OS_DELETE_OLD_CACHED_DATA = \"OS_DELETE_OLD_CACHED_DATA\";\n+    private final static long ONE_WEEK_IN_SECONDS = 604_800L;\n+    private final static long SIX_MONTHS_IN_SECONDS = 15_552_000L;", "originalCommit": "566c0694a87bb7e6bd77be46e7fe98135c26b255", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTY4OQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423291689", "bodyText": "6 months should be a comment instead.", "author": "jkasten2", "createdAt": "2020-05-11T20:13:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMTUzMg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423301532", "bodyText": "You are correct, on it", "author": "mikechoch", "createdAt": "2020-05-11T20:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTExNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3a552dd564f1b40f5cbb6b085181fc265527c961", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\nindex 14bed3b6..e611cec2 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n\n@@ -9,14 +9,15 @@ import android.database.sqlite.SQLiteDatabase;\n import android.os.Process;\n import android.support.annotation.WorkerThread;\n \n+import org.json.JSONArray;\n import org.json.JSONException;\n \n import java.util.Set;\n \n class OneSignalCacheCleaner {\n \n-    private final static long ONE_WEEK_IN_SECONDS = 604_800L;\n-    private final static long SIX_MONTHS_IN_SECONDS = 15_552_000L;\n+    private final static long NOTIFICATION_CACHE_DATA_LIFETIME = 604_800L; // 7 days in seconds\n+    private final static long IAM_CACHE_DATA_LIFETIME = 15_552_000L; // 6 months in seconds\n \n     private final static String OS_DELETE_CACHED_NOTIFICATIONS_THREAD = \"OS_DELETE_CACHED_NOTIFICATIONS_THREAD\";\n     private final static String OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD = \"OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTM0Mg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423291342", "bodyText": "ONE_WEEK_IN_SECONDS should be something more descriptive to what is it used. One week should be a comment instead.", "author": "jkasten2", "createdAt": "2020-05-11T20:12:54Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java", "diffHunk": "@@ -4,69 +4,218 @@\n import com.onesignal.OneSignalDbContract.CachedUniqueOutcomeNotificationTable;\n \n import android.content.Context;\n+import android.database.Cursor;\n import android.database.sqlite.SQLiteDatabase;\n import android.os.Process;\n+import android.support.annotation.WorkerThread;\n+\n+import org.json.JSONException;\n+\n+import java.util.Set;\n \n class OneSignalCacheCleaner {\n \n-    private static String OS_DELETE_OLD_CACHED_DATA = \"OS_DELETE_OLD_CACHED_DATA\";\n+    private final static long ONE_WEEK_IN_SECONDS = 604_800L;", "originalCommit": "566c0694a87bb7e6bd77be46e7fe98135c26b255", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a552dd564f1b40f5cbb6b085181fc265527c961", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\nindex 14bed3b6..e611cec2 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n\n@@ -9,14 +9,15 @@ import android.database.sqlite.SQLiteDatabase;\n import android.os.Process;\n import android.support.annotation.WorkerThread;\n \n+import org.json.JSONArray;\n import org.json.JSONException;\n \n import java.util.Set;\n \n class OneSignalCacheCleaner {\n \n-    private final static long ONE_WEEK_IN_SECONDS = 604_800L;\n-    private final static long SIX_MONTHS_IN_SECONDS = 15_552_000L;\n+    private final static long NOTIFICATION_CACHE_DATA_LIFETIME = 604_800L; // 7 days in seconds\n+    private final static long IAM_CACHE_DATA_LIFETIME = 15_552_000L; // 6 months in seconds\n \n     private final static String OS_DELETE_CACHED_NOTIFICATIONS_THREAD = \"OS_DELETE_CACHED_NOTIFICATIONS_THREAD\";\n     private final static String OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD = \"OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD\";\n"}}, {"oid": "3a552dd564f1b40f5cbb6b085181fc265527c961", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/3a552dd564f1b40f5cbb6b085181fc265527c961", "message": "Fixed comments on previous commits in PR\n* Renamed global ONE_WEEK_IN_SECONDS & SIX_MONTHS_IN_SECONDS to NOTIFICATION_CACHE_DATA_LIFETIME & IAM_CACHE_DATA_LIFETIME\n* Renamed newStringSetFromString to newStringSetFromJSONArray\n* Pass in a JSONArray instead of a string to newStringSetFromJSONArray", "committedDate": "2020-05-11T22:00:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1Mzc2NQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423353765", "bodyText": "This would be cleaner with 2 methods instead of long if blocks.", "author": "jkasten2", "createdAt": "2020-05-11T22:22:43Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java", "diffHunk": "@@ -4,69 +4,219 @@\n import com.onesignal.OneSignalDbContract.CachedUniqueOutcomeNotificationTable;\n \n import android.content.Context;\n+import android.database.Cursor;\n import android.database.sqlite.SQLiteDatabase;\n import android.os.Process;\n+import android.support.annotation.WorkerThread;\n+\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+\n+import java.util.Set;\n \n class OneSignalCacheCleaner {\n \n-    private static String OS_DELETE_OLD_CACHED_DATA = \"OS_DELETE_OLD_CACHED_DATA\";\n+    private final static long NOTIFICATION_CACHE_DATA_LIFETIME = 604_800L; // 7 days in seconds\n+    private final static long IAM_CACHE_DATA_LIFETIME = 15_552_000L; // 6 months in seconds\n+\n+    private final static String OS_DELETE_CACHED_NOTIFICATIONS_THREAD = \"OS_DELETE_CACHED_NOTIFICATIONS_THREAD\";\n+    private final static String OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD = \"OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD\";\n \n     /**\n      * We clean outdated cache from several places within the OneSignal SDK here\n-     * 1. In App Messaging id sets (impressions, clicks, views)\n-     * 2. Notifications after 1 week\n-     * 3. Unique outcome events linked to notification ids (1 week)\n+     * 1. Notifications & unique outcome events linked to notification ids (1 week)\n+     * 2. Cached In App Messaging Sets in SharedPreferences (impressions, clicks, views) and SQL IAMs\n+     */\n+    static void cleanOldCachedData(final Context context) {\n+        OneSignalDbHelper dbHelper = OneSignalDbHelper.getInstance(context);\n+        SQLiteDatabase writableDb = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        cleanNotificationCache(writableDb);\n+        cleanCachedInAppMessages(writableDb);\n+    }\n+\n+    /**\n+     * Cleans two notification tables\n+     * 1. NotificationTable.TABLE_NAME\n+     * 2. CachedUniqueOutcomeNotificationTable.TABLE_NAME\n      */\n-    synchronized static void cleanOldCachedData(final Context context) {\n+    synchronized static void cleanNotificationCache(final SQLiteDatabase writableDb) {\n         new Thread(new Runnable() {\n             @Override\n             public void run() {\n                 Thread.currentThread().setPriority(Process.THREAD_PRIORITY_BACKGROUND);\n-                OneSignalDbHelper dbHelper = OneSignalDbHelper.getInstance(context);\n-                SQLiteDatabase writableDb = dbHelper.getWritableDbWithRetries();\n \n-                cleanInAppMessagingCache();\n-                cleanNotificationCache(writableDb);\n+                cleanCachedNotifications(writableDb);\n+                cleanCachedUniqueOutcomeEventNotifications(writableDb);\n             }\n-        }, OS_DELETE_OLD_CACHED_DATA).start();\n+\n+        }, OS_DELETE_CACHED_NOTIFICATIONS_THREAD).start();\n     }\n \n     /**\n-     * TODO: Needs to be implemented to clean out old IAM data used to track impressions, clicks, and viewed IAMs\n+     * Remove IAMs that the last display time was six month ago\n+     * 1. Query for all old message ids and old clicked click ids\n+     * 2. Delete old IAMs from SQL\n+     * 3. Use queried data to clean SharedPreferences\n      */\n-    static void cleanInAppMessagingCache() {\n-        // NOTE: Currently IAMs will pile up overtime and since IAMs can be modified, active, inactive, etc.\n-        //  we never truly know when it is the correct time to remove these ids form our cache\n+    @WorkerThread\n+    synchronized static void cleanCachedInAppMessages(final SQLiteDatabase writableDb) {\n+        new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                Thread.currentThread().setPriority(Process.THREAD_PRIORITY_BACKGROUND);\n+\n+                // 1. Query for all old message ids and old clicked click ids\n+                String[] retColumns = new String[]{\n+                        OneSignalDbContract.InAppMessageTable.COLUMN_NAME_MESSAGE_ID,\n+                        OneSignalDbContract.InAppMessageTable.COLUMN_CLICK_IDS\n+                };\n+\n+                String whereStr = OneSignalDbContract.InAppMessageTable.COLUMN_NAME_LAST_DISPLAY + \" < ?\";\n+\n+                String sixMonthsAgoInSeconds = String.valueOf((System.currentTimeMillis() / 1_000L) - IAM_CACHE_DATA_LIFETIME);\n+                String[] whereArgs = new String[]{sixMonthsAgoInSeconds};\n+\n+                Set<String> oldMessageIds = OSUtils.newConcurrentSet();\n+                Set<String> oldClickedClickIds = OSUtils.newConcurrentSet();\n+\n+                Cursor cursor = null;\n+                try {\n+                    cursor = writableDb.query(OneSignalDbContract.InAppMessageTable.TABLE_NAME,\n+                            retColumns,\n+                            whereStr,\n+                            whereArgs,\n+                            null,\n+                            null,\n+                            null);\n+\n+                    if (cursor == null || cursor.getCount() == 0) {\n+                        OneSignal.onesignalLog(OneSignal.LOG_LEVEL.DEBUG, \"Attempted to clean 6 month old IAM data, but none exists!\");\n+                        return;\n+                    }\n+\n+                    // From cursor get all of the old message ids and old clicked click ids\n+                    if (cursor.moveToFirst()) {\n+                        do {\n+                            String oldMessageId = cursor.getString(\n+                                    cursor.getColumnIndex(\n+                                            OneSignalDbContract.InAppMessageTable.COLUMN_NAME_MESSAGE_ID));\n+                            String oldClickIds = cursor.getString(\n+                                    cursor.getColumnIndex(\n+                                            OneSignalDbContract.InAppMessageTable.COLUMN_CLICK_IDS));\n+\n+                            oldMessageIds.add(oldMessageId);\n+                            oldClickedClickIds.addAll(OSUtils.newStringSetFromJSONArray(new JSONArray(oldClickIds)));\n+                        } while (cursor.moveToNext());\n+                    }\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                } finally {\n+                    if (cursor != null & !cursor.isClosed())\n+                        cursor.close();\n+                }\n+\n+                // 2. Delete old IAMs from SQL\n+                writableDb.delete(\n+                        OneSignalDbContract.InAppMessageTable.TABLE_NAME,\n+                        whereStr,\n+                        whereArgs);\n+\n+                // 3. Use queried data to clean SharedPreferences\n+                cleanCachedSharedPreferenceIamData(oldMessageIds, oldClickedClickIds);\n+            }\n+\n+        }, OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD).start();\n     }\n \n     /**\n-     * Cleans two notification tables\n-     * 1. NotificationTable.TABLE_NAME\n-     * 2. CachedUniqueOutcomeNotificationTable.TABLE_NAME\n+     * Deletes notifications with created timestamps older than 7 days\n+     * <br/><br/>\n+     * Note: This should only ever be called by {@link OneSignalCacheCleaner#cleanNotificationCache(SQLiteDatabase)}\n+     * <br/><br/>\n+     * @see OneSignalCacheCleaner#cleanNotificationCache(SQLiteDatabase)\n      */\n-    static void cleanNotificationCache(SQLiteDatabase writableDb) {\n-        cleanOldNotificationData(writableDb);\n-        cleanOldUniqueOutcomeEventNotificationsCache(writableDb);\n+    private static void cleanCachedNotifications(SQLiteDatabase writableDb) {\n+        String whereStr = NotificationTable.COLUMN_NAME_CREATED_TIME + \" < ?\";\n+\n+        String sevenDaysAgoInSeconds = String.valueOf((System.currentTimeMillis() / 1_000L) - NOTIFICATION_CACHE_DATA_LIFETIME);\n+        String[] whereArgs = new String[]{ sevenDaysAgoInSeconds };\n+\n+        writableDb.delete(\n+                NotificationTable.TABLE_NAME,\n+                whereStr,\n+                whereArgs);\n     }\n \n     /**\n-     * Deletes any notifications with created timestamps older than 7 days\n+     * Deletes cached unique outcome notifications whose ids do not exist inside of the NotificationTable.TABLE_NAME\n+     * <br/><br/>\n+     * Note: This should only ever be called by {@link OneSignalCacheCleaner#cleanNotificationCache(SQLiteDatabase)}\n+     * <br/><br/>\n+     * @see OneSignalCacheCleaner#cleanNotificationCache(SQLiteDatabase)\n      */\n-    private static void cleanOldNotificationData(SQLiteDatabase writableDb) {\n-        writableDb.delete(NotificationTable.TABLE_NAME,\n-                NotificationTable.COLUMN_NAME_CREATED_TIME + \" < \" + ((System.currentTimeMillis() / 1_000L) - 604_800L),\n+    private static void cleanCachedUniqueOutcomeEventNotifications(SQLiteDatabase writableDb) {\n+        String whereStr = \"NOT EXISTS(\" +\n+                \"SELECT NULL FROM \" + NotificationTable.TABLE_NAME + \" n \" +\n+                \"WHERE\" + \" n.\" + NotificationTable.COLUMN_NAME_NOTIFICATION_ID + \" = \" + CachedUniqueOutcomeNotificationTable.COLUMN_NAME_NOTIFICATION_ID + \")\";\n+\n+        writableDb.delete(\n+                CachedUniqueOutcomeNotificationTable.TABLE_NAME,\n+                whereStr,\n                 null);\n     }\n \n     /**\n-     * Deletes any notifications whose ids do not exist inside of the NotificationTable.TABLE_NAME\n+     * Deletes old IAM SharedPreference dismissed and impressioned message ids as well as clicked click ids\n+     * <br/><br/>\n+     * Note: This should only ever be called by {@link OneSignalCacheCleaner#cleanCachedInAppMessages(SQLiteDatabase)}\n+     * <br/><br/>\n+     * @see OneSignalCacheCleaner#cleanCachedInAppMessages(SQLiteDatabase)\n      */\n-    static void cleanOldUniqueOutcomeEventNotificationsCache(SQLiteDatabase writableDb) {\n-        writableDb.delete(CachedUniqueOutcomeNotificationTable.TABLE_NAME,\n-                \"NOT EXISTS(SELECT NULL FROM \" + NotificationTable.TABLE_NAME +\n-                        \" n WHERE\" +\n-                        \" n.\" + NotificationTable.COLUMN_NAME_NOTIFICATION_ID  + \" = \" + CachedUniqueOutcomeNotificationTable.COLUMN_NAME_NOTIFICATION_ID + \")\",\n-                null);\n+    private static void cleanCachedSharedPreferenceIamData(Set<String> oldMessageIds, Set<String> oldClickedClickIds) {\n+        // IAMs without redisplay on with pile up and we need to clean these for dismissing, impressions, and clicks\n+        if (oldMessageIds != null && oldMessageIds.size() > 0) {", "originalCommit": "3a552dd564f1b40f5cbb6b085181fc265527c961", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4NzMzOQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1007#discussion_r423887339", "bodyText": "On it!", "author": "mikechoch", "createdAt": "2020-05-12T16:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1Mzc2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "31f5b19a5995178d5799de7065e0e2292c78fa6e", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\nindex e611cec2..5b7b0896 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalCacheCleaner.java\n\n@@ -123,7 +123,8 @@ class OneSignalCacheCleaner {\n                         whereArgs);\n \n                 // 3. Use queried data to clean SharedPreferences\n-                cleanCachedSharedPreferenceIamData(oldMessageIds, oldClickedClickIds);\n+                cleanInAppMessageIds(oldMessageIds);\n+                cleanInAppMessageClickedClickIds(oldClickedClickIds);\n             }\n \n         }, OS_DELETE_CACHED_REDISPLAYED_IAMS_THREAD).start();\n"}}, {"oid": "31f5b19a5995178d5799de7065e0e2292c78fa6e", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/31f5b19a5995178d5799de7065e0e2292c78fa6e", "message": "Broke up Shared Preference cleaning into 2 methods\n* First method cleans message ids for dismissed and impressioned iams stored in Shared Prefs after 6 months\n* Second method cleans click ids belonging to the iam in Shared Prefs after 6 months", "committedDate": "2020-05-12T17:05:28Z", "type": "commit"}]}