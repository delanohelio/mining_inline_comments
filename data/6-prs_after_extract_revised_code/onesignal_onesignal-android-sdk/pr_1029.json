{"pr_number": 1029, "pr_title": "Add Huawei Location support", "pr_createdAt": "2020-05-21T22:34:04Z", "pr_url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029", "timeline": [{"oid": "a4504b29fb204f19111406161df3117aabf46f3d", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/a4504b29fb204f19111406161df3117aabf46f3d", "message": "Add Huawei Location UnitTest", "committedDate": "2020-05-26T15:40:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NTg3Ng==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r431495876", "bodyText": "We will want to change this to the same logic we are using the getDeviceType once PR #1026 is merged in.", "author": "jkasten2", "createdAt": "2020-05-27T23:18:07Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationController.java", "diffHunk": "@@ -248,40 +273,100 @@ else if (permissionList.contains(\"android.permission.ACCESS_COARSE_LOCATION\")) {\n \n    // Started from this class or PermissionActivity\n    static void startGetLocation() {\n-      // Prevents overlapping requests\n-      if (fallbackFailThread != null)\n-         return;\n+      OneSignal.Log(OneSignal.LOG_LEVEL.DEBUG, \"LocationController startGetLocation with lastLocation: \" + lastLocation);\n+\n+      if (locationHandlerThread == null)\n+         locationHandlerThread = new LocationHandlerThread();\n \n       try {\n-         synchronized (syncLock) {\n-            startFallBackThread();\n-\n-            if (locationHandlerThread == null)\n-               locationHandlerThread = new LocationHandlerThread();\n-\n-            if (mGoogleApiClient == null || mLastLocation == null) {\n-               GoogleApiClientListener googleApiClientListener = new GoogleApiClientListener();\n-               GoogleApiClient googleApiClient = new GoogleApiClient.Builder(classContext)\n-                       .addApi(LocationServices.API)\n-                       .addConnectionCallbacks(googleApiClientListener)\n-                       .addOnConnectionFailedListener(googleApiClientListener)\n-                       .setHandler(locationHandlerThread.mHandler)\n-                       .build();\n-               mGoogleApiClient = new GoogleApiClientCompatProxy(googleApiClient);\n-\n-               mGoogleApiClient.connect();\n-            }\n-            else if (mLastLocation != null)\n-               fireCompleteForLocation(mLastLocation);\n+         if (isGooglePlayServicesAvailable(classContext)) {", "originalCommit": "a4504b29fb204f19111406161df3117aabf46f3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMjU4Mg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r435732582", "bodyText": "Rebased this PR off of huawei_handle_notif_opens so we can address this now.\n@Jeasmine I addressed this in PR #1045 if you can do a review to close the comment", "author": "jkasten2", "createdAt": "2020-06-05T07:16:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NTg3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "af7dd2cb62ee1517cf96acbd567f5824ee411b83", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationController.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationGMS.java\nsimilarity index 60%\nrename from OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationController.java\nrename to OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationGMS.java\nindex e6391e6b..8beec537 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationController.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationGMS.java\n\n@@ -273,100 +248,40 @@ class LocationController {\n \n    // Started from this class or PermissionActivity\n    static void startGetLocation() {\n-      OneSignal.Log(OneSignal.LOG_LEVEL.DEBUG, \"LocationController startGetLocation with lastLocation: \" + lastLocation);\n-\n-      if (locationHandlerThread == null)\n-         locationHandlerThread = new LocationHandlerThread();\n-\n-      try {\n-         if (isGooglePlayServicesAvailable(classContext)) {\n-            initGoogleLocation();\n-         } else if (isHMSAvailable(classContext)) {\n-            initHuaweiLocation();\n-         } else {\n-            fireFailedComplete();\n-         }\n-      } catch (Throwable t) {\n-         OneSignal.Log(OneSignal.LOG_LEVEL.WARN, \"Location permission exists but there was an error initializing: \", t);\n-         fireFailedComplete();\n-      }\n-   }\n-\n-   private static void initGoogleLocation() {\n       // Prevents overlapping requests\n       if (fallbackFailThread != null)\n          return;\n \n-      synchronized (syncLock) {\n-         startFallBackThread();\n-\n-         if (googleApiClient == null || lastLocation == null) {\n-            GoogleApiClientListener googleApiClientListener = new GoogleApiClientListener();\n-            GoogleApiClient googleApiClient = new GoogleApiClient.Builder(classContext)\n-                    .addApi(LocationServices.API)\n-                    .addConnectionCallbacks(googleApiClientListener)\n-                    .addOnConnectionFailedListener(googleApiClientListener)\n-                    .setHandler(locationHandlerThread.mHandler)\n-                    .build();\n-\n-            LocationController.googleApiClient = new GoogleApiClientCompatProxy(googleApiClient);\n-            LocationController.googleApiClient.connect();\n-         } else if (lastLocation != null)\n-            fireCompleteForLocation(lastLocation);\n-      }\n-   }\n-\n-   private static void initHuaweiLocation() {\n-      synchronized (syncLock) {\n-         if (huaweiFusedLocationClient == null) {\n-            try {\n-               huaweiFusedLocationClient = com.huawei.hms.location.LocationServices.getFusedLocationProviderClient(classContext);\n-            } catch (Exception e) {\n-               OneSignal.Log(OneSignal.LOG_LEVEL.ERROR, \"Huawei LocationServices getFusedLocationProviderClient failed! \" + e);\n-               fireFailedComplete();\n-               return;\n+      try {\n+         synchronized (syncLock) {\n+            startFallBackThread();\n+\n+            if (locationHandlerThread == null)\n+               locationHandlerThread = new LocationHandlerThread();\n+\n+            if (mGoogleApiClient == null || mLastLocation == null) {\n+               GoogleApiClientListener googleApiClientListener = new GoogleApiClientListener();\n+               GoogleApiClient googleApiClient = new GoogleApiClient.Builder(classContext)\n+                       .addApi(LocationServices.API)\n+                       .addConnectionCallbacks(googleApiClientListener)\n+                       .addOnConnectionFailedListener(googleApiClientListener)\n+                       .setHandler(locationHandlerThread.mHandler)\n+                       .build();\n+               mGoogleApiClient = new GoogleApiClientCompatProxy(googleApiClient);\n+\n+               mGoogleApiClient.connect();\n             }\n+            else if (mLastLocation != null)\n+               fireCompleteForLocation(mLastLocation);\n          }\n-         if (lastLocation != null)\n-            fireCompleteForLocation(lastLocation);\n-         else\n-            huaweiFusedLocationClient.getLastLocation()\n-                    .addOnSuccessListener(new com.huawei.hmf.tasks.OnSuccessListener<Location>() {\n-                       @Override\n-                       public void onSuccess(Location location) {\n-                          OneSignal.Log(OneSignal.LOG_LEVEL.WARN, \"Huawei LocationServices getLastLocation returned location: \" + location);\n-                          if (location == null) {\n-                             fireFailedComplete();\n-                             return;\n-                          }\n-                          lastLocation = location;\n-                          fireCompleteForLocation(lastLocation);\n-                          locationUpdateListener = new LocationUpdateListener(huaweiFusedLocationClient);\n-                       }\n-                    })\n-                    .addOnFailureListener(new com.huawei.hmf.tasks.OnFailureListener() {\n-                       @Override\n-                       public void onFailure(Exception e) {\n-                          OneSignal.Log(OneSignal.LOG_LEVEL.ERROR, \"Huawei LocationServices getLastLocation failed!\", e);\n-                          fireFailedComplete();\n-                       }\n-                    });\n+      } catch (Throwable t) {\n+         OneSignal.Log(OneSignal.LOG_LEVEL.WARN, \"Location permission exists but there was an error initializing: \", t);\n+         fireFailedComplete();\n       }\n    }\n \n-   protected static boolean isGooglePlayServicesAvailable(Context context) {\n-      GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();\n-      int status = googleApiAvailability.isGooglePlayServicesAvailable(context);\n-      return status == ConnectionResult.SUCCESS;\n-   }\n-\n-   protected static boolean isHMSAvailable(Context context) {\n-      int status = HuaweiApiAvailability.getInstance().isHuaweiMobileServicesAvailable(context);\n-      return status == ConnectionResult.SUCCESS;\n-   }\n-\n    private static int getApiFallbackWait() {\n-      return API_FALLBACK_TIME;\n+      return 30_000;\n    }\n \n    private static void startFallBackThread() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NzQ1NA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r431497454", "bodyText": "Let's put HMS in the class name so it is clear it is only for it", "author": "jkasten2", "createdAt": "2020-05-27T23:23:03Z", "path": "OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowFusedLocationProviderClient.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/**\n+ * Modified MIT License\n+ * <p>\n+ * Copyright 2020 OneSignal\n+ * <p>\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ * <p>\n+ * 1. The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ * <p>\n+ * 2. All copies of substantial portions of the Software may only be used in connection\n+ * with services provided by OneSignal.\n+ * <p>\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package com.onesignal;\n+\n+import android.content.Context;\n+import android.location.Location;\n+import android.os.Handler;\n+import android.os.Looper;\n+\n+import com.huawei.hmf.tasks.Task;\n+import com.huawei.hmf.tasks.a.i;\n+import com.huawei.hms.location.FusedLocationProviderClient;\n+import com.huawei.hms.location.LocationCallback;\n+import com.huawei.hms.location.LocationRequest;\n+\n+import org.robolectric.annotation.Implementation;\n+import org.robolectric.annotation.Implements;\n+\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+@Implements(FusedLocationProviderClient.class)\n+public class ShadowFusedLocationProviderClient {", "originalCommit": "a4504b29fb204f19111406161df3117aabf46f3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxNTAyMQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r435715021", "bodyText": "Fix in PR #1043 and has been merged into this PR already.", "author": "jkasten2", "createdAt": "2020-06-05T06:30:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NzQ1NA=="}], "type": "inlineReview", "revised_code": {"commit": "fd8df18208886be760eaafcb04275aaf6a299dd0", "chunk": "diff --git a/OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowFusedLocationProviderClient.java b/OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowHMSFusedLocationProviderClient.java\nsimilarity index 97%\nrename from OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowFusedLocationProviderClient.java\nrename to OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowHMSFusedLocationProviderClient.java\nindex cb5e5f52..d578e95a 100644\n--- a/OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowFusedLocationProviderClient.java\n+++ b/OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowHMSFusedLocationProviderClient.java\n\n@@ -41,11 +41,8 @@ import com.huawei.hms.location.LocationRequest;\n import org.robolectric.annotation.Implementation;\n import org.robolectric.annotation.Implements;\n \n-import java.util.Timer;\n-import java.util.TimerTask;\n-\n @Implements(FusedLocationProviderClient.class)\n-public class ShadowFusedLocationProviderClient {\n+public class ShadowHMSFusedLocationProviderClient {\n \n     Context context;\n     public static Double lat, log;\n"}}, {"oid": "fd8df18208886be760eaafcb04275aaf6a299dd0", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/fd8df18208886be760eaafcb04275aaf6a299dd0", "message": "Upgraded to HMS location version 4 from 3\n\n* Also updated unit test for Location class name change", "committedDate": "2020-06-05T05:18:59Z", "type": "forcePushed"}, {"oid": "eda5af68cb4099505160f9a267eaffb8c14c3057", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/eda5af68cb4099505160f9a267eaffb8c14c3057", "message": "Upgraded to HMS location version 4 from 3\n\n* Also updated unit test for Location class name change", "committedDate": "2020-06-05T06:33:52Z", "type": "forcePushed"}, {"oid": "40e3275222eb6b8f44e5553beba255175dfa3a79", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/40e3275222eb6b8f44e5553beba255175dfa3a79", "message": "Upgraded to HMS location version 4 from 3\n\n* Also updated unit test for Location class name change", "committedDate": "2020-06-05T07:06:04Z", "type": "forcePushed"}, {"oid": "af7dd2cb62ee1517cf96acbd567f5824ee411b83", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/af7dd2cb62ee1517cf96acbd567f5824ee411b83", "message": "Test for HMS notification open REST API call", "committedDate": "2020-06-10T02:15:20Z", "type": "commit"}, {"oid": "dd6bd548e85459573db427070d92bc410a3d8550", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/dd6bd548e85459573db427070d92bc410a3d8550", "message": "Correct NotificationOpenedActivityHMS intent flags\n\n* Removed used of deperated flag\n* Added more comments on why the specific flags are needed.", "committedDate": "2020-06-10T02:15:20Z", "type": "commit"}, {"oid": "7f07b128dd0442dbfd5cd65c7758f997c7cd14a7", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/7f07b128dd0442dbfd5cd65c7758f997c7cd14a7", "message": "Add Huawei Location support", "committedDate": "2020-06-10T02:15:20Z", "type": "commit"}, {"oid": "7effb1e44d90b9de00d5cd5e68fe33dac3badca0", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/7effb1e44d90b9de00d5cd5e68fe33dac3badca0", "message": "Add Huawei Location UnitTest", "committedDate": "2020-06-10T02:15:20Z", "type": "commit"}, {"oid": "b4085ee17bb9b0b66c954f47858ee6cc03063e9d", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/b4085ee17bb9b0b66c954f47858ee6cc03063e9d", "message": "HMS location fix ups\n\n* Changed gradle to compileOnly so it isn't a direct dependecy\n* Renamed ShadowFusedLocationProviderClient -> ShadowHMSFusedLocationProviderClient\n   - Naming more clear this is only for HMS\n* Removed hms gradle plugin from onesignal SDK target\n   - It only applies to app targets", "committedDate": "2020-06-10T02:15:20Z", "type": "commit"}, {"oid": "1310599ebbecc623818bed40240e1a2062816436", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/1310599ebbecc623818bed40240e1a2062816436", "message": "Upgraded to HMS location version 4 from 3\n\n* Also updated unit test for Location class name change", "committedDate": "2020-06-10T02:15:20Z", "type": "commit"}, {"oid": "1310599ebbecc623818bed40240e1a2062816436", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/1310599ebbecc623818bed40240e1a2062816436", "message": "Upgraded to HMS location version 4 from 3\n\n* Also updated unit test for Location class name change", "committedDate": "2020-06-10T02:15:20Z", "type": "forcePushed"}, {"oid": "37dcd0e6c5e5ffb857f2414fd5f090fa39daa504", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/37dcd0e6c5e5ffb857f2414fd5f090fa39daa504", "message": "Changed location platform detection to device_type\n\n* This prevents code duplicating and a consistently on provider\n    - If we use Google for push we should use google for location\n    - If we use HMS for push we should use HMS for location.", "committedDate": "2020-06-10T02:37:56Z", "type": "commit"}, {"oid": "6feac1f81ef340ba40a53c42a84f53f8c40dce32", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/6feac1f81ef340ba40a53c42a84f53f8c40dce32", "message": "Removed hms:base and agconnect-core\n\n* These are already part of hms:lcation and hms:push\n   - The specifc version is mis-matched with agconnect-core causing internal NPE errors\n   - This fixes the test failing as well.", "committedDate": "2020-06-10T02:37:56Z", "type": "commit"}, {"oid": "382ec81a31d57ec5dcd616acea8469f950095b96", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/382ec81a31d57ec5dcd616acea8469f950095b96", "message": "Added missing huaweiFusedLocationClient null check\n\n* Also cleaned up ShadowLocationController mocking\n   - This is driven by OSUtil now\n* Fixed shouldRegisterWhenPromptingAfterInit_Huawei\n   - It was using FCM instead of HMS for the push part of the test.", "committedDate": "2020-06-10T02:37:56Z", "type": "commit"}]}