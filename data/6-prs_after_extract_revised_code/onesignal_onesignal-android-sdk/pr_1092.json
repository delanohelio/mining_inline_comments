{"pr_number": 1092, "pr_title": "Add task delay due to requiring consent from remote params", "pr_createdAt": "2020-07-16T17:21:08Z", "pr_url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092", "timeline": [{"oid": "4e6a4eb3ae9d20da2f9e3bf7e912d402bf1c5c28", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/4e6a4eb3ae9d20da2f9e3bf7e912d402bf1c5c28", "message": "Add task delay due to requiring consent from remote params\n\n   * Mote task management to TaskController\n   * Delay task until remote params and init is done\n   * After task delayed, check again for user consent\n   * Fix test, add tests", "committedDate": "2020-07-16T17:22:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMyNDA2Mw==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r456324063", "bodyText": "These OneSignal public methods now seem to go through these steps.\n\nCheck if remote params are done\nIf not add to queue\nAfter remote params finishes check if privacy consent is required.\nCheck if OneSignal has been initialized\n\nHowever with step 4 if we got here we already download remote params so OneSignal has been initialized. So this is a redundant check.", "author": "jkasten2", "createdAt": "2020-07-17T09:17:55Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -1316,25 +1218,35 @@ public static void setEmail(@NonNull final String email, @Nullable final String\n     *                      Omit this value if you do not have a backend to authenticate the user.\n     * @param callback Fire onSuccess or onFailure depending if the update successes or fails\n     */\n-   public static void setEmail(@NonNull final String email, @Nullable final String emailAuthHash, @Nullable EmailUpdateHandler callback) {\n-\n-      //if applicable, check if the user provided privacy consent\n+   public static void setEmail(@NonNull final String email, @Nullable final String emailAuthHash, @Nullable final EmailUpdateHandler callback) {\n+      if (taskController.shouldQueueTaskForInit(\"setEmail()\")) {", "originalCommit": "4e6a4eb3ae9d20da2f9e3bf7e912d402bf1c5c28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ2MjA4Nw==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r456462087", "bodyText": "yeah agree 4th step could be removed", "author": "Jeasmine", "createdAt": "2020-07-17T14:02:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMyNDA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEwMzM2OQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461103369", "bodyText": "Some odd reason removing step 4 causing the test on the method to stall. Noticed this setExternalUserId it gets stuck on threadAndTaskWait but probably for other methods too", "author": "jkasten2", "createdAt": "2020-07-27T18:59:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMyNDA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNTgyMg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461635822", "bodyText": "Solved this, the reason was It was only queuing runnable not pending runnable, and because of that, Executor was not being finished", "author": "Jeasmine", "createdAt": "2020-07-28T14:41:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMyNDA2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5015ee844f8a7e28cf8154b16f5168cebd48d32c", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java\nindex b6bab512..0040f82d 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java\n\n@@ -1219,10 +1208,10 @@ public class OneSignal {\n     * @param callback Fire onSuccess or onFailure depending if the update successes or fails\n     */\n    public static void setEmail(@NonNull final String email, @Nullable final String emailAuthHash, @Nullable final EmailUpdateHandler callback) {\n-      if (taskController.shouldQueueTaskForInit(\"setEmail()\")) {\n+      if (taskController.shouldQueueTaskForInit(OSTaskController.SET_EMAIL)) {\n          logger.error(\"Waiting for remote params. \" +\n                  \"Moving setEmail() operation to a pending task queue.\");\n-         taskController.addTaskWaitingForInit(new Runnable() {\n+         taskController.addTaskToQueue(new Runnable() {\n             @Override\n             public void run() {\n                logger.debug(\"Running setEmail() operation from a pending task queue.\");\n"}}, {"oid": "26400bd8d1b477ef7c9abe268ce03806eb26677f", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/26400bd8d1b477ef7c9abe268ce03806eb26677f", "message": "Add task delay due to requiring consent from remote params\n\n   * Move task management to TaskController\n   * Delay task until remote params and init is done\n   * After task delayed, check again for user consent\n   * Fix test, add tests", "committedDate": "2020-07-20T16:04:22Z", "type": "forcePushed"}, {"oid": "74a8b50a2728971c247c06430744bdffbab976c1", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/74a8b50a2728971c247c06430744bdffbab976c1", "message": "Add task delay due to requiring consent from remote params\n\n   * Move task management to TaskController\n   * Delay task until remote params and init is done\n   * After task delayed, check again for user consent\n   * Fix test, add tests", "committedDate": "2020-07-20T17:09:06Z", "type": "forcePushed"}, {"oid": "91a76820179541b21d48af92ede4239d87edb6a7", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/91a76820179541b21d48af92ede4239d87edb6a7", "message": "Add task delay due to requiring consent from remote params\n\n   * Move task management to TaskController\n   * Delay task until remote params and init is done\n   * After task delayed, check again for user consent\n   * Fix test, add tests", "committedDate": "2020-07-20T17:55:40Z", "type": "forcePushed"}, {"oid": "314786336b3316afe228edb7dc98562143acfccd", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/314786336b3316afe228edb7dc98562143acfccd", "message": "Add task delay due to requiring consent from remote params\n\n   * Move task management to TaskController\n   * Delay task until remote params and init is done\n   * After task delayed, check again for user consent\n   * Fix test, add tests", "committedDate": "2020-07-20T18:43:29Z", "type": "forcePushed"}, {"oid": "079158157511e4e4611c2c67a9f4ca63e464aee4", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/079158157511e4e4611c2c67a9f4ca63e464aee4", "message": "Add task delay due to requiring consent from remote params\n\n   * Move task management to TaskController\n   * Delay task until remote params and init is done\n   * After task delayed, check again for user consent\n   * Fix test, add tests", "committedDate": "2020-07-20T18:56:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4MDk2Ng==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r460980966", "bodyText": "Is there a way we use a single null check for locationHandlerThread == null\ninstead of having one externally and internally to the synchronized?", "author": "mikechoch", "createdAt": "2020-07-27T15:35:50Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationController.java", "diffHunk": "@@ -58,7 +58,18 @@\n    private static boolean locationCoarse;\n \n    static final Object syncLock = new Object() {};\n-   static LocationHandlerThread locationHandlerThread;\n+\n+   private static LocationHandlerThread locationHandlerThread;\n+   static LocationHandlerThread getLocationHandlerThread() {\n+      if (locationHandlerThread == null) {\n+         synchronized (syncLock) {\n+            if (locationHandlerThread == null)", "originalCommit": "079158157511e4e4611c2c67a9f4ca63e464aee4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3MTMyNQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461171325", "bodyText": "Actually this is a cost of the double-checks for synchronized initialization to work ok. In Java, there are different ways to make it thread-safe. One is to make the method synchronized but that will slow performance since we only care about the thread-safe on the initialization.  And the second one is to make thread-safe the initialization, but you know that it can happen that maybe one thread released the lock while other was waiting for it, then it can happen that the thread 1 init the locationHandlerThread while the second thread was waiting to init it, so that's why we need the second check. You can search for double check singleton, which is a common pattern. Let me know if it doesn't make sense \ud83d\ude2c", "author": "Jeasmine", "createdAt": "2020-07-27T21:09:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4MDk2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1NDczMQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461654731", "bodyText": "Makes sense, thank you for the explanation\nJust wanted to double check in case", "author": "mikechoch", "createdAt": "2020-07-28T15:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4MDk2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxOTM2Nw==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r464719367", "bodyText": "ah interesting, ya locking can be heavy. Only can be done a lazy loading singleton pattern where value is null like we have here.", "author": "jkasten2", "createdAt": "2020-08-03T23:46:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4MDk2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDcxNA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461044714", "bodyText": "Does this have to be within the constructor of the TaskController?\nSeems like we could just make this global static HashSet<String> for O(1) access using the .contains method\nprivate HashSet<String> methodsAvailableForDelay = new HashSet<>(Arrays.asList(\n        \"getTags()\",\n        \"SyncHashedEmail()\",\n        \"setExternalUserId()\",\n        \"setSubscription()\",\n        \"promptLocation()\",\n        \"idsAvailable()\",\n        \"sendTag()\",\n        \"sendTags()\",\n        \"handleNotificationOpen()\",\n        \"setEmail()\"));", "author": "mikechoch", "createdAt": "2020-07-27T17:16:06Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTaskController.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package com.onesignal;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.RejectedExecutionException;\n+import java.util.concurrent.ThreadFactory;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+class OSTaskController {\n+\n+    // the concurrent queue in which we pin pending tasks upon finishing initialization\n+    static final ConcurrentLinkedQueue<Runnable> taskQueueWaitingForInit = new ConcurrentLinkedQueue<>();\n+    private static final AtomicLong lastTaskId = new AtomicLong();\n+    private static ExecutorService pendingTaskExecutor;\n+\n+    private final OSLogger logger;\n+    private final OSRemoteParamController paramController;\n+\n+    private List<String> methodsAvailableForDelay;\n+\n+    OSTaskController(OSRemoteParamController paramController, OSLogger logger) {\n+        this.paramController = paramController;\n+        this.logger = logger;\n+\n+        methodsAvailableForDelay = new ArrayList<>(\n+                Arrays.asList(\"getTags()\", \"SyncHashedEmail()\", \"setExternalUserId()\", \"setSubscription()\",\n+                        \"promptLocation()\", \"idsAvailable()\", \"sendTag()\", \"sendTags()\", \"handleNotificationOpen()\",\n+                        \"setEmail()\"));\n+    }", "originalCommit": "079158157511e4e4611c2c67a9f4ca63e464aee4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NTM0Ng==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461045346", "bodyText": "Also lets make things consistent and change this SyncHashedEmail() task method name to syncHashedEmail()", "author": "mikechoch", "createdAt": "2020-07-27T17:17:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDcxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NTQwOA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461045408", "bodyText": "And if we wanna make it easier to change in the future we should create static final String for each method name\nOR\nWe make a helper that calls and returns the current enclosing method name\nExample:\nString name = new Object(){}.getClass().getEnclosingMethod().getName();\nWhich would return \"sendTag\" if we called this within the sendTag method", "author": "mikechoch", "createdAt": "2020-07-27T17:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDcxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4ODgwNg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461188806", "bodyText": "good catch!", "author": "Jeasmine", "createdAt": "2020-07-27T21:45:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDcxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MjkwNg==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461192906", "bodyText": "And if we wanna make it easier to change in the future we should create static final String for each method name\nOR\nWe make a helper that calls and returns the current enclosing method name\nExample:\nString name = new Object(){}.getClass().getEnclosingMethod().getName();\nWhich would return \"sendTag\" if we called this within the sendTag method\n\nI like this suggestion, but Im wondering the performance cost, because that one is creating an anonymous class, and well you know that anonymous class compiled adds some extra code to the compilation, also getEnclosingMethod I think is a reflection method, and by definition reflection = not performant \ud83d\ude01 . I think i will continue with the constants, that seems right", "author": "Jeasmine", "createdAt": "2020-07-27T21:54:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDcxNA=="}], "type": "inlineReview", "revised_code": {"commit": "5015ee844f8a7e28cf8154b16f5168cebd48d32c", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTaskController.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTaskController.java\nindex 18be22ed..9186ef86 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTaskController.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTaskController.java\n\n@@ -2,9 +2,8 @@ package com.onesignal;\n \n import androidx.annotation.NonNull;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.List;\n+import java.util.HashSet;\n import java.util.concurrent.ConcurrentLinkedQueue;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1ODcwNQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461058705", "bodyText": "It might be easier to read this if we place this method call inside of the OneSignal class underneath instead of inside, like this:\nremoteParamController.saveRemoteParams(params, trackerFactory, preferences, logger);\nonRemoteParamSet();", "author": "mikechoch", "createdAt": "2020-07-27T17:39:58Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSRemoteParamController.java", "diffHunk": "@@ -69,6 +69,10 @@ void saveRemoteParams(OneSignalRemoteParams.Params remoteParams,\n         OneSignal.onRemoteParamSet();", "originalCommit": "079158157511e4e4611c2c67a9f4ca63e464aee4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5015ee844f8a7e28cf8154b16f5168cebd48d32c", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSRemoteParamController.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSRemoteParamController.java\nindex 7fe8b0ca..d479ce1a 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSRemoteParamController.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OSRemoteParamController.java\n\n@@ -65,8 +64,6 @@ class OSRemoteParamController {\n \n         if (remoteParams.requiresUserPrivacyConsent != null)\n             savePrivacyConsentRequired(remoteParams.requiresUserPrivacyConsent);\n-\n-        OneSignal.onRemoteParamSet();\n     }\n \n     boolean isRemoteParamsCallDone() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1OTcyNQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461059725", "bodyText": "CallBack should be Callback, this is one word", "author": "mikechoch", "createdAt": "2020-07-27T17:41:54Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -912,15 +807,12 @@ private static boolean pushStatusRuntimeError(int subscriptionStatus) {\n    }\n \n    private static void makeAndroidParamsRequest(String appId, String userId) {\n-      if (getRemoteParams() != null) {\n-         remoteParamsCall = true;\n+      if (getRemoteParams() != null)\n          return;\n-      }\n \n       OneSignalRemoteParams.makeAndroidParamsRequest(appId, userId, new OneSignalRemoteParams.CallBack() {", "originalCommit": "079158157511e4e4611c2c67a9f4ca63e464aee4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3MjAzNw==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461172037", "bodyText": "I think this is already covered on major release changes when I rebase this will be fixed", "author": "Jeasmine", "createdAt": "2020-07-27T21:10:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1OTcyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NDY0MQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r461174641", "bodyText": "If not i will double check again", "author": "Jeasmine", "createdAt": "2020-07-27T21:15:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1OTcyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "5015ee844f8a7e28cf8154b16f5168cebd48d32c", "chunk": "diff --git a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java\nindex 7e2b0f44..0040f82d 100644\n--- a/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java\n+++ b/OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java\n\n@@ -810,13 +811,14 @@ public class OneSignal {\n       if (getRemoteParams() != null)\n          return;\n \n-      OneSignalRemoteParams.makeAndroidParamsRequest(appId, userId, new OneSignalRemoteParams.CallBack() {\n+      OneSignalRemoteParams.makeAndroidParamsRequest(appId, userId, new OneSignalRemoteParams.Callback() {\n          @Override\n          public void complete(OneSignalRemoteParams.Params params) {\n             if (params.googleProjectNumber != null)\n                googleProjectNumber = params.googleProjectNumber;\n \n             remoteParamController.saveRemoteParams(params, trackerFactory, preferences, logger);\n+            onRemoteParamSet();\n \n             NotificationChannelManager.processChannelList(\n                OneSignal.appContext,\n"}}, {"oid": "ae59aedac413e807c2fc301620df9f87484426cc", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/ae59aedac413e807c2fc301620df9f87484426cc", "message": "Add task delay due to requiring consent from remote params\n\n   * Move task management to TaskController\n   * Delay task until remote params and init is done\n   * After task delayed, check again for user consent\n   * Fix test, add tests", "committedDate": "2020-07-28T18:00:03Z", "type": "commit"}, {"oid": "5015ee844f8a7e28cf8154b16f5168cebd48d32c", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/5015ee844f8a7e28cf8154b16f5168cebd48d32c", "message": "Remove extra check/schedule on pending tasks", "committedDate": "2020-07-28T18:09:52Z", "type": "forcePushed"}, {"oid": "692c765c28b278d8cab36b96aafe942dca8d5149", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/692c765c28b278d8cab36b96aafe942dca8d5149", "message": "Remove extra check/schedule on pending tasks", "committedDate": "2020-07-28T18:15:11Z", "type": "forcePushed"}, {"oid": "fd3525f3ffc13999470a7d147b2ae3c51ff784d9", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/fd3525f3ffc13999470a7d147b2ae3c51ff784d9", "message": "Remove extra check/schedule on pending tasks", "committedDate": "2020-07-28T18:56:19Z", "type": "forcePushed"}, {"oid": "8100830917aec47f75b887c358a1c5614570ae92", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/8100830917aec47f75b887c358a1c5614570ae92", "message": "Remove extra check/schedule on pending tasks", "committedDate": "2020-07-28T19:20:11Z", "type": "forcePushed"}, {"oid": "6e2964d727266044c1c5dc04f63839ba65cabe31", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/6e2964d727266044c1c5dc04f63839ba65cabe31", "message": "Remove extra check/schedule on pending tasks", "committedDate": "2020-07-28T20:47:39Z", "type": "commit"}, {"oid": "6e2964d727266044c1c5dc04f63839ba65cabe31", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/6e2964d727266044c1c5dc04f63839ba65cabe31", "message": "Remove extra check/schedule on pending tasks", "committedDate": "2020-07-28T20:47:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2MTk5NA==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r462361994", "bodyText": "Just curious why we have an _ at the end of the OS_PENDING_EXECUTOR_", "author": "mikechoch", "createdAt": "2020-07-29T14:52:57Z", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTaskController.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package com.onesignal;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.RejectedExecutionException;\n+import java.util.concurrent.ThreadFactory;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+class OSTaskController {\n+\n+    static final String OS_PENDING_EXECUTOR = \"OS_PENDING_EXECUTOR_\";", "originalCommit": "6e2964d727266044c1c5dc04f63839ba65cabe31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4MDQyMQ==", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1092#discussion_r462380421", "bodyText": "Oh that's because\nnewThread.setName(OS_PENDING_EXECUTOR + newThread.getId());\nwe append the thread id on the bottom", "author": "Jeasmine", "createdAt": "2020-07-29T15:17:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2MTk5NA=="}], "type": "inlineReview", "revised_code": null}]}