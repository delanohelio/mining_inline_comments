{"pr_number": 3141, "pr_title": "[Bug-3140]fix the deadlock between start and stop of ZKServer", "pr_createdAt": "2020-07-05T15:36:59Z", "pr_url": "https://github.com/apache/dolphinscheduler/pull/3141", "timeline": [{"oid": "6351373ceff1564df6fad93feb800b5179345e47", "url": "https://github.com/apache/dolphinscheduler/commit/6351373ceff1564df6fad93feb800b5179345e47", "message": "[Bug-3140]fix the deadlock between start and stop of ZKServer", "committedDate": "2020-07-05T15:27:58Z", "type": "commit"}, {"oid": "df0b2682cc73dd91679f122440dedcc1b8b1eec1", "url": "https://github.com/apache/dolphinscheduler/commit/df0b2682cc73dd91679f122440dedcc1b8b1eec1", "message": "Merge branch 'dev' into ZkServer_deadlock", "committedDate": "2020-07-06T13:51:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTQ3OA==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r450239478", "bodyText": "please use logger.error, not use e.printStackTrace", "author": "dailidong", "createdAt": "2020-07-06T13:58:29Z", "path": "dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java", "diffHunk": "@@ -19,17 +19,40 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n-// ZKServer is a process, can't unit test\n-public class ZKServerTest {\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n \n+public class ZKServerTest {\n \n     @Test\n-    public void isStarted() {\n-        Assert.assertEquals(false, ZKServer.isStarted());\n+    public void testRunWithDefaultPort() {\n+        AtomicReference<ZKServer> zkServer = new AtomicReference<>();\n+        new Thread(() -> {\n+            zkServer.set(new ZKServer());\n+            zkServer.get().start();\n+        }).start();\n+        try {\n+            TimeUnit.SECONDS.sleep(5);\n+            Assert.assertEquals(true, zkServer.get().isStarted());\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }", "originalCommit": "6351373ceff1564df6fad93feb800b5179345e47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4NTgyMQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r450685821", "bodyText": "solved", "author": "tswstarplanet", "createdAt": "2020-07-07T08:11:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTQ3OA=="}], "type": "inlineReview", "revised_code": {"commit": "90c1733de59b73cb7988f33c012758277b4b1cb6", "chunk": "diff --git a/dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java b/dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java\nindex a53fe3c44..a6b5e66f2 100644\n--- a/dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java\n+++ b/dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java\n\n@@ -18,11 +18,14 @@ package org.apache.dolphinscheduler.service.zk;\n \n import org.junit.Assert;\n import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicReference;\n \n public class ZKServerTest {\n+    private static final Logger log = LoggerFactory.getLogger(ZKServerTest.class);\n \n     @Test\n     public void testRunWithDefaultPort() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTk0Mg==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r450239942", "bodyText": "the same with the last one", "author": "dailidong", "createdAt": "2020-07-06T13:59:06Z", "path": "dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java", "diffHunk": "@@ -19,17 +19,40 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n-// ZKServer is a process, can't unit test\n-public class ZKServerTest {\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n \n+public class ZKServerTest {\n \n     @Test\n-    public void isStarted() {\n-        Assert.assertEquals(false, ZKServer.isStarted());\n+    public void testRunWithDefaultPort() {\n+        AtomicReference<ZKServer> zkServer = new AtomicReference<>();\n+        new Thread(() -> {\n+            zkServer.set(new ZKServer());\n+            zkServer.get().start();\n+        }).start();\n+        try {\n+            TimeUnit.SECONDS.sleep(5);\n+            Assert.assertEquals(true, zkServer.get().isStarted());\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+        zkServer.get().stop();\n     }\n \n     @Test\n-    public void stop() {\n-        ZKServer.stop();\n+    public void testRunWithCustomPort() {\n+        AtomicReference<ZKServer> zkServer = new AtomicReference<>();\n+        new Thread(() -> {\n+            zkServer.set(new ZKServer(2182));\n+            zkServer.get().start();\n+        }).start();\n+        try {\n+            TimeUnit.SECONDS.sleep(5);\n+            Assert.assertEquals(true, zkServer.get().isStarted());\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();", "originalCommit": "6351373ceff1564df6fad93feb800b5179345e47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI0OTA3MQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r450249071", "bodyText": "They're not exactly identical. The last one uses the default port, but this one use a custom port", "author": "tswstarplanet", "createdAt": "2020-07-06T14:12:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTk0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "90c1733de59b73cb7988f33c012758277b4b1cb6", "chunk": "diff --git a/dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java b/dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java\nindex a53fe3c44..a6b5e66f2 100644\n--- a/dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java\n+++ b/dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java\n\n@@ -18,11 +18,14 @@ package org.apache.dolphinscheduler.service.zk;\n \n import org.junit.Assert;\n import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicReference;\n \n public class ZKServerTest {\n+    private static final Logger log = LoggerFactory.getLogger(ZKServerTest.class);\n \n     @Test\n     public void testRunWithDefaultPort() {\n"}}, {"oid": "90c1733de59b73cb7988f33c012758277b4b1cb6", "url": "https://github.com/apache/dolphinscheduler/commit/90c1733de59b73cb7988f33c012758277b4b1cb6", "message": "use Log framework to print information", "committedDate": "2020-07-06T16:45:32Z", "type": "commit"}, {"oid": "8f77ab3d05a4d31b59ff4aaded37eb6da5c2f4d5", "url": "https://github.com/apache/dolphinscheduler/commit/8f77ab3d05a4d31b59ff4aaded37eb6da5c2f4d5", "message": "Merge branch 'dev' into ZkServer_deadlock", "committedDate": "2020-07-07T11:28:10Z", "type": "commit"}, {"oid": "a54df4f8690b530f5d8b2cf48018d2acf219660b", "url": "https://github.com/apache/dolphinscheduler/commit/a54df4f8690b530f5d8b2cf48018d2acf219660b", "message": "fix code smells; add path prefix of embedded zk server", "committedDate": "2020-07-07T14:22:08Z", "type": "commit"}, {"oid": "18c6cc0c5c70bbebb90344399c81a0062da40b35", "url": "https://github.com/apache/dolphinscheduler/commit/18c6cc0c5c70bbebb90344399c81a0062da40b35", "message": "Merge branch 'dev' into ZkServer_deadlock", "committedDate": "2020-07-10T04:21:00Z", "type": "commit"}, {"oid": "c99ccbe06069e67aadcb7e4b7bd91b5c1318992b", "url": "https://github.com/apache/dolphinscheduler/commit/c99ccbe06069e67aadcb7e4b7bd91b5c1318992b", "message": "Merge branch 'dev' into ZkServer_deadlock", "committedDate": "2020-07-10T17:39:15Z", "type": "commit"}, {"oid": "9872db09e36b8efbd0441df56175139ea13745f1", "url": "https://github.com/apache/dolphinscheduler/commit/9872db09e36b8efbd0441df56175139ea13745f1", "message": "Merge branch 'dev' into ZkServer_deadlock", "committedDate": "2020-07-11T09:05:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTMwOA==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453195308", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.error(\"Failed to start ZK: \" + e);\n          \n          \n            \n                        logger.error(\"Failed to start ZK \", e);", "author": "yangyichao-mango", "createdAt": "2020-07-11T13:30:46Z", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -34,44 +34,62 @@\n public class ZKServer {\n     private static final Logger logger = LoggerFactory.getLogger(ZKServer.class);\n \n-    private static volatile PublicZooKeeperServerMain zkServer = null;\n-\n     public static final int DEFAULT_ZK_TEST_PORT = 2181;\n \n-    private static String dataDir = null;\n+    private final AtomicBoolean isStarted = new AtomicBoolean(false);\n+\n+    private PublicZooKeeperServerMain zooKeeperServerMain = null;\n+\n+    private int port;\n+\n+    private String dataDir = null;\n \n-    private static final AtomicBoolean isStarted = new AtomicBoolean(false);\n+    private String prefix;\n \n     public static void main(String[] args) {\n-        if(!isStarted()){\n-            ZKServer.start();\n-\n-            /**\n-             *  register hooks, which are called before the process exits\n-             */\n-            Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {\n-                @Override\n-                public void run() {\n-                    stop();\n-                }\n-            }));\n-        }else{\n-            logger.info(\"zk server aleady started\");\n+        ZKServer zkServer;\n+        if (args.length == 0) {\n+            zkServer = new ZKServer();\n+        } else if (args.length == 1){\n+            zkServer = new ZKServer(Integer.valueOf(args[0]), \"\");\n+        } else {\n+            zkServer = new ZKServer(Integer.valueOf(args[0]), args[1]);\n         }\n+        zkServer.registerHook();\n+        zkServer.start();\n+    }\n+\n+    public ZKServer() {\n+        this(DEFAULT_ZK_TEST_PORT, \"\");\n+    }\n+\n+    public ZKServer(int port, String prefix) {\n+        this.port = port;\n+        if (prefix.contains(\"/\")) {\n+            throw new IllegalArgumentException(\"The prefix of path may not have '/'\");\n+        }\n+        this.prefix = prefix;\n+    }\n+\n+    private void registerHook() {\n+        /**\n+         *  register hooks, which are called before the process exits\n+         */\n+        Runtime.getRuntime().addShutdownHook(new Thread(this::stop));\n     }\n \n     /**\n      * start service\n      */\n-    public static void start() {\n+    public void start() {\n         try {\n-            startLocalZkServer(DEFAULT_ZK_TEST_PORT);\n+            startLocalZkServer(port);\n         } catch (Exception e) {\n             logger.error(\"Failed to start ZK: \" + e);", "originalCommit": "9872db09e36b8efbd0441df56175139ea13745f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c2bf68ae801a4461a7c0e0a4b0ff2ff6a902409", "chunk": "diff --git a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\nindex df729bdc4..147d773ad 100644\n--- a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n+++ b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n\n@@ -85,7 +85,7 @@ public class ZKServer {\n         try {\n             startLocalZkServer(port);\n         } catch (Exception e) {\n-            logger.error(\"Failed to start ZK: \" + e);\n+            logger.error(\"Failed to start ZK \", e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTQ4Mg==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453195482", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";\n          \n          \n            \n                    String zkDataDir = System.getProperty(\"user.dir\") + (StringUtils.isBlank(prefix) ? StringUtils.EMPTY : (\"/\" + prefix)) + \"/zookeeper_data\";\n          \n      \n    \n    \n  \n\nHi,\nGood job.\nIs it better to use this utils of org.apache.dolphinscheduler.common.utils.StringUtils?", "author": "yangyichao-mango", "createdAt": "2020-07-11T13:33:03Z", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -94,8 +112,9 @@ public void shutdown() {\n      *\n      * @param port The port to listen on\n      */\n-    public static void startLocalZkServer(final int port) {\n-        String zkDataDir = System.getProperty(\"user.dir\") +\"/zookeeper_data\";\n+    public void startLocalZkServer(final int port) {\n+        String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";", "originalCommit": "9872db09e36b8efbd0441df56175139ea13745f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjI1Mw==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453212253", "bodyText": "solved", "author": "tswstarplanet", "createdAt": "2020-07-11T16:42:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTQ4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e121a697d051e6a1c34d26de3b9e3a6d0b18441b", "chunk": "diff --git a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\nindex df729bdc4..c7a53ebdc 100644\n--- a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n+++ b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n\n@@ -113,8 +114,11 @@ public class ZKServer {\n      * @param port The port to listen on\n      */\n     public void startLocalZkServer(final int port) {\n-        String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";\n-        logger.warn(\"The path of zk server exists\");\n+        String zkDataDir = System.getProperty(\"user.dir\") + (StringUtils.isEmpty(prefix) ? StringUtils.EMPTY : (\"/\" + prefix)) + \"/zookeeper_data\";\n+        File file = new File(zkDataDir);\n+        if (file.exists()) {\n+            logger.warn(\"The path of zk server exists\");\n+        }\n         logger.info(\"zk server starting, data dir path:{}\" , zkDataDir);\n         startLocalZkServer(port, zkDataDir, ZooKeeperServer.DEFAULT_TICK_TIME,\"60\");\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTg3Nw==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453195877", "bodyText": "Hi,\nWhy introduce logger.warn(\"The path of zk server exists\");?", "author": "yangyichao-mango", "createdAt": "2020-07-11T13:37:07Z", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -94,8 +112,9 @@ public void shutdown() {\n      *\n      * @param port The port to listen on\n      */\n-    public static void startLocalZkServer(final int port) {\n-        String zkDataDir = System.getProperty(\"user.dir\") +\"/zookeeper_data\";\n+    public void startLocalZkServer(final int port) {\n+        String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";\n+        logger.warn(\"The path of zk server exists\");", "originalCommit": "9872db09e36b8efbd0441df56175139ea13745f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwODUxNQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453208515", "bodyText": "The check of whether the directory exists omit. It just warn the previous data may be overwritten. I will add it.", "author": "tswstarplanet", "createdAt": "2020-07-11T16:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTg3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e121a697d051e6a1c34d26de3b9e3a6d0b18441b", "chunk": "diff --git a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\nindex df729bdc4..c7a53ebdc 100644\n--- a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n+++ b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n\n@@ -113,8 +114,11 @@ public class ZKServer {\n      * @param port The port to listen on\n      */\n     public void startLocalZkServer(final int port) {\n-        String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";\n-        logger.warn(\"The path of zk server exists\");\n+        String zkDataDir = System.getProperty(\"user.dir\") + (StringUtils.isEmpty(prefix) ? StringUtils.EMPTY : (\"/\" + prefix)) + \"/zookeeper_data\";\n+        File file = new File(zkDataDir);\n+        if (file.exists()) {\n+            logger.warn(\"The path of zk server exists\");\n+        }\n         logger.info(\"zk server starting, data dir path:{}\" , zkDataDir);\n         startLocalZkServer(port, zkDataDir, ZooKeeperServer.DEFAULT_TICK_TIME,\"60\");\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NzMwOQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453197309", "bodyText": "Hi,\nIs it better to add isStarted.get() compare in if statement because of the public of startLocalZkServer function?\nThe same of stop function.\nThx a lot for your contribution.", "author": "yangyichao-mango", "createdAt": "2020-07-11T13:53:51Z", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -108,11 +127,11 @@ public static void startLocalZkServer(final int port) {\n      * @param tickTime    zk tick time\n      * @param maxClientCnxns    zk max client connections\n      */\n-    private static synchronized void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n-        if (zkServer != null) {\n+    private void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n+        if (zooKeeperServerMain != null) {", "originalCommit": "9872db09e36b8efbd0441df56175139ea13745f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjIyMQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453212221", "bodyText": "solved", "author": "tswstarplanet", "createdAt": "2020-07-11T16:42:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NzMwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e121a697d051e6a1c34d26de3b9e3a6d0b18441b", "chunk": "diff --git a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\nindex df729bdc4..c7a53ebdc 100644\n--- a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n+++ b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n\n@@ -128,23 +132,21 @@ public class ZKServer {\n      * @param maxClientCnxns    zk max client connections\n      */\n     private void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n-        if (zooKeeperServerMain != null) {\n-            throw new RuntimeException(\"Zookeeper server is already started!\");\n-        }\n-        zooKeeperServerMain = new PublicZooKeeperServerMain();\n-        logger.info(\"Zookeeper data path : {} \", dataDirPath);\n-        dataDir = dataDirPath;\n-        final String[] args = new String[]{Integer.toString(port), dataDirPath, Integer.toString(tickTime), maxClientCnxns};\n+        if (isStarted.compareAndSet(false, true)) {\n+            zooKeeperServerMain = new PublicZooKeeperServerMain();\n+            logger.info(\"Zookeeper data path : {} \", dataDirPath);\n+            dataDir = dataDirPath;\n+            final String[] args = new String[]{Integer.toString(port), dataDirPath, Integer.toString(tickTime), maxClientCnxns};\n \n-        try {\n-            logger.info(\"Zookeeper server started \");\n-            isStarted.compareAndSet(false, true);\n-\n-            zooKeeperServerMain.initializeAndRun(args);\n-        } catch (QuorumPeerConfig.ConfigException e) {\n-            logger.warn(\"Caught exception while starting ZK\", e);\n-        } catch (IOException e) {\n-            logger.warn(\"Caught exception while starting ZK\", e);\n+            try {\n+                logger.info(\"Zookeeper server started \");\n+                isStarted.compareAndSet(false, true);\n+\n+                zooKeeperServerMain.initializeAndRun(args);\n+            } catch (QuorumPeerConfig.ConfigException | IOException e) {\n+                logger.warn(\"Caught exception while starting ZK\", e);\n+                throw new RuntimeException(e);\n+            }\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NzkyNg==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453197926", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        zooKeeperServerMain.initializeAndRun(args);\n          \n          \n            \n                    } catch (QuorumPeerConfig.ConfigException e) {\n          \n          \n            \n                        logger.warn(\"Caught exception while starting ZK\", e);\n          \n          \n            \n                    } catch (IOException e) {\n          \n          \n            \n                        zooKeeperServerMain.initializeAndRun(args);\n          \n          \n            \n                    } catch (QuorumPeerConfig.ConfigException | IOException e) {\n          \n          \n            \n                        logger.warn(\"Caught exception while starting ZK\", e);\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nHi,\nIs it better to merge tow exceptions into one catch block if the two exceptions are handled in the same way?\nIf it is convenient for you, I think you can modify this part.\nThx a lot for your contribution.", "author": "yangyichao-mango", "createdAt": "2020-07-11T14:01:14Z", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -121,7 +140,7 @@ private static synchronized void startLocalZkServer(final int port, final String\n             logger.info(\"Zookeeper server started \");\n             isStarted.compareAndSet(false, true);\n \n-            zkServer.initializeAndRun(args);\n+            zooKeeperServerMain.initializeAndRun(args);\n         } catch (QuorumPeerConfig.ConfigException e) {\n             logger.warn(\"Caught exception while starting ZK\", e);\n         } catch (IOException e) {", "originalCommit": "9872db09e36b8efbd0441df56175139ea13745f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjE3OQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453212179", "bodyText": "solved", "author": "tswstarplanet", "createdAt": "2020-07-11T16:42:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NzkyNg=="}], "type": "inlineReview", "revised_code": {"commit": "e121a697d051e6a1c34d26de3b9e3a6d0b18441b", "chunk": "diff --git a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\nindex df729bdc4..c7a53ebdc 100644\n--- a/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n+++ b/dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n\n@@ -128,23 +132,21 @@ public class ZKServer {\n      * @param maxClientCnxns    zk max client connections\n      */\n     private void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n-        if (zooKeeperServerMain != null) {\n-            throw new RuntimeException(\"Zookeeper server is already started!\");\n-        }\n-        zooKeeperServerMain = new PublicZooKeeperServerMain();\n-        logger.info(\"Zookeeper data path : {} \", dataDirPath);\n-        dataDir = dataDirPath;\n-        final String[] args = new String[]{Integer.toString(port), dataDirPath, Integer.toString(tickTime), maxClientCnxns};\n+        if (isStarted.compareAndSet(false, true)) {\n+            zooKeeperServerMain = new PublicZooKeeperServerMain();\n+            logger.info(\"Zookeeper data path : {} \", dataDirPath);\n+            dataDir = dataDirPath;\n+            final String[] args = new String[]{Integer.toString(port), dataDirPath, Integer.toString(tickTime), maxClientCnxns};\n \n-        try {\n-            logger.info(\"Zookeeper server started \");\n-            isStarted.compareAndSet(false, true);\n-\n-            zooKeeperServerMain.initializeAndRun(args);\n-        } catch (QuorumPeerConfig.ConfigException e) {\n-            logger.warn(\"Caught exception while starting ZK\", e);\n-        } catch (IOException e) {\n-            logger.warn(\"Caught exception while starting ZK\", e);\n+            try {\n+                logger.info(\"Zookeeper server started \");\n+                isStarted.compareAndSet(false, true);\n+\n+                zooKeeperServerMain.initializeAndRun(args);\n+            } catch (QuorumPeerConfig.ConfigException | IOException e) {\n+                logger.warn(\"Caught exception while starting ZK\", e);\n+                throw new RuntimeException(e);\n+            }\n         }\n     }\n \n"}}, {"oid": "4c2bf68ae801a4461a7c0e0a4b0ff2ff6a902409", "url": "https://github.com/apache/dolphinscheduler/commit/4c2bf68ae801a4461a7c0e0a4b0ff2ff6a902409", "message": "Update dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java\n\nCo-authored-by: Yichao Yang <1048262223@qq.com>", "committedDate": "2020-07-11T16:01:39Z", "type": "commit"}, {"oid": "e121a697d051e6a1c34d26de3b9e3a6d0b18441b", "url": "https://github.com/apache/dolphinscheduler/commit/e121a697d051e6a1c34d26de3b9e3a6d0b18441b", "message": "optimize the code", "committedDate": "2020-07-11T16:38:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3Njk4OA==", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453276988", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n          \n          \n            \n                private void startLocalZkServer(final int port, final String dataDirPath, final int tickTime, String maxClientCnxns) {\n          \n      \n    \n    \n  \n\nHi,\nThx a lot for your good job and contribution.\nPlease configure the checkstyle.xml plugin[1] to your IDE to help format code.\n[1] https://github.com/apache/incubator-dolphinscheduler/tree/dev/style", "author": "yangyichao-mango", "createdAt": "2020-07-12T06:55:03Z", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -108,31 +131,29 @@ public static void startLocalZkServer(final int port) {\n      * @param tickTime    zk tick time\n      * @param maxClientCnxns    zk max client connections\n      */\n-    private static synchronized void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n-        if (zkServer != null) {\n-            throw new RuntimeException(\"Zookeeper server is already started!\");\n-        }\n-        zkServer = new PublicZooKeeperServerMain();\n-        logger.info(\"Zookeeper data path : {} \", dataDirPath);\n-        dataDir = dataDirPath;\n-        final String[] args = new String[]{Integer.toString(port), dataDirPath, Integer.toString(tickTime), maxClientCnxns};\n+    private void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {", "originalCommit": "e121a697d051e6a1c34d26de3b9e3a6d0b18441b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}