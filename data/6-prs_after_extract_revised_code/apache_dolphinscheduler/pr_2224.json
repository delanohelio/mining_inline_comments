{"pr_number": 2224, "pr_title": "support custom datax configuration ", "pr_createdAt": "2020-03-18T09:18:27Z", "pr_url": "https://github.com/apache/dolphinscheduler/pull/2224", "timeline": [{"oid": "ab9caec50eca3d51bdeecbd517f84a89a1c0d48c", "url": "https://github.com/apache/dolphinscheduler/commit/ab9caec50eca3d51bdeecbd517f84a89a1c0d48c", "message": "fix #1441", "committedDate": "2019-12-11T10:03:02Z", "type": "commit"}, {"oid": "ffe2e74c4b30cc2ab0fe9a8f53b90c3e02ce09e0", "url": "https://github.com/apache/dolphinscheduler/commit/ffe2e74c4b30cc2ab0fe9a8f53b90c3e02ce09e0", "message": "Merge pull request #1 from apache/dev\n\nUpdate", "committedDate": "2020-03-02T03:38:49Z", "type": "commit"}, {"oid": "c583c42c2dac6e9c68afec806d9aab19723189de", "url": "https://github.com/apache/dolphinscheduler/commit/c583c42c2dac6e9c68afec806d9aab19723189de", "message": "Merge pull request #2 from apache/dev\n\naaa", "committedDate": "2020-03-18T03:49:03Z", "type": "commit"}, {"oid": "b6928fe04529012f750810a6cfc3bb0894ccb168", "url": "https://github.com/apache/dolphinscheduler/commit/b6928fe04529012f750810a6cfc3bb0894ccb168", "message": "support custom datax config", "committedDate": "2020-03-18T07:30:21Z", "type": "commit"}, {"oid": "8c4ba3a55753cde0f2cd741c0c6d8222e0c27396", "url": "https://github.com/apache/dolphinscheduler/commit/8c4ba3a55753cde0f2cd741c0c6d8222e0c27396", "message": "support datax custom config", "committedDate": "2020-03-18T07:38:45Z", "type": "commit"}, {"oid": "b32a3f31a112b89babcfc01998e348cdf0945b1b", "url": "https://github.com/apache/dolphinscheduler/commit/b32a3f31a112b89babcfc01998e348cdf0945b1b", "message": "support datax custom config", "committedDate": "2020-03-18T09:10:30Z", "type": "commit"}, {"oid": "74708b3b84f494facfb989ccf40ff20eb4cf94da", "url": "https://github.com/apache/dolphinscheduler/commit/74708b3b84f494facfb989ccf40ff20eb4cf94da", "message": "support datax custom config", "committedDate": "2020-03-18T09:59:10Z", "type": "commit"}, {"oid": "28f2c84df59c735972255be6fc08eeea11e7c294", "url": "https://github.com/apache/dolphinscheduler/commit/28f2c84df59c735972255be6fc08eeea11e7c294", "message": "Merge pull request #3 from apache/dev\n\nAdapting partial code(file name start with N) to the sonar cloud rule\u2026", "committedDate": "2020-03-18T12:27:38Z", "type": "commit"}, {"oid": "7b92a777e3c8974dd2b4884c7cbdf37950072586", "url": "https://github.com/apache/dolphinscheduler/commit/7b92a777e3c8974dd2b4884c7cbdf37950072586", "message": "Merge pull request #4 from apache/dev\n\nupdate", "committedDate": "2020-03-19T01:01:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczMjQ0MA==", "url": "https://github.com/apache/dolphinscheduler/pull/2224#discussion_r394732440", "bodyText": "I think logger.info would be easy to debug the whole task.", "author": "Jave-Chen", "createdAt": "2020-03-19T01:07:25Z", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/datax/DataxTask.java", "diffHunk": "@@ -192,24 +192,47 @@ private String buildDataxJsonFile()\n         throws Exception {\n         // generate json\n         String fileName = String.format(\"%s/%s_job.json\", taskDir, taskProps.getTaskAppId());\n+        String json;\n \n         Path path = new File(fileName).toPath();\n         if (Files.exists(path)) {\n             return fileName;\n         }\n \n-        JSONObject job = new JSONObject();\n-        job.put(\"content\", buildDataxJobContentJson());\n-        job.put(\"setting\", buildDataxJobSettingJson());\n \n-        JSONObject root = new JSONObject();\n-        root.put(\"job\", job);\n-        root.put(\"core\", buildDataxCoreJson());\n \n-        logger.debug(\"datax job json : {}\", root.toString());\n+        if (dataXParameters.getCustomConfig() == 1){\n+\n+            json = dataXParameters.getJson().replaceAll(\"\\\\r\\\\n\", \"\\n\");\n+\n+            /**\n+             *  combining local and global parameters\n+             */\n+            Map<String, Property> paramsMap = ParamUtils.convert(taskProps.getUserDefParamsMap(),\n+                    taskProps.getDefinedParams(),\n+                    dataXParameters.getLocalParametersMap(),\n+                    taskProps.getCmdTypeIfComplement(),\n+                    taskProps.getScheduleTime());\n+            if (paramsMap != null){\n+                json = ParameterUtils.convertParameterPlaceholders(json, ParamUtils.convert(paramsMap));\n+            }\n+\n+        }else {\n+\n+            JSONObject job = new JSONObject();\n+            job.put(\"content\", buildDataxJobContentJson());\n+            job.put(\"setting\", buildDataxJobSettingJson());\n+\n+            JSONObject root = new JSONObject();\n+            root.put(\"job\", job);\n+            root.put(\"core\", buildDataxCoreJson());\n+            json = root.toString();\n+        }\n+\n+        logger.debug(\"datax job json : {}\", json);\n ", "originalCommit": "7b92a777e3c8974dd2b4884c7cbdf37950072586", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczMzIzMg==", "url": "https://github.com/apache/dolphinscheduler/pull/2224#discussion_r394733232", "bodyText": "Variables can also be used in datax job json, which will cause json to be invalid, such as\n{\n  ...\n  \"reader\": {\n    \"name\": \"mysqlreader\",\n    \"parameter\": {\n      \"username\": \"${db_user}\",\n      \"password\": \"${db_pwd}\",\n      \"encoding\": \"UTF-8\",\n      \"column\": [${tbl_clms}],\n      \"connection\": [\n        {\n          \"jdbcUrl\": [\n            \"jdbc:mysql://${host}/${db}?useUnicode=true&characterEncoding=utf8\"\n          ],\n          \"table\": [\n            ${table_list}\n          ]\n        }\n      ]\n    }\n  }\n  ...\n}", "author": "Jave-Chen", "createdAt": "2020-03-19T01:08:38Z", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/datax/DataxTask.java", "diffHunk": "@@ -192,24 +192,47 @@ private String buildDataxJsonFile()\n         throws Exception {\n         // generate json\n         String fileName = String.format(\"%s/%s_job.json\", taskDir, taskProps.getTaskAppId());\n+        String json;\n \n         Path path = new File(fileName).toPath();\n         if (Files.exists(path)) {\n             return fileName;\n         }\n \n-        JSONObject job = new JSONObject();\n-        job.put(\"content\", buildDataxJobContentJson());\n-        job.put(\"setting\", buildDataxJobSettingJson());\n \n-        JSONObject root = new JSONObject();\n-        root.put(\"job\", job);\n-        root.put(\"core\", buildDataxCoreJson());\n \n-        logger.debug(\"datax job json : {}\", root.toString());\n+        if (dataXParameters.getCustomConfig() == 1){\n+\n+            json = dataXParameters.getJson().replaceAll(\"\\\\r\\\\n\", \"\\n\");\n+", "originalCommit": "7b92a777e3c8974dd2b4884c7cbdf37950072586", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczNjU4NA==", "url": "https://github.com/apache/dolphinscheduler/pull/2224#discussion_r394736584", "bodyText": "here is about custom variables", "author": "simon824", "createdAt": "2020-03-19T01:21:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczMzIzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc0MzA0OQ==", "url": "https://github.com/apache/dolphinscheduler/pull/2224#discussion_r394743049", "bodyText": "here is about custom variables\n\nSorry, I didn't see it. it's my fault.", "author": "Jave-Chen", "createdAt": "2020-03-19T01:41:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczMzIzMg=="}], "type": "inlineReview", "revised_code": null}]}