{"pr_number": 3053, "pr_title": "[Feature-2154][api] Workflow version control", "pr_createdAt": "2020-06-25T10:30:51Z", "pr_url": "https://github.com/apache/dolphinscheduler/pull/3053", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ2NDUyNw==", "url": "https://github.com/apache/dolphinscheduler/pull/3053#discussion_r445464527", "bodyText": "Hi @dailidong , Is it necessary to add distributed locks?", "author": "yangyichao-mango", "createdAt": "2020-06-25T10:35:19Z", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionVersionService.java", "diffHunk": "@@ -0,0 +1,170 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dolphinscheduler.api.service;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import org.apache.dolphinscheduler.api.enums.Status;\n+import org.apache.dolphinscheduler.api.utils.PageInfo;\n+import org.apache.dolphinscheduler.common.Constants;\n+import org.apache.dolphinscheduler.dao.entity.ProcessDefinition;\n+import org.apache.dolphinscheduler.dao.entity.ProcessDefinitionVersion;\n+import org.apache.dolphinscheduler.dao.entity.Project;\n+import org.apache.dolphinscheduler.dao.entity.User;\n+import org.apache.dolphinscheduler.dao.mapper.ProcessDefinitionVersionMapper;\n+import org.apache.dolphinscheduler.dao.mapper.ProjectMapper;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import com.baomidou.mybatisplus.core.metadata.IPage;\n+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n+import com.google.common.collect.ImmutableMap;\n+\n+@Service\n+public class ProcessDefinitionVersionService {\n+\n+    @Autowired\n+    private ProcessDefinitionVersionMapper processDefinitionVersionMapper;\n+\n+    @Autowired\n+    private ProjectService projectService;\n+\n+    @Autowired\n+    private ProjectMapper projectMapper;\n+\n+    /**\n+     * add the newest version of one process definition\n+     *\n+     * @param processDefinition the process definition that need to record version\n+     * @return the newest version number of this process definition\n+     */\n+    public long addProcessDefinitionVersion(ProcessDefinition processDefinition) {\n+\n+        long version = this.queryMaxVersionByProcessDefinitionId(processDefinition.getId()) + 1;\n+\n+        ProcessDefinitionVersion processDefinitionVersion = ProcessDefinitionVersion\n+                .newBuilder()\n+                .processDefinitionId(processDefinition.getId())\n+                .version(version)\n+                .processDefinitionJson(processDefinition.getProcessDefinitionJson())\n+                .description(processDefinition.getDescription())\n+                .locations(processDefinition.getLocations())\n+                .connects(processDefinition.getConnects())\n+                .timeout(processDefinition.getTimeout())\n+                .globalParams(processDefinition.getGlobalParams())\n+                .createTime(processDefinition.getUpdateTime())\n+                .receivers(processDefinition.getReceivers())\n+                .receiversCc(processDefinition.getReceiversCc())\n+                .resourceIds(processDefinition.getResourceIds())\n+                .build();\n+\n+        processDefinitionVersionMapper.insert(processDefinitionVersion);\n+\n+        return version;\n+    }\n+\n+    /**\n+     * query the max version number by the process definition id\n+     *\n+     * @param processDefinitionId process definition id\n+     * @return the max version number of this id\n+     */\n+    public long queryMaxVersionByProcessDefinitionId(int processDefinitionId) {\n+        // TODO Is it necessary to add distributed locks?\n+        Long maxVersion =  processDefinitionVersionMapper.queryMaxVersionByProcessDefinitionId(processDefinitionId);\n+        if (Objects.isNull(maxVersion)) {\n+            return 0L;\n+        } else {\n+            return maxVersion;\n+        }\n+    }", "originalCommit": "5309fbe8198feaa11ba5410fd4c2be41dff12a82", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "693d5c38594f5b034440997e80a72020a3331b9b", "chunk": "diff --git a/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionVersionService.java b/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionVersionService.java\nindex a719280a7..21f37687b 100644\n--- a/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionVersionService.java\n+++ b/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProcessDefinitionVersionService.java\n\n@@ -38,7 +38,7 @@ import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n import com.google.common.collect.ImmutableMap;\n \n @Service\n-public class ProcessDefinitionVersionService {\n+public class ProcessDefinitionVersionService extends BaseService {\n \n     @Autowired\n     private ProcessDefinitionVersionMapper processDefinitionVersionMapper;\n"}}, {"oid": "0d8331a7f74d13f14e9dce9ce3f9f2daf25eba4b", "url": "https://github.com/apache/dolphinscheduler/commit/0d8331a7f74d13f14e9dce9ce3f9f2daf25eba4b", "message": "[Feature-2154] Workflow version control", "committedDate": "2020-07-13T13:35:23Z", "type": "forcePushed"}, {"oid": "3ad7e2262cd781c423ebd1c4a38a189b9be0bd45", "url": "https://github.com/apache/dolphinscheduler/commit/3ad7e2262cd781c423ebd1c4a38a189b9be0bd45", "message": "[Feature][api] Fix test cases", "committedDate": "2020-07-16T02:17:09Z", "type": "forcePushed"}, {"oid": "693d5c38594f5b034440997e80a72020a3331b9b", "url": "https://github.com/apache/dolphinscheduler/commit/693d5c38594f5b034440997e80a72020a3331b9b", "message": "[Feature] Run e2e", "committedDate": "2020-08-01T04:59:54Z", "type": "forcePushed"}, {"oid": "fd97af0b86f6f1a6d72345415bc905e7ed3815e3", "url": "https://github.com/apache/dolphinscheduler/commit/fd97af0b86f6f1a6d72345415bc905e7ed3815e3", "message": "Add interface", "committedDate": "2020-08-01T08:24:17Z", "type": "forcePushed"}, {"oid": "01a7347475c2737c7fcac75b8153f64831029f76", "url": "https://github.com/apache/dolphinscheduler/commit/01a7347475c2737c7fcac75b8153f64831029f76", "message": "Feature: add version control for process definition", "committedDate": "2020-08-04T10:34:05Z", "type": "forcePushed"}, {"oid": "81e83d836c4e363b4c4f3eaef86034dd2d5b56ab", "url": "https://github.com/apache/dolphinscheduler/commit/81e83d836c4e363b4c4f3eaef86034dd2d5b56ab", "message": "fix conflict", "committedDate": "2020-08-24T13:08:20Z", "type": "forcePushed"}, {"oid": "48fcb2271e2a71fc313018f468e12670f575be0c", "url": "https://github.com/apache/dolphinscheduler/commit/48fcb2271e2a71fc313018f468e12670f575be0c", "message": "Feature: add version control for process definition", "committedDate": "2020-08-24T13:14:28Z", "type": "forcePushed"}, {"oid": "8c2744c3e6479c1dbb62e607f4abff7e5aa1a5a2", "url": "https://github.com/apache/dolphinscheduler/commit/8c2744c3e6479c1dbb62e607f4abff7e5aa1a5a2", "message": "[Test][server] Add the master server test case", "committedDate": "2020-08-24T13:37:58Z", "type": "forcePushed"}, {"oid": "c9cc1a5ff447105f17ef76ee6bf9728d3ec6c2cc", "url": "https://github.com/apache/dolphinscheduler/commit/c9cc1a5ff447105f17ef76ee6bf9728d3ec6c2cc", "message": "[Feature][api] Workflow version control", "committedDate": "2020-08-24T13:44:17Z", "type": "commit"}, {"oid": "c9cc1a5ff447105f17ef76ee6bf9728d3ec6c2cc", "url": "https://github.com/apache/dolphinscheduler/commit/c9cc1a5ff447105f17ef76ee6bf9728d3ec6c2cc", "message": "[Feature][api] Workflow version control", "committedDate": "2020-08-24T13:44:17Z", "type": "forcePushed"}, {"oid": "ce08eeeed20aa2302c3e40ba7b11a15a7390b211", "url": "https://github.com/apache/dolphinscheduler/commit/ce08eeeed20aa2302c3e40ba7b11a15a7390b211", "message": "Update messages.properties", "committedDate": "2020-08-24T13:45:10Z", "type": "commit"}, {"oid": "a6349bfe79d1a612ca49679d189c5deef1b7096d", "url": "https://github.com/apache/dolphinscheduler/commit/a6349bfe79d1a612ca49679d189c5deef1b7096d", "message": "Update messages_en_US.properties", "committedDate": "2020-08-24T13:45:37Z", "type": "commit"}, {"oid": "c0eb2bff6eeba1dfc4ae424cfaa908cfcf337c03", "url": "https://github.com/apache/dolphinscheduler/commit/c0eb2bff6eeba1dfc4ae424cfaa908cfcf337c03", "message": "Update messages_zh_CN.properties", "committedDate": "2020-08-24T13:45:57Z", "type": "commit"}]}