{"pr_number": 880, "pr_title": "AF-2253: Schema.GIT replaced by default", "pr_createdAt": "2020-01-24T13:37:47Z", "pr_url": "https://github.com/kiegroup/appformer/pull/880", "timeline": [{"oid": "ff9ae470f5f4cff29d628de8b9f114d00e5fce8d", "url": "https://github.com/kiegroup/appformer/commit/ff9ae470f5f4cff29d628de8b9f114d00e5fce8d", "message": "AF-2253: Schema.GIT replaced by default", "committedDate": "2020-01-24T14:15:00Z", "type": "forcePushed"}, {"oid": "aede85844c2481fb1f2f5a4752bf8d5e93e42cf6", "url": "https://github.com/kiegroup/appformer/commit/aede85844c2481fb1f2f5a4752bf8d5e93e42cf6", "message": "AF-2253: Schema.GIT replaced by default", "committedDate": "2020-01-24T17:33:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzOTkxNA==", "url": "https://github.com/kiegroup/appformer/pull/880#discussion_r370839914", "bodyText": "@adrielparedes Could you elaborate a bit more on how this 'path.toFile()' would be compatible with previous 'JGitPathImpl.getFileSystem.getGit.getRepository.getDirectory'? Thanks!", "author": "rhtevan", "createdAt": "2020-01-24T21:00:56Z", "path": "uberfire-project/uberfire-project-backend/src/main/java/org/guvnor/common/services/project/backend/server/utils/PathUtil.java", "diffHunk": "@@ -66,8 +66,7 @@ public String stripRepoNameAndSpace(String strippedPath) {\n      */\n     public String getNiogitRepoPath(org.uberfire.java.nio.file.Path path) {\n         try {\n-            final JGitPathImpl gPath = (JGitPathImpl) path;\n-            final File directory = gPath.getFileSystem().getGit().getRepository().getDirectory();\n+            final File directory = path.toFile();", "originalCommit": "aede85844c2481fb1f2f5a4752bf8d5e93e42cf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI3MTQwMA==", "url": "https://github.com/kiegroup/appformer/pull/880#discussion_r371271400", "bodyText": "@rhtevan Yes it will because that same behavior is hidden behind that JGitPath implementation instead of being explicitly casted. So if a UnixPath or a JGitPath path is called, they will work the same with its own implementation.", "author": "adrielparedes", "createdAt": "2020-01-27T14:30:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzOTkxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1NDYyMA==", "url": "https://github.com/kiegroup/appformer/pull/880#discussion_r371354620", "bodyText": "Due to this change, the path implementation will be an instance of 'JGitFSPath', and its '.toFile' implementation has been changed to\nreturn fs.getGit().getRepository().getDirectory();\n\nIt's the same with original implementation.", "author": "rhtevan", "createdAt": "2020-01-27T16:45:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzOTkxNA=="}], "type": "inlineReview", "revised_code": {"commit": "0ac01caa6a117589e081bd1dfe15b064a466cb7b", "chunk": "diff --git a/uberfire-project/uberfire-project-backend/src/main/java/org/guvnor/common/services/project/backend/server/utils/PathUtil.java b/uberfire-project/uberfire-project-backend/src/main/java/org/guvnor/common/services/project/backend/server/utils/PathUtil.java\nindex 5dffbf1e7..995aa3a60 100644\n--- a/uberfire-project/uberfire-project-backend/src/main/java/org/guvnor/common/services/project/backend/server/utils/PathUtil.java\n+++ b/uberfire-project/uberfire-project-backend/src/main/java/org/guvnor/common/services/project/backend/server/utils/PathUtil.java\n\n@@ -66,7 +67,8 @@ public class PathUtil {\n      */\n     public String getNiogitRepoPath(org.uberfire.java.nio.file.Path path) {\n         try {\n-            final File directory = path.toFile();\n+            Path p = path.getFileSystem().getPath(path.toString());\n+            final File directory = p.toFile();\n             return directory.toURI().toString();\n         } catch (ClassCastException cce) {\n             throw new IllegalArgumentException(\"Cannot get .niogit directory for non-jgit path.\", cce);\n"}}, {"oid": "09a778f64b912a4845625a80e7d0b599260a8f6a", "url": "https://github.com/kiegroup/appformer/commit/09a778f64b912a4845625a80e7d0b599260a8f6a", "message": "AF-2253: Schema.GIT replaced by default", "committedDate": "2020-02-03T14:56:21Z", "type": "forcePushed"}, {"oid": "63cd4220732cf00c6159cf9fd12cf880cbd2c3bb", "url": "https://github.com/kiegroup/appformer/commit/63cd4220732cf00c6159cf9fd12cf880cbd2c3bb", "message": "AF-2253: Schema.GIT replaced by default", "committedDate": "2020-02-11T14:06:46Z", "type": "forcePushed"}, {"oid": "527e6ed13bb44afb24b1ddaaa1943ba9a5549b73", "url": "https://github.com/kiegroup/appformer/commit/527e6ed13bb44afb24b1ddaaa1943ba9a5549b73", "message": "AF-2253: Schema.GIT replaced by default", "committedDate": "2020-04-28T15:12:02Z", "type": "forcePushed"}, {"oid": "4d4c7972ca36c62f80efe06e04372378210d0c50", "url": "https://github.com/kiegroup/appformer/commit/4d4c7972ca36c62f80efe06e04372378210d0c50", "message": "AF-2253: Schema.GIT replaced by default", "committedDate": "2020-04-28T17:40:40Z", "type": "forcePushed"}, {"oid": "0ac01caa6a117589e081bd1dfe15b064a466cb7b", "url": "https://github.com/kiegroup/appformer/commit/0ac01caa6a117589e081bd1dfe15b064a466cb7b", "message": "AF-2253: Schema.GIT replaced by default", "committedDate": "2020-04-29T16:44:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMzA2Mg==", "url": "https://github.com/kiegroup/appformer/pull/880#discussion_r420603062", "bodyText": "Is there needed an empty constructor?", "author": "jakubschwan", "createdAt": "2020-05-06T07:47:24Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/spaces/SpacesAPIImpl.java", "diffHunk": "@@ -33,6 +33,9 @@\n     private static final String PATH_PATTERN = \"^[A-Za-z]+://[^@]+[@]([^/]+)/.*\";\n     private static final Pattern PATH_REGEX = Pattern.compile(PATH_PATTERN);\n \n+    public SpacesAPIImpl() {", "originalCommit": "0ac01caa6a117589e081bd1dfe15b064a466cb7b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00e65e4155588d843f44d497dde898300aa375d6", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/spaces/SpacesAPIImpl.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/spaces/SpacesAPIImpl.java\nindex d0b3be965..3aa5c300f 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/spaces/SpacesAPIImpl.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/spaces/SpacesAPIImpl.java\n\n@@ -33,9 +33,6 @@ public class SpacesAPIImpl implements SpacesAPI {\n     private static final String PATH_PATTERN = \"^[A-Za-z]+://[^@]+[@]([^/]+)/.*\";\n     private static final Pattern PATH_REGEX = Pattern.compile(PATH_PATTERN);\n \n-    public SpacesAPIImpl() {\n-    }\n-\n     @Override\n     public Space getSpace(String name) {\n         if (SpacesAPI.DEFAULT_SPACE_NAME.equals(name)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwNDQzMg==", "url": "https://github.com/kiegroup/appformer/pull/880#discussion_r420604432", "bodyText": "please fix formatign here", "author": "jakubschwan", "createdAt": "2020-05-06T07:50:03Z", "path": "uberfire-nio2-backport/uberfire-nio2-impls/uberfire-nio2-jgit/src/main/java/org/uberfire/java/nio/fs/jgit/JGitPathImpl.java", "diffHunk": "@@ -179,7 +179,7 @@ public File toFile() {\n                              final OutputStream out = new FileOutputStream(file)) {\n                             internalCopy(in,\n                                          out);\n-                        }\n+}", "originalCommit": "0ac01caa6a117589e081bd1dfe15b064a466cb7b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00e65e4155588d843f44d497dde898300aa375d6", "chunk": "diff --git a/uberfire-nio2-backport/uberfire-nio2-impls/uberfire-nio2-jgit/src/main/java/org/uberfire/java/nio/fs/jgit/JGitPathImpl.java b/uberfire-nio2-backport/uberfire-nio2-impls/uberfire-nio2-jgit/src/main/java/org/uberfire/java/nio/fs/jgit/JGitPathImpl.java\nindex 5021b4b0c..2e147584c 100644\n--- a/uberfire-nio2-backport/uberfire-nio2-impls/uberfire-nio2-jgit/src/main/java/org/uberfire/java/nio/fs/jgit/JGitPathImpl.java\n+++ b/uberfire-nio2-backport/uberfire-nio2-impls/uberfire-nio2-jgit/src/main/java/org/uberfire/java/nio/fs/jgit/JGitPathImpl.java\n\n@@ -179,7 +179,7 @@ public class JGitPathImpl extends AbstractPath<JGitFileSystem>\n                              final OutputStream out = new FileOutputStream(file)) {\n                             internalCopy(in,\n                                          out);\n-}\n+                        }\n                     } catch (final Exception ex) {\n                         file = null;\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY4MjEyNg==", "url": "https://github.com/kiegroup/appformer/pull/880#discussion_r420682126", "bodyText": "Doesn't a constant for the \"system\" exist?", "author": "tomasdavidorg", "createdAt": "2020-05-06T10:14:01Z", "path": "uberfire-backend/uberfire-backend-cdi/src/test/java/org/uberfire/backend/server/cdi/SystemConfigProducerTest.java", "diffHunk": "@@ -74,7 +74,7 @@ public void systemConfigFSShouldUseGITasScheme() {\n \n         producer.resolveFSURI(spacesAPI, SpacesAPI.DEFAULT_SPACE, \"system\");\n \n-        verify(spacesAPI).resolveFileSystemURI(SpacesAPI.Scheme.GIT,SpacesAPI.DEFAULT_SPACE, \"system\" );\n+        verify(spacesAPI).resolveFileSystemURI(SpacesAPI.Scheme.DEFAULT,SpacesAPI.DEFAULT_SPACE, \"system\" );", "originalCommit": "0ac01caa6a117589e081bd1dfe15b064a466cb7b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00e65e4155588d843f44d497dde898300aa375d6", "chunk": "diff --git a/uberfire-backend/uberfire-backend-cdi/src/test/java/org/uberfire/backend/server/cdi/SystemConfigProducerTest.java b/uberfire-backend/uberfire-backend-cdi/src/test/java/org/uberfire/backend/server/cdi/SystemConfigProducerTest.java\nindex 92eb53e4a..6c5f907e1 100644\n--- a/uberfire-backend/uberfire-backend-cdi/src/test/java/org/uberfire/backend/server/cdi/SystemConfigProducerTest.java\n+++ b/uberfire-backend/uberfire-backend-cdi/src/test/java/org/uberfire/backend/server/cdi/SystemConfigProducerTest.java\n\n@@ -72,9 +77,9 @@ public class SystemConfigProducerTest {\n \n         SpacesAPI spacesAPI = mock(SpacesAPI.class);\n \n-        producer.resolveFSURI(spacesAPI, SpacesAPI.DEFAULT_SPACE, \"system\");\n+        producer.resolveFSURI(spacesAPI, SpacesAPI.DEFAULT_SPACE, SystemConfigProducer.SYSTEM);\n \n-        verify(spacesAPI).resolveFileSystemURI(SpacesAPI.Scheme.DEFAULT,SpacesAPI.DEFAULT_SPACE, \"system\" );\n+        verify(spacesAPI).resolveFileSystemURI(SpacesAPI.Scheme.DEFAULT, SpacesAPI.DEFAULT_SPACE, SystemConfigProducer.SYSTEM);\n     }\n \n     @Test\n"}}, {"oid": "00e65e4155588d843f44d497dde898300aa375d6", "url": "https://github.com/kiegroup/appformer/commit/00e65e4155588d843f44d497dde898300aa375d6", "message": "AF-2253: Schema.GIT replaced by default", "committedDate": "2020-05-07T14:27:16Z", "type": "commit"}, {"oid": "00e65e4155588d843f44d497dde898300aa375d6", "url": "https://github.com/kiegroup/appformer/commit/00e65e4155588d843f44d497dde898300aa375d6", "message": "AF-2253: Schema.GIT replaced by default", "committedDate": "2020-05-07T14:27:16Z", "type": "forcePushed"}]}