{"pr_number": 1076, "pr_title": "AF-2689: Implement internal components structure", "pr_createdAt": "2020-11-05T18:08:00Z", "pr_url": "https://github.com/kiegroup/appformer/pull/1076", "timeline": [{"oid": "db618158a76ccfd29f3fef92859bc9350766436f", "url": "https://github.com/kiegroup/appformer/commit/db618158a76ccfd29f3fef92859bc9350766436f", "message": "AF-2689: Implement internal components structure", "committedDate": "2020-11-05T18:54:06Z", "type": "forcePushed"}, {"oid": "eb215aa01c9e9012830524eb569858effc9070bd", "url": "https://github.com/kiegroup/appformer/commit/eb215aa01c9e9012830524eb569858effc9070bd", "message": "AF-2689: Implement internal components structure", "committedDate": "2020-11-05T19:31:06Z", "type": "forcePushed"}, {"oid": "97e8b05024a06fa8e3b6113248f320171eb11d20", "url": "https://github.com/kiegroup/appformer/commit/97e8b05024a06fa8e3b6113248f320171eb11d20", "message": "AF-2699: Create Dashbuilder Components Javascript API", "committedDate": "2020-11-09T22:38:55Z", "type": "forcePushed"}, {"oid": "551cc68cf4d3692d9526c8cc8d405476fcbca00e", "url": "https://github.com/kiegroup/appformer/commit/551cc68cf4d3692d9526c8cc8d405476fcbca00e", "message": "Updating version", "committedDate": "2020-11-12T12:37:17Z", "type": "forcePushed"}, {"oid": "cc7c4d0dc38bbe28d71ce7fe0336f38d2136e690", "url": "https://github.com/kiegroup/appformer/commit/cc7c4d0dc38bbe28d71ce7fe0336f38d2136e690", "message": "Adding locktt", "committedDate": "2020-11-16T16:27:16Z", "type": "forcePushed"}, {"oid": "39fc22c91b15c7de66a367101e203dfc33def25e", "url": "https://github.com/kiegroup/appformer/commit/39fc22c91b15c7de66a367101e203dfc33def25e", "message": "Adding locktt", "committedDate": "2020-11-16T16:28:02Z", "type": "forcePushed"}, {"oid": "d93d911e05a1a19be4ff3d50ce88c8b568105166", "url": "https://github.com/kiegroup/appformer/commit/d93d911e05a1a19be4ff3d50ce88c8b568105166", "message": "Adding Lerna install", "committedDate": "2020-11-18T22:20:02Z", "type": "forcePushed"}, {"oid": "b6b78c9285804fb5830f167d13f1b8d215d73d8a", "url": "https://github.com/kiegroup/appformer/commit/b6b78c9285804fb5830f167d13f1b8d215d73d8a", "message": "Removing lerna", "committedDate": "2020-11-19T13:28:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkzNjQ2NA==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r526936464", "bodyText": "This is a bit confusing, calling loadInternal() returns List<ExternalComponent>, this might be confusing for people looking at this code in future (not only this, maybe more general issue, that we're in the ExternalComponentLoaderImpl class and we are dealing with both external and internal components). WDYT?", "author": "barboras7", "createdAt": "2020-11-19T14:38:18Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentLoaderImpl.java", "diffHunk": "@@ -68,22 +76,29 @@ public void init() {\n     }\n \n     @Override\n-    public List<ExternalComponent> load() {\n-        if (!isExternalComponentEnabled) {\n-            return Collections.emptyList();\n-        }\n+    public List<ExternalComponent> loadInternal() {", "originalCommit": "b6b78c9285804fb5830f167d13f1b8d215d73d8a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8075a92ba36838f30b0ef503489483a561a14895", "chunk": "diff --git a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentLoaderImpl.java b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentsLoaderImpl.java\nsimilarity index 88%\nrename from dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentLoaderImpl.java\nrename to dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentsLoaderImpl.java\nindex b9876d34a..9f1652c9a 100644\n--- a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentLoaderImpl.java\n+++ b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentsLoaderImpl.java\n\n@@ -76,8 +76,8 @@ public class ExternalComponentLoaderImpl implements ExternalComponentLoader {\n     }\n \n     @Override\n-    public List<ExternalComponent> loadInternal() {\n-        return internalComponentsInfo.getInternalComponentsList()\n+    public List<ExternalComponent> loadProvided() {\n+        return providedComponentsInfo.getInternalComponentsList()\n                                      .stream()\n                                      .map(this::readInternalComponent)\n                                      .filter(Objects::nonNull)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk1Mjk5MQ==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r526952991", "bodyText": "Just a typo here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Path shouldNotBeAcessible = Files.createTempFile(\"should_not_be_acessible\", \"\");\n          \n          \n            \n                    Path shouldNotBeAccessible = Files.createTempFile(\"should_not_be_accessible\", \"\");", "author": "barboras7", "createdAt": "2020-11-19T14:58:51Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/test/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImplTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.external.impl;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.io.IOUtils;\n+import org.dashbuilder.components.internal.InternalComponentsInfo;\n+import org.dashbuilder.external.service.ExternalComponentLoader;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class ExternalComponentAssetProviderImplTest {\n+\n+    @Mock\n+    ExternalComponentLoader externalComponentLoader;\n+\n+    @InjectMocks\n+    ExternalComponentAssetProviderImpl externalComponentAssetProviderImpl;\n+\n+    private Path componentsDir;\n+\n+    @Before\n+    public void prepare() throws IOException {\n+        componentsDir = Files.createTempDirectory(\"components\");\n+        when(externalComponentLoader.getExternalComponentsDir()).thenReturn(componentsDir.toString());\n+        \n+        when(externalComponentLoader.getInternalComponentsPath()).thenReturn(InternalComponentsInfo.get().getInternalComponentsRootPath());\n+    }\n+\n+    @After\n+    public void after() {\n+        FileUtils.deleteQuietly(componentsDir.toFile());\n+    }\n+\n+    @Test\n+    public void testExternalComponentAsset() throws Exception {\n+        String componentFileContent = \"abc\";\n+        String componentId = \"c1\";\n+        String componentFileName = \"testFile\";\n+        String assetPath = createComponentFile(componentId, componentFileName, componentFileContent);\n+\n+        when(externalComponentLoader.isExternalComponentsEnabled()).thenReturn(true);\n+        String assetFileLoadedContent = IOUtils.toString(externalComponentAssetProviderImpl.openAsset(assetPath), StandardCharsets.UTF_8);\n+\n+        assertEquals(componentFileContent, assetFileLoadedContent);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testExternalComponentAssetWithExternalComponentsDisabled() throws Exception {\n+        String componentFileContent = \"abc\";\n+        String componentId = \"c1\";\n+        String componentFileName = \"testFile\";\n+\n+        String assetPath = createComponentFile(componentId, componentFileName, componentFileContent);\n+\n+        when(externalComponentLoader.isExternalComponentsEnabled()).thenReturn(false);\n+        externalComponentAssetProviderImpl.openAsset(assetPath);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testAvoidTraversalPath() throws Exception {\n+        String componentFileContent = \"abc\";\n+        String componentId = \"c1\";\n+        String componentFileName = \"testFile\";\n+\n+        createComponentFile(componentId, componentFileName, componentFileContent);\n+        Path shouldNotBeAcessible = Files.createTempFile(\"should_not_be_acessible\", \"\");", "originalCommit": "b6b78c9285804fb5830f167d13f1b8d215d73d8a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8075a92ba36838f30b0ef503489483a561a14895", "chunk": "diff --git a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/test/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImplTest.java b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/test/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImplTest.java\nindex 5735a1b84..121a3bf89 100644\n--- a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/test/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImplTest.java\n+++ b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/test/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImplTest.java\n\n@@ -23,8 +23,8 @@ import java.nio.file.Path;\n \n import org.apache.commons.io.FileUtils;\n import org.apache.commons.io.IOUtils;\n-import org.dashbuilder.components.internal.InternalComponentsInfo;\n-import org.dashbuilder.external.service.ExternalComponentLoader;\n+import org.dashbuilder.components.internal.ProvidedComponentsInfo;\n+import org.dashbuilder.external.service.ComponentsLoader;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n"}}, {"oid": "a8bffc9d1c0708f29d5827949f2ff99f03ed6f68", "url": "https://github.com/kiegroup/appformer/commit/a8bffc9d1c0708f29d5827949f2ff99f03ed6f68", "message": "AF-2689: Implement internal components structure", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "e8122cb93bef93bebc15760633a8a29f768e8fca", "url": "https://github.com/kiegroup/appformer/commit/e8122cb93bef93bebc15760633a8a29f768e8fca", "message": "AF-2699: Create Dashbuilder Components Javascript API", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "c0823fe8021db2d95af6d110caca16ae0f07a960", "url": "https://github.com/kiegroup/appformer/commit/c0823fe8021db2d95af6d110caca16ae0f07a960", "message": "Updating version", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "85894c0ad521e0c4142c6bac2a13c7d0333cfaa6", "url": "https://github.com/kiegroup/appformer/commit/85894c0ad521e0c4142c6bac2a13c7d0333cfaa6", "message": "Adding locktt", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "fa7e7951c508b9f677ed8548ac25d038fd83e9ce", "url": "https://github.com/kiegroup/appformer/commit/fa7e7951c508b9f677ed8548ac25d038fd83e9ce", "message": "Adding Lerna install", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "60d0992ed5cdde50b26bf4aa7b28995afc51176c", "url": "https://github.com/kiegroup/appformer/commit/60d0992ed5cdde50b26bf4aa7b28995afc51176c", "message": "Removing lerna", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "5e46da17b87dcecd8999daf6818cd1a85aa43722", "url": "https://github.com/kiegroup/appformer/commit/5e46da17b87dcecd8999daf6818cd1a85aa43722", "message": "Removing unwanted dependencies", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "8a7fe9ae55977127b1e12d7044372de908dbbc3e", "url": "https://github.com/kiegroup/appformer/commit/8a7fe9ae55977127b1e12d7044372de908dbbc3e", "message": "Correcting yarn.lock to use public repo", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "f567b0ba04a87617677ad200f0280545a57ec7b9", "url": "https://github.com/kiegroup/appformer/commit/f567b0ba04a87617677ad200f0280545a57ec7b9", "message": "improvements", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "8075a92ba36838f30b0ef503489483a561a14895", "url": "https://github.com/kiegroup/appformer/commit/8075a92ba36838f30b0ef503489483a561a14895", "message": "Components Renaming and improvements", "committedDate": "2020-11-23T15:40:23Z", "type": "commit"}, {"oid": "8075a92ba36838f30b0ef503489483a561a14895", "url": "https://github.com/kiegroup/appformer/commit/8075a92ba36838f30b0ef503489483a561a14895", "message": "Components Renaming and improvements", "committedDate": "2020-11-23T15:40:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwNTg5NA==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r528805894", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface ExternalComponentService {\n          \n          \n            \n            public interface ComponentService {\n          \n      \n    \n    \n  \n\nA renaming suggestion since this interface now includes operations for both internal and external components.", "author": "caponetto", "createdAt": "2020-11-23T15:53:49Z", "path": "dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/external/service/ExternalComponentService.java", "diffHunk": "@@ -25,8 +25,10 @@\n @Remote\n public interface ExternalComponentService {", "originalCommit": "8075a92ba36838f30b0ef503489483a561a14895", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "chunk": "diff --git a/dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/external/service/ExternalComponentService.java b/dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/external/service/ComponentService.java\nsimilarity index 90%\nrename from dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/external/service/ExternalComponentService.java\nrename to dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/external/service/ComponentService.java\nindex cc2a00cc0..21856b292 100644\n--- a/dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/external/service/ExternalComponentService.java\n+++ b/dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/external/service/ComponentService.java\n\n@@ -23,9 +23,9 @@ import org.dashbuilder.external.model.ExternalComponent;\n import org.jboss.errai.bus.server.annotations.Remote;\n \n @Remote\n-public interface ExternalComponentService {\n+public interface ComponentService {\n \n-    List<ExternalComponent> listInternalComponents();\n+    List<ExternalComponent> listProvidedComponents();\n \n     List<ExternalComponent> listExternalComponents();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwMTcyNg==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529501726", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ComponentsLoaderImpl implements ComponentsLoader {\n          \n          \n            \n            public class ComponentLoaderImpl implements ComponentLoader {\n          \n      \n    \n    \n  \n\nI'd name them like this, but this is just my personal opinion. :)", "author": "caponetto", "createdAt": "2020-11-24T12:17:22Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentsLoaderImpl.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.external.impl;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import com.google.gson.Gson;\n+import org.dashbuilder.components.internal.ProvidedComponentsInfo;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ComponentsLoader;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@ApplicationScoped\n+public class ComponentsLoaderImpl implements ComponentsLoader {", "originalCommit": "8075a92ba36838f30b0ef503489483a561a14895", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "chunk": "diff --git a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentsLoaderImpl.java b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentLoaderImpl.java\nsimilarity index 93%\nrename from dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentsLoaderImpl.java\nrename to dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentLoaderImpl.java\nindex 9f1652c9a..28afb3e21 100644\n--- a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentsLoaderImpl.java\n+++ b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentLoaderImpl.java\n\n@@ -36,16 +36,16 @@ import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n \n import com.google.gson.Gson;\n-import org.dashbuilder.components.internal.ProvidedComponentsInfo;\n+import org.dashbuilder.components.internal.ProvidedComponentInfo;\n import org.dashbuilder.external.model.ExternalComponent;\n-import org.dashbuilder.external.service.ComponentsLoader;\n+import org.dashbuilder.external.service.ComponentLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n @ApplicationScoped\n-public class ComponentsLoaderImpl implements ComponentsLoader {\n+public class ComponentLoaderImpl implements ComponentLoader {\n \n-    Logger logger = LoggerFactory.getLogger(ComponentsLoaderImpl.class);\n+    Logger logger = LoggerFactory.getLogger(ComponentLoaderImpl.class);\n \n     public static final String EXTERNAL_COMP_DIR_PROP = \"dashbuilder.components.dir\";\n     public static final String EXTERNAL_COMP_ENABLE_PROP = \"dashbuilder.components.enable\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwNzk4NQ==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529507985", "bodyText": "Semantically, it's kind of confusing a method called listInternalComponents returning a list of ExternalComponent.", "author": "caponetto", "createdAt": "2020-11-24T12:28:27Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentServiceImpl.java", "diffHunk": "@@ -32,18 +33,24 @@\n public class ExternalComponentServiceImpl implements ExternalComponentService {\n \n     @Inject\n-    ExternalComponentLoader loader;\n+    ComponentsLoader loader;\n \n     @Override\n-    public List<ExternalComponent> listComponents() {\n-        return loader.load();\n+    public List<ExternalComponent> listExternalComponents() {\n+        return loader.loadExternal();\n+    }\n+\n+    @Override\n+    public List<ExternalComponent> listInternalComponents() {", "originalCommit": "8075a92ba36838f30b0ef503489483a561a14895", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "chunk": "diff --git a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentServiceImpl.java b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentServiceImpl.java\nsimilarity index 76%\nrename from dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentServiceImpl.java\nrename to dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentServiceImpl.java\nindex 44b611010..3bb18877d 100644\n--- a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentServiceImpl.java\n+++ b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentServiceImpl.java\n\n@@ -24,16 +24,16 @@ import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n \n import org.dashbuilder.external.model.ExternalComponent;\n-import org.dashbuilder.external.service.ComponentsLoader;\n-import org.dashbuilder.external.service.ExternalComponentService;\n+import org.dashbuilder.external.service.ComponentLoader;\n+import org.dashbuilder.external.service.ComponentService;\n import org.jboss.errai.bus.server.annotations.Service;\n \n @Service\n @ApplicationScoped\n-public class ExternalComponentServiceImpl implements ExternalComponentService {\n+public class ComponentServiceImpl implements ComponentService {\n \n     @Inject\n-    ComponentsLoader loader;\n+    ComponentLoader loader;\n \n     @Override\n     public List<ExternalComponent> listExternalComponents() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwOTI2MQ==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529509261", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public abstract class ComponentsGroupProvider implements PerspectiveEditorComponentGroupProvider {\n          \n          \n            \n            public abstract class ComponentGroupProvider implements PerspectiveEditorComponentGroupProvider {\n          \n      \n    \n    \n  \n\nI'd name it like this, but this is just my personal opinion. :)", "author": "caponetto", "createdAt": "2020-11-24T12:30:36Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProvider.java", "diffHunk": "@@ -19,43 +19,18 @@\n import java.util.Collections;\n import java.util.List;\n \n-import javax.enterprise.context.ApplicationScoped;\n-import javax.inject.Inject;\n-\n-import org.dashbuilder.client.editor.resources.i18n.Constants;\n import org.dashbuilder.external.model.ExternalComponent;\n-import org.dashbuilder.external.service.ExternalComponentService;\n-import org.jboss.errai.common.client.api.Caller;\n-import org.jboss.errai.ioc.client.api.AfterInitialization;\n-import org.jboss.errai.ioc.client.api.EntryPoint;\n import org.jboss.errai.ioc.client.container.SyncBeanManager;\n import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentGroup;\n import org.uberfire.ext.plugin.client.perspective.editor.api.PerspectiveEditorComponentGroupProvider;\n \n-@EntryPoint\n-@ApplicationScoped\n-public class ExternalComponentGroupProvider implements PerspectiveEditorComponentGroupProvider {\n+public abstract class ComponentsGroupProvider implements PerspectiveEditorComponentGroupProvider {", "originalCommit": "8075a92ba36838f30b0ef503489483a561a14895", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "chunk": "diff --git a/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProvider.java b/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentGroupProvider.java\nsimilarity index 95%\nrename from dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProvider.java\nrename to dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentGroupProvider.java\nindex 44aae5d6b..c59c11e7a 100644\n--- a/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProvider.java\n+++ b/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentGroupProvider.java\n\n@@ -24,7 +24,7 @@ import org.jboss.errai.ioc.client.container.SyncBeanManager;\n import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentGroup;\n import org.uberfire.ext.plugin.client.perspective.editor.api.PerspectiveEditorComponentGroupProvider;\n \n-public abstract class ComponentsGroupProvider implements PerspectiveEditorComponentGroupProvider {\n+public abstract class ComponentGroupProvider implements PerspectiveEditorComponentGroupProvider {\n     \n     SyncBeanManager beanManager;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwOTQ4OQ==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529509489", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ExternalComponentsGroupProvider extends ComponentsGroupProvider {\n          \n          \n            \n            public class ExternalComponentGroupProvider extends ComponentsGroupProvider {\n          \n      \n    \n    \n  \n\nI'd name it like this, but this is just my personal opinion. :)", "author": "caponetto", "createdAt": "2020-11-24T12:31:00Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ExternalComponentsGroupProvider.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ExternalComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.api.AfterInitialization;\n+import org.jboss.errai.ioc.client.api.EntryPoint;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+\n+@EntryPoint\n+@ApplicationScoped\n+public class ExternalComponentsGroupProvider extends ComponentsGroupProvider {", "originalCommit": "8075a92ba36838f30b0ef503489483a561a14895", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "chunk": "diff --git a/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ExternalComponentsGroupProvider.java b/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ExternalComponentGroupProvider.java\nsimilarity index 84%\nrename from dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ExternalComponentsGroupProvider.java\nrename to dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ExternalComponentGroupProvider.java\nindex f36ea81c6..482bd0c8f 100644\n--- a/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ExternalComponentsGroupProvider.java\n+++ b/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ExternalComponentGroupProvider.java\n\n@@ -23,7 +23,7 @@ import javax.inject.Inject;\n \n import org.dashbuilder.client.editor.resources.i18n.Constants;\n import org.dashbuilder.external.model.ExternalComponent;\n-import org.dashbuilder.external.service.ExternalComponentService;\n+import org.dashbuilder.external.service.ComponentService;\n import org.jboss.errai.common.client.api.Caller;\n import org.jboss.errai.ioc.client.api.AfterInitialization;\n import org.jboss.errai.ioc.client.api.EntryPoint;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwOTc4Ng==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529509786", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class InternalComponentsGroupProvider extends ComponentsGroupProvider {\n          \n          \n            \n            public class InternalComponentGroupProvider extends ComponentsGroupProvider {\n          \n      \n    \n    \n  \n\nI'd name it like this, but this is just my personal opinion. :)", "author": "caponetto", "createdAt": "2020-11-24T12:31:31Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/InternalComponentsGroupProvider.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ExternalComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.api.AfterInitialization;\n+import org.jboss.errai.ioc.client.api.EntryPoint;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+\n+@EntryPoint\n+@ApplicationScoped\n+public class InternalComponentsGroupProvider extends ComponentsGroupProvider {", "originalCommit": "8075a92ba36838f30b0ef503489483a561a14895", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "chunk": "diff --git a/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/InternalComponentsGroupProvider.java b/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/InternalComponentGroupProvider.java\nsimilarity index 82%\nrename from dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/InternalComponentsGroupProvider.java\nrename to dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/InternalComponentGroupProvider.java\nindex 78482c74d..8f0dc0995 100644\n--- a/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/InternalComponentsGroupProvider.java\n+++ b/dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/InternalComponentGroupProvider.java\n\n@@ -23,7 +23,7 @@ import javax.inject.Inject;\n \n import org.dashbuilder.client.editor.resources.i18n.Constants;\n import org.dashbuilder.external.model.ExternalComponent;\n-import org.dashbuilder.external.service.ExternalComponentService;\n+import org.dashbuilder.external.service.ComponentService;\n import org.jboss.errai.common.client.api.Caller;\n import org.jboss.errai.ioc.client.api.AfterInitialization;\n import org.jboss.errai.ioc.client.api.EntryPoint;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyMDA5Mg==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529520092", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ProvidedComponentsInfo {\n          \n          \n            \n            public class ProvidedComponentInfo {\n          \n      \n    \n    \n  \n\nI'd name it like this, but this is just my personal opinion. :)", "author": "caponetto", "createdAt": "2020-11-24T12:49:44Z", "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/src/main/java/org/dashbuilder/components/internal/ProvidedComponentsInfo.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.components.internal;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Properties;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Access internal component information and expose during runtime.\n+ *\n+ */\n+public class ProvidedComponentsInfo {", "originalCommit": "8075a92ba36838f30b0ef503489483a561a14895", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "chunk": "diff --git a/dashbuilder/dashbuilder-shared/dashbuilder-js/src/main/java/org/dashbuilder/components/internal/ProvidedComponentsInfo.java b/dashbuilder/dashbuilder-shared/dashbuilder-js/src/main/java/org/dashbuilder/components/internal/ProvidedComponentInfo.java\nsimilarity index 91%\nrename from dashbuilder/dashbuilder-shared/dashbuilder-js/src/main/java/org/dashbuilder/components/internal/ProvidedComponentsInfo.java\nrename to dashbuilder/dashbuilder-shared/dashbuilder-js/src/main/java/org/dashbuilder/components/internal/ProvidedComponentInfo.java\nindex a4f972328..9376e8f7d 100644\n--- a/dashbuilder/dashbuilder-shared/dashbuilder-js/src/main/java/org/dashbuilder/components/internal/ProvidedComponentsInfo.java\n+++ b/dashbuilder/dashbuilder-shared/dashbuilder-js/src/main/java/org/dashbuilder/components/internal/ProvidedComponentInfo.java\n\n@@ -30,25 +30,25 @@ import java.util.stream.Collectors;\n  * Access internal component information and expose during runtime.\n  *\n  */\n-public class ProvidedComponentsInfo {\n+public class ProvidedComponentInfo {\n \n-    Logger logger = Logger.getLogger(ProvidedComponentsInfo.class.getName());\n+    Logger logger = Logger.getLogger(ProvidedComponentInfo.class.getName());\n \n     private static final String DASHBUILDER_COMPONENTS_PROPERTIES = \"/dashbuilder-components.properties\";\n     private static final String DASHBUILDER_COMPONENTS_LIST_PROP = \"dashbuilder.internal.components.list\";\n     private static final String DASHBUILDER_COMPONENTS_ROOT_PROP = \"dashbuilder.internal.components.root\";\n \n-    private static ProvidedComponentsInfo instance;\n+    private static ProvidedComponentInfo instance;\n \n     private List<String> internalComponentsList = Collections.emptyList();\n \n     private String internalComponentsRootPath = null;\n \n-    ProvidedComponentsInfo() {}\n+    ProvidedComponentInfo() {}\n \n-    public static ProvidedComponentsInfo get() {\n+    public static ProvidedComponentInfo get() {\n         if (instance == null) {\n-            instance = new ProvidedComponentsInfo();\n+            instance = new ProvidedComponentInfo();\n             instance.loadProperties(DASHBUILDER_COMPONENTS_PROPERTIES);\n         }\n         return instance;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyMzE4MA==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529523180", "bodyText": "This if block can be moved to the first line of the method since there is no need to resolve the paths if isExternalComponentsEnabled==false.", "author": "caponetto", "createdAt": "2020-11-24T12:54:48Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java", "diffHunk": "@@ -21,27 +21,70 @@\n import java.io.InputStream;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n+import java.util.Optional;\n \n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n \n+import org.apache.commons.io.FilenameUtils;\n import org.dashbuilder.external.service.ExternalComponentAssetProvider;\n-import org.dashbuilder.external.service.ExternalComponentLoader;\n+import org.dashbuilder.external.service.ComponentsLoader;\n \n+/**\n+ * Looks for components assets.\n+ *\n+ */\n @ApplicationScoped\n public class ExternalComponentAssetProviderImpl implements ExternalComponentAssetProvider {\n \n     @Inject\n-    ExternalComponentLoader componentsLoader;\n+    ComponentsLoader componentsLoader;\n \n     @Override\n     public InputStream openAsset(String componentAssetPath) {\n+        if (componentAssetPath != null) {\n+            String normalizedAssetPath = FilenameUtils.normalizeNoEndSeparator(componentAssetPath);\n+            if (normalizedAssetPath != null) {\n+                return getInternalComponentAsset(normalizedAssetPath).orElseGet(() -> getExternalComponentAsset(normalizedAssetPath));\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Invalid Asset Path.\");\n+    }\n+\n+    private Optional<InputStream> getInternalComponentAsset(String componentAssetPath) {\n+        String internalComponentsBaseDir = componentsLoader.getProvidedComponentsPath();\n+        String fullPath = \"/\" + internalComponentsBaseDir + \"/\" + componentAssetPath;\n+        return Optional.ofNullable(this.getClass().getResourceAsStream(fullPath));\n+    }\n+\n+    private InputStream getExternalComponentAsset(String componentAssetPath) {\n+        Path baseDir = Paths.get(componentsLoader.getExternalComponentsDir());\n+        Path assetPath = baseDir.resolve(componentAssetPath);\n+\n+        if (!componentsLoader.isExternalComponentsEnabled()) {\n+            throw new IllegalArgumentException(\"External Components are not enabled\");\n+        }", "originalCommit": "8075a92ba36838f30b0ef503489483a561a14895", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "chunk": "diff --git a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentAssetProviderImpl.java\nsimilarity index 92%\nrename from dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java\nrename to dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentAssetProviderImpl.java\nindex 025ff7290..34b702a43 100644\n--- a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java\n+++ b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentAssetProviderImpl.java\n\n@@ -27,18 +27,18 @@ import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n \n import org.apache.commons.io.FilenameUtils;\n-import org.dashbuilder.external.service.ExternalComponentAssetProvider;\n-import org.dashbuilder.external.service.ComponentsLoader;\n+import org.dashbuilder.external.service.ComponentAssetProvider;\n+import org.dashbuilder.external.service.ComponentLoader;\n \n /**\n  * Looks for components assets.\n  *\n  */\n @ApplicationScoped\n-public class ExternalComponentAssetProviderImpl implements ExternalComponentAssetProvider {\n+public class ComponentAssetProviderImpl implements ComponentAssetProvider {\n \n     @Inject\n-    ComponentsLoader componentsLoader;\n+    ComponentLoader componentsLoader;\n \n     @Override\n     public InputStream openAsset(String componentAssetPath) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzMDQ2Mw==", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529530463", "bodyText": "Nice!", "author": "caponetto", "createdAt": "2020-11-24T13:06:47Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java", "diffHunk": "@@ -21,27 +21,70 @@\n import java.io.InputStream;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n+import java.util.Optional;\n \n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n \n+import org.apache.commons.io.FilenameUtils;\n import org.dashbuilder.external.service.ExternalComponentAssetProvider;\n-import org.dashbuilder.external.service.ExternalComponentLoader;\n+import org.dashbuilder.external.service.ComponentsLoader;\n \n+/**\n+ * Looks for components assets.\n+ *\n+ */\n @ApplicationScoped\n public class ExternalComponentAssetProviderImpl implements ExternalComponentAssetProvider {\n \n     @Inject\n-    ExternalComponentLoader componentsLoader;\n+    ComponentsLoader componentsLoader;\n \n     @Override\n     public InputStream openAsset(String componentAssetPath) {\n+        if (componentAssetPath != null) {\n+            String normalizedAssetPath = FilenameUtils.normalizeNoEndSeparator(componentAssetPath);\n+            if (normalizedAssetPath != null) {\n+                return getInternalComponentAsset(normalizedAssetPath).orElseGet(() -> getExternalComponentAsset(normalizedAssetPath));\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Invalid Asset Path.\");\n+    }\n+\n+    private Optional<InputStream> getInternalComponentAsset(String componentAssetPath) {\n+        String internalComponentsBaseDir = componentsLoader.getProvidedComponentsPath();\n+        String fullPath = \"/\" + internalComponentsBaseDir + \"/\" + componentAssetPath;\n+        return Optional.ofNullable(this.getClass().getResourceAsStream(fullPath));\n+    }\n+\n+    private InputStream getExternalComponentAsset(String componentAssetPath) {\n+        Path baseDir = Paths.get(componentsLoader.getExternalComponentsDir());\n+        Path assetPath = baseDir.resolve(componentAssetPath);\n+\n+        if (!componentsLoader.isExternalComponentsEnabled()) {\n+            throw new IllegalArgumentException(\"External Components are not enabled\");\n+        }\n+\n+        if (isFileInComponentsDir(baseDir, assetPath)) {\n+            return loadExternalComponentFile(assetPath);\n+        } else {\n+            throw new IllegalArgumentException(\"Not a component file.\");\n+\n+        }\n+    }\n+\n+    private InputStream loadExternalComponentFile(Path assetPath) {\n         try {\n-            Path path = Paths.get(componentsLoader.getExternalComponentsDir(), componentAssetPath);\n-            return new FileInputStream(path.toFile());\n+            return new FileInputStream(assetPath.toFile());\n         } catch (FileNotFoundException e) {\n-            throw new RuntimeException(e);\n+            throw new IllegalArgumentException(\"Error opening component file: \" + e.getMessage(), e);\n         }\n     }\n \n+    // Used to prevent path traversal attacks.\n+    // Reference https://portswigger.net/web-security/file-path-traversal", "originalCommit": "8075a92ba36838f30b0ef503489483a561a14895", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "chunk": "diff --git a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentAssetProviderImpl.java\nsimilarity index 92%\nrename from dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java\nrename to dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentAssetProviderImpl.java\nindex 025ff7290..34b702a43 100644\n--- a/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java\n+++ b/dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentAssetProviderImpl.java\n\n@@ -27,18 +27,18 @@ import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n \n import org.apache.commons.io.FilenameUtils;\n-import org.dashbuilder.external.service.ExternalComponentAssetProvider;\n-import org.dashbuilder.external.service.ComponentsLoader;\n+import org.dashbuilder.external.service.ComponentAssetProvider;\n+import org.dashbuilder.external.service.ComponentLoader;\n \n /**\n  * Looks for components assets.\n  *\n  */\n @ApplicationScoped\n-public class ExternalComponentAssetProviderImpl implements ExternalComponentAssetProvider {\n+public class ComponentAssetProviderImpl implements ComponentAssetProvider {\n \n     @Inject\n-    ComponentsLoader componentsLoader;\n+    ComponentLoader componentsLoader;\n \n     @Override\n     public InputStream openAsset(String componentAssetPath) {\n"}}, {"oid": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "url": "https://github.com/kiegroup/appformer/commit/a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "message": "Renaming and fixes", "committedDate": "2020-11-24T15:47:08Z", "type": "commit"}, {"oid": "91ec28bf85a600f046a1dc4167f7074754bbe3f7", "url": "https://github.com/kiegroup/appformer/commit/91ec28bf85a600f046a1dc4167f7074754bbe3f7", "message": "Fixing tests", "committedDate": "2020-11-24T18:05:47Z", "type": "commit"}]}