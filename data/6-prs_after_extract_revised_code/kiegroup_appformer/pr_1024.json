{"pr_number": 1024, "pr_title": "AF-2538: No server disconnection error message in dashbuilder runtime\u2026", "pr_createdAt": "2020-08-07T18:34:57Z", "pr_url": "https://github.com/kiegroup/appformer/pull/1024", "timeline": [{"oid": "4d145cac385afe9b32c167c77889fbc2d75171c4", "url": "https://github.com/kiegroup/appformer/commit/4d145cac385afe9b32c167c77889fbc2d75171c4", "message": "AF-2538: No server disconnection error message in dashbuilder runtime UI if server is not connected", "committedDate": "2020-08-07T20:21:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIwNzM2MA==", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467207360", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String DisconnectedFromServer();\n          \n          \n            \n            \n          \n          \n            \n                String CouldNotConnectToServer();\n          \n          \n            \n            \n          \n          \n            \n                String SessionTimeout();\n          \n          \n            \n            \n          \n          \n            \n                String InvalidBusResponseProbablySessionTimeout();\n          \n          \n            \n                String disconnectedFromServer();\n          \n          \n            \n            \n          \n          \n            \n                String couldNotConnectToServer();\n          \n          \n            \n            \n          \n          \n            \n                String sessionTimeout();\n          \n          \n            \n            \n          \n          \n            \n                String invalidBusResponseProbablySessionTimeout();", "author": "caponetto", "createdAt": "2020-08-07T18:38:45Z", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/resources/i18n/AppConstants.java", "diffHunk": "@@ -54,5 +54,13 @@\n     String dashboardAlreadyImport(String newModelId, String exitingModel);\n \n     String importSuccess(String fileName);\n-    \n+\n+    String DisconnectedFromServer();\n+\n+    String CouldNotConnectToServer();\n+\n+    String SessionTimeout();\n+\n+    String InvalidBusResponseProbablySessionTimeout();", "originalCommit": "8f9f694da43efa00c4f076bcef87d5d30c944908", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4d145cac385afe9b32c167c77889fbc2d75171c4", "chunk": "diff --git a/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/resources/i18n/AppConstants.java b/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/resources/i18n/AppConstants.java\nindex 8d6929f9f..cb72ca851 100644\n--- a/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/resources/i18n/AppConstants.java\n+++ b/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/resources/i18n/AppConstants.java\n\n@@ -55,12 +55,12 @@ public interface AppConstants extends Messages {\n \n     String importSuccess(String fileName);\n \n-    String DisconnectedFromServer();\n+    String disconnectedFromServer();\n \n-    String CouldNotConnectToServer();\n+    String couldNotConnectToServer();\n \n-    String SessionTimeout();\n+    String sessionTimeout();\n \n-    String InvalidBusResponseProbablySessionTimeout();\n+    String invalidBusResponseProbablySessionTimeout();\n \n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxMzYwNA==", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467213604", "bodyText": "Please take into account that t could be null.", "author": "caponetto", "createdAt": "2020-08-07T18:52:42Z", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.error;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.resources.i18n.AppConstants;\n+import org.jboss.errai.bus.client.api.InvalidBusContentException;\n+import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n+import org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup;\n+import org.uberfire.ext.widgets.common.client.resources.i18n.CommonConstants;\n+\n+import static org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup.newYesNoCancelPopup;\n+import static org.uberfire.ext.widgets.common.client.common.popups.errors.ErrorPopup.showMessage;\n+\n+@Dependent\n+public class DefaultRuntimeErrorCallback {\n+\n+    @Inject\n+    BusyIndicatorView loading;\n+\n+    AppConstants i18n = AppConstants.INSTANCE;\n+\n+    private boolean errorPopUpLock = false;\n+\n+    public void error(final Throwable throwable) {\n+        if (errorPopUpLock) {\n+            return;\n+        }\n+        loading.hideBusyIndicator();\n+        errorPopUpLock = true;\n+        if (isServerOfflineException(throwable)) {\n+            yesNoPopup(i18n.DisconnectedFromServer(), i18n.CouldNotConnectToServer());\n+        } else if (isInvalidBusContentException(throwable)) {\n+            yesNoPopup(i18n.SessionTimeout(), i18n.InvalidBusResponseProbablySessionTimeout());\n+        } else {\n+            showMessage(CommonConstants.INSTANCE.ExceptionGeneric0(extractMessageRecursively(throwable)),\n+                        this::unlock,\n+                        this::unlock);\n+        }\n+\n+    }\n+\n+    private void yesNoPopup(String title, String content) {\n+        final YesNoCancelPopup result = newYesNoCancelPopup(title, content, Window.Location::reload, this::unlock, this::unlock);\n+        result.clearScrollHeight();\n+        result.show();\n+    }\n+\n+    private String extractMessageRecursively(final Throwable t) {", "originalCommit": "8f9f694da43efa00c4f076bcef87d5d30c944908", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3ODU2MA==", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467978560", "bodyText": "Thanks, I added a null check", "author": "jesuino", "createdAt": "2020-08-10T15:18:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxMzYwNA=="}], "type": "inlineReview", "revised_code": {"commit": "4d145cac385afe9b32c167c77889fbc2d75171c4", "chunk": "diff --git a/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java b/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java\nindex 7e65c5ca1..84f0394b3 100644\n--- a/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java\n+++ b/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java\n\n@@ -84,7 +84,7 @@ public class DefaultRuntimeErrorCallback {\n                                               \"Error parsing JSON: SyntaxError: Unexpected token \ufffd in JSON at position 1\",\n                                               \"Error parsing JSON: SyntaxError: JSON.parse: unexpected character at line 1 column 2 of the JSON data\");\n \n-        return cause == null && message != null && messages.stream().anyMatch(m -> message.equals(m));\n+        return cause == null && message != null && messages.stream().anyMatch(message::equals);\n     }\n \n     public void unlock() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA==", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467217358", "bodyText": "Consider reusing only one instance of YesNoCancelPopup instead of creating a new one every time.\nThe only things that change would be title and content.\nPerhaps you could use the YesNoCancelPopup#isVisible method instead of errorPopUpLock.\nJust a suggestion.", "author": "caponetto", "createdAt": "2020-08-07T19:00:36Z", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.error;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.resources.i18n.AppConstants;\n+import org.jboss.errai.bus.client.api.InvalidBusContentException;\n+import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n+import org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup;\n+import org.uberfire.ext.widgets.common.client.resources.i18n.CommonConstants;\n+\n+import static org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup.newYesNoCancelPopup;\n+import static org.uberfire.ext.widgets.common.client.common.popups.errors.ErrorPopup.showMessage;\n+\n+@Dependent\n+public class DefaultRuntimeErrorCallback {\n+\n+    @Inject\n+    BusyIndicatorView loading;\n+\n+    AppConstants i18n = AppConstants.INSTANCE;\n+\n+    private boolean errorPopUpLock = false;\n+\n+    public void error(final Throwable throwable) {\n+        if (errorPopUpLock) {\n+            return;\n+        }\n+        loading.hideBusyIndicator();\n+        errorPopUpLock = true;\n+        if (isServerOfflineException(throwable)) {\n+            yesNoPopup(i18n.DisconnectedFromServer(), i18n.CouldNotConnectToServer());\n+        } else if (isInvalidBusContentException(throwable)) {\n+            yesNoPopup(i18n.SessionTimeout(), i18n.InvalidBusResponseProbablySessionTimeout());\n+        } else {\n+            showMessage(CommonConstants.INSTANCE.ExceptionGeneric0(extractMessageRecursively(throwable)),\n+                        this::unlock,\n+                        this::unlock);\n+        }\n+\n+    }\n+\n+    private void yesNoPopup(String title, String content) {\n+        final YesNoCancelPopup result = newYesNoCancelPopup(title, content, Window.Location::reload, this::unlock, this::unlock);", "originalCommit": "8f9f694da43efa00c4f076bcef87d5d30c944908", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzMzYzNw==", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467933637", "bodyText": "Hello @caponetto - thanks for great suggestion. The issue is that there's no way to change the popUp content after it is created, but I will change the popUp body widget and see it works.", "author": "jesuino", "createdAt": "2020-08-10T14:14:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzNzkxNQ==", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467937915", "bodyText": "Oh, in this case, let's keep the way you did then.\nI saw a setTitle method and thought there could be a setContent as well, which is not the case.", "author": "caponetto", "createdAt": "2020-08-10T14:21:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MTg2Mw==", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467971863", "bodyText": "I tried your suggestion, but I had to: keep the flag since isVisible was not working, then setting the Body widget didn't work, it messed the popup, so I will have to recreate it everytime :(", "author": "jesuino", "createdAt": "2020-08-10T15:09:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAwNjY2OA==", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r468006668", "bodyText": "Thanks for trying, @jesuino! We've learned something today :)", "author": "caponetto", "createdAt": "2020-08-10T15:51:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA=="}], "type": "inlineReview", "revised_code": {"commit": "4d145cac385afe9b32c167c77889fbc2d75171c4", "chunk": "diff --git a/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java b/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java\nindex 7e65c5ca1..84f0394b3 100644\n--- a/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java\n+++ b/dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java\n\n@@ -84,7 +84,7 @@ public class DefaultRuntimeErrorCallback {\n                                               \"Error parsing JSON: SyntaxError: Unexpected token \ufffd in JSON at position 1\",\n                                               \"Error parsing JSON: SyntaxError: JSON.parse: unexpected character at line 1 column 2 of the JSON data\");\n \n-        return cause == null && message != null && messages.stream().anyMatch(m -> message.equals(m));\n+        return cause == null && message != null && messages.stream().anyMatch(message::equals);\n     }\n \n     public void unlock() {\n"}}, {"oid": "bd4226d53bda20e6dc85831fe526d061a98675e2", "url": "https://github.com/kiegroup/appformer/commit/bd4226d53bda20e6dc85831fe526d061a98675e2", "message": "AF-2538: No server disconnection error message in dashbuilder runtime UI if server is not connected", "committedDate": "2020-08-19T12:57:32Z", "type": "commit"}, {"oid": "02da7a2a1554cd46d9ec6ec277ab7c1973b27336", "url": "https://github.com/kiegroup/appformer/commit/02da7a2a1554cd46d9ec6ec277ab7c1973b27336", "message": "i18n keys renaming and null checking", "committedDate": "2020-08-19T12:57:32Z", "type": "commit"}, {"oid": "a6095d12d246ceb17b6702240a1006b7c3042b50", "url": "https://github.com/kiegroup/appformer/commit/a6095d12d246ceb17b6702240a1006b7c3042b50", "message": "Hiding no button from error popup", "committedDate": "2020-08-19T12:57:32Z", "type": "commit"}, {"oid": "84527f1bbbdc6ef29d2380b0047d3ea027348035", "url": "https://github.com/kiegroup/appformer/commit/84527f1bbbdc6ef29d2380b0047d3ea027348035", "message": "Method rename and adding test", "committedDate": "2020-08-19T14:09:48Z", "type": "commit"}, {"oid": "84527f1bbbdc6ef29d2380b0047d3ea027348035", "url": "https://github.com/kiegroup/appformer/commit/84527f1bbbdc6ef29d2380b0047d3ea027348035", "message": "Method rename and adding test", "committedDate": "2020-08-19T14:09:48Z", "type": "forcePushed"}]}