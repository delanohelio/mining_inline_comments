{"pr_number": 876, "pr_title": "AF-2397 :Deletion of group from Business Central UI does not remove group from the security-policy.properties file", "pr_createdAt": "2020-01-10T12:01:52Z", "pr_url": "https://github.com/kiegroup/appformer/pull/876", "timeline": [{"oid": "51dfb288bb36d1f77a668b4421ead37b6d6b842c", "url": "https://github.com/kiegroup/appformer/commit/51dfb288bb36d1f77a668b4421ead37b6d6b842c", "message": "AF-2397 :Deletion of group from Business Central UI does not remove group from the security-policy.properties file\n-  Added feature to remove a specific group from security-policy.properties\n-  If the user adds a group with the same name as deleted group, default configurations will be applied to the newly added group.", "committedDate": "2020-01-13T11:41:24Z", "type": "forcePushed"}, {"oid": "51bc235752b26a2db428f1ab6b827ceca76b2720", "url": "https://github.com/kiegroup/appformer/commit/51bc235752b26a2db428f1ab6b827ceca76b2720", "message": "AF-2397 :Deletion of group from Business Central UI does not remove group from the security-policy.properties file\n-  Added feature to remove a specific group from security-policy.properties\n-  If the user adds a group with the same name as deleted group, default configurations will be applied to the newly added group.", "committedDate": "2020-01-13T14:29:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgwNzU2Nw==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r366807567", "bodyText": "As done in doSave method, consider calling showLoadingBox before the service call and hideLoadingBox in the callback.", "author": "caponetto", "createdAt": "2020-01-15T10:43:51Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java", "diffHunk": "@@ -163,14 +163,25 @@ public boolean isDirty() {\n     void delete() {\n         final String name = group.getName();\n         userSystemManager.groups((Void v) -> {\n-                                     deleteGroupEvent.fire(new DeleteGroupEvent(name));\n-                                     workbenchNotification.fire(new NotificationEvent(UsersManagementWidgetsConstants.INSTANCE.groupRemoved(name),\n-                                                                                      INFO));\n+                                     doDelete();\n                                      clear();\n                                  },\n                                  errorCallback).delete(name);\n     }\n \n+    protected void doDelete(){\n+        final String name = group.getName();\n+        AuthorizationPolicy authzPolicy = permissionManager.getAuthorizationPolicy();\n+\n+        authorizationService.call(r -> {", "originalCommit": "51bc235752b26a2db428f1ab6b827ceca76b2720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24d100f08ad18692142d678469c00cd94ccc16d9", "chunk": "diff --git a/uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java b/uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java\nindex 604a7cd88..749b6d3b1 100644\n--- a/uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java\n+++ b/uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java\n\n@@ -172,8 +173,9 @@ public class GroupEditorWorkflow implements IsWidget {\n     protected void doDelete(){\n         final String name = group.getName();\n         AuthorizationPolicy authzPolicy = permissionManager.getAuthorizationPolicy();\n-\n+        showLoadingBox();\n         authorizationService.call(r -> {\n+                                      hideLoadingBox();\n                                       deleteGroupEvent.fire(new DeleteGroupEvent(name));\n                                       workbenchNotification.fire(new NotificationEvent(UsersManagementWidgetsConstants.INSTANCE.groupRemoved(name),\n                                                                                        INFO));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgwOTQ1Mw==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r366809453", "bodyText": "Consider creating at least one unit test for this public method.", "author": "caponetto", "createdAt": "2020-01-15T10:47:40Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationServiceImpl.java", "diffHunk": "@@ -50,4 +51,12 @@ public void savePolicy(AuthorizationPolicy policy) {\n         permissionManager.setAuthorizationPolicy(policy);\n         savedEvent.fire(new AuthorizationPolicySavedEvent(policy));\n     }\n+\n+    @Override\n+    public void deletePolicyByGroup(Group group, AuthorizationPolicy policy) {", "originalCommit": "51bc235752b26a2db428f1ab6b827ceca76b2720", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NzYxMQ==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r367887611", "bodyText": "added", "author": "RishiRajAnand", "createdAt": "2020-01-17T11:18:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgwOTQ1Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxMjUzOQ==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r366812539", "bodyText": "Consider creating at least one unit test for this public method.", "author": "caponetto", "createdAt": "2020-01-15T10:53:53Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java", "diffHunk": "@@ -149,7 +150,34 @@ public FileVisitResult visitFile(final Path file,\n \n     public boolean isPolicyFile(Path p) {\n         String fileName = p.getName(p.getNameCount() - 1).toString();\n-        return fileName.equals(\"security-policy.properties\") || fileName.startsWith(\"security-module-\");\n+        return fileName.equals(POLICY_FILE) || fileName.startsWith(\"security-module-\");\n+    }\n+\n+    @Override\n+    public void deletePolicyByGroup(Group group, AuthorizationPolicy policy) {", "originalCommit": "51bc235752b26a2db428f1ab6b827ceca76b2720", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NzY5NA==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r367887694", "bodyText": "added", "author": "RishiRajAnand", "createdAt": "2020-01-17T11:18:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxMjUzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "24d100f08ad18692142d678469c00cd94ccc16d9", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\nindex 8458a7e98..2c1c50f1f 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\n\n@@ -155,32 +162,18 @@ public class AuthorizationPolicyVfsStorage implements AuthorizationPolicyStorage\n \n     @Override\n     public void deletePolicyByGroup(Group group, AuthorizationPolicy policy) {\n-        ioService.startBatch(fileSystem,\n-                             new CommentedOption(\"system\",\n-                                                 \"Delete Policy\"));\n-        try (StringWriter sw = new StringWriter()){\n-            // Dump the entire authz policy into a properties map\n-            AuthorizationPolicyMarshaller marshaller = new AuthorizationPolicyMarshaller();\n-            NonEscapedProperties entries = new NonEscapedProperties();\n-            marshaller.remove(group, policy,\n-                              entries);\n-            // Store the entries into a properties file\n-            entries.store(sw,\n-                          \"Authorization Policy\",\n-                          \"Last update: \" + new Date().toString());\n-            String policyContent = sw.toString();\n-            Path policyPath = getAuthzPath().resolve(POLICY_FILE);\n-            ioService.write(policyPath,\n-                            policyContent);\n-        } catch (Exception e) {\n-            logger.error(\"Authz policy write error.\",\n-                         e);\n-        } finally {\n-            ioService.endBatch();\n-        }\n+\n+        AuthorizationPolicyMarshaller marshaller = new AuthorizationPolicyMarshaller();\n+        NonEscapedProperties entries = new NonEscapedProperties();\n+        marshaller.remove(group, policy,\n+                          entries);\n+        savePolicyIntoVfs(policy, entries,\n+                          \"system\",\n+                          \"Delete Policy\");\n     }\n \n     public void savePolicyIntoVfs(AuthorizationPolicy policy,\n+                                  NonEscapedProperties entries,\n                                   String subjectId,\n                                   String message) {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxNzQ4Mw==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r366817483", "bodyText": "I see that lines 161 to 174 have almost the same code as the savePolicyIntoVfs method.\nConsider extracting duplicated code into generic methods.", "author": "caponetto", "createdAt": "2020-01-15T11:05:46Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java", "diffHunk": "@@ -149,7 +150,34 @@ public FileVisitResult visitFile(final Path file,\n \n     public boolean isPolicyFile(Path p) {\n         String fileName = p.getName(p.getNameCount() - 1).toString();\n-        return fileName.equals(\"security-policy.properties\") || fileName.startsWith(\"security-module-\");\n+        return fileName.equals(POLICY_FILE) || fileName.startsWith(\"security-module-\");\n+    }\n+\n+    @Override\n+    public void deletePolicyByGroup(Group group, AuthorizationPolicy policy) {\n+        ioService.startBatch(fileSystem,\n+                             new CommentedOption(\"system\",\n+                                                 \"Delete Policy\"));\n+        try (StringWriter sw = new StringWriter()){", "originalCommit": "51bc235752b26a2db428f1ab6b827ceca76b2720", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4Nzk2Ng==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r367887966", "bodyText": "removed duplicated code", "author": "RishiRajAnand", "createdAt": "2020-01-17T11:19:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxNzQ4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "24d100f08ad18692142d678469c00cd94ccc16d9", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\nindex 8458a7e98..2c1c50f1f 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\n\n@@ -155,32 +162,18 @@ public class AuthorizationPolicyVfsStorage implements AuthorizationPolicyStorage\n \n     @Override\n     public void deletePolicyByGroup(Group group, AuthorizationPolicy policy) {\n-        ioService.startBatch(fileSystem,\n-                             new CommentedOption(\"system\",\n-                                                 \"Delete Policy\"));\n-        try (StringWriter sw = new StringWriter()){\n-            // Dump the entire authz policy into a properties map\n-            AuthorizationPolicyMarshaller marshaller = new AuthorizationPolicyMarshaller();\n-            NonEscapedProperties entries = new NonEscapedProperties();\n-            marshaller.remove(group, policy,\n-                              entries);\n-            // Store the entries into a properties file\n-            entries.store(sw,\n-                          \"Authorization Policy\",\n-                          \"Last update: \" + new Date().toString());\n-            String policyContent = sw.toString();\n-            Path policyPath = getAuthzPath().resolve(POLICY_FILE);\n-            ioService.write(policyPath,\n-                            policyContent);\n-        } catch (Exception e) {\n-            logger.error(\"Authz policy write error.\",\n-                         e);\n-        } finally {\n-            ioService.endBatch();\n-        }\n+\n+        AuthorizationPolicyMarshaller marshaller = new AuthorizationPolicyMarshaller();\n+        NonEscapedProperties entries = new NonEscapedProperties();\n+        marshaller.remove(group, policy,\n+                          entries);\n+        savePolicyIntoVfs(policy, entries,\n+                          \"system\",\n+                          \"Delete Policy\");\n     }\n \n     public void savePolicyIntoVfs(AuthorizationPolicy policy,\n+                                  NonEscapedProperties entries,\n                                   String subjectId,\n                                   String message) {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxOTE0OA==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r366819148", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void remove (Group group , AuthorizationPolicy policy,\n          \n          \n            \n                public void remove(Group group, AuthorizationPolicy policy,", "author": "caponetto", "createdAt": "2020-01-15T11:09:53Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java", "diffHunk": "@@ -323,6 +323,39 @@ public void write(Group group,\n         }\n     }\n \n+    public void remove (Group group , AuthorizationPolicy policy,", "originalCommit": "51bc235752b26a2db428f1ab6b827ceca76b2720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24d100f08ad18692142d678469c00cd94ccc16d9", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\nindex 4a5a8b4f9..727b19453 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n\n@@ -323,24 +323,24 @@ public class AuthorizationPolicyMarshaller {\n         }\n     }\n \n-    public void remove (Group group , AuthorizationPolicy policy,\n-                        Map out) {\n+    public void remove(Group group, AuthorizationPolicy policy,\n+                       Map out) {\n \n-        write(policy,out);\n+        write(policy, out);\n \n         for (Group subject : policy.getGroups()) {\n-            if (group.getName().equals(subject.getName())){\n+            if (group.getName().equals(subject.getName())) {\n                 remove(subject,\n                        out);\n                 remove(subject,\n-                      policy.getPermissions(subject),\n-                      out);\n+                       policy.getPermissions(subject),\n+                       out);\n             }\n         }\n     }\n \n     public void remove(Group group,\n-                      Map out) {\n+                       Map out) {\n         String homePerspectiveKey = GROUP + \".\" + group.getName() + \".\" + HOME;\n         String priorityKey = GROUP + \".\" + group.getName() + \".\" + PRIORITY;\n         out.remove(priorityKey);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxOTI3Ng==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r366819276", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  Map out) {\n          \n          \n            \n                                   Map out) {", "author": "caponetto", "createdAt": "2020-01-15T11:10:13Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java", "diffHunk": "@@ -323,6 +323,39 @@ public void write(Group group,\n         }\n     }\n \n+    public void remove (Group group , AuthorizationPolicy policy,\n+                        Map out) {\n+\n+        write(policy,out);\n+\n+        for (Group subject : policy.getGroups()) {\n+            if (group.getName().equals(subject.getName())){\n+                remove(subject,\n+                       out);\n+                remove(subject,\n+                      policy.getPermissions(subject),\n+                      out);\n+            }\n+        }\n+    }\n+\n+    public void remove(Group group,\n+                      Map out) {", "originalCommit": "51bc235752b26a2db428f1ab6b827ceca76b2720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24d100f08ad18692142d678469c00cd94ccc16d9", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\nindex 4a5a8b4f9..727b19453 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n\n@@ -323,24 +323,24 @@ public class AuthorizationPolicyMarshaller {\n         }\n     }\n \n-    public void remove (Group group , AuthorizationPolicy policy,\n-                        Map out) {\n+    public void remove(Group group, AuthorizationPolicy policy,\n+                       Map out) {\n \n-        write(policy,out);\n+        write(policy, out);\n \n         for (Group subject : policy.getGroups()) {\n-            if (group.getName().equals(subject.getName())){\n+            if (group.getName().equals(subject.getName())) {\n                 remove(subject,\n                        out);\n                 remove(subject,\n-                      policy.getPermissions(subject),\n-                      out);\n+                       policy.getPermissions(subject),\n+                       out);\n             }\n         }\n     }\n \n     public void remove(Group group,\n-                      Map out) {\n+                       Map out) {\n         String homePerspectiveKey = GROUP + \".\" + group.getName() + \".\" + HOME;\n         String priorityKey = GROUP + \".\" + group.getName() + \".\" + PRIORITY;\n         out.remove(priorityKey);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxOTg4OQ==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r366819889", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  policy.getPermissions(subject),\n          \n          \n            \n                                   policy.getPermissions(subject),", "author": "caponetto", "createdAt": "2020-01-15T11:11:41Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java", "diffHunk": "@@ -323,6 +323,39 @@ public void write(Group group,\n         }\n     }\n \n+    public void remove (Group group , AuthorizationPolicy policy,\n+                        Map out) {\n+\n+        write(policy,out);\n+\n+        for (Group subject : policy.getGroups()) {\n+            if (group.getName().equals(subject.getName())){\n+                remove(subject,\n+                       out);\n+                remove(subject,\n+                      policy.getPermissions(subject),", "originalCommit": "51bc235752b26a2db428f1ab6b827ceca76b2720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24d100f08ad18692142d678469c00cd94ccc16d9", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\nindex 4a5a8b4f9..727b19453 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n\n@@ -323,24 +323,24 @@ public class AuthorizationPolicyMarshaller {\n         }\n     }\n \n-    public void remove (Group group , AuthorizationPolicy policy,\n-                        Map out) {\n+    public void remove(Group group, AuthorizationPolicy policy,\n+                       Map out) {\n \n-        write(policy,out);\n+        write(policy, out);\n \n         for (Group subject : policy.getGroups()) {\n-            if (group.getName().equals(subject.getName())){\n+            if (group.getName().equals(subject.getName())) {\n                 remove(subject,\n                        out);\n                 remove(subject,\n-                      policy.getPermissions(subject),\n-                      out);\n+                       policy.getPermissions(subject),\n+                       out);\n             }\n         }\n     }\n \n     public void remove(Group group,\n-                      Map out) {\n+                       Map out) {\n         String homePerspectiveKey = GROUP + \".\" + group.getName() + \".\" + HOME;\n         String priorityKey = GROUP + \".\" + group.getName() + \".\" + PRIORITY;\n         out.remove(priorityKey);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxOTk0OQ==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r366819949", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  out);\n          \n          \n            \n                                   out);", "author": "caponetto", "createdAt": "2020-01-15T11:11:51Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java", "diffHunk": "@@ -323,6 +323,39 @@ public void write(Group group,\n         }\n     }\n \n+    public void remove (Group group , AuthorizationPolicy policy,\n+                        Map out) {\n+\n+        write(policy,out);\n+\n+        for (Group subject : policy.getGroups()) {\n+            if (group.getName().equals(subject.getName())){\n+                remove(subject,\n+                       out);\n+                remove(subject,\n+                      policy.getPermissions(subject),\n+                      out);", "originalCommit": "51bc235752b26a2db428f1ab6b827ceca76b2720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24d100f08ad18692142d678469c00cd94ccc16d9", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\nindex 4a5a8b4f9..727b19453 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n\n@@ -323,24 +323,24 @@ public class AuthorizationPolicyMarshaller {\n         }\n     }\n \n-    public void remove (Group group , AuthorizationPolicy policy,\n-                        Map out) {\n+    public void remove(Group group, AuthorizationPolicy policy,\n+                       Map out) {\n \n-        write(policy,out);\n+        write(policy, out);\n \n         for (Group subject : policy.getGroups()) {\n-            if (group.getName().equals(subject.getName())){\n+            if (group.getName().equals(subject.getName())) {\n                 remove(subject,\n                        out);\n                 remove(subject,\n-                      policy.getPermissions(subject),\n-                      out);\n+                       policy.getPermissions(subject),\n+                       out);\n             }\n         }\n     }\n \n     public void remove(Group group,\n-                      Map out) {\n+                       Map out) {\n         String homePerspectiveKey = GROUP + \".\" + group.getName() + \".\" + HOME;\n         String priorityKey = GROUP + \".\" + group.getName() + \".\" + PRIORITY;\n         out.remove(priorityKey);\n"}}, {"oid": "24d100f08ad18692142d678469c00cd94ccc16d9", "url": "https://github.com/kiegroup/appformer/commit/24d100f08ad18692142d678469c00cd94ccc16d9", "message": "AF-2397 :Deletion of group from Business Central UI does not remove group from the security-policy.properties file\n-  Added feature to remove a specific group from security-policy.properties\n-  If the user adds a group with the same name as deleted group, default configurations will be applied to the newly added group.", "committedDate": "2020-01-17T11:11:19Z", "type": "forcePushed"}, {"oid": "90ba99f8cd60834cc7df3ad086233100fb50bf8d", "url": "https://github.com/kiegroup/appformer/commit/90ba99f8cd60834cc7df3ad086233100fb50bf8d", "message": "AF-2397 :Deletion of group from Business Central UI does not remove group from the security-policy.properties file\n-  Added feature to remove a specific group from security-policy.properties\n-  If the user adds a group with the same name as deleted group, default configurations will be applied to the newly added group.", "committedDate": "2020-01-17T11:15:11Z", "type": "forcePushed"}, {"oid": "cb91eaa57e1a6c4979c20504088579bc2cb32c37", "url": "https://github.com/kiegroup/appformer/commit/cb91eaa57e1a6c4979c20504088579bc2cb32c37", "message": "AF-2397 :Deletion of group from Business Central UI does not remove group from the security-policy.properties file\n-  Added feature to remove a specific group from security-policy.properties", "committedDate": "2020-01-18T06:14:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTg5NQ==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r370009895", "bodyText": "This remove method as well as the following one can be private as they're only used in this class (if I looked correctly).", "author": "barboras7", "createdAt": "2020-01-23T09:29:56Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java", "diffHunk": "@@ -323,6 +323,39 @@ public void write(Group group,\n         }\n     }\n \n+    public void remove(Group group, AuthorizationPolicy policy,\n+                       Map out) {\n+\n+        write(policy, out);\n+\n+        for (Group subject : policy.getGroups()) {\n+            if (group.getName().equals(subject.getName())) {\n+                remove(subject,\n+                       out);\n+                remove(subject,\n+                       policy.getPermissions(subject),\n+                       out);\n+            }\n+        }\n+    }\n+\n+    public void remove(Group group,", "originalCommit": "cb91eaa57e1a6c4979c20504088579bc2cb32c37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExNjQxOQ==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r371116419", "bodyText": "These methods are not used directly by other classes at the moment, so it makes sense to make this private. However, these methods are generic and can be used for specific use cases in future.", "author": "RishiRajAnand", "createdAt": "2020-01-27T08:48:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTg5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "1e7d2aef74166356c2b77607515be59fe4930e57", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\nindex 727b19453..acf1c1631 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyMarshaller.java\n\n@@ -339,7 +339,7 @@ public class AuthorizationPolicyMarshaller {\n         }\n     }\n \n-    public void remove(Group group,\n+    private void remove(Group group,\n                        Map out) {\n         String homePerspectiveKey = GROUP + \".\" + group.getName() + \".\" + HOME;\n         String priorityKey = GROUP + \".\" + group.getName() + \".\" + PRIORITY;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxMzQ4OQ==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r370013489", "bodyText": "unnecessary empty line", "author": "barboras7", "createdAt": "2020-01-23T09:37:13Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java", "diffHunk": "@@ -84,7 +85,14 @@ public synchronized AuthorizationPolicy loadPolicy() {\n \n     @Override\n     public synchronized void savePolicy(AuthorizationPolicy policy) {\n-        savePolicyIntoVfs(policy,\n+", "originalCommit": "cb91eaa57e1a6c4979c20504088579bc2cb32c37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e7d2aef74166356c2b77607515be59fe4930e57", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\nindex ef4a67daf..39877ef48 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\n\n@@ -91,7 +91,6 @@ public class AuthorizationPolicyVfsStorage implements AuthorizationPolicyStorage\n         NonEscapedProperties entries = new NonEscapedProperties();\n         marshaller.write(policy,\n                          entries);\n-\n         savePolicyIntoVfs(entries,\n                           \"system\",\n                           \"Save policy\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxMzc4MQ==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r370013781", "bodyText": "empty line", "author": "barboras7", "createdAt": "2020-01-23T09:37:47Z", "path": "uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java", "diffHunk": "@@ -149,10 +157,22 @@ public FileVisitResult visitFile(final Path file,\n \n     public boolean isPolicyFile(Path p) {\n         String fileName = p.getName(p.getNameCount() - 1).toString();\n-        return fileName.equals(\"security-policy.properties\") || fileName.startsWith(\"security-module-\");\n+        return fileName.equals(POLICY_FILE) || fileName.startsWith(\"security-module-\");\n     }\n \n-    public void savePolicyIntoVfs(AuthorizationPolicy policy,\n+    @Override\n+    public void deletePolicyByGroup(Group group, AuthorizationPolicy policy) {\n+", "originalCommit": "cb91eaa57e1a6c4979c20504088579bc2cb32c37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExNTMwNA==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r371115304", "bodyText": "removed empty line", "author": "RishiRajAnand", "createdAt": "2020-01-27T08:45:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxMzc4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "1e7d2aef74166356c2b77607515be59fe4930e57", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\nindex ef4a67daf..39877ef48 100644\n--- a/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\n+++ b/uberfire-backend/uberfire-backend-server/src/main/java/org/uberfire/backend/server/authz/AuthorizationPolicyVfsStorage.java\n\n@@ -175,7 +174,6 @@ public class AuthorizationPolicyVfsStorage implements AuthorizationPolicyStorage\n     public void savePolicyIntoVfs(NonEscapedProperties entries,\n                                   String subjectId,\n                                   String message) {\n-\n         if (subjectId == null || message == null) {\n             ioService.startBatch(fileSystem);\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAzMjc0MQ==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r370032741", "bodyText": "unnecessary semicolon", "author": "barboras7", "createdAt": "2020-01-23T10:15:13Z", "path": "uberfire-backend/uberfire-backend-server/src/test/java/org/uberfire/backend/server/authz/AuthzPolicyDeployerTest.java", "diffHunk": "@@ -95,6 +105,42 @@ public void testPolicyLoad2() throws Exception {\n         testPolicyLoad(\"WEB-INF/classes/split/security-policy.properties\");\n     }\n \n+    @Test\n+    public void testPolicyDelete() throws Exception {\n+        testPolicyDelete(\"WEB-INF/classes/security-policy.properties\");\n+    }\n+\n+    public void testPolicyDelete(String path) throws Exception {\n+        URL fileURL = Thread.currentThread().getContextClassLoader().getResource(path);\n+        Path policyDir = Paths.get(fileURL.toURI()).getParent();\n+\n+        assertTrue(RoleRegistry.get().getRegisteredRoles().isEmpty());\n+\n+        deployer.deployPolicy(policyDir);\n+\n+        ArgumentCaptor<AuthorizationPolicy> policyCaptor = ArgumentCaptor.forClass(AuthorizationPolicy.class);\n+        ArgumentCaptor<Group> groupCaptor = ArgumentCaptor.forClass(Group.class);\n+\n+        verify(storage).loadPolicy();\n+        verify(storage).savePolicy(policyCaptor.capture());\n+        Group group = new GroupImpl(\"group1\");\n+        storage.deletePolicyByGroup(group, policyCaptor.getValue());\n+        verify(storage).deletePolicyByGroup(groupCaptor.capture(), policyCaptor.capture());\n+        verify(event).fire(any());\n+\n+        AuthorizationPolicy policy = policyCaptor.getValue();\n+        verify(permissionManager).setAuthorizationPolicy(policy);\n+\n+        Set<Group> roles = policyCaptor.getValue().getGroups();\n+        assertEquals(1, roles.size());\n+\n+        PermissionCollection permissions = policy.getPermissions(group);\n+        Permission permission = permissions.get(\"perspective.read\");\n+        assertNotNull(permission);\n+        assertEquals(AuthorizationResult.ACCESS_GRANTED, permission.getResult());\n+        ;", "originalCommit": "cb91eaa57e1a6c4979c20504088579bc2cb32c37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e7d2aef74166356c2b77607515be59fe4930e57", "chunk": "diff --git a/uberfire-backend/uberfire-backend-server/src/test/java/org/uberfire/backend/server/authz/AuthzPolicyDeployerTest.java b/uberfire-backend/uberfire-backend-server/src/test/java/org/uberfire/backend/server/authz/AuthzPolicyDeployerTest.java\nindex 30e575468..6318f111a 100644\n--- a/uberfire-backend/uberfire-backend-server/src/test/java/org/uberfire/backend/server/authz/AuthzPolicyDeployerTest.java\n+++ b/uberfire-backend/uberfire-backend-server/src/test/java/org/uberfire/backend/server/authz/AuthzPolicyDeployerTest.java\n\n@@ -138,7 +138,6 @@ public class AuthzPolicyDeployerTest {\n         Permission permission = permissions.get(\"perspective.read\");\n         assertNotNull(permission);\n         assertEquals(AuthorizationResult.ACCESS_GRANTED, permission.getResult());\n-        ;\n     }\n \n     public void testPolicyLoad(String path) throws Exception {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAzODY4Mw==", "url": "https://github.com/kiegroup/appformer/pull/876#discussion_r370038683", "bodyText": "empty line", "author": "barboras7", "createdAt": "2020-01-23T10:27:40Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java", "diffHunk": "@@ -163,14 +164,26 @@ public boolean isDirty() {\n     void delete() {\n         final String name = group.getName();\n         userSystemManager.groups((Void v) -> {\n-                                     deleteGroupEvent.fire(new DeleteGroupEvent(name));\n-                                     workbenchNotification.fire(new NotificationEvent(UsersManagementWidgetsConstants.INSTANCE.groupRemoved(name),\n-                                                                                      INFO));\n+                                     doDelete();\n                                      clear();\n                                  },\n                                  errorCallback).delete(name);\n     }\n \n+    protected void doDelete(){\n+        final String name = group.getName();\n+        AuthorizationPolicy authzPolicy = permissionManager.getAuthorizationPolicy();\n+        showLoadingBox();\n+        authorizationService.call(r -> {\n+                                      hideLoadingBox();\n+                                      deleteGroupEvent.fire(new DeleteGroupEvent(name));\n+                                      workbenchNotification.fire(new NotificationEvent(UsersManagementWidgetsConstants.INSTANCE.groupRemoved(name),\n+                                                                                       INFO));\n+                                  },\n+                                  errorCallback).deletePolicyByGroup(group, authzPolicy);\n+", "originalCommit": "cb91eaa57e1a6c4979c20504088579bc2cb32c37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e7d2aef74166356c2b77607515be59fe4930e57", "chunk": "diff --git a/uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java b/uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java\nindex 749b6d3b1..4a3d8e4f2 100644\n--- a/uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java\n+++ b/uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-widgets-security-management/src/main/java/org/uberfire/ext/security/management/client/widgets/management/editor/group/workflow/GroupEditorWorkflow.java\n\n@@ -181,7 +181,6 @@ public class GroupEditorWorkflow implements IsWidget {\n                                                                                        INFO));\n                                   },\n                                   errorCallback).deletePolicyByGroup(group, authzPolicy);\n-\n     }\n \n     protected void doShow(final String groupName) {\n"}}, {"oid": "1e7d2aef74166356c2b77607515be59fe4930e57", "url": "https://github.com/kiegroup/appformer/commit/1e7d2aef74166356c2b77607515be59fe4930e57", "message": "AF-2397 :Deletion of group from Business Central UI does not remove group from the security-policy.properties file\n- Added feature to remove a specific group from security-policy.properties", "committedDate": "2020-01-27T06:51:07Z", "type": "forcePushed"}, {"oid": "e4db632daf8374a3e8b5b107dd9ebbbb5a90bdb9", "url": "https://github.com/kiegroup/appformer/commit/e4db632daf8374a3e8b5b107dd9ebbbb5a90bdb9", "message": "AF-2397 :Deletion of group from Business Central UI does not remove group from the security-policy.properties file\n- Added feature to remove a specific group from security-policy.properties", "committedDate": "2020-01-29T14:06:49Z", "type": "commit"}, {"oid": "e4db632daf8374a3e8b5b107dd9ebbbb5a90bdb9", "url": "https://github.com/kiegroup/appformer/commit/e4db632daf8374a3e8b5b107dd9ebbbb5a90bdb9", "message": "AF-2397 :Deletion of group from Business Central UI does not remove group from the security-policy.properties file\n- Added feature to remove a specific group from security-policy.properties", "committedDate": "2020-01-29T14:06:49Z", "type": "forcePushed"}]}