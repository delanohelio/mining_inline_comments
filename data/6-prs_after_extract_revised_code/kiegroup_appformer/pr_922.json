{"pr_number": 922, "pr_title": "KOGITO-766: Kogito Keyboard Shortcuts API", "pr_createdAt": "2020-03-16T16:30:06Z", "pr_url": "https://github.com/kiegroup/appformer/pull/922", "timeline": [{"oid": "e6626903a6531ef66e8a8abea6b92ef96c952db9", "url": "https://github.com/kiegroup/appformer/commit/e6626903a6531ef66e8a8abea6b92ef96c952db9", "message": "Removing changes done by mistake", "committedDate": "2020-03-16T18:28:32Z", "type": "forcePushed"}, {"oid": "82188b636163d0f22c34aa7edf52c10505d9b22e", "url": "https://github.com/kiegroup/appformer/commit/82188b636163d0f22c34aa7edf52c10505d9b22e", "message": "Create 1st version of JSInterop layer", "committedDate": "2020-03-23T17:33:09Z", "type": "commit"}, {"oid": "726e817d9590d2092adea21f83ad315faa044178", "url": "https://github.com/kiegroup/appformer/commit/726e817d9590d2092adea21f83ad315faa044178", "message": "Fix import", "committedDate": "2020-03-23T17:33:09Z", "type": "commit"}, {"oid": "9aa9901948cd4a4473a8ea707d39281db850b283", "url": "https://github.com/kiegroup/appformer/commit/9aa9901948cd4a4473a8ea707d39281db850b283", "message": "Expose new context variable", "committedDate": "2020-03-23T17:33:09Z", "type": "commit"}, {"oid": "9f6fd363fb7911c95f994a5ef040e2aa458564d6", "url": "https://github.com/kiegroup/appformer/commit/9f6fd363fb7911c95f994a5ef040e2aa458564d6", "message": "JsInterop layer working", "committedDate": "2020-03-23T17:33:09Z", "type": "commit"}, {"oid": "f678c5d8225f244c1551e02d38cfdcd8ddf975fd", "url": "https://github.com/kiegroup/appformer/commit/f678c5d8225f244c1551e02d38cfdcd8ddf975fd", "message": "Removing changes done by mistake", "committedDate": "2020-03-23T17:33:09Z", "type": "commit"}, {"oid": "f678c5d8225f244c1551e02d38cfdcd8ddf975fd", "url": "https://github.com/kiegroup/appformer/commit/f678c5d8225f244c1551e02d38cfdcd8ddf975fd", "message": "Removing changes done by mistake", "committedDate": "2020-03-23T17:33:09Z", "type": "forcePushed"}, {"oid": "189fa119414f143a6444dd71cc5377ae92160b0d", "url": "https://github.com/kiegroup/appformer/commit/189fa119414f143a6444dd71cc5377ae92160b0d", "message": "Removing Kogito hard dependency on non-Kogito modules", "committedDate": "2020-03-24T00:48:07Z", "type": "commit"}, {"oid": "73030ee2cd742e6fd7322d5550375e6a28656482", "url": "https://github.com/kiegroup/appformer/commit/73030ee2cd742e6fd7322d5550375e6a28656482", "message": "Merge remote-tracking branch 'origin/master' into keyboard-shortcuts-api", "committedDate": "2020-03-31T12:51:56Z", "type": "commit"}, {"oid": "76906f148dcf14aa720fcbc3536e183f73158f61", "url": "https://github.com/kiegroup/appformer/commit/76906f148dcf14aa720fcbc3536e183f73158f61", "message": "Merge remote-tracking branch 'origin/master' into keyboard-shortcuts-api", "committedDate": "2020-04-29T18:12:32Z", "type": "commit"}, {"oid": "6fc3aa50a6a363febd01ee5138c51bcd108bb2b8", "url": "https://github.com/kiegroup/appformer/commit/6fc3aa50a6a363febd01ee5138c51bcd108bb2b8", "message": "Merge remote-tracking branch 'origin/master' into keyboard-shortcuts-api", "committedDate": "2020-05-05T17:07:07Z", "type": "commit"}, {"oid": "0128c92a3f638e7ceddff02a340511edc6b2823b", "url": "https://github.com/kiegroup/appformer/commit/0128c92a3f638e7ceddff02a340511edc6b2823b", "message": "Expose Event target", "committedDate": "2020-05-05T20:57:30Z", "type": "commit"}, {"oid": "5830d2f89947f685c07575d7fbe97f94c7d96e1e", "url": "https://github.com/kiegroup/appformer/commit/5830d2f89947f685c07575d7fbe97f94c7d96e1e", "message": "Merge branch 'master' of github.com:kiegroup/appformer into keyboard-shortcuts-api", "committedDate": "2020-05-12T17:02:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2OTc3MA==", "url": "https://github.com/kiegroup/appformer/pull/922#discussion_r428469770", "bodyText": "This import is not used what is suspicious as it seems as we add implementation of interface that we will have more alternatives.\n\nMaybe when will read rest of PR will find out I am wrong.", "author": "jomarko", "createdAt": "2020-05-21T06:29:16Z", "path": "appformer-client-api/src/main/java/org/appformer/client/context/DefaultEditorContextProviderImpl.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.client.context;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Alternative;", "originalCommit": "5830d2f89947f685c07575d7fbe97f94c7d96e1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1OTc2NA==", "url": "https://github.com/kiegroup/appformer/pull/922#discussion_r428659764", "bodyText": "This is the default implementation. We don't need an @Alternative there since this bean should be used when no alterantives to it are configured. Removed the import.", "author": "tiagobento", "createdAt": "2020-05-21T13:44:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2OTc3MA=="}], "type": "inlineReview", "revised_code": {"commit": "489cfdfa480861fa8ea2499dfe03ad75011f9230", "chunk": "diff --git a/appformer-client-api/src/main/java/org/appformer/client/context/DefaultEditorContextProviderImpl.java b/appformer-client-api/src/main/java/org/appformer/client/context/DefaultEditorContextProviderImpl.java\nindex 0b20bf938..8bca32c19 100644\n--- a/appformer-client-api/src/main/java/org/appformer/client/context/DefaultEditorContextProviderImpl.java\n+++ b/appformer-client-api/src/main/java/org/appformer/client/context/DefaultEditorContextProviderImpl.java\n\n@@ -17,7 +17,6 @@\n package org.appformer.client.context;\n \n import javax.enterprise.context.ApplicationScoped;\n-import javax.enterprise.inject.Alternative;\n \n @ApplicationScoped\n public class DefaultEditorContextProviderImpl implements EditorContextProvider {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MjM5Mw==", "url": "https://github.com/kiegroup/appformer/pull/922#discussion_r428472393", "bodyText": "Could we please add javadoc to KeyboardShortcutsApiOpts. To me as newcomer is not clear what Opts stands for and what is the difference between REPEAT and NO_REPEAT constants. Thank you.", "author": "jomarko", "createdAt": "2020-05-21T06:37:05Z", "path": "appformer-client-api/src/main/java/org/appformer/client/keyboardShortcuts/KeyboardShortcutsApiOpts.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.client.keyboardShortcuts;\n+\n+import jsinterop.annotations.JsProperty;\n+import jsinterop.annotations.JsType;\n+\n+@JsType\n+public class KeyboardShortcutsApiOpts {\n+\n+    public static final KeyboardShortcutsApiOpts DEFAULT = new KeyboardShortcutsApiOpts(Repeat.NO_REPEAT);\n+\n+    private final Repeat repeat;\n+\n+    public KeyboardShortcutsApiOpts(final Repeat repeat) {\n+        this.repeat = repeat;\n+    }\n+\n+    @JsProperty\n+    public boolean getRepeat() {\n+        return Repeat.REPEAT.equals(repeat);\n+    }\n+\n+    public enum Repeat {\n+        REPEAT,\n+        NO_REPEAT\n+    }", "originalCommit": "5830d2f89947f685c07575d7fbe97f94c7d96e1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY2MTIzNA==", "url": "https://github.com/kiegroup/appformer/pull/922#discussion_r428661234", "bodyText": "Added JavaDoc.", "author": "tiagobento", "createdAt": "2020-05-21T13:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MjM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyNzYxNQ==", "url": "https://github.com/kiegroup/appformer/pull/922#discussion_r429027615", "bodyText": "Thank you", "author": "jomarko", "createdAt": "2020-05-22T03:44:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MjM5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "489cfdfa480861fa8ea2499dfe03ad75011f9230", "chunk": "diff --git a/appformer-client-api/src/main/java/org/appformer/client/keyboardShortcuts/KeyboardShortcutsApiOpts.java b/appformer-client-api/src/main/java/org/appformer/client/keyboardShortcuts/KeyboardShortcutsApiOpts.java\nindex ae02595bb..7cd39dabd 100644\n--- a/appformer-client-api/src/main/java/org/appformer/client/keyboardShortcuts/KeyboardShortcutsApiOpts.java\n+++ b/appformer-client-api/src/main/java/org/appformer/client/keyboardShortcuts/KeyboardShortcutsApiOpts.java\n\n@@ -35,6 +35,12 @@ public class KeyboardShortcutsApiOpts {\n         return Repeat.REPEAT.equals(repeat);\n     }\n \n+    /**\n+     * Repetition mode for Keyboard Shortcuts.\n+     * <p>\n+     * REPEAT - When pressing and holding a key, the same action will be fired multiple times.\n+     * NO_REPEAT - When pressing and holding a key, the action will be only fired once.\n+     */\n     public enum Repeat {\n         REPEAT,\n         NO_REPEAT\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NDg3Mw==", "url": "https://github.com/kiegroup/appformer/pull/922#discussion_r428474873", "bodyText": "Please add a jvadoc, without the video you provided in PR description it is hard to realize 'combination' and 'label' are shown in to panel with complete list of shortcuts.\n\nOr even different purpose?", "author": "jomarko", "createdAt": "2020-05-21T06:44:21Z", "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsApi.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.keyboardshortcuts;\n+\n+import elemental2.dom.EventTarget;\n+import jsinterop.annotations.JsFunction;\n+import org.appformer.client.keyboardShortcuts.KeyboardShortcutsApiOpts;\n+\n+public interface KeyboardShortcutsApi {\n+\n+    int registerKeyPress(String combination, String label, KeyboardShortcutsApi.Action onKeyDown, KeyboardShortcutsApiOpts opts);\n+\n+    int registerKeyDownThenUp(String combination, String label, KeyboardShortcutsApi.Action onKeyDown, KeyboardShortcutsApi.Action onKeyUp, KeyboardShortcutsApiOpts opts);\n+\n+    void deregister(int id);\n+\n+    @JsFunction\n+    @FunctionalInterface\n+    interface Action {\n+\n+        void execute(final EventTarget target);\n+    }\n+}", "originalCommit": "5830d2f89947f685c07575d7fbe97f94c7d96e1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY2MzQ0OQ==", "url": "https://github.com/kiegroup/appformer/pull/922#discussion_r428663449", "bodyText": "Added JavaDoc.", "author": "tiagobento", "createdAt": "2020-05-21T13:50:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NDg3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "489cfdfa480861fa8ea2499dfe03ad75011f9230", "chunk": "diff --git a/appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsApi.java b/appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsApi.java\nindex 849808fc0..b90067c17 100644\n--- a/appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsApi.java\n+++ b/appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsApi.java\n\n@@ -20,12 +20,39 @@ import elemental2.dom.EventTarget;\n import jsinterop.annotations.JsFunction;\n import org.appformer.client.keyboardShortcuts.KeyboardShortcutsApiOpts;\n \n+/**\n+ * API for registering Keyboard Shortcuts.\n+ */\n public interface KeyboardShortcutsApi {\n \n+    /**\n+     * Register a Keyboard Shortcuts for a keypress event.\n+     * @param combination The combination of keys that trigger 'onKeyDown' action. This is shown on the Keyboard Shortcuts panel.\n+     * @param label The label for this Keyboard Shortcut. This is shown on the Keyboard Shortcuts panel.\n+     * @param onKeyDown The action to  be executed when 'combination' is pressed.\n+     * @param opts Options of this registration.\n+     *\n+     * @return An id representing this registration. This id can be used to 'deregister' the Keyboard Shortcut.\n+     */\n     int registerKeyPress(String combination, String label, KeyboardShortcutsApi.Action onKeyDown, KeyboardShortcutsApiOpts opts);\n \n+    /**\n+     * Register a Keyboard Shortcuts for a keypress event.\n+     * @param combination The combination of keys that trigger 'onKeyDown' action when they're pressed and 'onKeyUp' when they're released. This is shown on the Keyboard Shortcuts panel.\n+     * @param label The label for this Keyboard Shortcut. This is shown on the Keyboard Shortcuts panel.\n+     * @param onKeyDown The action to  be executed when 'combination' is pressed.\n+     * @param onKeyUp The action to  be executed when 'combination' is released.\n+     * @param opts Options of this registration.\n+     *\n+     * @return An id representing this registration. This id can be used to 'deregister' the Keyboard Shortcut.\n+     */\n     int registerKeyDownThenUp(String combination, String label, KeyboardShortcutsApi.Action onKeyDown, KeyboardShortcutsApi.Action onKeyUp, KeyboardShortcutsApiOpts opts);\n \n+    /**\n+     * Deregister a Keyboard Shortcut.\n+     *\n+     * @param id\n+     */\n     void deregister(int id);\n \n     @JsFunction\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NzkzMg==", "url": "https://github.com/kiegroup/appformer/pull/922#discussion_r428477932", "bodyText": "Isn't this rather warning/error than info? My thoughts were all channels in kogito should have an envelope. Have just some of them the envelope?\nOr is it that small subparts/panels/components of editor can have registered different shortcuts so it will be quite common that no envelope is present?", "author": "jomarko", "createdAt": "2020-05-21T06:53:23Z", "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsServiceProducer.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.keyboardshortcuts;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Produces;\n+\n+import elemental2.dom.DomGlobal;\n+import org.appformer.kogito.bridge.client.interop.WindowRef;\n+\n+/**\n+ * Produces {@link KeyboardShortcutsService} beans according to whether the envelope API is available or not\n+ */\n+public class KeyboardShortcutsServiceProducer {\n+\n+    @Produces\n+    @ApplicationScoped\n+    public KeyboardShortcutsApi produce() {\n+\n+        if (WindowRef.isEnvelopeAvailable()) {\n+            return new KeyboardShortcutsService();\n+        }\n+\n+        DomGlobal.console.info(\"[KeyboardShortcutsServiceProducer] Envelope API is not available. Producing NoOpKeyboardShortcutsService\");", "originalCommit": "5830d2f89947f685c07575d7fbe97f94c7d96e1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY2NDEwOA==", "url": "https://github.com/kiegroup/appformer/pull/922#discussion_r428664108", "bodyText": "Changed to 'debug'. The envelope is needed on all channels. This 'debug' message will be displayed on BC, since there's no envelope available there.", "author": "tiagobento", "createdAt": "2020-05-21T13:51:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NzkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "489cfdfa480861fa8ea2499dfe03ad75011f9230", "chunk": "diff --git a/appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsServiceProducer.java b/appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsServiceProducer.java\nindex 4773274a3..62eebb5a7 100644\n--- a/appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsServiceProducer.java\n+++ b/appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/keyboardshortcuts/KeyboardShortcutsServiceProducer.java\n\n@@ -35,7 +35,7 @@ public class KeyboardShortcutsServiceProducer {\n             return new KeyboardShortcutsService();\n         }\n \n-        DomGlobal.console.info(\"[KeyboardShortcutsServiceProducer] Envelope API is not available. Producing NoOpKeyboardShortcutsService\");\n+        DomGlobal.console.debug(\"[KeyboardShortcutsServiceProducer] Envelope API is not available. Producing NoOpKeyboardShortcutsService\");\n         return new NoOpKeyboardShortcutsService();\n     }\n }\n"}}, {"oid": "489cfdfa480861fa8ea2499dfe03ad75011f9230", "url": "https://github.com/kiegroup/appformer/commit/489cfdfa480861fa8ea2499dfe03ad75011f9230", "message": "PR changes", "committedDate": "2020-05-21T13:58:43Z", "type": "commit"}, {"oid": "1dba2f27ab7f384308706d0785856fe35072794d", "url": "https://github.com/kiegroup/appformer/commit/1dba2f27ab7f384308706d0785856fe35072794d", "message": "Merge remote-tracking branch 'origin/master' into keyboard-shortcuts-api", "committedDate": "2020-05-21T19:30:53Z", "type": "commit"}, {"oid": "84d045c3b754892d8588b800c809dfb0deb4473a", "url": "https://github.com/kiegroup/appformer/commit/84d045c3b754892d8588b800c809dfb0deb4473a", "message": "Updating Javadocs", "committedDate": "2020-05-25T16:46:02Z", "type": "commit"}, {"oid": "541dd89d8df7b9c23b8c82fdd32ea91829038c83", "url": "https://github.com/kiegroup/appformer/commit/541dd89d8df7b9c23b8c82fdd32ea91829038c83", "message": "Change EditorContextProvider to return an Optional operating system", "committedDate": "2020-05-26T17:33:20Z", "type": "commit"}, {"oid": "039fc0c046d91f4fa5b739e875a1ad69920f04b3", "url": "https://github.com/kiegroup/appformer/commit/039fc0c046d91f4fa5b739e875a1ad69920f04b3", "message": "Merge remote-tracking branch 'origin/master' into keyboard-shortcuts-api", "committedDate": "2020-05-27T14:41:12Z", "type": "commit"}]}