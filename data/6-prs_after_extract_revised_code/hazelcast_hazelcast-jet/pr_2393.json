{"pr_number": 2393, "pr_title": "Simplify PartitionArrangement", "pr_createdAt": "2020-07-08T14:58:29Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2393", "timeline": [{"oid": "83348d07dcc418e488326eb5c8ae2cea0e92d4f2", "url": "https://github.com/hazelcast/hazelcast-jet/commit/83348d07dcc418e488326eb5c8ae2cea0e92d4f2", "message": "Simplify PartitionArrangement", "committedDate": "2020-07-08T14:57:28Z", "type": "commit"}, {"oid": "e9e145e6e28fefd2c785e60bbbd487b34ebc6475", "url": "https://github.com/hazelcast/hazelcast-jet/commit/e9e145e6e28fefd2c785e60bbbd487b34ebc6475", "message": "Remove stale test", "committedDate": "2020-07-08T15:51:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzMTM5Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2393#discussion_r454931397", "bodyText": "are we removing this condition? if so, why?", "author": "cangencer", "createdAt": "2020-07-15T09:51:34Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/PartitionArrangement.java", "diffHunk": "@@ -35,62 +33,58 @@\n class PartitionArrangement {\n     /**\n      * Mapping from each remote member address to the partition IDs it owns.\n+     * Members without partitions are missing.\n      */\n-    final Supplier<Map<Address, int[]>> remotePartitionAssignment;\n-    private final Supplier<int[]> localPartitions;\n-    private final Supplier<int[]> allPartitions;\n+    private final Map<Address, int[]> remotePartitionAssignment;\n+\n+    /** An array of [0, 1, 2, ... partitionCount-1] */\n+    private final int[] allPartitions;\n+\n+    /** Array of local partitions */\n+    private final int[] localPartitions;\n \n     PartitionArrangement(Address[] partitionOwners, Address thisAddress) {\n-        localPartitions = memoize(() -> arrangeLocalPartitions(partitionOwners, thisAddress));\n-        allPartitions = memoize(() -> arrangeAllPartitions(partitionOwners, localPartitions.get()));\n-        remotePartitionAssignment = memoize(() -> remotePartitionAssignment(partitionOwners, thisAddress));\n+        localPartitions = IntStream.range(0, partitionOwners.length)\n+                .filter(partitionId -> thisAddress.equals(partitionOwners[partitionId]))\n+                .toArray();\n+\n+        allPartitions = IntStream.range(0, partitionOwners.length).toArray();\n+\n+        remotePartitionAssignment = IntStream.range(0, partitionOwners.length)\n+                .filter(partitionId -> !thisAddress.equals(partitionOwners[partitionId]))\n+                .boxed()\n+                .collect(groupingBy(partitionId -> partitionOwners[partitionId],\n+                        collectingAndThen(Collectors.toList(), l -> l.stream().mapToInt(i -> i).toArray())));\n+    }\n+\n+    Map<Address, int[]> getRemotePartitionAssignment() {\n+        return remotePartitionAssignment;\n     }\n \n     /**\n-     * Determines for each processor instance the partition IDs it will be in charge of\n-     * (processors are identified by their index). The method is called separately for\n-     * each edge. For a distributed edge, only partitions owned by the local member need\n-     * to be assigned; for a non-distributed edge, every partition ID must be assigned.\n-     * Local partitions will get the same assignments in both cases, and repeating the", "originalCommit": "e9e145e6e28fefd2c785e60bbbd487b34ebc6475", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwNTU4Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2393#discussion_r457405582", "bodyText": "Yes, this PR is removing it? I'd reverse the question: why would we keep it? It's not used, it's not documented and it's very rarely beneficial. So the reason is to simplify the code.", "author": "viliam-durina", "createdAt": "2020-07-20T13:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzMTM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3ODk4NA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2393#discussion_r458278984", "bodyText": "As discussed, currently we don't make use of this feature anywhere and it makes the code unnecessarily complex.", "author": "cangencer", "createdAt": "2020-07-21T17:46:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzMTM5Nw=="}], "type": "inlineReview", "revised_code": null}]}