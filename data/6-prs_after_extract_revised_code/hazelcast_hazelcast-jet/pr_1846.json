{"pr_number": 1846, "pr_title": "Fixed issue with the unzipping the nested directories.", "pr_createdAt": "2020-01-09T11:09:42Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/1846", "timeline": [{"oid": "7717f18f52561c02653ac570763241d2055e6ecd", "url": "https://github.com/hazelcast/hazelcast-jet/commit/7717f18f52561c02653ac570763241d2055e6ecd", "message": "Fixed issue with the unzipping the nested directories. The issue is related to the ZIP entries are not being correctly created for the directories which doesn't include a trailing slash so it leads to ZipEntry.isDirectory() calls to always return false.", "committedDate": "2020-01-09T11:06:46Z", "type": "commit"}, {"oid": "c1aaabdaab84987bc598d2dd075220ae6eb03604", "url": "https://github.com/hazelcast/hazelcast-jet/commit/c1aaabdaab84987bc598d2dd075220ae6eb03604", "message": "Replace File.seperator with slash character", "committedDate": "2020-01-09T11:17:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcyMDk5Mw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1846#discussion_r364720993", "bodyText": "IIUIC, git also doesn't store empty directories. If you had an empty directory in /nested, they aren't there when you check out from git.", "author": "viliam-durina", "createdAt": "2020-01-09T12:50:12Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl.util;\n+\n+import com.hazelcast.jet.core.JetTestSupport;\n+import com.hazelcast.jet.core.test.JetAssert;\n+import com.hazelcast.test.HazelcastParallelClassRunner;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static com.hazelcast.jet.impl.util.IOUtil.packDirectoryIntoZip;\n+import static com.hazelcast.jet.impl.util.IOUtil.unzip;\n+\n+@RunWith(HazelcastParallelClassRunner.class)\n+public class IOUtilTest extends JetTestSupport {\n+\n+    @Rule\n+    public TemporaryFolder temporaryFolder = new TemporaryFolder();\n+\n+    @Test\n+    public void test_zipAndUnzipNestedFolder_then_contentsShouldBeSame() throws Exception {\n+        //Given\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream(1000);\n+\n+        //When\n+        Path originalPath = Paths.get(this.getClass().getResource(\"/nested\").toURI());", "originalCommit": "c1aaabdaab84987bc598d2dd075220ae6eb03604", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcyODA3OQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1846#discussion_r364728079", "bodyText": "Nope, there wasn't an empty directory under /nested folder", "author": "eminn", "createdAt": "2020-01-09T13:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcyMDk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDczODg4NQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1846#discussion_r364738885", "bodyText": "We should test empty directories though", "author": "viliam-durina", "createdAt": "2020-01-09T13:32:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcyMDk5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ba027c91322ff962a20dc7168a75a186ded326f5", "chunk": "diff --git a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java\nindex 7de54c54a0..189a790d0e 100644\n--- a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java\n+++ b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java\n\n@@ -44,13 +44,24 @@ public class IOUtilTest extends JetTestSupport {\n \n     @Test\n     public void test_zipAndUnzipNestedFolder_then_contentsShouldBeSame() throws Exception {\n+        Path originalPath = Paths.get(this.getClass().getResource(\"/nested\").toURI());\n+        test(originalPath);\n+    }\n+\n+    @Test\n+    public void test_zipAndUnzipNestedFoldersWithAnEmptySubFolder_then_contentsShouldBeSame() throws Exception {\n+        Path originalPath = Paths.get(this.getClass().getResource(\"/nested\").toURI());\n+        Files.createDirectory(originalPath.resolve(randomName())).toFile().deleteOnExit();\n+        test(originalPath);\n+    }\n+\n+    public void test(Path originalPath) throws IOException {\n         //Given\n         ByteArrayOutputStream baos = new ByteArrayOutputStream(1000);\n \n         //When\n-        Path originalPath = Paths.get(this.getClass().getResource(\"/nested\").toURI());\n-        Path unzippedPath = temporaryFolder.newFolder().toPath();\n         packDirectoryIntoZip(originalPath, baos);\n+        Path unzippedPath = temporaryFolder.newFolder().toPath();\n         unzip(new ByteArrayInputStream(baos.toByteArray()), unzippedPath);\n \n         //Then\n"}}, {"oid": "ba027c91322ff962a20dc7168a75a186ded326f5", "url": "https://github.com/hazelcast/hazelcast-jet/commit/ba027c91322ff962a20dc7168a75a186ded326f5", "message": "Added empty directory test", "committedDate": "2020-01-09T14:41:01Z", "type": "commit"}]}