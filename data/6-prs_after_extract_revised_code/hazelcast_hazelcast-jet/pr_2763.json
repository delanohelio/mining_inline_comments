{"pr_number": 2763, "pr_title": "Add sql SHOW MAPPINGS/JOBS stmt", "pr_createdAt": "2020-12-28T13:41:44Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2763", "timeline": [{"oid": "a4be981ef04709c7a54fb32c3e6b8e449d8624a3", "url": "https://github.com/hazelcast/hazelcast-jet/commit/a4be981ef04709c7a54fb32c3e6b8e449d8624a3", "message": "Add sql SHOW MAPPINGS/JOBS stmt\n\nThe SHOW JOBS command shows all active jobs.\n\nThe SHOW MAPPINGS command is equivalent to `SELECT mapping_name as name\nFROM information_schema.mappings`.\n\nFixes #2731", "committedDate": "2020-12-28T14:49:40Z", "type": "forcePushed"}, {"oid": "df0b42e09ef945fb93ddabde81e540efcaf2188c", "url": "https://github.com/hazelcast/hazelcast-jet/commit/df0b42e09ef945fb93ddabde81e540efcaf2188c", "message": "Add sql SHOW MAPPINGS/JOBS stmt\n\nThe SHOW JOBS command shows all active jobs.\n\nThe SHOW MAPPINGS command is equivalent to `SELECT mapping_name as name\nFROM information_schema.mappings`.\n\nFixes #2731", "committedDate": "2020-12-29T10:43:42Z", "type": "commit"}, {"oid": "df0b42e09ef945fb93ddabde81e540efcaf2188c", "url": "https://github.com/hazelcast/hazelcast-jet/commit/df0b42e09ef945fb93ddabde81e540efcaf2188c", "message": "Add sql SHOW MAPPINGS/JOBS stmt\n\nThe SHOW JOBS command shows all active jobs.\n\nThe SHOW MAPPINGS command is equivalent to `SELECT mapping_name as name\nFROM information_schema.mappings`.\n\nFixes #2731", "committedDate": "2020-12-29T10:43:42Z", "type": "forcePushed"}, {"oid": "d95ddf3aec7c41bbc6e683d02c932b5182148c41", "url": "https://github.com/hazelcast/hazelcast-jet/commit/d95ddf3aec7c41bbc6e683d02c932b5182148c41", "message": "Tweaks", "committedDate": "2021-01-07T08:22:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE2OTMxMw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2763#discussion_r553169313", "bodyText": "What about instead of this class create static QueryResultProducer and reuse JetSqlResultImpl?", "author": "gierlachg", "createdAt": "2021-01-07T08:13:40Z", "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/JetStaticSqlResultImpl.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.sql.impl;\n+\n+import com.hazelcast.sql.SqlRow;\n+import com.hazelcast.sql.SqlRowMetadata;\n+import com.hazelcast.sql.impl.AbstractSqlResult;\n+import com.hazelcast.sql.impl.QueryException;\n+import com.hazelcast.sql.impl.QueryId;\n+import com.hazelcast.sql.impl.ResultIterator;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+public class JetStaticSqlResultImpl extends AbstractSqlResult {", "originalCommit": "df0b42e09ef945fb93ddabde81e540efcaf2188c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1c9b90139ddd634a2595644d72b17728fd390dfa", "chunk": "diff --git a/hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/JetStaticSqlResultImpl.java b/hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/JetStaticSqlResultImpl.java\ndeleted file mode 100644\nindex d0b51e4ee7..0000000000\n--- a/hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/JetStaticSqlResultImpl.java\n+++ /dev/null\n\n@@ -1,100 +0,0 @@\n-/*\n- * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.hazelcast.jet.sql.impl;\n-\n-import com.hazelcast.sql.SqlRow;\n-import com.hazelcast.sql.SqlRowMetadata;\n-import com.hazelcast.sql.impl.AbstractSqlResult;\n-import com.hazelcast.sql.impl.QueryException;\n-import com.hazelcast.sql.impl.QueryId;\n-import com.hazelcast.sql.impl.ResultIterator;\n-\n-import javax.annotation.Nonnull;\n-import javax.annotation.Nullable;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.concurrent.TimeUnit;\n-\n-public class JetStaticSqlResultImpl extends AbstractSqlResult {\n-\n-    private final QueryId queryId;\n-    private final List<SqlRow> rows;\n-    private final SqlRowMetadata rowMetadata;\n-\n-    private ResultIterator<SqlRow> iterator;\n-\n-    public JetStaticSqlResultImpl(QueryId queryId, List<SqlRow> rows, SqlRowMetadata rowMetadata) {\n-        this.queryId = queryId;\n-        this.rows = rows;\n-        this.rowMetadata = rowMetadata;\n-    }\n-\n-    @Override\n-    public QueryId getQueryId() {\n-        return queryId;\n-    }\n-\n-    @Nonnull\n-    @Override\n-    public SqlRowMetadata getRowMetadata() {\n-        return rowMetadata;\n-    }\n-\n-    @Nonnull\n-    @Override\n-    public ResultIterator<SqlRow> iterator() {\n-        if (iterator == null) {\n-            iterator = new ResultIteratorFromIterator<>(rows.iterator());\n-\n-            return iterator;\n-        } else {\n-            throw new IllegalStateException(\"Iterator can be requested only once.\");\n-        }\n-    }\n-\n-    @Override\n-    public long updateCount() {\n-        throw new IllegalStateException(\"This result doesn't contain update count\");\n-    }\n-\n-    @Override\n-    public void close(@Nullable QueryException exception) {\n-    }\n-\n-    private static class ResultIteratorFromIterator<T> implements ResultIterator<T> {\n-        private final Iterator<T> delegate;\n-\n-        ResultIteratorFromIterator(Iterator<T> delegate) {\n-            this.delegate = delegate;\n-        }\n-\n-        @Override\n-        public HasNextResult hasNext(long timeout, TimeUnit timeUnit) {\n-            return hasNext() ? HasNextResult.YES : HasNextResult.DONE;\n-        }\n-\n-        @Override\n-        public boolean hasNext() {\n-            return delegate.hasNext();\n-        }\n-\n-        @Override\n-        public T next() {\n-            return delegate.next();\n-        }\n-    }\n-}\n"}}, {"oid": "07928ab94d6e93d0a815e95a8b64e89c780b22f7", "url": "https://github.com/hazelcast/hazelcast-jet/commit/07928ab94d6e93d0a815e95a8b64e89c780b22f7", "message": "Fix operator name", "committedDate": "2021-01-08T08:18:14Z", "type": "commit"}, {"oid": "cd1a09601f82fdd7badc2bd688b491737eeb6309", "url": "https://github.com/hazelcast/hazelcast-jet/commit/cd1a09601f82fdd7badc2bd688b491737eeb6309", "message": "Merge remote-tracking branch 'remotes/hazelcast/master' into sql-show", "committedDate": "2021-01-08T08:18:53Z", "type": "commit"}, {"oid": "1c9b90139ddd634a2595644d72b17728fd390dfa", "url": "https://github.com/hazelcast/hazelcast-jet/commit/1c9b90139ddd634a2595644d72b17728fd390dfa", "message": "Add JetStaticQueryResultProducer", "committedDate": "2021-01-08T09:38:04Z", "type": "commit"}, {"oid": "1141ddb89c039169dce5f411e2e85d496a979e63", "url": "https://github.com/hazelcast/hazelcast-jet/commit/1141ddb89c039169dce5f411e2e85d496a979e63", "message": "Tweaks", "committedDate": "2021-01-08T09:50:40Z", "type": "commit"}]}