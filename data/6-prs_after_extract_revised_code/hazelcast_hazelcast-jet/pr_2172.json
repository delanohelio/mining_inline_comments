{"pr_number": 2172, "pr_title": "Attempt to fix Observable tests", "pr_createdAt": "2020-04-15T10:31:56Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2172", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NjMwNQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#discussion_r409356305", "bodyText": "caps is only used for static final variables (i.e. constants?)", "author": "cangencer", "createdAt": "2020-04-16T07:57:49Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/TestInClusterSupport.java", "diffHunk": "@@ -51,7 +51,7 @@\n     protected static final String JOURNALED_CACHE_PREFIX = \"journaledCache.\";\n     protected static final int MEMBER_COUNT = 2;\n \n-    protected static JetTestInstanceFactory factory = new JetTestInstanceFactory();\n+    protected static JetTestInstanceFactory FACTORY = new JetTestInstanceFactory();", "originalCommit": "b90925ba714ad79ec7899e3034183bda0b40f9d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2NTU5OQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#discussion_r409365599", "bodyText": "Ok, will revert. Truth to be told I've not come across that many non-final static fields in the past and I've never stopped to consciously make this distinction.", "author": "jbartok", "createdAt": "2020-04-16T08:13:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NjMwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "6c11dbd141586e50bc4e2c77a69f67097104e4fb", "chunk": "diff --git a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/TestInClusterSupport.java b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/TestInClusterSupport.java\nindex 0a683914f..65022d246 100644\n--- a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/TestInClusterSupport.java\n+++ b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/TestInClusterSupport.java\n\n@@ -51,7 +51,7 @@ public abstract class TestInClusterSupport extends JetTestSupport {\n     protected static final String JOURNALED_CACHE_PREFIX = \"journaledCache.\";\n     protected static final int MEMBER_COUNT = 2;\n \n-    protected static JetTestInstanceFactory FACTORY = new JetTestInstanceFactory();\n+    protected static JetTestInstanceFactory factory = new JetTestInstanceFactory();\n     private static JetInstance[] allJetInstances;\n \n     protected static JetInstance member;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1Njg5Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#discussion_r409356892", "bodyText": "method should have @Override if it's overriding, or you can just use another method name", "author": "cangencer", "createdAt": "2020-04-16T07:58:50Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ObservableResultsTest.java", "diffHunk": "@@ -63,20 +63,19 @@\n     private TestObserver testObserver;\n     private Observable<Long> testObservable;\n     private UUID registrationId;\n-    private Set<Observable<?>> usedObservables;\n \n     @Before\n     public void before() {\n-        usedObservables = new HashSet<>();\n         observableName = randomName();\n         testObserver = new TestObserver();\n-        testObservable = getObservable(observableName);\n+        testObservable = jet().getObservable(observableName);\n         registrationId = testObservable.addObserver(testObserver);\n     }\n \n     @After\n-    public void after() {\n-        usedObservables.forEach(Observable::destroy);\n+    public void after() throws Exception {", "originalCommit": "b90925ba714ad79ec7899e3034183bda0b40f9d7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a21bb5f571ab3e328dc76b5185355c9e80ec0d50", "chunk": "diff --git a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ObservableResultsTest.java b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ObservableResultsTest.java\nindex b1093d95e..192d59e3c 100644\n--- a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ObservableResultsTest.java\n+++ b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ObservableResultsTest.java\n\n@@ -63,19 +63,20 @@ public class ObservableResultsTest extends TestInClusterSupport {\n     private TestObserver testObserver;\n     private Observable<Long> testObservable;\n     private UUID registrationId;\n+    private Set<Observable<?>> usedObservables;\n \n     @Before\n     public void before() {\n+        usedObservables = new HashSet<>();\n         observableName = randomName();\n         testObserver = new TestObserver();\n-        testObservable = jet().getObservable(observableName);\n+        testObservable = getObservable(observableName);\n         registrationId = testObservable.addObserver(testObserver);\n     }\n \n     @After\n-    public void after() throws Exception {\n-        jet().getObservables().forEach(Observable::destroy);\n-        super.after();\n+    public void after() {\n+        usedObservables.forEach(Observable::destroy);\n     }\n \n     @Test\n"}}, {"oid": "a21bb5f571ab3e328dc76b5185355c9e80ec0d50", "url": "https://github.com/hazelcast/hazelcast-jet/commit/a21bb5f571ab3e328dc76b5185355c9e80ec0d50", "message": "Name static factory properly", "committedDate": "2020-04-16T08:14:58Z", "type": "commit"}, {"oid": "fcf7ae9eb047bacfb64a065207c4b226769a1bf6", "url": "https://github.com/hazelcast/hazelcast-jet/commit/fcf7ae9eb047bacfb64a065207c4b226769a1bf6", "message": "Fix clean-up issues & improve test", "committedDate": "2020-04-16T08:14:59Z", "type": "commit"}, {"oid": "6c11dbd141586e50bc4e2c77a69f67097104e4fb", "url": "https://github.com/hazelcast/hazelcast-jet/commit/6c11dbd141586e50bc4e2c77a69f67097104e4fb", "message": "Revert \"Name static factory properly\"\n\nThis reverts commit a21bb5f5", "committedDate": "2020-04-16T08:16:53Z", "type": "commit"}, {"oid": "8431d3becbfdbcc799208eaca3c21f55ee4a25d6", "url": "https://github.com/hazelcast/hazelcast-jet/commit/8431d3becbfdbcc799208eaca3c21f55ee4a25d6", "message": "Add @Override annotation", "committedDate": "2020-04-16T08:19:07Z", "type": "commit"}, {"oid": "8431d3becbfdbcc799208eaca3c21f55ee4a25d6", "url": "https://github.com/hazelcast/hazelcast-jet/commit/8431d3becbfdbcc799208eaca3c21f55ee4a25d6", "message": "Add @Override annotation", "committedDate": "2020-04-16T08:19:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUxMTQwMw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#discussion_r409511403", "bodyText": "We can do this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertFalse(activeObservables.contains(b.name()));\n          \n          \n            \n                    assertEquals(new HashSet<>(Arrays.asList(a.name(), c.name())), activeObservables);\n          \n      \n    \n    \n  \n\nThis way we'll see in the exception message what's the difference.", "author": "viliam-durina", "createdAt": "2020-04-16T12:20:57Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ObservableResultsTest.java", "diffHunk": "@@ -553,15 +553,19 @@ public void unnamedObservable() {\n     }\n \n     @Test\n-    public void getObservables() {\n+    public void onlyObservedObservablesGetActivated() {\n         //when\n-        getObservable(\"a\").addObserver(Observer.of(ConsumerEx.noop()));\n-        getObservable(\"b\");\n-        getObservable(\"c\").addObserver(Observer.of(ConsumerEx.noop()));\n+        Observable<Object> a = jet().newObservable();\n+        Observable<Object> b = jet().newObservable();\n+        Observable<Object> c = jet().newObservable();\n+\n+        a.addObserver(Observer.of(ConsumerEx.noop()));\n+        c.addObserver(Observer.of(ConsumerEx.noop()));\n \n         //then\n         Set<String> activeObservables = jet().getObservables().stream().map(Observable::name).collect(Collectors.toSet());\n-        assertTrue(activeObservables.containsAll(Arrays.asList(\"a\", \"c\")));\n+        assertTrue(activeObservables.containsAll(Arrays.asList(a.name(), c.name())));\n+        assertFalse(activeObservables.contains(b.name()));", "originalCommit": "8431d3becbfdbcc799208eaca3c21f55ee4a25d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUzMDMyNw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#discussion_r409530327", "bodyText": "Not really, because they are not equal (there are other, extra names in there too). Plus it wouldn't really help. All it would tell us is if a or c is missing, but that wouldn't help. Anyways, I'll investigate further if it happens again.", "author": "jbartok", "createdAt": "2020-04-16T12:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUxMTQwMw=="}], "type": "inlineReview", "revised_code": null}]}