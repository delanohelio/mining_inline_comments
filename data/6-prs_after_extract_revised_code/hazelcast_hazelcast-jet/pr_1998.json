{"pr_number": 1998, "pr_title": "Handle non-serializable exceptions in AsyncOperation", "pr_createdAt": "2020-02-20T09:01:34Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/1998", "timeline": [{"oid": "44ae6a1d0bf2ea5d39efc509a64993c1f1709a41", "url": "https://github.com/hazelcast/hazelcast-jet/commit/44ae6a1d0bf2ea5d39efc509a64993c1f1709a41", "message": "Handle non-serializable exceptions in AsyncOperation\n\nSometimes the processors may fail with a non-serializable exception.\nConvert the exception to a String and fail with a generic exception in\nthis case.", "committedDate": "2020-02-20T09:21:31Z", "type": "forcePushed"}, {"oid": "bc0ac02c899822182d7c1194d0aad5ea5d2aa42d", "url": "https://github.com/hazelcast/hazelcast-jet/commit/bc0ac02c899822182d7c1194d0aad5ea5d2aa42d", "message": "Handle non-serializable exceptions in AsyncOperation\n\nSometimes the processors may fail with a non-serializable exception.\nConvert the exception to a String and fail with a generic exception in\nthis case.", "committedDate": "2020-02-20T10:21:03Z", "type": "forcePushed"}, {"oid": "bc0ac02c899822182d7c1194d0aad5ea5d2aa42d", "url": "https://github.com/hazelcast/hazelcast-jet/commit/bc0ac02c899822182d7c1194d0aad5ea5d2aa42d", "message": "Handle non-serializable exceptions in AsyncOperation\n\nSometimes the processors may fail with a non-serializable exception.\nConvert the exception to a String and fail with a generic exception in\nthis case.", "committedDate": "2020-02-20T10:21:03Z", "type": "commit"}, {"oid": "d0617a5218280d67bd0830efa6a3887dd37f26f0", "url": "https://github.com/hazelcast/hazelcast-jet/commit/d0617a5218280d67bd0830efa6a3887dd37f26f0", "message": "handle Status & StatusRuntimeException explicitly", "committedDate": "2020-02-20T12:44:36Z", "type": "commit"}, {"oid": "088012553b84963dd8994c89b260b056af5f226d", "url": "https://github.com/hazelcast/hazelcast-jet/commit/088012553b84963dd8994c89b260b056af5f226d", "message": "Add test for Exception in Python code", "committedDate": "2020-02-20T13:24:51Z", "type": "commit"}, {"oid": "ed5b754a20a88b3df949886147c1a96d828f8440", "url": "https://github.com/hazelcast/hazelcast-jet/commit/ed5b754a20a88b3df949886147c1a96d828f8440", "message": "Merge pull request #2 from olukas/response-exc-handling\n\nAdd test for Exception in Python code", "committedDate": "2020-02-20T13:29:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTUyMw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1998#discussion_r382059523", "bodyText": "Bad indentation", "author": "viliam-durina", "createdAt": "2020-02-20T15:08:56Z", "path": "extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java", "diffHunk": "@@ -49,7 +49,12 @@\n     private static final int ITEM_COUNT = 10_000;\n     private static final String ECHO_HANDLER_FUNCTION =\n             \"def handle(input_list):\\n\" +\n-            \"    return ['echo-%s' % i for i in input_list]\\n\";\n+ \"    return ['echo-%s' % i for i in input_list]\\n\";", "originalCommit": "ed5b754a20a88b3df949886147c1a96d828f8440", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "638af7314d10c4379b855caa93448b18d9517ddc", "chunk": "diff --git a/extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java b/extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java\nindex 82c042dea..3eb11ef48 100644\n--- a/extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java\n+++ b/extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java\n\n@@ -49,12 +49,11 @@ public class PythonServiceTest extends SimpleTestInClusterSupport {\n     private static final int ITEM_COUNT = 10_000;\n     private static final String ECHO_HANDLER_FUNCTION =\n             \"def handle(input_list):\\n\" +\n- \"    return ['echo-%s' % i for i in input_list]\\n\";\n+            \"    return ['echo-%s' % i for i in input_list]\\n\";\n \n     private static final String FAILING_FUNCTION\n             = \"def handle(input_list):\\n\"\n-            + \"    assert 1 == 2\\n\"\n-            + \"    return ['echo-%s' % i for i in input_list]\\n\";\n+            + \"    assert 1 == 2\\n\";\n \n     private File baseDir;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTYyOQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1998#discussion_r382059629", "bodyText": "serializable", "author": "viliam-durina", "createdAt": "2020-02-20T15:09:07Z", "path": "extensions/python/src/main/java/com/hazelcast/jet/python/PythonService.java", "diffHunk": "@@ -128,6 +131,11 @@ public void onNext(OutputMessage outputItem) {\n         @Override\n         public void onError(Throwable e) {\n             try {\n+                if (e instanceof StatusException || e instanceof StatusRuntimeException) {\n+                    // not seriazliable exceptions", "originalCommit": "ed5b754a20a88b3df949886147c1a96d828f8440", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "638af7314d10c4379b855caa93448b18d9517ddc", "chunk": "diff --git a/extensions/python/src/main/java/com/hazelcast/jet/python/PythonService.java b/extensions/python/src/main/java/com/hazelcast/jet/python/PythonService.java\nindex 0f52e85a4..bff4ad62a 100644\n--- a/extensions/python/src/main/java/com/hazelcast/jet/python/PythonService.java\n+++ b/extensions/python/src/main/java/com/hazelcast/jet/python/PythonService.java\n\n@@ -132,7 +132,7 @@ final class PythonService {\n         public void onError(Throwable e) {\n             try {\n                 if (e instanceof StatusException || e instanceof StatusRuntimeException) {\n-                    // not seriazliable exceptions\n+                    // not serializable exceptions\n                     e = new JetException(ExceptionUtil.stackTraceToString(e));\n                 }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MjY0NQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1998#discussion_r382062645", "bodyText": "I would expand this comment, something like:\n\nSometimes exceptions are not serializable. For example #1995. When sending exception as a response and the serialization fails, the response will not be sent and the operation will hang. If it happened, replace it with another exception that can be serialized.", "author": "viliam-durina", "createdAt": "2020-02-20T15:13:26Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncOperation.java", "diffHunk": "@@ -73,7 +76,17 @@ private void doSendResponse(Object value) {\n             final JetService service = getService();\n             service.getLiveOperationRegistry().deregister(this);\n         } finally {\n-            sendResponse(value);\n+            try {\n+                sendResponse(value);\n+            } catch (Exception e) {\n+                Throwable ex = peel(e);\n+                if (value instanceof Throwable && ex instanceof HazelcastSerializationException) {\n+                    // we got a non-serializable exception here", "originalCommit": "ed5b754a20a88b3df949886147c1a96d828f8440", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "638af7314d10c4379b855caa93448b18d9517ddc", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncOperation.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncOperation.java\nindex 94afd9451..bdc0793c0 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncOperation.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncOperation.java\n\n@@ -81,7 +81,12 @@ public abstract class AsyncOperation extends Operation implements IdentifiedData\n             } catch (Exception e) {\n                 Throwable ex = peel(e);\n                 if (value instanceof Throwable && ex instanceof HazelcastSerializationException) {\n-                    // we got a non-serializable exception here\n+                    // Sometimes exceptions are not serializable, for example on\n+                    // https://github.com/hazelcast/hazelcast-jet/issues/1995.\n+                    // When sending exception as a response and the serialization fails,\n+                    // the response will not be sent and the operation will hang.\n+                    // To prevent this from happening, replace the exception with\n+                    // another exception that can be serialized.\n                     sendResponse(new JetException(stackTraceToString(ex)));\n                 } else {\n                     throw e;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MzUxOA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1998#discussion_r382063518", "bodyText": "This line probably isn't necessary. Also can't assertions be turned off as in java?", "author": "viliam-durina", "createdAt": "2020-02-20T15:14:36Z", "path": "extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java", "diffHunk": "@@ -49,7 +49,12 @@\n     private static final int ITEM_COUNT = 10_000;\n     private static final String ECHO_HANDLER_FUNCTION =\n             \"def handle(input_list):\\n\" +\n-            \"    return ['echo-%s' % i for i in input_list]\\n\";\n+ \"    return ['echo-%s' % i for i in input_list]\\n\";\n+\n+    private static final String FAILING_FUNCTION\n+            = \"def handle(input_list):\\n\"\n+            + \"    assert 1 == 2\\n\"\n+            + \"    return ['echo-%s' % i for i in input_list]\\n\";", "originalCommit": "ed5b754a20a88b3df949886147c1a96d828f8440", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "638af7314d10c4379b855caa93448b18d9517ddc", "chunk": "diff --git a/extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java b/extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java\nindex 82c042dea..3eb11ef48 100644\n--- a/extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java\n+++ b/extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java\n\n@@ -49,12 +49,11 @@ public class PythonServiceTest extends SimpleTestInClusterSupport {\n     private static final int ITEM_COUNT = 10_000;\n     private static final String ECHO_HANDLER_FUNCTION =\n             \"def handle(input_list):\\n\" +\n- \"    return ['echo-%s' % i for i in input_list]\\n\";\n+            \"    return ['echo-%s' % i for i in input_list]\\n\";\n \n     private static final String FAILING_FUNCTION\n             = \"def handle(input_list):\\n\"\n-            + \"    assert 1 == 2\\n\"\n-            + \"    return ['echo-%s' % i for i in input_list]\\n\";\n+            + \"    assert 1 == 2\\n\";\n \n     private File baseDir;\n \n"}}, {"oid": "638af7314d10c4379b855caa93448b18d9517ddc", "url": "https://github.com/hazelcast/hazelcast-jet/commit/638af7314d10c4379b855caa93448b18d9517ddc", "message": "address review", "committedDate": "2020-02-20T16:44:34Z", "type": "commit"}]}