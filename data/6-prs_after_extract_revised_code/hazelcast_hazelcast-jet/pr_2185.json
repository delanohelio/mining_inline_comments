{"pr_number": 2185, "pr_title": "UnaryService for gRPC doesn't need `volatile` on StreamObserver", "pr_createdAt": "2020-04-16T18:29:39Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2185", "timeline": [{"oid": "6b4e34b77eb813da20c52dcd1dab549a4347e5c8", "url": "https://github.com/hazelcast/hazelcast-jet/commit/6b4e34b77eb813da20c52dcd1dab549a4347e5c8", "message": "UnaryService for gRPC doesn't need `volatile` on StreamObserver\n\nsee also: https://github.com/grpc/grpc-java/issues/6929", "committedDate": "2020-04-16T18:27:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAzNDE4NQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2185#discussion_r410034185", "bodyText": "This would be user error, so let's raise this to a hard check.", "author": "mtopolnik", "createdAt": "2020-04-17T07:12:35Z", "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/impl/UnaryService.java", "diffHunk": "@@ -49,14 +49,15 @@ public void destroy() {\n     private static class Observer<R> implements StreamObserver<R> {\n         private final CompletableFuture<R> future;\n \n-        private volatile R value ;\n+        private R value ;\n \n         Observer() {\n             this.future = new CompletableFuture<>();\n         }\n \n         @Override\n         public void onNext(R value) {\n+            assert this.value == null : \"value should not be assigned twice in unary mode\";", "originalCommit": "6b4e34b77eb813da20c52dcd1dab549a4347e5c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDEwNjQ1OA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2185#discussion_r410106458", "bodyText": "grpc doesn't allow this, and throws exception. The only case would be if this observer was used for a non-unary service, whcih I think the signature wouldn't allow.", "author": "cangencer", "createdAt": "2020-04-17T09:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAzNDE4NQ=="}], "type": "inlineReview", "revised_code": null}]}