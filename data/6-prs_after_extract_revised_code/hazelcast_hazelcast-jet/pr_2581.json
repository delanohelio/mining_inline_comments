{"pr_number": 2581, "pr_title": "Improve safety of working with job suspension cause programmatically", "pr_createdAt": "2020-10-02T08:01:43Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2581", "timeline": [{"oid": "29f7b4952e8010336901fd163acf05369778de11", "url": "https://github.com/hazelcast/hazelcast-jet/commit/29f7b4952e8010336901fd163acf05369778de11", "message": "Improve safety of working with job suspension cause programmatically", "committedDate": "2020-10-02T07:55:02Z", "type": "commit"}, {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "url": "https://github.com/hazelcast/hazelcast-jet/commit/eabe58573bd9bcc611a1e74d682f4d6daf255bda", "message": "Add @since annotation", "committedDate": "2020-10-02T08:00:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMTkyNA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498721924", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * lead to the suspension of the job. Throws an {@code IllegalStateException}\n          \n          \n            \n                 * led to the suspension of the job. Throws an {@code IllegalStateException}", "author": "viliam-durina", "createdAt": "2020-10-02T09:44:56Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "diffHunk": "@@ -86,21 +87,15 @@ default String getName() {\n     JobStatus getStatus();\n \n     /**\n-     * Return a human-readable description of the cause that led to the\n-     * suspension of this job. For example whether the suspension has been\n-     * explicitly requested by the user or an error has occurred and the job is\n-     * configured to be suspended in such a case (see {@link\n-     * JobConfig#setSuspendOnFailure(boolean)}) - in this case the details of\n-     * the error are also provided.\n-     *\n-     * @return cause that led to the job suspension\n-     * @throws IllegalStateException if the job is not suspended\n+     * Return a {@link JobSuspensionCause description of the cause} that has\n+     * lead to the suspension of the job. Throws an {@code IllegalStateException}", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java\nindex e514e13f5..d323f03b8 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java\n\n@@ -88,12 +87,11 @@ public interface Job {\n \n     /**\n      * Return a {@link JobSuspensionCause description of the cause} that has\n-     * lead to the suspension of the job. Throws an {@code IllegalStateException}\n-     * if the job is not actually suspended.\n+     * led to the suspension of the job. Throws an {@code IllegalStateException}\n+     * if the job is not currently suspended.\n      *\n      * @since 4.3\n      */\n-    @EvolvingApi\n     @Nonnull\n     JobSuspensionCause getSuspensionCause();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjEzOA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498722138", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * if the job is not actually suspended.\n          \n          \n            \n                 * if the job is not currently suspended.", "author": "viliam-durina", "createdAt": "2020-10-02T09:45:15Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "diffHunk": "@@ -86,21 +87,15 @@ default String getName() {\n     JobStatus getStatus();\n \n     /**\n-     * Return a human-readable description of the cause that led to the\n-     * suspension of this job. For example whether the suspension has been\n-     * explicitly requested by the user or an error has occurred and the job is\n-     * configured to be suspended in such a case (see {@link\n-     * JobConfig#setSuspendOnFailure(boolean)}) - in this case the details of\n-     * the error are also provided.\n-     *\n-     * @return cause that led to the job suspension\n-     * @throws IllegalStateException if the job is not suspended\n+     * Return a {@link JobSuspensionCause description of the cause} that has\n+     * lead to the suspension of the job. Throws an {@code IllegalStateException}\n+     * if the job is not actually suspended.", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java\nindex e514e13f5..d323f03b8 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java\n\n@@ -88,12 +87,11 @@ public interface Job {\n \n     /**\n      * Return a {@link JobSuspensionCause description of the cause} that has\n-     * lead to the suspension of the job. Throws an {@code IllegalStateException}\n-     * if the job is not actually suspended.\n+     * led to the suspension of the job. Throws an {@code IllegalStateException}\n+     * if the job is not currently suspended.\n      *\n      * @since 4.3\n      */\n-    @EvolvingApi\n     @Nonnull\n     JobSuspensionCause getSuspensionCause();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjI2Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498722267", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Description of the cause that has lead to the job being suspended.\n          \n          \n            \n             * Description of the cause that has led to the job being suspended.", "author": "viliam-durina", "createdAt": "2020-10-02T09:45:30Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\nindex f1948e007..1644d88ee 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n\n@@ -18,10 +18,10 @@ package com.hazelcast.jet.core;\n \n import com.hazelcast.jet.config.JobConfig;\n \n-import javax.annotation.Nullable;\n+import javax.annotation.Nonnull;\n \n /**\n- * Description of the cause that has lead to the job being suspended.\n+ * Description of the cause that has led to the job being suspended.\n  * <p>\n  * One reason for the job to be suspended is the user explicitly requesting it.\n  * Another reason is encountering an error during execution, while being\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjY5Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498722696", "bodyText": "Shall we remove this?", "author": "viliam-durina", "createdAt": "2020-10-02T09:46:25Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "diffHunk": "@@ -86,21 +87,15 @@ default String getName() {\n     JobStatus getStatus();\n \n     /**\n-     * Return a human-readable description of the cause that led to the\n-     * suspension of this job. For example whether the suspension has been\n-     * explicitly requested by the user or an error has occurred and the job is\n-     * configured to be suspended in such a case (see {@link\n-     * JobConfig#setSuspendOnFailure(boolean)}) - in this case the details of\n-     * the error are also provided.\n-     *\n-     * @return cause that led to the job suspension\n-     * @throws IllegalStateException if the job is not suspended\n+     * Return a {@link JobSuspensionCause description of the cause} that has\n+     * lead to the suspension of the job. Throws an {@code IllegalStateException}\n+     * if the job is not actually suspended.\n      *\n      * @since 4.3\n      */\n     @EvolvingApi", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java\nindex e514e13f5..d323f03b8 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java\n\n@@ -88,12 +87,11 @@ public interface Job {\n \n     /**\n      * Return a {@link JobSuspensionCause description of the cause} that has\n-     * lead to the suspension of the job. Throws an {@code IllegalStateException}\n-     * if the job is not actually suspended.\n+     * led to the suspension of the job. Throws an {@code IllegalStateException}\n+     * if the job is not currently suspended.\n      *\n      * @since 4.3\n      */\n-    @EvolvingApi\n     @Nonnull\n     JobSuspensionCause getSuspensionCause();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMzk3Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498723977", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Provides the error that has lead to the suspension of the job, or returns\n          \n          \n            \n                 * Provides the error that has led to the suspension of the job, or returns", "author": "viliam-durina", "createdAt": "2020-10-02T09:49:01Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Provides the error that has lead to the suspension of the job, or returns", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\nindex f1948e007..1644d88ee 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n\n@@ -18,10 +18,10 @@ package com.hazelcast.jet.core;\n \n import com.hazelcast.jet.config.JobConfig;\n \n-import javax.annotation.Nullable;\n+import javax.annotation.Nonnull;\n \n /**\n- * Description of the cause that has lead to the job being suspended.\n+ * Description of the cause that has led to the job being suspended.\n  * <p>\n  * One reason for the job to be suspended is the user explicitly requesting it.\n  * Another reason is encountering an error during execution, while being\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNDE2NA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498724164", "bodyText": "Does it return null if requested by user? It's not clear to me and seems wrong.", "author": "viliam-durina", "createdAt": "2020-10-02T09:49:24Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Provides the error that has lead to the suspension of the job, or returns\n+     * null if the cause of the suspension is different.", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3OTE5Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499379197", "bodyText": "Yes. Should it throw an exception instead?", "author": "jbartok", "createdAt": "2020-10-05T06:59:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNDE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5Mzg1Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499493852", "bodyText": "Two options:\n\nthrow a reconstructed exc in the same way as Job.join does\nreturn a String...", "author": "viliam-durina", "createdAt": "2020-10-05T10:21:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNDE2NA=="}], "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\nindex f1948e007..1644d88ee 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n\n@@ -18,10 +18,10 @@ package com.hazelcast.jet.core;\n \n import com.hazelcast.jet.config.JobConfig;\n \n-import javax.annotation.Nullable;\n+import javax.annotation.Nonnull;\n \n /**\n- * Description of the cause that has lead to the job being suspended.\n+ * Description of the cause that has led to the job being suspended.\n  * <p>\n  * One reason for the job to be suspended is the user explicitly requesting it.\n  * Another reason is encountering an error during execution, while being\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODk1Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498728952", "bodyText": "The client might not have the Throwable class. For example, you have a job with a custom ML library. That lib is added either through JobConfig, or to the member class path. A client (e.g. the mancenter) connects and tries to see the cause. It will fail.\nAlso I'm not sure that we never read the JobExecutionRecord in a context where the classes from JobConfig might not be available, it will fail with this change.", "author": "viliam-durina", "createdAt": "2020-10-02T09:59:40Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSuspensionCauseImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl;\n+\n+import com.hazelcast.jet.core.JobSuspensionCause;\n+import com.hazelcast.jet.impl.execution.init.JetInitDataSerializerHook;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.IdentifiedDataSerializable;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+\n+public class JobSuspensionCauseImpl implements JobSuspensionCause, IdentifiedDataSerializable {\n+\n+    private static final JobSuspensionCauseImpl REQUESTED_BY_USER = new JobSuspensionCauseImpl(null);\n+\n+    private Throwable error;\n+\n+    public JobSuspensionCauseImpl() { //needed for deserialization\n+    }\n+\n+    private JobSuspensionCauseImpl(Throwable error) {\n+        this.error = error;\n+    }\n+\n+    @Override\n+    public boolean requestedByUser() {\n+        return error == null;\n+    }\n+\n+    @Override\n+    public boolean dueToError() {\n+        return error != null;\n+    }\n+\n+    @Nullable\n+    @Override\n+    public Throwable errorCause() {\n+        return error;\n+    }\n+\n+    @Override\n+    public int getFactoryId() {\n+        return JetInitDataSerializerHook.FACTORY_ID;\n+    }\n+\n+    @Override\n+    public int getClassId() {\n+        return JetInitDataSerializerHook.JOB_SUSPENSION_CAUSE;\n+    }\n+\n+    @Override\n+    public void writeData(ObjectDataOutput out) throws IOException {\n+        out.writeObject(error);\n+    }\n+\n+    @Override\n+    public void readData(ObjectDataInput in) throws IOException {\n+        error = in.readObject();", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4MDU5Mw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499380593", "bodyText": "Ok. I can then just keep the error and its stack trace formatted as a string, as before. The idea was to have an extra, safe status type checking, but while adding that I saw no reason not to carry the actual Throwable. But then there is one.", "author": "jbartok", "createdAt": "2020-10-05T07:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODk1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSuspensionCauseImpl.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSuspensionCauseImpl.java\nindex 20572e77e..204a31450 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSuspensionCauseImpl.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSuspensionCauseImpl.java\n\n@@ -22,19 +22,19 @@ import com.hazelcast.nio.ObjectDataInput;\n import com.hazelcast.nio.ObjectDataOutput;\n import com.hazelcast.nio.serialization.IdentifiedDataSerializable;\n \n-import javax.annotation.Nullable;\n+import javax.annotation.Nonnull;\n import java.io.IOException;\n \n public class JobSuspensionCauseImpl implements JobSuspensionCause, IdentifiedDataSerializable {\n \n     private static final JobSuspensionCauseImpl REQUESTED_BY_USER = new JobSuspensionCauseImpl(null);\n \n-    private Throwable error;\n+    private String error;\n \n     public JobSuspensionCauseImpl() { //needed for deserialization\n     }\n \n-    private JobSuspensionCauseImpl(Throwable error) {\n+    private JobSuspensionCauseImpl(String error) {\n         this.error = error;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMDU5Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498730597", "bodyText": "What about adding a @Nonnull getDescription() method for simple cases that just want some information? The toString() can also delegate to this method.", "author": "viliam-durina", "createdAt": "2020-10-02T10:03:26Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4MDY5Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499380696", "bodyText": "Ok.", "author": "jbartok", "createdAt": "2020-10-05T07:03:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMDU5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\nindex f1948e007..1644d88ee 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n\n@@ -18,10 +18,10 @@ package com.hazelcast.jet.core;\n \n import com.hazelcast.jet.config.JobConfig;\n \n-import javax.annotation.Nullable;\n+import javax.annotation.Nonnull;\n \n /**\n- * Description of the cause that has lead to the job being suspended.\n+ * Description of the cause that has led to the job being suspended.\n  * <p>\n  * One reason for the job to be suspended is the user explicitly requesting it.\n  * Another reason is encountering an error during execution, while being\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMTEzNQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498731135", "bodyText": "\"True if the user explicitly suspended the job\"", "author": "mtopolnik", "createdAt": "2020-10-02T10:04:53Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\nindex f1948e007..1644d88ee 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n\n@@ -18,10 +18,10 @@ package com.hazelcast.jet.core;\n \n import com.hazelcast.jet.config.JobConfig;\n \n-import javax.annotation.Nullable;\n+import javax.annotation.Nonnull;\n \n /**\n- * Description of the cause that has lead to the job being suspended.\n+ * Description of the cause that has led to the job being suspended.\n  * <p>\n  * One reason for the job to be suspended is the user explicitly requesting it.\n  * Another reason is encountering an error during execution, while being\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMjMzNg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498732336", "bodyText": "\"True if Jet suspended the job because it encountered an error during execution\"", "author": "mtopolnik", "createdAt": "2020-10-02T10:07:34Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\nindex f1948e007..1644d88ee 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n\n@@ -18,10 +18,10 @@ package com.hazelcast.jet.core;\n \n import com.hazelcast.jet.config.JobConfig;\n \n-import javax.annotation.Nullable;\n+import javax.annotation.Nonnull;\n \n /**\n- * Description of the cause that has lead to the job being suspended.\n+ * Description of the cause that has led to the job being suspended.\n  * <p>\n  * One reason for the job to be suspended is the user explicitly requesting it.\n  * Another reason is encountering an error during execution, while being\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMjU4OQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498732589", "bodyText": "... is not an exception.", "author": "mtopolnik", "createdAt": "2020-10-02T10:08:13Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Provides the error that has lead to the suspension of the job, or returns\n+     * null if the cause of the suspension is different.", "originalCommit": "eabe58573bd9bcc611a1e74d682f4d6daf255bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\nindex f1948e007..1644d88ee 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n\n@@ -18,10 +18,10 @@ package com.hazelcast.jet.core;\n \n import com.hazelcast.jet.config.JobConfig;\n \n-import javax.annotation.Nullable;\n+import javax.annotation.Nonnull;\n \n /**\n- * Description of the cause that has lead to the job being suspended.\n+ * Description of the cause that has led to the job being suspended.\n  * <p>\n  * One reason for the job to be suspended is the user explicitly requesting it.\n  * Another reason is encountering an error during execution, while being\n"}}, {"oid": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "url": "https://github.com/hazelcast/hazelcast-jet/commit/75a61168c680090f41b79bdf2faafacc7fb6b1d5", "message": "Address review concerns", "committedDate": "2020-10-05T10:02:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NjQxOQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499496419", "bodyText": "UnsupportedOperationException is for cases when some behavior is prescribed by the contract, but for some reason isn't implemented.\nBetter would be IllegalStateException.", "author": "viliam-durina", "createdAt": "2020-10-05T10:25:41Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * Description of the cause that has led to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the user explicitly suspended the job.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if Jet suspended the job because it encountered an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Describes the error that has led to the suspension of the job. Throws\n+     * {@link UnsupportedOperationException} if job was not suspended due to an", "originalCommit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2d0ce74743a8a32c869ab86b227adfb93120bc5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\nindex 1644d88ee..155ce7a3c 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n\n@@ -55,7 +55,7 @@ public interface JobSuspensionCause {\n     String errorCause();\n \n     /**\n-     * Describes the job suspension cause in a human readable form.\n+     * Describes the job suspension cause in a human-readable form.\n      */\n     @Nonnull\n     String description();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5ODI2Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499498267", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Describes the job suspension cause in a human readable form.\n          \n          \n            \n                 * Describes the job suspension cause in a human-readable form.\n          \n      \n    \n    \n  \n\nWithout the dash it's a form that's human and also readable :).", "author": "viliam-durina", "createdAt": "2020-10-05T10:28:59Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * Description of the cause that has led to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the user explicitly suspended the job.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if Jet suspended the job because it encountered an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Describes the error that has led to the suspension of the job. Throws\n+     * {@link UnsupportedOperationException} if job was not suspended due to an\n+     * error.\n+     */\n+    @Nonnull\n+    String errorCause();\n+\n+    /**\n+     * Describes the job suspension cause in a human readable form.", "originalCommit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2d0ce74743a8a32c869ab86b227adfb93120bc5", "chunk": "diff --git a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\nindex 1644d88ee..155ce7a3c 100644\n--- a/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n+++ b/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java\n\n@@ -55,7 +55,7 @@ public interface JobSuspensionCause {\n     String errorCause();\n \n     /**\n-     * Describes the job suspension cause in a human readable form.\n+     * Describes the job suspension cause in a human-readable form.\n      */\n     @Nonnull\n     String description();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5OTIwNg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499499206", "bodyText": "You can keep this assert against the description method.", "author": "viliam-durina", "createdAt": "2020-10-05T10:30:46Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendExecutionOnFailureTest.java", "diffHunk": "@@ -113,7 +113,11 @@ public void when_jobSuspendedByUser_then_suspensionCauseSaysSo() {\n         assertJobStatusEventually(job, RUNNING);\n         job.suspend();\n         assertJobStatusEventually(job, SUSPENDED);\n-        assertEquals(\"Requested by user\", job.getSuspensionCause());", "originalCommit": "75a61168c680090f41b79bdf2faafacc7fb6b1d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2d0ce74743a8a32c869ab86b227adfb93120bc5", "chunk": "diff --git a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendExecutionOnFailureTest.java b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendExecutionOnFailureTest.java\nindex 19ee38ab0..337cf1eb1 100644\n--- a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendExecutionOnFailureTest.java\n+++ b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendExecutionOnFailureTest.java\n\n@@ -114,9 +114,9 @@ public class SuspendExecutionOnFailureTest extends TestInClusterSupport {\n         job.suspend();\n         assertJobStatusEventually(job, SUSPENDED);\n         assertThat(job.getSuspensionCause()).matches(JobSuspensionCause::requestedByUser);\n-\n+        assertThat(job.getSuspensionCause().description()).isEqualTo(\"Requested by user\");\n         assertThatThrownBy(job.getSuspensionCause()::errorCause)\n-                .isInstanceOf(UnsupportedOperationException.class)\n+                .isInstanceOf(IllegalStateException.class)\n                 .hasMessage(\"Suspension not caused by an error\");\n \n         cancelAndJoin(job);\n"}}, {"oid": "a2d0ce74743a8a32c869ab86b227adfb93120bc5", "url": "https://github.com/hazelcast/hazelcast-jet/commit/a2d0ce74743a8a32c869ab86b227adfb93120bc5", "message": "Address more review concerns", "committedDate": "2020-10-05T11:47:08Z", "type": "commit"}]}