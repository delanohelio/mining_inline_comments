{"pr_number": 1883, "pr_title": "Fix outbox blocking in snapshot phase 2", "pr_createdAt": "2020-01-24T08:31:53Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/1883", "timeline": [{"oid": "af1fc93816c4e4a20a93fae1a1ce5152105cd404", "url": "https://github.com/hazelcast/hazelcast-jet/commit/af1fc93816c4e4a20a93fae1a1ce5152105cd404", "message": "Fix outbox blocking in snapshot phase 2\n\nThis happened:\n\n- in `ProcessorTasklet.processInbox` we discovered that a new phase-2 begun\n\n- there was an unfinished item in the outbox, so we blocked the outbox and\ndidn't begin the phase-2 in order to ensure that the unfinished item is finished\n\n- however before that, the processor had returned from `process()` with an\nempty inbox and an unfinished item. Therefore the process went to `fillInbox`\nand found a WM there. So the state proceeded to PROCESS_WATERMARK, but the\noutbox was still blocked.\n\n- `tryProcessWatermark` tried to emit the `currentTraverser` first, but\ncouldn't because the outbox was blocked. And there it remained stuck, trying\nthat forever.\n\nReturning `true` from `tryProcess()` or returning an empty inbox and having an\nunfinished item in the outbox is allowed. So we changed the contract of\n`snapshotCommitFinish` that it must not add items to outbox and if there's a\nphase-2, we just execute that method and return to where we left.\n\nFixes #1881", "committedDate": "2020-01-24T08:30:41Z", "type": "commit"}, {"oid": "56a2d81e12eca53b03b89c15de26f33fa7961a28", "url": "https://github.com/hazelcast/hazelcast-jet/commit/56a2d81e12eca53b03b89c15de26f33fa7961a28", "message": "Merge branch 'master' into blocked-outbox-fix", "committedDate": "2020-01-27T12:53:21Z", "type": "commit"}, {"oid": "5025f40202bdc48a5bd9dcdc05d01df44ef80605", "url": "https://github.com/hazelcast/hazelcast-jet/commit/5025f40202bdc48a5bd9dcdc05d01df44ef80605", "message": "Fix grammar", "committedDate": "2020-01-27T13:07:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyMDgyOA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1883#discussion_r372320828", "bodyText": "is the double underscore intentional here? looks a little strange", "author": "cangencer", "createdAt": "2020-01-29T11:09:00Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorState.java", "diffHunk": "@@ -73,23 +73,32 @@\n \n     /**\n      * Making calls to {@link Processor#snapshotCommitFinish(boolean)} until it\n-     * returns {@code true}.\n+     * returns {@code true} and then return to {@link #PROCESS_INBOX}. Used\n+     * when phase-2 was initiated while in {@link #PROCESS_INBOX}.\n      */\n-    ON_SNAPSHOT_COMPLETED,\n+    SNAPSHOT_COMMIT_FINISH__PROCESS,\n \n     /**\n-     * Processor completed after a phase 1 of a snapshot and is not doing\n-     * anything, but it cannot be done until a phase 2 is done - this state is\n-     * waiting for a phase 2.\n+     * Making calls to {@link Processor#snapshotCommitFinish(boolean)} until it\n+     * returns {@code true} and then return to {@link #COMPLETE}. Used when\n+     * phase-2 was initiated while in {@link #COMPLETE}.\n      */\n-    WAITING_FOR_SNAPSHOT_COMPLETED,\n+    SNAPSHOT_COMMIT_FINISH__COMPLETE,\n+\n+    /**\n+     * Making calls to {@link Processor#snapshotCommitFinish(boolean)} until it\n+     * returns {@code true} and then proceed to {@link #EMIT_DONE_ITEM}. Used\n+     * when phase-2 was initiated after {@code Processor.complete()} returned\n+     * true.\n+     */\n+    SNAPSHOT_COMMIT_FINISH__FINAL,", "originalCommit": "5025f40202bdc48a5bd9dcdc05d01df44ef80605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUwNDE4MQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1883#discussion_r372504181", "bodyText": "yes, there are three constants starting with SNAPSHOT_COMMIT_FINISH, after the two underscores is the discriminating part, all three have __.\nCheckstyle didn't object :)", "author": "viliam-durina", "createdAt": "2020-01-29T16:51:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyMDgyOA=="}], "type": "inlineReview", "revised_code": null}]}