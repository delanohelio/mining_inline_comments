{"pr_number": 2689, "pr_title": "Check IMap security for sql", "pr_createdAt": "2020-11-20T15:10:57Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2689", "timeline": [{"oid": "aff63df1a0bd1f73b4bf8f27cf3a9bf83072472e", "url": "https://github.com/hazelcast/hazelcast-jet/commit/aff63df1a0bd1f73b4bf8f27cf3a9bf83072472e", "message": "Check IMap security for sql\n\nFixes #2662", "committedDate": "2020-11-20T15:10:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2MzU4Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2689#discussion_r527763587", "bodyText": "Can't we use visit(LogicalTableModify modify)? Maybe we could skip the table != null condition in addPermissionForTable.", "author": "gierlachg", "createdAt": "2020-11-20T15:22:16Z", "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/JetSqlBackend.java", "diffHunk": "@@ -228,17 +235,49 @@ private ExecutionPlan toPlan(RelNode rel, List<String> fieldNames, OptimizerCont\n         boolean isStreaming = containsStreamSource(rel);\n         boolean isInsert = physicalRel instanceof TableModify;\n \n+        List<Permission> permissions = extractPermissions(physicalRel);\n         if (isInsert) {\n             DAG dag = createDag(physicalRel);\n-            return new ExecutionPlan(dag, isStreaming, true, null, null, planExecutor);\n+            return new ExecutionPlan(dag, isStreaming, true, null, null, planExecutor, permissions);\n         } else {\n             QueryId queryId = QueryId.create(nodeEngine.getLocalMember().getUuid());\n             DAG dag = createDag(new JetRootRel(physicalRel, nodeEngine.getThisAddress(), queryId));\n             SqlRowMetadata rowMetadata = createRowMetadata(fieldNames, physicalRel.schema().getTypes());\n-            return new ExecutionPlan(dag, isStreaming, false, queryId, rowMetadata, planExecutor);\n+            return new ExecutionPlan(dag, isStreaming, false, queryId, rowMetadata, planExecutor, permissions);\n         }\n     }\n \n+    private List<Permission> extractPermissions(PhysicalRel physicalRel) {\n+        List<Permission> permissions = new ArrayList<>();\n+\n+        physicalRel.accept(new RelShuttleImpl() {\n+            @Override\n+            public RelNode visit(TableScan scan) {\n+                addPermissionForTable(scan.getTable(), ActionConstants.ACTION_READ);\n+                return super.visit(scan);\n+            }\n+\n+            @Override\n+            public RelNode visit(RelNode other) {", "originalCommit": "aff63df1a0bd1f73b4bf8f27cf3a9bf83072472e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxMjg3Mw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2689#discussion_r527912873", "bodyText": "The InsertPhysicalRel doesn't extend LogicalTableModify, but only TableModify. I actually don't know why RelShuttle has the Logical subclasses for almost everything except for TableScan...", "author": "viliam-durina", "createdAt": "2020-11-20T19:03:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2MzU4Nw=="}], "type": "inlineReview", "revised_code": null}]}