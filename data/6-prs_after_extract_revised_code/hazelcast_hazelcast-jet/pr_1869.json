{"pr_number": 1869, "pr_title": "Add support for .yml files located in work dir or in classpath", "pr_createdAt": "2020-01-21T11:28:33Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/1869", "timeline": [{"oid": "725360b0e7d64d0f8d550cbfed3e5792a5ba109d", "url": "https://github.com/hazelcast/hazelcast-jet/commit/725360b0e7d64d0f8d550cbfed3e5792a5ba109d", "message": "Add support for .yml files located in work dir or in classpath", "committedDate": "2020-01-21T11:26:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3Mzc4NA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1869#discussion_r368973784", "bodyText": "Why serial runner, is there a reason why these tests can't be run in parallel?", "author": "jbartok", "createdAt": "2020-01-21T12:32:31Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java", "diffHunk": "@@ -0,0 +1,246 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.config;\n+\n+import com.hazelcast.core.HazelcastException;\n+import com.hazelcast.jet.impl.config.YamlJetConfigBuilder;\n+import com.hazelcast.jet.test.JetDeclarativeConfigFileHelper;\n+import com.hazelcast.test.HazelcastSerialClassRunner;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.junit.runner.RunWith;\n+\n+import java.io.File;\n+\n+import static com.hazelcast.internal.config.DeclarativeConfigUtil.YAML_ACCEPTED_SUFFIXES_STRING;\n+import static com.hazelcast.jet.impl.config.JetDeclarativeConfigUtil.SYSPROP_JET_CONFIG;\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(HazelcastSerialClassRunner.class)", "originalCommit": "725360b0e7d64d0f8d550cbfed3e5792a5ba109d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NjA1MQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1869#discussion_r368976051", "bodyText": "yes, they are creating some files on runtime with the same name so they should be run serially", "author": "eminn", "createdAt": "2020-01-21T12:38:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3Mzc4NA=="}], "type": "inlineReview", "revised_code": {"commit": "76e54809ced5971c4948058265a461d9bdf783a5", "chunk": "diff --git a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigResolutionTest.java\nsimilarity index 99%\nrename from hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java\nrename to hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigResolutionTest.java\nindex d84dca6a4..2902460d4 100644\n--- a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java\n+++ b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigResolutionTest.java\n\n@@ -34,7 +34,7 @@ import static com.hazelcast.jet.impl.config.JetDeclarativeConfigUtil.SYSPROP_JET\n import static org.junit.Assert.assertEquals;\n \n @RunWith(HazelcastSerialClassRunner.class)\n-public class YamlJetConfigBuilderConfigResolutionTest {\n+public class YamlJetConfigResolutionTest {\n \n     @Rule\n     public ExpectedException expectedException = ExpectedException.none();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NDA1Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1869#discussion_r368974056", "bodyText": "Bit weird for the tearDown() method to be annotated with @Before... Mistake?", "author": "jbartok", "createdAt": "2020-01-21T12:33:12Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java", "diffHunk": "@@ -0,0 +1,246 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.config;\n+\n+import com.hazelcast.core.HazelcastException;\n+import com.hazelcast.jet.impl.config.YamlJetConfigBuilder;\n+import com.hazelcast.jet.test.JetDeclarativeConfigFileHelper;\n+import com.hazelcast.test.HazelcastSerialClassRunner;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.junit.runner.RunWith;\n+\n+import java.io.File;\n+\n+import static com.hazelcast.internal.config.DeclarativeConfigUtil.YAML_ACCEPTED_SUFFIXES_STRING;\n+import static com.hazelcast.jet.impl.config.JetDeclarativeConfigUtil.SYSPROP_JET_CONFIG;\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(HazelcastSerialClassRunner.class)\n+public class YamlJetConfigBuilderConfigResolutionTest {\n+\n+    @Rule\n+    public ExpectedException expectedException = ExpectedException.none();\n+\n+    private JetDeclarativeConfigFileHelper helper = new JetDeclarativeConfigFileHelper();\n+\n+    @Before", "originalCommit": "725360b0e7d64d0f8d550cbfed3e5792a5ba109d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NjY0MA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1869#discussion_r368976640", "bodyText": "it should clear out the system property if present, so we also run this method before each run.", "author": "eminn", "createdAt": "2020-01-21T12:39:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NDA1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "76e54809ced5971c4948058265a461d9bdf783a5", "chunk": "diff --git a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigResolutionTest.java\nsimilarity index 99%\nrename from hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java\nrename to hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigResolutionTest.java\nindex d84dca6a4..2902460d4 100644\n--- a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java\n+++ b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigResolutionTest.java\n\n@@ -34,7 +34,7 @@ import static com.hazelcast.jet.impl.config.JetDeclarativeConfigUtil.SYSPROP_JET\n import static org.junit.Assert.assertEquals;\n \n @RunWith(HazelcastSerialClassRunner.class)\n-public class YamlJetConfigBuilderConfigResolutionTest {\n+public class YamlJetConfigResolutionTest {\n \n     @Rule\n     public ExpectedException expectedException = ExpectedException.none();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NDI1MA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1869#discussion_r368974250", "bodyText": "Name is quite a mouthful, maybe something shorter?", "author": "jbartok", "createdAt": "2020-01-21T12:33:38Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java", "diffHunk": "@@ -0,0 +1,246 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.config;\n+\n+import com.hazelcast.core.HazelcastException;\n+import com.hazelcast.jet.impl.config.YamlJetConfigBuilder;\n+import com.hazelcast.jet.test.JetDeclarativeConfigFileHelper;\n+import com.hazelcast.test.HazelcastSerialClassRunner;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.junit.runner.RunWith;\n+\n+import java.io.File;\n+\n+import static com.hazelcast.internal.config.DeclarativeConfigUtil.YAML_ACCEPTED_SUFFIXES_STRING;\n+import static com.hazelcast.jet.impl.config.JetDeclarativeConfigUtil.SYSPROP_JET_CONFIG;\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(HazelcastSerialClassRunner.class)\n+public class YamlJetConfigBuilderConfigResolutionTest {", "originalCommit": "725360b0e7d64d0f8d550cbfed3e5792a5ba109d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3Njk4Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1869#discussion_r368976986", "bodyText": "any suggestions ?", "author": "eminn", "createdAt": "2020-01-21T12:40:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NDI1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwMDQ5Mw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1869#discussion_r369100493", "bodyText": "Maybe at least leave out the second Config, like YamlJetConfigBuilderResolutionTest? Or even YamlJetConfigResolutionTest? Not sure.", "author": "jbartok", "createdAt": "2020-01-21T16:19:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NDI1MA=="}], "type": "inlineReview", "revised_code": {"commit": "76e54809ced5971c4948058265a461d9bdf783a5", "chunk": "diff --git a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigResolutionTest.java\nsimilarity index 99%\nrename from hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java\nrename to hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigResolutionTest.java\nindex d84dca6a4..2902460d4 100644\n--- a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderConfigResolutionTest.java\n+++ b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigResolutionTest.java\n\n@@ -34,7 +34,7 @@ import static com.hazelcast.jet.impl.config.JetDeclarativeConfigUtil.SYSPROP_JET\n import static org.junit.Assert.assertEquals;\n \n @RunWith(HazelcastSerialClassRunner.class)\n-public class YamlJetConfigBuilderConfigResolutionTest {\n+public class YamlJetConfigResolutionTest {\n \n     @Rule\n     public ExpectedException expectedException = ExpectedException.none();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NTE0OQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1869#discussion_r368975149", "bodyText": "Same question, can't you run them in parallel?", "author": "jbartok", "createdAt": "2020-01-21T12:36:00Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderMemberConfigResolutionTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.config;\n+\n+import com.hazelcast.core.HazelcastException;\n+import com.hazelcast.jet.impl.config.YamlJetConfigBuilder;\n+import com.hazelcast.jet.test.JetDeclarativeConfigFileHelper;\n+import com.hazelcast.test.HazelcastSerialClassRunner;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.junit.runner.RunWith;\n+\n+import static com.hazelcast.internal.config.DeclarativeConfigUtil.SYSPROP_MEMBER_CONFIG;\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(HazelcastSerialClassRunner.class)", "originalCommit": "725360b0e7d64d0f8d550cbfed3e5792a5ba109d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76e54809ced5971c4948058265a461d9bdf783a5", "chunk": "diff --git a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderMemberConfigResolutionTest.java b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetMemberConfigResolutionTest.java\nsimilarity index 98%\nrename from hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderMemberConfigResolutionTest.java\nrename to hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetMemberConfigResolutionTest.java\nindex fadf3d7fa..498afbed6 100644\n--- a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderMemberConfigResolutionTest.java\n+++ b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetMemberConfigResolutionTest.java\n\n@@ -31,7 +31,7 @@ import static com.hazelcast.internal.config.DeclarativeConfigUtil.SYSPROP_MEMBER\n import static org.junit.Assert.assertEquals;\n \n @RunWith(HazelcastSerialClassRunner.class)\n-public class YamlJetConfigBuilderMemberConfigResolutionTest {\n+public class YamlJetMemberConfigResolutionTest {\n \n     @Rule\n     public ExpectedException expectedException = ExpectedException.none();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NTIxNA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1869#discussion_r368975214", "bodyText": "Same as before, intentional?", "author": "jbartok", "createdAt": "2020-01-21T12:36:12Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderMemberConfigResolutionTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.config;\n+\n+import com.hazelcast.core.HazelcastException;\n+import com.hazelcast.jet.impl.config.YamlJetConfigBuilder;\n+import com.hazelcast.jet.test.JetDeclarativeConfigFileHelper;\n+import com.hazelcast.test.HazelcastSerialClassRunner;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.junit.runner.RunWith;\n+\n+import static com.hazelcast.internal.config.DeclarativeConfigUtil.SYSPROP_MEMBER_CONFIG;\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(HazelcastSerialClassRunner.class)\n+public class YamlJetConfigBuilderMemberConfigResolutionTest {\n+\n+    @Rule\n+    public ExpectedException expectedException = ExpectedException.none();\n+\n+    private JetDeclarativeConfigFileHelper helper = new JetDeclarativeConfigFileHelper();\n+\n+    @Before", "originalCommit": "725360b0e7d64d0f8d550cbfed3e5792a5ba109d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76e54809ced5971c4948058265a461d9bdf783a5", "chunk": "diff --git a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderMemberConfigResolutionTest.java b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetMemberConfigResolutionTest.java\nsimilarity index 98%\nrename from hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderMemberConfigResolutionTest.java\nrename to hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetMemberConfigResolutionTest.java\nindex fadf3d7fa..498afbed6 100644\n--- a/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigBuilderMemberConfigResolutionTest.java\n+++ b/hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetMemberConfigResolutionTest.java\n\n@@ -31,7 +31,7 @@ import static com.hazelcast.internal.config.DeclarativeConfigUtil.SYSPROP_MEMBER\n import static org.junit.Assert.assertEquals;\n \n @RunWith(HazelcastSerialClassRunner.class)\n-public class YamlJetConfigBuilderMemberConfigResolutionTest {\n+public class YamlJetMemberConfigResolutionTest {\n \n     @Rule\n     public ExpectedException expectedException = ExpectedException.none();\n"}}, {"oid": "76e54809ced5971c4948058265a461d9bdf783a5", "url": "https://github.com/hazelcast/hazelcast-jet/commit/76e54809ced5971c4948058265a461d9bdf783a5", "message": "Rename tests", "committedDate": "2020-01-21T20:40:37Z", "type": "commit"}]}