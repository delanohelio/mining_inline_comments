{"pr_number": 2135, "pr_title": "Fix race asserting RUNNING status and restarting", "pr_createdAt": "2020-04-02T13:05:30Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2135", "timeline": [{"oid": "cea42b7296974e53ea55a6f2cb3f4a38a956d9f8", "url": "https://github.com/hazelcast/hazelcast-jet/commit/cea42b7296974e53ea55a6f2cb3f4a38a956d9f8", "message": "Fix race asserting RUNNING status and restarting\n\nFixes #2132", "committedDate": "2020-04-02T13:04:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1ODc4MA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2135#discussion_r402758780", "bodyText": "Can we rename this method please? It does not assert whether job is running but whether job was restarted (and running).\nIf this method is called independently on job.restart(); it will never return. Should not be rather job.restart(); called inside this method to have it more clear and robust?", "author": "olukas", "createdAt": "2020-04-03T06:19:21Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JetTestSupport.java", "diffHunk": "@@ -146,6 +148,44 @@ public static void assertJobStatusEventually(Job job, JobStatus expected) {\n         assertJobStatusEventually(job, expected, ASSERT_TRUE_EVENTUALLY_TIMEOUT);\n     }\n \n+    /**\n+     * Asserts that a job status is eventually RUNNING. When it's running,\n+     * checks that the execution ID is different from the given {@code\n+     * ignoredExecutionId}, if not, tries again.\n+     * <p>\n+     * This is useful when checking that the job is running after a restart:\n+     * <pre>{@code\n+     *     job.restart();\n+     *     // This is racy, we might see the previous execution running.\n+     *     // Subsequent steps can fail because the job is restarting.\n+     *     assertJobStatusEventually(job, RUNNING);\n+     * }</pre>\n+     *\n+     * This method allows an equivalent code:\n+     * <pre>{@code\n+     *     long oldExecutionId = assertJobRunningEventually(instance, job, null);\n+     *     // now we're sure the job is safe to restart - restart fails if the job isn't running\n+     *     job.restart();\n+     *     assertJobRunningEventually(instance, job, oldExecutionId);\n+     *     // now we're sure that a new execution is running\n+     * }</pre>\n+     *\n+     * @param ignoredExecutionId If job is running and has this execution ID,\n+     *      wait longer. If null, no execution ID is ignored.\n+     * @return the execution ID of the new execution\n+     */\n+    public static long assertJobRunningEventually(JetInstance instance, Job job, Long ignoredExecutionId) {", "originalCommit": "cea42b7296974e53ea55a6f2cb3f4a38a956d9f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc3OTgwMg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2135#discussion_r402779802", "bodyText": "It does assert that the job is running, but it can optionally exclude certain execution ID. If the given execution ID is null, it ignores no execution ID. If it is not null, it's useful after a restart to ignore the previous execution.\nWhat name do you suggest?", "author": "viliam-durina", "createdAt": "2020-04-03T07:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1ODc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4NzQ3Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2135#discussion_r402787476", "bodyText": "You're right, I misread condition. What about the name like assertJobRunningAfterRestartEventually ? However since ignoredExecutionId can be null then name which I suggest is also bad. Maybe let's keep that name as it is.", "author": "olukas", "createdAt": "2020-04-03T07:30:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1ODc4MA=="}], "type": "inlineReview", "revised_code": null}]}