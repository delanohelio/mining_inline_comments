{"pr_number": 3332, "pr_title": "Fix CachedSessionFactory Race", "pr_createdAt": "2020-07-08T17:20:24Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3332", "timeline": [{"oid": "8e8e83b478bde647da1d2a03373b70a46e4fbc2b", "url": "https://github.com/spring-projects/spring-integration/commit/8e8e83b478bde647da1d2a03373b70a46e4fbc2b", "message": "Fix CachedSessionFactory Race\n\nClose the pool so that any sessions returned after the factory is\n`destroy()`ed are closed.\n\n**cherry-pick to all supported branches**", "committedDate": "2020-07-08T17:16:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNjM4NQ==", "url": "https://github.com/spring-projects/spring-integration/pull/3332#discussion_r451706385", "bodyText": "The default is not going to work for Java 6, but we may not just introduce this method into the Pool interface for backward bytecode compatibility.", "author": "artembilan", "createdAt": "2020-07-08T17:21:54Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/util/Pool.java", "diffHunk": "@@ -72,4 +72,11 @@\n \t */\n \tint getAllocatedCount();\n \n+\t/**\n+\t * Close the pool; returned items will be destroyed.\n+\t * @since 4.3.23\n+\t */\n+\tdefault void close() {", "originalCommit": "8e8e83b478bde647da1d2a03373b70a46e4fbc2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcxNTQ1MA==", "url": "https://github.com/spring-projects/spring-integration/pull/3332#discussion_r451715450", "bodyText": "Probably easiest to cast to SimplePool on 4.3.x?", "author": "garyrussell", "createdAt": "2020-07-08T17:37:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNjM4NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwODEwMw==", "url": "https://github.com/spring-projects/spring-integration/pull/3332#discussion_r451708103", "bodyText": "I'll take a look what we need to do during back-port to 4.3.x ...", "author": "artembilan", "createdAt": "2020-07-08T17:24:45Z", "path": "spring-integration-core/src/test/java/org/springframework/integration/util/SimplePoolTests.java", "diffHunk": "@@ -27,7 +29,7 @@\n import java.util.concurrent.Semaphore;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n-import org.junit.Test;\n+import org.junit.jupiter.api.Test;", "originalCommit": "8e8e83b478bde647da1d2a03373b70a46e4fbc2b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwOTA5Ng==", "url": "https://github.com/spring-projects/spring-integration/pull/3332#discussion_r451709096", "bodyText": "Why that new close() can't do this for us, too?", "author": "artembilan", "createdAt": "2020-07-08T17:26:23Z", "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/CachingClientConnectionFactory.java", "diffHunk": "@@ -389,6 +390,12 @@ public synchronized void stop() {\n \t\tthis.pool.removeAllIdleItems();\n \t}\n \n+\t@Override\n+\tpublic void destroy() throws Exception {\n+\t\tthis.pool.close();\n+\t\tthis.pool.removeAllIdleItems();", "originalCommit": "8e8e83b478bde647da1d2a03373b70a46e4fbc2b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "998fbb96c6dc5e6b8a707121287d562c501f6efd", "chunk": "diff --git a/spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/CachingClientConnectionFactory.java b/spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/CachingClientConnectionFactory.java\nindex 3f0ba486ed..afb34e68ce 100644\n--- a/spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/CachingClientConnectionFactory.java\n+++ b/spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/CachingClientConnectionFactory.java\n\n@@ -393,7 +393,6 @@ public class CachingClientConnectionFactory extends AbstractClientConnectionFact\n \t@Override\n \tpublic void destroy() throws Exception {\n \t\tthis.pool.close();\n-\t\tthis.pool.removeAllIdleItems();\n \t}\n \n \tprivate final class CachedConnection extends TcpConnectionInterceptorSupport {\n"}}, {"oid": "998fbb96c6dc5e6b8a707121287d562c501f6efd", "url": "https://github.com/spring-projects/spring-integration/commit/998fbb96c6dc5e6b8a707121287d562c501f6efd", "message": "Call `removeAllIdleItems()` in `close()`.", "committedDate": "2020-07-08T17:42:22Z", "type": "commit"}, {"oid": "12f5cfbd2926b9b0d04283b4c80af36f33cf85a9", "url": "https://github.com/spring-projects/spring-integration/commit/12f5cfbd2926b9b0d04283b4c80af36f33cf85a9", "message": "Close sessions in `SftpStreamingMessageSourceTests`.", "committedDate": "2020-07-08T18:13:38Z", "type": "commit"}]}