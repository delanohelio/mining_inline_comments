{"pr_number": 3196, "pr_title": "Upgrade to MQTT Paho 1.2.2", "pr_createdAt": "2020-02-27T21:18:12Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3196", "timeline": [{"oid": "0ef946b15fded76805cdd5479757ec9b3b81f43f", "url": "https://github.com/spring-projects/spring-integration/commit/0ef946b15fded76805cdd5479757ec9b3b81f43f", "message": "Upgrade to MQTT Paho 1.2.2\n\n- fix mock tests for internal client changes\n- reduce stop wait for completion time\n\n**cherry-pick to 5.2.x**", "committedDate": "2020-02-27T21:17:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3NzYyOQ==", "url": "https://github.com/spring-projects/spring-integration/pull/3196#discussion_r385377629", "bodyText": "I think this one has to go...", "author": "artembilan", "createdAt": "2020-02-27T21:20:17Z", "path": "spring-integration-mqtt/src/test/java/org/springframework/integration/mqtt/MqttAdapterTests.java", "diffHunk": "@@ -454,9 +458,10 @@ public void testSubscribeFailure() throws Exception {\n \t\t\tfail(\"Expected InvocationTargetException\");\n \t\t}\n \t\tcatch (InvocationTargetException e) {\n+\t\t\te.printStackTrace();", "originalCommit": "0ef946b15fded76805cdd5479757ec9b3b81f43f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bded4a17b16f1ebd424eb9631a24aaaffe177396", "chunk": "diff --git a/spring-integration-mqtt/src/test/java/org/springframework/integration/mqtt/MqttAdapterTests.java b/spring-integration-mqtt/src/test/java/org/springframework/integration/mqtt/MqttAdapterTests.java\nindex 5401116432..557fcb4fc3 100644\n--- a/spring-integration-mqtt/src/test/java/org/springframework/integration/mqtt/MqttAdapterTests.java\n+++ b/spring-integration-mqtt/src/test/java/org/springframework/integration/mqtt/MqttAdapterTests.java\n\n@@ -453,16 +455,12 @@ public class MqttAdapterTests {\n \t\t\tmethod.set(m);\n \t\t}, m -> m.getName().equals(\"connectAndSubscribe\"));\n \t\tassertThat(method.get()).isNotNull();\n-\t\ttry {\n-\t\t\tmethod.get().invoke(adapter);\n-\t\t\tfail(\"Expected InvocationTargetException\");\n-\t\t}\n-\t\tcatch (InvocationTargetException e) {\n-\t\t\te.printStackTrace();\n-\t\t\tassertThat(e.getCause()).isInstanceOf(MqttException.class);\n-\t\t\tassertThat(((MqttException) e.getCause()).getReasonCode())\n-\t\t\t\t\t.isEqualTo(MqttException.REASON_CODE_SUBSCRIBE_FAILED);\n-\t\t}\n+\t\tCondition<InvocationTargetException> subscribeFailed = new Condition<>(ex ->\n+\t\t\t((MqttException) ex.getCause()).getReasonCode() == MqttException.REASON_CODE_SUBSCRIBE_FAILED,\n+\t\t\t\"expected the reason code to be REASON_CODE_SUBSCRIBE_FAILED\");\n+\t\tassertThatExceptionOfType(InvocationTargetException.class).isThrownBy(() -> method.get().invoke(adapter))\n+\t\t\t.withCauseInstanceOf(MqttException.class)\n+\t\t\t.is(subscribeFailed);\n \t}\n \n \t@Test\n"}}, {"oid": "bded4a17b16f1ebd424eb9631a24aaaffe177396", "url": "https://github.com/spring-projects/spring-integration/commit/bded4a17b16f1ebd424eb9631a24aaaffe177396", "message": "Remove stack trace from test and convert to assertJ", "committedDate": "2020-02-27T21:32:52Z", "type": "commit"}]}