{"pr_number": 3261, "pr_title": "GH-3253: Scan BF hierarchy for BeanDefinition", "pr_createdAt": "2020-04-23T21:03:46Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3261", "timeline": [{"oid": "90a2d7a55d29fe1ac1aa47c64b591bece648a594", "url": "https://github.com/spring-projects/spring-integration/commit/90a2d7a55d29fe1ac1aa47c64b591bece648a594", "message": "GH-3253: Scan BF hierarchy for BeanDefinition\n\nFixes https://github.com/spring-projects/spring-integration/issues/3253\n\nThe `IntegrationFlowBeanPostProcessor` uses a `containsBean()`\nand then `getBeanDefinition()` to be sure that we don't override already\nexisting bean even if it is created in the parent(s) context.\nThe problem that `containsBean()` check the hierarchy, but `getBeanDefinition()`\ndoesn't.\nSo, we fail with `NoSuchBeanDefinitionException` if bean exists in the parent ctx\n\n* Introduce an utility `IntegrationContextUtils.getBeanDefinition()` to\nscan `BeanFactory` recursively for `BeanDefinition` for the requested `name`\n* Use this tool in the `IntegrationFlowBeanPostProcessor` logic\n\n**Cherry-pick to 5.2.x & 5.1.x**", "committedDate": "2020-04-23T21:03:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5MDA5OQ==", "url": "https://github.com/spring-projects/spring-integration/pull/3261#discussion_r414690099", "bodyText": "Why just one parent? Don't we need to recurse up the BF tree?", "author": "garyrussell", "createdAt": "2020-04-24T16:04:12Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/context/IntegrationContextUtils.java", "diffHunk": "@@ -212,4 +215,26 @@ public static Properties getIntegrationProperties(BeanFactory beanFactory) {\n \t\treturn properties;\n \t}\n \n+\t/**\n+\t * Return a {@link BeanDefinition} with the given name,\n+\t * obtained from the given {@link BeanFactory} or one of its parents.\n+\t * @param name the bean name to return\n+\t * @param beanFactory the {@link ConfigurableListableBeanFactory} to travers.\n+\t * @return the {@link BeanDefinition} for a given name\n+\t * @throws NoSuchBeanDefinitionException if a {@link BeanDefinition} is not found\n+\t * @since 5.1.10\n+\t */\n+\tpublic static BeanDefinition getBeanDefinition(String name, ConfigurableListableBeanFactory beanFactory) {\n+\t\ttry {\n+\t\t\treturn beanFactory.getBeanDefinition(name);\n+\t\t}\n+\t\tcatch (NoSuchBeanDefinitionException ex) {\n+\t\t\tBeanFactory parentBeanFactory = beanFactory.getParentBeanFactory();\n+\t\t\tif (parentBeanFactory instanceof ConfigurableListableBeanFactory) {", "originalCommit": "90a2d7a55d29fe1ac1aa47c64b591bece648a594", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc1NTg2OA==", "url": "https://github.com/spring-projects/spring-integration/pull/3261#discussion_r414755868", "bodyText": "Because the next return getBeanDefinition(name, (ConfigurableListableBeanFactory) parentBeanFactory); call is indeed recursive.\nNot sure what am I missing...", "author": "artembilan", "createdAt": "2020-04-24T17:50:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5MDA5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc2MjMzMQ==", "url": "https://github.com/spring-projects/spring-integration/pull/3261#discussion_r414762331", "bodyText": "Doh - not enough coffee.", "author": "garyrussell", "createdAt": "2020-04-24T18:00:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5MDA5OQ=="}], "type": "inlineReview", "revised_code": null}]}