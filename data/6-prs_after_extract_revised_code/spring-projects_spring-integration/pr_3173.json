{"pr_number": 3173, "pr_title": "GH-3172: Support consumer-side batching", "pr_createdAt": "2020-02-07T21:48:26Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3173", "timeline": [{"oid": "f0aa7ddfd59b7196dc4c1d911e76d8bb54d19c50", "url": "https://github.com/spring-projects/spring-integration/commit/f0aa7ddfd59b7196dc4c1d911e76d8bb54d19c50", "message": "GH-3172: Support consumer-side batching\n\nResolves https://github.com/spring-projects/spring-integration/issues/3172\n\nWhen the listener container supports creating batches of consumed\nmessages, present the batch as the message payload - either a\n`List<Message<?>>` or `List<SomePayload>`.", "committedDate": "2020-02-07T21:47:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0NTM1MA==", "url": "https://github.com/spring-projects/spring-integration/pull/3173#discussion_r376645350", "bodyText": "@since 5.3? Because of new public API", "author": "artembilan", "createdAt": "2020-02-07T22:54:55Z", "path": "spring-integration-amqp/src/main/java/org/springframework/integration/amqp/support/EndpointUtils.java", "diffHunk": "@@ -50,9 +52,28 @@ public static ListenerExecutionFailedException errorMessagePayload(Message messa\n \t\t\tChannel channel, boolean isManualAck, Exception ex) {\n \n \t\treturn isManualAck\n-\t\t\t\t? new ManualAckListenerExecutionFailedException(LEFE_MESSAGE, ex, message, channel,\n-\t\t\t\t\t\tmessage.getMessageProperties().getDeliveryTag())\n+\t\t\t\t? new ManualAckListenerExecutionFailedException(LEFE_MESSAGE, ex, channel,\n+\t\t\t\t\t\tmessage.getMessageProperties().getDeliveryTag(), message)\n \t\t\t\t: new ListenerExecutionFailedException(LEFE_MESSAGE, ex, message);\n \t}\n \n+\t/**\n+\t * Return an {@link ListenerExecutionFailedException} or a {@link ManualAckListenerExecutionFailedException}\n+\t * depending on whether isManualAck is false or true.\n+\t * @param messages the failed messages.\n+\t * @param channel the channel.\n+\t * @param isManualAck true if the container uses manual acknowledgment.\n+\t * @param ex the exception.\n+\t * @return the exception.", "originalCommit": "f0aa7ddfd59b7196dc4c1d911e76d8bb54d19c50", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "664621b38b4723e002af7a020b846a949bcc52e5", "chunk": "diff --git a/spring-integration-amqp/src/main/java/org/springframework/integration/amqp/support/EndpointUtils.java b/spring-integration-amqp/src/main/java/org/springframework/integration/amqp/support/EndpointUtils.java\nindex 72423fed99..0257465101 100644\n--- a/spring-integration-amqp/src/main/java/org/springframework/integration/amqp/support/EndpointUtils.java\n+++ b/spring-integration-amqp/src/main/java/org/springframework/integration/amqp/support/EndpointUtils.java\n\n@@ -65,6 +65,7 @@ public final class EndpointUtils {\n \t * @param isManualAck true if the container uses manual acknowledgment.\n \t * @param ex the exception.\n \t * @return the exception.\n+\t * @since 5.3\n \t */\n \tpublic static ListenerExecutionFailedException errorMessagePayload(List<Message> messages,\n \t\t\tChannel channel, boolean isManualAck, Exception ex) {\n"}}, {"oid": "664621b38b4723e002af7a020b846a949bcc52e5", "url": "https://github.com/spring-projects/spring-integration/commit/664621b38b4723e002af7a020b846a949bcc52e5", "message": "Add 'since' to new method.", "committedDate": "2020-02-08T16:07:00Z", "type": "commit"}]}