{"pr_number": 12437, "pr_title": "[CDAP-16873] Pass MetricsWriterContext to metrics writers.", "pr_createdAt": "2020-07-06T23:38:26Z", "pr_url": "https://github.com/cdapio/cdap/pull/12437", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE1ODMyMQ==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r451158321", "bodyText": "Can we have the MetricsWriterContext contains the MetricsContext getMetricsContext() method so that we only need to pass in one context object?", "author": "chtyim", "createdAt": "2020-07-07T21:37:30Z", "path": "cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriter.java", "diffHunk": "@@ -37,7 +37,7 @@\n    *\n    * @param metricsContext metricsContext to be used for the MetricsWriter\n    */\n-  void initialize(MetricsContext metricsContext);\n+  void initialize(MetricsContext metricsContext, MetricsWriterContext metricsWriterContext);", "originalCommit": "43e3754184666685aca0e8fd8094563c9aeaf3c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4OTU1NA==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r451189554", "bodyText": "done.", "author": "rmstar", "createdAt": "2020-07-07T22:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE1ODMyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "e09373b3dab13dfbed655eacf80aedf703d085c7", "chunk": "diff --git a/cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriter.java b/cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriter.java\nindex b4a29c02694..a464f87648c 100644\n--- a/cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriter.java\n+++ b/cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriter.java\n\n@@ -35,9 +35,9 @@ public interface MetricsWriter extends Closeable {\n   /**\n    * Init method to setup configurations for this MetricsWriter\n    *\n-   * @param metricsContext metricsContext to be used for the MetricsWriter\n+   * @param metricsWriterContext metricsWriterContext to be used for the MetricsWriter\n    */\n-  void initialize(MetricsContext metricsContext, MetricsWriterContext metricsWriterContext);\n+  void initialize(MetricsWriterContext metricsWriterContext);\n \n   /**\n    * Getter for the unique ID of this MetricsWriter\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTYwOQ==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r451255609", "bodyText": "Remove extra space. Also, since this is an API object, please add javadoc for all methods. Also, it is better for this to be an interface and have the implementation separated out in the non-api module.", "author": "chtyim", "createdAt": "2020-07-08T03:05:34Z", "path": "cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriterContext.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.api.metrics;\n+\n+/**\n+ * Context passed to {@link MetricsWriter#initialize(MetricsContext, MetricsWriterContext)}.\n+ */\n+public final class MetricsWriterContext {\n+  private final String metricsWriterFilePath;\n+  private final MetricsContext metricsContext;\n+\n+  public MetricsWriterContext(MetricsContext metricsContext, String metricsWriterFilePath) {\n+    this.metricsWriterFilePath = metricsWriterFilePath;\n+    this.metricsContext = metricsContext;\n+  }\n+\n+  public  String getMetricsWriterFilePath() {", "originalCommit": "6c4b1cd21c99bd83b66fa3636b414205a0207012", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTczNA==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r451255734", "bodyText": "and why is a file path needs to be available at the context object? Is it generic?", "author": "chtyim", "createdAt": "2020-07-08T03:06:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTYwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2Njc1NQ==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r451266755", "bodyText": "and why is a file path needs to be available at the context object?  Is it generic?\n\nThe file path is only used by the stackdriver extension, not used by MetricStoreMetricsWriter. If we remove the file path from the context object, how will the stackdriver extension get the file path?\n\nAlso, it is better for this to be an interface and have the implementation separated out in the non-api module.\n\nThe stackdriver extension lives in a different repo (GoB). It only has access to the API module.", "author": "rmstar", "createdAt": "2020-07-08T03:50:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTYwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3MjAxMg==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r451872012", "bodyText": "Fixed.", "author": "rmstar", "createdAt": "2020-07-08T23:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTYwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e09373b3dab13dfbed655eacf80aedf703d085c7", "chunk": "diff --git a/cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriterContext.java b/cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriterContext.java\nindex afc1352d012..a4701d9b24f 100644\n--- a/cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriterContext.java\n+++ b/cdap-watchdog-api/src/main/java/io/cdap/cdap/api/metrics/MetricsWriterContext.java\n\n@@ -16,23 +16,22 @@\n \n package io.cdap.cdap.api.metrics;\n \n+import java.util.Map;\n+\n /**\n- * Context passed to {@link MetricsWriter#initialize(MetricsContext, MetricsWriterContext)}.\n+ * Context passed to {@link MetricsWriter#initialize(MetricsWriterContext)}.\n  */\n-public final class MetricsWriterContext {\n-  private final String metricsWriterFilePath;\n-  private final MetricsContext metricsContext;\n-\n-  public MetricsWriterContext(MetricsContext metricsContext, String metricsWriterFilePath) {\n-    this.metricsWriterFilePath = metricsWriterFilePath;\n-    this.metricsContext = metricsContext;\n-  }\n-\n-  public  String getMetricsWriterFilePath() {\n-    return metricsWriterFilePath;\n-  }\n+public interface MetricsWriterContext {\n+  /**\n+   * Properties are derived from the CDAP configuration. Configuration file path will be\n+   * added as an entry in the  properties.\n+   *\n+   * @return unmodifiable properties for the metrics writer.\n+   */\n+  Map<String, String> getProperties();\n \n-  public MetricsContext getMetricsContext() {\n-    return metricsContext;\n-  }\n+  /**\n+   * @return encapsulated {@link MetricsContext}.\n+   */\n+  MetricsContext getMetricsContext();\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODM2OQ==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r453138369", "bodyText": "This belongs to the extension? Shouldn't be defined in CDAP", "author": "chtyim", "createdAt": "2020-07-11T01:28:20Z", "path": "cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java", "diffHunk": "@@ -639,6 +639,9 @@\n \n     public static final String METRICS_WRITER_EXTENSIONS_DIR = \"metrics.writer.extensions.dir\";\n \n+    // Metrics writer configuration file path.\n+    public static final String METRICS_WRITER_CONFIG_PATH = \"metrics.writer.config.path\";", "originalCommit": "f7fccc75a4d434d79393dce9a61e655e34c37bcd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3NDY3Ng==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r453474676", "bodyText": "fixed", "author": "rmstar", "createdAt": "2020-07-13T08:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODM2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e09373b3dab13dfbed655eacf80aedf703d085c7", "chunk": "diff --git a/cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java b/cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java\nindex 8b42a86714a..ad761c2307d 100644\n--- a/cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java\n+++ b/cdap-common/src/main/java/io/cdap/cdap/common/conf/Constants.java\n\n@@ -638,6 +640,7 @@ public final class Constants {\n     public static final String TWILL_INSTANCE_ID = \"metrics.twill.instance.id\";\n \n     public static final String METRICS_WRITER_EXTENSIONS_DIR = \"metrics.writer.extensions.dir\";\n+    public static final String METRICS_WRITER_PREFIX = \"metrics.writer.\";\n \n     // Metrics writer configuration file path.\n     public static final String METRICS_WRITER_CONFIG_PATH = \"metrics.writer.config.path\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODQxMA==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r453138410", "bodyText": "Why have this??", "author": "chtyim", "createdAt": "2020-07-11T01:28:49Z", "path": "cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/DefaultMetricsWriterContext.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.metrics.process;\n+\n+import io.cdap.cdap.api.metrics.MetricsContext;\n+import io.cdap.cdap.api.metrics.MetricsWriterContext;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Default implementation of {@link MetricsWriterContext}.\n+ */\n+public final class DefaultMetricsWriterContext implements MetricsWriterContext {\n+\n+  private static final String metricsFilePathKey = \"metricsFilePath\";\n+  private final String metricsWriterFilePath;\n+  private final MetricsContext metricsContext;\n+\n+  public DefaultMetricsWriterContext(MetricsContext metricsContext, String metricsWriterFilePath) {\n+    this.metricsWriterFilePath = metricsWriterFilePath;\n+    this.metricsContext = metricsContext;\n+  }\n+\n+  public MetricsContext getMetricsContext() {\n+    return metricsContext;\n+  }\n+\n+  public Map<String, String> getProperties() {\n+    Map<String, String> properties = new HashMap<>();\n+    properties.put(metricsFilePathKey, metricsWriterFilePath);", "originalCommit": "f7fccc75a4d434d79393dce9a61e655e34c37bcd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODQ0MA==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r453138440", "bodyText": "The set of properties for a given metrics writer should be configurable and coming from CConfiguration", "author": "chtyim", "createdAt": "2020-07-11T01:29:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODQxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3NDcyNQ==", "url": "https://github.com/cdapio/cdap/pull/12437#discussion_r453474725", "bodyText": "fixed", "author": "rmstar", "createdAt": "2020-07-13T08:18:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzODQxMA=="}], "type": "inlineReview", "revised_code": {"commit": "e09373b3dab13dfbed655eacf80aedf703d085c7", "chunk": "diff --git a/cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/DefaultMetricsWriterContext.java b/cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/DefaultMetricsWriterContext.java\nindex d0606232132..7e1bc1db789 100644\n--- a/cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/DefaultMetricsWriterContext.java\n+++ b/cdap-watchdog/src/main/java/io/cdap/cdap/metrics/process/DefaultMetricsWriterContext.java\n\n@@ -18,22 +18,23 @@ package io.cdap.cdap.metrics.process;\n \n import io.cdap.cdap.api.metrics.MetricsContext;\n import io.cdap.cdap.api.metrics.MetricsWriterContext;\n+import io.cdap.cdap.common.conf.CConfiguration;\n+import io.cdap.cdap.common.conf.Constants;\n import java.util.Collections;\n-import java.util.HashMap;\n import java.util.Map;\n \n /**\n  * Default implementation of {@link MetricsWriterContext}.\n  */\n-public final class DefaultMetricsWriterContext implements MetricsWriterContext {\n+public class DefaultMetricsWriterContext implements MetricsWriterContext {\n \n-  private static final String metricsFilePathKey = \"metricsFilePath\";\n-  private final String metricsWriterFilePath;\n   private final MetricsContext metricsContext;\n+  private final Map<String, String> properties;\n \n-  public DefaultMetricsWriterContext(MetricsContext metricsContext, String metricsWriterFilePath) {\n-    this.metricsWriterFilePath = metricsWriterFilePath;\n+  DefaultMetricsWriterContext(MetricsContext metricsContext, CConfiguration cConf, String metricsWriterId) {\n     this.metricsContext = metricsContext;\n+    String prefix = String.format(\"%s%s.\", Constants.Metrics.METRICS_WRITER_PREFIX, metricsWriterId);\n+    this.properties = Collections.unmodifiableMap(cConf.getPropsWithPrefix(prefix));\n   }\n \n   public MetricsContext getMetricsContext() {\n"}}, {"oid": "e09373b3dab13dfbed655eacf80aedf703d085c7", "url": "https://github.com/cdapio/cdap/commit/e09373b3dab13dfbed655eacf80aedf703d085c7", "message": "[CDAP-16873] Pass MetricsWriterContext to metrics writers.\n\nMetricsWriterContext has the metrics writer configuration file path.", "committedDate": "2020-07-13T08:20:07Z", "type": "forcePushed"}, {"oid": "9a2c9923a856058a5e4206f3f749da1a5216247a", "url": "https://github.com/cdapio/cdap/commit/9a2c9923a856058a5e4206f3f749da1a5216247a", "message": "[CDAP-16873] Pass MetricsWriterContext to metrics writers.\n\nMetricsWriterContext has the metrics writer configuration file path.", "committedDate": "2020-07-14T21:33:13Z", "type": "commit"}, {"oid": "9a2c9923a856058a5e4206f3f749da1a5216247a", "url": "https://github.com/cdapio/cdap/commit/9a2c9923a856058a5e4206f3f749da1a5216247a", "message": "[CDAP-16873] Pass MetricsWriterContext to metrics writers.\n\nMetricsWriterContext has the metrics writer configuration file path.", "committedDate": "2020-07-14T21:33:13Z", "type": "forcePushed"}]}