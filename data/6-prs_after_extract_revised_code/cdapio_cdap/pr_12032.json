{"pr_number": 12032, "pr_title": "(CDAP-16353) Support preview to run with non-sharing local level DB.", "pr_createdAt": "2020-04-03T05:22:06Z", "pr_url": "https://github.com/cdapio/cdap/pull/12032", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Njc1NA==", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r402746754", "bodyText": "nice that we don't need this anymore", "author": "albertshau", "createdAt": "2020-04-03T05:38:33Z", "path": "cdap-master/src/test/java/io/cdap/cdap/master/environment/k8s/PreviewServiceMainTest.java", "diffHunk": "@@ -39,82 +42,223 @@\n import org.apache.twill.filesystem.LocalLocationFactory;\n import org.apache.twill.filesystem.Location;\n import org.apache.twill.filesystem.LocationFactory;\n+import org.junit.After;\n import org.junit.Assert;\n import org.junit.Test;\n \n+import java.io.IOException;\n import java.io.InputStream;\n+import java.lang.reflect.Type;\n import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n+import java.util.jar.Manifest;\n \n /**\n  * Unit test for {@link AppFabricServiceMain}.\n  */\n public class PreviewServiceMainTest extends MasterServiceMainTestBase {\n   private static final Gson GSON = new Gson();\n \n-  @Test\n-  public void testPreviewService() throws Exception {\n+  private static final Type ARTIFACT_SUMMARY_LIST = new TypeToken<List<ArtifactSummary>>() { }.getType();\n+\n+  @After\n+  public void after() throws IOException {\n+    deleteAllArtifact();\n+  }\n \n-    // Deploy the app artifact\n+  @Test\n+  public void testPreviewSimpleApp() throws Exception {\n+    // Build the app\n     LocationFactory locationFactory = new LocalLocationFactory(TEMP_FOLDER.newFolder());\n     Location appJar = AppJarHelper.createDeploymentJar(locationFactory, PreviewTestApp.class);\n \n+    // Deploy the app\n     String artifactName = PreviewTestApp.class.getSimpleName();\n     String artifactVersion = \"1.0.0-SNAPSHOT\";\n+    deployArtifact(appJar, artifactName, artifactVersion);\n \n-    HttpRequestConfig requestConfig = new HttpRequestConfig(0, 0, false);\n-    URL url = getRouterBaseURI().resolve(String.format(\"/v3/namespaces/default/artifacts/%s\", artifactName)).toURL();\n-    HttpResponse response = HttpRequests.execute(\n-      HttpRequest.post(url)\n-        .withBody((ContentProvider<? extends InputStream>) appJar::getInputStream)\n-        .addHeader(\"Artifact-Version\", artifactVersion)\n-        .build(), requestConfig);\n-    Assert.assertEquals(HttpURLConnection.HTTP_OK, response.getResponseCode());\n+    // Start the preview service main, which will use its own local datadir, thus should fetch artifact location\n+    // from appFabric when running a preview\n+    startService(PreviewServiceMain.class);\n \n-    // have to stop AppFabric so that Preview can share the same leveldb table", "originalCommit": "be15f9c04eddb7f7a49755b89ce660003f287d1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1MDY5NQ==", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r402750695", "bodyText": "Ideally we should have another test that spin up SQL. If time permits, will look into add that.", "author": "wyzhang", "createdAt": "2020-04-03T05:53:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Njc1NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Nzk0Mw==", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r402747943", "bodyText": "not really sure how things were working before if app fabric was never getting started before. Unless I'm missing something, it doesn't seem like the changes in this PR would affect TestBase?", "author": "albertshau", "createdAt": "2020-04-03T05:43:05Z", "path": "cdap-unit-test/src/main/java/io/cdap/cdap/test/TestBase.java", "diffHunk": "@@ -369,6 +371,8 @@ protected void configure() {\n     provisioningService = injector.getInstance(ProvisioningService.class);\n     provisioningService.startAndWait();\n     metadataSubscriberService.startAndWait();\n+    appFabricServer = injector.getInstance(AppFabricServer.class);\n+    appFabricServer.startAndWait();", "originalCommit": "be15f9c04eddb7f7a49755b89ce660003f287d1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1MzEzNA==", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r402753134", "bodyText": "In unit tests, we always use NOSQL thus will always exercise the remote call code path.\nRemoved for now.\nThought some other preview tests are failing due to AppFabric being not up. Let me run all tests again and see if anything is broken without this.", "author": "wyzhang", "createdAt": "2020-04-03T06:01:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Nzk0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNTk2Mg==", "url": "https://github.com/cdapio/cdap/pull/12032#discussion_r403515962", "bodyText": "@albertshau Without starting AppFabric, PreviewDataPipelineTest fails as we use NOSQL in test and preview in this case fetch artifact, preferences from appfabric. Previously preview just access local levelDB directly. Need to bring back this starting up appfabric.", "author": "wyzhang", "createdAt": "2020-04-04T20:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Nzk0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ecd324ff66cecd1ac351fb5f0348395852a11062", "chunk": "diff --git a/cdap-unit-test/src/main/java/io/cdap/cdap/test/TestBase.java b/cdap-unit-test/src/main/java/io/cdap/cdap/test/TestBase.java\nindex a35dcb5caa1..6630ccf9449 100644\n--- a/cdap-unit-test/src/main/java/io/cdap/cdap/test/TestBase.java\n+++ b/cdap-unit-test/src/main/java/io/cdap/cdap/test/TestBase.java\n\n@@ -368,14 +357,20 @@ public class TestBase {\n     previewManager = injector.getInstance(PreviewManager.class);\n     fieldLineageAdmin = injector.getInstance(FieldLineageAdmin.class);\n     lineageAdmin = injector.getInstance(LineageAdmin.class);\n-    provisioningService = injector.getInstance(ProvisioningService.class);\n-    provisioningService.startAndWait();\n     metadataSubscriberService.startAndWait();\n-    appFabricServer = injector.getInstance(AppFabricServer.class);\n-    appFabricServer.startAndWait();\n     if (previewManager instanceof Service) {\n       ((Service) previewManager).startAndWait();\n     }\n+    appFabricServer = injector.getInstance(AppFabricServer.class);\n+    appFabricServer.startAndWait();\n+\n+    scheduler = injector.getInstance(Scheduler.class);\n+    if (scheduler instanceof Service) {\n+      ((Service) scheduler).startAndWait();\n+    }\n+    if (scheduler instanceof CoreSchedulerService) {\n+      ((CoreSchedulerService) scheduler).waitUntilFunctional(10, TimeUnit.SECONDS);\n+    }\n   }\n \n   /**\n"}}, {"oid": "00f4a0d3065803b8eeb25ff81504de7198e11aa5", "url": "https://github.com/cdapio/cdap/commit/00f4a0d3065803b8eeb25ff81504de7198e11aa5", "message": "(CDAP-16353) Support preview to run with non-sharing local level DB.\n\nWhy:\nAllow preview to run with its own local levelDB. This allows us to\ndeploy cdap in a dsitributed fashion without shared underlyihg\nstorage when storage impl is NOSQL.\n\nWhat:\nThis change allow preview to run with local levelDB when data storage\nis NOSQL. It achieves this by binding interface to local vs remote\nimplementation dynamically depending on storage impelementation config.\n\nThe crux of the chagne is in DefaultPreviewRunnerModule where we bind\nfollowing interafces to local impl for SQL and remote for NOSQL\n* ArtifactRepositoryReader\n* PluginFinder\n* PreferencesFetcher\n\nChanges in tests:\n* Starting AppFabric in TestBase (required by PreviewDataPipelineTest) as\n  we use NOSQL in unit tests, therefore bindings use remote impls for\n  above interafces and need to talk to AppFabric\n* PreviewServiceMainTest now no longer needs to workaround the issue of\n  non-sharing local levelDB (previously it needs to shutdown AppFabric\n  before starting preview so as to have levelDB state updated by AppFabric\n  to be visible to preview in order for it to work)\n* Extend PreviewServiceMainTest with a new test case where app has plugin\n  (in order to cover plugin finder code path in preview), thus better\n  test coverage.", "committedDate": "2020-04-05T06:20:43Z", "type": "forcePushed"}, {"oid": "d0128ba929cf02510a78e904051f6b07019d5ba5", "url": "https://github.com/cdapio/cdap/commit/d0128ba929cf02510a78e904051f6b07019d5ba5", "message": "(CDAP-16353) Support preview to run with non-sharing local level DB.\n\nWhy:\nAllow preview to run with its own local levelDB. This allows us to\ndeploy cdap in a dsitributed fashion without shared underlyihg\nstorage when storage impl is NOSQL.\n\nWhat:\nThis change allow preview to run with local levelDB when data storage\nis NOSQL. It achieves this by binding interface to local vs remote\nimplementation dynamically depending on storage impelementation config.\n\nThe crux of the chagne is in DefaultPreviewRunnerModule where we bind\nfollowing interafces to local impl for SQL and remote for NOSQL\n* ArtifactRepositoryReader\n* PluginFinder\n* PreferencesFetcher\n\nChanges in tests:\n* Starting AppFabric in TestBase (required by PreviewDataPipelineTest) as\n  we use NOSQL in unit tests, therefore bindings use remote impls for\n  above interafces and need to talk to AppFabric\n* PreviewServiceMainTest now no longer needs to workaround the issue of\n  non-sharing local levelDB (previously it needs to shutdown AppFabric\n  before starting preview so as to have levelDB state updated by AppFabric\n  to be visible to preview in order for it to work)\n* Extend PreviewServiceMainTest with a new test case where app has plugin\n  (in order to cover plugin finder code path in preview), thus better\n  test coverage.", "committedDate": "2020-04-05T06:24:14Z", "type": "forcePushed"}, {"oid": "ecd324ff66cecd1ac351fb5f0348395852a11062", "url": "https://github.com/cdapio/cdap/commit/ecd324ff66cecd1ac351fb5f0348395852a11062", "message": "(CDAP-16353) Support preview to run with non-sharing local level DB.\n\nWhy:\nAllow preview to run with its own local levelDB. This allows us to\ndeploy cdap in a dsitributed fashion without shared underlyihg\nstorage when storage impl is NOSQL.\n\nWhat:\nThis change allow preview to run with local levelDB when data storage\nis NOSQL. It achieves this by binding interface to local vs remote\nimplementation dynamically depending on storage impelementation config.\n\nThe crux of the chagne is in DefaultPreviewRunnerModule where we bind\nfollowing interafces to local impl for SQL and remote for NOSQL\n* ArtifactRepositoryReader\n* PluginFinder\n* PreferencesFetcher\n\nChanges in tests:\n* Starting AppFabric in TestBase (required by PreviewDataPipelineTest) as\n  we use NOSQL in unit tests, therefore bindings use remote impls for\n  above interafces and need to talk to AppFabric\n* PreviewServiceMainTest now no longer needs to workaround the issue of\n  non-sharing local levelDB (previously it needs to shutdown AppFabric\n  before starting preview so as to have levelDB state updated by AppFabric\n  to be visible to preview in order for it to work)\n* Extend PreviewServiceMainTest with a new test case where app has plugin\n  (in order to cover plugin finder code path in preview), thus better\n  test coverage.", "committedDate": "2020-04-06T05:35:46Z", "type": "commit"}, {"oid": "ecd324ff66cecd1ac351fb5f0348395852a11062", "url": "https://github.com/cdapio/cdap/commit/ecd324ff66cecd1ac351fb5f0348395852a11062", "message": "(CDAP-16353) Support preview to run with non-sharing local level DB.\n\nWhy:\nAllow preview to run with its own local levelDB. This allows us to\ndeploy cdap in a dsitributed fashion without shared underlyihg\nstorage when storage impl is NOSQL.\n\nWhat:\nThis change allow preview to run with local levelDB when data storage\nis NOSQL. It achieves this by binding interface to local vs remote\nimplementation dynamically depending on storage impelementation config.\n\nThe crux of the chagne is in DefaultPreviewRunnerModule where we bind\nfollowing interafces to local impl for SQL and remote for NOSQL\n* ArtifactRepositoryReader\n* PluginFinder\n* PreferencesFetcher\n\nChanges in tests:\n* Starting AppFabric in TestBase (required by PreviewDataPipelineTest) as\n  we use NOSQL in unit tests, therefore bindings use remote impls for\n  above interafces and need to talk to AppFabric\n* PreviewServiceMainTest now no longer needs to workaround the issue of\n  non-sharing local levelDB (previously it needs to shutdown AppFabric\n  before starting preview so as to have levelDB state updated by AppFabric\n  to be visible to preview in order for it to work)\n* Extend PreviewServiceMainTest with a new test case where app has plugin\n  (in order to cover plugin finder code path in preview), thus better\n  test coverage.", "committedDate": "2020-04-06T05:35:46Z", "type": "forcePushed"}]}