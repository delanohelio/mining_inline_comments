{"pr_number": 12158, "pr_title": "[CDAP-16453] Using setConf for delegateFormat in getSplits so delegateFormat.setConf will be called in all cases", "pr_createdAt": "2020-05-07T02:04:12Z", "pr_url": "https://github.com/cdapio/cdap/pull/12158", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NDI1NQ==", "url": "https://github.com/cdapio/cdap/pull/12158#discussion_r421674255", "bodyText": "this is pretty messy because it uses the fact that setConf() creates the delegate.\nIt's better to change setConf to only set the configuration object, and to change createDelegate() to call the delegate's setConf method if it is Configurable.\nThe createRecordReader() method should also be changed to call createDelegate(), passing in the Configuration that comes from the context.", "author": "albertshau", "createdAt": "2020-05-07T17:32:12Z", "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java", "diffHunk": "@@ -46,7 +46,10 @@\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n     Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    List<InputSplit> splits = createDelegate(conf).getSplits(context);\n+    if (delegateFormat == null) {\n+      setConf(conf);", "originalCommit": "16c142dc7e377ece4a983a16706f04cbb0b483f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00e61c4b9c8f43c5d91e88eaddad853bcfbc480b", "chunk": "diff --git a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\nindex ac5b7e771f1..cba8163962d 100644\n--- a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n+++ b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n\n@@ -39,30 +39,30 @@ public class LimitingInputFormat<K, V> extends InputFormat<K, V> implements Conf\n   static final String DELEGATE_CLASS_NAME = \"io.cdap.pipeline.preview.input.classname\";\n   static final String MAX_RECORDS = \"io.cdap.pipeline.preview.max.records\";\n \n-  private InputFormat<K, V> delegateFormat;\n   private Configuration conf;\n \n   @Override\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n-    Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    if (delegateFormat == null) {\n-      setConf(conf);\n-    }\n-    List<InputSplit> splits = delegateFormat.getSplits(context);\n+    List<InputSplit> splits = getDelegate().getSplits(context);\n     return Collections.singletonList(new LimitingInputSplit(getConf(), splits, maxRecords));\n   }\n \n   @Override\n-  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) {\n-    return new LimitingRecordReader<>(delegateFormat);\n+  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException {\n+    return new LimitingRecordReader<>(getDelegate());\n   }\n \n-  private InputFormat<K, V> createDelegate(Configuration conf) throws IOException {\n+  private InputFormat<K, V> getDelegate() throws IOException {\n     String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n     try {\n       //noinspection unchecked\n-      return (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n+      InputFormat<K, V> kvInputFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName)\n+        .newInstance();\n+      if (kvInputFormat instanceof Configurable) {\n+        ((Configurable) kvInputFormat).setConf(conf);\n+      }\n+      return kvInputFormat;\n     } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n       throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NzgwMA==", "url": "https://github.com/cdapio/cdap/pull/12158#discussion_r421957800", "bodyText": "Don't mutate the conf field here.", "author": "chtyim", "createdAt": "2020-05-08T06:08:23Z", "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java", "diffHunk": "@@ -46,33 +46,36 @@\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n     Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    List<InputSplit> splits = createDelegate(conf).getSplits(context);\n+    List<InputSplit> splits = getDelegate(conf).getSplits(context);\n     return Collections.singletonList(new LimitingInputSplit(getConf(), splits, maxRecords));\n   }\n \n   @Override\n-  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) {\n-    return new LimitingRecordReader<>(delegateFormat);\n+  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException {\n+    return new LimitingRecordReader<>(getDelegate(context.getConfiguration()));\n   }\n \n-  private InputFormat<K, V> createDelegate(Configuration conf) throws IOException {\n-    String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n-    try {\n-      //noinspection unchecked\n-      return (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n-    } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n-      throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+  private InputFormat<K, V> getDelegate(Configuration conf) throws IOException {\n+    if (delegateFormat == null || !conf.get(DELEGATE_CLASS_NAME).equals(this.conf.get(DELEGATE_CLASS_NAME))) {\n+      String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n+      try {\n+        //noinspection unchecked\n+        delegateFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n+        if (delegateFormat instanceof Configurable) {\n+          ((Configurable) delegateFormat).setConf(conf);\n+        }\n+        this.conf = conf;", "originalCommit": "5ea0873d31be2ba9395085508dd2863689ef2d1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00e61c4b9c8f43c5d91e88eaddad853bcfbc480b", "chunk": "diff --git a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\nindex 54060eda9aa..cba8163962d 100644\n--- a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n+++ b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n\n@@ -39,46 +39,38 @@ public class LimitingInputFormat<K, V> extends InputFormat<K, V> implements Conf\n   static final String DELEGATE_CLASS_NAME = \"io.cdap.pipeline.preview.input.classname\";\n   static final String MAX_RECORDS = \"io.cdap.pipeline.preview.max.records\";\n \n-  private InputFormat<K, V> delegateFormat;\n   private Configuration conf;\n \n   @Override\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n-    Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    List<InputSplit> splits = getDelegate(conf).getSplits(context);\n+    List<InputSplit> splits = getDelegate().getSplits(context);\n     return Collections.singletonList(new LimitingInputSplit(getConf(), splits, maxRecords));\n   }\n \n   @Override\n   public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException {\n-    return new LimitingRecordReader<>(getDelegate(context.getConfiguration()));\n+    return new LimitingRecordReader<>(getDelegate());\n   }\n \n-  private InputFormat<K, V> getDelegate(Configuration conf) throws IOException {\n-    if (delegateFormat == null || !conf.get(DELEGATE_CLASS_NAME).equals(this.conf.get(DELEGATE_CLASS_NAME))) {\n-      String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n-      try {\n-        //noinspection unchecked\n-        delegateFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n-        if (delegateFormat instanceof Configurable) {\n-          ((Configurable) delegateFormat).setConf(conf);\n-        }\n-        this.conf = conf;\n-      } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n-        throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+  private InputFormat<K, V> getDelegate() throws IOException {\n+    String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n+    try {\n+      //noinspection unchecked\n+      InputFormat<K, V> kvInputFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName)\n+        .newInstance();\n+      if (kvInputFormat instanceof Configurable) {\n+        ((Configurable) kvInputFormat).setConf(conf);\n       }\n+      return kvInputFormat;\n+    } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n+      throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n     }\n-    return delegateFormat;\n   }\n \n   @Override\n   public void setConf(Configuration conf) {\n-    try {\n-      getDelegate(conf);\n-    } catch (IOException e) {\n-      throw new RuntimeException(e);\n-    }\n+    this.conf = conf;\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NzgzNw==", "url": "https://github.com/cdapio/cdap/pull/12158#discussion_r421957837", "bodyText": "Should keep this.", "author": "chtyim", "createdAt": "2020-05-08T06:08:34Z", "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java", "diffHunk": "@@ -46,33 +46,36 @@\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n     Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    List<InputSplit> splits = createDelegate(conf).getSplits(context);\n+    List<InputSplit> splits = getDelegate(conf).getSplits(context);\n     return Collections.singletonList(new LimitingInputSplit(getConf(), splits, maxRecords));\n   }\n \n   @Override\n-  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) {\n-    return new LimitingRecordReader<>(delegateFormat);\n+  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException {\n+    return new LimitingRecordReader<>(getDelegate(context.getConfiguration()));\n   }\n \n-  private InputFormat<K, V> createDelegate(Configuration conf) throws IOException {\n-    String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n-    try {\n-      //noinspection unchecked\n-      return (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n-    } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n-      throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+  private InputFormat<K, V> getDelegate(Configuration conf) throws IOException {\n+    if (delegateFormat == null || !conf.get(DELEGATE_CLASS_NAME).equals(this.conf.get(DELEGATE_CLASS_NAME))) {\n+      String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n+      try {\n+        //noinspection unchecked\n+        delegateFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n+        if (delegateFormat instanceof Configurable) {\n+          ((Configurable) delegateFormat).setConf(conf);\n+        }\n+        this.conf = conf;\n+      } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n+        throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+      }\n     }\n+    return delegateFormat;\n   }\n \n   @Override\n   public void setConf(Configuration conf) {\n     try {\n-      delegateFormat = createDelegate(conf);\n-      if (delegateFormat instanceof Configurable) {\n-        ((Configurable) delegateFormat).setConf(conf);\n-      }\n-      this.conf = conf;", "originalCommit": "5ea0873d31be2ba9395085508dd2863689ef2d1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00e61c4b9c8f43c5d91e88eaddad853bcfbc480b", "chunk": "diff --git a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\nindex 54060eda9aa..cba8163962d 100644\n--- a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n+++ b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n\n@@ -39,46 +39,38 @@ public class LimitingInputFormat<K, V> extends InputFormat<K, V> implements Conf\n   static final String DELEGATE_CLASS_NAME = \"io.cdap.pipeline.preview.input.classname\";\n   static final String MAX_RECORDS = \"io.cdap.pipeline.preview.max.records\";\n \n-  private InputFormat<K, V> delegateFormat;\n   private Configuration conf;\n \n   @Override\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n-    Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    List<InputSplit> splits = getDelegate(conf).getSplits(context);\n+    List<InputSplit> splits = getDelegate().getSplits(context);\n     return Collections.singletonList(new LimitingInputSplit(getConf(), splits, maxRecords));\n   }\n \n   @Override\n   public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException {\n-    return new LimitingRecordReader<>(getDelegate(context.getConfiguration()));\n+    return new LimitingRecordReader<>(getDelegate());\n   }\n \n-  private InputFormat<K, V> getDelegate(Configuration conf) throws IOException {\n-    if (delegateFormat == null || !conf.get(DELEGATE_CLASS_NAME).equals(this.conf.get(DELEGATE_CLASS_NAME))) {\n-      String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n-      try {\n-        //noinspection unchecked\n-        delegateFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n-        if (delegateFormat instanceof Configurable) {\n-          ((Configurable) delegateFormat).setConf(conf);\n-        }\n-        this.conf = conf;\n-      } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n-        throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+  private InputFormat<K, V> getDelegate() throws IOException {\n+    String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n+    try {\n+      //noinspection unchecked\n+      InputFormat<K, V> kvInputFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName)\n+        .newInstance();\n+      if (kvInputFormat instanceof Configurable) {\n+        ((Configurable) kvInputFormat).setConf(conf);\n       }\n+      return kvInputFormat;\n+    } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n+      throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n     }\n-    return delegateFormat;\n   }\n \n   @Override\n   public void setConf(Configuration conf) {\n-    try {\n-      getDelegate(conf);\n-    } catch (IOException e) {\n-      throw new RuntimeException(e);\n-    }\n+    this.conf = conf;\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1Nzg3OQ==", "url": "https://github.com/cdapio/cdap/pull/12158#discussion_r421957879", "bodyText": "Should remove this.", "author": "chtyim", "createdAt": "2020-05-08T06:08:41Z", "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java", "diffHunk": "@@ -46,33 +46,36 @@\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n     Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    List<InputSplit> splits = createDelegate(conf).getSplits(context);\n+    List<InputSplit> splits = getDelegate(conf).getSplits(context);\n     return Collections.singletonList(new LimitingInputSplit(getConf(), splits, maxRecords));\n   }\n \n   @Override\n-  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) {\n-    return new LimitingRecordReader<>(delegateFormat);\n+  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException {\n+    return new LimitingRecordReader<>(getDelegate(context.getConfiguration()));\n   }\n \n-  private InputFormat<K, V> createDelegate(Configuration conf) throws IOException {\n-    String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n-    try {\n-      //noinspection unchecked\n-      return (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n-    } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n-      throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+  private InputFormat<K, V> getDelegate(Configuration conf) throws IOException {\n+    if (delegateFormat == null || !conf.get(DELEGATE_CLASS_NAME).equals(this.conf.get(DELEGATE_CLASS_NAME))) {\n+      String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n+      try {\n+        //noinspection unchecked\n+        delegateFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n+        if (delegateFormat instanceof Configurable) {\n+          ((Configurable) delegateFormat).setConf(conf);\n+        }\n+        this.conf = conf;\n+      } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n+        throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+      }\n     }\n+    return delegateFormat;\n   }\n \n   @Override\n   public void setConf(Configuration conf) {\n     try {\n-      delegateFormat = createDelegate(conf);\n-      if (delegateFormat instanceof Configurable) {\n-        ((Configurable) delegateFormat).setConf(conf);\n-      }\n-      this.conf = conf;\n+      getDelegate(conf);", "originalCommit": "5ea0873d31be2ba9395085508dd2863689ef2d1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00e61c4b9c8f43c5d91e88eaddad853bcfbc480b", "chunk": "diff --git a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\nindex 54060eda9aa..cba8163962d 100644\n--- a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n+++ b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n\n@@ -39,46 +39,38 @@ public class LimitingInputFormat<K, V> extends InputFormat<K, V> implements Conf\n   static final String DELEGATE_CLASS_NAME = \"io.cdap.pipeline.preview.input.classname\";\n   static final String MAX_RECORDS = \"io.cdap.pipeline.preview.max.records\";\n \n-  private InputFormat<K, V> delegateFormat;\n   private Configuration conf;\n \n   @Override\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n-    Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    List<InputSplit> splits = getDelegate(conf).getSplits(context);\n+    List<InputSplit> splits = getDelegate().getSplits(context);\n     return Collections.singletonList(new LimitingInputSplit(getConf(), splits, maxRecords));\n   }\n \n   @Override\n   public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException {\n-    return new LimitingRecordReader<>(getDelegate(context.getConfiguration()));\n+    return new LimitingRecordReader<>(getDelegate());\n   }\n \n-  private InputFormat<K, V> getDelegate(Configuration conf) throws IOException {\n-    if (delegateFormat == null || !conf.get(DELEGATE_CLASS_NAME).equals(this.conf.get(DELEGATE_CLASS_NAME))) {\n-      String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n-      try {\n-        //noinspection unchecked\n-        delegateFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n-        if (delegateFormat instanceof Configurable) {\n-          ((Configurable) delegateFormat).setConf(conf);\n-        }\n-        this.conf = conf;\n-      } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n-        throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+  private InputFormat<K, V> getDelegate() throws IOException {\n+    String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n+    try {\n+      //noinspection unchecked\n+      InputFormat<K, V> kvInputFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName)\n+        .newInstance();\n+      if (kvInputFormat instanceof Configurable) {\n+        ((Configurable) kvInputFormat).setConf(conf);\n       }\n+      return kvInputFormat;\n+    } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n+      throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n     }\n-    return delegateFormat;\n   }\n \n   @Override\n   public void setConf(Configuration conf) {\n-    try {\n-      getDelegate(conf);\n-    } catch (IOException e) {\n-      throw new RuntimeException(e);\n-    }\n+    this.conf = conf;\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1ODA4NQ==", "url": "https://github.com/cdapio/cdap/pull/12158#discussion_r421958085", "bodyText": "Remove delegateFormat from the field. Just use local variable here.", "author": "chtyim", "createdAt": "2020-05-08T06:09:11Z", "path": "cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java", "diffHunk": "@@ -46,33 +46,36 @@\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n     Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    List<InputSplit> splits = createDelegate(conf).getSplits(context);\n+    List<InputSplit> splits = getDelegate(conf).getSplits(context);\n     return Collections.singletonList(new LimitingInputSplit(getConf(), splits, maxRecords));\n   }\n \n   @Override\n-  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) {\n-    return new LimitingRecordReader<>(delegateFormat);\n+  public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException {\n+    return new LimitingRecordReader<>(getDelegate(context.getConfiguration()));\n   }\n \n-  private InputFormat<K, V> createDelegate(Configuration conf) throws IOException {\n-    String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n-    try {\n-      //noinspection unchecked\n-      return (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n-    } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n-      throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+  private InputFormat<K, V> getDelegate(Configuration conf) throws IOException {\n+    if (delegateFormat == null || !conf.get(DELEGATE_CLASS_NAME).equals(this.conf.get(DELEGATE_CLASS_NAME))) {", "originalCommit": "5ea0873d31be2ba9395085508dd2863689ef2d1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00e61c4b9c8f43c5d91e88eaddad853bcfbc480b", "chunk": "diff --git a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\nindex 54060eda9aa..cba8163962d 100644\n--- a/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n+++ b/cdap-app-templates/cdap-etl/cdap-etl-core/src/main/java/io/cdap/cdap/etl/batch/preview/LimitingInputFormat.java\n\n@@ -39,46 +39,38 @@ public class LimitingInputFormat<K, V> extends InputFormat<K, V> implements Conf\n   static final String DELEGATE_CLASS_NAME = \"io.cdap.pipeline.preview.input.classname\";\n   static final String MAX_RECORDS = \"io.cdap.pipeline.preview.max.records\";\n \n-  private InputFormat<K, V> delegateFormat;\n   private Configuration conf;\n \n   @Override\n   public List<InputSplit> getSplits(JobContext context) throws IOException, InterruptedException {\n-    Configuration conf = context.getConfiguration();\n     int maxRecords = conf.getInt(MAX_RECORDS, 100);\n-    List<InputSplit> splits = getDelegate(conf).getSplits(context);\n+    List<InputSplit> splits = getDelegate().getSplits(context);\n     return Collections.singletonList(new LimitingInputSplit(getConf(), splits, maxRecords));\n   }\n \n   @Override\n   public RecordReader<K, V> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException {\n-    return new LimitingRecordReader<>(getDelegate(context.getConfiguration()));\n+    return new LimitingRecordReader<>(getDelegate());\n   }\n \n-  private InputFormat<K, V> getDelegate(Configuration conf) throws IOException {\n-    if (delegateFormat == null || !conf.get(DELEGATE_CLASS_NAME).equals(this.conf.get(DELEGATE_CLASS_NAME))) {\n-      String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n-      try {\n-        //noinspection unchecked\n-        delegateFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName).newInstance();\n-        if (delegateFormat instanceof Configurable) {\n-          ((Configurable) delegateFormat).setConf(conf);\n-        }\n-        this.conf = conf;\n-      } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n-        throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n+  private InputFormat<K, V> getDelegate() throws IOException {\n+    String delegateClassName = conf.get(DELEGATE_CLASS_NAME);\n+    try {\n+      //noinspection unchecked\n+      InputFormat<K, V> kvInputFormat = (InputFormat<K, V>) conf.getClassLoader().loadClass(delegateClassName)\n+        .newInstance();\n+      if (kvInputFormat instanceof Configurable) {\n+        ((Configurable) kvInputFormat).setConf(conf);\n       }\n+      return kvInputFormat;\n+    } catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {\n+      throw new IOException(\"Unable to instantiate delegate input format \" + delegateClassName, e);\n     }\n-    return delegateFormat;\n   }\n \n   @Override\n   public void setConf(Configuration conf) {\n-    try {\n-      getDelegate(conf);\n-    } catch (IOException e) {\n-      throw new RuntimeException(e);\n-    }\n+    this.conf = conf;\n   }\n \n   @Override\n"}}, {"oid": "00e61c4b9c8f43c5d91e88eaddad853bcfbc480b", "url": "https://github.com/cdapio/cdap/commit/00e61c4b9c8f43c5d91e88eaddad853bcfbc480b", "message": "[CDAP-16453] Using setConf for delegateFormat in getSplits so delegateFormat.setConf will be called in all cases", "committedDate": "2020-05-08T21:45:06Z", "type": "commit"}, {"oid": "00e61c4b9c8f43c5d91e88eaddad853bcfbc480b", "url": "https://github.com/cdapio/cdap/commit/00e61c4b9c8f43c5d91e88eaddad853bcfbc480b", "message": "[CDAP-16453] Using setConf for delegateFormat in getSplits so delegateFormat.setConf will be called in all cases", "committedDate": "2020-05-08T21:45:06Z", "type": "forcePushed"}]}