{"pr_number": 11927, "pr_title": "Adding RuntimeJobManager SPI to launch and manage runtime jobs.", "pr_createdAt": "2020-03-06T12:39:29Z", "pr_url": "https://github.com/cdapio/cdap/pull/11927", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4MDM2NA==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r388980364", "bodyText": "The second sentence is unnecessary.", "author": "chtyim", "createdAt": "2020-03-06T15:48:12Z", "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/provisioner/Provisioner.java", "diffHunk": "@@ -141,4 +144,14 @@ default void initializeCluster(ProvisionerContext context, Cluster cluster) thro\n    */\n   Capabilities getCapabilities();\n \n+  /**\n+   * Returns {@link RuntimeJobManager} to launch and manage runtime job. This method should return a concrete instance\n+   * of runtime job manager.", "originalCommit": "21176772f535324f32f77da876f6937d0dc13b7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMTM5NA==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389111394", "bodyText": "Also should call out what's the default behavior.", "author": "chtyim", "createdAt": "2020-03-06T19:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4MDM2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEzMzA5MQ==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389133091", "bodyText": "The second sentence is unnecessary.\n\nremoved\n\nAlso should call out what's the default behavior.\n\nyea its added in the return statement.", "author": "CuriousVini", "createdAt": "2020-03-06T20:40:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4MDM2NA=="}], "type": "inlineReview", "revised_code": {"commit": "9496423f6c5f063f112b6d0310653d1a5e5442ec", "chunk": "diff --git a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/provisioner/Provisioner.java b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/provisioner/Provisioner.java\nindex 0779d98695d..183d0fb9c88 100644\n--- a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/provisioner/Provisioner.java\n+++ b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/provisioner/Provisioner.java\n\n@@ -145,8 +145,8 @@ public interface Provisioner {\n   Capabilities getCapabilities();\n \n   /**\n-   * Returns {@link RuntimeJobManager} to launch and manage runtime job. This method should return a concrete instance\n-   * of runtime job manager.\n+   * Returns {@link RuntimeJobManager} to launch and manage runtime job. If the optional is empty, default\n+   * implementation will use ssh to launch and manage jobs.\n    *\n    * @param context provisioner context\n    * @return optional runtime job manager, if it is empty, ssh will be used to launch and manage jobs.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMjExNA==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389112114", "bodyText": "The TwillRunnerService is not part of this interface API. Should better just say \"Represents a job that will be executed on a given runtime environment\".", "author": "chtyim", "createdAt": "2020-03-06T19:51:57Z", "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJob.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.TwillRunnerService;\n+\n+/**\n+ * Represents runtime job that will be submit job to {@link TwillRunnerService}.", "originalCommit": "21176772f535324f32f77da876f6937d0dc13b7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE0MDc0Nw==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389140747", "bodyText": "sounds good.", "author": "CuriousVini", "createdAt": "2020-03-06T20:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMjExNA=="}], "type": "inlineReview", "revised_code": {"commit": "9496423f6c5f063f112b6d0310653d1a5e5442ec", "chunk": "diff --git a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJob.java b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJob.java\nindex a1ce90e3a80..eae792b6097 100644\n--- a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJob.java\n+++ b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJob.java\n\n@@ -16,10 +16,8 @@\n \n package io.cdap.cdap.runtime.spi.runtimejob;\n \n-import org.apache.twill.api.TwillRunnerService;\n-\n /**\n- * Represents runtime job that will be submit job to {@link TwillRunnerService}.\n+ * Represents a job that will be executed on a given runtime environment.\n  */\n public interface RuntimeJob {\n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMjQ3NQ==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389112475", "bodyText": "Can it be TwillRunner instead? The service expose the start and stop methods, meaning the caller of this method will be responsible for the lifecycle of the service. However, I believe in this case, it is the implementation who manage the lifecycle?", "author": "chtyim", "createdAt": "2020-03-06T19:52:48Z", "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.TwillRunner;\n+import org.apache.twill.api.TwillRunnerService;\n+import org.apache.twill.discovery.DiscoveryService;\n+import org.apache.twill.discovery.DiscoveryServiceClient;\n+\n+import java.util.Map;\n+\n+/**\n+ * Represents runtime job environment that provides information that is needed by the {@link RuntimeJob} to run the job.\n+ */\n+public interface RuntimeJobEnvironment {\n+  /**\n+   * Returns a {@link DiscoveryService} for service announcement purpose.\n+   */\n+  DiscoveryService getDiscoveryService();\n+\n+  /**\n+   * Returns a {@link DiscoveryServiceClient} for service discovery purpose.\n+   */\n+  DiscoveryServiceClient getDiscoveryServiceClient();\n+\n+  /**\n+   * Returns a {@link TwillRunnerService} for running {@link TwillRunner}.\n+   */\n+  TwillRunnerService getTwillRunnerService();", "originalCommit": "21176772f535324f32f77da876f6937d0dc13b7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEzNDAxNQ==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389134015", "bodyText": "yea the lifecycle is managed by extension. So we can make it a runner.", "author": "CuriousVini", "createdAt": "2020-03-06T20:43:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMjQ3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "9496423f6c5f063f112b6d0310653d1a5e5442ec", "chunk": "diff --git a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java\nindex 482c6cc71a2..7aad56b94ef 100644\n--- a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java\n+++ b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java\n\n@@ -17,7 +17,6 @@\n package io.cdap.cdap.runtime.spi.runtimejob;\n \n import org.apache.twill.api.TwillRunner;\n-import org.apache.twill.api.TwillRunnerService;\n import org.apache.twill.discovery.DiscoveryService;\n import org.apache.twill.discovery.DiscoveryServiceClient;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMzg2Mw==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389113863", "bodyText": "This is unclear, what are these properties?", "author": "chtyim", "createdAt": "2020-03-06T19:55:56Z", "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.TwillRunner;\n+import org.apache.twill.api.TwillRunnerService;\n+import org.apache.twill.discovery.DiscoveryService;\n+import org.apache.twill.discovery.DiscoveryServiceClient;\n+\n+import java.util.Map;\n+\n+/**\n+ * Represents runtime job environment that provides information that is needed by the {@link RuntimeJob} to run the job.\n+ */\n+public interface RuntimeJobEnvironment {\n+  /**\n+   * Returns a {@link DiscoveryService} for service announcement purpose.\n+   */\n+  DiscoveryService getDiscoveryService();\n+\n+  /**\n+   * Returns a {@link DiscoveryServiceClient} for service discovery purpose.\n+   */\n+  DiscoveryServiceClient getDiscoveryServiceClient();\n+\n+  /**\n+   * Returns a {@link TwillRunnerService} for running {@link TwillRunner}.\n+   */\n+  TwillRunnerService getTwillRunnerService();\n+\n+  /**\n+   * Returns properties to be available to {@link RuntimeJob}.", "originalCommit": "21176772f535324f32f77da876f6937d0dc13b7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE0MTkxNg==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389141916", "bodyText": "modified javadoc", "author": "CuriousVini", "createdAt": "2020-03-06T21:01:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMzg2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "9496423f6c5f063f112b6d0310653d1a5e5442ec", "chunk": "diff --git a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java\nindex 482c6cc71a2..7aad56b94ef 100644\n--- a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java\n+++ b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobEnvironment.java\n\n@@ -17,7 +17,6 @@\n package io.cdap.cdap.runtime.spi.runtimejob;\n \n import org.apache.twill.api.TwillRunner;\n-import org.apache.twill.api.TwillRunnerService;\n import org.apache.twill.discovery.DiscoveryService;\n import org.apache.twill.discovery.DiscoveryServiceClient;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNDM0MQ==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389114341", "bodyText": "Call it getLocalizeFiles.", "author": "chtyim", "createdAt": "2020-03-06T19:57:03Z", "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.LocalFile;\n+import org.apache.twill.api.TwillRunnerService;\n+\n+import java.util.Collection;\n+\n+/**\n+ * Runtime job information. The instance of this interface will be provided to\n+ * {@link RuntimeJobManager#launch(RuntimeJobInfo)} with files to be localized and runtime job class implementation.\n+ */\n+public interface RuntimeJobInfo {\n+  /**\n+   * Returns a collection of files that are used to launch the job.\n+   */\n+  Collection<? extends LocalFile> getFilesToLocalize();", "originalCommit": "21176772f535324f32f77da876f6937d0dc13b7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9496423f6c5f063f112b6d0310653d1a5e5442ec", "chunk": "diff --git a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java\nindex a49f49aa1e3..4bc7bfd931e 100644\n--- a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java\n+++ b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java\n\n@@ -17,7 +17,6 @@\n package io.cdap.cdap.runtime.spi.runtimejob;\n \n import org.apache.twill.api.LocalFile;\n-import org.apache.twill.api.TwillRunnerService;\n \n import java.util.Collection;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNDQ0Mg==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389114442", "bodyText": "Unused import?", "author": "chtyim", "createdAt": "2020-03-06T19:57:18Z", "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import org.apache.twill.api.LocalFile;\n+import org.apache.twill.api.TwillRunnerService;", "originalCommit": "21176772f535324f32f77da876f6937d0dc13b7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEzNDU2NQ==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389134565", "bodyText": "not really, its added because we have a link to TwillRunnerService in javadoc of getRuntimeJobClass() method", "author": "CuriousVini", "createdAt": "2020-03-06T20:44:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNDQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE0MTM4Nw==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389141387", "bodyText": "changed javadoc description to not include link to TwillRunnerService", "author": "CuriousVini", "createdAt": "2020-03-06T21:00:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNDQ0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9496423f6c5f063f112b6d0310653d1a5e5442ec", "chunk": "diff --git a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java\nindex a49f49aa1e3..4bc7bfd931e 100644\n--- a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java\n+++ b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobInfo.java\n\n@@ -17,7 +17,6 @@\n package io.cdap.cdap.runtime.spi.runtimejob;\n \n import org.apache.twill.api.LocalFile;\n-import org.apache.twill.api.TwillRunnerService;\n \n import java.util.Collection;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNDkwNw==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389114907", "bodyText": "Why stop and kill return Future while this one does not?", "author": "chtyim", "createdAt": "2020-03-06T19:58:18Z", "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Runtime job manager to prepare and launch the job.\n+ */\n+public interface RuntimeJobManager {\n+  /**\n+   * This method uses runtime job information to launch the job.\n+   *\n+   * @param runtimeJobInfo runtime job information\n+   * @return unique runtime job id\n+   */\n+  RuntimeJobId launch(RuntimeJobInfo runtimeJobInfo) throws Exception;", "originalCommit": "21176772f535324f32f77da876f6937d0dc13b7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "65bcad8a2b601bba0f8707acfa8d00e3422dc804", "chunk": "diff --git a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java\nindex 8e53f62768e..42531eca831 100644\n--- a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java\n+++ b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java\n\n@@ -18,7 +18,6 @@ package io.cdap.cdap.runtime.spi.runtimejob;\n \n import java.util.List;\n import java.util.Optional;\n-import java.util.concurrent.CompletableFuture;\n \n /**\n  * Runtime job manager to prepare and launch the job.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExNTY0NA==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389115644", "bodyText": "Use the CompletionStage instead. Also, when this method throw Exception and when the returned future will fail? Why this method has to be async?", "author": "chtyim", "createdAt": "2020-03-06T19:59:57Z", "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Runtime job manager to prepare and launch the job.\n+ */\n+public interface RuntimeJobManager {\n+  /**\n+   * This method uses runtime job information to launch the job.\n+   *\n+   * @param runtimeJobInfo runtime job information\n+   * @return unique runtime job id\n+   */\n+  RuntimeJobId launch(RuntimeJobInfo runtimeJobInfo) throws Exception;\n+\n+  /**\n+   * Gets job details. If the job does not exist, it should return empty job details.\n+   *\n+   * @param runtimeJobId runtime job id\n+   * @return runtime job details\n+   * @throws Exception thrown if any exception while getting job details\n+   */\n+  Optional<RuntimeJobDetail> getDetail(RuntimeJobId runtimeJobId) throws Exception;\n+\n+  /**\n+   * Provides all the jobs that are in running state. If there are no running jobs, it should return empty list.\n+   *\n+   * @return a list job details\n+   * @throws Exception thrown if any exception while getting list of running jobs\n+   */\n+  List<RuntimeJobDetail> list() throws Exception;\n+\n+  /**\n+   * Gracefully stops a running job. If the job is already in terminal status, then this method should be a no-op.\n+   *\n+   * @param runtimeJobId job to be stopped\n+   * @throws Exception thrown if any exception while stopping the job\n+   */\n+  CompletableFuture<RuntimeJobId> stop(RuntimeJobId runtimeJobId) throws Exception;", "originalCommit": "21176772f535324f32f77da876f6937d0dc13b7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "65bcad8a2b601bba0f8707acfa8d00e3422dc804", "chunk": "diff --git a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java\nindex 8e53f62768e..42531eca831 100644\n--- a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java\n+++ b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java\n\n@@ -18,7 +18,6 @@ package io.cdap.cdap.runtime.spi.runtimejob;\n \n import java.util.List;\n import java.util.Optional;\n-import java.util.concurrent.CompletableFuture;\n \n /**\n  * Runtime job manager to prepare and launch the job.\n"}}, {"oid": "9496423f6c5f063f112b6d0310653d1a5e5442ec", "url": "https://github.com/cdapio/cdap/commit/9496423f6c5f063f112b6d0310653d1a5e5442ec", "message": "Modify javadocs", "committedDate": "2020-03-06T22:30:41Z", "type": "forcePushed"}, {"oid": "65bcad8a2b601bba0f8707acfa8d00e3422dc804", "url": "https://github.com/cdapio/cdap/commit/65bcad8a2b601bba0f8707acfa8d00e3422dc804", "message": "Modify javadocs", "committedDate": "2020-03-06T23:26:22Z", "type": "forcePushed"}, {"oid": "891699202bf24438bc516316b0b3a32e948c8b81", "url": "https://github.com/cdapio/cdap/commit/891699202bf24438bc516316b0b3a32e948c8b81", "message": "Modify javadocs and minor api changes", "committedDate": "2020-03-06T23:31:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5MzM5MQ==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389193391", "bodyText": "What if the job doesn't exist? What will be the contract?", "author": "chtyim", "createdAt": "2020-03-06T23:34:05Z", "path": "cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.runtimejob;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * Runtime job manager to prepare and launch the job.\n+ */\n+public interface RuntimeJobManager {\n+  /**\n+   * This method uses runtime job information to launch the job.\n+   *\n+   * @param runtimeJobInfo runtime job information\n+   * @return unique runtime job id\n+   */\n+  RuntimeJobId launch(RuntimeJobInfo runtimeJobInfo) throws Exception;\n+\n+  /**\n+   * Gets job details. If the job does not exist, it should return empty job details.\n+   *\n+   * @param runtimeJobId runtime job id\n+   * @return runtime job details\n+   * @throws Exception thrown if any exception while getting job details\n+   */\n+  Optional<RuntimeJobDetail> getDetail(RuntimeJobId runtimeJobId) throws Exception;\n+\n+  /**\n+   * Provides all the jobs that are in running state. If there are no running jobs, it should return empty list.\n+   *\n+   * @return a list job details\n+   * @throws Exception thrown if any exception while getting list of running jobs\n+   */\n+  List<RuntimeJobDetail> list() throws Exception;\n+\n+  /**\n+   * Gracefully stops a running job. If the job is already in terminal status, then this method should be a no-op.\n+   *\n+   * @param runtimeJobId job to be stopped\n+   * @throws Exception thrown if any exception while stopping the job\n+   */\n+  void stop(RuntimeJobId runtimeJobId) throws Exception;", "originalCommit": "891699202bf24438bc516316b0b3a32e948c8b81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwMDM2Ng==", "url": "https://github.com/cdapio/cdap/pull/11927#discussion_r389200366", "bodyText": "that would be a no-op. This case can only happen if a job is deleted on remote cluster(by user manually). In that case, it is safe to assume the job reached terminal state before getting deleted.", "author": "CuriousVini", "createdAt": "2020-03-07T00:07:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5MzM5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f072da1fb13137619474424df9439402036ce1ec", "chunk": "diff --git a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java\nindex 42531eca831..977ad6b8dae 100644\n--- a/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java\n+++ b/cdap-runtime-spi/src/main/java/io/cdap/cdap/runtime/spi/runtimejob/RuntimeJobManager.java\n\n@@ -49,7 +49,8 @@ public interface RuntimeJobManager {\n   List<RuntimeJobDetail> list() throws Exception;\n \n   /**\n-   * Gracefully stops a running job. If the job is already in terminal status, then this method should be a no-op.\n+   * Gracefully stops a running job. If the job is already in terminal status, then this method should be a no-op. If\n+   * the job does not exist, this method should be a no-op.\n    *\n    * @param runtimeJobId job to be stopped\n    * @throws Exception thrown if any exception while stopping the job\n"}}, {"oid": "f072da1fb13137619474424df9439402036ce1ec", "url": "https://github.com/cdapio/cdap/commit/f072da1fb13137619474424df9439402036ce1ec", "message": "[CDAP-16218] Adding RuntimeJobManager interface to launch Runtime Job", "committedDate": "2020-03-07T00:26:29Z", "type": "commit"}, {"oid": "f072da1fb13137619474424df9439402036ce1ec", "url": "https://github.com/cdapio/cdap/commit/f072da1fb13137619474424df9439402036ce1ec", "message": "[CDAP-16218] Adding RuntimeJobManager interface to launch Runtime Job", "committedDate": "2020-03-07T00:26:29Z", "type": "forcePushed"}]}