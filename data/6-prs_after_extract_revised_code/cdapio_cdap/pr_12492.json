{"pr_number": 12492, "pr_title": "[CDAP-17107] CDAP WorkflowDriver and CustomActionExecutor Exception Wrapping", "pr_createdAt": "2020-07-23T21:12:06Z", "pr_url": "https://github.com/cdapio/cdap/pull/12492", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzIyMg==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459733222", "bodyText": "is the exception here the direct one thrown by the custom action itself? Or does it get wrapped somehow?", "author": "albertshau", "createdAt": "2020-07-23T21:17:29Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java", "diffHunk": "@@ -86,7 +86,7 @@ void execute() throws Exception {\n       customActionContext.setState(new ProgramState(ProgramStatus.COMPLETED, null));\n \n     } catch (Throwable t) {\n-      customActionContext.setState(new ProgramState(ProgramStatus.FAILED, Throwables.getRootCause(t).getMessage()));\n+      customActionContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));", "originalCommit": "feeeb098cee9538e49be8adf452596fd35cfc68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNTkyNQ==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459735925", "bodyText": "It should be the one directly thrown by the CustomAction from what I can see. CustomActionExecutor makes a call to customActionContext.execute(customAction::run) which seems to call the run() method of the customAction class. Thus, any thrown exception from the customAction will be directly propagated back to this method.", "author": "dli357", "createdAt": "2020-07-23T21:23:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzIyMg=="}], "type": "inlineReview", "revised_code": {"commit": "29e8fca4c3a24ef24d26286419e70c1d4a8f6d06", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java\nindex 7f037eacfbd..280a8a83581 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java\n\n@@ -86,7 +87,7 @@ class CustomActionExecutor {\n       customActionContext.setState(new ProgramState(ProgramStatus.COMPLETED, null));\n \n     } catch (Throwable t) {\n-      customActionContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));\n+      customActionContext.setState(new ProgramState(ProgramStatus.FAILED, Exceptions.condenseThrowableMessage(t)));\n       Throwables.propagateIfPossible(t, Exception.class);\n       throw Throwables.propagate(t);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzk5NQ==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459733995", "bodyText": "similar question here, what gets thrown by executeNode? It seems like there is some sort of wrapping going on, since it is looking for an InterruptedException as the root cause.\nAsking since it would be good to also remove extra wrapping if it is happening.", "author": "albertshau", "createdAt": "2020-07-23T21:19:11Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java", "diffHunk": "@@ -640,8 +640,8 @@ private void executeAll(Iterator<WorkflowNode> iterator, ApplicationSpecificatio\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, rootCause.getMessage()));\n-        throw Throwables.propagate(rootCause);\n+        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));", "originalCommit": "feeeb098cee9538e49be8adf452596fd35cfc68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4Mzg0NQ==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459783845", "bodyText": "ExecuteNode seems to throw any exceptions which happen during the runtime of a pipeline. It recursively calls ExecuteCondition, ExecuteAll, ExecuteFork, ExecuteCustomAction, and ExecuteAction so it could really be any kind of exception.", "author": "dli357", "createdAt": "2020-07-23T23:32:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzk5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "29e8fca4c3a24ef24d26286419e70c1d4a8f6d06", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\nindex b5e3451d5dc..4f6da77ad17 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n\n@@ -640,8 +642,8 @@ final class WorkflowDriver extends AbstractExecutionThreadService {\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));\n-        throw Throwables.propagate(t);\n+        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, Exceptions.condenseThrowableMessage(t)));\n+        throw t;\n       }\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1Mzk3MA==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459753970", "bodyText": "If it doesn't change a bunch of things, would be better to throw the exception directly like it does in the action code, instead of wrapping it in a runtime exception.", "author": "albertshau", "createdAt": "2020-07-23T22:04:30Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java", "diffHunk": "@@ -640,8 +640,8 @@ private void executeAll(Iterator<WorkflowNode> iterator, ApplicationSpecificatio\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, rootCause.getMessage()));\n-        throw Throwables.propagate(rootCause);\n+        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));\n+        throw Throwables.propagate(t);", "originalCommit": "feeeb098cee9538e49be8adf452596fd35cfc68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4MzY0Nw==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459783647", "bodyText": "Fixed", "author": "dli357", "createdAt": "2020-07-23T23:31:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1Mzk3MA=="}], "type": "inlineReview", "revised_code": {"commit": "29e8fca4c3a24ef24d26286419e70c1d4a8f6d06", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\nindex b5e3451d5dc..4f6da77ad17 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n\n@@ -640,8 +642,8 @@ final class WorkflowDriver extends AbstractExecutionThreadService {\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));\n-        throw Throwables.propagate(t);\n+        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, Exceptions.condenseThrowableMessage(t)));\n+        throw t;\n       }\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxOTU4MQ==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459819581", "bodyText": "It is problematic in either case. Usually the actual message is hidden deep inside the root cause. However, contextual information is available in intermediate wrapping exceptions. Since we are not recording the whole exception stacktrace, but instead just a String message. It is better to concatenate the message in some meaningful way across the exception chain (some messages along the chain could be null, especially the one coming from Java itself).", "author": "chtyim", "createdAt": "2020-07-24T02:02:46Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java", "diffHunk": "@@ -86,7 +86,7 @@ void execute() throws Exception {\n       customActionContext.setState(new ProgramState(ProgramStatus.COMPLETED, null));\n \n     } catch (Throwable t) {\n-      customActionContext.setState(new ProgramState(ProgramStatus.FAILED, Throwables.getRootCause(t).getMessage()));\n+      customActionContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));", "originalCommit": "21ec34b4f8761faff9f43a58b40493fa64bba388", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzMTcxOA==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459831718", "bodyText": "Fixed", "author": "dli357", "createdAt": "2020-07-24T03:06:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxOTU4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "29e8fca4c3a24ef24d26286419e70c1d4a8f6d06", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java\nindex 7f037eacfbd..280a8a83581 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/CustomActionExecutor.java\n\n@@ -86,7 +87,7 @@ class CustomActionExecutor {\n       customActionContext.setState(new ProgramState(ProgramStatus.COMPLETED, null));\n \n     } catch (Throwable t) {\n-      customActionContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));\n+      customActionContext.setState(new ProgramState(ProgramStatus.FAILED, Exceptions.condenseThrowableMessage(t)));\n       Throwables.propagateIfPossible(t, Exception.class);\n       throw Throwables.propagate(t);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxOTY2Nw==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459819667", "bodyText": "Same suggestion as above.", "author": "chtyim", "createdAt": "2020-07-24T02:03:12Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java", "diffHunk": "@@ -640,8 +641,8 @@ private void executeAll(Iterator<WorkflowNode> iterator, ApplicationSpecificatio\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, rootCause.getMessage()));\n-        throw Throwables.propagate(rootCause);\n+        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));", "originalCommit": "21ec34b4f8761faff9f43a58b40493fa64bba388", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzMTkxMA==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459831910", "bodyText": "Fixed", "author": "dli357", "createdAt": "2020-07-24T03:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxOTY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "29e8fca4c3a24ef24d26286419e70c1d4a8f6d06", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\nindex 88b24d85a7f..4f6da77ad17 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n\n@@ -641,7 +642,7 @@ final class WorkflowDriver extends AbstractExecutionThreadService {\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));\n+        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, Exceptions.condenseThrowableMessage(t)));\n         throw t;\n       }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMTU2NQ==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r459821565", "bodyText": "This is a good change. Wrapping is unnecessary in all private method.", "author": "chtyim", "createdAt": "2020-07-24T02:12:32Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java", "diffHunk": "@@ -640,8 +641,8 @@ private void executeAll(Iterator<WorkflowNode> iterator, ApplicationSpecificatio\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, rootCause.getMessage()));\n-        throw Throwables.propagate(rootCause);", "originalCommit": "21ec34b4f8761faff9f43a58b40493fa64bba388", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29e8fca4c3a24ef24d26286419e70c1d4a8f6d06", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\nindex 88b24d85a7f..4f6da77ad17 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n\n@@ -641,7 +642,7 @@ final class WorkflowDriver extends AbstractExecutionThreadService {\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, t.getMessage()));\n+        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, Exceptions.condenseThrowableMessage(t)));\n         throw t;\n       }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyMjAzNQ==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r460222035", "bodyText": "Can you refactor this logic into some helper function? Maybe you can add a Exceptions util class in cdap-common under the io.cdap.cdap.common.lang package.", "author": "chtyim", "createdAt": "2020-07-24T18:33:10Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java", "diffHunk": "@@ -640,8 +641,21 @@ private void executeAll(Iterator<WorkflowNode> iterator, ApplicationSpecificatio\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, rootCause.getMessage()));\n-        throw Throwables.propagate(rootCause);\n+        StringBuilder contextFailMessage = new StringBuilder();", "originalCommit": "da26547f499dbe4c01d1eaf4bbef9c97229c907e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNDAyMw==", "url": "https://github.com/cdapio/cdap/pull/12492#discussion_r460234023", "bodyText": "Done", "author": "dli357", "createdAt": "2020-07-24T18:59:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyMjAzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "29e8fca4c3a24ef24d26286419e70c1d4a8f6d06", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\nindex 2217645f8ae..4f6da77ad17 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/workflow/WorkflowDriver.java\n\n@@ -641,20 +642,7 @@ final class WorkflowDriver extends AbstractExecutionThreadService {\n           workflowContext.setState(new ProgramState(ProgramStatus.KILLED, rootCause.getMessage()));\n           break;\n         }\n-        StringBuilder contextFailMessage = new StringBuilder();\n-        contextFailMessage.append(t.getMessage());\n-        Throwable current = t.getCause();\n-        while (current != null) {\n-          String currMessage = current.getMessage();\n-          // Ignore null and empty message strings caused by Java runtime\n-          if (currMessage != null && currMessage.length() != 0) {\n-            contextFailMessage.append(System.lineSeparator());\n-            contextFailMessage.append(\"Caused by: \");\n-            contextFailMessage.append(currMessage);\n-          }\n-          current = current.getCause();\n-        }\n-        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, contextFailMessage.toString()));\n+        workflowContext.setState(new ProgramState(ProgramStatus.FAILED, Exceptions.condenseThrowableMessage(t)));\n         throw t;\n       }\n     }\n"}}, {"oid": "29e8fca4c3a24ef24d26286419e70c1d4a8f6d06", "url": "https://github.com/cdapio/cdap/commit/29e8fca4c3a24ef24d26286419e70c1d4a8f6d06", "message": "[CDAP-17107] Prevent CDAP WorkflowDriver and CustomActionExecutor from unwrapping exceptions\n\n[CDAP-17107] Removed exception wrapping in executeAll()\n\n[CDAP-17107] Extended context failure message to include entire exception chain\n\n[CDAP-17107] Moved exception condensing logic to helper method, add unit tests\n\nAdded copyright headers", "committedDate": "2020-07-25T18:33:03Z", "type": "forcePushed"}, {"oid": "8ad921f8d5e4cf9dac18cb08021e720cca5be79c", "url": "https://github.com/cdapio/cdap/commit/8ad921f8d5e4cf9dac18cb08021e720cca5be79c", "message": "[CDAP-17107] Prevent CDAP WorkflowDriver and CustomActionExecutor from unwrapping exceptions\n\n[CDAP-17107] Removed exception wrapping in executeAll()\n\n[CDAP-17107] Extended context failure message to include entire exception chain\n\n[CDAP-17107] Moved exception condensing logic to helper method, add unit tests\n\nAdded copyright headers", "committedDate": "2020-07-25T18:34:45Z", "type": "commit"}, {"oid": "8ad921f8d5e4cf9dac18cb08021e720cca5be79c", "url": "https://github.com/cdapio/cdap/commit/8ad921f8d5e4cf9dac18cb08021e720cca5be79c", "message": "[CDAP-17107] Prevent CDAP WorkflowDriver and CustomActionExecutor from unwrapping exceptions\n\n[CDAP-17107] Removed exception wrapping in executeAll()\n\n[CDAP-17107] Extended context failure message to include entire exception chain\n\n[CDAP-17107] Moved exception condensing logic to helper method, add unit tests\n\nAdded copyright headers", "committedDate": "2020-07-25T18:34:45Z", "type": "forcePushed"}]}