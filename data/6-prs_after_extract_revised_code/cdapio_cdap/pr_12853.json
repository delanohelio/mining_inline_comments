{"pr_number": 12853, "pr_title": "[CDAP-17321] Exclude system apps from pipeline count", "pr_createdAt": "2020-11-12T03:57:24Z", "pr_url": "https://github.com/cdapio/cdap/pull/12853", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjIyMDg0Mg==", "url": "https://github.com/cdapio/cdap/pull/12853#discussion_r522220842", "bodyText": "Can the table.count method actually take a collection of ranges such that one query is generated instead of two?", "author": "chtyim", "createdAt": "2020-11-12T16:03:14Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java", "diffHunk": "@@ -270,7 +270,14 @@ public void scanApplications(Cursor cursor,\n   }\n \n   public long getApplicationCount() throws IOException {\n-    return getApplicationSpecificationTable().count(Range.all());\n+    // Get number of applications where namespace != SYSTEM (exclude system applications)\n+    Collection<Field<?>> fields = ImmutableList.of(Fields.stringField(StoreDefinition.AppMetadataStore.NAMESPACE_FIELD,\n+                                                                      NamespaceId.SYSTEM.getNamespace()));\n+    // Return sum of ranges [empty, SYSTEM) and (SYSTEM, empty)\n+    return getApplicationSpecificationTable().count(Range.create(null, Range.Bound.INCLUSIVE, fields,\n+                                                                 Range.Bound.EXCLUSIVE)) +\n+      getApplicationSpecificationTable().count(Range.create(fields, Range.Bound.EXCLUSIVE, null,", "originalCommit": "112740e0fa9cb552739d8fc674f0c9be1e1c63d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "753d446985671973dfa3fb560c0bdaa45075b12c", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java\nindex 485ffd0ff3c..5cfb1f998e8 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java\n\n@@ -273,11 +273,12 @@ public class AppMetadataStore {\n     // Get number of applications where namespace != SYSTEM (exclude system applications)\n     Collection<Field<?>> fields = ImmutableList.of(Fields.stringField(StoreDefinition.AppMetadataStore.NAMESPACE_FIELD,\n                                                                       NamespaceId.SYSTEM.getNamespace()));\n-    // Return sum of ranges [empty, SYSTEM) and (SYSTEM, empty)\n-    return getApplicationSpecificationTable().count(Range.create(null, Range.Bound.INCLUSIVE, fields,\n-                                                                 Range.Bound.EXCLUSIVE)) +\n-      getApplicationSpecificationTable().count(Range.create(fields, Range.Bound.EXCLUSIVE, null,\n-                                                            Range.Bound.INCLUSIVE));\n+    // Return count of ranges [empty, SYSTEM) and (SYSTEM, empty)\n+    Collection<Range> ranges = Arrays.asList(Range.create(null, Range.Bound.INCLUSIVE, fields,\n+                                                          Range.Bound.EXCLUSIVE),\n+                                             Range.create(fields, Range.Bound.EXCLUSIVE, null,\n+                                                          Range.Bound.INCLUSIVE));\n+    return getApplicationSpecificationTable().count(ranges);\n   }\n \n   public List<ApplicationMeta> getAllAppVersions(String namespaceId, String appId) throws IOException {\n"}}, {"oid": "753d446985671973dfa3fb560c0bdaa45075b12c", "url": "https://github.com/cdapio/cdap/commit/753d446985671973dfa3fb560c0bdaa45075b12c", "message": "[CDAP-17321] Exclude system apps from pipeline count", "committedDate": "2020-12-04T20:19:32Z", "type": "commit"}, {"oid": "753d446985671973dfa3fb560c0bdaa45075b12c", "url": "https://github.com/cdapio/cdap/commit/753d446985671973dfa3fb560c0bdaa45075b12c", "message": "[CDAP-17321] Exclude system apps from pipeline count", "committedDate": "2020-12-04T20:19:32Z", "type": "forcePushed"}]}