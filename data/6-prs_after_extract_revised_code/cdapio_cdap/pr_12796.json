{"pr_number": 12796, "pr_title": "Add pipeline count metric", "pr_createdAt": "2020-10-06T19:18:59Z", "pr_url": "https://github.com/cdapio/cdap/pull/12796", "timeline": [{"oid": "56d5cfac69cb11eba45a75beeb647c6bddddcd76", "url": "https://github.com/cdapio/cdap/commit/56d5cfac69cb11eba45a75beeb647c6bddddcd76", "message": "Add pipeline count metric", "committedDate": "2020-10-08T21:21:09Z", "type": "forcePushed"}, {"oid": "edb49890fb45f92131c54b5f0195cfc376cb1fa7", "url": "https://github.com/cdapio/cdap/commit/edb49890fb45f92131c54b5f0195cfc376cb1fa7", "message": "Add pipeline count metric", "committedDate": "2020-10-09T00:03:41Z", "type": "forcePushed"}, {"oid": "060870482d096b893892abe147da8fc47be6af9a", "url": "https://github.com/cdapio/cdap/commit/060870482d096b893892abe147da8fc47be6af9a", "message": "Add pipeline count metric", "committedDate": "2020-10-09T00:17:51Z", "type": "forcePushed"}, {"oid": "7ab028f2eb9fe22d8925ccb4923b3f0451e52f90", "url": "https://github.com/cdapio/cdap/commit/7ab028f2eb9fe22d8925ccb4923b3f0451e52f90", "message": "Add pipeline count metric", "committedDate": "2020-10-26T21:26:15Z", "type": "forcePushed"}, {"oid": "e65c505488973f01d6834dc5703bbe6bd6f808de", "url": "https://github.com/cdapio/cdap/commit/e65c505488973f01d6834dc5703bbe6bd6f808de", "message": "Add pipeline count metric", "committedDate": "2020-10-27T20:00:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwMzYzOA==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r513003638", "bodyText": "Remove extra line", "author": "chtyim", "createdAt": "2020-10-27T20:18:37Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java", "diffHunk": "@@ -79,6 +85,9 @@\n   private Cancellable cancelHttpService;\n   private Set<HttpHandler> handlers;\n   private MetricsCollectionService metricsCollectionService;\n+  private final NamespaceQueryAdmin namespaceQueryAdmin;\n+  private final TransactionRunner transactionRunner;\n+", "originalCommit": "e65c505488973f01d6834dc5703bbe6bd6f808de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3Njc0NA==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r513076744", "bodyText": "removed", "author": "rmstar", "createdAt": "2020-10-27T22:44:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwMzYzOA=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\nindex cad0ee022a7..e8daeb277d4 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n\n@@ -81,13 +80,11 @@ public class AppFabricServer extends AbstractIdleService {\n   private final CConfiguration cConf;\n   private final SConfiguration sConf;\n   private final boolean sslEnabled;\n+  private final TransactionRunner transactionRunner;\n \n   private Cancellable cancelHttpService;\n   private Set<HttpHandler> handlers;\n   private MetricsCollectionService metricsCollectionService;\n-  private final NamespaceQueryAdmin namespaceQueryAdmin;\n-  private final TransactionRunner transactionRunner;\n-\n \n   /**\n    * Construct the AppFabricServer with service factory and cConf coming from guice injection.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwNDc2Mw==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r513004763", "bodyText": "The query admin list will happen in its own transaction. It shouldn't be called inside a transaction.", "author": "chtyim", "createdAt": "2020-10-27T20:20:38Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java", "diffHunk": "@@ -163,6 +176,15 @@ protected void startUp() throws Exception {\n     }\n \n     cancelHttpService = startHttpService(httpServiceBuilder.build());\n+    TransactionRunners.run(transactionRunner, context -> {\n+      AppMetadataStore appMetadataStore  = AppMetadataStore.create(context);\n+      int count = 0;\n+      for (NamespaceMeta namespaceMeta : namespaceQueryAdmin.list()) {", "originalCommit": "e65c505488973f01d6834dc5703bbe6bd6f808de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNjkyMg==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r513106922", "bodyText": "removed namespace query as it's not required.", "author": "rmstar", "createdAt": "2020-10-28T00:19:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwNDc2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\nindex cad0ee022a7..e8daeb277d4 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n\n@@ -176,15 +171,11 @@ public class AppFabricServer extends AbstractIdleService {\n     }\n \n     cancelHttpService = startHttpService(httpServiceBuilder.build());\n-    TransactionRunners.run(transactionRunner, context -> {\n-      AppMetadataStore appMetadataStore  = AppMetadataStore.create(context);\n-      int count = 0;\n-      for (NamespaceMeta namespaceMeta : namespaceQueryAdmin.list()) {\n-        count += appMetadataStore.getApplicationCount(namespaceMeta.getName());\n-      }\n-      metricsCollectionService.getContext(Collections.emptyMap()).gauge(Constants.Metrics.Program.APPLICATION_COUNT,\n-                                                                        count);\n-    });\n+    long count = TransactionRunners.run(transactionRunner,\n+                                        (TxCallable<Long>) context ->\n+                                          AppMetadataStore.create(context).getApplicationCount());\n+    metricsCollectionService.getContext(Collections.emptyMap()).gauge(Constants.Metrics.Program.APPLICATION_COUNT,\n+                                                                      count);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwNjMyOA==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r513006328", "bodyText": "You actually never need one per namespace, but instead always query across all namespaces. So why not having one that query across all namespaces such that it can be done in one query?", "author": "chtyim", "createdAt": "2020-10-27T20:23:26Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java", "diffHunk": "@@ -269,6 +269,10 @@ public void scanApplications(Cursor cursor,\n         StoreDefinition.AppMetadataStore.APPLICATION_DATA_FIELD);\n   }\n \n+  public long getApplicationCount(String namespaceId) throws IOException {", "originalCommit": "e65c505488973f01d6834dc5703bbe6bd6f808de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNjk3NQ==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r513106975", "bodyText": "removed namespace query", "author": "rmstar", "createdAt": "2020-10-28T00:19:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwNjMyOA=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java\nindex 4dce85fee8c..487fba8b848 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java\n\n@@ -269,8 +269,8 @@ public class AppMetadataStore {\n         StoreDefinition.AppMetadataStore.APPLICATION_DATA_FIELD);\n   }\n \n-  public long getApplicationCount(String namespaceId) throws IOException {\n-    return getApplicationSpecificationTable().count(getNamespaceRange(namespaceId));\n+  public long getApplicationCount() throws IOException {\n+    return getApplicationSpecificationTable().count(Range.all());\n   }\n \n   public List<ApplicationMeta> getAllAppVersions(String namespaceId, String appId) throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MDYyMQ==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514640621", "bodyText": "Emit the metrics outside the of the tx to minimize the tx scope. You can use the one that takes TxCallable too return the count from inside the transaction.", "author": "chtyim", "createdAt": "2020-10-30T00:25:09Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java", "diffHunk": "@@ -163,6 +170,12 @@ protected void startUp() throws Exception {\n     }\n \n     cancelHttpService = startHttpService(httpServiceBuilder.build());\n+    TransactionRunners.run(transactionRunner, context -> {\n+      AppMetadataStore appMetadataStore  = AppMetadataStore.create(context);\n+      long count = appMetadataStore.getApplicationCount();\n+      metricsCollectionService.getContext(Collections.emptyMap()).gauge(Constants.Metrics.Program.APPLICATION_COUNT,", "originalCommit": "6a3a7042da2e23a07f54613966f432ecb2e1abb5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDgwNzI1NQ==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514807255", "bodyText": "fixed", "author": "rmstar", "createdAt": "2020-10-30T03:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MDYyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\nindex cd5ccfc5c8c..e8daeb277d4 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n\n@@ -170,12 +171,11 @@ public class AppFabricServer extends AbstractIdleService {\n     }\n \n     cancelHttpService = startHttpService(httpServiceBuilder.build());\n-    TransactionRunners.run(transactionRunner, context -> {\n-      AppMetadataStore appMetadataStore  = AppMetadataStore.create(context);\n-      long count = appMetadataStore.getApplicationCount();\n-      metricsCollectionService.getContext(Collections.emptyMap()).gauge(Constants.Metrics.Program.APPLICATION_COUNT,\n-                                                                        count);\n-    });\n+    long count = TransactionRunners.run(transactionRunner,\n+                                        (TxCallable<Long>) context ->\n+                                          AppMetadataStore.create(context).getApplicationCount());\n+    metricsCollectionService.getContext(Collections.emptyMap()).gauge(Constants.Metrics.Program.APPLICATION_COUNT,\n+                                                                      count);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MTc4Nw==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514641787", "bodyText": "Remove extra new line.", "author": "chtyim", "createdAt": "2020-10-30T00:29:52Z", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java", "diffHunk": "@@ -724,6 +746,16 @@ private String getDeleteAllStatement(Range range) {\n     return statement.toString();\n   }\n \n+  private String getCountStatement(Range range) {\n+    StringBuilder statement =  new StringBuilder(\"SELECT COUNT(*) FROM \").append(tableSchema.getTableId().getName());\n+    if (!range.getBegin().isEmpty() || !range.getEnd().isEmpty()) {\n+      statement.append(\" WHERE \");\n+      appendRange(statement, range);\n+    }\n+    return statement.toString();\n+", "originalCommit": "6a3a7042da2e23a07f54613966f432ecb2e1abb5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDgwNzMyNA==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514807324", "bodyText": "fixed", "author": "rmstar", "createdAt": "2020-10-30T03:58:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MTc4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java b/cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java\nindex 77f5efe39b1..03c4c9ba58b 100644\n--- a/cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java\n+++ b/cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java\n\n@@ -753,7 +753,6 @@ public class PostgresSqlStructuredTable implements StructuredTable {\n       appendRange(statement, range);\n     }\n     return statement.toString();\n-\n   }\n \n   private String getEqualsClause(Collection<Field<?>> keys) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MTkxOA==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514641918", "bodyText": "Why it is an exception? Shouldn't it be 0?", "author": "chtyim", "createdAt": "2020-10-30T00:30:18Z", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java", "diffHunk": "@@ -458,6 +458,28 @@ public void deleteAll(Range keyRange) throws InvalidFieldException, IOException\n     }\n   }\n \n+  @Override\n+  public long count(Range keyRange) throws IOException {\n+    LOG.trace(\"Table {}: count with range {}\", tableSchema.getTableId(), keyRange);\n+    String sql = getCountStatement(keyRange);\n+    try (PreparedStatement statement = connection.prepareStatement(sql)) {\n+      setStatementFieldByRange(keyRange, statement);\n+      LOG.trace(\"SQL statement: {}\", statement);\n+\n+      statement.executeQuery();\n+      try (ResultSet resultSet = statement.executeQuery()) {\n+        if (!resultSet.next()) {\n+          throw new IOException(String.format(\"Failed to get count from table %s\",", "originalCommit": "6a3a7042da2e23a07f54613966f432ecb2e1abb5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDgwNzQ4Mw==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514807483", "bodyText": "returned 0, logged warning.", "author": "rmstar", "createdAt": "2020-10-30T03:58:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MTkxOA=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java b/cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java\nindex 77f5efe39b1..03c4c9ba58b 100644\n--- a/cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java\n+++ b/cdap-data-fabric/src/main/java/io/cdap/cdap/spi/data/sql/PostgresSqlStructuredTable.java\n\n@@ -469,8 +469,8 @@ public class PostgresSqlStructuredTable implements StructuredTable {\n       statement.executeQuery();\n       try (ResultSet resultSet = statement.executeQuery()) {\n         if (!resultSet.next()) {\n-          throw new IOException(String.format(\"Failed to get count from table %s\",\n-                                              tableSchema.getTableId().getName()));\n+          LOG.warn(\"Failed to get count from table {}\", tableSchema.getTableId().getName());\n+          return 0;\n         }\n         return resultSet.getLong(1);\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MjA2Nw==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514642067", "bodyText": "Wrong alignment. Should be two spaces, not one.", "author": "chtyim", "createdAt": "2020-10-30T00:30:53Z", "path": "cdap-storage-spi/src/main/java/io/cdap/cdap/spi/data/StructuredTable.java", "diffHunk": "@@ -182,4 +182,12 @@ void increment(Collection<Field<?>> keys, String column, long amount)\n    * @throws IOException if there is an error reading or deleting from the table\n    */\n   void deleteAll(Range keyRange) throws InvalidFieldException, IOException;\n+\n+/**", "originalCommit": "6a3a7042da2e23a07f54613966f432ecb2e1abb5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDgwNzU5Mg==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514807592", "bodyText": "fixed", "author": "rmstar", "createdAt": "2020-10-30T03:58:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MjA2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-storage-spi/src/main/java/io/cdap/cdap/spi/data/StructuredTable.java b/cdap-storage-spi/src/main/java/io/cdap/cdap/spi/data/StructuredTable.java\nindex 57d5be63d55..e54496f7bae 100644\n--- a/cdap-storage-spi/src/main/java/io/cdap/cdap/spi/data/StructuredTable.java\n+++ b/cdap-storage-spi/src/main/java/io/cdap/cdap/spi/data/StructuredTable.java\n\n@@ -183,11 +183,11 @@ public interface StructuredTable extends Closeable {\n    */\n   void deleteAll(Range keyRange) throws InvalidFieldException, IOException;\n \n-/**\n- * Get the number of records in the table.\n- * @param keyRange key range of the rows to count\n- * @return number of records in the table\n- * @throws IOException if there is an error reading from the table\n- */\n- long count(Range keyRange) throws IOException;\n+  /**\n+   * Get the number of records in the table.\n+   * @param keyRange key range of the rows to count\n+   * @return number of records in the table\n+   * @throws IOException if there is an error reading from the table\n+   */\n+  long count(Range keyRange) throws IOException;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MjI4OQ==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514642289", "bodyText": "Wrong alignment.", "author": "chtyim", "createdAt": "2020-10-30T00:31:43Z", "path": "cdap-storage-spi/src/test/java/io/cdap/cdap/spi/data/StructuredTableTest.java", "diffHunk": "@@ -567,7 +567,20 @@ public void testIndexScan() throws Exception {\n     });\n   }\n \n-  private List<Collection<Field<?>>> writeSimpleStructuredRows(int max, String suffix) throws Exception {\n+  @Test\n+  public void testCount() throws Exception {\n+    // Write records\n+    int max = 5;\n+    List<Collection<Field<?>>> fields = writeSimpleStructuredRows(max, \"\");\n+    Assert.assertEquals(max, fields.size());\n+    // Verify count\n+    getTransactionRunner().run(context -> {\n+      StructuredTable table = context.getTable(SIMPLE_TABLE);\n+      Assert.assertEquals(max, table.count(Range.all()));\n+    });\n+  }\n+\n+    private List<Collection<Field<?>>> writeSimpleStructuredRows(int max, String suffix) throws Exception {", "originalCommit": "6a3a7042da2e23a07f54613966f432ecb2e1abb5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDgwNzY1Mg==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r514807652", "bodyText": "fixed", "author": "rmstar", "createdAt": "2020-10-30T03:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MjI4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-storage-spi/src/test/java/io/cdap/cdap/spi/data/StructuredTableTest.java b/cdap-storage-spi/src/test/java/io/cdap/cdap/spi/data/StructuredTableTest.java\nindex 93eca2ceca4..65bb7258443 100644\n--- a/cdap-storage-spi/src/test/java/io/cdap/cdap/spi/data/StructuredTableTest.java\n+++ b/cdap-storage-spi/src/test/java/io/cdap/cdap/spi/data/StructuredTableTest.java\n\n@@ -580,7 +580,7 @@ public abstract class StructuredTableTest {\n     });\n   }\n \n-    private List<Collection<Field<?>>> writeSimpleStructuredRows(int max, String suffix) throws Exception {\n+  private List<Collection<Field<?>>> writeSimpleStructuredRows(int max, String suffix) throws Exception {\n     List<Collection<Field<?>>> expected = new ArrayList<>(max);\n     // Write rows in reverse order to test sorting\n     for (int i = max - 1; i >= 0; i--) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxMzM4OA==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r515313388", "bodyText": "You can simply it by:\nlong count = TransactionRunners.run(transactionRunner, context -> AppMetadataStore.create(context).getApplicationCount());", "author": "chtyim", "createdAt": "2020-10-30T18:55:32Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java", "diffHunk": "@@ -163,6 +170,11 @@ protected void startUp() throws Exception {\n     }\n \n     cancelHttpService = startHttpService(httpServiceBuilder.build());\n+    long count = TransactionRunners.run(transactionRunner, context -> {", "originalCommit": "c1e96e1aed94c9a08dca19099fcc525abeded200", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM2MTY0NA==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r515361644", "bodyText": "fixed", "author": "rmstar", "createdAt": "2020-10-30T20:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxMzM4OA=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\nindex b77b4ced2f2..e8daeb277d4 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n\n@@ -170,9 +171,9 @@ public class AppFabricServer extends AbstractIdleService {\n     }\n \n     cancelHttpService = startHttpService(httpServiceBuilder.build());\n-    long count = TransactionRunners.run(transactionRunner, context -> {\n-      return AppMetadataStore.create(context).getApplicationCount();\n-    });\n+    long count = TransactionRunners.run(transactionRunner,\n+                                        (TxCallable<Long>) context ->\n+                                          AppMetadataStore.create(context).getApplicationCount());\n     metricsCollectionService.getContext(Collections.emptyMap()).gauge(Constants.Metrics.Program.APPLICATION_COUNT,\n                                                                       count);\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxMzQ5OQ==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r515313499", "bodyText": "Group final fields together", "author": "chtyim", "createdAt": "2020-10-30T18:55:48Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java", "diffHunk": "@@ -79,6 +83,7 @@\n   private Cancellable cancelHttpService;\n   private Set<HttpHandler> handlers;\n   private MetricsCollectionService metricsCollectionService;\n+  private final TransactionRunner transactionRunner;", "originalCommit": "c1e96e1aed94c9a08dca19099fcc525abeded200", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM2MTYwMg==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r515361602", "bodyText": "fixed", "author": "rmstar", "createdAt": "2020-10-30T20:33:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxMzQ5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\nindex b77b4ced2f2..e8daeb277d4 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/services/AppFabricServer.java\n\n@@ -79,11 +80,11 @@ public class AppFabricServer extends AbstractIdleService {\n   private final CConfiguration cConf;\n   private final SConfiguration sConf;\n   private final boolean sslEnabled;\n+  private final TransactionRunner transactionRunner;\n \n   private Cancellable cancelHttpService;\n   private Set<HttpHandler> handlers;\n   private MetricsCollectionService metricsCollectionService;\n-  private final TransactionRunner transactionRunner;\n \n   /**\n    * Construct the AppFabricServer with service factory and cConf coming from guice injection.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTI1Nw==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r515315257", "bodyText": "This seems not needed. You can just have emitApplicationCountMetrics() method to get the count from the appMetadataStore and emit the metrics.", "author": "chtyim", "createdAt": "2020-10-30T18:59:42Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java", "diffHunk": "@@ -106,7 +111,7 @@ public void processMessage(MetadataMessage message, StructuredTableContext conte\n \n     LOG.trace(\"Processing message: {}\", message);\n     EntityId entityId = message.getEntityId();\n-\n+    long count = 0;", "originalCommit": "c1e96e1aed94c9a08dca19099fcc525abeded200", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM2MTU4Mw==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r515361583", "bodyText": "fixed", "author": "rmstar", "createdAt": "2020-10-30T20:33:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTI1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java\nindex 159e0073f57..4949e4b1ae9 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java\n\n@@ -111,7 +111,6 @@ public class ProfileMetadataMessageProcessor implements MetadataMessageProcessor\n \n     LOG.trace(\"Processing message: {}\", message);\n     EntityId entityId = message.getEntityId();\n-    long count = 0;\n     switch (message.getType()) {\n       case PROFILE_ASSIGNMENT:\n       case PROFILE_UNASSIGNMENT:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM5ODgzMQ==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r516398831", "bodyText": "Move this inside the try so that on exception, the count won't get updated to 0.", "author": "chtyim", "createdAt": "2020-11-03T02:35:18Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java", "diffHunk": "@@ -343,4 +353,18 @@ private ProfileId getResolvedProfileId(EntityId entityId) throws IOException {\n     }\n     return programIds;\n   }\n+\n+  /**\n+   * Emit the application count metric.\n+   */\n+  private void emitApplicationCountMetric() {\n+    long pipelineCount = 0;\n+    try {\n+      pipelineCount = appMetadataStore.getApplicationCount();\n+    } catch (IOException e) {\n+      LOG.warn(\"Failed to get application count\", e);\n+    }\n+    metricsCollectionService.getContext(Collections.emptyMap()).gauge(Constants.Metrics.Program.APPLICATION_COUNT,", "originalCommit": "7fa334a880eff150c4ca0cef332842d400f958bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4Mzc4MA==", "url": "https://github.com/cdapio/cdap/pull/12796#discussion_r516883780", "bodyText": "done", "author": "rmstar", "createdAt": "2020-11-03T18:48:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM5ODgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java\nindex 92924b5d3b6..4949e4b1ae9 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/metadata/profile/ProfileMetadataMessageProcessor.java\n\n@@ -358,13 +358,11 @@ public class ProfileMetadataMessageProcessor implements MetadataMessageProcessor\n    * Emit the application count metric.\n    */\n   private void emitApplicationCountMetric() {\n-    long pipelineCount = 0;\n     try {\n-      pipelineCount = appMetadataStore.getApplicationCount();\n+      metricsCollectionService.getContext(Collections.emptyMap()).gauge(Constants.Metrics.Program.APPLICATION_COUNT,\n+                                                                        appMetadataStore.getApplicationCount());\n     } catch (IOException e) {\n       LOG.warn(\"Failed to get application count\", e);\n     }\n-    metricsCollectionService.getContext(Collections.emptyMap()).gauge(Constants.Metrics.Program.APPLICATION_COUNT,\n-                                                                      pipelineCount);\n   }\n }\n"}}, {"oid": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "url": "https://github.com/cdapio/cdap/commit/a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "message": "Add pipeline count metric", "committedDate": "2020-11-03T18:49:16Z", "type": "commit"}, {"oid": "a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "url": "https://github.com/cdapio/cdap/commit/a1640e8ec83b1cffe04fdd26ed530d72d0807f38", "message": "Add pipeline count metric", "committedDate": "2020-11-03T18:49:16Z", "type": "forcePushed"}]}