{"pr_number": 12343, "pr_title": "CDAP-16987 Keep single store for all preview runs owned by PreviewManager.", "pr_createdAt": "2020-06-16T16:44:00Z", "pr_url": "https://github.com/cdapio/cdap/pull/12343", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMDk4Nw==", "url": "https://github.com/cdapio/cdap/pull/12343#discussion_r441030987", "bodyText": "Removed this test case since the appInjector limit is removed now. Will add similar test case for preview job queue capacity.", "author": "sagarkapare", "createdAt": "2020-06-16T17:45:00Z", "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/preview/PreviewManagerTest.java", "diffHunk": "@@ -169,19 +169,6 @@ public void finish() {\n     txManager.stopAndWait();\n   }\n \n-  @Test(expected = IllegalStateException.class)\n-  public void testLimit() throws Exception {", "originalCommit": "9f85d70f1af366e42ca034d07cf4df9310fb079e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "01a591b3051397b87d0982a9e2746ce392fd6b34", "url": "https://github.com/cdapio/cdap/commit/01a591b3051397b87d0982a9e2746ce392fd6b34", "message": "CDAP-16987 Keep single store for all preview runs owned by PreviewManager.", "committedDate": "2020-06-17T05:13:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1MzQ0Nw==", "url": "https://github.com/cdapio/cdap/pull/12343#discussion_r441653447", "bodyText": "why do we need to get the status here? Is it just for validation?", "author": "yaojiefeng", "createdAt": "2020-06-17T15:55:43Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java", "diffHunk": "@@ -134,18 +132,21 @@ public void getData(HttpRequest request, HttpResponder responder,\n                       @PathParam(\"namespace-id\") String namespaceId,\n                       @PathParam(\"preview-id\") String previewId,\n                       @PathParam(\"tracer-id\") String tracerId) throws Exception {\n-    NamespaceId namespace = new NamespaceId(namespaceId);\n-    ApplicationId application = namespace.app(previewId);\n-    responder.sendJson(HttpResponseStatus.OK, GSON.toJson(previewManager.getRunner(application).getData(tracerId)));\n+    // Check if valid application Id\n+    ApplicationId application = new ApplicationId(namespaceId, previewId);\n+    previewManager.getRunner().getStatus(application);", "originalCommit": "01a591b3051397b87d0982a9e2746ce392fd6b34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3ODAwMA==", "url": "https://github.com/cdapio/cdap/pull/12343#discussion_r441778000", "bodyText": "correct. Its just for validation.", "author": "sagarkapare", "createdAt": "2020-06-17T19:18:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1MzQ0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2d98673d2f556d522ea2c0411c03efda3892e7d4", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java\nindex 824797d5a9d..7799930ada3 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java\n\n@@ -132,10 +133,8 @@ public class PreviewHttpHandler extends AbstractLogHttpHandler {\n                       @PathParam(\"namespace-id\") String namespaceId,\n                       @PathParam(\"preview-id\") String previewId,\n                       @PathParam(\"tracer-id\") String tracerId) throws Exception {\n-    // Check if valid application Id\n-    ApplicationId application = new ApplicationId(namespaceId, previewId);\n-    previewManager.getRunner().getStatus(application);\n-    responder.sendJson(HttpResponseStatus.OK, GSON.toJson(previewManager.getRunner().getData(application, tracerId)));\n+    ApplicationId previewAppId = validateAndGetAppId(namespaceId, previewId);\n+    responder.sendJson(HttpResponseStatus.OK, GSON.toJson(previewManager.getRunner().getData(previewAppId, tracerId)));\n   }\n \n   @POST\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1MzUwOQ==", "url": "https://github.com/cdapio/cdap/pull/12343#discussion_r441653509", "bodyText": "same here", "author": "yaojiefeng", "createdAt": "2020-06-17T15:55:47Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java", "diffHunk": "@@ -134,18 +132,21 @@ public void getData(HttpRequest request, HttpResponder responder,\n                       @PathParam(\"namespace-id\") String namespaceId,\n                       @PathParam(\"preview-id\") String previewId,\n                       @PathParam(\"tracer-id\") String tracerId) throws Exception {\n-    NamespaceId namespace = new NamespaceId(namespaceId);\n-    ApplicationId application = namespace.app(previewId);\n-    responder.sendJson(HttpResponseStatus.OK, GSON.toJson(previewManager.getRunner(application).getData(tracerId)));\n+    // Check if valid application Id\n+    ApplicationId application = new ApplicationId(namespaceId, previewId);\n+    previewManager.getRunner().getStatus(application);\n+    responder.sendJson(HttpResponseStatus.OK, GSON.toJson(previewManager.getRunner().getData(application, tracerId)));\n   }\n \n   @POST\n   @Path(\"/previews/{preview-id}/tracers\")\n   public void getTracersData(FullHttpRequest request, HttpResponder responder,\n                              @PathParam(\"namespace-id\") String namespaceId,\n                              @PathParam(\"preview-id\") String previewId) throws Exception {\n-    NamespaceId namespace = new NamespaceId(namespaceId);\n-    ApplicationId application = namespace.app(previewId);\n+    // Check if valid application Id\n+    ApplicationId application = new ApplicationId(namespaceId, previewId);\n+    previewManager.getRunner().getStatus(application);", "originalCommit": "01a591b3051397b87d0982a9e2746ce392fd6b34", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2d98673d2f556d522ea2c0411c03efda3892e7d4", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java\nindex 824797d5a9d..7799930ada3 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java\n\n@@ -132,10 +133,8 @@ public class PreviewHttpHandler extends AbstractLogHttpHandler {\n                       @PathParam(\"namespace-id\") String namespaceId,\n                       @PathParam(\"preview-id\") String previewId,\n                       @PathParam(\"tracer-id\") String tracerId) throws Exception {\n-    // Check if valid application Id\n-    ApplicationId application = new ApplicationId(namespaceId, previewId);\n-    previewManager.getRunner().getStatus(application);\n-    responder.sendJson(HttpResponseStatus.OK, GSON.toJson(previewManager.getRunner().getData(application, tracerId)));\n+    ApplicationId previewAppId = validateAndGetAppId(namespaceId, previewId);\n+    responder.sendJson(HttpResponseStatus.OK, GSON.toJson(previewManager.getRunner().getData(previewAppId, tracerId)));\n   }\n \n   @POST\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NDMxMg==", "url": "https://github.com/cdapio/cdap/pull/12343#discussion_r441654312", "bodyText": "This part of code occurs 4 times, better to extract a method for it", "author": "yaojiefeng", "createdAt": "2020-06-17T15:56:58Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java", "diffHunk": "@@ -240,7 +233,11 @@ public void search(HttpRequest request, HttpResponder responder,\n                      @PathParam(\"preview-id\") String previewId,\n                      @QueryParam(\"target\") String target,\n                      @QueryParam(\"tag\") List<String> tags) throws Exception {\n-    MetricsQueryHelper helper = getMetricsQueryHelper(namespaceId, previewId);\n+    // Check if valid application id\n+    ApplicationId applicationId = new ApplicationId(namespaceId, previewId);\n+    previewManager.getRunner().getStatus(applicationId);", "originalCommit": "01a591b3051397b87d0982a9e2746ce392fd6b34", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2d98673d2f556d522ea2c0411c03efda3892e7d4", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java\nindex 824797d5a9d..7799930ada3 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java\n\n@@ -233,9 +230,7 @@ public class PreviewHttpHandler extends AbstractLogHttpHandler {\n                      @PathParam(\"preview-id\") String previewId,\n                      @QueryParam(\"target\") String target,\n                      @QueryParam(\"tag\") List<String> tags) throws Exception {\n-    // Check if valid application id\n-    ApplicationId applicationId = new ApplicationId(namespaceId, previewId);\n-    previewManager.getRunner().getStatus(applicationId);\n+    validateAndGetAppId(namespaceId, previewId);\n \n     MetricsQueryHelper helper = getMetricsQueryHelper();\n     if (target == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NjU1MA==", "url": "https://github.com/cdapio/cdap/pull/12343#discussion_r441656550", "bodyText": "Question - here if the preview service gets restarted, is there a way to restore the previous preview runs? Previously when using a map, we will scan the folder names to restore the previous runs, how is this part of logic get handled now?", "author": "yaojiefeng", "createdAt": "2020-06-17T16:00:26Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewManager.java", "diffHunk": "@@ -106,9 +97,9 @@\n   private final DatasetFramework datasetFramework;\n   private final SecureStore secureStore;\n   private final TransactionSystemClient transactionSystemClient;\n-  private final ConcurrentMap<ApplicationId, Injector> appInjectors;\n   private final Path previewDataDir;\n   private final PreviewRunnerModuleFactory previewRunnerModuleFactory;\n+  private Injector previewInjector;", "originalCommit": "01a591b3051397b87d0982a9e2746ce392fd6b34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NzgxNg==", "url": "https://github.com/cdapio/cdap/pull/12343#discussion_r441777816", "bodyText": "The restoration in the previous code was primarily to start preview application specific services required to serve the preview data for that particular application. In the new code since we have single table for all preview runs we don't need to startup preview application specific services. What is missing is ability to mark orphan previews to be KILLED as here https://github.com/cdapio/cdap/blob/develop/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java#L332. Have files bug to tackle that - https://issues.cask.co/browse/CDAP-16997", "author": "sagarkapare", "createdAt": "2020-06-17T19:18:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NjU1MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0MDE0NA==", "url": "https://github.com/cdapio/cdap/pull/12343#discussion_r441840144", "bodyText": "Seems like this is not used anymore? Are we not enforcing max concurrent runs?", "author": "chtyim", "createdAt": "2020-06-17T21:18:39Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewManager.java", "diffHunk": "@@ -124,173 +115,58 @@\n     this.secureStore = secureStore;\n     this.transactionSystemClient = transactionSystemClient;\n     this.previewDataDir = Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"preview\").toAbsolutePath();\n-    this.appInjectors = new ConcurrentHashMap<>();\n     this.maxPreviews = cConf.getInt(Constants.Preview.PREVIEW_CACHE_SIZE, 10);", "originalCommit": "90c9c424d9ca9df84e2335a09c71b6a8b6be547e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4NDkyOQ==", "url": "https://github.com/cdapio/cdap/pull/12343#discussion_r441884929", "bodyText": "As discussed offline we will enforce the max concurrent runs. will be part of separate PR.", "author": "sagarkapare", "createdAt": "2020-06-17T23:20:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0MDE0NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2d98673d2f556d522ea2c0411c03efda3892e7d4", "url": "https://github.com/cdapio/cdap/commit/2d98673d2f556d522ea2c0411c03efda3892e7d4", "message": "CDAP-16987 Keep single store for all preview runs owned by PreviewManager.", "committedDate": "2020-06-17T23:23:33Z", "type": "commit"}, {"oid": "2d98673d2f556d522ea2c0411c03efda3892e7d4", "url": "https://github.com/cdapio/cdap/commit/2d98673d2f556d522ea2c0411c03efda3892e7d4", "message": "CDAP-16987 Keep single store for all preview runs owned by PreviewManager.", "committedDate": "2020-06-17T23:23:33Z", "type": "forcePushed"}]}