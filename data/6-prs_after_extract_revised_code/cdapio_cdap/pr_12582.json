{"pr_number": 12582, "pr_title": "CDAP-17166 fix bug where num executors was being ignored", "pr_createdAt": "2020-08-06T22:04:50Z", "pr_url": "https://github.com/cdapio/cdap/pull/12582", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMTkxNA==", "url": "https://github.com/cdapio/cdap/pull/12582#discussion_r466711914", "bodyText": "should this be numSources + 2?", "author": "CuriousVini", "createdAt": "2020-08-06T22:07:02Z", "path": "cdap-app-templates/cdap-etl/cdap-data-streams/src/main/java/io/cdap/cdap/datastreams/DataStreamsSparkLauncher.java", "diffHunk": "@@ -118,12 +115,33 @@ public void initialize() throws Exception {\n     // without this, stopping will hang on machines with few cores.\n     sparkConf.set(\"spark.rpc.netty.dispatcher.numThreads\", String.valueOf(numSources + 2));\n \n-    sparkConf.set(\"spark.executor.instances\", String.valueOf(numSources + 2));\n     sparkConf.setMaster(String.format(\"local[%d]\", numSources + 2));\n \n     if (spec.isUnitTest()) {\n       sparkConf.setMaster(String.format(\"local[%d]\", numSources + 1));\n     }\n+\n+    // override defaults with any user provided engine configs\n+    int minExecutors = numSources + 1;", "originalCommit": "7c900240c545e2597ca6074c0536abd4d4e7c47e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMzE4Ng==", "url": "https://github.com/cdapio/cdap/pull/12582#discussion_r466713186", "bodyText": "it was +2 before as a default to allow 2 executors to process the data, but the actual minimum is +1.\nI think I should change the logic a little so that the default stays the same unless it's in these properties. Will make the change.", "author": "albertshau", "createdAt": "2020-08-06T22:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMTkxNA=="}], "type": "inlineReview", "revised_code": {"commit": "20bcae0b9b42eb0472c3b51215149725e35e6c8c", "chunk": "diff --git a/cdap-app-templates/cdap-etl/cdap-data-streams/src/main/java/io/cdap/cdap/datastreams/DataStreamsSparkLauncher.java b/cdap-app-templates/cdap-etl/cdap-data-streams/src/main/java/io/cdap/cdap/datastreams/DataStreamsSparkLauncher.java\nindex 337ffba2cda..e28e658899c 100644\n--- a/cdap-app-templates/cdap-etl/cdap-data-streams/src/main/java/io/cdap/cdap/datastreams/DataStreamsSparkLauncher.java\n+++ b/cdap-app-templates/cdap-etl/cdap-data-streams/src/main/java/io/cdap/cdap/datastreams/DataStreamsSparkLauncher.java\n\n@@ -116,6 +116,7 @@ public class DataStreamsSparkLauncher extends AbstractSpark {\n     sparkConf.set(\"spark.rpc.netty.dispatcher.numThreads\", String.valueOf(numSources + 2));\n \n     sparkConf.setMaster(String.format(\"local[%d]\", numSources + 2));\n+    sparkConf.set(\"spark.executor.instances\", String.valueOf(numSources + 2));\n \n     if (spec.isUnitTest()) {\n       sparkConf.setMaster(String.format(\"local[%d]\", numSources + 1));\n"}}, {"oid": "20bcae0b9b42eb0472c3b51215149725e35e6c8c", "url": "https://github.com/cdapio/cdap/commit/20bcae0b9b42eb0472c3b51215149725e35e6c8c", "message": "CDAP-17166 fix bug where num executors was being ignored\n\nFixed a bug in streaming pipelines where the default number of\nexecutors was overwriting the number explicitly set by the user.", "committedDate": "2020-08-06T22:12:39Z", "type": "commit"}, {"oid": "20bcae0b9b42eb0472c3b51215149725e35e6c8c", "url": "https://github.com/cdapio/cdap/commit/20bcae0b9b42eb0472c3b51215149725e35e6c8c", "message": "CDAP-17166 fix bug where num executors was being ignored\n\nFixed a bug in streaming pipelines where the default number of\nexecutors was overwriting the number explicitly set by the user.", "committedDate": "2020-08-06T22:12:39Z", "type": "forcePushed"}]}