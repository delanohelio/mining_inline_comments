{"pr_number": 12825, "pr_title": "CDAP-17339 Added Metrics api to accept additional tags in the metric context from program.", "pr_createdAt": "2020-10-27T22:10:09Z", "pr_url": "https://github.com/cdapio/cdap/pull/12825", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NTY4OQ==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513075689", "bodyText": "what is the behavior if the tags here overlap with the tags for the current Metrics instance?", "author": "albertshau", "createdAt": "2020-10-27T22:41:47Z", "path": "cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java", "diffHunk": "@@ -34,5 +36,17 @@\n    * @param value The value to be set.\n    */\n   void gauge(String metricName, long value);\n+\n+  /**\n+   * Get the child {@link Metrics} by adding specified tags to the current metrics context.", "originalCommit": "4b638e1f831d429ba2bc4f78dfae4d8ec85eafa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA5ODE1OQ==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513098159", "bodyText": "Implementation of this method delegates to the MetricsContext implementation. Current MetricsContext implementation has odd behavior though -\n\nIf tag is added using this method - https://github.com/cdapio/cdap/blob/develop/cdap-watchdog/src/main/java/io/cdap/cdap/metrics/collect/AggregatedMetricsCollectionService.java#L241 IllegalArgumentException would be thrown for duplicate keys.\nIf tag is added using this method - https://github.com/cdapio/cdap/blob/develop/cdap-watchdog/src/main/java/io/cdap/cdap/metrics/collect/AggregatedMetricsCollectionService.java#L256 duplicate keys are allowed.", "author": "sagarkapare", "createdAt": "2020-10-27T23:49:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA5OTAyOQ==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513099029", "bodyText": "I think its better to throw exception when overlap happens so that user dont accidentally updates values for tags such as runid, namespace etc. Let me know your thoughts.", "author": "sagarkapare", "createdAt": "2020-10-27T23:52:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNTk0Ng==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513205946", "bodyText": "I think its better to throw exception when overlap happens so that user dont accidentally updates values for tags such as runid, namespace etc. Let me know your thoughts.\n\n+1, we should make them consistent and to avoid accidentally override the predefined tags, it would better to throw exceptions.", "author": "seanzhougoogle", "createdAt": "2020-10-28T06:26:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcxMjEwNg==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513712106", "bodyText": "Throwing exception in presence of duplicate tags from Metrics API now. Please check.", "author": "sagarkapare", "createdAt": "2020-10-28T19:39:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NTY4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e41db1c00eb36d615df776417dbbb8e427c763f1", "chunk": "diff --git a/cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java b/cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java\nindex 89b64e14962..17d9c880c96 100644\n--- a/cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java\n+++ b/cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java\n\n@@ -41,6 +41,7 @@ public interface Metrics {\n    * Get the child {@link Metrics} by adding specified tags to the current metrics context.\n    * @param tags to be added to the current metrics context\n    * @return an instance of {@link Metrics} which can be used to collect metrics with new child context.\n+   * @throws IllegalArgumentException if any of the supplied tag name already exists in the current metrics context\n    */\n   Metrics child(Map<String, String> tags);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3Njg0Mg==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513076842", "bodyText": "is this an unmodifiable map? If not, we should make sure it is.", "author": "albertshau", "createdAt": "2020-10-27T22:45:02Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/ProgramUserMetrics.java", "diffHunk": "@@ -42,4 +52,14 @@ public void count(String metricName, int delta) {\n   public void gauge(String metricName, long value) {\n     metricsContext.gauge(metricName, value);\n   }\n+\n+  @Override\n+  public Metrics child(Map<String, String> tags) {\n+    return new ProgramUserMetrics(metricsContext.childContext(tags), false);\n+  }\n+\n+  @Override\n+  public Map<String, String> getTags() {\n+    return metricsContext.getTags();", "originalCommit": "4b638e1f831d429ba2bc4f78dfae4d8ec85eafa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA5MDQzNw==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513090437", "bodyText": "Context keeps immutable map as member so returned map is unmodifiable - https://github.com/cdapio/cdap/blob/develop/cdap-watchdog/src/main/java/io/cdap/cdap/metrics/collect/AggregatedMetricsCollectionService.java#L226", "author": "sagarkapare", "createdAt": "2020-10-27T23:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3Njg0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e41db1c00eb36d615df776417dbbb8e427c763f1", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/ProgramUserMetrics.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/ProgramUserMetrics.java\nindex 1c8ff7a5c66..20526edda67 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/ProgramUserMetrics.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/ProgramUserMetrics.java\n\n@@ -55,6 +56,12 @@ public class ProgramUserMetrics implements Metrics {\n \n   @Override\n   public Metrics child(Map<String, String> tags) {\n+    Sets.SetView<String> intersection = Sets.intersection(getTags().keySet(), tags.keySet());\n+    if (!intersection.isEmpty()) {\n+      throw new IllegalArgumentException(String.format(\"Tags with names '%s' already exists in the context. \" +\n+                                                         \"Child Metrics cannot be created with duplicate tag names.\",\n+                                                       String.join(\", \", intersection)));\n+    }\n     return new ProgramUserMetrics(metricsContext.childContext(tags), false);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NzU0NQ==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513077545", "bodyText": "needs to be updated.", "author": "albertshau", "createdAt": "2020-10-27T22:47:13Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/WorkflowMetrics.java", "diffHunk": "@@ -46,4 +49,16 @@ public void gauge(String metricName, long value) {\n     programMetricsContext.gauge(metricName, value);\n     workflowMetricsContext.gauge(metricName, value);\n   }\n+\n+  @Override\n+  public Metrics child(Map<String, String> tags) {\n+    return new WorkflowMetrics(programMetricsContext.childContext(tags), workflowMetricsContext.childContext(tags));\n+  }\n+\n+  @Override\n+  public Map<String, String> getTags() {\n+    Map<String, String> result = new HashMap<>();\n+    result.putAll(programMetricsContext.getTags());\n+    return null;", "originalCommit": "4b638e1f831d429ba2bc4f78dfae4d8ec85eafa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA5MTgxOA==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513091818", "bodyText": "This class is actually seems unused. It was introduced here - https://issues.cask.co/browse/CDAP-5450 in order to emit metrics in two different contexts for program running under workflow, one for program itself and another for workflow. However turned out that caused duplicate counting at namespace/app level - https://issues.cask.co/browse/CDAP-5656. So in https://issues.cask.co/browse/CDAP-5656 instead of emitting metrics at 2 context we added additional worklow related tags to the program metrics context itself.  This made WorklowMetrics class redundant.", "author": "sagarkapare", "createdAt": "2020-10-27T23:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NzU0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e41db1c00eb36d615df776417dbbb8e427c763f1", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/WorkflowMetrics.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/WorkflowMetrics.java\ndeleted file mode 100644\nindex d6411cc0c13..00000000000\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/WorkflowMetrics.java\n+++ /dev/null\n\n@@ -1,64 +0,0 @@\n-/*\n- * Copyright \u00a9 2016 Cask Data, Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations under\n- * the License.\n- */\n-\n-package io.cdap.cdap.app.metrics;\n-\n-import io.cdap.cdap.api.metrics.Metrics;\n-import io.cdap.cdap.api.metrics.MetricsCollectionService;\n-import io.cdap.cdap.api.metrics.MetricsContext;\n-import io.cdap.cdap.common.conf.Constants;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-\n-/**\n- * Implementation of {@link Metrics}, context used by programs, if they are a part of a workflow.\n- * we emit metrics in two context, program context and workflow context.\n- * Metrics will be emitted through {@link MetricsCollectionService}\n- */\n-public class WorkflowMetrics implements Metrics {\n-  private final MetricsContext programMetricsContext;\n-  private final MetricsContext workflowMetricsContext;\n-\n-  public WorkflowMetrics(MetricsContext programMetricsContext, MetricsContext workflowMetricsContext) {\n-    this.programMetricsContext = programMetricsContext.childContext(Constants.Metrics.Tag.SCOPE, \"user\");\n-    this.workflowMetricsContext = workflowMetricsContext.childContext(Constants.Metrics.Tag.SCOPE, \"user\");\n-  }\n-\n-  @Override\n-  public void count(String metricName, int delta) {\n-    programMetricsContext.increment(metricName, delta);\n-    workflowMetricsContext.increment(metricName, delta);\n-  }\n-\n-  @Override\n-  public void gauge(String metricName, long value) {\n-    programMetricsContext.gauge(metricName, value);\n-    workflowMetricsContext.gauge(metricName, value);\n-  }\n-\n-  @Override\n-  public Metrics child(Map<String, String> tags) {\n-    return new WorkflowMetrics(programMetricsContext.childContext(tags), workflowMetricsContext.childContext(tags));\n-  }\n-\n-  @Override\n-  public Map<String, String> getTags() {\n-    Map<String, String> result = new HashMap<>();\n-    result.putAll(programMetricsContext.getTags());\n-    return null;\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3Nzg5OA==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513077898", "bodyText": "does this mean the context returns a modifiable map? Seems like we should change it to be unmodifiable.", "author": "albertshau", "createdAt": "2020-10-27T22:48:16Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/WorkflowMetrics.java", "diffHunk": "@@ -46,4 +49,16 @@ public void gauge(String metricName, long value) {\n     programMetricsContext.gauge(metricName, value);\n     workflowMetricsContext.gauge(metricName, value);\n   }\n+\n+  @Override\n+  public Metrics child(Map<String, String> tags) {\n+    return new WorkflowMetrics(programMetricsContext.childContext(tags), workflowMetricsContext.childContext(tags));\n+  }\n+\n+  @Override\n+  public Map<String, String> getTags() {\n+    Map<String, String> result = new HashMap<>();\n+    result.putAll(programMetricsContext.getTags());", "originalCommit": "4b638e1f831d429ba2bc4f78dfae4d8ec85eafa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA5MjAxMg==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513092012", "bodyText": "Removed the WorkflowMetrics class.", "author": "sagarkapare", "createdAt": "2020-10-27T23:30:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3Nzg5OA=="}], "type": "inlineReview", "revised_code": {"commit": "e41db1c00eb36d615df776417dbbb8e427c763f1", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/WorkflowMetrics.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/WorkflowMetrics.java\ndeleted file mode 100644\nindex d6411cc0c13..00000000000\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/metrics/WorkflowMetrics.java\n+++ /dev/null\n\n@@ -1,64 +0,0 @@\n-/*\n- * Copyright \u00a9 2016 Cask Data, Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations under\n- * the License.\n- */\n-\n-package io.cdap.cdap.app.metrics;\n-\n-import io.cdap.cdap.api.metrics.Metrics;\n-import io.cdap.cdap.api.metrics.MetricsCollectionService;\n-import io.cdap.cdap.api.metrics.MetricsContext;\n-import io.cdap.cdap.common.conf.Constants;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-\n-/**\n- * Implementation of {@link Metrics}, context used by programs, if they are a part of a workflow.\n- * we emit metrics in two context, program context and workflow context.\n- * Metrics will be emitted through {@link MetricsCollectionService}\n- */\n-public class WorkflowMetrics implements Metrics {\n-  private final MetricsContext programMetricsContext;\n-  private final MetricsContext workflowMetricsContext;\n-\n-  public WorkflowMetrics(MetricsContext programMetricsContext, MetricsContext workflowMetricsContext) {\n-    this.programMetricsContext = programMetricsContext.childContext(Constants.Metrics.Tag.SCOPE, \"user\");\n-    this.workflowMetricsContext = workflowMetricsContext.childContext(Constants.Metrics.Tag.SCOPE, \"user\");\n-  }\n-\n-  @Override\n-  public void count(String metricName, int delta) {\n-    programMetricsContext.increment(metricName, delta);\n-    workflowMetricsContext.increment(metricName, delta);\n-  }\n-\n-  @Override\n-  public void gauge(String metricName, long value) {\n-    programMetricsContext.gauge(metricName, value);\n-    workflowMetricsContext.gauge(metricName, value);\n-  }\n-\n-  @Override\n-  public Metrics child(Map<String, String> tags) {\n-    return new WorkflowMetrics(programMetricsContext.childContext(tags), workflowMetricsContext.childContext(tags));\n-  }\n-\n-  @Override\n-  public Map<String, String> getTags() {\n-    Map<String, String> result = new HashMap<>();\n-    result.putAll(programMetricsContext.getTags());\n-    return null;\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5NTY4NA==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513795684", "bodyText": "generally we don't declare throws [? extends RuntimeException], we just put it in the javadoc.", "author": "albertshau", "createdAt": "2020-10-28T22:19:00Z", "path": "cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java", "diffHunk": "@@ -34,5 +36,18 @@\n    * @param value The value to be set.\n    */\n   void gauge(String metricName, long value);\n+\n+  /**\n+   * Get the child {@link Metrics} by adding specified tags to the current metrics context.\n+   * @param tags to be added to the current metrics context\n+   * @return an instance of {@link Metrics} which can be used to collect metrics with new child context.\n+   * @throws IllegalArgumentException if any of the supplied tag name already exists in the current metrics context\n+   */\n+  Metrics child(Map<String, String> tags) throws IllegalArgumentException;", "originalCommit": "0434ee636fec4fa9e699500f51980426bee7f342", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5NzcwNQ==", "url": "https://github.com/cdapio/cdap/pull/12825#discussion_r513797705", "bodyText": "ah right.. removed.", "author": "sagarkapare", "createdAt": "2020-10-28T22:23:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5NTY4NA=="}], "type": "inlineReview", "revised_code": {"commit": "e41db1c00eb36d615df776417dbbb8e427c763f1", "chunk": "diff --git a/cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java b/cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java\nindex 586a38bd8e3..17d9c880c96 100644\n--- a/cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java\n+++ b/cdap-api/src/main/java/io/cdap/cdap/api/metrics/Metrics.java\n\n@@ -43,7 +43,7 @@ public interface Metrics {\n    * @return an instance of {@link Metrics} which can be used to collect metrics with new child context.\n    * @throws IllegalArgumentException if any of the supplied tag name already exists in the current metrics context\n    */\n-  Metrics child(Map<String, String> tags) throws IllegalArgumentException;\n+  Metrics child(Map<String, String> tags);\n \n   /**\n    * @return the tags that identifies the metrics context for this {@link Metrics} instance.\n"}}, {"oid": "e41db1c00eb36d615df776417dbbb8e427c763f1", "url": "https://github.com/cdapio/cdap/commit/e41db1c00eb36d615df776417dbbb8e427c763f1", "message": "CDAP-17339 Added Metrics api to accept additional tags in the metric context from program.", "committedDate": "2020-10-28T22:23:20Z", "type": "forcePushed"}, {"oid": "e5e638182f17361215e304d8f9d1d9d72a7277fc", "url": "https://github.com/cdapio/cdap/commit/e5e638182f17361215e304d8f9d1d9d72a7277fc", "message": "CDAP-17339 Added Metrics api to accept additional tags in the metric context from program.", "committedDate": "2020-10-28T22:38:53Z", "type": "forcePushed"}, {"oid": "17b3afed4cf106d2c2de7e13963d9bad361c6d31", "url": "https://github.com/cdapio/cdap/commit/17b3afed4cf106d2c2de7e13963d9bad361c6d31", "message": "CDAP-17339 Added Metrics api to accept additional tags in the metric context from program.", "committedDate": "2020-10-29T01:31:06Z", "type": "commit"}, {"oid": "17b3afed4cf106d2c2de7e13963d9bad361c6d31", "url": "https://github.com/cdapio/cdap/commit/17b3afed4cf106d2c2de7e13963d9bad361c6d31", "message": "CDAP-17339 Added Metrics api to accept additional tags in the metric context from program.", "committedDate": "2020-10-29T01:31:06Z", "type": "forcePushed"}]}