{"pr_number": 12041, "pr_title": "[CDAP-16353] Add scaling factor to adjust resource size for KubeTwill program", "pr_createdAt": "2020-04-08T18:11:57Z", "pr_url": "https://github.com/cdapio/cdap/pull/12041", "timeline": [{"oid": "795fd9ad2c9c810c6566c9981bcaea0ab9b1c710", "url": "https://github.com/cdapio/cdap/commit/795fd9ad2c9c810c6566c9981bcaea0ab9b1c710", "message": "Add cpu scaling factor for KubeTwillPreparer.", "committedDate": "2020-04-08T18:50:12Z", "type": "commit"}, {"oid": "ed5642d767d7d6caa85e2f457ee33ca4b8a734d1", "url": "https://github.com/cdapio/cdap/commit/ed5642d767d7d6caa85e2f457ee33ca4b8a734d1", "message": "(CDAP-16353) Refactor KubeTwillPreparer k8s deployment building into its own function\n\nWhat:\nRefactor the k8s deployment object building into a separate function\nwith all external data required passed in via parameters.\n\nWhy:\nAllow us to write a unit test for this function to verify the state of\ndeployment k8s object is as expectd.", "committedDate": "2020-04-08T18:50:20Z", "type": "commit"}, {"oid": "5b6523dad0135d1e43b7655b96ae4dd957d790b7", "url": "https://github.com/cdapio/cdap/commit/5b6523dad0135d1e43b7655b96ae4dd957d790b7", "message": "clean up", "committedDate": "2020-04-08T18:50:20Z", "type": "commit"}, {"oid": "5b6523dad0135d1e43b7655b96ae4dd957d790b7", "url": "https://github.com/cdapio/cdap/commit/5b6523dad0135d1e43b7655b96ae4dd957d790b7", "message": "clean up", "committedDate": "2020-04-08T18:50:20Z", "type": "forcePushed"}, {"oid": "c05c69a0c8e69868d6c52565379293717ac03c7c", "url": "https://github.com/cdapio/cdap/commit/c05c69a0c8e69868d6c52565379293717ac03c7c", "message": "merge develop", "committedDate": "2020-04-08T18:54:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4MDk4OA==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405780988", "bodyText": "How about adding \"resource\" to the name, e.g. kubeResourceScalingFactors", "author": "wyzhang", "createdAt": "2020-04-08T20:04:10Z", "path": "cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java", "diffHunk": "@@ -96,14 +96,16 @@\n   private final Map<String, Map<String, String>> environments;\n   private final RunId twillRunId;\n   private final V1ObjectMeta resourceMeta;\n+  private final Map<String, Float> kubeScalingFactors;", "originalCommit": "c05c69a0c8e69868d6c52565379293717ac03c7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5MjI0MQ==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405792241", "bodyText": "Would it be simpler to keep a pointer to conf in KubeTwillRunnerService and KubeTwillPreparer?\nThen you would need to add const string for the keys\nkubernetes.request.memory.multiplier and kubernetes.request.cpu.multiplier to\nio.cdap.cdap.common.conf.Constants\nSet the default value in\ncdap-common/src/main/resources/cdap-default.xml", "author": "wyzhang", "createdAt": "2020-04-08T20:24:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4MDk4OA=="}], "type": "inlineReview", "revised_code": {"commit": "29c4ec3cb5417d875579485a039bcde50ff0075f", "chunk": "diff --git a/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java b/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\nindex 7469262ec65..d6df078b80e 100644\n--- a/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\n+++ b/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\n\n@@ -96,7 +99,7 @@ class KubeTwillPreparer implements TwillPreparer {\n   private final Map<String, Map<String, String>> environments;\n   private final RunId twillRunId;\n   private final V1ObjectMeta resourceMeta;\n-  private final Map<String, Float> kubeScalingFactors;\n+  private final Map<String, String> kubeMasterConf;\n   private final KubeTwillControllerFactory controllerFactory;\n   private final URI appSpec;\n   private final URI programOptions;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4NDE2MQ==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405784161", "bodyText": "nit: maybe just shorten the name to CPU_MULTIPLIER", "author": "wyzhang", "createdAt": "2020-04-08T20:10:14Z", "path": "cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java", "diffHunk": "@@ -74,6 +74,8 @@\n   private static final String INSTANCE_LABEL = \"master.environment.k8s.instance.label\";\n   // Label for the container name\n   private static final String CONTAINER_LABEL = \"master.environment.k8s.container.label\";\n+  private static final String CPU_SCALING_FACTOR = \"master.environment.k8s.container.cpu.scaling.factor\";", "originalCommit": "c05c69a0c8e69868d6c52565379293717ac03c7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4NDQ3Mw==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405784473", "bodyText": "same for other places scaling_factor -> multiplier", "author": "wyzhang", "createdAt": "2020-04-08T20:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4NDE2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "29c4ec3cb5417d875579485a039bcde50ff0075f", "chunk": "diff --git a/cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java b/cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java\nindex 10880580f7a..adb8fd366f1 100644\n--- a/cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java\n+++ b/cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java\n\n@@ -74,8 +74,6 @@ public class KubeMasterEnvironment implements MasterEnvironment {\n   private static final String INSTANCE_LABEL = \"master.environment.k8s.instance.label\";\n   // Label for the container name\n   private static final String CONTAINER_LABEL = \"master.environment.k8s.container.label\";\n-  private static final String CPU_SCALING_FACTOR = \"master.environment.k8s.container.cpu.scaling.factor\";\n-  private static final String MEMORY_SCALING_FACTOR = \"master.environment.k8s.container.memory.scaling.factor\";\n   private static final String POD_INFO_DIR = \"master.environment.k8s.pod.info.dir\";\n   private static final String POD_NAME_FILE = \"master.environment.k8s.pod.name.file\";\n   private static final String POD_LABELS_FILE = \"master.environment.k8s.pod.labels.file\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5NDI3OA==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405794278", "bodyText": "Why need to copy the config? You can pass the whole conf object to the runner service. In future there could be other configurations being added.", "author": "chtyim", "createdAt": "2020-04-08T20:28:13Z", "path": "cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java", "diffHunk": "@@ -149,7 +152,12 @@ public void initialize(MasterEnvironmentContext context) throws IOException, Api\n                namespace, podKillerSelector, delayMillis);\n     }\n \n-    twillRunner = new KubeTwillRunnerService(namespace, discoveryService, podInfo, resourcePrefix,\n+    Map<String, Float> kubeScalingFactors = new HashMap<String, Float>();\n+    kubeScalingFactors.put(\"cpu\", Float.parseFloat(conf.getOrDefault(CPU_SCALING_FACTOR, DEFAULT_SCALING_FACTOR)));", "originalCommit": "c05c69a0c8e69868d6c52565379293717ac03c7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3NTkzNA==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405875934", "bodyText": "Done.", "author": "hsiaoching", "createdAt": "2020-04-08T23:41:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5NDI3OA=="}], "type": "inlineReview", "revised_code": {"commit": "29c4ec3cb5417d875579485a039bcde50ff0075f", "chunk": "diff --git a/cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java b/cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java\nindex 10880580f7a..adb8fd366f1 100644\n--- a/cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java\n+++ b/cdap-kubernetes/src/main/java/io/cdap/cdap/master/environment/k8s/KubeMasterEnvironment.java\n\n@@ -152,12 +149,7 @@ public class KubeMasterEnvironment implements MasterEnvironment {\n                namespace, podKillerSelector, delayMillis);\n     }\n \n-    Map<String, Float> kubeScalingFactors = new HashMap<String, Float>();\n-    kubeScalingFactors.put(\"cpu\", Float.parseFloat(conf.getOrDefault(CPU_SCALING_FACTOR, DEFAULT_SCALING_FACTOR)));\n-    kubeScalingFactors.put(\"memory\",\n-                           Float.parseFloat(conf.getOrDefault(MEMORY_SCALING_FACTOR, DEFAULT_SCALING_FACTOR)));\n-\n-    twillRunner = new KubeTwillRunnerService(namespace, discoveryService, podInfo, resourcePrefix, kubeScalingFactors,\n+    twillRunner = new KubeTwillRunnerService(namespace, discoveryService, podInfo, resourcePrefix, conf,\n                                              Collections.singletonMap(instanceLabel, instanceName));\n     LOG.info(\"Kubernetes environment initialized with pod labels {}\", podLabels);\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5NDk1NA==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405794954", "bodyText": "Does Quantity takes floating point value? Should we round it up/down?", "author": "chtyim", "createdAt": "2020-04-08T20:29:22Z", "path": "cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java", "diffHunk": "@@ -453,9 +456,10 @@ V1Deployment buildDeployment(RunId runid,\n \n     V1ResourceRequirements resourceRequirements = new V1ResourceRequirements();\n     Map<String, Quantity> quantityMap = new HashMap<>();\n-    quantityMap.put(\"cpu\", new Quantity(String.valueOf(vCores)));\n+    quantityMap.put(\"cpu\", new Quantity(String.valueOf((float) (vCores * kubeScalingFactors.get(\"cpu\")))));", "originalCommit": "c05c69a0c8e69868d6c52565379293717ac03c7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzNzU0Mw==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405837543", "bodyText": "Quantity converts the string number to BigDecimal so can be float. Ref: https://github.com/kubernetes-client/java/blob/master/kubernetes/src/main/java/io/kubernetes/client/custom/Quantity.java#L17\nThe default value of vCores is 1. Rounding up or down would remove the scaling effect we want here. Ref: https://github.com/apache/twill/blob/master/twill-api/src/main/java/org/apache/twill/api/ResourceSpecification.java#L28", "author": "hsiaoching", "createdAt": "2020-04-08T21:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5NDk1NA=="}], "type": "inlineReview", "revised_code": {"commit": "29c4ec3cb5417d875579485a039bcde50ff0075f", "chunk": "diff --git a/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java b/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\nindex 7469262ec65..d6df078b80e 100644\n--- a/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\n+++ b/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\n\n@@ -456,10 +459,11 @@ class KubeTwillPreparer implements TwillPreparer {\n \n     V1ResourceRequirements resourceRequirements = new V1ResourceRequirements();\n     Map<String, Quantity> quantityMap = new HashMap<>();\n-    quantityMap.put(\"cpu\", new Quantity(String.valueOf((float) (vCores * kubeScalingFactors.get(\"cpu\")))));\n+    float cpuMultiplier = Float.parseFloat(kubeMasterConf.getOrDefault(CPU_MULTIPLIER, DEFAULT_MULTIPLIER));\n+    float memoryMultiplier = Float.parseFloat(kubeMasterConf.getOrDefault(MEMORY_MULTIPLIER, DEFAULT_MULTIPLIER));\n+    quantityMap.put(\"cpu\", new Quantity(String.valueOf((float) (vCores * cpuMultiplier))));\n     // Use slight larger container size\n-    quantityMap.put(\"memory\",\n-                    new Quantity(String.format(\"%dMi\", (int) (memoryMB * kubeScalingFactors.get(\"memory\") *  1.2f))));\n+    quantityMap.put(\"memory\", new Quantity(String.format(\"%dMi\", (int) (memoryMB * memoryMultiplier * 1.2f))));\n     resourceRequirements.setRequests(quantityMap);\n     container.setResources(resourceRequirements);\n \n"}}, {"oid": "29c4ec3cb5417d875579485a039bcde50ff0075f", "url": "https://github.com/cdapio/cdap/commit/29c4ec3cb5417d875579485a039bcde50ff0075f", "message": "refactor", "committedDate": "2020-04-08T23:08:30Z", "type": "commit"}, {"oid": "01c4865714a1f2e8056c9625c42f202ccf1f4500", "url": "https://github.com/cdapio/cdap/commit/01c4865714a1f2e8056c9625c42f202ccf1f4500", "message": "refactor", "committedDate": "2020-04-08T23:20:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2ODg1NQ==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405868855", "bodyText": "nitpicking: maybe name it conf", "author": "wyzhang", "createdAt": "2020-04-08T23:19:00Z", "path": "cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java", "diffHunk": "@@ -96,14 +99,16 @@\n   private final Map<String, Map<String, String>> environments;\n   private final RunId twillRunId;\n   private final V1ObjectMeta resourceMeta;\n+  private final Map<String, String> kubeMasterConf;", "originalCommit": "29c4ec3cb5417d875579485a039bcde50ff0075f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01c4865714a1f2e8056c9625c42f202ccf1f4500", "chunk": "diff --git a/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java b/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\nindex d6df078b80e..6575866c2e5 100644\n--- a/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\n+++ b/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\n\n@@ -99,7 +99,7 @@ class KubeTwillPreparer implements TwillPreparer {\n   private final Map<String, Map<String, String>> environments;\n   private final RunId twillRunId;\n   private final V1ObjectMeta resourceMeta;\n-  private final Map<String, String> kubeMasterConf;\n+  private final Map<String, String> cConf;\n   private final KubeTwillControllerFactory controllerFactory;\n   private final URI appSpec;\n   private final URI programOptions;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3MDUxMw==", "url": "https://github.com/cdapio/cdap/pull/12041#discussion_r405870513", "bodyText": "how about using \"milli\" unit for CPU with rounding up like this?\nquantityMap.put(\"cpu\", new Quantity(String.format(\"%dm\", (int)Math.ceil((float)vCores * 1000 * multiplier))\nYou can create a util function\nvCoresToMilliCpu(vcore, multplier) {\n}", "author": "wyzhang", "createdAt": "2020-04-08T23:24:01Z", "path": "cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java", "diffHunk": "@@ -453,9 +459,11 @@ V1Deployment buildDeployment(RunId runid,\n \n     V1ResourceRequirements resourceRequirements = new V1ResourceRequirements();\n     Map<String, Quantity> quantityMap = new HashMap<>();\n-    quantityMap.put(\"cpu\", new Quantity(String.valueOf(vCores)));\n+    float cpuMultiplier = Float.parseFloat(kubeMasterConf.getOrDefault(CPU_MULTIPLIER, DEFAULT_MULTIPLIER));\n+    float memoryMultiplier = Float.parseFloat(kubeMasterConf.getOrDefault(MEMORY_MULTIPLIER, DEFAULT_MULTIPLIER));\n+    quantityMap.put(\"cpu\", new Quantity(String.valueOf((float) (vCores * cpuMultiplier))));", "originalCommit": "29c4ec3cb5417d875579485a039bcde50ff0075f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ac6937d16cba7053f2c968240115f674ffd2fe4", "chunk": "diff --git a/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java b/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\nindex d6df078b80e..d3f939aff79 100644\n--- a/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\n+++ b/cdap-kubernetes/src/main/java/io/cdap/cdap/k8s/runtime/KubeTwillPreparer.java\n\n@@ -459,9 +459,9 @@ class KubeTwillPreparer implements TwillPreparer {\n \n     V1ResourceRequirements resourceRequirements = new V1ResourceRequirements();\n     Map<String, Quantity> quantityMap = new HashMap<>();\n-    float cpuMultiplier = Float.parseFloat(kubeMasterConf.getOrDefault(CPU_MULTIPLIER, DEFAULT_MULTIPLIER));\n-    float memoryMultiplier = Float.parseFloat(kubeMasterConf.getOrDefault(MEMORY_MULTIPLIER, DEFAULT_MULTIPLIER));\n-    quantityMap.put(\"cpu\", new Quantity(String.valueOf((float) (vCores * cpuMultiplier))));\n+    float cpuMultiplier = Float.parseFloat(cConf.getOrDefault(CPU_MULTIPLIER, DEFAULT_MULTIPLIER));\n+    float memoryMultiplier = Float.parseFloat(cConf.getOrDefault(MEMORY_MULTIPLIER, DEFAULT_MULTIPLIER));\n+    quantityMap.put(\"cpu\", new Quantity(String.format(\"%dm\", (int) (vCores * 1000 * cpuMultiplier))));\n     // Use slight larger container size\n     quantityMap.put(\"memory\", new Quantity(String.format(\"%dMi\", (int) (memoryMB * memoryMultiplier * 1.2f))));\n     resourceRequirements.setRequests(quantityMap);\n"}}, {"oid": "2ac6937d16cba7053f2c968240115f674ffd2fe4", "url": "https://github.com/cdapio/cdap/commit/2ac6937d16cba7053f2c968240115f674ffd2fe4", "message": "refactor", "committedDate": "2020-04-09T00:57:44Z", "type": "commit"}]}