{"pr_number": 11982, "pr_title": "(CDAP-16353) Refactoring: move artifact http internal endpoints to a separate handler", "pr_createdAt": "2020-03-19T05:56:11Z", "pr_url": "https://github.com/cdapio/cdap/pull/11982", "timeline": [{"oid": "8cf4b0837757cb6692dac70c371da1e5cd0327c9", "url": "https://github.com/cdapio/cdap/commit/8cf4b0837757cb6692dac70c371da1e5cd0327c9", "message": "[CDAP-16353] Refactoring: move artifact http internal endpoints to a separate handler", "committedDate": "2020-03-19T05:47:34Z", "type": "commit"}, {"oid": "c9ba1987eafa00a6782885988ca9979537d6146a", "url": "https://github.com/cdapio/cdap/commit/c9ba1987eafa00a6782885988ca9979537d6146a", "message": "(CDAP-16353) Refactoring: move artifact http internal endpoints to a separate handler\n\nMove 2 artifact http internal endpoints (e.g. ../artifact-internals/...) to a separate internal http handler.\n\nThis is in preparation of introducing more internal endpoint for fetching artifact details,\nwhich is needed by preview to run with local levelDB.", "committedDate": "2020-03-19T05:50:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0OTM5Ng==", "url": "https://github.com/cdapio/cdap/pull/11982#discussion_r397349396", "bodyText": "nit, this can be put in the same line", "author": "yaojiefeng", "createdAt": "2020-03-24T17:51:06Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/ArtifactHttpHandlerInternal.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.gateway.handlers;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import com.google.gson.reflect.TypeToken;\n+import com.google.inject.Inject;\n+import com.google.inject.Singleton;\n+import io.cdap.cdap.api.artifact.ArtifactInfo;\n+import io.cdap.cdap.api.data.schema.Schema;\n+import io.cdap.cdap.common.conf.Constants;\n+import io.cdap.cdap.common.id.Id;\n+import io.cdap.cdap.internal.app.runtime.artifact.ArtifactDetail;\n+import io.cdap.cdap.internal.app.runtime.artifact.ArtifactRepository;\n+import io.cdap.cdap.internal.io.SchemaTypeAdapter;\n+import io.cdap.cdap.proto.id.NamespaceId;\n+import io.cdap.http.AbstractHttpHandler;\n+import io.cdap.http.HttpResponder;\n+import io.netty.handler.codec.http.HttpRequest;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+\n+/**\n+ * Internal {@link io.cdap.http.HttpHandler} for managing artifacts.\n+ */\n+@Singleton\n+@Path(Constants.Gateway.INTERNAL_API_VERSION_3)\n+public class ArtifactHttpHandlerInternal extends AbstractHttpHandler {\n+  private static final Logger LOG = LoggerFactory.getLogger(ArtifactHttpHandlerInternal.class);\n+  private static final Gson GSON = new GsonBuilder()\n+    .registerTypeAdapter(Schema.class, new SchemaTypeAdapter())\n+    .create();\n+  private static final Type ARTIFACT_INFO_LIST_TYPE = new TypeToken<List<ArtifactInfo>>() {", "originalCommit": "c9ba1987eafa00a6782885988ca9979537d6146a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ1MzM4Mg==", "url": "https://github.com/cdapio/cdap/pull/11982#discussion_r397453382", "bodyText": "Done", "author": "wyzhang", "createdAt": "2020-03-24T20:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0OTM5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "8926512a5549110e5cd5ba6261dde8604ca88bb0", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/ArtifactHttpHandlerInternal.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/ArtifactHttpHandlerInternal.java\nindex 48602fba669..0a40a14bc49 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/ArtifactHttpHandlerInternal.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/ArtifactHttpHandlerInternal.java\n\n@@ -53,8 +53,7 @@ public class ArtifactHttpHandlerInternal extends AbstractHttpHandler {\n   private static final Gson GSON = new GsonBuilder()\n     .registerTypeAdapter(Schema.class, new SchemaTypeAdapter())\n     .create();\n-  private static final Type ARTIFACT_INFO_LIST_TYPE = new TypeToken<List<ArtifactInfo>>() {\n-  }.getType();\n+  private static final Type ARTIFACT_INFO_LIST_TYPE = new TypeToken<List<ArtifactInfo>>() { }.getType();\n \n   private final ArtifactRepository artifactRepository;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM1MzI3OA==", "url": "https://github.com/cdapio/cdap/pull/11982#discussion_r397353278", "bodyText": "Is this class only responsible for calling internal REST endpoints? Better add a comment to the javadoc since I am assuming it will also call other public REST endpoints", "author": "yaojiefeng", "createdAt": "2020-03-24T17:56:44Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/RemoteArtifactManager.java", "diffHunk": "@@ -73,9 +73,9 @@\n     this.namespaceId = namespaceId;\n     this.retryStrategy = retryStrategy;\n     this.authorizationEnabled = cConf.getBoolean(Constants.Security.Authorization.ENABLED);\n-    this.remoteClient = new RemoteClient(discoveryServiceClient, Constants.Service.APP_FABRIC_HTTP,\n-                                         new DefaultHttpRequestConfig(false),\n-                                         String.format(\"%s\", Constants.Gateway.API_VERSION_3));\n+    this.remoteClientInternal = new RemoteClient(discoveryServiceClient, Constants.Service.APP_FABRIC_HTTP,", "originalCommit": "c9ba1987eafa00a6782885988ca9979537d6146a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NzgxOA==", "url": "https://github.com/cdapio/cdap/pull/11982#discussion_r397467818", "bodyText": "Yes. Internal endpoints only. Done. Updated the javadoc to mention communicating with internal endpoints only.", "author": "wyzhang", "createdAt": "2020-03-24T21:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM1MzI3OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM1NTE1Nw==", "url": "https://github.com/cdapio/cdap/pull/11982#discussion_r397355157", "bodyText": "nit - don't need this change, should keep @return in the javadoc, same as other places.", "author": "yaojiefeng", "createdAt": "2020-03-24T17:59:44Z", "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/http/handlers/ArtifactHttpHandlerTestBase.java", "diffHunk": "@@ -93,27 +98,77 @@ public void wipeData() throws Exception {\n   }\n \n   /**\n-   * Adds {@link AllProgramsApp} as system artifact which can be used as parent artifact for testing purpose\n-   * @throws Exception\n+   * Add {@link AllProgramsApp} as system artifact with the given {@link ArtifactId}\n+   * which can be used as parent artifact for testing purpose\n    */\n-  void addAppAsSystemArtifacts() throws Exception {\n-    File destination = new File(systemArtifactsDir + \"/app-1.0.0.jar\");\n+  protected void addAppAsSystemArtifacts(ArtifactId artifactId) throws Exception {\n+    File destination = new File(String.format(\"%s/%s-%s.jar\",\n+                                              systemArtifactsDir, artifactId.getArtifact(), artifactId.getVersion()));\n     buildAppArtifact(AllProgramsApp.class, new Manifest(), destination);\n     artifactRepository.addSystemArtifacts();\n   }\n \n   /**\n-   * @return {@link ArtifactInfo} of the given artifactId\n+   * Add {@link AllProgramsApp} as user artifact with the given {@link ArtifactId}\n    */\n-  ArtifactInfo getArtifact(ArtifactId artifactId) throws URISyntaxException, IOException {\n+  protected void addAppAsUserArtifacts(ArtifactId artifactId) throws Exception {\n+    CConfiguration cConf = getInjector().getInstance(CConfiguration.class);\n+    File localDataDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR));\n+    String namespaceDir = cConf.get(Constants.Namespace.NAMESPACES_DIR);\n+    File namespaceBase = new File(localDataDir, namespaceDir);\n+    File destination = new File(new File(namespaceBase, artifactId.getNamespace()),\n+                                String.format(\"%s-%s.jar\", artifactId.getArtifact(), artifactId.getVersion()));\n+    buildAppArtifact(AllProgramsApp.class, new Manifest(), destination);\n+    artifactRepository.addArtifact(new Id.Artifact(\n+                                     new Id.Namespace(artifactId.getNamespace()),\n+                                     artifactId.getArtifact(),\n+                                     new ArtifactVersion(artifactId.getVersion())),\n+                                   destination);\n+  }\n+\n+\n+  /**\n+   * Get {@link ArtifactInfo} of all artifacts in the given namespace. Artifacts from system namespace should be\n+   * included.\n+   */\n+  List<ArtifactInfo> listArtifactsInternal(String namespace) throws IOException {\n+    URL endpoint = getEndPoint(String.format(\"%s/namespaces/%s/artifacts\",\n+                                             Constants.Gateway.INTERNAL_API_VERSION_3, namespace)).toURL();\n+    return getResults(endpoint, ARTIFACT_INFO_LIST_TYPE);\n+  }\n+\n+  /**\n+   * Get the location path of the given artifact.\n+   */\n+  String getArtifactLocationPath(ArtifactId artifactId) throws ArtifactNotFoundException, IOException {\n+    URL endpoint = getEndPoint(String.format(\"%s/namespaces/%s/artifacts/%s/versions/%s/location\",\n+                                             Constants.Gateway.INTERNAL_API_VERSION_3,\n+                                             artifactId.getNamespace(),\n+                                             artifactId.getArtifact(),\n+                                             artifactId.getVersion())).toURL();\n+    HttpResponse httpResponse = HttpRequests.execute(HttpRequest.get(endpoint).build(),\n+                                                 new DefaultHttpRequestConfig(false));\n+\n+    int responseCode = httpResponse.getResponseCode();\n+    if (responseCode == HttpURLConnection.HTTP_NOT_FOUND) {\n+      throw new ArtifactNotFoundException(artifactId);\n+    }\n+    Assert.assertEquals(HttpURLConnection.HTTP_OK, responseCode);\n+    return httpResponse.getResponseBodyAsString();\n+  }\n+\n+  /**\n+   * Return {@link ArtifactInfo} of the given artifactId\n+   */\n+  protected ArtifactInfo getArtifactInfo(ArtifactId artifactId) throws IOException {\n     // get /artifacts/{name}/versions/{version}\n-    return getArtifact(artifactId, null);\n+    return getArtifactInfo(artifactId, null);\n   }\n \n   /**\n-   * @return {@link ArtifactInfo} of the given artifactId in the given scope\n+   * Return {@link ArtifactInfo} of the given artifactId in the given scope", "originalCommit": "c9ba1987eafa00a6782885988ca9979537d6146a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2OTQzNA==", "url": "https://github.com/cdapio/cdap/pull/11982#discussion_r397469434", "bodyText": "Done. Fixed", "author": "wyzhang", "createdAt": "2020-03-24T21:22:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM1NTE1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8926512a5549110e5cd5ba6261dde8604ca88bb0", "chunk": "diff --git a/cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/http/handlers/ArtifactHttpHandlerTestBase.java b/cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/http/handlers/ArtifactHttpHandlerTestBase.java\nindex 44273ea6178..19c1fb5b79d 100644\n--- a/cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/http/handlers/ArtifactHttpHandlerTestBase.java\n+++ b/cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/http/handlers/ArtifactHttpHandlerTestBase.java\n\n@@ -158,7 +158,7 @@ public abstract class ArtifactHttpHandlerTestBase extends AppFabricTestBase {\n   }\n \n   /**\n-   * Return {@link ArtifactInfo} of the given artifactId\n+   * @return {@link ArtifactInfo} of the given artifactId\n    */\n   protected ArtifactInfo getArtifactInfo(ArtifactId artifactId) throws IOException {\n     // get /artifacts/{name}/versions/{version}\n"}}, {"oid": "8926512a5549110e5cd5ba6261dde8604ca88bb0", "url": "https://github.com/cdapio/cdap/commit/8926512a5549110e5cd5ba6261dde8604ca88bb0", "message": "addressing comments", "committedDate": "2020-03-24T21:24:13Z", "type": "commit"}]}