{"pr_number": 12817, "pr_title": "Dynamic accelerator framework - Annotation for accelerator", "pr_createdAt": "2020-10-20T02:45:02Z", "pr_url": "https://github.com/cdapio/cdap/pull/12817", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNDEyMQ==", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508204121", "bodyText": "Use the javadoc style for writing doc for public method:\n/**\n * Description\n * @return \n */", "author": "chtyim", "createdAt": "2020-10-20T04:37:24Z", "path": "cdap-api/src/main/java/io/cdap/cdap/api/annotation/Requirements.java", "diffHunk": "@@ -69,4 +69,7 @@\n public @interface Requirements {\n \n   String[] datasetTypes() default {};\n+\n+  //Name of associated add-ons or accelerators", "originalCommit": "2af5b202f3401d3d2b7d72f5af02fc23642200ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNjExOQ==", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r509816119", "bodyText": "Done.", "author": "greeshmaswaminathan", "createdAt": "2020-10-22T00:49:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNDEyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "79812780457fc997304d59d6315a3a2813fee3ea", "chunk": "diff --git a/cdap-api/src/main/java/io/cdap/cdap/api/annotation/Requirements.java b/cdap-api/src/main/java/io/cdap/cdap/api/annotation/Requirements.java\nindex 433a06e9169..e7447a2032f 100644\n--- a/cdap-api/src/main/java/io/cdap/cdap/api/annotation/Requirements.java\n+++ b/cdap-api/src/main/java/io/cdap/cdap/api/annotation/Requirements.java\n\n@@ -70,6 +70,9 @@ public @interface Requirements {\n \n   String[] datasetTypes() default {};\n \n-  //Name of associated add-ons or accelerators\n+  /**\n+   * Names of associated add-ons or accelerators\n+   * @return String array of accelerator names\n+   */\n   String[] accelerators() default{};\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNzU5Ng==", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508207596", "bodyText": "Don't use super generic method name unless this method is really that generic. This method is more like getAnnotationValues?", "author": "chtyim", "createdAt": "2020-10-20T04:51:05Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(Arrays.stream(annotation.datasetTypes()).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet()));\n+    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+  }\n+\n+  private Set<String> collect(String[] field) {", "originalCommit": "2af5b202f3401d3d2b7d72f5af02fc23642200ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNjE3MQ==", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r509816171", "bodyText": "changed.", "author": "greeshmaswaminathan", "createdAt": "2020-10-22T00:49:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwNzU5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "79812780457fc997304d59d6315a3a2813fee3ea", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java\nindex dd321832aeb..a45117c251d 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java\n\n@@ -381,18 +381,19 @@ final class ArtifactInspector {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getRequirementsAnnotation(Class<?> cls) {\n+  Requirements getArtifactRequirements(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+    return new Requirements(getAnnotationValues(annotation.datasetTypes()),\n+                            getAnnotationValues(annotation.accelerators()));\n   }\n \n-  private Set<String> collect(String[] field) {\n-    return Arrays.stream(field).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet());\n+  private Set<String> getAnnotationValues(String[] field) {\n+    return Arrays.stream(field).map(String::trim).map(String::toLowerCase).filter(Objects::nonNull)\n+      .filter(s -> !s.isEmpty()).collect(Collectors.toSet());\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwOTM2Ng==", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508209366", "bodyText": "A more idiomatic way to use stream (or functional style in general) is to only do one thing per function, since that layout the logic better.\nArrays.stream(fields)\n  .map(String::trim)\n  .map(String::toLowerCase) \n  .filter(Object::nonNull)\n  .filter(s -> !s.isEmpty())\n  .collect(Collectors.toSet());", "author": "chtyim", "createdAt": "2020-10-20T04:57:20Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(Arrays.stream(annotation.datasetTypes()).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet()));\n+    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+  }\n+\n+  private Set<String> collect(String[] field) {\n+    return Arrays.stream(field).map(s -> s.trim().toLowerCase())", "originalCommit": "2af5b202f3401d3d2b7d72f5af02fc23642200ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNjIxMw==", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r509816213", "bodyText": "Done.", "author": "greeshmaswaminathan", "createdAt": "2020-10-22T00:49:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwOTM2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "79812780457fc997304d59d6315a3a2813fee3ea", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java\nindex dd321832aeb..a45117c251d 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java\n\n@@ -381,18 +381,19 @@ final class ArtifactInspector {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getRequirementsAnnotation(Class<?> cls) {\n+  Requirements getArtifactRequirements(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+    return new Requirements(getAnnotationValues(annotation.datasetTypes()),\n+                            getAnnotationValues(annotation.accelerators()));\n   }\n \n-  private Set<String> collect(String[] field) {\n-    return Arrays.stream(field).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet());\n+  private Set<String> getAnnotationValues(String[] field) {\n+    return Arrays.stream(field).map(String::trim).map(String::toLowerCase).filter(Objects::nonNull)\n+      .filter(s -> !s.isEmpty()).collect(Collectors.toSet());\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIxMzQ4Mw==", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r508213483", "bodyText": "This method actually returns the Requirements class, not the annotation, so better call it getArtifactRequirements()", "author": "chtyim", "createdAt": "2020-10-20T05:12:29Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java", "diffHunk": "@@ -381,14 +381,18 @@ private String getPluginName(Class<?> cls) {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getPluginRequirements(Class<?> cls) {\n+  Requirements getRequirementsAnnotation(Class<?> cls) {", "originalCommit": "2af5b202f3401d3d2b7d72f5af02fc23642200ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNjI4MA==", "url": "https://github.com/cdapio/cdap/pull/12817#discussion_r509816280", "bodyText": "done.", "author": "greeshmaswaminathan", "createdAt": "2020-10-22T00:50:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIxMzQ4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "79812780457fc997304d59d6315a3a2813fee3ea", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java\nindex dd321832aeb..a45117c251d 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ArtifactInspector.java\n\n@@ -381,18 +381,19 @@ final class ArtifactInspector {\n    * not specify any {@link io.cdap.cdap.api.annotation.Requirements} then the {@link Requirements} will be empty.\n    */\n   @VisibleForTesting\n-  Requirements getRequirementsAnnotation(Class<?> cls) {\n+  Requirements getArtifactRequirements(Class<?> cls) {\n     io.cdap.cdap.api.annotation.Requirements annotation =\n       cls.getAnnotation(io.cdap.cdap.api.annotation.Requirements.class);\n     if (annotation == null) {\n       return Requirements.EMPTY;\n     }\n-    return new Requirements(collect(annotation.datasetTypes()), collect(annotation.accelerators()));\n+    return new Requirements(getAnnotationValues(annotation.datasetTypes()),\n+                            getAnnotationValues(annotation.accelerators()));\n   }\n \n-  private Set<String> collect(String[] field) {\n-    return Arrays.stream(field).map(s -> s.trim().toLowerCase())\n-                              .filter(s -> !Strings.isNullOrEmpty(s)).collect(Collectors.toSet());\n+  private Set<String> getAnnotationValues(String[] field) {\n+    return Arrays.stream(field).map(String::trim).map(String::toLowerCase).filter(Objects::nonNull)\n+      .filter(s -> !s.isEmpty()).collect(Collectors.toSet());\n   }\n \n   /**\n"}}, {"oid": "79812780457fc997304d59d6315a3a2813fee3ea", "url": "https://github.com/cdapio/cdap/commit/79812780457fc997304d59d6315a3a2813fee3ea", "message": "(CDAP-17270) Add accelerators to Requirements annotation. Enable Requirements annotation for ApplicationClass.", "committedDate": "2020-10-22T00:35:30Z", "type": "commit"}, {"oid": "79812780457fc997304d59d6315a3a2813fee3ea", "url": "https://github.com/cdapio/cdap/commit/79812780457fc997304d59d6315a3a2813fee3ea", "message": "(CDAP-17270) Add accelerators to Requirements annotation. Enable Requirements annotation for ApplicationClass.", "committedDate": "2020-10-22T00:35:30Z", "type": "forcePushed"}]}