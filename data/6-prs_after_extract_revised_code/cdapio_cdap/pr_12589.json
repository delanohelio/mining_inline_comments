{"pr_number": 12589, "pr_title": "[CDAP-17151, CDAP-16997] Add submitTime in the PreviewStatus for UI and reconcile the preview run status if pod dies because of OOM.", "pr_createdAt": "2020-08-07T06:18:42Z", "pr_url": "https://github.com/cdapio/cdap/pull/12589", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2NjkyNQ==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468266925", "bodyText": "Why use Long instead of the primitive long?", "author": "chtyim", "createdAt": "2020-08-11T01:00:31Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java", "diffHunk": "@@ -51,18 +51,20 @@ public boolean isEndState() {\n \n   private final Status status;\n   private final BasicThrowable throwable;\n+  private final Long submitTime;\n   private final Long startTime;\n   private final Long endTime;\n   private final Integer positionInWaitingQueue;\n \n-  public PreviewStatus(Status status, @Nullable BasicThrowable throwable, @Nullable Long startTime,\n+  public PreviewStatus(Status status, Long submitTime, @Nullable BasicThrowable throwable, @Nullable Long startTime,", "originalCommit": "983e5f7d01dc986e05cfc3f6aef96eb049fe4646", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY5NTM4Mw==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468695383", "bodyText": "done.", "author": "sagarkapare", "createdAt": "2020-08-11T16:06:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2NjkyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java\nindex 3c0183539da..0715abf92b2 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java\n\n@@ -51,17 +51,17 @@ public class PreviewStatus {\n \n   private final Status status;\n   private final BasicThrowable throwable;\n-  private final Long submitTime;\n+  private final long submitTime;\n   private final Long startTime;\n   private final Long endTime;\n   private final Integer positionInWaitingQueue;\n \n-  public PreviewStatus(Status status, Long submitTime, @Nullable BasicThrowable throwable, @Nullable Long startTime,\n+  public PreviewStatus(Status status, long submitTime, @Nullable BasicThrowable throwable, @Nullable Long startTime,\n                        @Nullable Long endTime) {\n     this(status, submitTime, throwable, startTime, endTime, null);\n   }\n \n-  public PreviewStatus(Status status, Long submitTime, @Nullable BasicThrowable throwable, @Nullable Long startTime,\n+  public PreviewStatus(Status status, long submitTime, @Nullable BasicThrowable throwable, @Nullable Long startTime,\n                        @Nullable Long endTime, @Nullable Integer positionInWaitingQueue) {\n     this.status = status;\n     this.submitTime = submitTime;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2OTAyNg==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468269026", "bodyText": "Why it is OK instead of NOT_FOUND? The UI can't handle it correctly?", "author": "chtyim", "createdAt": "2020-08-11T01:08:50Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java", "diffHunk": "@@ -209,14 +209,19 @@ public void getPreviewLogsNext(HttpRequest request, HttpResponder responder,\n                                  @QueryParam(\"filter\") @DefaultValue(\"\") String filterStr,\n                                  @QueryParam(\"format\") @DefaultValue(\"text\") String format,\n                                  @QueryParam(\"suppress\") List<String> suppress) throws Exception {\n-    sendLogs(namespaceId, previewId,\n+    sendLogs(responder, namespaceId, previewId,\n              info -> doNext(info.getLogReader(), responder, info.getLoggingContext(), maxEvents,\n                             fromOffsetStr, escape, filterStr, info.getRunRecord(), format, suppress));\n   }\n \n-  private void sendLogs(String namespaceId, String previewId, Consumer<LogReaderInfo> logsResponder) throws Exception {\n+  private void sendLogs(HttpResponder responder, String namespaceId, String previewId,\n+                        Consumer<LogReaderInfo> logsResponder) throws Exception {\n     ApplicationId applicationId = new ApplicationId(namespaceId, previewId);\n     ProgramRunId programRunId = previewManager.getRunId(applicationId);\n+    if (programRunId == null) {\n+      responder.sendStatus(HttpResponseStatus.OK);", "originalCommit": "983e5f7d01dc986e05cfc3f6aef96eb049fe4646", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwMDI4OA==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468700288", "bodyText": "Returning OK is similar behavior from 6.1.3 https://github.com/cdapio/cdap/blob/v6.1.3/cdap-app-fabric/src/main/java/io/cdap/cdap/gateway/handlers/preview/PreviewHttpHandler.java#L227 as well. I updated to return NOT_FOUND in between, but seems like its temporary state till the run id is propagated back from preview runner. UI shows NOT_FOUND during that time. Reverting it to make is same as 6.1.3", "author": "sagarkapare", "createdAt": "2020-08-11T16:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2OTAyNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3MTYzOQ==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468271639", "bodyText": "Having a class name with Wrapper at the top level is awkward. Typically wrapper class should be private/internal. Why we need this interface? In standalone we can write out the same file and delete it, isn't it?", "author": "chtyim", "createdAt": "2020-08-11T01:18:16Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -117,7 +125,8 @@\n                        ProgramNotificationSubscriberService programNotificationSubscriberService,\n                        LevelDBTableService levelDBTableService,\n                        StructuredTableAdmin structuredTableAdmin,\n-                       StructuredTableRegistry structuredTableRegistry) {\n+                       StructuredTableRegistry structuredTableRegistry, PreviewRunWrapper previewRunWrapper,", "originalCommit": "524d47dc9d48e0bff8c17c3e3d96932f0b1aa955", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY5NjU5Mg==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468696592", "bodyText": "Thanks for the explanation! Updated code to remove the PreviewRunWrapper interface since it was not used in Standalone.\nAdded DistributedPreviewRunner which extends from the DefaultPreviewRunner and does the job of file handling.\nPlease check again.", "author": "sagarkapare", "createdAt": "2020-08-11T16:08:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3MTYzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\nindex 80c3d08746e..3028e16b4a2 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n\n@@ -125,7 +127,7 @@ public class DefaultPreviewRunner extends AbstractIdleService implements Preview\n                        ProgramNotificationSubscriberService programNotificationSubscriberService,\n                        LevelDBTableService levelDBTableService,\n                        StructuredTableAdmin structuredTableAdmin,\n-                       StructuredTableRegistry structuredTableRegistry, PreviewRunWrapper previewRunWrapper,\n+                       StructuredTableRegistry structuredTableRegistry,\n                        CConfiguration cConf) {\n     this.messagingService = messagingService;\n     this.dsOpExecService = dsOpExecService;\n"}}, {"oid": "06177b97b3a4e2da316f26ad799f3efc1f12117e", "url": "https://github.com/cdapio/cdap/commit/06177b97b3a4e2da316f26ad799f3efc1f12117e", "message": "[CDAP-16997] Reconcile status of the preview run if pod dies because of OOM.", "committedDate": "2020-08-11T07:41:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyMjQ4NA==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468922484", "bodyText": "Will calling destroy() transit this guava Service to COMPLETED state?? Do you want this service stop?", "author": "chtyim", "createdAt": "2020-08-11T23:35:56Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/DistributedPreviewRunner.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.app.preview;\n+\n+import com.google.gson.Gson;\n+import com.google.inject.Inject;\n+import io.cdap.cdap.api.common.Bytes;\n+import io.cdap.cdap.api.metrics.MetricsCollectionService;\n+import io.cdap.cdap.app.runtime.ProgramRuntimeService;\n+import io.cdap.cdap.common.app.RunIds;\n+import io.cdap.cdap.common.conf.CConfiguration;\n+import io.cdap.cdap.common.conf.Constants;\n+import io.cdap.cdap.common.namespace.NamespaceAdmin;\n+import io.cdap.cdap.data2.datafabric.dataset.service.DatasetService;\n+import io.cdap.cdap.data2.datafabric.dataset.service.executor.DatasetOpExecutorService;\n+import io.cdap.cdap.data2.dataset2.lib.table.leveldb.LevelDBTableService;\n+import io.cdap.cdap.internal.app.preview.DefaultPreviewRunner;\n+import io.cdap.cdap.internal.app.services.ApplicationLifecycleService;\n+import io.cdap.cdap.internal.app.services.ProgramLifecycleService;\n+import io.cdap.cdap.internal.app.services.ProgramNotificationSubscriberService;\n+import io.cdap.cdap.logging.appender.LogAppenderInitializer;\n+import io.cdap.cdap.messaging.MessagingService;\n+import io.cdap.cdap.proto.BasicThrowable;\n+import io.cdap.cdap.proto.id.ProgramId;\n+import io.cdap.cdap.spi.data.StructuredTableAdmin;\n+import io.cdap.cdap.spi.data.table.StructuredTableRegistry;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Distributed implementation of {@link PreviewRunner}.\n+ */\n+public class DistributedPreviewRunner extends DefaultPreviewRunner {\n+  private static final Logger LOG = LoggerFactory.getLogger(DistributedPreviewRunner.class);\n+  private static final Gson GSON = new Gson();\n+\n+  private final Path programIdFilePath;\n+\n+  @Inject\n+  public DistributedPreviewRunner(\n+    MessagingService messagingService,\n+    DatasetOpExecutorService dsOpExecService,\n+    DatasetService datasetService,\n+    LogAppenderInitializer logAppenderInitializer,\n+    ApplicationLifecycleService applicationLifecycleService,\n+    ProgramRuntimeService programRuntimeService,\n+    ProgramLifecycleService programLifecycleService,\n+    PreviewDataPublisher previewDataPublisher,\n+    DataTracerFactory dataTracerFactory,\n+    NamespaceAdmin namespaceAdmin,\n+    MetricsCollectionService metricsCollectionService,\n+    ProgramNotificationSubscriberService programNotificationSubscriberService,\n+    LevelDBTableService levelDBTableService,\n+    StructuredTableAdmin structuredTableAdmin,\n+    StructuredTableRegistry structuredTableRegistry,\n+    CConfiguration cConf) {\n+    super(messagingService, dsOpExecService, datasetService, logAppenderInitializer, applicationLifecycleService,\n+          programRuntimeService, programLifecycleService, previewDataPublisher, dataTracerFactory, namespaceAdmin,\n+          metricsCollectionService, programNotificationSubscriberService, levelDBTableService, structuredTableAdmin,\n+          structuredTableRegistry);\n+    this.programIdFilePath = Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"program.id\").toAbsolutePath();\n+  }\n+\n+  @Override\n+  protected void startUp() throws Exception {\n+    super.startUp();\n+\n+    if (Files.exists(programIdFilePath)) {\n+      try (Reader reader = Files.newBufferedReader(programIdFilePath, StandardCharsets.UTF_8)) {\n+        ProgramId programId = GSON.fromJson(reader, ProgramId.class);\n+        long submitTimeMillis = RunIds.getTime(programId.getApplication(), TimeUnit.MILLISECONDS);\n+        PreviewStatus status = new PreviewStatus(\n+          PreviewStatus.Status.RUN_FAILED, submitTimeMillis,\n+          new BasicThrowable(new Exception(\"Preview runner container killed possibly because of out of memory. \" +\n+                                             \"Please try running preview again.\")),\n+          null, null);\n+        setStatus(programId, status);\n+      }\n+      destroy();", "originalCommit": "a9a6ec661469ccafa8e3aa3ee77b462040882b2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyODY2OQ==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r468928669", "bodyText": "No destroy() just deletes the left over file from previous preview run on line 116 here - https://github.com/cdapio/cdap/pull/12589/files/a9a6ec661469ccafa8e3aa3ee77b462040882b2b#diff-fe8b7d5449ae6f60f24802aa2104bd47R116\nIt wont cause any service state transition.\nShould I rename init to onPreviewStart and destroy to onPreviewEnd for clarity?", "author": "sagarkapare", "createdAt": "2020-08-11T23:56:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyMjQ4NA=="}], "type": "inlineReview", "revised_code": {"commit": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/DistributedPreviewRunner.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/DistributedPreviewRunner.java\ndeleted file mode 100644\nindex a6de768e615..00000000000\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/DistributedPreviewRunner.java\n+++ /dev/null\n\n@@ -1,124 +0,0 @@\n-/*\n- * Copyright \u00a9 2020 Cask Data, Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations under\n- * the License.\n- */\n-\n-package io.cdap.cdap.app.preview;\n-\n-import com.google.gson.Gson;\n-import com.google.inject.Inject;\n-import io.cdap.cdap.api.common.Bytes;\n-import io.cdap.cdap.api.metrics.MetricsCollectionService;\n-import io.cdap.cdap.app.runtime.ProgramRuntimeService;\n-import io.cdap.cdap.common.app.RunIds;\n-import io.cdap.cdap.common.conf.CConfiguration;\n-import io.cdap.cdap.common.conf.Constants;\n-import io.cdap.cdap.common.namespace.NamespaceAdmin;\n-import io.cdap.cdap.data2.datafabric.dataset.service.DatasetService;\n-import io.cdap.cdap.data2.datafabric.dataset.service.executor.DatasetOpExecutorService;\n-import io.cdap.cdap.data2.dataset2.lib.table.leveldb.LevelDBTableService;\n-import io.cdap.cdap.internal.app.preview.DefaultPreviewRunner;\n-import io.cdap.cdap.internal.app.services.ApplicationLifecycleService;\n-import io.cdap.cdap.internal.app.services.ProgramLifecycleService;\n-import io.cdap.cdap.internal.app.services.ProgramNotificationSubscriberService;\n-import io.cdap.cdap.logging.appender.LogAppenderInitializer;\n-import io.cdap.cdap.messaging.MessagingService;\n-import io.cdap.cdap.proto.BasicThrowable;\n-import io.cdap.cdap.proto.id.ProgramId;\n-import io.cdap.cdap.spi.data.StructuredTableAdmin;\n-import io.cdap.cdap.spi.data.table.StructuredTableRegistry;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-import java.io.IOException;\n-import java.io.Reader;\n-import java.nio.charset.StandardCharsets;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import java.util.concurrent.TimeUnit;\n-\n-/**\n- * Distributed implementation of {@link PreviewRunner}.\n- */\n-public class DistributedPreviewRunner extends DefaultPreviewRunner {\n-  private static final Logger LOG = LoggerFactory.getLogger(DistributedPreviewRunner.class);\n-  private static final Gson GSON = new Gson();\n-\n-  private final Path programIdFilePath;\n-\n-  @Inject\n-  public DistributedPreviewRunner(\n-    MessagingService messagingService,\n-    DatasetOpExecutorService dsOpExecService,\n-    DatasetService datasetService,\n-    LogAppenderInitializer logAppenderInitializer,\n-    ApplicationLifecycleService applicationLifecycleService,\n-    ProgramRuntimeService programRuntimeService,\n-    ProgramLifecycleService programLifecycleService,\n-    PreviewDataPublisher previewDataPublisher,\n-    DataTracerFactory dataTracerFactory,\n-    NamespaceAdmin namespaceAdmin,\n-    MetricsCollectionService metricsCollectionService,\n-    ProgramNotificationSubscriberService programNotificationSubscriberService,\n-    LevelDBTableService levelDBTableService,\n-    StructuredTableAdmin structuredTableAdmin,\n-    StructuredTableRegistry structuredTableRegistry,\n-    CConfiguration cConf) {\n-    super(messagingService, dsOpExecService, datasetService, logAppenderInitializer, applicationLifecycleService,\n-          programRuntimeService, programLifecycleService, previewDataPublisher, dataTracerFactory, namespaceAdmin,\n-          metricsCollectionService, programNotificationSubscriberService, levelDBTableService, structuredTableAdmin,\n-          structuredTableRegistry);\n-    this.programIdFilePath = Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"program.id\").toAbsolutePath();\n-  }\n-\n-  @Override\n-  protected void startUp() throws Exception {\n-    super.startUp();\n-\n-    if (Files.exists(programIdFilePath)) {\n-      try (Reader reader = Files.newBufferedReader(programIdFilePath, StandardCharsets.UTF_8)) {\n-        ProgramId programId = GSON.fromJson(reader, ProgramId.class);\n-        long submitTimeMillis = RunIds.getTime(programId.getApplication(), TimeUnit.MILLISECONDS);\n-        PreviewStatus status = new PreviewStatus(\n-          PreviewStatus.Status.RUN_FAILED, submitTimeMillis,\n-          new BasicThrowable(new Exception(\"Preview runner container killed possibly because of out of memory. \" +\n-                                             \"Please try running preview again.\")),\n-          null, null);\n-        setStatus(programId, status);\n-      }\n-      destroy();\n-    }\n-  }\n-\n-  @Override\n-  protected void init(ProgramId programId) {\n-    // write to temp file\n-    try {\n-      Files.write(programIdFilePath, Bytes.toBytes(GSON.toJson(programId)));\n-    } catch (IOException e) {\n-      LOG.warn(\"Error saving the program id to file.\", e);\n-    }\n-  }\n-\n-  @Override\n-  protected void destroy() {\n-    // delete the temp file\n-    try {\n-      Files.delete(programIdFilePath);\n-    } catch (IOException e) {\n-      LOG.warn(\"Error deleting file containing preview program id.\", e);\n-    }\n-  }\n-}\n"}}, {"oid": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "url": "https://github.com/cdapio/cdap/commit/36ccb8340d254e319f11d4f0e5522a8f0b567687", "message": "Addressed comments.", "committedDate": "2020-08-12T02:05:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMTI1Mg==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469001252", "bodyText": "long?", "author": "chtyim", "createdAt": "2020-08-12T04:41:22Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java", "diffHunk": "@@ -73,6 +75,10 @@ public Status getStatus() {\n     return status;\n   }\n \n+  public Long getSubmitTime() {", "originalCommit": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMTE0OQ==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469011149", "bodyText": "right. fixed.", "author": "sagarkapare", "createdAt": "2020-08-12T05:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMTI1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f89916a90262b544610e393d6b21e9018d44fa17", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java\nindex 0715abf92b2..ad73336d2d7 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java\n\n@@ -75,7 +75,7 @@ public class PreviewStatus {\n     return status;\n   }\n \n-  public Long getSubmitTime() {\n+  public long getSubmitTime() {\n     return submitTime;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMTM2Nw==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469001367", "bodyText": "For primitive type, use == to compare", "author": "chtyim", "createdAt": "2020-08-12T04:41:46Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java", "diffHunk": "@@ -116,6 +122,7 @@ public boolean equals(Object o) {\n \n     PreviewStatus status1 = (PreviewStatus) o;\n     return status == status1.status &&\n+      Objects.equals(submitTime, status1.submitTime) &&", "originalCommit": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMTEwMA==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469011100", "bodyText": "done.", "author": "sagarkapare", "createdAt": "2020-08-12T05:21:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMTM2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "f89916a90262b544610e393d6b21e9018d44fa17", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java\nindex 0715abf92b2..ad73336d2d7 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/app/preview/PreviewStatus.java\n\n@@ -122,7 +122,7 @@ public class PreviewStatus {\n \n     PreviewStatus status1 = (PreviewStatus) o;\n     return status == status1.status &&\n-      Objects.equals(submitTime, status1.submitTime) &&\n+      submitTime == status1.submitTime &&\n       Objects.equals(throwable, status1.throwable) &&\n       Objects.equals(startTime, status1.startTime) &&\n       Objects.equals(endTime, status1.endTime) &&\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMjAwMg==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469002002", "bodyText": "Should be done in the startup method and let the exception bubble out. Generally not good to throw exception from constructor for classes that are created via Guice injection.", "author": "chtyim", "createdAt": "2020-08-12T04:44:36Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -132,14 +144,19 @@\n     this.levelDBTableService = levelDBTableService;\n     this.structuredTableAdmin = structuredTableAdmin;\n     this.structuredTableRegistry = structuredTableRegistry;\n+    this.previewIdDirPath = Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"previewid\").toAbsolutePath();\n+    try {\n+      Files.createDirectories(previewIdDirPath);", "originalCommit": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMTA3MQ==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469011071", "bodyText": "make sense! moved to startup.", "author": "sagarkapare", "createdAt": "2020-08-12T05:20:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMjAwMg=="}], "type": "inlineReview", "revised_code": {"commit": "f89916a90262b544610e393d6b21e9018d44fa17", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\nindex 3028e16b4a2..09acf968461 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n\n@@ -145,11 +145,6 @@ public class DefaultPreviewRunner extends AbstractIdleService implements Preview\n     this.structuredTableAdmin = structuredTableAdmin;\n     this.structuredTableRegistry = structuredTableRegistry;\n     this.previewIdDirPath = Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR), \"previewid\").toAbsolutePath();\n-    try {\n-      Files.createDirectories(previewIdDirPath);\n-    } catch (IOException e) {\n-      throw new RuntimeException(\"Failed to create preview id dir: \" + previewIdDirPath, e);\n-    }\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMjI3MQ==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469002271", "bodyText": "Is this change still necessary?", "author": "chtyim", "createdAt": "2020-08-12T04:45:43Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -264,7 +285,7 @@ private void trackPreviewTimeout(PreviewRequest previewRequest, AtomicBoolean ti\n     timeoutThread.start();\n   }\n \n-  private void setStatus(ProgramId programId, PreviewStatus previewStatus) {\n+  protected void setStatus(ProgramId programId, PreviewStatus previewStatus) {", "originalCommit": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMTAwMA==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469011000", "bodyText": "no its not required now. reverted.", "author": "sagarkapare", "createdAt": "2020-08-12T05:20:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMjI3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f89916a90262b544610e393d6b21e9018d44fa17", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\nindex 3028e16b4a2..09acf968461 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n\n@@ -285,7 +280,7 @@ public class DefaultPreviewRunner extends AbstractIdleService implements Preview\n     timeoutThread.start();\n   }\n \n-  protected void setStatus(ProgramId programId, PreviewStatus previewStatus) {\n+  private void setStatus(ProgramId programId, PreviewStatus previewStatus) {\n     LOG.debug(\"Setting preview status for {} to {}\", programId, previewStatus.getStatus());\n     PreviewMessage message = new PreviewMessage(PreviewMessage.Type.STATUS, programId.getParent(),\n                                                 GSON.toJsonTree(previewStatus));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwNTk4OQ==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469005989", "bodyText": "Use paths.filter(Files::isRegularFile).forEach", "author": "chtyim", "createdAt": "2020-08-12T05:00:44Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -299,6 +320,27 @@ protected void startUp() throws Exception {\n       metricsCollectionService.start(),\n       programNotificationSubscriberService.start()\n     ).get();\n+\n+    // Reconcile status for abruptly terminated preview runs\n+    try (Stream<Path> paths = Files.walk(Paths.get(previewIdDirPath.toString()))) {\n+      paths.forEach(path -> {\n+        if (Files.isDirectory(path)) {", "originalCommit": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMDkyNA==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469010924", "bodyText": "done.", "author": "sagarkapare", "createdAt": "2020-08-12T05:20:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwNTk4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f89916a90262b544610e393d6b21e9018d44fa17", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\nindex 3028e16b4a2..09acf968461 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n\n@@ -321,12 +316,11 @@ public class DefaultPreviewRunner extends AbstractIdleService implements Preview\n       programNotificationSubscriberService.start()\n     ).get();\n \n+    Files.createDirectories(previewIdDirPath);\n+\n     // Reconcile status for abruptly terminated preview runs\n     try (Stream<Path> paths = Files.walk(Paths.get(previewIdDirPath.toString()))) {\n-      paths.forEach(path -> {\n-        if (Files.isDirectory(path)) {\n-          return;\n-        }\n+      paths.filter(Files::isRegularFile).forEach(path -> {\n         try (Reader reader = Files.newBufferedReader(path, StandardCharsets.UTF_8)) {\n           ProgramId programId = GSON.fromJson(reader, ProgramId.class);\n           long submitTimeMillis = RunIds.getTime(programId.getApplication(), TimeUnit.MILLISECONDS);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwNjAzNg==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469006036", "bodyText": "No need to call .toString", "author": "chtyim", "createdAt": "2020-08-12T05:01:02Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java", "diffHunk": "@@ -299,6 +320,27 @@ protected void startUp() throws Exception {\n       metricsCollectionService.start(),\n       programNotificationSubscriberService.start()\n     ).get();\n+\n+    // Reconcile status for abruptly terminated preview runs\n+    try (Stream<Path> paths = Files.walk(Paths.get(previewIdDirPath.toString()))) {\n+      paths.forEach(path -> {\n+        if (Files.isDirectory(path)) {\n+          return;\n+        }\n+        try (Reader reader = Files.newBufferedReader(path, StandardCharsets.UTF_8)) {\n+          ProgramId programId = GSON.fromJson(reader, ProgramId.class);\n+          long submitTimeMillis = RunIds.getTime(programId.getApplication(), TimeUnit.MILLISECONDS);\n+          PreviewStatus status = new PreviewStatus(\n+            PreviewStatus.Status.RUN_FAILED, submitTimeMillis,\n+            new BasicThrowable(new Exception(\"Preview runner container killed possibly because of out of memory. \" +\n+                                               \"Please try running preview again.\")),\n+            null, null);\n+          previewTerminated(programId, status);\n+        } catch (IOException e) {\n+          LOG.warn(\"Error reading file {}. Ignoring\", path.toString(), e);", "originalCommit": "36ccb8340d254e319f11d4f0e5522a8f0b567687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMDg3NQ==", "url": "https://github.com/cdapio/cdap/pull/12589#discussion_r469010875", "bodyText": "ack!", "author": "sagarkapare", "createdAt": "2020-08-12T05:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwNjAzNg=="}], "type": "inlineReview", "revised_code": {"commit": "f89916a90262b544610e393d6b21e9018d44fa17", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\nindex 3028e16b4a2..09acf968461 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/preview/DefaultPreviewRunner.java\n\n@@ -321,12 +316,11 @@ public class DefaultPreviewRunner extends AbstractIdleService implements Preview\n       programNotificationSubscriberService.start()\n     ).get();\n \n+    Files.createDirectories(previewIdDirPath);\n+\n     // Reconcile status for abruptly terminated preview runs\n     try (Stream<Path> paths = Files.walk(Paths.get(previewIdDirPath.toString()))) {\n-      paths.forEach(path -> {\n-        if (Files.isDirectory(path)) {\n-          return;\n-        }\n+      paths.filter(Files::isRegularFile).forEach(path -> {\n         try (Reader reader = Files.newBufferedReader(path, StandardCharsets.UTF_8)) {\n           ProgramId programId = GSON.fromJson(reader, ProgramId.class);\n           long submitTimeMillis = RunIds.getTime(programId.getApplication(), TimeUnit.MILLISECONDS);\n"}}, {"oid": "f89916a90262b544610e393d6b21e9018d44fa17", "url": "https://github.com/cdapio/cdap/commit/f89916a90262b544610e393d6b21e9018d44fa17", "message": "[CDAP-17151] Add submit time to preview status.\n\n[CDAP-16997] Reconcile status of the preview run if pod dies because of OOM.", "committedDate": "2020-08-12T06:00:21Z", "type": "commit"}, {"oid": "f89916a90262b544610e393d6b21e9018d44fa17", "url": "https://github.com/cdapio/cdap/commit/f89916a90262b544610e393d6b21e9018d44fa17", "message": "[CDAP-17151] Add submit time to preview status.\n\n[CDAP-16997] Reconcile status of the preview run if pod dies because of OOM.", "committedDate": "2020-08-12T06:00:21Z", "type": "forcePushed"}]}