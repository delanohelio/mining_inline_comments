{"pr_number": 12858, "pr_title": "Fix NPE in adding accelerator tag", "pr_createdAt": "2020-11-13T19:24:02Z", "pr_url": "https://github.com/cdapio/cdap/pull/12858", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3NjM5Nw==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r523176397", "bodyText": "use Collections.emptySet() instead.", "author": "chtyim", "createdAt": "2020-11-13T19:26:47Z", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -95,13 +95,21 @@ private void addAccelerators(ApplicationSpecification appSpec,\n       .flatMap(Set::stream)\n       .collect(Collectors.toSet());\n     //add from application\n-    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    acceleratorSet.addAll(getApplicationAccelerators(applicationClass));\n     if (acceleratorSet.isEmpty()) {\n       return;\n     }\n     properties.put(ACCELERATOR_TAG, String.join(ACCELERATOR_DELIMITER, acceleratorSet));\n   }\n \n+  private Set<String> getApplicationAccelerators(ApplicationClass applicationClass) {\n+    if (applicationClass == null || applicationClass.getRequirements() == null || applicationClass.getRequirements()\n+      .getAccelerators() == null) {\n+      return Collections.EMPTY_SET;", "originalCommit": "73bb713631ab978aef3fc4485ed732b96ebbfe6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3OTUxMA==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r523179510", "bodyText": "Fixed.", "author": "greeshmaswaminathan", "createdAt": "2020-11-13T19:32:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3NjM5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a74a6d6b234c25a84c46d1329c5249d71808ba97", "chunk": "diff --git a/cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java b/cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java\nindex e7d25ab55ec..800e970cfff 100644\n--- a/cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java\n+++ b/cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java\n\n@@ -105,7 +105,7 @@ public class AppSystemMetadataWriter extends AbstractSystemMetadataWriter {\n   private Set<String> getApplicationAccelerators(ApplicationClass applicationClass) {\n     if (applicationClass == null || applicationClass.getRequirements() == null || applicationClass.getRequirements()\n       .getAccelerators() == null) {\n-      return Collections.EMPTY_SET;\n+      return Collections.emptySet();\n     }\n     return applicationClass.getRequirements().getAccelerators();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3NjY1Mg==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r523176652", "bodyText": "Is applicationClass nullable?", "author": "chtyim", "createdAt": "2020-11-13T19:27:11Z", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -95,13 +95,21 @@ private void addAccelerators(ApplicationSpecification appSpec,\n       .flatMap(Set::stream)\n       .collect(Collectors.toSet());\n     //add from application\n-    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    acceleratorSet.addAll(getApplicationAccelerators(applicationClass));\n     if (acceleratorSet.isEmpty()) {\n       return;\n     }\n     properties.put(ACCELERATOR_TAG, String.join(ACCELERATOR_DELIMITER, acceleratorSet));\n   }\n \n+  private Set<String> getApplicationAccelerators(ApplicationClass applicationClass) {\n+    if (applicationClass == null || applicationClass.getRequirements() == null || applicationClass.getRequirements()", "originalCommit": "73bb713631ab978aef3fc4485ed732b96ebbfe6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3ODE3Nw==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r523178177", "bodyText": "I am not sure if I am propogating it correctly. Need to debug further to check what is null here. This is to unblock.", "author": "greeshmaswaminathan", "createdAt": "2020-11-13T19:30:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3NjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwODU0Ng==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r523208546", "bodyText": "I don't think it can be null. I think it's only the requirements is null.", "author": "chtyim", "createdAt": "2020-11-13T20:34:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3NjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkwMDg5NA==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r524900894", "bodyText": "N.A with latest changes", "author": "greeshmaswaminathan", "createdAt": "2020-11-17T05:56:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3NjY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a74a6d6b234c25a84c46d1329c5249d71808ba97", "chunk": "diff --git a/cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java b/cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java\nindex e7d25ab55ec..800e970cfff 100644\n--- a/cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java\n+++ b/cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java\n\n@@ -105,7 +105,7 @@ public class AppSystemMetadataWriter extends AbstractSystemMetadataWriter {\n   private Set<String> getApplicationAccelerators(ApplicationClass applicationClass) {\n     if (applicationClass == null || applicationClass.getRequirements() == null || applicationClass.getRequirements()\n       .getAccelerators() == null) {\n-      return Collections.EMPTY_SET;\n+      return Collections.emptySet();\n     }\n     return applicationClass.getRequirements().getAccelerators();\n   }\n"}}, {"oid": "a74a6d6b234c25a84c46d1329c5249d71808ba97", "url": "https://github.com/cdapio/cdap/commit/a74a6d6b234c25a84c46d1329c5249d71808ba97", "message": "Fix NPE in adding accelerator tag", "committedDate": "2020-11-13T19:31:52Z", "type": "forcePushed"}, {"oid": "d9c12fc81f5ba9aeb5ed1d077ce230a7576b369e", "url": "https://github.com/cdapio/cdap/commit/d9c12fc81f5ba9aeb5ed1d077ce230a7576b369e", "message": "CDAP-17406 Use custom deserialization for ApplicationClass to consider new field", "committedDate": "2020-11-15T07:13:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxNjc0NQ==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r523916745", "bodyText": "You should have a codec class that implements both json serializer and deserializer", "author": "chtyim", "createdAt": "2020-11-16T06:12:23Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.internal.app.runtime.artifact;\n+\n+import com.google.gson.JsonDeserializationContext;\n+import com.google.gson.JsonDeserializer;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParseException;\n+import io.cdap.cdap.api.artifact.ApplicationClass;\n+import io.cdap.cdap.api.data.schema.Schema;\n+import io.cdap.cdap.api.plugin.Requirements;\n+\n+import java.lang.reflect.Type;\n+\n+/**\n+ * JSON deserializer for {@link ApplicationClass}\n+ */\n+public class ApplicationClassDeserializer implements JsonDeserializer<ApplicationClass> {", "originalCommit": "d9c12fc81f5ba9aeb5ed1d077ce230a7576b369e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkwMDgwNw==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r524900807", "bodyText": "Done", "author": "greeshmaswaminathan", "createdAt": "2020-11-17T05:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxNjc0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7abe2271b422c12f0bbe4e2e297731d198d9dd94", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\nsimilarity index 59%\nrename from cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java\nrename to cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\nindex 832ebcda411..15156f19908 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\n\n@@ -21,6 +21,8 @@ import com.google.gson.JsonDeserializer;\n import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n import com.google.gson.JsonParseException;\n+import com.google.gson.JsonSerializationContext;\n+import com.google.gson.JsonSerializer;\n import io.cdap.cdap.api.artifact.ApplicationClass;\n import io.cdap.cdap.api.data.schema.Schema;\n import io.cdap.cdap.api.plugin.Requirements;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxNzA2MA==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r523917060", "bodyText": "Annotate parameter with @Nullable if null is expected", "author": "chtyim", "createdAt": "2020-11-16T06:13:43Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.internal.app.runtime.artifact;\n+\n+import com.google.gson.JsonDeserializationContext;\n+import com.google.gson.JsonDeserializer;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParseException;\n+import io.cdap.cdap.api.artifact.ApplicationClass;\n+import io.cdap.cdap.api.data.schema.Schema;\n+import io.cdap.cdap.api.plugin.Requirements;\n+\n+import java.lang.reflect.Type;\n+\n+/**\n+ * JSON deserializer for {@link ApplicationClass}\n+ */\n+public class ApplicationClassDeserializer implements JsonDeserializer<ApplicationClass> {\n+\n+  private static final String REQUIREMENTS = \"requirements\";\n+  private static final String CLASS_NAME = \"className\";\n+  private static final String DESCRIPTION = \"description\";\n+  private static final String CONFIG_SCHEMA = \"configSchema\";\n+\n+  @Override\n+  public ApplicationClass deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n+    throws JsonParseException {\n+    JsonObject jsonObject = json.getAsJsonObject();\n+    Schema configSchema = getConfigSchema(context, jsonObject);\n+    Requirements requirements = getRequirements(jsonObject.get(REQUIREMENTS), context);\n+    return new ApplicationClass(getStringValue(jsonObject.get(CLASS_NAME)), getStringValue(jsonObject.get(DESCRIPTION)),\n+                                configSchema, requirements);\n+  }\n+\n+  private String getStringValue(JsonElement jsonElement) {\n+    if (jsonElement == null) {\n+      return null;\n+    }\n+    return jsonElement.getAsString();\n+  }\n+\n+  private Schema getConfigSchema(JsonDeserializationContext context, JsonObject jsonObject) {\n+    JsonElement jsonElement = jsonObject.get(CONFIG_SCHEMA);\n+    if (jsonElement == null) {\n+      return null;\n+    }\n+    return context.deserialize(jsonElement, Schema.class);\n+  }\n+\n+  private Requirements getRequirements(JsonElement requirementJSON, JsonDeserializationContext context) {\n+    if (requirementJSON == null) {", "originalCommit": "d9c12fc81f5ba9aeb5ed1d077ce230a7576b369e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkwMDc3Mg==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r524900772", "bodyText": "N.A with latest changes", "author": "greeshmaswaminathan", "createdAt": "2020-11-17T05:55:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxNzA2MA=="}], "type": "inlineReview", "revised_code": {"commit": "7abe2271b422c12f0bbe4e2e297731d198d9dd94", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\nsimilarity index 59%\nrename from cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java\nrename to cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\nindex 832ebcda411..15156f19908 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\n\n@@ -21,6 +21,8 @@ import com.google.gson.JsonDeserializer;\n import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n import com.google.gson.JsonParseException;\n+import com.google.gson.JsonSerializationContext;\n+import com.google.gson.JsonSerializer;\n import io.cdap.cdap.api.artifact.ApplicationClass;\n import io.cdap.cdap.api.data.schema.Schema;\n import io.cdap.cdap.api.plugin.Requirements;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxNzIwNg==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r523917206", "bodyText": "Please be consistent with the ordering of parameters between methods.", "author": "chtyim", "createdAt": "2020-11-16T06:14:15Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.internal.app.runtime.artifact;\n+\n+import com.google.gson.JsonDeserializationContext;\n+import com.google.gson.JsonDeserializer;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParseException;\n+import io.cdap.cdap.api.artifact.ApplicationClass;\n+import io.cdap.cdap.api.data.schema.Schema;\n+import io.cdap.cdap.api.plugin.Requirements;\n+\n+import java.lang.reflect.Type;\n+\n+/**\n+ * JSON deserializer for {@link ApplicationClass}\n+ */\n+public class ApplicationClassDeserializer implements JsonDeserializer<ApplicationClass> {\n+\n+  private static final String REQUIREMENTS = \"requirements\";\n+  private static final String CLASS_NAME = \"className\";\n+  private static final String DESCRIPTION = \"description\";\n+  private static final String CONFIG_SCHEMA = \"configSchema\";\n+\n+  @Override\n+  public ApplicationClass deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n+    throws JsonParseException {\n+    JsonObject jsonObject = json.getAsJsonObject();\n+    Schema configSchema = getConfigSchema(context, jsonObject);\n+    Requirements requirements = getRequirements(jsonObject.get(REQUIREMENTS), context);\n+    return new ApplicationClass(getStringValue(jsonObject.get(CLASS_NAME)), getStringValue(jsonObject.get(DESCRIPTION)),\n+                                configSchema, requirements);\n+  }\n+\n+  private String getStringValue(JsonElement jsonElement) {\n+    if (jsonElement == null) {\n+      return null;\n+    }\n+    return jsonElement.getAsString();\n+  }\n+\n+  private Schema getConfigSchema(JsonDeserializationContext context, JsonObject jsonObject) {\n+    JsonElement jsonElement = jsonObject.get(CONFIG_SCHEMA);\n+    if (jsonElement == null) {\n+      return null;\n+    }\n+    return context.deserialize(jsonElement, Schema.class);\n+  }\n+\n+  private Requirements getRequirements(JsonElement requirementJSON, JsonDeserializationContext context) {", "originalCommit": "d9c12fc81f5ba9aeb5ed1d077ce230a7576b369e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxNzQyNg==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r523917426", "bodyText": "Also, try to be consistent for the method (e.g. it takes JsonObject and get the field in the getConfigSchema method, while in here, it is expected the caller to get the field and pass it in).", "author": "chtyim", "createdAt": "2020-11-16T06:15:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxNzIwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkwMDYzNg==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r524900636", "bodyText": "Done", "author": "greeshmaswaminathan", "createdAt": "2020-11-17T05:55:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxNzIwNg=="}], "type": "inlineReview", "revised_code": {"commit": "7abe2271b422c12f0bbe4e2e297731d198d9dd94", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\nsimilarity index 59%\nrename from cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java\nrename to cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\nindex 832ebcda411..15156f19908 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassDeserializer.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\n\n@@ -21,6 +21,8 @@ import com.google.gson.JsonDeserializer;\n import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n import com.google.gson.JsonParseException;\n+import com.google.gson.JsonSerializationContext;\n+import com.google.gson.JsonSerializer;\n import io.cdap.cdap.api.artifact.ApplicationClass;\n import io.cdap.cdap.api.data.schema.Schema;\n import io.cdap.cdap.api.plugin.Requirements;\n"}}, {"oid": "7abe2271b422c12f0bbe4e2e297731d198d9dd94", "url": "https://github.com/cdapio/cdap/commit/7abe2271b422c12f0bbe4e2e297731d198d9dd94", "message": "CDAP-17406 Use custom codec for ApplicationClass to consider new field", "committedDate": "2020-11-17T05:47:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkxOTkyNQ==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r524919925", "bodyText": "annotate return as @Nullable", "author": "chtyim", "createdAt": "2020-11-17T06:54:07Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.internal.app.runtime.artifact;\n+\n+import com.google.gson.JsonDeserializationContext;\n+import com.google.gson.JsonDeserializer;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParseException;\n+import com.google.gson.JsonSerializationContext;\n+import com.google.gson.JsonSerializer;\n+import io.cdap.cdap.api.artifact.ApplicationClass;\n+import io.cdap.cdap.api.data.schema.Schema;\n+import io.cdap.cdap.api.plugin.Requirements;\n+\n+import java.lang.reflect.Type;\n+\n+/**\n+ * JSON codec for {@link ApplicationClass}\n+ */\n+public class ApplicationClassCodec implements JsonDeserializer<ApplicationClass>, JsonSerializer<ApplicationClass> {\n+\n+  private static final String REQUIREMENTS = \"requirements\";\n+  private static final String CLASS_NAME = \"className\";\n+  private static final String DESCRIPTION = \"description\";\n+  private static final String CONFIG_SCHEMA = \"configSchema\";\n+\n+  @Override\n+  public ApplicationClass deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n+    throws JsonParseException {\n+    JsonObject jsonObject = json.getAsJsonObject();\n+    Schema configSchema = getConfigSchema(jsonObject, context);\n+    Requirements requirements = getRequirements(jsonObject, context);\n+    return new ApplicationClass(getStringValue(jsonObject, CLASS_NAME), getStringValue(jsonObject, DESCRIPTION),\n+                                configSchema, requirements);\n+  }\n+\n+  @Override\n+  public JsonElement serialize(ApplicationClass src, Type typeOfSrc, JsonSerializationContext context) {\n+    JsonObject jsonObject = new JsonObject();\n+    jsonObject.addProperty(CLASS_NAME, src.getClassName());\n+    jsonObject.addProperty(DESCRIPTION, src.getDescription());\n+    jsonObject.add(CONFIG_SCHEMA, context.serialize(src.getConfigSchema()));\n+    jsonObject.add(REQUIREMENTS, context.serialize(src.getRequirements()));\n+    return jsonObject;\n+  }\n+\n+  private String getStringValue(JsonObject jsonObject, String name) {", "originalCommit": "7abe2271b422c12f0bbe4e2e297731d198d9dd94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ2ODc1Mw==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r525468753", "bodyText": "Done", "author": "greeshmaswaminathan", "createdAt": "2020-11-17T20:02:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkxOTkyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f9f6167addee4a7795d7a4172b24ba546f555111", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\nindex 15156f19908..b34912f0dd6 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\n\n@@ -28,6 +28,7 @@ import io.cdap.cdap.api.data.schema.Schema;\n import io.cdap.cdap.api.plugin.Requirements;\n \n import java.lang.reflect.Type;\n+import javax.annotation.Nullable;\n \n /**\n  * JSON codec for {@link ApplicationClass}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkyMDYzOQ==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r524920639", "bodyText": "Annotate result with @Nullable.", "author": "chtyim", "createdAt": "2020-11-17T06:55:53Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.internal.app.runtime.artifact;\n+\n+import com.google.gson.JsonDeserializationContext;\n+import com.google.gson.JsonDeserializer;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParseException;\n+import com.google.gson.JsonSerializationContext;\n+import com.google.gson.JsonSerializer;\n+import io.cdap.cdap.api.artifact.ApplicationClass;\n+import io.cdap.cdap.api.data.schema.Schema;\n+import io.cdap.cdap.api.plugin.Requirements;\n+\n+import java.lang.reflect.Type;\n+\n+/**\n+ * JSON codec for {@link ApplicationClass}\n+ */\n+public class ApplicationClassCodec implements JsonDeserializer<ApplicationClass>, JsonSerializer<ApplicationClass> {\n+\n+  private static final String REQUIREMENTS = \"requirements\";\n+  private static final String CLASS_NAME = \"className\";\n+  private static final String DESCRIPTION = \"description\";\n+  private static final String CONFIG_SCHEMA = \"configSchema\";\n+\n+  @Override\n+  public ApplicationClass deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n+    throws JsonParseException {\n+    JsonObject jsonObject = json.getAsJsonObject();\n+    Schema configSchema = getConfigSchema(jsonObject, context);\n+    Requirements requirements = getRequirements(jsonObject, context);\n+    return new ApplicationClass(getStringValue(jsonObject, CLASS_NAME), getStringValue(jsonObject, DESCRIPTION),\n+                                configSchema, requirements);\n+  }\n+\n+  @Override\n+  public JsonElement serialize(ApplicationClass src, Type typeOfSrc, JsonSerializationContext context) {\n+    JsonObject jsonObject = new JsonObject();\n+    jsonObject.addProperty(CLASS_NAME, src.getClassName());\n+    jsonObject.addProperty(DESCRIPTION, src.getDescription());\n+    jsonObject.add(CONFIG_SCHEMA, context.serialize(src.getConfigSchema()));\n+    jsonObject.add(REQUIREMENTS, context.serialize(src.getRequirements()));\n+    return jsonObject;\n+  }\n+\n+  private String getStringValue(JsonObject jsonObject, String name) {\n+    JsonElement jsonElement = jsonObject.get(name);\n+    if (jsonElement == null) {\n+      return null;\n+    }\n+    return jsonElement.getAsString();\n+  }\n+\n+  private Schema getConfigSchema(JsonObject jsonObject, JsonDeserializationContext context) {", "originalCommit": "7abe2271b422c12f0bbe4e2e297731d198d9dd94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ2ODk4OA==", "url": "https://github.com/cdapio/cdap/pull/12858#discussion_r525468988", "bodyText": "Done", "author": "greeshmaswaminathan", "createdAt": "2020-11-17T20:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkyMDYzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "f9f6167addee4a7795d7a4172b24ba546f555111", "chunk": "diff --git a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\nindex 15156f19908..b34912f0dd6 100644\n--- a/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\n+++ b/cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/runtime/artifact/ApplicationClassCodec.java\n\n@@ -28,6 +28,7 @@ import io.cdap.cdap.api.data.schema.Schema;\n import io.cdap.cdap.api.plugin.Requirements;\n \n import java.lang.reflect.Type;\n+import javax.annotation.Nullable;\n \n /**\n  * JSON codec for {@link ApplicationClass}\n"}}, {"oid": "f9f6167addee4a7795d7a4172b24ba546f555111", "url": "https://github.com/cdapio/cdap/commit/f9f6167addee4a7795d7a4172b24ba546f555111", "message": "CDAP-17406 Use custom codec for ApplicationClass to consider new field", "committedDate": "2020-11-17T20:00:22Z", "type": "commit"}, {"oid": "f9f6167addee4a7795d7a4172b24ba546f555111", "url": "https://github.com/cdapio/cdap/commit/f9f6167addee4a7795d7a4172b24ba546f555111", "message": "CDAP-17406 Use custom codec for ApplicationClass to consider new field", "committedDate": "2020-11-17T20:00:22Z", "type": "forcePushed"}]}