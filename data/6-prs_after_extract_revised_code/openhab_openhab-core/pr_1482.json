{"pr_number": 1482, "pr_title": "REST API: Re-enable auth", "pr_createdAt": "2020-05-18T14:28:17Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1482", "timeline": [{"oid": "fb545c19578f26bc18794cbb298388d523268795", "url": "https://github.com/openhab/openhab-core/commit/fb545c19578f26bc18794cbb298388d523268795", "message": "REST API: Re-enable auth\n\nAdd JAX-RS annotations to auth-related filter &\ndynamic feature.\n\nRemove unnecessary Activator.\n\nFixes #1477.\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-05-18T14:27:41Z", "type": "commit"}, {"oid": "2e25b52808ce0181a41d007dbafe93f340fbf4e5", "url": "https://github.com/openhab/openhab-core/commit/2e25b52808ce0181a41d007dbafe93f340fbf4e5", "message": "Remove BND file\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-05-18T16:47:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMDUyOQ==", "url": "https://github.com/openhab/openhab-core/pull/1482#discussion_r426800529", "bodyText": "All our configuration pids should be of format org.openhab.<scope>, so here I would suggest org.openhab.auth.", "author": "kaikreuzer", "createdAt": "2020-05-18T17:57:11Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/AuthFilter.java", "diffHunk": "@@ -36,9 +40,11 @@\n  * @author Yannick Schaus - initial contribution\n  */\n @PreMatching\n+@Component(configurationPid = \"org.openhab.rest.auth\")", "originalCommit": "2e25b52808ce0181a41d007dbafe93f340fbf4e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxNTI5Mw==", "url": "https://github.com/openhab/openhab-core/pull/1482#discussion_r426815293", "bodyText": "With a couple of exceptions ;)\n\n  \n    \n      openhab-core/bundles/org.openhab.core.storage.json/src/main/java/org/openhab/core/storage/json/internal/JsonStorageService.java\n    \n    \n         Line 41\n      in\n      0182ce5\n    \n    \n    \n    \n\n        \n          \n           @Component(name = \"org.openhab.core.storage.json\", configurationPid = \"org.openhab.storage.json\", property = { // \n        \n    \n  \n\n\nLooks like org.openhab.auth is already used:\n\n  \n    \n      openhab-core/bundles/org.openhab.core.io.http.auth/src/main/java/org/openhab/core/io/http/auth/internal/AuthenticationHandler.java\n    \n    \n         Line 47\n      in\n      61e17ce\n    \n    \n    \n    \n\n        \n          \n           @Component(configurationPid = \"org.openhab.auth\")", "author": "ghys", "createdAt": "2020-05-18T18:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMDUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxODE2NA==", "url": "https://github.com/openhab/openhab-core/pull/1482#discussion_r426818164", "bodyText": "With a couple of exceptions ;)\n\nYou only list one and as we say in German: \"an exception proves the rule\" ;-). We can fix that easily, I'd say.\n\nLooks like org.openhab.auth is already used\n\nThen we should see how we can merge the functionality - for a user, there should in the end only be one conf/services/auth.cfg file to do configuration around auth.\nBtw, where is this class here at all taking a configuration? Am I missing something?", "author": "kaikreuzer", "createdAt": "2020-05-18T18:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMDUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMDMzMw==", "url": "https://github.com/openhab/openhab-core/pull/1482#discussion_r426820333", "bodyText": "Then we should see how we can merge the functionality\n\nWe can use the same configurationPid for several services? (honest question, I'm not an expert).\n\nBtw, where is this class here at all taking a configuration? Am I missing something?\n\nNowhere for now, I added it in advance for when we'd like to add some like \"protect the entire API, not only the admin operations\".", "author": "ghys", "createdAt": "2020-05-18T18:35:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMDUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMTg2MA==", "url": "https://github.com/openhab/openhab-core/pull/1482#discussion_r426821860", "bodyText": "All things considered, I removed it for now since it's not used.", "author": "ghys", "createdAt": "2020-05-18T18:38:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMDUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMzMyMA==", "url": "https://github.com/openhab/openhab-core/pull/1482#discussion_r426823320", "bodyText": "We can use the same configurationPid for several services? (honest question, I'm not an expert).\n\nI cannot say - I remember different things from the past and would have to dig into a suitable solution myself.\n\nI removed it for now since it's not used.\n\nSounds like the most elegant solution for the moment! \ud83d\ude0e", "author": "kaikreuzer", "createdAt": "2020-05-18T18:41:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMDUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "19727733d821b02c3e87e15f0227b014369107b6", "chunk": "diff --git a/bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/AuthFilter.java b/bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/AuthFilter.java\nindex af3811604..508d3fcc9 100644\n--- a/bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/AuthFilter.java\n+++ b/bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/AuthFilter.java\n\n@@ -40,7 +40,7 @@ import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsExtension;\n  * @author Yannick Schaus - initial contribution\n  */\n @PreMatching\n-@Component(configurationPid = \"org.openhab.rest.auth\")\n+@Component(configurationPid = \"org.openhab.restauth\")\n @JaxrsExtension\n @JaxrsApplicationSelect(\"(\" + JaxrsWhiteboardConstants.JAX_RS_NAME + \"=\" + RESTConstants.JAX_RS_NAME + \")\")\n @Priority(Priorities.AUTHENTICATION)\n"}}, {"oid": "19727733d821b02c3e87e15f0227b014369107b6", "url": "https://github.com/openhab/openhab-core/commit/19727733d821b02c3e87e15f0227b014369107b6", "message": "Rename configurationPid\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-05-18T18:27:26Z", "type": "commit"}, {"oid": "3d5acaca6da0d0ffeaa08503983276ec33b3612c", "url": "https://github.com/openhab/openhab-core/commit/3d5acaca6da0d0ffeaa08503983276ec33b3612c", "message": "Remove configurationPid\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-05-18T18:38:10Z", "type": "commit"}, {"oid": "3d5acaca6da0d0ffeaa08503983276ec33b3612c", "url": "https://github.com/openhab/openhab-core/commit/3d5acaca6da0d0ffeaa08503983276ec33b3612c", "message": "Remove configurationPid\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-05-18T18:38:10Z", "type": "forcePushed"}, {"oid": "4a083289b3cf83b7267c00fdf56e4df9c05f568f", "url": "https://github.com/openhab/openhab-core/commit/4a083289b3cf83b7267c00fdf56e4df9c05f568f", "message": "Avoid logging authorization errors\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-05-19T10:22:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NDI0NA==", "url": "https://github.com/openhab/openhab-core/pull/1482#discussion_r427774244", "bodyText": "No need to use immediate = false explicit, it is the default setting.", "author": "maggu2810", "createdAt": "2020-05-20T06:40:55Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/RolesAllowedDynamicFeatureImpl.java", "diffHunk": "@@ -48,6 +53,9 @@\n  * @author Yannick Schaus - port to openHAB with modifications\n  */\n @Provider\n+@Component(immediate = false)", "originalCommit": "4a083289b3cf83b7267c00fdf56e4df9c05f568f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d4ddc511cf7bef0de9441fd7b66feeb07d9bf200", "chunk": "diff --git a/bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/RolesAllowedDynamicFeatureImpl.java b/bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/RolesAllowedDynamicFeatureImpl.java\nindex 9fa2081ca..9fdd62dc0 100644\n--- a/bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/RolesAllowedDynamicFeatureImpl.java\n+++ b/bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/RolesAllowedDynamicFeatureImpl.java\n\n@@ -53,7 +53,7 @@ import org.slf4j.LoggerFactory;\n  * @author Yannick Schaus - port to openHAB with modifications\n  */\n @Provider\n-@Component(immediate = false)\n+@Component\n @JaxrsExtension\n @JaxrsApplicationSelect(\"(\" + JaxrsWhiteboardConstants.JAX_RS_NAME + \"=\" + RESTConstants.JAX_RS_NAME + \")\")\n public class RolesAllowedDynamicFeatureImpl implements DynamicFeature {\n"}}, {"oid": "d4ddc511cf7bef0de9441fd7b66feeb07d9bf200", "url": "https://github.com/openhab/openhab-core/commit/d4ddc511cf7bef0de9441fd7b66feeb07d9bf200", "message": "Remove explicit immediate=false component annotation\n\nBuild error responses explicity instead of throwing\nexceptions in TokenResource to avoid logging.\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-05-20T17:42:53Z", "type": "commit"}, {"oid": "d4ddc511cf7bef0de9441fd7b66feeb07d9bf200", "url": "https://github.com/openhab/openhab-core/commit/d4ddc511cf7bef0de9441fd7b66feeb07d9bf200", "message": "Remove explicit immediate=false component annotation\n\nBuild error responses explicity instead of throwing\nexceptions in TokenResource to avoid logging.\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-05-20T17:42:53Z", "type": "forcePushed"}]}