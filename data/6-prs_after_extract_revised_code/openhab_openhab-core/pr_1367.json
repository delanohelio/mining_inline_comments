{"pr_number": 1367, "pr_title": "[automation] Corrected issue where scripts were not starting when OH restarted", "pr_createdAt": "2020-02-16T04:15:57Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1367", "timeline": [{"oid": "b49b493ffd118b9057257492ad781b86facae5a1", "url": "https://github.com/openhab/openhab-core/commit/b49b493ffd118b9057257492ad781b86facae5a1", "message": "Corrected issue where scripts were not starting when OH restarted\n\nFixes #841. I also added a few file extensions to the list that are not loaded as scripts.I've tested on Windows 10 and Fedora 31.\r\n\r\nSigned-off-by: Scott Rushworth <openhab@5iver.com>", "committedDate": "2020-02-16T04:15:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5MjgwMw==", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r379892803", "bodyText": "Instead of blacklisting wouldn't it be safer to define a whitelist of allowed file extensions?\nOtherwise you should put string litterals first in comparisons or may introduce a Set of Strings and check if the set contains your blacklisted extension.", "author": "cweitkamp", "createdAt": "2020-02-16T10:36:46Z", "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java", "diffHunk": "@@ -238,7 +229,9 @@ private String getScriptType(URL url) {\n         String fileExtension = fileName.substring(idx + 1);\n \n         // ignore known file extensions for \"temp\" files\n-        if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n+        if (fileExtension.equals(\"txt\") || fileExtension.equals(\"old\") || fileExtension.equals(\"example\")", "originalCommit": "b49b493ffd118b9057257492ad781b86facae5a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxNDE0Nw==", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r379914147", "bodyText": "It would be very difficult to use a whitelist, since any compatible ScriptEngineFactory could be used and there's no way to tell what file extensions might be used.\nI'll remove this for now and add a separate PR with a better way to blacklist. I really shouldn't have included this here anyhow, but I've wanted to exclude these extensions for a while.", "author": "5iver", "createdAt": "2020-02-16T16:08:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5MjgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyNjYxOQ==", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r379926619", "bodyText": "I have reverted this change and will submit another PR for it. Please squash the commits (I'm using the Github UI for this PR).", "author": "5iver", "createdAt": "2020-02-16T19:23:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5MjgwMw=="}], "type": "inlineReview", "revised_code": {"commit": "a7653185a230901f26c14339d64b1308310ebee7", "chunk": "diff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java\nindex 95fe13ba8..8f3297fcd 100644\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java\n\n@@ -229,9 +229,7 @@ public class ScriptFileWatcher extends AbstractWatchService {\n         String fileExtension = fileName.substring(idx + 1);\n \n         // ignore known file extensions for \"temp\" files\n-        if (fileExtension.equals(\"txt\") || fileExtension.equals(\"old\") || fileExtension.equals(\"example\")\n-                || fileExtension.equals(\"backup\") || fileExtension.equals(\"md\") || fileExtension.endsWith(\"~\")\n-                || fileExtension.endsWith(\"swp\")) {\n+         if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n             return null;\n         }\n         return fileExtension;\n"}}, {"oid": "a7653185a230901f26c14339d64b1308310ebee7", "url": "https://github.com/openhab/openhab-core/commit/a7653185a230901f26c14339d64b1308310ebee7", "message": "Revert blacklist\n\nSigned-off-by: Scott Rushworth <openhab@5iver.com>", "committedDate": "2020-02-16T19:21:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAyNTQ3Nw==", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r380025477", "bodyText": "Can you remove the whitespace?", "author": "cweitkamp", "createdAt": "2020-02-17T07:51:15Z", "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java", "diffHunk": "@@ -238,7 +229,7 @@ private String getScriptType(URL url) {\n         String fileExtension = fileName.substring(idx + 1);\n \n         // ignore known file extensions for \"temp\" files\n-        if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n+         if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {", "originalCommit": "a7653185a230901f26c14339d64b1308310ebee7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODExNg==", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r380138116", "bodyText": "Oops.. sorry about that... done!", "author": "5iver", "createdAt": "2020-02-17T11:51:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAyNTQ3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "011ab83026250c3ad5f732ec9bf20d411ce8d39f", "chunk": "diff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java\nindex 8f3297fcd..373a2e667 100644\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java\n\n@@ -229,7 +229,7 @@ public class ScriptFileWatcher extends AbstractWatchService {\n         String fileExtension = fileName.substring(idx + 1);\n \n         // ignore known file extensions for \"temp\" files\n-         if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n+        if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n             return null;\n         }\n         return fileExtension;\n"}}, {"oid": "011ab83026250c3ad5f732ec9bf20d411ce8d39f", "url": "https://github.com/openhab/openhab-core/commit/011ab83026250c3ad5f732ec9bf20d411ce8d39f", "message": "Removed whitespace\n\nSigned-off-by: Scott Rushworth <openhab@5iver.com>", "committedDate": "2020-02-17T11:50:23Z", "type": "commit"}]}