{"pr_number": 1428, "pr_title": "Removed deprecated constructor for 'DiscoveryResultImpl'", "pr_createdAt": "2020-04-17T21:53:37Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1428", "timeline": [{"oid": "b084e708e89915cd5757a9fb67a6c68d9f66d792", "url": "https://github.com/openhab/openhab-core/commit/b084e708e89915cd5757a9fb67a6c68d9f66d792", "message": "Removed deprecated contructor DiscoveryResultImpl\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-17T21:51:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ4ODc0MA==", "url": "https://github.com/openhab/openhab-core/pull/1428#discussion_r410488740", "bodyText": "This description is confusing. The ctor does not throw an IAE if ThingTypeUID is null but if TTL is missing.", "author": "cweitkamp", "createdAt": "2020-04-17T21:55:14Z", "path": "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java", "diffHunk": "@@ -48,44 +49,20 @@\n     /**\n      * Creates a new instance of this class with the specified parameters.\n      *\n-     * @param thingUID\n-     *            the Thing UID to be set (must not be null). If a {@code Thing} disappears and is discovered again, the\n-     *            same {@code Thing} ID\n-     *            must be created. A typical {@code Thing} ID could be the\n+     * @param thingTypeUID the {@link ThingTypeUID}\n+     * @param thingUID the {@link ThingUID} to be set (must not be null). If a {@code Thing} disappears and is\n+     *            discovered again, the same {@code Thing} ID must be created. A typical {@code Thing} ID could be the\n      *            serial number. It's usually <i>not</i> a product name.\n-     * @param properties the properties to be set (could be null or empty)\n-     * @param representationProperty the representationProperty to be set (could be null or empty)\n-     * @param label the human readable label to set (could be null or empty)\n      * @param bridgeUID the unique bridge ID to be set\n-     * @param timeToLive time to live in seconds\n-     *\n-     * @throws IllegalArgumentException\n-     *             if the Thing type UID or the Thing UID is null\n-     * @deprecated use {@link #DiscoveryResultImpl(ThingUID, ThingTypeUID, ThingUID, Map, String, String, long)}\n-     *             instead.\n-     */\n-    @Deprecated\n-    public DiscoveryResultImpl(ThingUID thingUID, ThingUID bridgeUID, Map<String, Object> properties,\n-            String representationProperty, String label, long timeToLive) throws IllegalArgumentException {\n-        this(thingUID.getThingTypeUID(), thingUID, bridgeUID, properties, representationProperty, label, timeToLive);\n-    }\n-\n-    /**\n-     * Creates a new instance of this class with the specified parameters.\n-     *\n-     * @param thingTypeUID the {@link ThingTypeUID}\n-     * @param thingUID the Thing UID to be set (must not be null). If a {@code Thing} disappears and is discovered\n-     *            again, the same {@code Thing} ID must be created. A typical {@code Thing} ID could be the serial\n-     *            number. It's usually <i>not</i> a product name.\n      * @param properties the properties to be set (could be null or empty)\n      * @param representationProperty the representationProperty to be set (could be null or empty)\n      * @param label the human readable label to set (could be null or empty)\n-     * @param bridgeUID the unique bridge ID to be set\n      * @param timeToLive time to live in seconds\n      *\n-     * @throws IllegalArgumentException\n-     *             if the Thing type UID or the Thing UID is null\n+     * @throws IllegalArgumentException if the Thing type UID or the Thing UID is null", "originalCommit": "b084e708e89915cd5757a9fb67a6c68d9f66d792", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk3NTgxMQ==", "url": "https://github.com/openhab/openhab-core/pull/1428#discussion_r410975811", "bodyText": "Can you update it so it documents the actual implementation?", "author": "wborn", "createdAt": "2020-04-19T19:39:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ4ODc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwOTY0Mg==", "url": "https://github.com/openhab/openhab-core/pull/1428#discussion_r411109642", "bodyText": "Done.", "author": "cweitkamp", "createdAt": "2020-04-20T05:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ4ODc0MA=="}], "type": "inlineReview", "revised_code": {"commit": "70eee2ffb5bee7e0cf18abe2c67684669c700e64", "chunk": "diff --git a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java\nindex 13dd090b7..4f2d6a7f0 100644\n--- a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java\n+++ b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java\n\n@@ -60,7 +60,7 @@ public class DiscoveryResultImpl implements DiscoveryResult {\n      * @param timeToLive time to live in seconds\n      *\n      * @throws IllegalArgumentException if the Thing type UID or the Thing UID is null\n-     * @deprecated use {@link DiscoveryResultBuilder} instead\n+     * @deprecated use {@link DiscoveryResultBuilder} instead.\n      */\n     @Deprecated\n     public DiscoveryResultImpl(ThingTypeUID thingTypeUID, ThingUID thingUID, ThingUID bridgeUID,\n"}}, {"oid": "70eee2ffb5bee7e0cf18abe2c67684669c700e64", "url": "https://github.com/openhab/openhab-core/commit/70eee2ffb5bee7e0cf18abe2c67684669c700e64", "message": "Added SuppressWarnings('deprecation')\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-18T16:09:31Z", "type": "commit"}, {"oid": "0c0f325f01230eda12b8b3b77f3604cda48382eb", "url": "https://github.com/openhab/openhab-core/commit/0c0f325f01230eda12b8b3b77f3604cda48382eb", "message": "Removed set default values\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-18T16:29:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg5ODQyNA==", "url": "https://github.com/openhab/openhab-core/pull/1428#discussion_r410898424", "bodyText": "If you annotate the class with @NonNullByDefault  and methods with @Nullable (where applicable) you can also cleanup all the JavaDoc texts about parameters being (not) null. \ud83d\ude09", "author": "wborn", "createdAt": "2020-04-19T12:56:01Z", "path": "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java", "diffHunk": "@@ -48,44 +49,20 @@\n     /**\n      * Creates a new instance of this class with the specified parameters.\n      *\n-     * @param thingUID\n-     *            the Thing UID to be set (must not be null). If a {@code Thing} disappears and is discovered again, the\n-     *            same {@code Thing} ID\n-     *            must be created. A typical {@code Thing} ID could be the\n+     * @param thingTypeUID the {@link ThingTypeUID}\n+     * @param thingUID the {@link ThingUID} to be set (must not be null). If a {@code Thing} disappears and is", "originalCommit": "0c0f325f01230eda12b8b3b77f3604cda48382eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2Njk4MA==", "url": "https://github.com/openhab/openhab-core/pull/1428#discussion_r410966980", "bodyText": "Done.", "author": "cweitkamp", "createdAt": "2020-04-19T18:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg5ODQyNA=="}], "type": "inlineReview", "revised_code": {"commit": "2c66aca045d319e10d23e201acf2b31155da216a", "chunk": "diff --git a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java\nindex 4f2d6a7f0..b9799cccc 100644\n--- a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java\n+++ b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java\n\n@@ -50,22 +52,22 @@ public class DiscoveryResultImpl implements DiscoveryResult {\n      * Creates a new instance of this class with the specified parameters.\n      *\n      * @param thingTypeUID the {@link ThingTypeUID}\n-     * @param thingUID the {@link ThingUID} to be set (must not be null). If a {@code Thing} disappears and is\n+     * @param thingUID the {@link ThingUID} to be set. If a {@code Thing} disappears and is\n      *            discovered again, the same {@code Thing} ID must be created. A typical {@code Thing} ID could be the\n      *            serial number. It's usually <i>not</i> a product name.\n      * @param bridgeUID the unique bridge ID to be set\n-     * @param properties the properties to be set (could be null or empty)\n-     * @param representationProperty the representationProperty to be set (could be null or empty)\n-     * @param label the human readable label to set (could be null or empty)\n+     * @param properties the properties to be set\n+     * @param representationProperty the representationProperty to be set\n+     * @param label the human readable label to set\n      * @param timeToLive time to live in seconds\n      *\n      * @throws IllegalArgumentException if the Thing type UID or the Thing UID is null\n      * @deprecated use {@link DiscoveryResultBuilder} instead.\n      */\n     @Deprecated\n-    public DiscoveryResultImpl(ThingTypeUID thingTypeUID, ThingUID thingUID, ThingUID bridgeUID,\n-            Map<String, Object> properties, String representationProperty, String label, long timeToLive)\n-            throws IllegalArgumentException {\n+    public DiscoveryResultImpl(@Nullable ThingTypeUID thingTypeUID, ThingUID thingUID, @Nullable ThingUID bridgeUID,\n+            @Nullable Map<String, Object> properties, @Nullable String representationProperty, @Nullable String label,\n+            long timeToLive) throws IllegalArgumentException {\n         if (thingUID == null) {\n             throw new IllegalArgumentException(\"The thing UID must not be null!\");\n         }\n"}}, {"oid": "2c66aca045d319e10d23e201acf2b31155da216a", "url": "https://github.com/openhab/openhab-core/commit/2c66aca045d319e10d23e201acf2b31155da216a", "message": "Added nullness annotations\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-19T18:50:56Z", "type": "commit"}, {"oid": "ddebd169e845bd78f4a6339209182379d0da025c", "url": "https://github.com/openhab/openhab-core/commit/ddebd169e845bd78f4a6339209182379d0da025c", "message": "Incorporated comments from review\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-20T05:48:37Z", "type": "commit"}]}