{"pr_number": 1965, "pr_title": "[transport.modbus] Added support for RTU encoding over TCP", "pr_createdAt": "2020-12-19T19:10:10Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1965", "timeline": [{"oid": "af7b00ef30e282f996f54d6a1bcffbad8feeae07", "url": "https://github.com/openhab/openhab-core/commit/af7b00ef30e282f996f54d6a1bcffbad8feeae07", "message": "[modbus] add support for rtu encoding over tcp\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-12-17T14:40:57Z", "type": "commit"}, {"oid": "ee1059e6dfd21e3894a9b46e0f82972ca828100b", "url": "https://github.com/openhab/openhab-core/commit/ee1059e6dfd21e3894a9b46e0f82972ca828100b", "message": "[modbus] typo\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-12-17T15:26:00Z", "type": "commit"}, {"oid": "efdbed9fd54c6a44bf7003260d5e687582b0ee74", "url": "https://github.com/openhab/openhab-core/commit/efdbed9fd54c6a44bf7003260d5e687582b0ee74", "message": "[modbus] pom\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-12-18T19:03:08Z", "type": "commit"}, {"oid": "3b455eca7649a377e871645d7410e03633b6150e", "url": "https://github.com/openhab/openhab-core/commit/3b455eca7649a377e871645d7410e03633b6150e", "message": "[modbus] support rtuEncoded\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-12-18T19:14:23Z", "type": "commit"}, {"oid": "66c9e3a252858ec21621e39d61a5a712500b4d8f", "url": "https://github.com/openhab/openhab-core/commit/66c9e3a252858ec21621e39d61a5a712500b4d8f", "message": "[modbus] revert EndPointPoolConfiguration\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-12-19T11:32:40Z", "type": "commit"}, {"oid": "b8a17705ed84761f3c414ced7c689ab1362f7393", "url": "https://github.com/openhab/openhab-core/commit/b8a17705ed84761f3c414ced7c689ab1362f7393", "message": "[modbus] add test case\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-12-19T11:33:07Z", "type": "commit"}, {"oid": "18ae058ca5bb3bff99a7b0b0ea6ac74e15e66355", "url": "https://github.com/openhab/openhab-core/commit/18ae058ca5bb3bff99a7b0b0ea6ac74e15e66355", "message": "[modbus] test RTU encoding over TCP on specific live device\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-12-19T14:40:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4NjQzOA==", "url": "https://github.com/openhab/openhab-core/pull/1965#discussion_r546286438", "bodyText": "I suggest removing this class as it has been effectively disabled and cannot be easily run without real device.", "author": "ssalonen", "createdAt": "2020-12-19T21:42:11Z", "path": "bundles/org.openhab.core.io.transport.modbus/src/test/java/org/openhab/core/io/transport/modbus/test/RtuOverTcpTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.transport.modbus.test;\n+\n+import static org.hamcrest.CoreMatchers.*;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.Optional;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.core.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.core.io.transport.modbus.ModbusReadFunctionCode;\n+import org.openhab.core.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.core.io.transport.modbus.ModbusRegisterArray;\n+import org.openhab.core.io.transport.modbus.endpoint.ModbusTCPSlaveEndpoint;\n+\n+/**\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ */\n+@NonNullByDefault\n+class RtuOverTcpTest extends IntegrationTestSupport {", "originalCommit": "18ae058ca5bb3bff99a7b0b0ea6ac74e15e66355", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM1NzU3OQ==", "url": "https://github.com/openhab/openhab-core/pull/1965#discussion_r546357579", "bodyText": "Ok. Done.", "author": "andrewfg", "createdAt": "2020-12-20T10:37:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4NjQzOA=="}], "type": "inlineReview", "revised_code": {"commit": "3e1877361af48ddcc321895d007fa7b12a5f225c", "chunk": "diff --git a/bundles/org.openhab.core.io.transport.modbus/src/test/java/org/openhab/core/io/transport/modbus/test/RtuOverTcpTest.java b/bundles/org.openhab.core.io.transport.modbus/src/test/java/org/openhab/core/io/transport/modbus/test/RtuOverTcpTest.java\ndeleted file mode 100644\nindex abbcac95d..000000000\n--- a/bundles/org.openhab.core.io.transport.modbus/src/test/java/org/openhab/core/io/transport/modbus/test/RtuOverTcpTest.java\n+++ /dev/null\n\n@@ -1,93 +0,0 @@\n-/**\n- * Copyright (c) 2010-2020 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.io.transport.modbus.test;\n-\n-import static org.hamcrest.CoreMatchers.*;\n-import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-\n-import java.util.Optional;\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.atomic.AtomicInteger;\n-import java.util.concurrent.atomic.AtomicReference;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.junit.jupiter.api.Test;\n-import org.openhab.core.io.transport.modbus.ModbusCommunicationInterface;\n-import org.openhab.core.io.transport.modbus.ModbusReadFunctionCode;\n-import org.openhab.core.io.transport.modbus.ModbusReadRequestBlueprint;\n-import org.openhab.core.io.transport.modbus.ModbusRegisterArray;\n-import org.openhab.core.io.transport.modbus.endpoint.ModbusTCPSlaveEndpoint;\n-\n-/**\n- * @author Andrew Fiddian-Green - Initial contribution\n- */\n-@NonNullByDefault\n-class RtuOverTcpTest extends IntegrationTestSupport {\n-\n-    /*\n-     * Live functional test of RTU encoding over IP for a specific connected device\n-     * Do NOT 'runThisTest' unless you have the specific device connected!\n-     */\n-    @Test\n-    public void liveTestRtuOverTcp() throws Exception {\n-        boolean runThisTest = false;\n-        if (runThisTest) {\n-            // server parameters for the specific device\n-            final String ipAddress = \"192.168.1.172\";\n-            final int ipPort = 23;\n-\n-            // encoding parameters\n-            final boolean rtuEncoded = true;\n-\n-            // request parameters for the specific device\n-            final int slaveId = 1;\n-            final ModbusReadFunctionCode functionId = ModbusReadFunctionCode.READ_INPUT_REGISTERS;\n-            final int regStartNumber = 0;\n-            final int regRequestCount = 10;\n-\n-            // execution parameters\n-            final int maxTries = 1;\n-            final int timeout = 60;\n-\n-            AtomicInteger unexpectedCount = new AtomicInteger();\n-            CountDownLatch callbackCalled = new CountDownLatch(1);\n-            AtomicReference<Object> lastData = new AtomicReference<>();\n-\n-            ModbusTCPSlaveEndpoint endpoint = new ModbusTCPSlaveEndpoint(ipAddress, ipPort, rtuEncoded);\n-\n-            try (ModbusCommunicationInterface comms = modbusManager.newModbusCommunicationInterface(endpoint, null)) {\n-                comms.submitOneTimePoll(\n-                        new ModbusReadRequestBlueprint(slaveId, functionId, regStartNumber, regRequestCount, maxTries),\n-                        result -> {\n-                            Optional<ModbusRegisterArray> registersOptional = result.getRegisters();\n-                            if (registersOptional.isPresent()) {\n-                                lastData.set(registersOptional.get());\n-                            } else {\n-                                unexpectedCount.incrementAndGet();\n-                            }\n-                            callbackCalled.countDown();\n-                        }, failure -> {\n-                            unexpectedCount.incrementAndGet();\n-                            callbackCalled.countDown();\n-                        });\n-\n-                assertTrue(callbackCalled.await(timeout, TimeUnit.SECONDS));\n-                assertThat(unexpectedCount.get(), is(equalTo(0)));\n-                ModbusRegisterArray registers = (ModbusRegisterArray) lastData.get();\n-                assertThat(registers.size(), is(equalTo(regRequestCount)));\n-            }\n-        }\n-    }\n-}\n"}}, {"oid": "3e1877361af48ddcc321895d007fa7b12a5f225c", "url": "https://github.com/openhab/openhab-core/commit/3e1877361af48ddcc321895d007fa7b12a5f225c", "message": "[modbus] remove device dependent test case\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-12-20T10:08:10Z", "type": "commit"}, {"oid": "f55e6e9639cb50168acf320510c41a24e1156ed0", "url": "https://github.com/openhab/openhab-core/commit/f55e6e9639cb50168acf320510c41a24e1156ed0", "message": "[modbus] final version number in pom file\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>", "committedDate": "2020-12-20T19:04:46Z", "type": "commit"}]}