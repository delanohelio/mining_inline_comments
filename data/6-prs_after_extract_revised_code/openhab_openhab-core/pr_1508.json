{"pr_number": 1508, "pr_title": "Added \"editable\" info to rules in REST API", "pr_createdAt": "2020-05-31T22:39:40Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1508", "timeline": [{"oid": "fb53b3c41a63a800944dd4788532360579704d58", "url": "https://github.com/openhab/openhab-core/commit/fb53b3c41a63a800944dd4788532360579704d58", "message": "added \"editable\" info to rules in REST API\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-05-31T22:30:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjkwMg==", "url": "https://github.com/openhab/openhab-core/pull/1508#discussion_r433436902", "bodyText": "Is this really an optional reference? Isn't it mandatory and we can pass it via constructor injection?", "author": "cweitkamp", "createdAt": "2020-06-01T19:18:22Z", "path": "bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java", "diffHunk": "@@ -121,6 +126,15 @@ public RuleResource( //\n         this.ruleRegistry = ruleRegistry;\n     }\n \n+    @Reference(cardinality = ReferenceCardinality.OPTIONAL, policy = ReferencePolicy.DYNAMIC)", "originalCommit": "fb53b3c41a63a800944dd4788532360579704d58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEwMzAxMQ==", "url": "https://github.com/openhab/openhab-core/pull/1508#discussion_r434103011", "bodyText": "Agree, can be mandatory.", "author": "kaikreuzer", "createdAt": "2020-06-02T18:48:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjkwMg=="}], "type": "inlineReview", "revised_code": {"commit": "70bf7a54617a665feba615efca4f9966f2c2d87c", "chunk": "diff --git a/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java b/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java\nindex 58722fa5b..1c580f2ae 100644\n--- a/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java\n+++ b/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java\n\n@@ -113,28 +111,20 @@ public class RuleResource implements RESTResource {\n \n     private final RuleManager ruleManager;\n     private final RuleRegistry ruleRegistry;\n+    private final ManagedRuleProvider managedRuleProvider;\n \n     private @Context @NonNullByDefault({}) UriInfo uriInfo;\n \n-    private @NonNullByDefault({}) ManagedRuleProvider managedRuleProvider;\n-\n     @Activate\n     public RuleResource( //\n             final @Reference RuleManager ruleManager, //\n-            final @Reference RuleRegistry ruleRegistry) {\n+            final @Reference RuleRegistry ruleRegistry, //\n+            final @Reference ManagedRuleProvider managedRuleProvider) {\n         this.ruleManager = ruleManager;\n         this.ruleRegistry = ruleRegistry;\n-    }\n-\n-    @Reference(cardinality = ReferenceCardinality.OPTIONAL, policy = ReferencePolicy.DYNAMIC)\n-    protected void setManagedRuleProvider(ManagedRuleProvider managedRuleProvider) {\n         this.managedRuleProvider = managedRuleProvider;\n     }\n \n-    protected void unsetManagedRuleProvider(ManagedRuleProvider managedRuleProvider) {\n-        this.managedRuleProvider = null;\n-    }\n-\n     @GET\n     @Produces(MediaType.APPLICATION_JSON)\n     @ApiOperation(value = \"Get available rules, optionally filtered by tags and/or prefix.\", response = EnrichedRuleDTO.class, responseContainer = \"Collection\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNzQxMA==", "url": "https://github.com/openhab/openhab-core/pull/1508#discussion_r433437410", "bodyText": "If the reference stays optional I prefer to see a null-check on the managedRuleProvider here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    enrichedRuleDto.editable = managedRuleProvider.get(enrichedRuleDto.uid) != null;\n          \n          \n            \n                    enrichedRuleDto.editable = managedRuleProvider.get(rule.getUID()) != null;", "author": "cweitkamp", "createdAt": "2020-06-01T19:19:22Z", "path": "bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/dto/EnrichedRuleDTOMapper.java", "diffHunk": "@@ -20,13 +21,16 @@\n  * This is a utility class to convert between the respective object and its DTO.\n  *\n  * @author Markus Rathgeb - Initial contribution\n+ * @author Kai Kreuzer - added editable field\n  */\n public class EnrichedRuleDTOMapper extends RuleDTOMapper {\n \n-    public static EnrichedRuleDTO map(final Rule rule, final RuleManager ruleEngine) {\n+    public static EnrichedRuleDTO map(final Rule rule, final RuleManager ruleEngine,\n+            final ManagedRuleProvider managedRuleProvider) {\n         final EnrichedRuleDTO enrichedRuleDto = new EnrichedRuleDTO();\n         fillProperties(rule, enrichedRuleDto);\n         enrichedRuleDto.status = ruleEngine.getStatusInfo(rule.getUID());\n+        enrichedRuleDto.editable = managedRuleProvider.get(enrichedRuleDto.uid) != null;", "originalCommit": "fb53b3c41a63a800944dd4788532360579704d58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70bf7a54617a665feba615efca4f9966f2c2d87c", "chunk": "diff --git a/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/dto/EnrichedRuleDTOMapper.java b/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/dto/EnrichedRuleDTOMapper.java\nindex b5f2d9be1..afa329120 100644\n--- a/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/dto/EnrichedRuleDTOMapper.java\n+++ b/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/dto/EnrichedRuleDTOMapper.java\n\n@@ -30,7 +30,7 @@ public class EnrichedRuleDTOMapper extends RuleDTOMapper {\n         final EnrichedRuleDTO enrichedRuleDto = new EnrichedRuleDTO();\n         fillProperties(rule, enrichedRuleDto);\n         enrichedRuleDto.status = ruleEngine.getStatusInfo(rule.getUID());\n-        enrichedRuleDto.editable = managedRuleProvider.get(enrichedRuleDto.uid) != null;\n+        enrichedRuleDto.editable = managedRuleProvider.get(rule.getUID()) != null;\n         return enrichedRuleDto;\n     }\n }\n"}}, {"oid": "70bf7a54617a665feba615efca4f9966f2c2d87c", "url": "https://github.com/openhab/openhab-core/commit/70bf7a54617a665feba615efca4f9966f2c2d87c", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-06-02T18:50:23Z", "type": "commit"}, {"oid": "70bf7a54617a665feba615efca4f9966f2c2d87c", "url": "https://github.com/openhab/openhab-core/commit/70bf7a54617a665feba615efca4f9966f2c2d87c", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-06-02T18:50:23Z", "type": "forcePushed"}]}