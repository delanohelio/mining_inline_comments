{"pr_number": 1395, "pr_title": "utility for removing orphan links", "pr_createdAt": "2020-03-22T19:45:55Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1395", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MjgzNw==", "url": "https://github.com/openhab/openhab-core/pull/1395#discussion_r453882837", "bodyText": "Can you add an example call like in the other console outputs?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    console.println(\"Specify 'list' or 'purge'\");\n          \n          \n            \n                                    console.println(\"Specify action 'list' or 'purge' to be executed: orphan <list|purge>\");", "author": "cweitkamp", "createdAt": "2020-07-13T19:31:26Z", "path": "bundles/org.openhab.core.thing/src/main/java/org/eclipse/smarthome/core/thing/internal/console/LinkConsoleCommandExtension.java", "diffHunk": "@@ -55,6 +65,14 @@ public void execute(String[] args, Console console) {\n                 case SUBCMD_LIST:\n                     list(console, itemChannelLinkRegistry.getAll());\n                     return;\n+                case SUBCMD_ORPHAN:\n+                    if (args.length == 2 && (args[1].equals(\"list\") || args[1].equals(\"purge\"))) {\n+                        orphan(console, args[1], itemChannelLinkRegistry.getAll(), thingRegistry.getAll(),\n+                                itemRegistry.getAll());\n+                    } else {\n+                        console.println(\"Specify 'list' or 'purge'\");", "originalCommit": "f15d72ff01627f521fa6ba333cec02425fe91d7d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "775f17de8747040c457702a5e5612ed54e8c303b", "chunk": "diff --git a/bundles/org.openhab.core.thing/src/main/java/org/eclipse/smarthome/core/thing/internal/console/LinkConsoleCommandExtension.java b/bundles/org.openhab.core.thing/src/main/java/org/eclipse/smarthome/core/thing/internal/console/LinkConsoleCommandExtension.java\ndeleted file mode 100644\nindex 8f25fd908..000000000\n--- a/bundles/org.openhab.core.thing/src/main/java/org/eclipse/smarthome/core/thing/internal/console/LinkConsoleCommandExtension.java\n+++ /dev/null\n\n@@ -1,194 +0,0 @@\n-/**\n- * Copyright (c) 2010-2019 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.eclipse.smarthome.core.thing.internal.console;\n-\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n-import org.eclipse.smarthome.core.items.Item;\n-import org.eclipse.smarthome.core.items.ItemRegistry;\n-import org.eclipse.smarthome.core.thing.Channel;\n-import org.eclipse.smarthome.core.thing.ChannelUID;\n-import org.eclipse.smarthome.core.thing.Thing;\n-import org.eclipse.smarthome.core.thing.ThingRegistry;\n-import org.eclipse.smarthome.core.thing.link.ItemChannelLink;\n-import org.eclipse.smarthome.core.thing.link.ItemChannelLinkRegistry;\n-import org.eclipse.smarthome.io.console.Console;\n-import org.eclipse.smarthome.io.console.extensions.AbstractConsoleCommandExtension;\n-import org.eclipse.smarthome.io.console.extensions.ConsoleCommandExtension;\n-import org.osgi.service.component.annotations.Component;\n-import org.osgi.service.component.annotations.Reference;\n-\n-/**\n- * {@link LinkConsoleCommandExtension} provides console commands for listing,\n- * addding and removing links.\n- *\n- * @author Dennis Nobel - Initial contribution\n- * @author Alex Tugarev - Added support for links between items and things\n- * @author Kai Kreuzer - Removed Thing link commands\n- */\n-@Component(immediate = true, service = ConsoleCommandExtension.class)\n-public class LinkConsoleCommandExtension extends AbstractConsoleCommandExtension {\n-\n-    private static final String SUBCMD_LIST = \"list\";\n-    private static final String SUBCMD_CL_ADD = \"addChannelLink\";\n-    private static final String SUBCMD_CL_REMOVE = \"removeChannelLink\";\n-    private static final String SUBCMD_CLEAR = \"clear\";\n-    private static final String SUBCMD_ORPHAN = \"orphan\";\n-\n-    private ItemChannelLinkRegistry itemChannelLinkRegistry;\n-    private ThingRegistry thingRegistry;\n-    private ItemRegistry itemRegistry;\n-\n-    public LinkConsoleCommandExtension() {\n-        super(\"links\", \"Manage your links.\");\n-    }\n-\n-    @Override\n-    public void execute(String[] args, Console console) {\n-        if (args.length > 0) {\n-            String subCommand = args[0];\n-            switch (subCommand) {\n-                case SUBCMD_LIST:\n-                    list(console, itemChannelLinkRegistry.getAll());\n-                    return;\n-                case SUBCMD_ORPHAN:\n-                    if (args.length == 2 && (args[1].equals(\"list\") || args[1].equals(\"purge\"))) {\n-                        orphan(console, args[1], itemChannelLinkRegistry.getAll(), thingRegistry.getAll(),\n-                                itemRegistry.getAll());\n-                    } else {\n-                        console.println(\"Specify 'list' or 'purge'\");\n-                    }\n-                    return;\n-                case SUBCMD_CL_ADD:\n-                    if (args.length > 2) {\n-                        String itemName = args[1];\n-                        ChannelUID channelUID = new ChannelUID(args[2]);\n-                        addChannelLink(console, itemName, channelUID);\n-                    } else {\n-                        console.println(\"Specify item name and channel UID to link: link <itemName> <channelUID>\");\n-                    }\n-                    return;\n-                case SUBCMD_CL_REMOVE:\n-                    if (args.length > 2) {\n-                        String itemName = args[1];\n-                        ChannelUID channelUID = new ChannelUID(args[2]);\n-                        removeChannelLink(console, itemName, channelUID);\n-                    } else {\n-                        console.println(\"Specify item name and channel UID to unlink: link <itemName> <channelUID>\");\n-                    }\n-                    return;\n-                case SUBCMD_CLEAR:\n-                    clear(console);\n-                    return;\n-                default:\n-                    console.println(\"Unknown command '\" + subCommand + \"'\");\n-                    printUsage(console);\n-                    break;\n-            }\n-        } else {\n-            printUsage(console);\n-        }\n-    }\n-\n-    private void orphan(Console console, String action, Collection<ItemChannelLink> itemChannelLinks,\n-            Collection<Thing> things, Collection<Item> items) {\n-        Collection<ChannelUID> channelUIDS = things.stream().map(Thing::getChannels).flatMap(List::stream)\n-                .map(Channel::getUID).collect(Collectors.toCollection(HashSet::new));\n-        Collection<String> itemNames = items.stream().map(Item::getName).collect(Collectors.toCollection(HashSet::new));\n-\n-        itemChannelLinks.forEach(itemChannelLink -> {\n-            if (!channelUIDS.contains(itemChannelLink.getLinkedUID())) {\n-                console.println(\"Thing channel missing: \" + itemChannelLink.toString());\n-                if (action.equals(\"purge\")) {\n-                    removeChannelLink(console, itemChannelLink.getItemName(), itemChannelLink.getLinkedUID());\n-                }\n-            } else if (!itemNames.contains(itemChannelLink.getItemName())) {\n-                console.println(\"Item missing: \" + itemChannelLink.toString());\n-                if (action.equals(\"purge\")) {\n-                    removeChannelLink(console, itemChannelLink.getItemName(), itemChannelLink.getLinkedUID());\n-                }\n-            }\n-        });\n-    }\n-\n-    @Override\n-    public List<String> getUsages() {\n-        return Arrays.asList(new String[] { buildCommandUsage(SUBCMD_LIST, \"lists all links\"),\n-                buildCommandUsage(SUBCMD_CL_ADD + \" <itemName> <channelUID>\", \"links an item with a channel\"),\n-                buildCommandUsage(SUBCMD_CL_REMOVE + \" <itemName> <thingUID>\", \"unlinks an item with a channel\"),\n-                buildCommandUsage(SUBCMD_CLEAR, \"removes all managed links\"),\n-                buildCommandUsage(SUBCMD_ORPHAN, \"<list|purge> lists/purges all links with one missing element\") });\n-    }\n-\n-    private void clear(Console console) {\n-        Collection<ItemChannelLink> itemChannelLinks = itemChannelLinkRegistry.getAll();\n-        for (ItemChannelLink itemChannelLink : itemChannelLinks) {\n-            itemChannelLinkRegistry.remove(itemChannelLink.getUID());\n-        }\n-        console.println(itemChannelLinks.size() + \" links successfully removed.\");\n-    }\n-\n-    private void addChannelLink(Console console, String itemName, ChannelUID channelUID) {\n-        ItemChannelLink itemChannelLink = new ItemChannelLink(itemName, channelUID);\n-        itemChannelLinkRegistry.add(itemChannelLink);\n-        console.println(\"Link \" + itemChannelLink.toString() + \" successfully added.\");\n-    }\n-\n-    private void list(Console console, Collection<ItemChannelLink> itemChannelLinks) {\n-        for (ItemChannelLink itemChannelLink : itemChannelLinks) {\n-            console.println(itemChannelLink.toString());\n-        }\n-    }\n-\n-    private void removeChannelLink(Console console, String itemName, ChannelUID channelUID) {\n-        ItemChannelLink itemChannelLink = new ItemChannelLink(itemName, channelUID);\n-        ItemChannelLink removedItemChannelLink = itemChannelLinkRegistry.remove(itemChannelLink.getUID());\n-        if (removedItemChannelLink != null) {\n-            console.println(\"Link \" + itemChannelLink.toString() + \"successfully removed.\");\n-        } else {\n-            console.println(\"Could not remove link \" + itemChannelLink.toString() + \".\");\n-        }\n-    }\n-\n-    @Reference\n-    protected void setThingRegistry(ThingRegistry thingRegistry) {\n-        this.thingRegistry = thingRegistry;\n-    }\n-\n-    protected void unsetThingRegistry(ThingRegistry thingRegistry) {\n-        this.thingRegistry = null;\n-    }\n-\n-    @Reference\n-    protected void setItemRegistry(ItemRegistry itemRegistry) {\n-        this.itemRegistry = itemRegistry;\n-    }\n-\n-    protected void unsetItemRegistry(ItemRegistry thingRegistry) {\n-        this.itemRegistry = null;\n-    }\n-\n-    @Reference\n-    protected void setItemChannelLinkRegistry(ItemChannelLinkRegistry itemChannelLinkRegistry) {\n-        this.itemChannelLinkRegistry = itemChannelLinkRegistry;\n-    }\n-\n-    protected void unsetItemChannelLinkRegistry(ItemChannelLinkRegistry itemChannelLinkRegistry) {\n-        this.itemChannelLinkRegistry = null;\n-    }\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4Mjk3Mg==", "url": "https://github.com/openhab/openhab-core/pull/1395#discussion_r453882972", "bodyText": "Rather use constructor injection. Please apply it for the other service reference too.", "author": "cweitkamp", "createdAt": "2020-07-13T19:31:41Z", "path": "bundles/org.openhab.core.thing/src/main/java/org/eclipse/smarthome/core/thing/internal/console/LinkConsoleCommandExtension.java", "diffHunk": "@@ -124,6 +164,24 @@ private void removeChannelLink(Console console, String itemName, ChannelUID chan\n         }\n     }\n \n+    @Reference\n+    protected void setThingRegistry(ThingRegistry thingRegistry) {", "originalCommit": "f15d72ff01627f521fa6ba333cec02425fe91d7d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "775f17de8747040c457702a5e5612ed54e8c303b", "chunk": "diff --git a/bundles/org.openhab.core.thing/src/main/java/org/eclipse/smarthome/core/thing/internal/console/LinkConsoleCommandExtension.java b/bundles/org.openhab.core.thing/src/main/java/org/eclipse/smarthome/core/thing/internal/console/LinkConsoleCommandExtension.java\ndeleted file mode 100644\nindex 8f25fd908..000000000\n--- a/bundles/org.openhab.core.thing/src/main/java/org/eclipse/smarthome/core/thing/internal/console/LinkConsoleCommandExtension.java\n+++ /dev/null\n\n@@ -1,194 +0,0 @@\n-/**\n- * Copyright (c) 2010-2019 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.eclipse.smarthome.core.thing.internal.console;\n-\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n-import org.eclipse.smarthome.core.items.Item;\n-import org.eclipse.smarthome.core.items.ItemRegistry;\n-import org.eclipse.smarthome.core.thing.Channel;\n-import org.eclipse.smarthome.core.thing.ChannelUID;\n-import org.eclipse.smarthome.core.thing.Thing;\n-import org.eclipse.smarthome.core.thing.ThingRegistry;\n-import org.eclipse.smarthome.core.thing.link.ItemChannelLink;\n-import org.eclipse.smarthome.core.thing.link.ItemChannelLinkRegistry;\n-import org.eclipse.smarthome.io.console.Console;\n-import org.eclipse.smarthome.io.console.extensions.AbstractConsoleCommandExtension;\n-import org.eclipse.smarthome.io.console.extensions.ConsoleCommandExtension;\n-import org.osgi.service.component.annotations.Component;\n-import org.osgi.service.component.annotations.Reference;\n-\n-/**\n- * {@link LinkConsoleCommandExtension} provides console commands for listing,\n- * addding and removing links.\n- *\n- * @author Dennis Nobel - Initial contribution\n- * @author Alex Tugarev - Added support for links between items and things\n- * @author Kai Kreuzer - Removed Thing link commands\n- */\n-@Component(immediate = true, service = ConsoleCommandExtension.class)\n-public class LinkConsoleCommandExtension extends AbstractConsoleCommandExtension {\n-\n-    private static final String SUBCMD_LIST = \"list\";\n-    private static final String SUBCMD_CL_ADD = \"addChannelLink\";\n-    private static final String SUBCMD_CL_REMOVE = \"removeChannelLink\";\n-    private static final String SUBCMD_CLEAR = \"clear\";\n-    private static final String SUBCMD_ORPHAN = \"orphan\";\n-\n-    private ItemChannelLinkRegistry itemChannelLinkRegistry;\n-    private ThingRegistry thingRegistry;\n-    private ItemRegistry itemRegistry;\n-\n-    public LinkConsoleCommandExtension() {\n-        super(\"links\", \"Manage your links.\");\n-    }\n-\n-    @Override\n-    public void execute(String[] args, Console console) {\n-        if (args.length > 0) {\n-            String subCommand = args[0];\n-            switch (subCommand) {\n-                case SUBCMD_LIST:\n-                    list(console, itemChannelLinkRegistry.getAll());\n-                    return;\n-                case SUBCMD_ORPHAN:\n-                    if (args.length == 2 && (args[1].equals(\"list\") || args[1].equals(\"purge\"))) {\n-                        orphan(console, args[1], itemChannelLinkRegistry.getAll(), thingRegistry.getAll(),\n-                                itemRegistry.getAll());\n-                    } else {\n-                        console.println(\"Specify 'list' or 'purge'\");\n-                    }\n-                    return;\n-                case SUBCMD_CL_ADD:\n-                    if (args.length > 2) {\n-                        String itemName = args[1];\n-                        ChannelUID channelUID = new ChannelUID(args[2]);\n-                        addChannelLink(console, itemName, channelUID);\n-                    } else {\n-                        console.println(\"Specify item name and channel UID to link: link <itemName> <channelUID>\");\n-                    }\n-                    return;\n-                case SUBCMD_CL_REMOVE:\n-                    if (args.length > 2) {\n-                        String itemName = args[1];\n-                        ChannelUID channelUID = new ChannelUID(args[2]);\n-                        removeChannelLink(console, itemName, channelUID);\n-                    } else {\n-                        console.println(\"Specify item name and channel UID to unlink: link <itemName> <channelUID>\");\n-                    }\n-                    return;\n-                case SUBCMD_CLEAR:\n-                    clear(console);\n-                    return;\n-                default:\n-                    console.println(\"Unknown command '\" + subCommand + \"'\");\n-                    printUsage(console);\n-                    break;\n-            }\n-        } else {\n-            printUsage(console);\n-        }\n-    }\n-\n-    private void orphan(Console console, String action, Collection<ItemChannelLink> itemChannelLinks,\n-            Collection<Thing> things, Collection<Item> items) {\n-        Collection<ChannelUID> channelUIDS = things.stream().map(Thing::getChannels).flatMap(List::stream)\n-                .map(Channel::getUID).collect(Collectors.toCollection(HashSet::new));\n-        Collection<String> itemNames = items.stream().map(Item::getName).collect(Collectors.toCollection(HashSet::new));\n-\n-        itemChannelLinks.forEach(itemChannelLink -> {\n-            if (!channelUIDS.contains(itemChannelLink.getLinkedUID())) {\n-                console.println(\"Thing channel missing: \" + itemChannelLink.toString());\n-                if (action.equals(\"purge\")) {\n-                    removeChannelLink(console, itemChannelLink.getItemName(), itemChannelLink.getLinkedUID());\n-                }\n-            } else if (!itemNames.contains(itemChannelLink.getItemName())) {\n-                console.println(\"Item missing: \" + itemChannelLink.toString());\n-                if (action.equals(\"purge\")) {\n-                    removeChannelLink(console, itemChannelLink.getItemName(), itemChannelLink.getLinkedUID());\n-                }\n-            }\n-        });\n-    }\n-\n-    @Override\n-    public List<String> getUsages() {\n-        return Arrays.asList(new String[] { buildCommandUsage(SUBCMD_LIST, \"lists all links\"),\n-                buildCommandUsage(SUBCMD_CL_ADD + \" <itemName> <channelUID>\", \"links an item with a channel\"),\n-                buildCommandUsage(SUBCMD_CL_REMOVE + \" <itemName> <thingUID>\", \"unlinks an item with a channel\"),\n-                buildCommandUsage(SUBCMD_CLEAR, \"removes all managed links\"),\n-                buildCommandUsage(SUBCMD_ORPHAN, \"<list|purge> lists/purges all links with one missing element\") });\n-    }\n-\n-    private void clear(Console console) {\n-        Collection<ItemChannelLink> itemChannelLinks = itemChannelLinkRegistry.getAll();\n-        for (ItemChannelLink itemChannelLink : itemChannelLinks) {\n-            itemChannelLinkRegistry.remove(itemChannelLink.getUID());\n-        }\n-        console.println(itemChannelLinks.size() + \" links successfully removed.\");\n-    }\n-\n-    private void addChannelLink(Console console, String itemName, ChannelUID channelUID) {\n-        ItemChannelLink itemChannelLink = new ItemChannelLink(itemName, channelUID);\n-        itemChannelLinkRegistry.add(itemChannelLink);\n-        console.println(\"Link \" + itemChannelLink.toString() + \" successfully added.\");\n-    }\n-\n-    private void list(Console console, Collection<ItemChannelLink> itemChannelLinks) {\n-        for (ItemChannelLink itemChannelLink : itemChannelLinks) {\n-            console.println(itemChannelLink.toString());\n-        }\n-    }\n-\n-    private void removeChannelLink(Console console, String itemName, ChannelUID channelUID) {\n-        ItemChannelLink itemChannelLink = new ItemChannelLink(itemName, channelUID);\n-        ItemChannelLink removedItemChannelLink = itemChannelLinkRegistry.remove(itemChannelLink.getUID());\n-        if (removedItemChannelLink != null) {\n-            console.println(\"Link \" + itemChannelLink.toString() + \"successfully removed.\");\n-        } else {\n-            console.println(\"Could not remove link \" + itemChannelLink.toString() + \".\");\n-        }\n-    }\n-\n-    @Reference\n-    protected void setThingRegistry(ThingRegistry thingRegistry) {\n-        this.thingRegistry = thingRegistry;\n-    }\n-\n-    protected void unsetThingRegistry(ThingRegistry thingRegistry) {\n-        this.thingRegistry = null;\n-    }\n-\n-    @Reference\n-    protected void setItemRegistry(ItemRegistry itemRegistry) {\n-        this.itemRegistry = itemRegistry;\n-    }\n-\n-    protected void unsetItemRegistry(ItemRegistry thingRegistry) {\n-        this.itemRegistry = null;\n-    }\n-\n-    @Reference\n-    protected void setItemChannelLinkRegistry(ItemChannelLinkRegistry itemChannelLinkRegistry) {\n-        this.itemChannelLinkRegistry = itemChannelLinkRegistry;\n-    }\n-\n-    protected void unsetItemChannelLinkRegistry(ItemChannelLinkRegistry itemChannelLinkRegistry) {\n-        this.itemChannelLinkRegistry = null;\n-    }\n-\n-}\n"}}, {"oid": "775f17de8747040c457702a5e5612ed54e8c303b", "url": "https://github.com/openhab/openhab-core/commit/775f17de8747040c457702a5e5612ed54e8c303b", "message": "utility for removing orphan links\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-07-14T15:33:49Z", "type": "commit"}, {"oid": "cc3ae78cc0ab9bf4af51f20926f0dfdf3d2191f1", "url": "https://github.com/openhab/openhab-core/commit/cc3ae78cc0ab9bf4af51f20926f0dfdf3d2191f1", "message": "improvements (also check for missing channels)\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-07-14T15:34:59Z", "type": "commit"}, {"oid": "cc3ae78cc0ab9bf4af51f20926f0dfdf3d2191f1", "url": "https://github.com/openhab/openhab-core/commit/cc3ae78cc0ab9bf4af51f20926f0dfdf3d2191f1", "message": "improvements (also check for missing channels)\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-07-14T15:34:59Z", "type": "forcePushed"}, {"oid": "d4f018d2ad1e8abf0f3929aa09a65792898ff991", "url": "https://github.com/openhab/openhab-core/commit/d4f018d2ad1e8abf0f3929aa09a65792898ff991", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-07-14T15:52:43Z", "type": "commit"}]}