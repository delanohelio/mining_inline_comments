{"pr_number": 1513, "pr_title": "[automation] Moved constants to top and made them public for reference", "pr_createdAt": "2020-06-07T15:39:42Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1513", "timeline": [{"oid": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "url": "https://github.com/openhab/openhab-core/commit/031a0f527eed6f1f94c98720eccd041b4a9ad179", "message": "moved constants to top and made them public for reference\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-06-07T15:37:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjQ3MQ==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386471", "bodyText": "I think you can simplify this to:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (ruleStatus != null && ruleStatus != RuleStatus.IDLE) {\n          \n          \n            \n                        if (RuleStatus.IDLE.equals(ruleStatus)) {", "author": "cweitkamp", "createdAt": "2020-06-07T17:51:19Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java", "diffHunk": "@@ -974,7 +972,7 @@ protected void runRule(String ruleUID, TriggerHandlerCallbackImpl.TriggerData td\n         }\n         synchronized (this) {\n             final RuleStatus ruleStatus = getRuleStatus(ruleUID);\n-            if (ruleStatus != RuleStatus.IDLE) {\n+            if (ruleStatus != null && ruleStatus != RuleStatus.IDLE) {", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4OTUyMA==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436389520", "bodyText": "No, the check is whether it is NOT IDLE (and also must not be null)", "author": "kaikreuzer", "createdAt": "2020-06-07T18:29:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjQ3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM5NTMyNw==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436395327", "bodyText": "Ah, I see. I read it too quickly.", "author": "cweitkamp", "createdAt": "2020-06-07T19:42:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjQ3MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjQ5OA==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386498", "bodyText": "See above.", "author": "cweitkamp", "createdAt": "2020-06-07T17:51:30Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java", "diffHunk": "@@ -1016,7 +1014,7 @@ public void runNow(String ruleUID, boolean considerConditions, @Nullable Map<Str\n         }\n         synchronized (this) {\n             final RuleStatus ruleStatus = getRuleStatus(ruleUID);\n-            if (ruleStatus != RuleStatus.IDLE) {\n+            if (ruleStatus != null && ruleStatus != RuleStatus.IDLE) {", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjU5MA==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386590", "bodyText": "One more minor improvement: Omit the @SuppressWarnings.", "author": "cweitkamp", "createdAt": "2020-06-07T17:52:34Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java", "diffHunk": "@@ -46,19 +46,19 @@\n  */\n public class GenericEventTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber, EventFilter {\n \n+    public static final String MODULE_TYPE_ID = \"core.GenericEventTrigger\";\n+\n+    private static final String CFG_EVENT_TOPIC = \"eventTopic\";\n+    private static final String CFG_EVENT_SOURCE = \"eventSource\";\n+    private static final String CFG_EVENT_TYPES = \"eventTypes\";\n+\n     private final Logger logger = LoggerFactory.getLogger(GenericEventTriggerHandler.class);\n \n     private final String source;\n     private String topic;\n     private final Set<String> types;\n     private final BundleContext bundleContext;\n \n-    public static final String MODULE_TYPE_ID = \"core.GenericEventTrigger\";\n-\n-    private static final String CFG_EVENT_TOPIC = \"eventTopic\";\n-    private static final String CFG_EVENT_SOURCE = \"eventSource\";\n-    private static final String CFG_EVENT_TYPES = \"eventTypes\";\n-\n     @SuppressWarnings(\"rawtypes\")\n     private ServiceRegistration eventSubscriberRegistration;", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "94c0069b9dfe866dfd36cbfcd31486e8886e412f", "chunk": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java\nindex ec947a2f7..ba06cbfbf 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java\n\n@@ -59,8 +59,7 @@ public class GenericEventTriggerHandler extends BaseTriggerModuleHandler impleme\n     private final Set<String> types;\n     private final BundleContext bundleContext;\n \n-    @SuppressWarnings(\"rawtypes\")\n-    private ServiceRegistration eventSubscriberRegistration;\n+    private ServiceRegistration<?> eventSubscriberRegistration;\n \n     public GenericEventTriggerHandler(Trigger module, BundleContext bundleContext) {\n         super(module);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjYxOQ==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386619", "bodyText": "Omit.", "author": "cweitkamp", "createdAt": "2020-06-07T17:52:52Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java", "diffHunk": "@@ -50,11 +55,6 @@\n     private final Set<String> types;\n     private final BundleContext bundleContext;\n \n-    public static final String MODULE_TYPE_ID = \"core.ItemCommandTrigger\";\n-\n-    private static final String CFG_ITEMNAME = \"itemName\";\n-    private static final String CFG_COMMAND = \"command\";\n-\n     @SuppressWarnings(\"rawtypes\")", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "94c0069b9dfe866dfd36cbfcd31486e8886e412f", "chunk": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java\nindex 83ef7444d..606abec89 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java\n\n@@ -55,8 +55,7 @@ public class ItemCommandTriggerHandler extends BaseTriggerModuleHandler implemen\n     private final Set<String> types;\n     private final BundleContext bundleContext;\n \n-    @SuppressWarnings(\"rawtypes\")\n-    private ServiceRegistration eventSubscriberRegistration;\n+    private ServiceRegistration<?> eventSubscriberRegistration;\n \n     public ItemCommandTriggerHandler(Trigger module, BundleContext bundleContext) {\n         super(module);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjY0Ng==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386646", "bodyText": "Omit.", "author": "cweitkamp", "createdAt": "2020-06-07T17:53:13Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java", "diffHunk": "@@ -52,13 +60,6 @@\n     private Set<String> types;\n     private final BundleContext bundleContext;\n \n-    public static final String UPDATE_MODULE_TYPE_ID = \"core.ItemStateUpdateTrigger\";\n-    public static final String CHANGE_MODULE_TYPE_ID = \"core.ItemStateChangeTrigger\";\n-\n-    private static final String CFG_ITEMNAME = \"itemName\";\n-    private static final String CFG_STATE = \"state\";\n-    private static final String CFG_PREVIOUS_STATE = \"previousState\";\n-\n     @SuppressWarnings(\"rawtypes\")", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "94c0069b9dfe866dfd36cbfcd31486e8886e412f", "chunk": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java\nindex ca1eb8939..57d9da0a5 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java\n\n@@ -60,8 +60,7 @@ public class ItemStateTriggerHandler extends BaseTriggerModuleHandler implements\n     private Set<String> types;\n     private final BundleContext bundleContext;\n \n-    @SuppressWarnings(\"rawtypes\")\n-    private ServiceRegistration eventSubscriberRegistration;\n+    private ServiceRegistration<?> eventSubscriberRegistration;\n \n     public ItemStateTriggerHandler(Trigger module, BundleContext bundleContext) {\n         super(module);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4Njk4OQ==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386989", "bodyText": "Why is this necessary? Because the method returns a Boolean? If so should we change it to\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (isEnabled(rUID) == true) {\n          \n          \n            \n                    if (isEnabled(rUID) == Boolean.TRUE) {", "author": "cweitkamp", "createdAt": "2020-06-07T17:57:13Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java", "diffHunk": "@@ -459,7 +460,7 @@ protected void addRule(Rule newRule) {\n             unregister(oldRule);\n         }\n \n-        if (isEnabled(rUID)) {\n+        if (isEnabled(rUID) == true) {", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "94c0069b9dfe866dfd36cbfcd31486e8886e412f", "chunk": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java\nindex 158cf6f26..e876d8cc5 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java\n\n@@ -460,7 +460,7 @@ public class RuleEngineImpl implements RuleManager, RegistryChangeListener<Modul\n             unregister(oldRule);\n         }\n \n-        if (isEnabled(rUID) == true) {\n+        if (isEnabled(rUID) == Boolean.TRUE) {\n             setRule(rule);\n         }\n     }\n"}}, {"oid": "94c0069b9dfe866dfd36cbfcd31486e8886e412f", "url": "https://github.com/openhab/openhab-core/commit/94c0069b9dfe866dfd36cbfcd31486e8886e412f", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-06-07T18:32:58Z", "type": "commit"}]}