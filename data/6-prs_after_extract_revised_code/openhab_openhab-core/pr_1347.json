{"pr_number": 1347, "pr_title": "Units for reactive and apparent power", "pr_createdAt": "2020-01-30T23:20:05Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1347", "timeline": [{"oid": "341e799ed7f8559f5537e8160200999ee0ff2468", "url": "https://github.com/openhab/openhab-core/commit/341e799ed7f8559f5537e8160200999ee0ff2468", "message": "[core] units var/varh/kvar/kvarh fixed\n\n* var and varh were missing\n* var is basically an alternate form of WATT\n* kvarh was incorrectly marked as a division between kvar and hour\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-01-30T23:03:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDgwMA==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373654800", "bodyText": "I am still wondering why we need to add units with a metric prefix. Doesn't KILO(VOLT_AMPERE) in a rule or binding implementation do the job at all?\nOkay, KILOVAR and KILOVAR_HOUR where available before, e should keep them.", "author": "cweitkamp", "createdAt": "2020-01-31T19:46:55Z", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "diffHunk": "@@ -122,9 +122,16 @@\n     public static final Unit<Energy> WATT_HOUR = addUnit(new ProductUnit<>(Units.WATT.multiply(Units.HOUR)));\n     public static final Unit<Energy> KILOWATT_HOUR = addUnit(MetricPrefix.KILO(WATT_HOUR));\n     public static final Unit<Energy> MEGAWATT_HOUR = addUnit(MetricPrefix.MEGA(WATT_HOUR));\n-    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(new BaseUnit<Power>(\"var\")));\n-    public static final Unit<Energy> KILOVAR_HOUR = addUnit(new ProductUnit<>(KILOVAR.divide(Units.HOUR)),\n+    public static final Unit<Power> VAR = addUnit(new AlternateUnit<Power>(Units.WATT, \"var\"));\n+    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(VAR));\n+    public static final Unit<Energy> VAR_HOUR = addUnit(new ProductUnit<>(VAR.multiply(Units.HOUR)),\n             Energy.class);\n+    public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n+    public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n+    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));", "originalCommit": "502798a4b7afd976ce61318e23b193afe961683d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3MzIwMA==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373673200", "bodyText": "Here I did not want to break any already existing bundles, so I've kept them here.", "author": "mrbig", "createdAt": "2020-01-31T20:33:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDgwMA=="}], "type": "inlineReview", "revised_code": {"commit": "b54babe9294cb80ac8f914a8873bcb79773a05fb", "chunk": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java\nindex eb321dc64..bc4bed042 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java\n\n@@ -128,10 +128,8 @@ public final class SmartHomeUnits extends CustomUnits {\n             Energy.class);\n     public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n     public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n-    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));\n     public static final Unit<Energy> VOLT_AMPERE_HOUR = addUnit(new ProductUnit<>(VOLT_AMPERE.multiply(Units.HOUR)),\n             Energy.class);\n-    public static final Unit<Energy> KILOVOLT_AMPERE_HOUR = addUnit(MetricPrefix.KILO(VOLT_AMPERE_HOUR));\n     public static final Unit<Force> NEWTON = addUnit(Units.NEWTON);\n     public static final Unit<Frequency> HERTZ = addUnit(Units.HERTZ);\n     public static final Unit<Intensity> IRRADIANCE = addUnit(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDg0OA==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373654848", "bodyText": "see above", "author": "cweitkamp", "createdAt": "2020-01-31T19:47:01Z", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "diffHunk": "@@ -122,9 +122,16 @@\n     public static final Unit<Energy> WATT_HOUR = addUnit(new ProductUnit<>(Units.WATT.multiply(Units.HOUR)));\n     public static final Unit<Energy> KILOWATT_HOUR = addUnit(MetricPrefix.KILO(WATT_HOUR));\n     public static final Unit<Energy> MEGAWATT_HOUR = addUnit(MetricPrefix.MEGA(WATT_HOUR));\n-    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(new BaseUnit<Power>(\"var\")));\n-    public static final Unit<Energy> KILOVAR_HOUR = addUnit(new ProductUnit<>(KILOVAR.divide(Units.HOUR)),\n+    public static final Unit<Power> VAR = addUnit(new AlternateUnit<Power>(Units.WATT, \"var\"));\n+    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(VAR));\n+    public static final Unit<Energy> VAR_HOUR = addUnit(new ProductUnit<>(VAR.multiply(Units.HOUR)),\n             Energy.class);\n+    public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n+    public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n+    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));\n+    public static final Unit<Energy> VOLT_AMPERE_HOUR = addUnit(new ProductUnit<>(VOLT_AMPERE.multiply(Units.HOUR)),\n+            Energy.class);\n+    public static final Unit<Energy> KILOVOLT_AMPERE_HOUR = addUnit(MetricPrefix.KILO(VOLT_AMPERE_HOUR));", "originalCommit": "502798a4b7afd976ce61318e23b193afe961683d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3NzI5NA==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373677294", "bodyText": "I will remove the kilo, I'm absolutely fine with that.", "author": "mrbig", "createdAt": "2020-01-31T20:44:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MjUwMQ==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373682501", "bodyText": "removed.", "author": "mrbig", "createdAt": "2020-01-31T20:58:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDg0OA=="}], "type": "inlineReview", "revised_code": {"commit": "b54babe9294cb80ac8f914a8873bcb79773a05fb", "chunk": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java\nindex eb321dc64..bc4bed042 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java\n\n@@ -128,10 +128,8 @@ public final class SmartHomeUnits extends CustomUnits {\n             Energy.class);\n     public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n     public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n-    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));\n     public static final Unit<Energy> VOLT_AMPERE_HOUR = addUnit(new ProductUnit<>(VOLT_AMPERE.multiply(Units.HOUR)),\n             Energy.class);\n-    public static final Unit<Energy> KILOVOLT_AMPERE_HOUR = addUnit(MetricPrefix.KILO(VOLT_AMPERE_HOUR));\n     public static final Unit<Force> NEWTON = addUnit(Units.NEWTON);\n     public static final Unit<Frequency> HERTZ = addUnit(Units.HERTZ);\n     public static final Unit<Intensity> IRRADIANCE = addUnit(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373655626", "bodyText": "Can you align the unit test to the others? One assertion for getSymbol() and one assertion for toString() for each unit.\n        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n        assertThat(SmartHomeUnits.VAR.toString(), is(\"var\"));\n        assertThat(SmartHomeUnits.VAR_HOUR.getSymbol(), is(\"varh\"));\n        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));\n\nAdditionally dose it make sense to add a test for the comparison to other units of the dimension power (e.g. (1 var = 1 W)?", "author": "cweitkamp", "createdAt": "2020-01-31T19:48:47Z", "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "originalCommit": "502798a4b7afd976ce61318e23b193afe961683d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MTMwNg==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373681306", "bodyText": "There is a problem with this check:\nassertThat(SmartHomeUnits.VAR_HOUR.getSymbol(), is(\"varh\"));\nNamely, that ProductUnit does not calculate the symbol propert when there are multiple units. I'm not sure why is it so, but there's a fixme in the sourcecode: https://github.com/unitsofmeasurement/uom-se/blob/master/src/main/java/tec/uom/se/unit/ProductUnit.java#L111\n\nAdditionally dose it make sense to add a test for the comparison to other units of the dimension power (e.g. (1 var = 1 W)?\n\nI'm uncertain about that. Wikipedia says: \"The volt-ampere is dimensionally equivalent to the watt (in SI units, 1 VA = 1 N m A-1 s -1 A = 1 N m s -1 = 1 J s -1 = 1 W).\" But as I understand there's no such thing that we convert from var to watts because you will measure different things in W/VA/var. See: https://en.wikipedia.org/wiki/Volt-ampere\nHow should such a test look like in your opinion?", "author": "mrbig", "createdAt": "2020-01-31T20:55:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MzAzNA==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373683034", "bodyText": "note: I've pushed a version where I've entered the getSymbol() checks, but commented them out, because they now break the tests.", "author": "mrbig", "createdAt": "2020-01-31T21:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2NzAyNw==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373767027", "bodyText": "ProductUnit does not calculate the symbol\n\nWe can open an issue in https://github.com/unitsofmeasurement/uom-se/issues and ask them to fix it \ud83d\ude09.\n\nHow should such a test look like in your opinion?\n\nI did my research on German Wikipedia. I have the feeling there is a mistake about the formular on it compared to your link. Thus it does not make sense to introduce further tests.", "author": "cweitkamp", "createdAt": "2020-02-01T08:41:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2ODc4MA==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373768780", "bodyText": "ProductUnit does not calculate the symbol\n\nWe can open an issue in https://github.com/unitsofmeasurement/uom-se/issues and ask them to fix it .\n\nDid some research and it looks like the do not have the intention to fix this: unitsofmeasurement/uom-se#184\nThe preferred way is to use the toString() unless dealing with a specific BaseUnit.", "author": "mrbig", "createdAt": "2020-02-01T09:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3MDQ5NA==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373770494", "bodyText": "As I understand now the symbol property means that a unit has a symbol directly attached to it. For derived units this should be null, and toString should implement the display of the derived symbol.\nThe test complying with this convertion should look like this:\nassertNull(SmartHomeUnits.VAR_HOUR.getSymbol());\n@cweitkamp  please let me know if you would like me to change the tests this way.", "author": "mrbig", "createdAt": "2020-02-01T09:50:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3NDQyMg==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373774422", "bodyText": "Okay, I see. Thanks for the research. We should keep the toString() tests and omit the getSymbol() tests for those units.", "author": "cweitkamp", "createdAt": "2020-02-01T11:15:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3Nzg3Ng==", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373777876", "bodyText": "Thank you, updated the code.", "author": "mrbig", "createdAt": "2020-02-01T12:36:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}], "type": "inlineReview", "revised_code": {"commit": "b54babe9294cb80ac8f914a8873bcb79773a05fb", "chunk": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java\nindex 219bcc58a..33f5e2fd2 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java\n\n@@ -172,12 +172,16 @@ public class SmartHomeUnitsTest {\n     @Test\n     public void testVarUnitSymbol() {\n         assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR.toString(), is(\"var\"));\n+        //assertThat(SmartHomeUnits.VAR_HOUR.getSymbol(), is(\"var\")); // Not supported by ProductUnit\n         assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));\n     }\n     \n     @Test\n     public void testKVarUnitSymbol() {\n+        //assertThat(SmartHomeUnits.KILOVAR.getSymbol(), is(\"kvar\")); // Not supported by ProductUnit\n         assertThat(SmartHomeUnits.KILOVAR.toString(), is(\"kvar\"));\n+        //assertThat(SmartHomeUnits.KILOVAR_HOUR.getSymbol(), is(\"kvarh\")); // Not supported by ProductUnit\n         assertThat(SmartHomeUnits.KILOVAR_HOUR.toString(), is(\"kvarh\"));\n     }\n     \n"}}, {"oid": "b54babe9294cb80ac8f914a8873bcb79773a05fb", "url": "https://github.com/openhab/openhab-core/commit/b54babe9294cb80ac8f914a8873bcb79773a05fb", "message": "[core] Volt-Ampere added to the units\n\nThis unit for apparent power in an electrical circuit. Useful for smart meters\nand solar inverters.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-01-31T20:58:20Z", "type": "forcePushed"}, {"oid": "4ba0c29118e53e7b23bf75e8fa827020b0270dc8", "url": "https://github.com/openhab/openhab-core/commit/4ba0c29118e53e7b23bf75e8fa827020b0270dc8", "message": "[core] Volt-Ampere added to the units\n\nThis unit for apparent power in an electrical circuit. Useful for smart meters\nand solar inverters.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-02-01T12:35:50Z", "type": "commit"}, {"oid": "4ba0c29118e53e7b23bf75e8fa827020b0270dc8", "url": "https://github.com/openhab/openhab-core/commit/4ba0c29118e53e7b23bf75e8fa827020b0270dc8", "message": "[core] Volt-Ampere added to the units\n\nThis unit for apparent power in an electrical circuit. Useful for smart meters\nand solar inverters.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>", "committedDate": "2020-02-01T12:35:50Z", "type": "forcePushed"}]}