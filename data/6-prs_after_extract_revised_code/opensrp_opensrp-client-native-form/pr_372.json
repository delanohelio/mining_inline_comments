{"pr_number": 372, "pr_title": "Allow selecting of parent level", "pr_createdAt": "2020-02-26T15:10:58Z", "pr_url": "https://github.com/opensrp/opensrp-client-native-form/pull/372", "timeline": [{"oid": "281cdc07ab49d8a34bc6bd16c6dd074f40a59da1", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/281cdc07ab49d8a34bc6bd16c6dd074f40a59da1", "message": "allow selecting of parent level", "committedDate": "2020-02-17T10:41:07Z", "type": "commit"}, {"oid": "a1149084a24eff70d8cb8737c288cd7c55fcc893", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/a1149084a24eff70d8cb8737c288cd7c55fcc893", "message": "update set value method", "committedDate": "2020-02-26T15:18:03Z", "type": "commit"}, {"oid": "cb21328dda15af33de13ebc2b76017c6cbcfd1b6", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/cb21328dda15af33de13ebc2b76017c6cbcfd1b6", "message": "Merge branch 'master' of github.com:OpenSRP/opensrp-client-native-form into kigamba-allow-selecting-of-parent", "committedDate": "2020-03-06T12:59:07Z", "type": "commit"}, {"oid": "5761ccbb3014269a3be27a4511e66721f09c18ff", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/5761ccbb3014269a3be27a4511e66721f09c18ff", "message": "made shouldExpandAllNodes not static", "committedDate": "2020-03-06T13:01:44Z", "type": "commit"}, {"oid": "09338741d40e131b29ae0cd6fbe404b90a8ec615", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/09338741d40e131b29ae0cd6fbe404b90a8ec615", "message": "update snapshot version", "committedDate": "2020-03-06T13:06:51Z", "type": "commit"}, {"oid": "d35ff30bfa67cf79753e542be83cf4b5a2bccf7d", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/d35ff30bfa67cf79753e542be83cf4b5a2bccf7d", "message": "add tests for buildRulesWithUniqueId", "committedDate": "2020-03-06T13:52:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MDE0MA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/372#discussion_r391060140", "bodyText": "Move this to colors.xml", "author": "dubdabasoduba", "createdAt": "2020-03-11T15:33:34Z", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java", "diffHunk": "@@ -47,15 +47,15 @@\n \n public class AttachRepeatingGroupTask extends AsyncTask<Void, Void, List<View>> {\n \n-    private LinearLayout rootLayout;\n+    protected final int REPEATING_GROUP_LABEL_TEXT_COLOR = R.color.black;", "originalCommit": "d35ff30bfa67cf79753e542be83cf4b5a2bccf7d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "727e24906746f9f15a59e3e19b66504fec0d4e42", "chunk": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java\nindex 0d5f70f2..cd6402d1 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java\n\n@@ -47,7 +47,6 @@ import static com.vijay.jsonwizard.utils.Utils.showProgressDialog;\n \n public class AttachRepeatingGroupTask extends AsyncTask<Void, Void, List<View>> {\n \n-    protected final int REPEATING_GROUP_LABEL_TEXT_COLOR = R.color.black;\n     private final ViewParent parent;\n     private final ViewGroup.LayoutParams WIDTH_MATCH_PARENT_HEIGHT_WRAP_CONTENT = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n     private LinearLayout rootLayout;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MDI3Nw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/372#discussion_r391060277", "bodyText": "Use timber", "author": "dubdabasoduba", "createdAt": "2020-03-11T15:33:45Z", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java", "diffHunk": "@@ -131,7 +131,7 @@ protected void onPostExecute(List<View> result) {\n \n         try {\n             ((JsonApi) widgetArgs.getContext()).invokeRefreshLogic(null, false, null, null);\n-        } catch (Exception e){\n+        } catch (Exception e) {\n             e.printStackTrace();", "originalCommit": "d35ff30bfa67cf79753e542be83cf4b5a2bccf7d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "727e24906746f9f15a59e3e19b66504fec0d4e42", "chunk": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java\nindex 0d5f70f2..cd6402d1 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java\n\n@@ -132,7 +131,7 @@ public class AttachRepeatingGroupTask extends AsyncTask<Void, Void, List<View>>\n         try {\n             ((JsonApi) widgetArgs.getContext()).invokeRefreshLogic(null, false, null, null);\n         } catch (Exception e) {\n-            e.printStackTrace();\n+            Timber.e(e);\n         }\n         hideProgressDialog();\n         doneButton.setImageResource(R.drawable.ic_done_green);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MjcwNw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/372#discussion_r391062707", "bodyText": "Use better variable names", "author": "dubdabasoduba", "createdAt": "2020-03-11T15:36:56Z", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java", "diffHunk": "@@ -285,6 +284,143 @@ public static void resetRadioButtonsSpecifyText(RadioButton button) throws JSONE\n \n     }\n \n+    @NonNull\n+    private static String cleanToken(String conditionTokenRaw) {\n+        String conditionToken = conditionTokenRaw.trim();\n+\n+        for (int i = 0; i < conditionToken.length(); i++) {\n+            if (JAVA_OPERATORS.contains(conditionToken.charAt(i))) {\n+                if (i == 0) {\n+                    conditionToken = cleanToken(conditionToken.substring(1));\n+                } else {\n+                    conditionToken = conditionToken.substring(0, conditionToken.indexOf(conditionToken.charAt(i)));\n+                    break;\n+                }\n+            }\n+        }\n+\n+        return conditionToken;\n+    }\n+\n+    public static List<String> getConditionKeys(String condition) {\n+        String cleanString = cleanConditionString(condition);\n+        String[] conditionTokens = cleanString.split(\" \");\n+        Map<String, Boolean> conditionKeys = new HashMap<>();\n+\n+        for (String token : conditionTokens) {\n+            if (token.contains(RuleConstant.STEP) || token.contains(RuleConstant.PREFIX.GLOBAL)) {\n+                String conditionToken = cleanToken(token);\n+                conditionKeys.put(conditionToken, true);\n+            }\n+        }\n+\n+        return new ArrayList<>(conditionKeys.keySet());\n+    }\n+\n+    private static String cleanConditionString(String conditionStringRaw) {\n+        String conditionString = conditionStringRaw;\n+\n+        for (String token : PREFICES_OF_INTEREST) {\n+\n+            conditionString = conditionString.replaceAll(token, \" \" + token);\n+        }\n+\n+        return conditionString.replaceAll(\"  \", \" \");\n+    }\n+\n+    public static Iterable<Object> readYamlFile(String fileName, Context context) {\n+        Yaml yaml = new Yaml();\n+        InputStreamReader inputStreamReader;\n+        Iterable<Object> objectIterable = null;\n+        try {\n+            inputStreamReader = new InputStreamReader(context.getAssets().open(fileName));\n+            objectIterable = yaml.loadAll(inputStreamReader);\n+        } catch (IOException e) {\n+            Timber.e(e);\n+        }\n+\n+        return objectIterable;\n+    }\n+\n+    public static void buildRulesWithUniqueId(JSONObject element, String uniqueId, String ruleType, Context context, Map<String, List<Map<String, Object>>> rulesFileMap) throws JSONException {\n+        JSONObject rules = element.optJSONObject(ruleType);\n+        if (rules != null) {\n+            if (rules.has(RuleConstant.RULES_ENGINE) && context != null) {\n+                JSONObject jsonRulesEngineObject = rules.optJSONObject(RuleConstant.RULES_ENGINE);\n+                JSONObject jsonExRules = jsonRulesEngineObject.optJSONObject(JsonFormConstants.JSON_FORM_KEY.EX_RULES);\n+                String fileName = JsonFormConstants.RULE + jsonExRules.optString(RuleConstant.RULES_DYNAMIC);\n+\n+                if (!rulesFileMap.containsKey(fileName)) {\n+                    Iterable<Object> objectIterable = readYamlFile(fileName, context);\n+                    List<Map<String, Object>> arrayList = new ArrayList<>();\n+                    while (objectIterable.iterator().hasNext()) {\n+                        Map<String, Object> map = (Map<String, Object>) objectIterable.iterator().next();\n+                        if (map != null) {\n+                            arrayList.add(map);\n+                        }\n+                    }\n+                    rulesFileMap.put(fileName, arrayList);\n+                }\n+\n+                List<Map<String, Object>> mapArrayList = rulesFileMap.get(fileName);\n+\n+                JSONArray jsonArrayRules = new JSONArray();\n+                JSONObject keyJsonObject = new JSONObject();\n+                keyJsonObject.put(KEY, uniqueId);\n+                jsonArrayRules.put(keyJsonObject);\n+                for (Map<String, Object> map : mapArrayList) {\n+                    JSONObject jsonRulesDynamicObject = new JSONObject();\n+                    String strCondition = (String) map.get(RuleConstant.CONDITION);\n+                    List<String> conditionKeys = getConditionKeys(strCondition);\n+                    for (String conditionKey : conditionKeys) {\n+                        strCondition = strCondition.replace(conditionKey, conditionKey + \"_\" + uniqueId);\n+                    }\n+                    jsonRulesDynamicObject.put(RuleConstant.NAME, String.valueOf(map.get(RuleConstant.NAME)).concat(\"_\").concat(uniqueId));\n+                    jsonRulesDynamicObject.put(RuleConstant.DESCRIPTION, String.valueOf(map.get(RuleConstant.DESCRIPTION)).concat(\"_\").concat(uniqueId));\n+                    jsonRulesDynamicObject.put(RuleConstant.PRIORITY, map.get(RuleConstant.PRIORITY));\n+                    jsonRulesDynamicObject.put(RuleConstant.ACTIONS, ((ArrayList<String>) map.get(RuleConstant.ACTIONS)).get(0));\n+                    jsonRulesDynamicObject.put(RuleConstant.CONDITION, String.valueOf(strCondition));\n+                    jsonArrayRules.put(jsonRulesDynamicObject);\n+                }\n+\n+                jsonExRules.put(RuleConstant.RULES_DYNAMIC, jsonArrayRules);\n+\n+            } else {\n+                String currKey = rules.keys().next();\n+                JSONObject rulesObj = rules.getJSONObject(currKey);\n+                String newKey = currKey + \"_\" + uniqueId;\n+                rules.remove(currKey);\n+                rules.put(newKey, rulesObj);\n+            }\n+        }\n+\n+    }\n+\n+    public static NativeFormsProperties getProperties(Context context) {\n+        NativeFormsProperties properties = new NativeFormsProperties();\n+\n+        try {\n+            AssetManager assetManager = context.getAssets();\n+            InputStream inputStream = assetManager.open(\"app.properties\");\n+            properties.load(inputStream);\n+        } catch (Exception var4) {\n+            Timber.e(var4);", "originalCommit": "d35ff30bfa67cf79753e542be83cf4b5a2bccf7d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "727e24906746f9f15a59e3e19b66504fec0d4e42", "chunk": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\nindex 8d1d38a6..25b0ac2d 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\n\n@@ -401,10 +401,10 @@ public class Utils {\n \n         try {\n             AssetManager assetManager = context.getAssets();\n-            InputStream inputStream = assetManager.open(\"app.properties\");\n+            InputStream inputStream = assetManager.open(JsonFormConstants.APP_PROPERTIES_FILE);\n             properties.load(inputStream);\n-        } catch (Exception var4) {\n-            Timber.e(var4);\n+        } catch (Exception exception) {\n+            Timber.e(exception);\n         }\n \n         return properties;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2NTEzNA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/372#discussion_r391065134", "bodyText": "Move app.properties to a constant file", "author": "dubdabasoduba", "createdAt": "2020-03-11T15:40:15Z", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java", "diffHunk": "@@ -285,6 +284,143 @@ public static void resetRadioButtonsSpecifyText(RadioButton button) throws JSONE\n \n     }\n \n+    @NonNull\n+    private static String cleanToken(String conditionTokenRaw) {\n+        String conditionToken = conditionTokenRaw.trim();\n+\n+        for (int i = 0; i < conditionToken.length(); i++) {\n+            if (JAVA_OPERATORS.contains(conditionToken.charAt(i))) {\n+                if (i == 0) {\n+                    conditionToken = cleanToken(conditionToken.substring(1));\n+                } else {\n+                    conditionToken = conditionToken.substring(0, conditionToken.indexOf(conditionToken.charAt(i)));\n+                    break;\n+                }\n+            }\n+        }\n+\n+        return conditionToken;\n+    }\n+\n+    public static List<String> getConditionKeys(String condition) {\n+        String cleanString = cleanConditionString(condition);\n+        String[] conditionTokens = cleanString.split(\" \");\n+        Map<String, Boolean> conditionKeys = new HashMap<>();\n+\n+        for (String token : conditionTokens) {\n+            if (token.contains(RuleConstant.STEP) || token.contains(RuleConstant.PREFIX.GLOBAL)) {\n+                String conditionToken = cleanToken(token);\n+                conditionKeys.put(conditionToken, true);\n+            }\n+        }\n+\n+        return new ArrayList<>(conditionKeys.keySet());\n+    }\n+\n+    private static String cleanConditionString(String conditionStringRaw) {\n+        String conditionString = conditionStringRaw;\n+\n+        for (String token : PREFICES_OF_INTEREST) {\n+\n+            conditionString = conditionString.replaceAll(token, \" \" + token);\n+        }\n+\n+        return conditionString.replaceAll(\"  \", \" \");\n+    }\n+\n+    public static Iterable<Object> readYamlFile(String fileName, Context context) {\n+        Yaml yaml = new Yaml();\n+        InputStreamReader inputStreamReader;\n+        Iterable<Object> objectIterable = null;\n+        try {\n+            inputStreamReader = new InputStreamReader(context.getAssets().open(fileName));\n+            objectIterable = yaml.loadAll(inputStreamReader);\n+        } catch (IOException e) {\n+            Timber.e(e);\n+        }\n+\n+        return objectIterable;\n+    }\n+\n+    public static void buildRulesWithUniqueId(JSONObject element, String uniqueId, String ruleType, Context context, Map<String, List<Map<String, Object>>> rulesFileMap) throws JSONException {\n+        JSONObject rules = element.optJSONObject(ruleType);\n+        if (rules != null) {\n+            if (rules.has(RuleConstant.RULES_ENGINE) && context != null) {\n+                JSONObject jsonRulesEngineObject = rules.optJSONObject(RuleConstant.RULES_ENGINE);\n+                JSONObject jsonExRules = jsonRulesEngineObject.optJSONObject(JsonFormConstants.JSON_FORM_KEY.EX_RULES);\n+                String fileName = JsonFormConstants.RULE + jsonExRules.optString(RuleConstant.RULES_DYNAMIC);\n+\n+                if (!rulesFileMap.containsKey(fileName)) {\n+                    Iterable<Object> objectIterable = readYamlFile(fileName, context);\n+                    List<Map<String, Object>> arrayList = new ArrayList<>();\n+                    while (objectIterable.iterator().hasNext()) {\n+                        Map<String, Object> map = (Map<String, Object>) objectIterable.iterator().next();\n+                        if (map != null) {\n+                            arrayList.add(map);\n+                        }\n+                    }\n+                    rulesFileMap.put(fileName, arrayList);\n+                }\n+\n+                List<Map<String, Object>> mapArrayList = rulesFileMap.get(fileName);\n+\n+                JSONArray jsonArrayRules = new JSONArray();\n+                JSONObject keyJsonObject = new JSONObject();\n+                keyJsonObject.put(KEY, uniqueId);\n+                jsonArrayRules.put(keyJsonObject);\n+                for (Map<String, Object> map : mapArrayList) {\n+                    JSONObject jsonRulesDynamicObject = new JSONObject();\n+                    String strCondition = (String) map.get(RuleConstant.CONDITION);\n+                    List<String> conditionKeys = getConditionKeys(strCondition);\n+                    for (String conditionKey : conditionKeys) {\n+                        strCondition = strCondition.replace(conditionKey, conditionKey + \"_\" + uniqueId);\n+                    }\n+                    jsonRulesDynamicObject.put(RuleConstant.NAME, String.valueOf(map.get(RuleConstant.NAME)).concat(\"_\").concat(uniqueId));\n+                    jsonRulesDynamicObject.put(RuleConstant.DESCRIPTION, String.valueOf(map.get(RuleConstant.DESCRIPTION)).concat(\"_\").concat(uniqueId));\n+                    jsonRulesDynamicObject.put(RuleConstant.PRIORITY, map.get(RuleConstant.PRIORITY));\n+                    jsonRulesDynamicObject.put(RuleConstant.ACTIONS, ((ArrayList<String>) map.get(RuleConstant.ACTIONS)).get(0));\n+                    jsonRulesDynamicObject.put(RuleConstant.CONDITION, String.valueOf(strCondition));\n+                    jsonArrayRules.put(jsonRulesDynamicObject);\n+                }\n+\n+                jsonExRules.put(RuleConstant.RULES_DYNAMIC, jsonArrayRules);\n+\n+            } else {\n+                String currKey = rules.keys().next();\n+                JSONObject rulesObj = rules.getJSONObject(currKey);\n+                String newKey = currKey + \"_\" + uniqueId;\n+                rules.remove(currKey);\n+                rules.put(newKey, rulesObj);\n+            }\n+        }\n+\n+    }\n+\n+    public static NativeFormsProperties getProperties(Context context) {\n+        NativeFormsProperties properties = new NativeFormsProperties();\n+\n+        try {\n+            AssetManager assetManager = context.getAssets();\n+            InputStream inputStream = assetManager.open(\"app.properties\");", "originalCommit": "d35ff30bfa67cf79753e542be83cf4b5a2bccf7d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "727e24906746f9f15a59e3e19b66504fec0d4e42", "chunk": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\nindex 8d1d38a6..25b0ac2d 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\n\n@@ -401,10 +401,10 @@ public class Utils {\n \n         try {\n             AssetManager assetManager = context.getAssets();\n-            InputStream inputStream = assetManager.open(\"app.properties\");\n+            InputStream inputStream = assetManager.open(JsonFormConstants.APP_PROPERTIES_FILE);\n             properties.load(inputStream);\n-        } catch (Exception var4) {\n-            Timber.e(var4);\n+        } catch (Exception exception) {\n+            Timber.e(exception);\n         }\n \n         return properties;\n"}}, {"oid": "ad24963191511e971366e576984e1883df06cf4b", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/ad24963191511e971366e576984e1883df06cf4b", "message": "Merge branch 'master' of github.com:OpenSRP/opensrp-client-native-form into kigamba-allow-selecting-of-parent", "committedDate": "2020-03-12T09:46:52Z", "type": "commit"}, {"oid": "727e24906746f9f15a59e3e19b66504fec0d4e42", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/727e24906746f9f15a59e3e19b66504fec0d4e42", "message": "code cleanup", "committedDate": "2020-03-12T10:03:20Z", "type": "commit"}, {"oid": "bbb35b179691cc28b68838212d3f095060a520f8", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/bbb35b179691cc28b68838212d3f095060a520f8", "message": "bump up version", "committedDate": "2020-03-18T13:44:49Z", "type": "commit"}, {"oid": "7579dfe636627c01b5ac72631d98e072da8624f8", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/7579dfe636627c01b5ac72631d98e072da8624f8", "message": "Merge branch 'master' of github.com:OpenSRP/opensrp-client-native-form into kigamba-allow-selecting-of-parent", "committedDate": "2020-03-18T13:47:44Z", "type": "commit"}, {"oid": "80fa0a1b447c5d83d7d076f2d7809851cb3e66eb", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/80fa0a1b447c5d83d7d076f2d7809851cb3e66eb", "message": "fix merge conflict", "committedDate": "2020-03-18T13:48:01Z", "type": "commit"}, {"oid": "6120ac6fb947e06d1192446c83df6dee4b63e32e", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/6120ac6fb947e06d1192446c83df6dee4b63e32e", "message": "Merge branch 'master' of github.com:OpenSRP/opensrp-client-native-form into kigamba-allow-selecting-of-parent", "committedDate": "2020-03-30T11:43:44Z", "type": "commit"}, {"oid": "8ac2843cb3a428116582fed822ace45af6bca416", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/8ac2843cb3a428116582fed822ace45af6bca416", "message": "add tests", "committedDate": "2020-03-30T12:26:06Z", "type": "commit"}, {"oid": "c55a1d751ef38c8cc64e97d59d06984d43f2ff28", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/c55a1d751ef38c8cc64e97d59d06984d43f2ff28", "message": "Merge branch 'master' into kigamba-allow-selecting-of-parent", "committedDate": "2020-03-30T12:29:04Z", "type": "commit"}, {"oid": "4a9fd5450bfb5a5668533d71d723fbb2e0b829bc", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/4a9fd5450bfb5a5668533d71d723fbb2e0b829bc", "message": "Merge branch 'master' into kigamba-allow-selecting-of-parent", "committedDate": "2020-04-07T07:15:13Z", "type": "commit"}]}