{"pr_number": 380, "pr_title": "Rule engine factory test", "pr_createdAt": "2020-03-10T08:09:56Z", "pr_url": "https://github.com/opensrp/opensrp-client-native-form/pull/380", "timeline": [{"oid": "d6bf2292348278dd697a2f728f02932c0acca5cb", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/d6bf2292348278dd697a2f728f02932c0acca5cb", "message": "code cleanup", "committedDate": "2020-03-10T08:19:26Z", "type": "commit"}, {"oid": "d6bf2292348278dd697a2f728f02932c0acca5cb", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/d6bf2292348278dd697a2f728f02932c0acca5cb", "message": "code cleanup", "committedDate": "2020-03-10T08:19:26Z", "type": "forcePushed"}, {"oid": "457084bb0f9a68e4514538e52721595ac2ae832b", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/457084bb0f9a68e4514538e52721595ac2ae832b", "message": "add tests for multiselectUtils", "committedDate": "2020-03-10T08:47:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI1Njk4Mw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/380#discussion_r390256983", "bodyText": "User timber.", "author": "dubdabasoduba", "createdAt": "2020-03-10T11:43:31Z", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.vijay.jsonwizard.rules;\n+\n+import android.content.Context;\n+\n+import org.jeasy.rules.api.Rule;\n+import org.jeasy.rules.api.Rules;\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.powermock.reflect.internal.WhiteboxImpl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class RulesEngineFactoryTest {\n+\n+    private RulesEngineFactory rulesEngineFactory;\n+\n+    @Before\n+    public void setUp() {\n+        rulesEngineFactory = new RulesEngineFactory();\n+    }\n+\n+    @Test\n+    public void testGetDynamicRulesFromJsonArrayShouldReturnNonEmptyRulesList() throws Exception {\n+        String expected = \"[\" +\n+                \"{\\\"key\\\":\\\"c29afdf9843e4c909a793dafd70e045b\\\"},\" +\n+                \"{\" +\n+                \"\\\"condition\\\":\\\"step1_diagnostic_test_c29afdf9843e4c909a793dafd70e045b == 'Pregnancy Test'\\\",\" +\n+                \"\\\"name\\\":\\\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"description\\\":\\\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"priority\\\":1,\" +\n+                \"\\\"actions\\\":\\\"isRelevant = true\\\"\" +\n+                \"}\" +\n+                \"]\";\n+        try {\n+            JSONArray jsonArray = new JSONArray(expected);\n+            rulesEngineFactory = new RulesEngineFactory(Mockito.mock(Context.class), new HashMap<String, String>());\n+            Map<String, Rules> ruleMap = new HashMap<>();\n+            WhiteboxImpl.setInternalState(rulesEngineFactory, \"ruleMap\", ruleMap);\n+            Rules result = WhiteboxImpl.invokeMethod(rulesEngineFactory, \"getDynamicRulesFromJsonArray\", jsonArray);\n+            Rule ruleObject = result.iterator().next();\n+            Assert.assertEquals(\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\", ruleObject.getName());\n+            Assert.assertEquals(\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\", ruleObject.getDescription());\n+            Assert.assertEquals(1, ruleObject.getPriority());\n+        } catch (JSONException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    @Test\n+    public void testGetDynamicRulesFromJsonArrayShouldReturnNullIfKeyElementIsMissing() throws Exception {\n+        String expected = \"[\" +\n+                \"{\" +\n+                \"\\\"condition\\\":\\\"step1_diagnostic_test_c29afdf9843e4c909a793dafd70e045b == 'Pregnancy Test'\\\",\" +\n+                \"\\\"name\\\":\\\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"description\\\":\\\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"priority\\\":1,\" +\n+                \"\\\"actions\\\":\\\"isRelevant = true\\\"\" +\n+                \"}\" +\n+                \"]\";\n+        try {\n+            JSONArray jsonArray = new JSONArray(expected);\n+            rulesEngineFactory = new RulesEngineFactory();\n+            Map<String, Rules> ruleMap = new HashMap<>();\n+            WhiteboxImpl.setInternalState(rulesEngineFactory, \"ruleMap\", ruleMap);\n+            Rules result = WhiteboxImpl.invokeMethod(rulesEngineFactory, \"getDynamicRulesFromJsonArray\", jsonArray);\n+            Assert.assertNull(result);\n+        } catch (JSONException e) {\n+            e.printStackTrace();", "originalCommit": "457084bb0f9a68e4514538e52721595ac2ae832b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9eb344d5faabd935af05a36f395e7558808ce772", "chunk": "diff --git a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java\nindex fc66b592..1c23b9bf 100644\n--- a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java\n+++ b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java\n\n@@ -18,6 +18,8 @@ import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.Map;\n \n+import timber.log.Timber;\n+\n @RunWith(MockitoJUnitRunner.class)\n public class RulesEngineFactoryTest {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI1NzA3NA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/380#discussion_r390257074", "bodyText": "use timber", "author": "dubdabasoduba", "createdAt": "2020-03-10T11:43:43Z", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.vijay.jsonwizard.rules;\n+\n+import android.content.Context;\n+\n+import org.jeasy.rules.api.Rule;\n+import org.jeasy.rules.api.Rules;\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.powermock.reflect.internal.WhiteboxImpl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class RulesEngineFactoryTest {\n+\n+    private RulesEngineFactory rulesEngineFactory;\n+\n+    @Before\n+    public void setUp() {\n+        rulesEngineFactory = new RulesEngineFactory();\n+    }\n+\n+    @Test\n+    public void testGetDynamicRulesFromJsonArrayShouldReturnNonEmptyRulesList() throws Exception {\n+        String expected = \"[\" +\n+                \"{\\\"key\\\":\\\"c29afdf9843e4c909a793dafd70e045b\\\"},\" +\n+                \"{\" +\n+                \"\\\"condition\\\":\\\"step1_diagnostic_test_c29afdf9843e4c909a793dafd70e045b == 'Pregnancy Test'\\\",\" +\n+                \"\\\"name\\\":\\\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"description\\\":\\\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"priority\\\":1,\" +\n+                \"\\\"actions\\\":\\\"isRelevant = true\\\"\" +\n+                \"}\" +\n+                \"]\";\n+        try {\n+            JSONArray jsonArray = new JSONArray(expected);\n+            rulesEngineFactory = new RulesEngineFactory(Mockito.mock(Context.class), new HashMap<String, String>());\n+            Map<String, Rules> ruleMap = new HashMap<>();\n+            WhiteboxImpl.setInternalState(rulesEngineFactory, \"ruleMap\", ruleMap);\n+            Rules result = WhiteboxImpl.invokeMethod(rulesEngineFactory, \"getDynamicRulesFromJsonArray\", jsonArray);\n+            Rule ruleObject = result.iterator().next();\n+            Assert.assertEquals(\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\", ruleObject.getName());\n+            Assert.assertEquals(\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\", ruleObject.getDescription());\n+            Assert.assertEquals(1, ruleObject.getPriority());\n+        } catch (JSONException e) {\n+            e.printStackTrace();", "originalCommit": "457084bb0f9a68e4514538e52721595ac2ae832b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9eb344d5faabd935af05a36f395e7558808ce772", "chunk": "diff --git a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java\nindex fc66b592..1c23b9bf 100644\n--- a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java\n+++ b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java\n\n@@ -18,6 +18,8 @@ import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.Map;\n \n+import timber.log.Timber;\n+\n @RunWith(MockitoJUnitRunner.class)\n public class RulesEngineFactoryTest {\n \n"}}, {"oid": "9eb344d5faabd935af05a36f395e7558808ce772", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/9eb344d5faabd935af05a36f395e7558808ce772", "message": "code cleanup", "committedDate": "2020-03-10T11:47:20Z", "type": "commit"}]}