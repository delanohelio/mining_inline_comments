{"pr_number": 773, "pr_title": "PARQUET-1743: Add equals API to BloomFilter interface", "pr_createdAt": "2020-03-18T00:21:13Z", "pr_url": "https://github.com/apache/parquet-mr/pull/773", "timeline": [{"oid": "639f02b13462fe5321f2e0e652984828355f0315", "url": "https://github.com/apache/parquet-mr/commit/639f02b13462fe5321f2e0e652984828355f0315", "message": "PARQUET-1743: Add equals API to BloomFilter interface", "committedDate": "2020-03-18T00:19:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ==", "url": "https://github.com/apache/parquet-mr/pull/773#discussion_r394487759", "bodyText": "Why only these 3 checks while there are several other properties like minimumBytes?", "author": "shangxinli", "createdAt": "2020-03-18T16:40:13Z", "path": "parquet-column/src/main/java/org/apache/parquet/column/values/bloomfilter/BlockSplitBloomFilter.java", "diffHunk": "@@ -328,6 +329,20 @@ public long hash(Object value) {\n     return doHash();\n   }\n \n+  @Override\n+  public boolean equals(Object object) {\n+    if (object == this) {\n+      return true;\n+    }\n+    if (object instanceof BlockSplitBloomFilter) {\n+      BlockSplitBloomFilter that = (BlockSplitBloomFilter) object;\n+      return Arrays.equals(this.bitset, that.bitset)", "originalCommit": "639f02b13462fe5321f2e0e652984828355f0315", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5NjE3MA==", "url": "https://github.com/apache/parquet-mr/pull/773#discussion_r397696170", "bodyText": "@shangxinli\nSorry for the late reply.\nOther properties like BYTES_PER_BLOCK are for internal use, any small change will lead to a different bitset.\nSo I thought no need to check them.", "author": "garawalid", "createdAt": "2020-03-25T09:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0MzIyNw==", "url": "https://github.com/apache/parquet-mr/pull/773#discussion_r397943227", "bodyText": "It depends on the usage of this method. BYTES_PER_BLOCK is fine but why minimumBytes is not checked since maximumBytes is chcked?", "author": "shangxinli", "createdAt": "2020-03-25T15:25:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3MjQ5OQ==", "url": "https://github.com/apache/parquet-mr/pull/773#discussion_r397972499", "bodyText": "The implementation of bloom-filter branch takes in the constructor only maximumBytes. You re right, it's a mistake.\nWhat about ignoring both the maximumBytes and the minimumBytes, since they will lead to a different size of bitset?", "author": "garawalid", "createdAt": "2020-03-25T16:01:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA2NDczOA==", "url": "https://github.com/apache/parquet-mr/pull/773#discussion_r398064738", "bodyText": "Again, it depends on the usage of this method. If it is a mistake, I would prefer to fix that mistake and come back with right approach.", "author": "shangxinli", "createdAt": "2020-03-25T18:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA4ODU4Ng==", "url": "https://github.com/apache/parquet-mr/pull/773#discussion_r398088586", "bodyText": "I\u2019ll see what I can do!", "author": "garawalid", "createdAt": "2020-03-25T18:44:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyMTY2NQ==", "url": "https://github.com/apache/parquet-mr/pull/773#discussion_r399721665", "bodyText": "What about it this approach?", "author": "garawalid", "createdAt": "2020-03-28T23:24:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxODAxNQ==", "url": "https://github.com/apache/parquet-mr/pull/773#discussion_r399818015", "bodyText": "LGTM", "author": "shangxinli", "createdAt": "2020-03-29T16:06:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "448d6b1b09976300ac5f2f5c739535dacb9f1bb8", "chunk": "diff --git a/parquet-column/src/main/java/org/apache/parquet/column/values/bloomfilter/BlockSplitBloomFilter.java b/parquet-column/src/main/java/org/apache/parquet/column/values/bloomfilter/BlockSplitBloomFilter.java\nindex 9b920f785..7a9b7a9db 100644\n--- a/parquet-column/src/main/java/org/apache/parquet/column/values/bloomfilter/BlockSplitBloomFilter.java\n+++ b/parquet-column/src/main/java/org/apache/parquet/column/values/bloomfilter/BlockSplitBloomFilter.java\n\n@@ -337,7 +337,7 @@ public class BlockSplitBloomFilter implements BloomFilter {\n     if (object instanceof BlockSplitBloomFilter) {\n       BlockSplitBloomFilter that = (BlockSplitBloomFilter) object;\n       return Arrays.equals(this.bitset, that.bitset)\n-        && this.maximumBytes == that.maximumBytes\n+        && this.getAlgorithm() == that.getAlgorithm()\n         && this.hashStrategy == that.hashStrategy;\n     }\n     return false;\n"}}, {"oid": "448d6b1b09976300ac5f2f5c739535dacb9f1bb8", "url": "https://github.com/apache/parquet-mr/commit/448d6b1b09976300ac5f2f5c739535dacb9f1bb8", "message": "Address comments", "committedDate": "2020-03-25T21:15:04Z", "type": "commit"}]}