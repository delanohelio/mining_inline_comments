{"pr_number": 763, "pr_title": "PARQUET-1805: Refactor the configuration for bloom filters", "pr_createdAt": "2020-02-27T12:09:54Z", "pr_url": "https://github.com/apache/parquet-mr/pull/763", "timeline": [{"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "url": "https://github.com/apache/parquet-mr/commit/3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "message": "PARQUET-1805: Refactor the configuration for bloom filters", "committedDate": "2020-02-27T12:09:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzMjQ1OQ==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385132459", "bodyText": "Why we set the default to false?", "author": "chenjunjiedada", "createdAt": "2020-02-27T13:42:28Z", "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -61,6 +56,7 @@\n   public static final int DEFAULT_STATISTICS_TRUNCATE_LENGTH = Integer.MAX_VALUE;\n   public static final int DEFAULT_PAGE_ROW_COUNT_LIMIT = 20_000;\n   public static final int DEFAULT_MAX_BLOOM_FILTER_BYTES = 1024 * 1024;\n+  public static final boolean DEFAULT_BLOOM_FILTER_ENABLED = false;", "originalCommit": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2ODA1Mg==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385168052", "bodyText": "@chenjunjiedada\nYou can find more details about the topic in these issues: PARQUET-1787 and PARQUET-1784", "author": "garawalid", "createdAt": "2020-02-27T14:57:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzMjQ1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUyNDE3Ng==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385524176", "bodyText": "Thanks @garawalid.", "author": "chenjunjiedada", "createdAt": "2020-02-28T06:18:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzMjQ1OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5Nzg4OQ==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385397889", "bodyText": "Typo: and to a", "author": "garawalid", "createdAt": "2020-02-27T22:03:29Z", "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -459,26 +454,44 @@ public Builder withMaxBloomFilterBytes(int maxBloomFilterBytes) {\n     }\n \n     /**\n-     * Set Bloom filter column names and expected NDVs.\n+     * Set Bloom filter NDV (number of distinct values) for the specified column.\n+     *\n+     * @param columnPath the path of the column (dot-string)\n+     * @param ndv the NDV of the column\n+     *\n+     * @return this builder for method chaining\n+     */\n+    public Builder withBloomFilterNDV(String columnPath, long ndv) {\n+      Preconditions.checkArgument(ndv > 0, \"Invalid NDV for column \\\"%s\\\": %d\", columnPath, ndv);\n+      this.bloomFilterNDVs.withValue(columnPath, ndv);\n+      // Setting and NDV for a column implies writing a bloom filter", "originalCommit": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e36a984cc4185bc53a2c7fa8d3d821ca5d135cf", "chunk": "diff --git a/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java b/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java\nindex a4d029457..bf3a64984 100644\n--- a/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java\n+++ b/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java\n\n@@ -464,7 +464,7 @@ public class ParquetProperties {\n     public Builder withBloomFilterNDV(String columnPath, long ndv) {\n       Preconditions.checkArgument(ndv > 0, \"Invalid NDV for column \\\"%s\\\": %d\", columnPath, ndv);\n       this.bloomFilterNDVs.withValue(columnPath, ndv);\n-      // Setting and NDV for a column implies writing a bloom filter\n+      // Setting an NDV for a column implies writing a bloom filter\n       this.bloomFilterEnabled.withValue(columnPath, true);\n       return this;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5OTEwOQ==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385399109", "bodyText": "I'd write\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param enabled whether bloom filter shall be enabled\n          \n          \n            \n                 * @param enabled whether bloom filter shall be enabled for all columns", "author": "garawalid", "createdAt": "2020-02-27T22:06:18Z", "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -459,26 +454,44 @@ public Builder withMaxBloomFilterBytes(int maxBloomFilterBytes) {\n     }\n \n     /**\n-     * Set Bloom filter column names and expected NDVs.\n+     * Set Bloom filter NDV (number of distinct values) for the specified column.\n+     *\n+     * @param columnPath the path of the column (dot-string)\n+     * @param ndv the NDV of the column\n+     *\n+     * @return this builder for method chaining\n+     */\n+    public Builder withBloomFilterNDV(String columnPath, long ndv) {\n+      Preconditions.checkArgument(ndv > 0, \"Invalid NDV for column \\\"%s\\\": %d\", columnPath, ndv);\n+      this.bloomFilterNDVs.withValue(columnPath, ndv);\n+      // Setting and NDV for a column implies writing a bloom filter\n+      this.bloomFilterEnabled.withValue(columnPath, true);\n+      return this;\n+    }\n+\n+    /**\n+     * Enable or disable the bloom filter for the columns not specified by\n+     * {@link #withBloomFilterEnabled(String, boolean)}.\n      *\n-     * @param columnToNDVMap the columns which has bloom filter enabled.\n+     * @param enabled whether bloom filter shall be enabled", "originalCommit": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e36a984cc4185bc53a2c7fa8d3d821ca5d135cf", "chunk": "diff --git a/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java b/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java\nindex a4d029457..bf3a64984 100644\n--- a/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java\n+++ b/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java\n\n@@ -464,7 +464,7 @@ public class ParquetProperties {\n     public Builder withBloomFilterNDV(String columnPath, long ndv) {\n       Preconditions.checkArgument(ndv > 0, \"Invalid NDV for column \\\"%s\\\": %d\", columnPath, ndv);\n       this.bloomFilterNDVs.withValue(columnPath, ndv);\n-      // Setting and NDV for a column implies writing a bloom filter\n+      // Setting an NDV for a column implies writing a bloom filter\n       this.bloomFilterEnabled.withValue(columnPath, true);\n       return this;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMDEyNw==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385400127", "bodyText": "I'd keep it parquet.bloom.filter.expected.ndv because it's clear and the NDV still an estimation.", "author": "garawalid", "createdAt": "2020-02-27T22:08:43Z", "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java", "diffHunk": "@@ -150,8 +146,8 @@\n   public static final String ESTIMATE_PAGE_SIZE_CHECK = \"parquet.page.size.check.estimate\";\n   public static final String COLUMN_INDEX_TRUNCATE_LENGTH = \"parquet.columnindex.truncate.length\";\n   public static final String STATISTICS_TRUNCATE_LENGTH = \"parquet.statistics.truncate.length\";\n-  public static final String BLOOM_FILTER_COLUMN_NAMES = \"parquet.bloom.filter.column.names\";\n-  public static final String BLOOM_FILTER_EXPECTED_NDV = \"parquet.bloom.filter.expected.ndv\";\n+  public static final String BLOOM_FILTER_ENABLED = \"parquet.bloom.filter.enabled\";\n+  public static final String BLOOM_FILTER_EXPECTED_NDV = \"parquet.bloom.filter.ndv\";", "originalCommit": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e36a984cc4185bc53a2c7fa8d3d821ca5d135cf", "chunk": "diff --git a/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java b/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java\nindex 7dc2b4609..a4c8e4554 100644\n--- a/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java\n+++ b/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java\n\n@@ -147,7 +147,7 @@ public class ParquetOutputFormat<T> extends FileOutputFormat<Void, T> {\n   public static final String COLUMN_INDEX_TRUNCATE_LENGTH = \"parquet.columnindex.truncate.length\";\n   public static final String STATISTICS_TRUNCATE_LENGTH = \"parquet.statistics.truncate.length\";\n   public static final String BLOOM_FILTER_ENABLED = \"parquet.bloom.filter.enabled\";\n-  public static final String BLOOM_FILTER_EXPECTED_NDV = \"parquet.bloom.filter.ndv\";\n+  public static final String BLOOM_FILTER_EXPECTED_NDV = \"parquet.bloom.filter.expected.ndv\";\n   public static final String BLOOM_FILTER_MAX_BYTES = \"parquet.bloom.filter.max.bytes\";\n   public static final String PAGE_ROW_COUNT_LIMIT = \"parquet.page.row.count.limit\";\n   public static final String PAGE_WRITE_CHECKSUM_ENABLED = \"parquet.page.write-checksum.enabled\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjAyOQ==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385402029", "bodyText": "Wouldn't it be better to say that the result of this method will be combined with withBloomFilterEnabled(boolean enabled)?", "author": "garawalid", "createdAt": "2020-02-27T22:13:14Z", "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetWriter.java", "diffHunk": "@@ -558,30 +556,38 @@ public SELF withPageWriteChecksumEnabled(boolean enablePageWriteChecksum) {\n     }\n \n     /**\n-     * Specified the column and the NDV map for the bloom filter.\n+     * Sets the NDV (number of distinct values) for the specified column.\n      *\n-     * @param columnNDVMap the column to NDV map\n+     * @param columnPath the path of the column (dot-string)\n+     * @param ndv        the NDV of the column\n      *\n      * @return this builder for method chaining.\n      */\n-    public SELF withBloomFilterColumnToNDVMap(Map<String, Long> columnNDVMap) {\n-      if (columnNDVMap != null) {\n-        encodingPropsBuilder.withBloomFilterColumnToNDVMap(columnNDVMap);\n-      }\n-\n+    public SELF withBloomFilterNDV(String columnPath, long ndv) {\n+      encodingPropsBuilder.withBloomFilterNDV(columnPath, ndv);\n       return self();\n     }\n \n     /**\n-     * Specified the column names for the bloom filter.\n+     * Sets the bloom filter enabled/disabled\n      *\n-     * @return this builder for method chaining.\n+     * @param enabled whether to write bloom filters\n+     * @return this builder for method chaining\n      */\n-    public SELF withBloomFilterColumnNames(String...columns) {\n-      if (columns != null) {\n-        encodingPropsBuilder.withBloomFilterColumnNames(Arrays.asList(columns));\n-      }\n+    public SELF withBloomFilterEnabled(boolean enabled) {\n+      encodingPropsBuilder.withBloomFilterEnabled(enabled);\n+      return self();\n+    }\n \n+    /**\n+     * Sets the bloom filter enabled/disabled for the specified column", "originalCommit": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2OTE5Nw==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385569197", "bodyText": "I wouldn't say combined. If an enabled/disabled state is set for a specific column then that state would be used independently from the \"universal\" state set. Let me try to make it more clear in the comments.", "author": "gszadovszky", "createdAt": "2020-02-28T08:42:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjAyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU4MDc0MQ==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385580741", "bodyText": "I agree, it's better now!", "author": "garawalid", "createdAt": "2020-02-28T09:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjAyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "0e36a984cc4185bc53a2c7fa8d3d821ca5d135cf", "chunk": "diff --git a/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetWriter.java b/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetWriter.java\nindex 3b40b616a..c6b282840 100644\n--- a/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetWriter.java\n+++ b/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetWriter.java\n\n@@ -580,7 +580,8 @@ public class ParquetWriter<T> implements Closeable {\n     }\n \n     /**\n-     * Sets the bloom filter enabled/disabled for the specified column\n+     * Sets the bloom filter enabled/disabled for the specified column. If not set for the column specifically the\n+     * default enabled/disabled state will take place. See {@link #withBloomFilterEnabled(boolean)}.\n      *\n      * @param columnPath the path of the column (dot-string)\n      * @param enabled    whether to write bloom filter for the column\n"}}, {"oid": "0e36a984cc4185bc53a2c7fa8d3d821ca5d135cf", "url": "https://github.com/apache/parquet-mr/commit/0e36a984cc4185bc53a2c7fa8d3d821ca5d135cf", "message": "PARQUET-1805: Fix review findings", "committedDate": "2020-02-28T08:50:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3MTY1NQ==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r394571655", "bodyText": "Is it max value?", "author": "shangxinli", "createdAt": "2020-03-18T18:55:49Z", "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -102,10 +98,10 @@ public static WriterVersion fromString(String name) {\n   private final int columnIndexTruncateLength;\n   private final int statisticsTruncateLength;\n \n-  // The key-value pair represents the column name and its expected distinct number of values in a row group.\n-  private final Map<String, Long> bloomFilterExpectedDistinctNumbers;\n+  // The expected NDV (number of distinct values) for each columns\n+  private final ColumnProperty<Long> bloomFilterNDVs;", "originalCommit": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3OTE4NA==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r396479184", "bodyText": "ColumnProperty is created to handle different values per column names. It may contain one value for each column.", "author": "gszadovszky", "createdAt": "2020-03-23T14:11:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3MTY1NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3Mjk0MA==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r394572940", "bodyText": "are -> is", "author": "shangxinli", "createdAt": "2020-03-18T18:58:01Z", "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -292,9 +285,9 @@ public String toString() {\n         + \"Max row count for page size check is: \" + getMaxRowCountForPageSizeCheck() + '\\n'\n         + \"Truncate length for column indexes is: \" + getColumnIndexTruncateLength() + '\\n'\n         + \"Truncate length for statistics min/max  is: \" + getStatisticsTruncateLength() + '\\n'\n-        + \"Bloom filter enabled column names are: \" + getBloomFilterColumns() + '\\n'\n+        + \"Bloom filter enabled: \" + bloomFilterEnabled + '\\n'\n         + \"Max Bloom filter size for a column is \" + getMaxBloomFilterBytes() + '\\n'\n-        + \"Bloom filter enabled column expected number of distinct values are: \" + getBloomFilterColumnExpectedNDVs().values() + '\\n'\n+        + \"Bloom filter expected number of distinct values are: \" + bloomFilterNDVs + '\\n'", "originalCommit": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NzY5MA==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r396477690", "bodyText": "It depends. bloomFilterNDVs is a map like structure that contains an NDV for each columns. The output of this line can be either one default value or several column name - NDV pairs.", "author": "gszadovszky", "createdAt": "2020-03-23T14:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3Mjk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4Njc3MA==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r398686770", "bodyText": "Sounds good. I thought earlier it was just one single number to allow the maximum NDVs, but I was wrong.", "author": "shangxinli", "createdAt": "2020-03-26T15:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3Mjk0MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzY5Mw==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r394587693", "bodyText": "Can we document the settings of their relations? Here are my understandings.\n\n'withBloomFilterEnabled(boolean enabled)' would set it globally, which can be overridden by column specific setting of 'withBloomFilterEnabled(String columnPath, boolean enabled)' or 'withBloomFilterNDV(String columnPath, long ndv)'. 2. Now 'withBloomFilterNDV(String columnPath, long ndv)' will override 'withBloomFilterEnabled(String columnPath, boolean enabled)' implicitly or vice versa explicitly.\n\nI feel it is a bit complicated to use given the above relations. It is also my understanding that NDV should only present when bloomFitler is enabled. If that is the case, can we just use NDV null or not to indicate enabling/disabling to simplify the settings.", "author": "shangxinli", "createdAt": "2020-03-18T19:25:49Z", "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -459,26 +454,44 @@ public Builder withMaxBloomFilterBytes(int maxBloomFilterBytes) {\n     }\n \n     /**\n-     * Set Bloom filter column names and expected NDVs.\n+     * Set Bloom filter NDV (number of distinct values) for the specified column.\n+     *\n+     * @param columnPath the path of the column (dot-string)\n+     * @param ndv the NDV of the column\n+     *\n+     * @return this builder for method chaining\n+     */\n+    public Builder withBloomFilterNDV(String columnPath, long ndv) {\n+      Preconditions.checkArgument(ndv > 0, \"Invalid NDV for column \\\"%s\\\": %d\", columnPath, ndv);\n+      this.bloomFilterNDVs.withValue(columnPath, ndv);\n+      // Setting and NDV for a column implies writing a bloom filter\n+      this.bloomFilterEnabled.withValue(columnPath, true);\n+      return this;\n+    }\n+\n+    /**\n+     * Enable or disable the bloom filter for the columns not specified by\n+     * {@link #withBloomFilterEnabled(String, boolean)}.\n      *\n-     * @param columnToNDVMap the columns which has bloom filter enabled.\n+     * @param enabled whether bloom filter shall be enabled\n      *\n      * @return this builder for method chaining\n      */\n-    public Builder withBloomFilterColumnToNDVMap(Map<String, Long> columnToNDVMap) {\n-      this.bloomFilterColumnExpectedNDVs = columnToNDVMap;\n+    public Builder withBloomFilterEnabled(boolean enabled) {", "originalCommit": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4MzU5OA==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r396483598", "bodyText": "Bloom filters are not written by default for any columns. You may turn it on for the different columns. The \"global\" setting is just a shortcut to turn bloom filters on for all columns (and you may turn off for some of them).\nNDV can be set for a specific column. If not set (but the bloom filter is turned on for that column) bloom filter can still be written using a default calculation. It is another short cut that if the NDV is set for a column then the user obviously want to write a bloom filter for that column so we set the related flag.", "author": "gszadovszky", "createdAt": "2020-03-23T14:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzY5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxNzk1Mg==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r398717952", "bodyText": "We were on the same page except for the 'default calculation' for NDV. Now I understand better. But my concern is still that it is a little complicated to use these 3 settings including the 2 shortcuts.  How about we rename the two column-specific setting methods like withEnableBloomFilterWithNDV() and withEnableBloomFilterWithDefaultNDV()?", "author": "shangxinli", "createdAt": "2020-03-26T16:35:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzY5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0MTI2NQ==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r399141265", "bodyText": "There is no default NDV. We calculate the optimal size of the bloom filter based on the NDV if it is set and use the maximum size if it is not. (See the related code here)\nI've tried to explain the current behavior of the properties more precisely in the method comments.", "author": "gszadovszky", "createdAt": "2020-03-27T09:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzY5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzODg2Nw==", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r399338867", "bodyText": "Sounds good", "author": "shangxinli", "createdAt": "2020-03-27T15:15:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzY5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ff8fc7f557b015c21a57acafc70c6d47c83e650c", "chunk": "diff --git a/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java b/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java\nindex a4d029457..7e55ebcdb 100644\n--- a/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java\n+++ b/parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java\n\n@@ -455,6 +455,8 @@ public class ParquetProperties {\n \n     /**\n      * Set Bloom filter NDV (number of distinct values) for the specified column.\n+     * If set for a column then the writing of the bloom filter for that column will be automatically enabled (see\n+     * {@link #withBloomFilterEnabled(String, boolean)}).\n      *\n      * @param columnPath the path of the column (dot-string)\n      * @param ndv the NDV of the column\n"}}, {"oid": "ff8fc7f557b015c21a57acafc70c6d47c83e650c", "url": "https://github.com/apache/parquet-mr/commit/ff8fc7f557b015c21a57acafc70c6d47c83e650c", "message": "PARQUET-1805: Add more descriptive comments in ParquetProperties", "committedDate": "2020-03-23T14:31:29Z", "type": "commit"}]}