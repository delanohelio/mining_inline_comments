{"pr_number": 313, "pr_title": "chore(fix): unflake MetricsTracerTest", "pr_createdAt": "2020-05-18T20:45:22Z", "pr_url": "https://github.com/googleapis/java-bigtable/pull/313", "timeline": [{"oid": "2b14d56c0fcb3f43445d75439dd993a05629f509", "url": "https://github.com/googleapis/java-bigtable/commit/2b14d56c0fcb3f43445d75439dd993a05629f509", "message": "chore(fix): unflake MetricsTracerTest", "committedDate": "2020-05-18T20:44:59Z", "type": "commit"}, {"oid": "0d288fa0a11b9c18c4d74bdae4083733e7de91eb", "url": "https://github.com/googleapis/java-bigtable/commit/0d288fa0a11b9c18c4d74bdae4083733e7de91eb", "message": "chore(fix): unflake MetricsTracerTest", "committedDate": "2020-05-18T21:11:52Z", "type": "commit"}, {"oid": "46479eaeb7469790619b7a2bd61b8e1d8a00b7ee", "url": "https://github.com/googleapis/java-bigtable/commit/46479eaeb7469790619b7a2bd61b8e1d8a00b7ee", "message": "chore(fix): unflake MetricsTracerTest", "committedDate": "2020-05-18T21:18:19Z", "type": "commit"}, {"oid": "7dfa189b9d9e013013b7ec5f47e08f6626ac24c4", "url": "https://github.com/googleapis/java-bigtable/commit/7dfa189b9d9e013013b7ec5f47e08f6626ac24c4", "message": "chore(fix): unflake MetricsTracerTest", "committedDate": "2020-05-18T21:30:21Z", "type": "commit"}, {"oid": "4f10bfecd37b82ceed0980c00e752b76f45adc35", "url": "https://github.com/googleapis/java-bigtable/commit/4f10bfecd37b82ceed0980c00e752b76f45adc35", "message": "review feedback", "committedDate": "2020-05-26T14:50:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczMjY1MA==", "url": "https://github.com/googleapis/java-bigtable/pull/313#discussion_r430732650", "bodyText": "Please add a comment explaining whats happening :)", "author": "igorbernstein2", "createdAt": "2020-05-26T22:02:43Z", "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/stub/metrics/MetricsTracerTest.java", "diffHunk": "@@ -237,7 +237,7 @@ public Object answer(InvocationOnMock invocation) throws Throwable {\n         getAggregationValueAsLong(\n             RpcViewConstants.BIGTABLE_READ_ROWS_FIRST_ROW_LATENCY_VIEW,\n             ImmutableMap.<TagKey, TagValue>of());\n-    assertThat(firstRowLatency).isIn(Range.closed(beforeSleep, elapsed - afterSleep));\n+    assertThat(firstRowLatency).isIn(Range.closed(beforeSleep, elapsed - afterSleep / 2));", "originalCommit": "4f10bfecd37b82ceed0980c00e752b76f45adc35", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b6670014c917d0a6102b3f05f20e9d3e8b2d1a2d", "chunk": "diff --git a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/stub/metrics/MetricsTracerTest.java b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/stub/metrics/MetricsTracerTest.java\nindex 9297aecd..9fd78c5c 100644\n--- a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/stub/metrics/MetricsTracerTest.java\n+++ b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/stub/metrics/MetricsTracerTest.java\n\n@@ -237,6 +237,9 @@ public class MetricsTracerTest {\n         getAggregationValueAsLong(\n             RpcViewConstants.BIGTABLE_READ_ROWS_FIRST_ROW_LATENCY_VIEW,\n             ImmutableMap.<TagKey, TagValue>of());\n+\n+    // adding buffer time to the upper range to allow for a race between the emulator and the client\n+    // recording the duration\n     assertThat(firstRowLatency).isIn(Range.closed(beforeSleep, elapsed - afterSleep / 2));\n   }\n \n"}}, {"oid": "b6670014c917d0a6102b3f05f20e9d3e8b2d1a2d", "url": "https://github.com/googleapis/java-bigtable/commit/b6670014c917d0a6102b3f05f20e9d3e8b2d1a2d", "message": "review feedback", "committedDate": "2020-05-27T15:34:02Z", "type": "commit"}]}