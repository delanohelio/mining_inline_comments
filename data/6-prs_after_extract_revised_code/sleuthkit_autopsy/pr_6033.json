{"pr_number": 6033, "pr_title": "6430 move data source creation", "pr_createdAt": "2020-06-29T17:18:56Z", "pr_url": "https://github.com/sleuthkit/autopsy/pull/6033", "timeline": [{"oid": "332201d7f10261afefc0bb895f10150c83af1d94", "url": "https://github.com/sleuthkit/autopsy/commit/332201d7f10261afefc0bb895f10150c83af1d94", "message": "Begin process of creating image object up front.", "committedDate": "2020-06-17T14:08:18Z", "type": "commit"}, {"oid": "cb3ff91b2116b3f5a92551902afde14374f915d8", "url": "https://github.com/sleuthkit/autopsy/commit/cb3ff91b2116b3f5a92551902afde14374f915d8", "message": "Merge branch '6415_wizard' into 6430_moveDScreation", "committedDate": "2020-06-17T15:50:50Z", "type": "commit"}, {"oid": "0505ea42779528ccc6e41fdc5db2a7f80fb8a3db", "url": "https://github.com/sleuthkit/autopsy/commit/0505ea42779528ccc6e41fdc5db2a7f80fb8a3db", "message": "Add image to database before calling add image task.", "committedDate": "2020-06-19T11:56:49Z", "type": "commit"}, {"oid": "2674bacd539fc7da46134f8c196febc3079c76a6", "url": "https://github.com/sleuthkit/autopsy/commit/2674bacd539fc7da46134f8c196febc3079c76a6", "message": "Create image object before running add image process", "committedDate": "2020-06-23T19:18:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1NzA0OA==", "url": "https://github.com/sleuthkit/autopsy/pull/6033#discussion_r447157048", "bodyText": "More info in the message, please.", "author": "rcordovano", "createdAt": "2020-06-29T18:07:09Z", "path": "Core/src/org/sleuthkit/autopsy/casemodule/AddImageTask.java", "diffHunk": "@@ -92,7 +92,7 @@ public void run() {\n         try {\n             currentCase = Case.getCurrentCaseThrows();\n         } catch (NoCurrentCaseException ex) {\n-            logger.log(Level.SEVERE, String.format(\"Failed to add image data source at %s, no current case\", imageDetails.imagePath), ex);\n+            logger.log(Level.SEVERE, String.format(\"Failed to start AddImageTask, no current case\"), ex);", "originalCommit": "2674bacd539fc7da46134f8c196febc3079c76a6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "315bc65f255d3f7ead0cf32c232ab20b94b8feed", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/casemodule/AddImageTask.java b/Core/src/org/sleuthkit/autopsy/casemodule/AddImageTask.java\nindex c35eeafbb6..e1111dcea5 100644\n--- a/Core/src/org/sleuthkit/autopsy/casemodule/AddImageTask.java\n+++ b/Core/src/org/sleuthkit/autopsy/casemodule/AddImageTask.java\n\n@@ -92,7 +92,7 @@ public void run() {\n         try {\n             currentCase = Case.getCurrentCaseThrows();\n         } catch (NoCurrentCaseException ex) {\n-            logger.log(Level.SEVERE, String.format(\"Failed to start AddImageTask, no current case\"), ex);\n+            logger.log(Level.SEVERE, String.format(\"Failed to start AddImageTask for %s, no current case\", imageDetails.getImageName()), ex);\n             return;\n         }\n         progressMonitor.setIndeterminate(true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE3MDMzMg==", "url": "https://github.com/sleuthkit/autopsy/pull/6033#discussion_r447170332", "bodyText": "Let's indulge in a little code duplication for clarity, since by the time you get to this method, you have to keep looking back at the callers.\nWe can also give this another name to ease the cognitive burden of the overloads. Something like doAddImageProcess() or addImage() or addFilesForImage() whatever.", "author": "rcordovano", "createdAt": "2020-06-29T18:30:40Z", "path": "Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java", "diffHunk": "@@ -296,10 +315,27 @@ public void run(String deviceId, String imagePath, String timeZone, boolean igno\n      * @param callback             Callback to call when processing is done.\n      */\n     private void run(String deviceId, String imagePath, int sectorSize, String timeZone, boolean ignoreFatOrphanFiles, String md5, String sha1, String sha256, DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback) {\n-        if (ingestStream == null) {\n-            ingestStream = new DefaultIngestStream();\n-        }\n-        addImageTask = new AddImageTask(new AddImageTask.ImageDetails(deviceId, imagePath, sectorSize, timeZone, ignoreFatOrphanFiles, md5, sha1, sha256, null), \n+\n+\t// If the data source or ingest stream haven't been initialized yet, do it now.\n+    if (ingestStream == null) {\n+        ingestStream = new DefaultIngestStream();\n+    }\n+    if (image == null) {\n+\t    try {\n+            image = SleuthkitJNI.addImageToDatabase(Case.getCurrentCase().getSleuthkitCase(),\n+                new String[]{imagePath}, sectorSize,\n+                timeZone, md5, sha1, sha256, deviceId);\n+            } catch (TskCoreException ex) {\n+            logger.log(Level.SEVERE, \"Error adding data source with path \" + imagePath + \" to database\", ex);\n+            final List<String> errors = new ArrayList<>();\n+            errors.add(ex.getMessage());\n+            callback.done(DataSourceProcessorCallback.DataSourceProcessorResult.CRITICAL_ERRORS, errors, new ArrayList<>());\n+            return;\n+\t    }\n+\t}", "originalCommit": "2674bacd539fc7da46134f8c196febc3079c76a6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "315bc65f255d3f7ead0cf32c232ab20b94b8feed", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java b/Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java\nindex 607b1b9088..d84e2482c4 100644\n--- a/Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java\n+++ b/Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java\n\n@@ -314,24 +341,24 @@ public void run(String deviceId, String imagePath, String timeZone, boolean igno\n      *                             during processing.\n      * @param callback             Callback to call when processing is done.\n      */\n-    private void run(String deviceId, String imagePath, int sectorSize, String timeZone, boolean ignoreFatOrphanFiles, String md5, String sha1, String sha256, DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback) {\n+    private void doAddImageProcess(String deviceId, String imagePath, int sectorSize, String timeZone, boolean ignoreFatOrphanFiles, String md5, String sha1, String sha256, DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback) {\n \n \t// If the data source or ingest stream haven't been initialized yet, do it now.\n     if (ingestStream == null) {\n-        ingestStream = new DefaultIngestStream();\n+        String message = \"Ingest stream was not initialized before running the add image process on \" + imagePath;\n+        logger.log(Level.SEVERE, message);\n+        final List<String> errors = new ArrayList<>();\n+        errors.add(message);\n+        callback.done(DataSourceProcessorCallback.DataSourceProcessorResult.CRITICAL_ERRORS, errors, new ArrayList<>());\n+        return;\n     }\n     if (image == null) {\n-\t    try {\n-            image = SleuthkitJNI.addImageToDatabase(Case.getCurrentCase().getSleuthkitCase(),\n-                new String[]{imagePath}, sectorSize,\n-                timeZone, md5, sha1, sha256, deviceId);\n-            } catch (TskCoreException ex) {\n-            logger.log(Level.SEVERE, \"Error adding data source with path \" + imagePath + \" to database\", ex);\n-            final List<String> errors = new ArrayList<>();\n-            errors.add(ex.getMessage());\n-            callback.done(DataSourceProcessorCallback.DataSourceProcessorResult.CRITICAL_ERRORS, errors, new ArrayList<>());\n-            return;\n-\t    }\n+        String message = \"Image was not added to database before running the add image process on \" + imagePath;\n+        logger.log(Level.SEVERE, message);\n+        final List<String> errors = new ArrayList<>();\n+        errors.add(message);\n+        callback.done(DataSourceProcessorCallback.DataSourceProcessorResult.CRITICAL_ERRORS, errors, new ArrayList<>());\n+        return;\n \t}\n \n \tAddImageTask.ImageDetails imageDetails = new AddImageTask.ImageDetails(deviceId, image, sectorSize, timeZone, ignoreFatOrphanFiles, md5, sha1, sha256, null);\n"}}, {"oid": "e6fa52179b09e6ff3ea0c019a0d3f339a38e9df2", "url": "https://github.com/sleuthkit/autopsy/commit/e6fa52179b09e6ff3ea0c019a0d3f339a38e9df2", "message": "Merge remote-tracking branch 'upstream/streaming-ingest' into 6430_moveDScreation\n\n# Conflicts:\n#\tCore/src/org/sleuthkit/autopsy/casemodule/AddImageTask.java\n#\tCore/src/org/sleuthkit/autopsy/ingest/IngestJob.java\n#\tCore/src/org/sleuthkit/autopsy/ingest/IngestJobInputStream.java\n#\tCore/src/org/sleuthkit/autopsy/ingest/IngestManager.java", "committedDate": "2020-07-07T14:11:50Z", "type": "commit"}, {"oid": "315bc65f255d3f7ead0cf32c232ab20b94b8feed", "url": "https://github.com/sleuthkit/autopsy/commit/315bc65f255d3f7ead0cf32c232ab20b94b8feed", "message": "Image and ingest stream will be set up by each ImageDSProcessor.run() method.\nImprove error message.", "committedDate": "2020-07-07T15:33:48Z", "type": "commit"}, {"oid": "32726029328e806faf947e4cdee2a344964983e8", "url": "https://github.com/sleuthkit/autopsy/commit/32726029328e806faf947e4cdee2a344964983e8", "message": "Reverting bundles", "committedDate": "2020-07-07T17:05:34Z", "type": "commit"}, {"oid": "2ac45ba6a48a2df5fcb83b9910dd20e47d6ec714", "url": "https://github.com/sleuthkit/autopsy/commit/2ac45ba6a48a2df5fcb83b9910dd20e47d6ec714", "message": "Merge remote-tracking branch 'upstream/streaming-ingest' into 6430_moveDScreation", "committedDate": "2020-07-07T18:08:52Z", "type": "commit"}, {"oid": "2fc70b01750071ed217775442860b10b5f3db166", "url": "https://github.com/sleuthkit/autopsy/commit/2fc70b01750071ed217775442860b10b5f3db166", "message": "Remove onDataSourceAdded", "committedDate": "2020-07-07T19:02:59Z", "type": "commit"}, {"oid": "5d90a9cae2f11e588e4bf3e2cd76e95953c3ad37", "url": "https://github.com/sleuthkit/autopsy/commit/5d90a9cae2f11e588e4bf3e2cd76e95953c3ad37", "message": "Change name to getImagePath()", "committedDate": "2020-07-07T20:10:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTExNjM3NA==", "url": "https://github.com/sleuthkit/autopsy/pull/6033#discussion_r451116374", "bodyText": "This comment is not accurate.", "author": "rcordovano", "createdAt": "2020-07-07T20:13:37Z", "path": "Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java", "diffHunk": "@@ -295,11 +341,28 @@ public void run(String deviceId, String imagePath, String timeZone, boolean igno\n      *                             during processing.\n      * @param callback             Callback to call when processing is done.\n      */\n-    private void run(String deviceId, String imagePath, int sectorSize, String timeZone, boolean ignoreFatOrphanFiles, String md5, String sha1, String sha256, DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback) {\n-        if (ingestStream == null) {\n-            ingestStream = new DefaultIngestStream();\n-        }\n-        addImageTask = new AddImageTask(new AddImageTask.ImageDetails(deviceId, imagePath, sectorSize, timeZone, ignoreFatOrphanFiles, md5, sha1, sha256, null), \n+    private void doAddImageProcess(String deviceId, String imagePath, int sectorSize, String timeZone, boolean ignoreFatOrphanFiles, String md5, String sha1, String sha256, DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback) {\n+\n+\t// If the data source or ingest stream haven't been initialized yet, do it now.", "originalCommit": "5d90a9cae2f11e588e4bf3e2cd76e95953c3ad37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9570c1d285f8768345ca532ef8a9feed0a5a3c7d", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java b/Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java\nindex d84e2482c4..362eb20199 100644\n--- a/Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java\n+++ b/Core/src/org/sleuthkit/autopsy/casemodule/ImageDSProcessor.java\n\n@@ -343,7 +343,7 @@ public void run(String deviceId, String imagePath, String timeZone, boolean igno\n      */\n     private void doAddImageProcess(String deviceId, String imagePath, int sectorSize, String timeZone, boolean ignoreFatOrphanFiles, String md5, String sha1, String sha256, DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback) {\n \n-\t// If the data source or ingest stream haven't been initialized yet, do it now.\n+\t// If the data source or ingest stream haven't been initialized, stop processing\n     if (ingestStream == null) {\n         String message = \"Ingest stream was not initialized before running the add image process on \" + imagePath;\n         logger.log(Level.SEVERE, message);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTExOTY4Mw==", "url": "https://github.com/sleuthkit/autopsy/pull/6033#discussion_r451119683", "bodyText": "Please restore the period, thanks!", "author": "rcordovano", "createdAt": "2020-07-07T20:20:22Z", "path": "Core/src/org/sleuthkit/autopsy/ingest/IngestJob.java", "diffHunk": "@@ -116,16 +115,17 @@ public String getDisplayName() {\n     }\n     \n     /**\n-     * Constructs an ingest job that analyzes one data source using an\n-     * ingest stream.\n+     * Constructs an ingest job that analyzes one data source, possibly using\n+     * an ingest stream", "originalCommit": "5d90a9cae2f11e588e4bf3e2cd76e95953c3ad37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9570c1d285f8768345ca532ef8a9feed0a5a3c7d", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/ingest/IngestJob.java b/Core/src/org/sleuthkit/autopsy/ingest/IngestJob.java\nindex 6897feb137..dd40a7ef48 100644\n--- a/Core/src/org/sleuthkit/autopsy/ingest/IngestJob.java\n+++ b/Core/src/org/sleuthkit/autopsy/ingest/IngestJob.java\n\n@@ -110,22 +110,22 @@ public String getDisplayName() {\n      * @param settings   The ingest job settings.\n      */\n     IngestJob(Content dataSource, List<AbstractFile> files, IngestJobSettings settings) {\n-\tthis(Arrays.asList(dataSource), settings);\n-\tthis.files.addAll(files);\n+        this(Arrays.asList(dataSource), settings);\n+        this.files.addAll(files);\n     }\n     \n     /**\n      * Constructs an ingest job that analyzes one data source, possibly using\n-     * an ingest stream\n+     * an ingest stream.\n      *\n      * @param settings   The ingest job settings.\n      */\n     IngestJob(DataSource dataSource, Mode ingestMode, IngestJobSettings settings) {\n         this.id = IngestJob.nextId.getAndIncrement();\n         this.ingestJobPipelines = new ConcurrentHashMap<>();\n-\tthis.dataSources.add(dataSource);\n-\tthis.settings = settings;\n-\tthis.ingestMode = ingestMode;\n+        this.dataSources.add(dataSource);\n+        this.settings = settings;\n+        this.ingestMode = ingestMode;\n         incompleteJobsCount = new AtomicInteger(1);\n         cancellationReason = CancellationReason.NOT_CANCELLED;\n     }\n"}}, {"oid": "9570c1d285f8768345ca532ef8a9feed0a5a3c7d", "url": "https://github.com/sleuthkit/autopsy/commit/9570c1d285f8768345ca532ef8a9feed0a5a3c7d", "message": "Code review and codacy changes", "committedDate": "2020-07-08T14:25:03Z", "type": "commit"}]}