{"pr_number": 6406, "pr_title": "6773 web history discovery details viewer", "pr_createdAt": "2020-10-23T14:19:24Z", "pr_url": "https://github.com/sleuthkit/autopsy/pull/6406", "timeline": [{"oid": "fd454bbfab5c10561adc2f15c84a25742e34fcd4", "url": "https://github.com/sleuthkit/autopsy/commit/fd454bbfab5c10561adc2f15c84a25742e34fcd4", "message": "6773 initial commit of code for Domain details viewers", "committedDate": "2020-09-30T21:57:27Z", "type": "commit"}, {"oid": "0b83ecab236a910564fa74e7f923dc85861b2927", "url": "https://github.com/sleuthkit/autopsy/commit/0b83ecab236a910564fa74e7f923dc85861b2927", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer", "committedDate": "2020-10-06T14:25:19Z", "type": "commit"}, {"oid": "dd87146065e21f26b92ef15632776f34b53f0aa6", "url": "https://github.com/sleuthkit/autopsy/commit/dd87146065e21f26b92ef15632776f34b53f0aa6", "message": "6773 web history working", "committedDate": "2020-10-22T22:26:17Z", "type": "commit"}, {"oid": "6f179d3274b1582281d9f08c9c8c186c17563259", "url": "https://github.com/sleuthkit/autopsy/commit/6f179d3274b1582281d9f08c9c8c186c17563259", "message": "6773 improve date column:", "committedDate": "2020-10-22T22:41:04Z", "type": "commit"}, {"oid": "33dc3a8ad91b36cece031b571112510a1bc114ee", "url": "https://github.com/sleuthkit/autopsy/commit/33dc3a8ad91b36cece031b571112510a1bc114ee", "message": "6773 fix unselection", "committedDate": "2020-10-23T13:47:49Z", "type": "commit"}, {"oid": "240ab041134eabb9ac968d3920023801bc9a051d", "url": "https://github.com/sleuthkit/autopsy/commit/240ab041134eabb9ac968d3920023801bc9a051d", "message": "6773 changes to artifact Viewers", "committedDate": "2020-10-23T13:48:59Z", "type": "commit"}, {"oid": "d649931c369f66432160ca77f2a3879bb8945350", "url": "https://github.com/sleuthkit/autopsy/commit/d649931c369f66432160ca77f2a3879bb8945350", "message": "6773 fix unselection again and refactor method name", "committedDate": "2020-10-23T13:59:40Z", "type": "commit"}, {"oid": "4168cb1c49f261d36f3f3d4464b85d3c4e9cecb8", "url": "https://github.com/sleuthkit/autopsy/commit/4168cb1c49f261d36f3f3d4464b85d3c4e9cecb8", "message": "6773 clean up comments", "committedDate": "2020-10-23T14:19:07Z", "type": "commit"}, {"oid": "424fb9759989afb35b31b760a2c504be15c89c06", "url": "https://github.com/sleuthkit/autopsy/commit/424fb9759989afb35b31b760a2c504be15c89c06", "message": "6773 codacy clean up", "committedDate": "2020-10-23T16:31:30Z", "type": "commit"}, {"oid": "492378b3d3ab099d605b2c5fbb17e85ef75e7ad3", "url": "https://github.com/sleuthkit/autopsy/commit/492378b3d3ab099d605b2c5fbb17e85ef75e7ad3", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer", "committedDate": "2020-10-23T16:31:37Z", "type": "commit"}, {"oid": "02d309b26d89be70fe3a34d8d4aca6ba9ee34595", "url": "https://github.com/sleuthkit/autopsy/commit/02d309b26d89be70fe3a34d8d4aca6ba9ee34595", "message": "6773 reduce npcomplexity of method for codacy", "committedDate": "2020-10-23T18:57:52Z", "type": "commit"}, {"oid": "b0bbfffdb216fd95eff28b07714bcf87beac42ad", "url": "https://github.com/sleuthkit/autopsy/commit/b0bbfffdb216fd95eff28b07714bcf87beac42ad", "message": "6773 use logger instead of printstacktrace", "committedDate": "2020-10-23T19:02:26Z", "type": "commit"}, {"oid": "f4830580422c1f48948ec9bd23ac817139ac1cdf", "url": "https://github.com/sleuthkit/autopsy/commit/f4830580422c1f48948ec9bd23ac817139ac1cdf", "message": "6773 fix index when sorted", "committedDate": "2020-10-23T20:31:59Z", "type": "commit"}, {"oid": "26144984d895711c15b5943368c75d604dfc8e57", "url": "https://github.com/sleuthkit/autopsy/commit/26144984d895711c15b5943368c75d604dfc8e57", "message": "6773 fix saving of selected tab and resizing of list", "committedDate": "2020-10-23T21:09:26Z", "type": "commit"}, {"oid": "dcf8da3bfeee0c9e7df3b577befe1ba3ee46ad09", "url": "https://github.com/sleuthkit/autopsy/commit/dcf8da3bfeee0c9e7df3b577befe1ba3ee46ad09", "message": "6773 remove titled border used for debugging", "committedDate": "2020-10-23T21:13:56Z", "type": "commit"}, {"oid": "1db593e212491c86548e7eee542a0099b421704a", "url": "https://github.com/sleuthkit/autopsy/commit/1db593e212491c86548e7eee542a0099b421704a", "message": "6773 update MERGED file", "committedDate": "2020-10-26T12:32:27Z", "type": "commit"}, {"oid": "90344f0358ce05b2c777eabab067b0bfa33cfe1a", "url": "https://github.com/sleuthkit/autopsy/commit/90344f0358ce05b2c777eabab067b0bfa33cfe1a", "message": "6773 fix population of tabs for domains after first selected", "committedDate": "2020-10-26T17:59:22Z", "type": "commit"}, {"oid": "1606da87a444e462534de146761a34b660808fb0", "url": "https://github.com/sleuthkit/autopsy/commit/1606da87a444e462534de146761a34b660808fb0", "message": "6773 fix selection clearing", "committedDate": "2020-10-26T18:28:26Z", "type": "commit"}, {"oid": "993c620455b4bbc8978940511266ee1e5fda48f2", "url": "https://github.com/sleuthkit/autopsy/commit/993c620455b4bbc8978940511266ee1e5fda48f2", "message": "6773 fix resetting of details panel", "committedDate": "2020-10-26T19:04:44Z", "type": "commit"}, {"oid": "7a76f253bef9d48bd56707a33e64f331161cb22a", "url": "https://github.com/sleuthkit/autopsy/commit/7a76f253bef9d48bd56707a33e64f331161cb22a", "message": "6773 fix indexing into model", "committedDate": "2020-10-26T20:41:53Z", "type": "commit"}, {"oid": "377eae975098dd6199edd486d160cd86fb105a38", "url": "https://github.com/sleuthkit/autopsy/commit/377eae975098dd6199edd486d160cd86fb105a38", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer", "committedDate": "2020-10-27T17:01:46Z", "type": "commit"}, {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "url": "https://github.com/sleuthkit/autopsy/commit/f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "message": "6773 adjust comments remove unnecessary code", "committedDate": "2020-10-27T17:08:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNTk1NQ==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r515405955", "bodyText": "\"Constrains\" => \"Constraints\"", "author": "rcordovano", "createdAt": "2020-10-30T22:15:50Z", "path": "Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/CommunicationArtifactViewerHelper.java", "diffHunk": "@@ -109,6 +109,23 @@ static JLabel addHeader(JPanel panel, GridBagLayout gridbagLayout, GridBagConstr\n         return headingLabel;\n     }\n \n+    /**\n+     * Add a key value row to the specified panel with the specified layout and\n+     * constraints.\n+     *\n+     *\n+     * @param panel         Panel to update.\n+     * @param gridbagLayout Layout to use.\n+     * @param constraints   Constrains to use.", "originalCommit": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NjQ0Mg==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516886442", "bodyText": "Fixed, thank you.", "author": "wschaeferB", "createdAt": "2020-11-03T18:53:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNTk1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "988d1a1427c334a5606e1db96cf84f9641884718", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/CommunicationArtifactViewerHelper.java b/Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/CommunicationArtifactViewerHelper.java\nindex ebee74ada2..13e11d2a2d 100644\n--- a/Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/CommunicationArtifactViewerHelper.java\n+++ b/Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/CommunicationArtifactViewerHelper.java\n\n@@ -116,7 +116,7 @@ public static JLabel addHeader(JPanel panel, GridBagLayout gridbagLayout, GridBa\n      *\n      * @param panel         Panel to update.\n      * @param gridbagLayout Layout to use.\n-     * @param constraints   Constrains to use.\n+     * @param constraints   Constraints to use.\n      * @param keyString     Key name to display.\n      * @param valueString   Value string to display.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNjc0MQ==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r515406741", "bodyText": "\"it's\" => \"its\" or even the simpler \"...as a table listing all it's attributes names and values\" => \"...as a table of its attributes\"", "author": "rcordovano", "createdAt": "2020-10-30T22:19:05Z", "path": "Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/DefaultArtifactContentViewer.java", "diffHunk": "@@ -54,15 +54,15 @@\n import java.util.Locale;\n import java.util.Map;\n import javax.swing.SwingUtilities;\n+import org.sleuthkit.autopsy.discovery.ui.AbstractArtifactDetailsPanel;\n //import org.sleuthkit.autopsy.contentviewers.Bundle;\n \n /**\n- * This class displays a Blackboard artifact as a table listing all it's \n+ * This class displays a Blackboard artifact as a table listing all it's", "originalCommit": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4Nzk2Nw==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516887967", "bodyText": "fixed", "author": "wschaeferB", "createdAt": "2020-11-03T18:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNjc0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8fe134cf45acc9d1055858b94a6f3b1a8ea53935", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/DefaultArtifactContentViewer.java b/Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/DefaultArtifactContentViewer.java\nindex eff2ed4561..0c9e41afd6 100644\n--- a/Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/DefaultArtifactContentViewer.java\n+++ b/Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/DefaultArtifactContentViewer.java\n\n@@ -58,8 +58,7 @@\n //import org.sleuthkit.autopsy.contentviewers.Bundle;\n \n /**\n- * This class displays a Blackboard artifact as a table listing all it's\n- * attributes names and values.\n+ * This class displays a Blackboard artifact as a table of its attributes.\n  */\n @SuppressWarnings(\"PMD.SingularField\") // UI widgets cause lots of false positives\n public class DefaultArtifactContentViewer extends AbstractArtifactDetailsPanel implements ArtifactContentViewer {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNzMwMw==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516227303", "bodyText": "If the task is cancelled inside the conditional that starts on line 66, we'll get a CancellationException. I believe it will be caught (and logged) by Swing if we don't catch it ourselves. I think we should add a catch clause for CancellationException (we can ignore the actual exception) just to keep the log cleaner.", "author": "rcordovano", "createdAt": "2020-11-02T20:11:46Z", "path": "Core/src/org/sleuthkit/autopsy/discovery/ui/ArtifactsWorker.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Autopsy\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.discovery.ui;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+import java.util.logging.Level;\n+import javax.swing.SwingWorker;\n+import org.apache.commons.lang3.StringUtils;\n+import org.sleuthkit.autopsy.casemodule.Case;\n+import org.sleuthkit.autopsy.coreutils.Logger;\n+import org.sleuthkit.autopsy.discovery.search.DiscoveryEventUtils;\n+import org.sleuthkit.autopsy.discovery.search.DomainSearch;\n+import org.sleuthkit.autopsy.discovery.search.DomainSearchArtifactsRequest;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+\n+/**\n+ * SwingWorker to retrieve a list of artifacts for a specified type and domain.\n+ */\n+class ArtifactsWorker extends SwingWorker<List<BlackboardArtifact>, Void> {\n+\n+    private final BlackboardArtifact.ARTIFACT_TYPE artifactType;\n+    private final static Logger logger = Logger.getLogger(ArtifactsWorker.class.getName());\n+    private final String domain;\n+\n+    /**\n+     * Construct a new ArtifactsWorker.\n+     *\n+     * @param artifactType The type of artifact being retrieved.\n+     * @param domain       The domain the artifacts should have as an attribute.\n+     */\n+    ArtifactsWorker(BlackboardArtifact.ARTIFACT_TYPE artifactType, String domain) {\n+        this.artifactType = artifactType;\n+        this.domain = domain;\n+    }\n+\n+    @Override\n+    protected List<BlackboardArtifact> doInBackground() throws Exception {\n+        if (artifactType != null && !StringUtils.isBlank(domain)) {\n+            DomainSearch domainSearch = new DomainSearch();\n+            return domainSearch.getArtifacts(new DomainSearchArtifactsRequest(Case.getCurrentCase().getSleuthkitCase(), domain, artifactType));\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    @Override\n+    protected void done() {\n+        List<BlackboardArtifact> listOfArtifacts = new ArrayList<>();\n+        if (!isCancelled()) {\n+            try {\n+                listOfArtifacts.addAll(get());\n+            } catch (InterruptedException | ExecutionException ex) {\n+                logger.log(Level.SEVERE, \"Exception while trying to get list of artifacts for Domain details for artifact type: \"\n+                        + artifactType.getDisplayName() + \" and domain: \" + domain, ex);\n+            }", "originalCommit": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5MjE0Nw==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516992147", "bodyText": "Alright will do.", "author": "wschaeferB", "createdAt": "2020-11-03T22:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNzMwMw=="}], "type": "inlineReview", "revised_code": {"commit": "d83bd002300130dd761f1ce279f5c3e84bd16baf", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/discovery/ui/ArtifactsWorker.java b/Core/src/org/sleuthkit/autopsy/discovery/ui/ArtifactsWorker.java\nindex eeb6870df2..4dd577db49 100644\n--- a/Core/src/org/sleuthkit/autopsy/discovery/ui/ArtifactsWorker.java\n+++ b/Core/src/org/sleuthkit/autopsy/discovery/ui/ArtifactsWorker.java\n\n@@ -71,7 +71,7 @@ protected void done() {\n                         + artifactType.getDisplayName() + \" and domain: \" + domain, ex);\n             }\n         }\n-        DiscoveryEventUtils.getDiscoveryEventBus().post(new DiscoveryEventUtils.ArtifactListRetrievedEvent(artifactType, listOfArtifacts));\n+        DiscoveryEventUtils.getDiscoveryEventBus().post(new DiscoveryEventUtils.ArtifactSearchResultEvent(artifactType, listOfArtifacts));\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzNjQwOQ==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516236409", "bodyText": "Why are detailsWorker, domain and selectedTabName class variables instead of instance variables?\nIf they need to be class variables I recommend adding\n@ThreadConfined(type = ThreadConfined.ThreadType.AWT) \nannotations to make the thread safety policy for variables clear.", "author": "rcordovano", "createdAt": "2020-11-02T20:30:30Z", "path": "Core/src/org/sleuthkit/autopsy/discovery/ui/DomainDetailsPanel.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * Autopsy\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.discovery.ui;\n+\n+import com.google.common.eventbus.Subscribe;\n+import java.awt.Component;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import org.apache.commons.lang.StringUtils;\n+import org.sleuthkit.autopsy.discovery.search.DiscoveryEventUtils;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+import org.sleuthkit.autopsy.discovery.search.SearchData;\n+\n+/**\n+ * Panel to display details area for domain discovery results.\n+ *\n+ */\n+final class DomainDetailsPanel extends JPanel {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static ArtifactsWorker detailsWorker;\n+    private static String domain;\n+    private static String selectedTabName;\n+", "originalCommit": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwMTQwOA==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r517001408", "bodyText": "Domain should definitely be an instance variable and was a mistake where I didn't stop to think about what it should be.\nArtifactsWorker I intended to ensure it was cancelled if the user decided to perform another search although it should be destroyed when this panel is destroyed so that should be unnecessary so I will switch it to a instance variable.\nselectedTabName was intended to be an attempt to preserve the most recently selected tab between searches but it apparently isn't working so I am going to try storing it else where and see if that works as intended either way it will become an instance variable as well.", "author": "wschaeferB", "createdAt": "2020-11-03T22:50:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzNjQwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "629f9abf7332dbe8d9344c3a9b4219ba54da8547", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/discovery/ui/DomainDetailsPanel.java b/Core/src/org/sleuthkit/autopsy/discovery/ui/DomainDetailsPanel.java\nindex d4713b55b1..74495c4736 100644\n--- a/Core/src/org/sleuthkit/autopsy/discovery/ui/DomainDetailsPanel.java\n+++ b/Core/src/org/sleuthkit/autopsy/discovery/ui/DomainDetailsPanel.java\n\n@@ -36,25 +36,27 @@\n final class DomainDetailsPanel extends JPanel {\n \n     private static final long serialVersionUID = 1L;\n-    private static ArtifactsWorker detailsWorker;\n-    private static String domain;\n-    private static String selectedTabName;\n+    private ArtifactsWorker detailsWorker;\n+    private String domain;\n+    private String selectedTabName;\n \n     /**\n-     * Creates new form ArtifactDetailsPanel\n+     * Creates new form ArtifactDetailsPanel.\n      */\n-    DomainDetailsPanel() {\n+    DomainDetailsPanel(String selectedTabName) {\n         initComponents();\n-        addArtifactTabs();\n+        addArtifactTabs(selectedTabName);\n+        \n     }\n \n     /**\n      * Add the tabs for each of the artifact types which we will be displaying.\n      */\n-    private void addArtifactTabs() {\n+    private void addArtifactTabs(String tabName) {\n         for (BlackboardArtifact.ARTIFACT_TYPE type : SearchData.Type.DOMAIN.getArtifactTypes()) {\n             jTabbedPane1.add(type.getDisplayName(), new DomainArtifactsTabPanel(type));\n         }\n+        selectedTabName = tabName;\n         selectTab();\n         jTabbedPane1.addChangeListener(new ChangeListener() {\n             @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NjIzOQ==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516276239", "bodyText": "It seems that it is valid for this event to be published with an empty list, with the effect of clearing the GUI. If I have interpreted this correctly, I suggest we name this class something like \"ArtifactSearchResult.\"", "author": "rcordovano", "createdAt": "2020-11-02T21:53:00Z", "path": "Core/src/org/sleuthkit/autopsy/discovery/search/DiscoveryEventUtils.java", "diffHunk": "@@ -203,6 +229,47 @@ public SearchCompleteEvent(Map<GroupKey, Integer> groupMap, List<AbstractFilter>\n \n     }\n \n+    /**\n+     * Event to signal the completion of a search being performed.\n+     */\n+    public static final class ArtifactListRetrievedEvent {", "originalCommit": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyOTAxMQ==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516829011", "bodyText": "Yes you have interpreted that correctly as there may be no artifacts in the results of the search, so using it made sense to use the one event for both clearing and results since the effect of 0 results should be the same as a clear.\nI agree your name is a definite improvement and will change it.", "author": "wschaeferB", "createdAt": "2020-11-03T17:14:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NjIzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "d83bd002300130dd761f1ce279f5c3e84bd16baf", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/discovery/search/DiscoveryEventUtils.java b/Core/src/org/sleuthkit/autopsy/discovery/search/DiscoveryEventUtils.java\nindex 4171dc989c..0b9a0a98c1 100644\n--- a/Core/src/org/sleuthkit/autopsy/discovery/search/DiscoveryEventUtils.java\n+++ b/Core/src/org/sleuthkit/autopsy/discovery/search/DiscoveryEventUtils.java\n\n@@ -232,19 +232,19 @@ public SearchCompleteEvent(Map<GroupKey, Integer> groupMap, List<AbstractFilter>\n     /**\n      * Event to signal the completion of a search being performed.\n      */\n-    public static final class ArtifactListRetrievedEvent {\n+    public static final class ArtifactSearchResultEvent {\n \n         private final List<BlackboardArtifact> listOfArtifacts = new ArrayList<>();\n         private final BlackboardArtifact.ARTIFACT_TYPE artifactType;\n \n         /**\n-         * Construct a new ArtifactListRetrievedEvent with a list of specified\n+         * Construct a new ArtifactSearchResultEvent with a list of specified\n          * artifacts and an artifact type.\n          *\n          * @param artifactType    The type of artifacts in the list.\n          * @param listOfArtifacts The list of artifacts retrieved.\n          */\n-        public ArtifactListRetrievedEvent(BlackboardArtifact.ARTIFACT_TYPE artifactType, List<BlackboardArtifact> listOfArtifacts) {\n+        public ArtifactSearchResultEvent(BlackboardArtifact.ARTIFACT_TYPE artifactType, List<BlackboardArtifact> listOfArtifacts) {\n             if (listOfArtifacts != null) {\n                 this.listOfArtifacts.addAll(listOfArtifacts);\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3ODQzOQ==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516278439", "bodyText": "I'm not sure why this code is synchronized. Is this method used?", "author": "rcordovano", "createdAt": "2020-11-02T21:57:38Z", "path": "Core/src/org/sleuthkit/autopsy/discovery/ui/DomainSummaryViewer.java", "diffHunk": "@@ -83,4 +85,31 @@ void addDomain(DomainWrapper domainWrapper) {\n             domainListModel.addElement(domainWrapper);\n         }\n     }\n+\n+    /**\n+     * Get the list of AbstractFiles which are represented by the selected\n+     * document preview.\n+     *\n+     * @return The list of AbstractFiles which are represented by the selected\n+     *         document preview.\n+     */\n+    String getDomainForSelected() {\n+        synchronized (this) {", "originalCommit": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkwODkwMQ==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516908901", "bodyText": "I had two places I was calling it, apparently I removed one it is still called in the DomainSummaryViewer's ListSelectionListener. I think I was concerned about the contents of the list or the current selection changing while things were happening so I attempted to synchronize all access to the list and listmodel. I will message you regarding what I should be doing regarding synchronization here.\nIn the mean time because I am now only calling it in one place I have refactored the code so that this method makes more sense and is easier to read. It is now void sendPopulateEvent(boolean useDomain) and have fixed the comment.", "author": "wschaeferB", "createdAt": "2020-11-03T19:34:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3ODQzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "d83bd002300130dd761f1ce279f5c3e84bd16baf", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/discovery/ui/DomainSummaryViewer.java b/Core/src/org/sleuthkit/autopsy/discovery/ui/DomainSummaryViewer.java\nindex 935af9fa37..331fb8fa9d 100644\n--- a/Core/src/org/sleuthkit/autopsy/discovery/ui/DomainSummaryViewer.java\n+++ b/Core/src/org/sleuthkit/autopsy/discovery/ui/DomainSummaryViewer.java\n\n@@ -87,20 +88,24 @@ void addDomain(DomainWrapper domainWrapper) {\n     }\n \n     /**\n-     * Get the list of AbstractFiles which are represented by the selected\n-     * document preview.\n+     * Send an event to perform the population of the domain details tabs to\n+     * reflect the currently selected domain. Will populate the list with\n+     * nothing when a domain is not used.\n      *\n-     * @return The list of AbstractFiles which are represented by the selected\n-     *         document preview.\n+     * @param useDomain If the currently selected domain should be used to\n+     *                  retrieve a list.\n      */\n-    String getDomainForSelected() {\n-        synchronized (this) {\n-            if (domainList.getSelectedIndex() == -1) {\n-                return \"\";\n-            } else {\n-                return domainListModel.getElementAt(domainList.getSelectedIndex()).getResultDomain().getDomain();\n+    void sendPopulateEvent(boolean useDomain) {\n+        String domain = \"\";\n+        if (useDomain) {\n+            synchronized (this) {\n+                if (domainList.getSelectedIndex() != -1) {\n+                    domain = domainListModel.getElementAt(domainList.getSelectedIndex()).getResultDomain().getDomain();\n+                }\n             }\n         }\n+        //send populateMesage\n+        DiscoveryEventUtils.getDiscoveryEventBus().post(new DiscoveryEventUtils.PopulateDomainTabsEvent(domain));\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3OTMxMg==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516279312", "bodyText": "\"artifacts details\" => \"artifact's details\"", "author": "rcordovano", "createdAt": "2020-11-02T21:59:22Z", "path": "Core/src/org/sleuthkit/autopsy/discovery/ui/WebHistoryDetailsPanel.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*\n+ * Autopsy\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.discovery.ui;\n+\n+import java.awt.Component;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.logging.Level;\n+import javax.swing.JScrollPane;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.sleuthkit.autopsy.contentviewers.artifactviewers.ArtifactContentViewer;\n+import org.sleuthkit.autopsy.contentviewers.artifactviewers.CommunicationArtifactViewerHelper;\n+import org.sleuthkit.autopsy.coreutils.Logger;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+import org.sleuthkit.datamodel.BlackboardAttribute;\n+import org.sleuthkit.datamodel.TskCoreException;\n+\n+/**\n+ * Panel to display the details for a Web History Artifact.\n+ */\n+@ServiceProvider(service = ArtifactContentViewer.class)\n+public class WebHistoryDetailsPanel extends AbstractArtifactDetailsPanel implements ArtifactContentViewer {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static final Logger logger = Logger.getLogger(WebHistoryDetailsPanel.class.getName());\n+    private BlackboardArtifact webHistoryArtifact;\n+    private final GridBagLayout gridBagLayout = new GridBagLayout();\n+    private final List<BlackboardAttribute> urlList = new ArrayList<>();\n+    private final List<BlackboardAttribute> dateAccessedList = new ArrayList<>();\n+    private final List<BlackboardAttribute> referrerUrlList = new ArrayList<>();\n+    private final List<BlackboardAttribute> titleList = new ArrayList<>();\n+    private final List<BlackboardAttribute> programNameList = new ArrayList<>();\n+    private final List<BlackboardAttribute> domainList = new ArrayList<>();\n+    private final List<BlackboardAttribute> otherList = new ArrayList<>();\n+    private final List<BlackboardAttribute> artifactAttributesList = new ArrayList<>();\n+    private final GridBagConstraints gridBagConstraints = new GridBagConstraints();\n+    private String dataSourceName;\n+    private String sourceFileName;\n+\n+    /**\n+     * Creates new form WebHistoryDetailsPanel.\n+     */\n+    public WebHistoryDetailsPanel() {\n+        initComponents();\n+    }\n+\n+    @Override\n+    public void setArtifact(BlackboardArtifact artifact) {\n+        resetComponent();\n+        if (artifact != null) {\n+            try {\n+                extractArtifactData(artifact);\n+            } catch (TskCoreException ex) {\n+                logger.log(Level.WARNING, \"Unable to get attributes for artifact \" + artifact.getArtifactID(), ex);\n+            }\n+            updateView();\n+        }\n+        this.setLayout(this.gridBagLayout);\n+        this.revalidate();\n+        this.repaint();\n+    }\n+\n+    /**\n+     * Extracts data from the artifact to be displayed in the panel.\n+     *\n+     * @param artifact Artifact to show.\n+     *\n+     * @throws TskCoreException\n+     */\n+    private void extractArtifactData(BlackboardArtifact artifact) throws TskCoreException {\n+\n+        webHistoryArtifact = artifact;\n+        artifactAttributesList.addAll(webHistoryArtifact.getAttributes());\n+        // Get all the attributes and group them by the section panels they go in\n+        for (BlackboardAttribute bba : artifactAttributesList) {\n+            if (bba.getAttributeType().getTypeName().startsWith(\"TSK_URL\")) {\n+                urlList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_PROG_NAME\")) {\n+                programNameList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_DOMAIN\")) {\n+                domainList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_REFERRER\")) {\n+                referrerUrlList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_DATETIME_ACCESSED\")) {\n+                dateAccessedList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_TITLE\")) {\n+                titleList.add(bba);\n+            } else {\n+                otherList.add(bba);\n+            }\n+\n+        }\n+\n+        dataSourceName = webHistoryArtifact.getDataSource().getName();\n+        sourceFileName = webHistoryArtifact.getParent().getName();\n+    }\n+\n+    /**\n+     * Reset the panel so that it is empty.\n+     */\n+    private void resetComponent() {\n+        // clear the panel \n+        this.removeAll();\n+        gridBagConstraints.anchor = GridBagConstraints.FIRST_LINE_START;\n+        gridBagConstraints.gridy = 0;\n+        gridBagConstraints.gridx = 0;\n+        gridBagConstraints.weighty = 0.0;\n+        gridBagConstraints.weightx = 0.0;    // keep components fixed horizontally.\n+        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);\n+        gridBagConstraints.fill = GridBagConstraints.NONE;\n+        webHistoryArtifact = null;\n+        dataSourceName = null;\n+        sourceFileName = null;\n+        urlList.clear();\n+        dateAccessedList.clear();\n+        referrerUrlList.clear();\n+        titleList.clear();\n+        programNameList.clear();\n+        domainList.clear();\n+        otherList.clear();\n+        artifactAttributesList.clear();\n+\n+    }\n+\n+    @Override\n+    public Component getComponent() {\n+        // Slap a vertical scrollbar on the panel.\n+        return new JScrollPane(this, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n+    }\n+\n+    @Override\n+    public boolean isSupported(BlackboardArtifact artifact) {\n+        return (artifact != null)\n+                && (artifact.getArtifactTypeID() == BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY.getTypeID());\n+    }\n+\n+    @NbBundle.Messages({\"WebHistoryDetailsPanel.details.attrHeader=Attributes\",\n+        \"WebHistoryDetailsPanel.details.sourceHeader=Source\",\n+        \"WebHistoryDetailsPanel.details.dataSource=Data Source\",\n+        \"WebHistoryDetailsPanel.details.file=File\"})\n+    /**\n+     * This method is called from within the constructor to initialize the form.\n+     * WARNING: Do NOT modify this code. The content of this method is always\n+     * regenerated by the Form Editor.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n+    private void initComponents() {\n+\n+        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n+        this.setLayout(layout);\n+        layout.setHorizontalGroup(\n+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+            .addGap(0, 400, Short.MAX_VALUE)\n+        );\n+        layout.setVerticalGroup(\n+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+            .addGap(0, 300, Short.MAX_VALUE)\n+        );\n+    }// </editor-fold>//GEN-END:initComponents\n+\n+    /**\n+     * Update the view to reflect the current artifacts details.", "originalCommit": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NTUxMw==", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516885513", "bodyText": "Fixed, thank you.", "author": "wschaeferB", "createdAt": "2020-11-03T18:52:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3OTMxMg=="}], "type": "inlineReview", "revised_code": {"commit": "56b095046c99ab818b28cf1237f53b0dd9441ff9", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/discovery/ui/WebHistoryDetailsPanel.java b/Core/src/org/sleuthkit/autopsy/discovery/ui/WebHistoryDetailsPanel.java\nindex 28001b82d4..72f33f993e 100644\n--- a/Core/src/org/sleuthkit/autopsy/discovery/ui/WebHistoryDetailsPanel.java\n+++ b/Core/src/org/sleuthkit/autopsy/discovery/ui/WebHistoryDetailsPanel.java\n\n@@ -179,7 +179,7 @@ private void initComponents() {\n     }// </editor-fold>//GEN-END:initComponents\n \n     /**\n-     * Update the view to reflect the current artifacts details.\n+     * Update the view to reflect the current artifact's details.\n      */\n     private void updateView() {\n         CommunicationArtifactViewerHelper.addHeader(this, gridBagLayout, gridBagConstraints, Bundle.WebHistoryDetailsPanel_details_attrHeader());\n"}}, {"oid": "988d1a1427c334a5606e1db96cf84f9641884718", "url": "https://github.com/sleuthkit/autopsy/commit/988d1a1427c334a5606e1db96cf84f9641884718", "message": "6773 fix spelling of constraints", "committedDate": "2020-11-03T18:51:10Z", "type": "commit"}, {"oid": "56b095046c99ab818b28cf1237f53b0dd9441ff9", "url": "https://github.com/sleuthkit/autopsy/commit/56b095046c99ab818b28cf1237f53b0dd9441ff9", "message": "6773 fix apostraphe", "committedDate": "2020-11-03T18:53:19Z", "type": "commit"}, {"oid": "8fe134cf45acc9d1055858b94a6f3b1a8ea53935", "url": "https://github.com/sleuthkit/autopsy/commit/8fe134cf45acc9d1055858b94a6f3b1a8ea53935", "message": "6773 fix comment", "committedDate": "2020-11-03T18:55:43Z", "type": "commit"}, {"oid": "d83bd002300130dd761f1ce279f5c3e84bd16baf", "url": "https://github.com/sleuthkit/autopsy/commit/d83bd002300130dd761f1ce279f5c3e84bd16baf", "message": "6773 refactor code for clarity", "committedDate": "2020-11-03T19:34:23Z", "type": "commit"}, {"oid": "629f9abf7332dbe8d9344c3a9b4219ba54da8547", "url": "https://github.com/sleuthkit/autopsy/commit/629f9abf7332dbe8d9344c3a9b4219ba54da8547", "message": "6773 catch cancelation exception, instance variables", "committedDate": "2020-11-04T01:35:59Z", "type": "commit"}, {"oid": "c98c2838dee2ac604a047ad0e4d592b987d388e8", "url": "https://github.com/sleuthkit/autopsy/commit/c98c2838dee2ac604a047ad0e4d592b987d388e8", "message": "6773 add comment", "committedDate": "2020-11-04T01:37:16Z", "type": "commit"}, {"oid": "1a791c437bc5f14188df7fa83948538cb6120971", "url": "https://github.com/sleuthkit/autopsy/commit/1a791c437bc5f14188df7fa83948538cb6120971", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer", "committedDate": "2020-11-04T01:40:39Z", "type": "commit"}, {"oid": "8363f220999e7955af064b9a16d68d0966480f05", "url": "https://github.com/sleuthkit/autopsy/commit/8363f220999e7955af064b9a16d68d0966480f05", "message": "6773 remove ui synchronization annotate thread confined", "committedDate": "2020-11-05T17:49:30Z", "type": "commit"}, {"oid": "5a019896f12e1f92a3318116ca398e5e376d71f9", "url": "https://github.com/sleuthkit/autopsy/commit/5a019896f12e1f92a3318116ca398e5e376d71f9", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer", "committedDate": "2020-11-05T17:57:21Z", "type": "commit"}, {"oid": "e2634a4535b1054835d6725bdd8224d5ee8ff8a5", "url": "https://github.com/sleuthkit/autopsy/commit/e2634a4535b1054835d6725bdd8224d5ee8ff8a5", "message": "6773 fix annotations", "committedDate": "2020-11-05T20:24:42Z", "type": "commit"}]}