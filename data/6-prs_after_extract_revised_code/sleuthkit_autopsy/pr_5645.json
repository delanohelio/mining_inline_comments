{"pr_number": 5645, "pr_title": "6038:  CR schema creation refactoring - unify the SQL ", "pr_createdAt": "2020-02-11T17:03:47Z", "pr_url": "https://github.com/sleuthkit/autopsy/pull/5645", "timeline": [{"oid": "cc7ed224ffbae0a190e3645dea130132928811e6", "url": "https://github.com/sleuthkit/autopsy/commit/cc7ed224ffbae0a190e3645dea130132928811e6", "message": "Interim commit - isolated scheme creation code from DBSettings classes and put them in the new RdmsCentralRepoSchemaFactory.", "committedDate": "2020-02-06T21:25:06Z", "type": "commit"}, {"oid": "3877804a7c1274d56d55b4aa28e65344c766091f", "url": "https://github.com/sleuthkit/autopsy/commit/3877804a7c1274d56d55b4aa28e65344c766091f", "message": "Interim commit\n - The schema creation code between SQLite and PostGres has been compared, the differences are reconciled but there is still a fair bit of duplicate code, which should be easy to eliminate now.", "committedDate": "2020-02-10T19:13:27Z", "type": "commit"}, {"oid": "ed1443aa6817c0ac2e17f7adcbf95b2f464d7db2", "url": "https://github.com/sleuthkit/autopsy/commit/ed1443aa6817c0ac2e17f7adcbf95b2f464d7db2", "message": "Unified the SQL for schema creation.", "committedDate": "2020-02-11T15:54:31Z", "type": "commit"}, {"oid": "b79b91f502f68f28627679ea47bcdb65b30b333e", "url": "https://github.com/sleuthkit/autopsy/commit/b79b91f502f68f28627679ea47bcdb65b30b333e", "message": "Removed commented code.", "committedDate": "2020-02-11T16:17:28Z", "type": "commit"}, {"oid": "ac8256b10254ec4072ddccadb51ce8084ec38a11", "url": "https://github.com/sleuthkit/autopsy/commit/ac8256b10254ec4072ddccadb51ce8084ec38a11", "message": "Removed commented code.", "committedDate": "2020-02-11T16:58:09Z", "type": "commit"}, {"oid": "44d5a8576142007bb8fea712c65676aeb54312ab", "url": "https://github.com/sleuthkit/autopsy/commit/44d5a8576142007bb8fea712c65676aeb54312ab", "message": "Fixed Codacy comments.", "committedDate": "2020-02-12T16:41:48Z", "type": "commit"}, {"oid": "876fc0b10be51ba3945cf76d5ab7283aaba33fd9", "url": "https://github.com/sleuthkit/autopsy/commit/876fc0b10be51ba3945cf76d5ab7283aaba33fd9", "message": "Address Codacy comments.", "committedDate": "2020-02-12T17:04:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMDQyNA==", "url": "https://github.com/sleuthkit/autopsy/pull/5645#discussion_r379420424", "bodyText": "Could we reduce code duplication here by storing the database type in a variable and having the same code for both cases?", "author": "APriestman", "createdAt": "2020-02-14T13:07:05Z", "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/RdbmsCentralRepo.java", "diffHunk": "@@ -3414,22 +3418,22 @@ public void upgradeSchema() throws CentralRepoException, SQLException, Incompati\n                     case POSTGRESQL:\n                         addAttributeSql = \"INSERT INTO correlation_types(id, display_name, db_table_name, supported, enabled) VALUES (?, ?, ?, ?, ?) \" + getConflictClause();  //NON-NLS\n \n-                        addSsidTableTemplate = PostgresCentralRepoSettings.getCreateArtifactInstancesTableTemplate();\n-                        addCaseIdIndexTemplate = PostgresCentralRepoSettings.getAddCaseIdIndexTemplate();\n-                        addDataSourceIdIndexTemplate = PostgresCentralRepoSettings.getAddDataSourceIdIndexTemplate();\n-                        addValueIndexTemplate = PostgresCentralRepoSettings.getAddValueIndexTemplate();\n-                        addKnownStatusIndexTemplate = PostgresCentralRepoSettings.getAddKnownStatusIndexTemplate();\n-                        addObjectIdIndexTemplate = PostgresCentralRepoSettings.getAddObjectIdIndexTemplate();\n+                        addSsidTableTemplate = RdbmsCentralRepoSchemaFactory.getCreateArtifactInstancesTableTemplate(CentralRepoPlatforms.POSTGRESQL);\n+                        addCaseIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddCaseIdIndexTemplate();\n+                        addDataSourceIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddDataSourceIdIndexTemplate();\n+                        addValueIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddValueIndexTemplate();\n+                        addKnownStatusIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddKnownStatusIndexTemplate();\n+                        addObjectIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddObjectIdIndexTemplate();", "originalCommit": "876fc0b10be51ba3945cf76d5ab7283aaba33fd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "458bd200f2b7fd0b082b5b3f0d534412b9574f88", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/RdbmsCentralRepo.java b/Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/RdbmsCentralRepo.java\nindex ef92944048..3afeec41eb 100644\n--- a/Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/RdbmsCentralRepo.java\n+++ b/Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/RdbmsCentralRepo.java\n\n@@ -3405,39 +3405,27 @@ public void upgradeSchema() throws CentralRepoException, SQLException, Incompati\n              */\n             if (dbSchemaVersion.compareTo(new CaseDbSchemaVersionNumber(1, 2)) < 0) {\n                 final String addIntegerColumnTemplate = \"ALTER TABLE %s ADD COLUMN %s INTEGER;\";  //NON-NLS\n-                final String addSsidTableTemplate;\n-                final String addCaseIdIndexTemplate;\n-                final String addDataSourceIdIndexTemplate;\n-                final String addValueIndexTemplate;\n-                final String addKnownStatusIndexTemplate;\n-                final String addObjectIdIndexTemplate;\n+                \n+                final String addSsidTableTemplate = RdbmsCentralRepoSchemaFactory.getCreateArtifactInstancesTableTemplate(selectedPlatform);\n+                final String addCaseIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddCaseIdIndexTemplate();\n+                final String addDataSourceIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddDataSourceIdIndexTemplate();\n+                final String addValueIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddValueIndexTemplate();\n+                final String addKnownStatusIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddKnownStatusIndexTemplate();\n+                final String addObjectIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddObjectIdIndexTemplate();\n \n                 final String addAttributeSql;\n                 //get the data base specific code for creating a new _instance table\n                 switch (selectedPlatform) {\n                     case POSTGRESQL:\n                         addAttributeSql = \"INSERT INTO correlation_types(id, display_name, db_table_name, supported, enabled) VALUES (?, ?, ?, ?, ?) \" + getConflictClause();  //NON-NLS\n-\n-                        addSsidTableTemplate = RdbmsCentralRepoSchemaFactory.getCreateArtifactInstancesTableTemplate(CentralRepoPlatforms.POSTGRESQL);\n-                        addCaseIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddCaseIdIndexTemplate();\n-                        addDataSourceIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddDataSourceIdIndexTemplate();\n-                        addValueIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddValueIndexTemplate();\n-                        addKnownStatusIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddKnownStatusIndexTemplate();\n-                        addObjectIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddObjectIdIndexTemplate();\n                         break;\n                     case SQLITE:\n                         addAttributeSql = \"INSERT OR IGNORE INTO correlation_types(id, display_name, db_table_name, supported, enabled) VALUES (?, ?, ?, ?, ?)\";  //NON-NLS\n-\n-                        addSsidTableTemplate = RdbmsCentralRepoSchemaFactory.getCreateArtifactInstancesTableTemplate(CentralRepoPlatforms.SQLITE);\n-                        addCaseIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddCaseIdIndexTemplate();\n-                        addDataSourceIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddDataSourceIdIndexTemplate();\n-                        addValueIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddValueIndexTemplate();\n-                        addKnownStatusIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddKnownStatusIndexTemplate();\n-                        addObjectIdIndexTemplate = RdbmsCentralRepoSchemaFactory.getAddObjectIdIndexTemplate();\n                         break;\n                     default:\n                         throw new CentralRepoException(\"Currently selected database platform \\\"\" + selectedPlatform.name() + \"\\\" can not be upgraded.\", Bundle.AbstractSqlEamDb_cannotUpgrage_message(selectedPlatform.name()));\n                 }\n+                \n                 final String dataSourcesTableName = \"data_sources\";\n                 final String dataSourceObjectIdColumnName = \"datasource_obj_id\";\n                 if (!doesColumnExist(conn, dataSourcesTableName, dataSourceObjectIdColumnName)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMDg3Nw==", "url": "https://github.com/sleuthkit/autopsy/pull/5645#discussion_r379420877", "bodyText": "Was this intended to be done for this PR?", "author": "APriestman", "createdAt": "2020-02-14T13:08:18Z", "path": "Core/src/org/sleuthkit/autopsy/centralrepository/optionspanel/EamDbSettingsDialog.java", "diffHunk": "@@ -447,12 +448,19 @@ private void createDb() {\n                     dbCreated = dbSettingsPostgres.createDatabase();\n                 }\n                 if (dbCreated) {\n-                    result = dbSettingsPostgres.initializeDatabaseSchema()\n-                            && dbSettingsPostgres.insertDefaultDatabaseContent();\n+                    try {\n+                        RdbmsCentralRepoSchemaFactory centralRepoSchemaFactory = new RdbmsCentralRepoSchemaFactory(selectedPlatform);\n+                        \n+                        result = centralRepoSchemaFactory.initializeDatabaseSchema()\n+                            && centralRepoSchemaFactory.insertDefaultDatabaseContent();\n+                    } catch (CentralRepoException ex) {\n+                       logger.log( Level.SEVERE, \"Unable to initialize database schema or insert contents into Postgres central repository.\", ex);\n+                    }\n                 }\n                 if (!result) {\n                     // Remove the incomplete database\n                     if (dbCreated) {\n+                        // RAMAN TBD: migrate  deleteDatabase() to RdbmsCentralRepoSchemaFactory", "originalCommit": "876fc0b10be51ba3945cf76d5ab7283aaba33fd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxMzcwOA==", "url": "https://github.com/sleuthkit/autopsy/pull/5645#discussion_r379513708", "bodyText": "Not for this PR", "author": "raman-bt", "createdAt": "2020-02-14T16:06:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMDg3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "458bd200f2b7fd0b082b5b3f0d534412b9574f88", "chunk": "diff --git a/Core/src/org/sleuthkit/autopsy/centralrepository/optionspanel/EamDbSettingsDialog.java b/Core/src/org/sleuthkit/autopsy/centralrepository/optionspanel/EamDbSettingsDialog.java\nindex d7142beba3..c232a01dc9 100644\n--- a/Core/src/org/sleuthkit/autopsy/centralrepository/optionspanel/EamDbSettingsDialog.java\n+++ b/Core/src/org/sleuthkit/autopsy/centralrepository/optionspanel/EamDbSettingsDialog.java\n\n@@ -449,12 +449,12 @@ private void createDb() {\n                 }\n                 if (dbCreated) {\n                     try {\n-                        RdbmsCentralRepoSchemaFactory centralRepoSchemaFactory = new RdbmsCentralRepoSchemaFactory(selectedPlatform);\n-                        \n+                        RdbmsCentralRepoSchemaFactory centralRepoSchemaFactory = new RdbmsCentralRepoSchemaFactory(selectedPlatform, dbSettingsPostgres);\n+\n                         result = centralRepoSchemaFactory.initializeDatabaseSchema()\n-                            && centralRepoSchemaFactory.insertDefaultDatabaseContent();\n+                                && centralRepoSchemaFactory.insertDefaultDatabaseContent();\n                     } catch (CentralRepoException ex) {\n-                       logger.log( Level.SEVERE, \"Unable to initialize database schema or insert contents into Postgres central repository.\", ex);\n+                        logger.log(Level.SEVERE, \"Unable to initialize database schema or insert contents into Postgres central repository.\", ex);\n                     }\n                 }\n                 if (!result) {\n"}}, {"oid": "458bd200f2b7fd0b082b5b3f0d534412b9574f88", "url": "https://github.com/sleuthkit/autopsy/commit/458bd200f2b7fd0b082b5b3f0d534412b9574f88", "message": "Addressed comments from review & verification test.", "committedDate": "2020-02-14T20:26:28Z", "type": "commit"}, {"oid": "239f856f51f612758299c6cb403e9b059d0ce8ba", "url": "https://github.com/sleuthkit/autopsy/commit/239f856f51f612758299c6cb403e9b059d0ce8ba", "message": "Renamed class  RdbmsCentralRepoSchemaFactory to RdbmsCentralRepoFactory.", "committedDate": "2020-02-18T17:54:29Z", "type": "commit"}]}