{"pr_number": 586, "pr_title": "[eclipse/xtext#1679] ported more code from xtend 2 java", "pr_createdAt": "2020-04-14T14:44:01Z", "pr_url": "https://github.com/eclipse/xtext-extras/pull/586", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDA0MA==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408194040", "bodyText": "Unneeded finals", "author": "tivervac", "createdAt": "2020-04-14T14:45:09Z", "path": "org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BlankLineKey.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*******************************************************************************\n+ * Copyright (c) 2012, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xbase.formatting;\n+\n+import org.eclipse.xtext.xbase.formatting.IntegerKey;\n+\n+/**\n+ * @deprecated use {@link org.eclipse.xtext.xbase.formatting2.BlankLineKey}\n+ */\n+@Deprecated\n+public class BlankLineKey extends IntegerKey {\n+  public BlankLineKey(final String name, final Integer defaultValue) {", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d526493e296594ec9a736614956e458f437c8823", "chunk": "diff --git a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BlankLineKey.java b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BlankLineKey.java\nindex e465ef93f..acf009dfb 100644\n--- a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BlankLineKey.java\n+++ b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BlankLineKey.java\n\n@@ -15,7 +15,7 @@ import org.eclipse.xtext.xbase.formatting.IntegerKey;\n  */\n @Deprecated\n public class BlankLineKey extends IntegerKey {\n-  public BlankLineKey(final String name, final Integer defaultValue) {\n-    super(name, defaultValue);\n-  }\n+\tpublic BlankLineKey(String name, Integer defaultValue) {\n+\t\tsuper(name, defaultValue);\n+\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDE4OQ==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408194189", "bodyText": "Unneeded finals", "author": "tivervac", "createdAt": "2020-04-14T14:45:20Z", "path": "org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BooleanKey.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*******************************************************************************\n+ * Copyright (c) 2012, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xbase.formatting;\n+\n+import org.eclipse.xtext.preferences.PreferenceKey;\n+\n+/**\n+ * @deprecated use {@link org.eclipse.xtext.preferences.BooleanKey}\n+ */\n+@Deprecated\n+public class BooleanKey extends PreferenceKey {\n+  public BooleanKey(final String name, final boolean defaultValue) {", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d526493e296594ec9a736614956e458f437c8823", "chunk": "diff --git a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BooleanKey.java b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BooleanKey.java\nindex 4322e20eb..99deaeabe 100644\n--- a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BooleanKey.java\n+++ b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/BooleanKey.java\n\n@@ -15,7 +15,7 @@ import org.eclipse.xtext.preferences.PreferenceKey;\n  */\n @Deprecated\n public class BooleanKey extends PreferenceKey {\n-  public BooleanKey(final String name, final boolean defaultValue) {\n-    super(name, Boolean.valueOf(defaultValue).toString());\n-  }\n+\tpublic BooleanKey(String name, boolean defaultValue) {\n+\t\tsuper(name, Boolean.valueOf(defaultValue).toString());\n+\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDI2OQ==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408194269", "bodyText": "Unneeded finals", "author": "tivervac", "createdAt": "2020-04-14T14:45:26Z", "path": "org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/IntegerKey.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*******************************************************************************\n+ * Copyright (c) 2012, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xbase.formatting;\n+\n+import org.eclipse.xtext.preferences.PreferenceKey;\n+\n+/**\n+ * @deprecated use {@link org.eclipse.xtext.preferences.IntegerKey}\n+ */\n+@Deprecated\n+public class IntegerKey extends PreferenceKey {\n+  public IntegerKey(final String name, final Integer defaultValue) {", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d526493e296594ec9a736614956e458f437c8823", "chunk": "diff --git a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/IntegerKey.java b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/IntegerKey.java\nindex d5a24130f..d677d45e8 100644\n--- a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/IntegerKey.java\n+++ b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/IntegerKey.java\n\n@@ -15,7 +15,7 @@ import org.eclipse.xtext.preferences.PreferenceKey;\n  */\n @Deprecated\n public class IntegerKey extends PreferenceKey {\n-  public IntegerKey(final String name, final Integer defaultValue) {\n-    super(name, defaultValue.toString());\n-  }\n+\tpublic IntegerKey(String name, Integer defaultValue) {\n+\t\tsuper(name, defaultValue.toString());\n+\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDM3Ng==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408194376", "bodyText": "Unneeded finals", "author": "tivervac", "createdAt": "2020-04-14T14:45:35Z", "path": "org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineKey.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*******************************************************************************\n+ * Copyright (c) 2012, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xbase.formatting;\n+\n+import org.eclipse.xtext.xbase.formatting.BooleanKey;\n+\n+/**\n+ * @deprecated use {@link org.eclipse.xtext.xbase.formatting2.NewLineKey}\n+ */\n+@Deprecated\n+public class NewLineKey extends BooleanKey {\n+  public NewLineKey(final String name, final Boolean defaultValue) {", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d526493e296594ec9a736614956e458f437c8823", "chunk": "diff --git a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineKey.java b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineKey.java\nindex ea9279d4a..30e69bf9f 100644\n--- a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineKey.java\n+++ b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineKey.java\n\n@@ -15,7 +15,7 @@ import org.eclipse.xtext.xbase.formatting.BooleanKey;\n  */\n @Deprecated\n public class NewLineKey extends BooleanKey {\n-  public NewLineKey(final String name, final Boolean defaultValue) {\n-    super(name, (defaultValue).booleanValue());\n-  }\n+\tpublic NewLineKey(String name, Boolean defaultValue) {\n+\t\tsuper(name, (defaultValue).booleanValue());\n+\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDQ2NA==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408194464", "bodyText": "Unneeded finals", "author": "tivervac", "createdAt": "2020-04-14T14:45:42Z", "path": "org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineOrPreserveKey.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*******************************************************************************\n+ * Copyright (c) 2012, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xbase.formatting;\n+\n+import org.eclipse.xtext.xbase.formatting.BooleanKey;\n+\n+/**\n+ * @deprecated use {@link org.eclipse.xtext.xbase.formatting2.NewLineOrPreserveKey}\n+ */\n+@Deprecated\n+public class NewLineOrPreserveKey extends BooleanKey {\n+  public NewLineOrPreserveKey(final String name, final Boolean defaultValue) {", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d526493e296594ec9a736614956e458f437c8823", "chunk": "diff --git a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineOrPreserveKey.java b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineOrPreserveKey.java\nindex 1021cda7f..b10e7af7f 100644\n--- a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineOrPreserveKey.java\n+++ b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/NewLineOrPreserveKey.java\n\n@@ -11,11 +11,12 @@ package org.eclipse.xtext.xbase.formatting;\n import org.eclipse.xtext.xbase.formatting.BooleanKey;\n \n /**\n- * @deprecated use {@link org.eclipse.xtext.xbase.formatting2.NewLineOrPreserveKey}\n+ * @deprecated use\n+ * {@link org.eclipse.xtext.xbase.formatting2.NewLineOrPreserveKey}\n  */\n @Deprecated\n public class NewLineOrPreserveKey extends BooleanKey {\n-  public NewLineOrPreserveKey(final String name, final Boolean defaultValue) {\n-    super(name, (defaultValue).booleanValue());\n-  }\n+\tpublic NewLineOrPreserveKey(String name, Boolean defaultValue) {\n+\t\tsuper(name, (defaultValue).booleanValue());\n+\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDYzNg==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408194636", "bodyText": "Unneeded finals", "author": "tivervac", "createdAt": "2020-04-14T14:45:54Z", "path": "org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/StringKey.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*******************************************************************************\n+ * Copyright (c) 2012, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xbase.formatting;\n+\n+import org.eclipse.xtext.preferences.PreferenceKey;\n+\n+/**\n+ * @deprecated use {@link org.eclipse.xtext.preferences.StringKey}\n+ */\n+@Deprecated\n+public class StringKey extends PreferenceKey {\n+  public StringKey(final String id, final String defaultValue) {", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d526493e296594ec9a736614956e458f437c8823", "chunk": "diff --git a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/StringKey.java b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/StringKey.java\nindex f39b5ee27..d788fe1ba 100644\n--- a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/StringKey.java\n+++ b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/StringKey.java\n\n@@ -15,7 +15,7 @@ import org.eclipse.xtext.preferences.PreferenceKey;\n  */\n @Deprecated\n public class StringKey extends PreferenceKey {\n-  public StringKey(final String id, final String defaultValue) {\n-    super(id, defaultValue);\n-  }\n+\tpublic StringKey(String id, String defaultValue) {\n+\t\tsuper(id, defaultValue);\n+\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDczNQ==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408194735", "bodyText": "Unneeded finals", "author": "tivervac", "createdAt": "2020-04-14T14:46:00Z", "path": "org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/WhitespaceKey.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*******************************************************************************\n+ * Copyright (c) 2012, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xbase.formatting;\n+\n+import org.eclipse.xtext.xbase.formatting.BooleanKey;\n+\n+/**\n+ * @deprecated use {@link org.eclipse.xtext.xbase.formatting2.WhitespaceKey}\n+ */\n+@Deprecated\n+public class WhitespaceKey extends BooleanKey {\n+  public WhitespaceKey(final String name, final Boolean defaultValue) {", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d526493e296594ec9a736614956e458f437c8823", "chunk": "diff --git a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/WhitespaceKey.java b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/WhitespaceKey.java\nindex 94f0314e9..49f9f65f2 100644\n--- a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/WhitespaceKey.java\n+++ b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/formatting/WhitespaceKey.java\n\n@@ -15,7 +15,7 @@ import org.eclipse.xtext.xbase.formatting.BooleanKey;\n  */\n @Deprecated\n public class WhitespaceKey extends BooleanKey {\n-  public WhitespaceKey(final String name, final Boolean defaultValue) {\n-    super(name, (defaultValue).booleanValue());\n-  }\n+\tpublic WhitespaceKey(String name, Boolean defaultValue) {\n+\t\tsuper(name, (defaultValue).booleanValue());\n+\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NTEwMw==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408195103", "bodyText": "Copyright date", "author": "tivervac", "createdAt": "2020-04-14T14:46:29Z", "path": "org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/typesystem/references/IndexingOwnedConverter.java", "diffHunk": "@@ -6,21 +6,21 @@\n  *\n  * SPDX-License-Identifier: EPL-2.0\n  *******************************************************************************/\n-package org.eclipse.xtext.xbase.typesystem.references\n+package org.eclipse.xtext.xbase.typesystem.references;", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d526493e296594ec9a736614956e458f437c8823", "chunk": "diff --git a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/typesystem/references/IndexingOwnedConverter.java b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/typesystem/references/IndexingOwnedConverter.java\nindex be52481ac..e6bc167d9 100644\n--- a/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/typesystem/references/IndexingOwnedConverter.java\n+++ b/org.eclipse.xtext.xbase/deprecated/org/eclipse/xtext/xbase/typesystem/references/IndexingOwnedConverter.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2013 itemis AG (http://www.itemis.eu) and others.\n+ * Copyright (c) 2013, 2020 itemis AG (http://www.itemis.eu) and others.\n  * This program and the accompanying materials are made available under the\n  * terms of the Eclipse Public License 2.0 which is available at\n  * http://www.eclipse.org/legal/epl-2.0.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5ODg1Mw==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408198853", "bodyText": "Doesn't it work to just put 1 in here?", "author": "tivervac", "createdAt": "2020-04-14T14:51:00Z", "path": "org.eclipse.xtext.xbase/src/org/eclipse/xtext/xbase/formatting2/XbaseFormatterPreferenceKeys.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2014, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xbase.formatting2;\n+\n+import org.eclipse.xtext.formatting2.FormatterPreferenceKeys;\n+import org.eclipse.xtext.preferences.BooleanKey;\n+import org.eclipse.xtext.preferences.IntegerKey;\n+import org.eclipse.xtext.xbase.formatting2.BlankLineKey;\n+import org.eclipse.xtext.xbase.formatting2.NewLineKey;\n+import org.eclipse.xtext.xbase.formatting2.NewLineOrPreserveKey;\n+import org.eclipse.xtext.xbase.formatting2.WhitespaceKey;\n+\n+/**\n+ * @author Moritz Eysholdt - Initial implementation and API\n+ */\n+public class XbaseFormatterPreferenceKeys extends FormatterPreferenceKeys {\n+\tpublic static final IntegerKey preserveBlankLines = new IntegerKey(\"preserve.blank.lines\", Integer.valueOf(1));", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d526493e296594ec9a736614956e458f437c8823", "chunk": "diff --git a/org.eclipse.xtext.xbase/src/org/eclipse/xtext/xbase/formatting2/XbaseFormatterPreferenceKeys.java b/org.eclipse.xtext.xbase/src/org/eclipse/xtext/xbase/formatting2/XbaseFormatterPreferenceKeys.java\nindex ffea7d835..f64149ad5 100644\n--- a/org.eclipse.xtext.xbase/src/org/eclipse/xtext/xbase/formatting2/XbaseFormatterPreferenceKeys.java\n+++ b/org.eclipse.xtext.xbase/src/org/eclipse/xtext/xbase/formatting2/XbaseFormatterPreferenceKeys.java\n\n@@ -11,48 +11,43 @@ package org.eclipse.xtext.xbase.formatting2;\n import org.eclipse.xtext.formatting2.FormatterPreferenceKeys;\n import org.eclipse.xtext.preferences.BooleanKey;\n import org.eclipse.xtext.preferences.IntegerKey;\n-import org.eclipse.xtext.xbase.formatting2.BlankLineKey;\n-import org.eclipse.xtext.xbase.formatting2.NewLineKey;\n-import org.eclipse.xtext.xbase.formatting2.NewLineOrPreserveKey;\n-import org.eclipse.xtext.xbase.formatting2.WhitespaceKey;\n \n /**\n  * @author Moritz Eysholdt - Initial implementation and API\n  */\n public class XbaseFormatterPreferenceKeys extends FormatterPreferenceKeys {\n-\tpublic static final IntegerKey preserveBlankLines = new IntegerKey(\"preserve.blank.lines\", Integer.valueOf(1));\n+\tpublic static final IntegerKey preserveBlankLines = new IntegerKey(\"preserve.blank.lines\", 1);\n \n-\tpublic static final BlankLineKey blankLinesAroundExpression = new BlankLineKey(\"blank.line.around.expressions\",\n-\t\tInteger.valueOf(0));\n+\tpublic static final BlankLineKey blankLinesAroundExpression = new BlankLineKey(\"blank.line.around.expressions\", 0);\n \n-\tpublic static final BooleanKey preserveNewLines = new BooleanKey(\"preserve.new.lines\", Boolean.valueOf(true));\n+\tpublic static final BooleanKey preserveNewLines = new BooleanKey(\"preserve.new.lines\", true);\n \n \tpublic static final NewLineOrPreserveKey newLineAfterClassAnnotations = new NewLineOrPreserveKey(\n-\t\t\"newline.after.class.annotations\", Boolean.valueOf(false));\n+\t\t\t\"newline.after.class.annotations\", false);\n \n \tpublic static final NewLineOrPreserveKey newLineAfterFieldAnnotations = new NewLineOrPreserveKey(\n-\t\t\"newline.after.field.annotations\", Boolean.valueOf(false));\n+\t\t\t\"newline.after.field.annotations\", false);\n \n \tpublic static final NewLineOrPreserveKey newLineAfterMethodAnnotations = new NewLineOrPreserveKey(\n-\t\t\"newline.after.method.annotations\", Boolean.valueOf(false));\n+\t\t\t\"newline.after.method.annotations\", false);\n \n \tpublic static final NewLineOrPreserveKey newLineAfterConstructorAnnotations = new NewLineOrPreserveKey(\n-\t\t\"newline.after.constructor.annotations\", Boolean.valueOf(false));\n+\t\t\t\"newline.after.constructor.annotations\", false);\n \n \tpublic static final NewLineOrPreserveKey newLineAfterParameterAnnotations = new NewLineOrPreserveKey(\n-\t\t\"newline.after.parameter.annotations\", Boolean.valueOf(false));\n+\t\t\t\"newline.after.parameter.annotations\", false);\n \n \tpublic static final WhitespaceKey whitespaceBetweenKeywordAndParenthesisSL = new WhitespaceKey(\n-\t\t\"whitespace.between.keyword.and.parenthesis\", Boolean.valueOf(false));\n+\t\t\t\"whitespace.between.keyword.and.parenthesis\", false);\n \n \tpublic static final WhitespaceKey whitespaceBetweenKeywordAndParenthesisML = new WhitespaceKey(\n-\t\t\"whitespace.between.keyword.and.parenthesis\", Boolean.valueOf(true));\n+\t\t\t\"whitespace.between.keyword.and.parenthesis\", true);\n \n \tpublic static final BlankLineKey blankLinesBetweenImports = new BlankLineKey(\"blank.lines.between.imports\",\n-\t\tInteger.valueOf(0));\n+\t\t\tInteger.valueOf(0));\n \n \tpublic static final BlankLineKey blankLinesAfterImports = new BlankLineKey(\"blank.lines.after.imports\",\n-\t\tInteger.valueOf(1));\n+\t\t\tInteger.valueOf(1));\n \n-\tpublic static final NewLineKey bracesInNewLine = new NewLineKey(\"braces.in.new.line\", Boolean.valueOf(false));\n+\tpublic static final NewLineKey bracesInNewLine = new NewLineKey(\"braces.in.new.line\", false);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMDQ4MA==", "url": "https://github.com/eclipse/xtext-extras/pull/586#discussion_r408200480", "bodyText": "Can be final", "author": "tivervac", "createdAt": "2020-04-14T14:53:06Z", "path": "org.eclipse.xtext.xbase/src/org/eclipse/xtext/xbase/typesystem/util/ConstraintVisitingInfo.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * Copyright (c) 2012, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xbase.typesystem.util;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.eclipse.xtext.common.types.JvmTypeParameter;\n+import org.eclipse.xtext.common.types.JvmTypeParameterDeclarator;\n+\n+import com.google.common.collect.Sets;\n+\n+/**\n+ * @author Sebastian Zarnekow - Initial contribution and API TODO JavaDoc\n+ */\n+public class ConstraintVisitingInfo {\n+\tprivate Set<JvmTypeParameter> visiting;", "originalCommit": "a775cd32082d962ffc1a1cbf4f1ae906c5ba21f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "d526493e296594ec9a736614956e458f437c8823", "url": "https://github.com/eclipse/xtext-extras/commit/d526493e296594ec9a736614956e458f437c8823", "message": "[eclipse/xtext#1679] ported more code from xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-04-14T15:17:54Z", "type": "commit"}, {"oid": "d526493e296594ec9a736614956e458f437c8823", "url": "https://github.com/eclipse/xtext-extras/commit/d526493e296594ec9a736614956e458f437c8823", "message": "[eclipse/xtext#1679] ported more code from xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-04-14T15:17:54Z", "type": "forcePushed"}]}