{"pr_number": 1173, "pr_title": "Add tag builder method for the new optional entries", "pr_createdAt": "2020-11-20T03:22:13Z", "pr_url": "https://github.com/FabricMC/fabric/pull/1173", "timeline": [{"oid": "02a8b147afe5d65573a181dbbf86fe6c04c32e2e", "url": "https://github.com/FabricMC/fabric/commit/02a8b147afe5d65573a181dbbf86fe6c04c32e2e", "message": "Add tag builder method for the new optional entries", "committedDate": "2020-11-20T03:21:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTA0Ng==", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527369046", "bodyText": "nb: this string is only for debug logging to show who added the entry, so I just chose the module name. Not worth adding a parameter for and burdening callers", "author": "williewillus", "createdAt": "2020-11-20T03:22:41Z", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "diffHunk": "@@ -57,4 +60,14 @@ public void clearTagEntries() {\n \t\tentries.clear();\n \t\tfabric_clearCount++;\n \t}\n+\n+\t@Override\n+\tpublic void addOptional(Identifier id) {\n+\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");\n+\t}\n+\n+\t@Override\n+\tpublic void addOptionalTag(Identifier id) {\n+\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions\");", "originalCommit": "02a8b147afe5d65573a181dbbf86fe6c04c32e2e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f4175780949bda6aaca43322abc17a5eee2a5465", "chunk": "diff --git a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\nindex 441b3e57b..0df502fe1 100644\n--- a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\n+++ b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\n\n@@ -63,11 +63,11 @@ public abstract class MixinTagBuilder<T> implements FabricTagBuilder<T> {\n \n \t@Override\n \tpublic void addOptional(Identifier id) {\n-\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");\n+\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions-v0\");\n \t}\n \n \t@Override\n \tpublic void addOptionalTag(Identifier id) {\n-\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions\");\n+\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions-v0\");\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTI5OA==", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527369298", "bodyText": "Source should match the fabric api module name completely.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");\n          \n          \n            \n            \t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions-v0\");", "author": "i509VCB", "createdAt": "2020-11-20T03:23:46Z", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "diffHunk": "@@ -57,4 +60,14 @@ public void clearTagEntries() {\n \t\tentries.clear();\n \t\tfabric_clearCount++;\n \t}\n+\n+\t@Override\n+\tpublic void addOptional(Identifier id) {\n+\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");", "originalCommit": "02a8b147afe5d65573a181dbbf86fe6c04c32e2e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f4175780949bda6aaca43322abc17a5eee2a5465", "chunk": "diff --git a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\nindex 441b3e57b..0df502fe1 100644\n--- a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\n+++ b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\n\n@@ -63,11 +63,11 @@ public abstract class MixinTagBuilder<T> implements FabricTagBuilder<T> {\n \n \t@Override\n \tpublic void addOptional(Identifier id) {\n-\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");\n+\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions-v0\");\n \t}\n \n \t@Override\n \tpublic void addOptionalTag(Identifier id) {\n-\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions\");\n+\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions-v0\");\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTM3Ng==", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527369376", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions\");\n          \n          \n            \n            \t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions-v0\");", "author": "i509VCB", "createdAt": "2020-11-20T03:24:03Z", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "diffHunk": "@@ -57,4 +60,14 @@ public void clearTagEntries() {\n \t\tentries.clear();\n \t\tfabric_clearCount++;\n \t}\n+\n+\t@Override\n+\tpublic void addOptional(Identifier id) {\n+\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");\n+\t}\n+\n+\t@Override\n+\tpublic void addOptionalTag(Identifier id) {\n+\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions\");", "originalCommit": "02a8b147afe5d65573a181dbbf86fe6c04c32e2e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f4175780949bda6aaca43322abc17a5eee2a5465", "chunk": "diff --git a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\nindex 441b3e57b..0df502fe1 100644\n--- a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\n+++ b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\n\n@@ -63,11 +63,11 @@ public abstract class MixinTagBuilder<T> implements FabricTagBuilder<T> {\n \n \t@Override\n \tpublic void addOptional(Identifier id) {\n-\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");\n+\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions-v0\");\n \t}\n \n \t@Override\n \tpublic void addOptionalTag(Identifier id) {\n-\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions\");\n+\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions-v0\");\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTc5Mg==", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527369792", "bodyText": "Could you verify the import order here?\nTip: gradlew check will run checkstyle et al", "author": "i509VCB", "createdAt": "2020-11-20T03:25:27Z", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "diffHunk": "@@ -20,6 +20,7 @@\n import java.util.Optional;\n \n import com.google.gson.JsonObject;\n+import net.minecraft.util.Identifier;", "originalCommit": "02a8b147afe5d65573a181dbbf86fe6c04c32e2e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f4175780949bda6aaca43322abc17a5eee2a5465", "chunk": "diff --git a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\nindex 441b3e57b..0df502fe1 100644\n--- a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\n+++ b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java\n\n@@ -20,7 +20,6 @@ import java.util.List;\n import java.util.Optional;\n \n import com.google.gson.JsonObject;\n-import net.minecraft.util.Identifier;\n import org.spongepowered.asm.mixin.Mixin;\n import org.spongepowered.asm.mixin.Shadow;\n import org.spongepowered.asm.mixin.Unique;\n"}}, {"oid": "f4175780949bda6aaca43322abc17a5eee2a5465", "url": "https://github.com/FabricMC/fabric/commit/f4175780949bda6aaca43322abc17a5eee2a5465", "message": "Address comments", "committedDate": "2020-11-20T03:45:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5OTE1Nw==", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527499157", "bodyText": "addOptionalObject maybe to reduce confusion? Would also be nice to describe these in more detail. The reader should get an idea what these methods are needed/useful for.", "author": "sfPlayer1", "createdAt": "2020-11-20T07:54:16Z", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java", "diffHunk": "@@ -27,4 +29,16 @@\n \t * Clear the contained entries and mark the tag as replaced.\n \t */\n \tvoid clearTagEntries();\n+\n+\t/**\n+\t * Add an optional object entry.\n+\t * @param id The ID of the object to add\n+\t */\n+\tvoid addOptional(Identifier id);", "originalCommit": "f4175780949bda6aaca43322abc17a5eee2a5465", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY5MDAyMw==", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527690023", "bodyText": "They correspond directly to the non-optional methods on the base vanilla class, so I didn't really want to go into a whole explanation of the tag system.", "author": "williewillus", "createdAt": "2020-11-20T13:28:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5OTE1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcwNTk0Mg==", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527705942", "bodyText": "There is no need to explain the whole tag system, just the differences Tag<>Object and Optional<>\"Normal\". E.g. something along the lines of \"Optional entries will not produce load errors if their referenced object are missing\" or whatever is appropriate.\nPlease consider adding this documentation, we try to guide the curious viewer to a reasonable extent. This file is particularly unusual/confusing since it's a detached interface that needs casting to be useful, I hope we can at some point migrate it to a subclass of Tag.Builder. Right now the two addOptional methods are quite exposed compared to the vanilla equivalents if someone sees our class before the vanilla one.", "author": "sfPlayer1", "createdAt": "2020-11-20T13:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5OTE1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE5MjY2OQ==", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r529192669", "bodyText": "done", "author": "williewillus", "createdAt": "2020-11-24T04:21:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5OTE1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "df054d404fe3d72d176404a5c60d3b1e87ab3124", "chunk": "diff --git a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java\nindex 32d171ce9..9950b8fd8 100644\n--- a/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java\n+++ b/fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java\n\n@@ -31,13 +31,13 @@ public interface FabricTagBuilder<T> {\n \tvoid clearTagEntries();\n \n \t/**\n-\t * Add an optional object entry.\n+\t * Add an optional object entry to the tag.\n \t * @param id The ID of the object to add\n \t */\n-\tvoid addOptional(Identifier id);\n+\tvoid addOptionalObject(Identifier id);\n \n \t/**\n-\t * Add an optional tag entry.\n+\t * Add an optional tag entry to the tag.\n \t * @param id The ID of the tag to add\n \t */\n \tvoid addOptionalTag(Identifier id);\n"}}, {"oid": "df054d404fe3d72d176404a5c60d3b1e87ab3124", "url": "https://github.com/FabricMC/fabric/commit/df054d404fe3d72d176404a5c60d3b1e87ab3124", "message": "Rename addOptional to addOptionalObject", "committedDate": "2020-11-20T13:38:16Z", "type": "commit"}, {"oid": "728ae2ffc98252a71baa06515a737fd2dd1cae8e", "url": "https://github.com/FabricMC/fabric/commit/728ae2ffc98252a71baa06515a737fd2dd1cae8e", "message": "Flesh out doc", "committedDate": "2020-11-24T04:21:03Z", "type": "commit"}, {"oid": "95d4452733b344e06ac8550682c5fc313b7a79cd", "url": "https://github.com/FabricMC/fabric/commit/95d4452733b344e06ac8550682c5fc313b7a79cd", "message": "Move mixin to target proper class", "committedDate": "2020-11-26T03:00:45Z", "type": "commit"}]}