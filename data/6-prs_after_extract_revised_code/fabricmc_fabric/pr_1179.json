{"pr_number": 1179, "pr_title": "Assign a new ID to client only registry entries when syncing.", "pr_createdAt": "2020-11-23T22:01:57Z", "pr_url": "https://github.com/FabricMC/fabric/pull/1179", "timeline": [{"oid": "b347b1a3e19e02b74d83e8210dbe9706ef3bb4f5", "url": "https://github.com/FabricMC/fabric/commit/b347b1a3e19e02b74d83e8210dbe9706ef3bb4f5", "message": "Assign a new ID to client only registry entries when syncing.\n\nFixes #1165", "committedDate": "2020-11-23T21:59:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5OTk4NA==", "url": "https://github.com/FabricMC/fabric/pull/1179#discussion_r529099984", "bodyText": "Could you include which registry entry failed to be reassigned?", "author": "i509VCB", "createdAt": "2020-11-24T01:17:02Z", "path": "fabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/MixinIdRegistry.java", "diffHunk": "@@ -273,25 +271,22 @@ public void remap(String name, Object2IntMap<Identifier> remoteIndexedEntries, R\n \t\t\tbreak;\n \t\t}\n \t\tcase REMOTE: {\n-\t\t\t// TODO: Is this what mods really want?\n-\t\t\tSet<Identifier> droppedIds = new HashSet<>();\n-\n \t\t\tfor (Identifier id : getIds()) {\n \t\t\t\tif (!remoteIndexedEntries.containsKey(id)) {\n-\t\t\t\t\tT object = get(id);\n-\t\t\t\t\tint rid = getRawId(object);\n+\t\t\t\t\tint newId = remoteIndexedEntries.values().stream()\n+\t\t\t\t\t\t\t.mapToInt(Integer::intValue)\n+\t\t\t\t\t\t\t.max()\n+\t\t\t\t\t\t\t.orElse(-1);\n \n-\t\t\t\t\tdroppedIds.add(id);\n+\t\t\t\t\tif (newId < 0) {\n+\t\t\t\t\t\tthrow new RuntimeException(\"Failed to assign new id to client only registry entry\");", "originalCommit": "b347b1a3e19e02b74d83e8210dbe9706ef3bb4f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTEwMDY3Mw==", "url": "https://github.com/FabricMC/fabric/pull/1179#discussion_r529100673", "bodyText": "Also should this throw a RemapException instead?", "author": "i509VCB", "createdAt": "2020-11-24T01:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5OTk4NA=="}], "type": "inlineReview", "revised_code": {"commit": "68bdbef367d4b140224d4507749447810910145c", "chunk": "diff --git a/fabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/MixinIdRegistry.java b/fabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/MixinIdRegistry.java\nindex 352ecd966..58bdc57d5 100644\n--- a/fabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/MixinIdRegistry.java\n+++ b/fabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/MixinIdRegistry.java\n\n@@ -271,19 +271,26 @@ public abstract class MixinIdRegistry<T> extends Registry<T> implements Remappab\n \t\t\tbreak;\n \t\t}\n \t\tcase REMOTE: {\n+\t\t\tint maxId = -1;\n+\n \t\t\tfor (Identifier id : getIds()) {\n \t\t\t\tif (!remoteIndexedEntries.containsKey(id)) {\n-\t\t\t\t\tint newId = remoteIndexedEntries.values().stream()\n-\t\t\t\t\t\t\t.mapToInt(Integer::intValue)\n-\t\t\t\t\t\t\t.max()\n-\t\t\t\t\t\t\t.orElse(-1);\n+\t\t\t\t\tif (maxId < 0) {\n+\t\t\t\t\t\tfor (int value : remoteIndexedEntries.values()) {\n+\t\t\t\t\t\t\tif (value > maxId) {\n+\t\t\t\t\t\t\t\tmaxId = value;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n \n-\t\t\t\t\tif (newId < 0) {\n-\t\t\t\t\t\tthrow new RuntimeException(\"Failed to assign new id to client only registry entry\");\n+\t\t\t\t\tif (maxId < 0) {\n+\t\t\t\t\t\tthrow new RemapException(\"Failed to assign new id to client only registry entry\");\n \t\t\t\t\t}\n \n-\t\t\t\t\tFABRIC_LOGGER.debug(\"An ID for {} was not sent by the server, assuming client only registry entry and assigning a new id: {}\", id.toString(), newId + 1);\n-\t\t\t\t\tremoteIndexedEntries.put(id, newId + 1);\n+\t\t\t\t\tmaxId++;\n+\n+\t\t\t\t\tFABRIC_LOGGER.debug(\"An ID for {} was not sent by the server, assuming client only registry entry and assigning a new id ({}) in {}\", id.toString(), maxId, getKey().getValue().toString());\n+\t\t\t\t\tremoteIndexedEntries.put(id, maxId);\n \t\t\t\t}\n \t\t\t}\n \n"}}, {"oid": "68bdbef367d4b140224d4507749447810910145c", "url": "https://github.com/FabricMC/fabric/commit/68bdbef367d4b140224d4507749447810910145c", "message": "Cleanup + review comments", "committedDate": "2020-11-24T19:21:39Z", "type": "commit"}]}