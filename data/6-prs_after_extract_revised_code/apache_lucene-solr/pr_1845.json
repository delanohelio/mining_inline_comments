{"pr_number": 1845, "pr_title": "SOLR-14613: Autoscaling replacement using placement plugins", "pr_createdAt": "2020-09-09T00:47:16Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1845", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUzMTU1OA==", "url": "https://github.com/apache/lucene-solr/pull/1845#discussion_r486531558", "bodyText": "IIRC at some point we've considered using an Iterator here instead.", "author": "sigram", "createdAt": "2020-09-10T17:59:32Z", "path": "solr/core/src/java/org/apache/solr/cluster/placement/Cluster.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.placement;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+/**\n+ * <p>A representation of the (initial) cluster state, providing information on which nodes are part of the cluster and a way\n+ * to get to more detailed info.\n+ */\n+public interface Cluster {\n+  /**\n+   * @return current set of live nodes. Never <code>null</code>, never empty (Solr wouldn't call the plugin if empty\n+   * since no useful work could then be done).\n+   */\n+  Set<Node> getLiveNodes();\n+\n+  /**\n+   * <p>Returns info about the given collection if one exists. Because it is not expected for plugins to request info about\n+   * a large number of collections, requests can only be made one by one.\n+   *\n+   * <p>This is also the reason we do not return a {@link java.util.Map} or {@link Set} of {@link SolrCollection}'s here: it would be\n+   * wasteful to fetch all data and fill such a map when plugin code likely needs info about at most one or two collections.\n+   */\n+  Optional<SolrCollection> getCollection(String collectionName) throws IOException;\n+\n+  /**\n+   * <p>Allows getting names of all {@link SolrCollection}'s present in the cluster.\n+   *\n+   * <p><b>WARNING:</b> this call will be extremely inefficient on large clusters. Usage is discouraged.\n+   */\n+  Set<String> getAllCollectionNames();", "originalCommit": "a08d7985ba47a509631c40bd70d6adb35b9f7e55", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6f64c42c20d12c39bbd79c5b949a9d019ea5f0de", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/cluster/placement/Cluster.java b/solr/core/src/java/org/apache/solr/cluster/placement/Cluster.java\ndeleted file mode 100644\nindex 12ac9b352a0..00000000000\n--- a/solr/core/src/java/org/apache/solr/cluster/placement/Cluster.java\n+++ /dev/null\n\n@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.solr.cluster.placement;\n-\n-import java.io.IOException;\n-import java.util.Optional;\n-import java.util.Set;\n-\n-/**\n- * <p>A representation of the (initial) cluster state, providing information on which nodes are part of the cluster and a way\n- * to get to more detailed info.\n- */\n-public interface Cluster {\n-  /**\n-   * @return current set of live nodes. Never <code>null</code>, never empty (Solr wouldn't call the plugin if empty\n-   * since no useful work could then be done).\n-   */\n-  Set<Node> getLiveNodes();\n-\n-  /**\n-   * <p>Returns info about the given collection if one exists. Because it is not expected for plugins to request info about\n-   * a large number of collections, requests can only be made one by one.\n-   *\n-   * <p>This is also the reason we do not return a {@link java.util.Map} or {@link Set} of {@link SolrCollection}'s here: it would be\n-   * wasteful to fetch all data and fill such a map when plugin code likely needs info about at most one or two collections.\n-   */\n-  Optional<SolrCollection> getCollection(String collectionName) throws IOException;\n-\n-  /**\n-   * <p>Allows getting names of all {@link SolrCollection}'s present in the cluster.\n-   *\n-   * <p><b>WARNING:</b> this call will be extremely inefficient on large clusters. Usage is discouraged.\n-   */\n-  Set<String> getAllCollectionNames();\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUzMjUyNQ==", "url": "https://github.com/apache/lucene-solr/pull/1845#discussion_r486532525", "bodyText": "So ... given that there's already a SolrNode interface in master, which already provides isolation from implementation details, shouldn't we use that here? The same applies to SolrCollection and ShardReplica.", "author": "sigram", "createdAt": "2020-09-10T18:01:10Z", "path": "solr/core/src/java/org/apache/solr/cluster/placement/Node.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.placement;\n+\n+/**\n+ * Representation of a SolrCloud node or server in the SolrCloud cluster.\n+ */\n+public interface Node {", "originalCommit": "a08d7985ba47a509631c40bd70d6adb35b9f7e55", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6f64c42c20d12c39bbd79c5b949a9d019ea5f0de", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/cluster/placement/Node.java b/solr/core/src/java/org/apache/solr/cluster/Node.java\nsimilarity index 95%\nrename from solr/core/src/java/org/apache/solr/cluster/placement/Node.java\nrename to solr/core/src/java/org/apache/solr/cluster/Node.java\nindex 2c565740002..301078e5700 100644\n--- a/solr/core/src/java/org/apache/solr/cluster/placement/Node.java\n+++ b/solr/core/src/java/org/apache/solr/cluster/Node.java\n\n@@ -15,7 +15,7 @@\n  * limitations under the License.\n  */\n \n-package org.apache.solr.cluster.placement;\n+package org.apache.solr.cluster;\n \n /**\n  * Representation of a SolrCloud node or server in the SolrCloud cluster.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1NzAzMw==", "url": "https://github.com/apache/lucene-solr/pull/1845#discussion_r487857033", "bodyText": "I slightly prefer this method, as it allows us to modify available replica types without changing the interface.", "author": "sigram", "createdAt": "2020-09-14T12:00:59Z", "path": "solr/core/src/java/org/apache/solr/cluster/placement/PlacementRequest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.placement;\n+\n+import java.util.Set;\n+\n+/**\n+ * A cluster related placement request that Solr asks a {@link PlacementPlugin} plugin to resolve and compute a\n+ * {@link PlacementPlan} placing one or more {@link Replica}'s of one or more {@link Shard}'s of an existing {@link SolrCollection}.\n+ * The shard might or might not already exist, plugin code can easily find out by calling {@link SolrCollection#getShard(String)}\n+ * with the shard name(s) returned by {@link #getShardNames()}.\n+ *\n+ * <p>The set of {@link Node}s on which the replicas should be placed\n+ * is specified (defaults to being equal to the set returned by {@link Cluster#getLiveNodes()}).\n+ */\n+public interface PlacementRequest {\n+    /**\n+     * The {@link SolrCollection} to add {@link Replica}(s) to.\n+     */\n+    SolrCollection getCollection();\n+\n+    /**\n+     * <p>Shard name(s) for which new replicas placement should be computed. The shard(s) might exist or not (that's why this\n+     * method returns a {@link Set} of {@link String}'s and not directly a set of {@link Shard} instances).\n+     *\n+     * <p>Note the Collection API allows specifying the shard name or a {@code _route_} parameter. The Solr implementation will\n+     * convert either specification into the relevant shard name so the plugin code doesn't have to worry about this.\n+     */\n+    Set<String> getShardNames();\n+\n+    /**\n+     * <p>Replicas should only be placed on nodes in the set returned by this method.\n+     *\n+     * <p>When Collection API calls do not specify a specific set of target nodes, replicas can be placed on any live node of\n+     * the cluster. In such cases, this set will be equal to the set of all live nodes. The plugin placement code does not\n+     * need to worry (or care) if a set of nodes was explicitly specified or not.\n+     *\n+     * @return never {@code null} and never empty set (if that set was to be empty for any reason, no placement would be\n+     * possible and the Solr infrastructure driving the plugin code would detect the error itself rather than calling the plugin).\n+     */\n+    Set<Node> getTargetNodes();\n+\n+    /**\n+     * Returns the number of replica to create that is returned by the corresponding method {@link #getCountNrtReplicas()},\n+     * {@link #getCountTlogReplicas()} or  {@link #getCountPullReplicas()}. Might delete the other three.\n+     */\n+    int getCountReplicasToCreate(Replica.ReplicaType replicaType);", "originalCommit": "79a58e7715d019cc0abf6c16cf3825dcc41186d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6f64c42c20d12c39bbd79c5b949a9d019ea5f0de", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/cluster/placement/PlacementRequest.java b/solr/core/src/java/org/apache/solr/cluster/placement/PlacementRequest.java\nindex 0da58d77743..61b49dd523d 100644\n--- a/solr/core/src/java/org/apache/solr/cluster/placement/PlacementRequest.java\n+++ b/solr/core/src/java/org/apache/solr/cluster/placement/PlacementRequest.java\n\n@@ -17,6 +17,8 @@\n \n package org.apache.solr.cluster.placement;\n \n+import org.apache.solr.cluster.*;\n+\n import java.util.Set;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1NzQzMA==", "url": "https://github.com/apache/lucene-solr/pull/1845#discussion_r487857430", "bodyText": "This should be merged with the existing ShardReplica to avoid creating separate abstractions for each subsystem.", "author": "sigram", "createdAt": "2020-09-14T12:01:38Z", "path": "solr/core/src/java/org/apache/solr/cluster/placement/Replica.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.placement;\n+\n+/**\n+ * An instantiation (or one of the copies) of a given {@link Shard} of a given {@link SolrCollection}.\n+ * Objects of this type are returned by the Solr framework to the plugin, they are not directly built by the plugin. When the\n+ * plugin wants to add a replica it goes through appropriate method in {@link PlacementPlanFactory}).\n+ */\n+public interface Replica {", "originalCommit": "79a58e7715d019cc0abf6c16cf3825dcc41186d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6f64c42c20d12c39bbd79c5b949a9d019ea5f0de", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/cluster/placement/Replica.java b/solr/core/src/java/org/apache/solr/cluster/Replica.java\nsimilarity index 63%\nrename from solr/core/src/java/org/apache/solr/cluster/placement/Replica.java\nrename to solr/core/src/java/org/apache/solr/cluster/Replica.java\nindex 68a6b9c301c..2c9230ffc09 100644\n--- a/solr/core/src/java/org/apache/solr/cluster/placement/Replica.java\n+++ b/solr/core/src/java/org/apache/solr/cluster/Replica.java\n\n@@ -15,12 +15,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.solr.cluster.placement;\n+package org.apache.solr.cluster;\n \n /**\n  * An instantiation (or one of the copies) of a given {@link Shard} of a given {@link SolrCollection}.\n- * Objects of this type are returned by the Solr framework to the plugin, they are not directly built by the plugin. When the\n- * plugin wants to add a replica it goes through appropriate method in {@link PlacementPlanFactory}).\n  */\n public interface Replica {\n   Shard getShard();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1Nzk0NA==", "url": "https://github.com/apache/lucene-solr/pull/1845#discussion_r487857944", "bodyText": "Should we also have the collection name here for completeness?", "author": "sigram", "createdAt": "2020-09-14T12:02:43Z", "path": "solr/core/src/java/org/apache/solr/cluster/placement/ReplicaPlacement.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.placement;\n+\n+/**\n+ * <p>Placement decision for a single {@link Replica}. Note this placement decision is used as part of a {@link PlacementPlan},\n+ * it does not directly lead to the plugin code getting a corresponding {@link Replica} instance, nor does it require the\n+ * plugin to provide a {@link Shard} instance (the plugin code gets such instances for existing replicas and shards in the\n+ * cluster but does not create them directly for adding new replicas for new or existing shards).\n+ *\n+ * <p>Captures the {@link Shard} (via the shard name), {@link Node} and {@link Replica.ReplicaType} of a Replica to be created.\n+ *\n+ * <p>TODO: discuss (before merge) if this interface really needs to allow access to the data captured in an instance or if calling {@link PlacementPlanFactory#createReplicaPlacement(String, Node, Replica.ReplicaType)} is sufficient for plugin code.\n+ */\n+public interface ReplicaPlacement {\n+  /**\n+   * @return the name of the {@link Shard} for which the replica should be created\n+   */\n+  String getShardName();", "originalCommit": "79a58e7715d019cc0abf6c16cf3825dcc41186d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6f64c42c20d12c39bbd79c5b949a9d019ea5f0de", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/cluster/placement/ReplicaPlacement.java b/solr/core/src/java/org/apache/solr/cluster/placement/ReplicaPlacement.java\nindex 86f489c2376..16bdc2c2b34 100644\n--- a/solr/core/src/java/org/apache/solr/cluster/placement/ReplicaPlacement.java\n+++ b/solr/core/src/java/org/apache/solr/cluster/placement/ReplicaPlacement.java\n\n@@ -17,19 +17,30 @@\n \n package org.apache.solr.cluster.placement;\n \n+import org.apache.solr.cluster.Node;\n+import org.apache.solr.cluster.Replica;\n+import org.apache.solr.cluster.Shard;\n+import org.apache.solr.cluster.SolrCollection;\n+\n /**\n  * <p>Placement decision for a single {@link Replica}. Note this placement decision is used as part of a {@link PlacementPlan},\n  * it does not directly lead to the plugin code getting a corresponding {@link Replica} instance, nor does it require the\n  * plugin to provide a {@link Shard} instance (the plugin code gets such instances for existing replicas and shards in the\n  * cluster but does not create them directly for adding new replicas for new or existing shards).\n  *\n- * <p>Captures the {@link Shard} (via the shard name), {@link Node} and {@link Replica.ReplicaType} of a Replica to be created.\n- *\n- * <p>TODO: discuss (before merge) if this interface really needs to allow access to the data captured in an instance or if calling {@link PlacementPlanFactory#createReplicaPlacement(String, Node, Replica.ReplicaType)} is sufficient for plugin code.\n+ * <p>Captures the {@link SolrCollection}, {@link Shard} (via the shard name), {@link Node} and {@link org.apache.solr.cluster.Replica.ReplicaType}\n+ * of a Replica to be created.\n  */\n public interface ReplicaPlacement {\n+\n+  /**\n+   * @return the {@link SolrCollection} for which the replica should be created\n+   */\n+  SolrCollection getCollection();\n+\n   /**\n-   * @return the name of the {@link Shard} for which the replica should be created\n+   * @return the name of the {@link Shard} for which the replica should be created. Note that only the name of the shard\n+   * is returned and not a {@link Shard} instance because the shard might not yet exist when the placement request is made.\n    */\n   String getShardName();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1ODUyOQ==", "url": "https://github.com/apache/lucene-solr/pull/1845#discussion_r487858529", "bodyText": "Similar to the other top-level abstractions, this interface should be merged with the existing Shard interface, after resolving the main differences (the use of iterators vs. SimpleMap, what getters we absolutely need in this interface, etc).", "author": "sigram", "createdAt": "2020-09-14T12:03:50Z", "path": "solr/core/src/java/org/apache/solr/cluster/placement/Shard.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.placement;\n+\n+import java.util.Iterator;\n+\n+/**\n+ * Shard in a {@link SolrCollection}, i.e. a subset of the data indexed in that collection.\n+ */\n+public interface Shard {", "originalCommit": "79a58e7715d019cc0abf6c16cf3825dcc41186d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6f64c42c20d12c39bbd79c5b949a9d019ea5f0de", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/cluster/placement/Shard.java b/solr/core/src/java/org/apache/solr/cluster/Shard.java\nsimilarity index 84%\nrename from solr/core/src/java/org/apache/solr/cluster/placement/Shard.java\nrename to solr/core/src/java/org/apache/solr/cluster/Shard.java\nindex 07e694843b4..b1ffc14c2ee 100644\n--- a/solr/core/src/java/org/apache/solr/cluster/placement/Shard.java\n+++ b/solr/core/src/java/org/apache/solr/cluster/Shard.java\n\n@@ -15,7 +15,7 @@\n  * limitations under the License.\n  */\n \n-package org.apache.solr.cluster.placement;\n+package org.apache.solr.cluster;\n \n import java.util.Iterator;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1OTUwMA==", "url": "https://github.com/apache/lucene-solr/pull/1845#discussion_r487859500", "bodyText": "See my other comments about merging this with the existing SolrCollection.", "author": "sigram", "createdAt": "2020-09-14T12:05:40Z", "path": "solr/core/src/java/org/apache/solr/cluster/placement/SolrCollection.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.placement;\n+\n+import java.util.Iterator;\n+\n+/**\n+ * Represents a Collection in SolrCloud (unrelated to {@link java.util.Collection} that uses the nicer name).\n+ */\n+public interface SolrCollection {", "originalCommit": "79a58e7715d019cc0abf6c16cf3825dcc41186d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6f64c42c20d12c39bbd79c5b949a9d019ea5f0de", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/cluster/placement/SolrCollection.java b/solr/core/src/java/org/apache/solr/cluster/SolrCollection.java\nsimilarity index 61%\nrename from solr/core/src/java/org/apache/solr/cluster/placement/SolrCollection.java\nrename to solr/core/src/java/org/apache/solr/cluster/SolrCollection.java\nindex db2508b08fc..23e79a407b3 100644\n--- a/solr/core/src/java/org/apache/solr/cluster/placement/SolrCollection.java\n+++ b/solr/core/src/java/org/apache/solr/cluster/SolrCollection.java\n\n@@ -15,7 +15,12 @@\n  * limitations under the License.\n  */\n \n-package org.apache.solr.cluster.placement;\n+package org.apache.solr.cluster;\n+\n+import org.apache.solr.cluster.placement.AttributeFetcher;\n+import org.apache.solr.cluster.placement.AttributeValues;\n+import org.apache.solr.cluster.placement.PlacementPlugin;\n+import org.apache.solr.cluster.placement.PlacementRequest;\n \n import java.util.Iterator;\n \n"}}, {"oid": "6a5580e0d9ef5bca1ef12a033ad534d28d748140", "url": "https://github.com/apache/lucene-solr/commit/6a5580e0d9ef5bca1ef12a033ad534d28d748140", "message": "SOLR-14613: Autoscaling replacement using placement plugins", "committedDate": "2020-09-16T10:10:08Z", "type": "commit"}, {"oid": "6e5931ac5e0bbe6bc9b7540603d0ac3d1b94521c", "url": "https://github.com/apache/lucene-solr/commit/6e5931ac5e0bbe6bc9b7540603d0ac3d1b94521c", "message": "Fix precommit javadoc tool crash and fix precommit issues", "committedDate": "2020-09-16T10:10:09Z", "type": "commit"}, {"oid": "67c1b8052237018ad87148f0ed8c9f399e015644", "url": "https://github.com/apache/lucene-solr/commit/67c1b8052237018ad87148f0ed8c9f399e015644", "message": "Allow code to provide default values when fetching configs", "committedDate": "2020-09-16T10:10:09Z", "type": "commit"}, {"oid": "1261d737410b089217094dcd9c6d56f8d9def066", "url": "https://github.com/apache/lucene-solr/commit/1261d737410b089217094dcd9c6d56f8d9def066", "message": "Added admin commands set-placement-plugin and unset-placement-plugin to push configuration to /clusterprops.json", "committedDate": "2020-09-16T10:20:49Z", "type": "commit"}, {"oid": "6f64c42c20d12c39bbd79c5b949a9d019ea5f0de", "url": "https://github.com/apache/lucene-solr/commit/6f64c42c20d12c39bbd79c5b949a9d019ea5f0de", "message": "review comments + general clean up", "committedDate": "2020-09-16T10:20:50Z", "type": "commit"}, {"oid": "607f164e90afdb368800d2666a7d647f906ec127", "url": "https://github.com/apache/lucene-solr/commit/607f164e90afdb368800d2666a7d647f906ec127", "message": "Add set-placement-plugin and unset-placement-plugin to annotation based /api/cluster API", "committedDate": "2020-09-16T17:49:08Z", "type": "commit"}, {"oid": "607f164e90afdb368800d2666a7d647f906ec127", "url": "https://github.com/apache/lucene-solr/commit/607f164e90afdb368800d2666a7d647f906ec127", "message": "Add set-placement-plugin and unset-placement-plugin to annotation based /api/cluster API", "committedDate": "2020-09-16T17:49:08Z", "type": "forcePushed"}]}