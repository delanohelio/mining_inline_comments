{"pr_number": 1937, "pr_title": "LUCENE-9541 ConjunctionDISI sub-iterators check", "pr_createdAt": "2020-10-01T20:46:29Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1937", "timeline": [{"oid": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d", "url": "https://github.com/apache/lucene-solr/commit/f233e75f13d4fd2821eb9a6521daf3bb5f92110d", "message": "LUCENE-9541 ConjunctionDISI sub-iterators check\n\nEnsure sub-iterators of a conjuction iterator don't advance outside\nof it.\nAdd assertions for checking that all sub-iterators are always on the\nsame document.", "committedDate": "2020-10-01T20:41:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMTAyNg==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498511026", "bodyText": "@jpountz  Is this a correct assumption?  or could we start with iterators that are not on the same document?", "author": "mayya-sharipova", "createdAt": "2020-10-01T21:01:19Z", "path": "lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java", "diffHunk": "@@ -140,6 +141,13 @@ private static void addTwoPhaseIterator(TwoPhaseIterator twoPhaseIter, List<DocI\n   private static DocIdSetIterator createConjunction(\n       List<DocIdSetIterator> allIterators,\n       List<TwoPhaseIterator> twoPhaseIterators) {\n+\n+    // assert that all sub-iterators are on the same doc ID", "originalCommit": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMTM1MQ==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498521351", "bodyText": "this is the invariant between iterations indeed", "author": "jpountz", "createdAt": "2020-10-01T21:26:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMTAyNg=="}], "type": "inlineReview", "revised_code": {"commit": "74151e3ba3ed33528b67472150627d04f60e00a8", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java b/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java\nindex b79fb16ada9..28c6f3fcf12 100644\n--- a/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java\n+++ b/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java\n\n@@ -142,11 +142,13 @@ public final class ConjunctionDISI extends DocIdSetIterator {\n       List<DocIdSetIterator> allIterators,\n       List<TwoPhaseIterator> twoPhaseIterators) {\n \n-    // assert that all sub-iterators are on the same doc ID\n+    // check that all sub-iterators are on the same doc ID\n     int curDoc = allIterators.size() > 0 ? allIterators.get(0).docID() : twoPhaseIterators.get(0).approximation.docID();\n     boolean iteratorsOnTheSameDoc = allIterators.stream().allMatch(it -> it.docID() == curDoc);\n     iteratorsOnTheSameDoc = iteratorsOnTheSameDoc && twoPhaseIterators.stream().allMatch(it -> it.approximation().docID() == curDoc);\n-    assert iteratorsOnTheSameDoc : \"Sub-iterators of ConjunctionDISI are not the same document!\";\n+    if (iteratorsOnTheSameDoc == false) {\n+      throw new IllegalArgumentException(\"Sub-iterators of ConjunctionDISI are not the same document!\");\n+    }\n \n     long minCost = allIterators.stream().mapToLong(DocIdSetIterator::cost).min().getAsLong();\n     List<BitSetIterator> bitSetIterators = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMTE2NQ==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498521165", "bodyText": "let's make it an IllegalArgumentException?", "author": "jpountz", "createdAt": "2020-10-01T21:25:40Z", "path": "lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java", "diffHunk": "@@ -140,6 +141,13 @@ private static void addTwoPhaseIterator(TwoPhaseIterator twoPhaseIter, List<DocI\n   private static DocIdSetIterator createConjunction(\n       List<DocIdSetIterator> allIterators,\n       List<TwoPhaseIterator> twoPhaseIterators) {\n+\n+    // assert that all sub-iterators are on the same doc ID\n+    int curDoc = allIterators.size() > 0 ? allIterators.get(0).docID() : twoPhaseIterators.get(0).approximation.docID();\n+    boolean iteratorsOnTheSameDoc = allIterators.stream().allMatch(it -> it.docID() == curDoc);\n+    iteratorsOnTheSameDoc = iteratorsOnTheSameDoc && twoPhaseIterators.stream().allMatch(it -> it.approximation().docID() == curDoc);\n+    assert iteratorsOnTheSameDoc : \"Sub-iterators of ConjunctionDISI are not the same document!\";", "originalCommit": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg1MTQxMA==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498851410", "bodyText": "addressed in 74151e3", "author": "mayya-sharipova", "createdAt": "2020-10-02T14:19:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMTE2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "74151e3ba3ed33528b67472150627d04f60e00a8", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java b/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java\nindex b79fb16ada9..28c6f3fcf12 100644\n--- a/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java\n+++ b/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java\n\n@@ -142,11 +142,13 @@ public final class ConjunctionDISI extends DocIdSetIterator {\n       List<DocIdSetIterator> allIterators,\n       List<TwoPhaseIterator> twoPhaseIterators) {\n \n-    // assert that all sub-iterators are on the same doc ID\n+    // check that all sub-iterators are on the same doc ID\n     int curDoc = allIterators.size() > 0 ? allIterators.get(0).docID() : twoPhaseIterators.get(0).approximation.docID();\n     boolean iteratorsOnTheSameDoc = allIterators.stream().allMatch(it -> it.docID() == curDoc);\n     iteratorsOnTheSameDoc = iteratorsOnTheSameDoc && twoPhaseIterators.stream().allMatch(it -> it.approximation().docID() == curDoc);\n-    assert iteratorsOnTheSameDoc : \"Sub-iterators of ConjunctionDISI are not the same document!\";\n+    if (iteratorsOnTheSameDoc == false) {\n+      throw new IllegalArgumentException(\"Sub-iterators of ConjunctionDISI are not the same document!\");\n+    }\n \n     long minCost = allIterators.stream().mapToLong(DocIdSetIterator::cost).min().getAsLong();\n     List<BitSetIterator> bitSetIterators = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMzEyNA==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498523124", "bodyText": "can we avoid iterating over all sub iterators unless assertions are enabled?", "author": "jpountz", "createdAt": "2020-10-01T21:30:38Z", "path": "lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java", "diffHunk": "@@ -227,6 +236,7 @@ private int doNext(int doc) throws IOException {\n \n   @Override\n   public int advance(int target) throws IOException {\n+    assertItersOnSameDoc();", "originalCommit": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg1MTUwOQ==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498851509", "bodyText": "addressed in 74151e3", "author": "mayya-sharipova", "createdAt": "2020-10-02T14:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMzEyNA=="}], "type": "inlineReview", "revised_code": {"commit": "74151e3ba3ed33528b67472150627d04f60e00a8", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java b/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java\nindex b79fb16ada9..28c6f3fcf12 100644\n--- a/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java\n+++ b/lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java\n\n@@ -236,7 +238,7 @@ public final class ConjunctionDISI extends DocIdSetIterator {\n \n   @Override\n   public int advance(int target) throws IOException {\n-    assertItersOnSameDoc();\n+    assert assertItersOnSameDoc() : \"Sub-iterators of ConjunctionDISI are not the same document!\";\n     return doNext(lead1.advance(target));\n   }\n \n"}}, {"oid": "74151e3ba3ed33528b67472150627d04f60e00a8", "url": "https://github.com/apache/lucene-solr/commit/74151e3ba3ed33528b67472150627d04f60e00a8", "message": "Address Adrien's comments", "committedDate": "2020-10-02T14:17:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MDM4OQ==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r499180389", "bodyText": "I think we need to call something like assumeTrue(assertsAreEnabled) since this test requires assertions to be enabled to succeed.", "author": "jpountz", "createdAt": "2020-10-03T20:42:40Z", "path": "lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java", "diffHunk": "@@ -391,4 +391,20 @@ public void testCollapseSubConjunctionDISIs() throws IOException {\n   public void testCollapseSubConjunctionScorers() throws IOException {\n     testCollapseSubConjunctions(true);\n   }\n+\n+  public void testIllegalAdvancementOfSubIteratorsTripsAssertion() throws IOException {\n+    int maxDoc = 100;", "originalCommit": "74151e3ba3ed33528b67472150627d04f60e00a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5OTUzMg==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r499499532", "bodyText": "Thanks @jpountz, very good point, addressed in bf9a3e8", "author": "mayya-sharipova", "createdAt": "2020-10-05T10:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MDM4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "bf9a3e8a76fbe579f227bca083df3ef9c31f50ad", "chunk": "diff --git a/lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java b/lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java\nindex c955521fc55..43cfbe68fe8 100644\n--- a/lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java\n+++ b/lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java\n\n@@ -393,6 +393,7 @@ public class TestConjunctionDISI extends LuceneTestCase {\n   }\n \n   public void testIllegalAdvancementOfSubIteratorsTripsAssertion() throws IOException {\n+    assumeTrue(\"Assertions must be enabled for this test!\", LuceneTestCase.assertsAreEnabled);\n     int maxDoc = 100;\n     final int numIterators = TestUtil.nextInt(random(), 2, 5);\n     FixedBitSet set = randomSet(maxDoc);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MDQ4NQ==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r499180485", "bodyText": "can you revert the two arguments to assertEquals? it expects the expected value first and the actual value second. While swapping arguments doesn't cause major issues, it creates confusing error messages when the assertion fails.", "author": "jpountz", "createdAt": "2020-10-03T20:44:11Z", "path": "lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java", "diffHunk": "@@ -391,4 +391,20 @@ public void testCollapseSubConjunctionDISIs() throws IOException {\n   public void testCollapseSubConjunctionScorers() throws IOException {\n     testCollapseSubConjunctions(true);\n   }\n+\n+  public void testIllegalAdvancementOfSubIteratorsTripsAssertion() throws IOException {\n+    int maxDoc = 100;\n+    final int numIterators = TestUtil.nextInt(random(), 2, 5);\n+    FixedBitSet set = randomSet(maxDoc);\n+\n+    DocIdSetIterator[] iterators = new DocIdSetIterator[numIterators];\n+    for (int i = 0; i < iterators.length; ++i) {\n+      iterators[i] = new BitDocIdSet(set).iterator();\n+    }\n+    final DocIdSetIterator conjunction = ConjunctionDISI.intersectIterators(Arrays.asList(iterators));\n+    int idx = TestUtil.nextInt(random() , 0, iterators.length-1);\n+    iterators[idx].nextDoc(); // illegally advancing one of the sub-iterators outside of the conjunction iterator\n+    AssertionError ex = expectThrows(AssertionError.class, () -> conjunction.nextDoc());\n+    assertEquals(ex.getMessage(), \"Sub-iterators of ConjunctionDISI are not the same document!\");", "originalCommit": "74151e3ba3ed33528b67472150627d04f60e00a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5OTYzMg==", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r499499632", "bodyText": "Thanks @jpountz, my mistake, addressed in bf9a3e8", "author": "mayya-sharipova", "createdAt": "2020-10-05T10:31:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MDQ4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "bf9a3e8a76fbe579f227bca083df3ef9c31f50ad", "chunk": "diff --git a/lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java b/lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java\nindex c955521fc55..43cfbe68fe8 100644\n--- a/lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java\n+++ b/lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java\n\n@@ -393,6 +393,7 @@ public class TestConjunctionDISI extends LuceneTestCase {\n   }\n \n   public void testIllegalAdvancementOfSubIteratorsTripsAssertion() throws IOException {\n+    assumeTrue(\"Assertions must be enabled for this test!\", LuceneTestCase.assertsAreEnabled);\n     int maxDoc = 100;\n     final int numIterators = TestUtil.nextInt(random(), 2, 5);\n     FixedBitSet set = randomSet(maxDoc);\n"}}, {"oid": "bf9a3e8a76fbe579f227bca083df3ef9c31f50ad", "url": "https://github.com/apache/lucene-solr/commit/bf9a3e8a76fbe579f227bca083df3ef9c31f50ad", "message": "Address Adrien's comments (II)", "committedDate": "2020-10-05T10:26:32Z", "type": "commit"}]}