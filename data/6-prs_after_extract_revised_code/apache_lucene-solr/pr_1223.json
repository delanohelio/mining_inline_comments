{"pr_number": 1223, "pr_title": "SOLR-14213: Configuring Solr Cloud to use Shared Storage", "pr_createdAt": "2020-01-30T00:42:05Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1223", "timeline": [{"oid": "d9c4641df6e66f7dc903a3190585f1694377c232", "url": "https://github.com/apache/lucene-solr/commit/d9c4641df6e66f7dc903a3190585f1694377c232", "message": "Add SharedStoreConfig for initiating shared store support and refactor tests setup", "committedDate": "2020-01-30T00:24:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNDY5Mg==", "url": "https://github.com/apache/lucene-solr/pull/1223#discussion_r373634692", "bodyText": "This doesn't actually stop the process from starting up and currently not sure of a good way to abort the process if it's misconfigured. There used to be a setting by that was deprecated a long time ago.", "author": "andyvuong", "createdAt": "2020-01-31T19:00:09Z", "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -756,6 +763,12 @@ public void load() {\n         // is set to true for them\n         // TODO: should this go behind some config?\n         List<CoreDescriptor> additionalCoreDescriptors = discoverAdditionalCoreDescriptorsForSharedReplicas(cds);\n+        if (!isSharedStoreEnabled() && discoveredSharedCollection) {\n+          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, ", "originalCommit": "d9c4641df6e66f7dc903a3190585f1694377c232", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "14cbbb6e52f774fc4ed3cf9dde5e271accdb12a6", "url": "https://github.com/apache/lucene-solr/commit/14cbbb6e52f774fc4ed3cf9dde5e271accdb12a6", "message": "Add missing condition", "committedDate": "2020-01-31T20:21:23Z", "type": "commit"}, {"oid": "9673d3b773726b5fb4960a0652e3ca8ab75f0ebc", "url": "https://github.com/apache/lucene-solr/commit/9673d3b773726b5fb4960a0652e3ca8ab75f0ebc", "message": "Merge branch 'jira/SOLR-13101' into jira/SOLR-13101-config", "committedDate": "2020-02-06T18:17:06Z", "type": "commit"}, {"oid": "94e59d3740d2d9aa2f22ac28ec2a9ac7f84d3cab", "url": "https://github.com/apache/lucene-solr/commit/94e59d3740d2d9aa2f22ac28ec2a9ac7f84d3cab", "message": "Fix test failure", "committedDate": "2020-02-18T22:55:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3NDkzMw==", "url": "https://github.com/apache/lucene-solr/pull/1223#discussion_r381674933", "bodyText": "It is not clear why BlobCoreSyncer is initialized here inside load method instead of the constructor.\nThe comment says things here depend on initiated SharedStoreManager. That statement is incomplete. It is that plus the CoreContainer#sharedStoreManager is initialized because CorePullerFeeder depends on that. Also blobCoreSyncer and blobProcessUtil are two fields that are not initialized yet. The comment suggests all the public facing fields would have been initialized by now. Even if that is not what the comment means, there is nothing preventing them from being accessed in null state.\nThe other problem is that if the CoreContainer#load fails then CoreContainer@shutdown is called for cleanup. At least inside CoreContainer#createAndLoad. That can hit an NPE when calling sharedStoreManager.getBlobProcessManager().shutdown() because it is possible the exception that started the shutdown was in sharedStoreManager#load before blobProcessUtil was even initialized.\nThe second problem can be solved by creating a shutdown method inside SharedStoreManager and moving  sharedStoreManager.getBlobProcessManager().shutdown() there, protected by blobProcessUtil!= null check.\nThough, I don't have any good ideas for the first problem.", "author": "mbwaheed", "createdAt": "2020-02-20T02:18:44Z", "path": "solr/core/src/java/org/apache/solr/store/shared/SharedStoreManager.java", "diffHunk": "@@ -43,68 +43,38 @@\n \n   public SharedStoreManager(ZkController controller) {\n     zkController = controller;\n-    // initialize BlobProcessUtil with the SharedStoreManager for background processes to be ready\n-    blobProcessUtil = new BlobProcessUtil(zkController.getCoreContainer());\n-    blobCoreSyncer = new BlobCoreSyncer();\n-    sharedCoreConcurrencyController = new SharedCoreConcurrencyController(zkController.getCoreContainer());\n-  }\n-  \n-  @VisibleForTesting\n-  public void initBlobStorageProvider(BlobStorageProvider blobStorageProvider) {\n-    this.blobStorageProvider = blobStorageProvider;\n-  }\n-  \n-  @VisibleForTesting\n-  public void initBlobProcessUtil(BlobProcessUtil processUtil) {\n-    if (blobProcessUtil != null) {\n-      blobProcessUtil.shutdown();\n-    }\n-    blobProcessUtil = processUtil;\n+    blobStorageProvider = new BlobStorageProvider();\n+    blobDeleteManager = new BlobDeleteManager(getBlobStorageProvider().getClient());\n+    corePullTracker = new CorePullTracker();\n+    sharedShardMetadataController = new SharedShardMetadataController(zkController.getSolrCloudManager());\n+    sharedCoreConcurrencyController = new SharedCoreConcurrencyController(sharedShardMetadataController);\n   }\n   \n-  /*\n-   * Initiates a SharedShardMetadataController if it doesn't exist and returns one \n+  /**\n+   * Start blob processes that depend on an initiated SharedStoreManager\n    */\n+  public void load() {\n+    blobCoreSyncer = new BlobCoreSyncer();", "originalCommit": "94e59d3740d2d9aa2f22ac28ec2a9ac7f84d3cab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODg4MQ==", "url": "https://github.com/apache/lucene-solr/pull/1223#discussion_r383548881", "bodyText": "For the first problem, there are shared storage components that have corecontainer injected explicitly in their api methods or via other dependencies that have getters opening access to it (zkcontroller for example). There are also shared storage components that have it injected in the constructor. Thinking about and looking at it again, it's kind of a mess identifying the initialization flows/orders and I might need to refactor a bunch of things here for better consistency", "author": "andyvuong", "createdAt": "2020-02-24T22:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3NDkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0OTI4Ng==", "url": "https://github.com/apache/lucene-solr/pull/1223#discussion_r384049286", "bodyText": "Looking at it again I don't think I needed to do any big refactor. Both blobCoreSyncer and blobProcessUtil are initialized in the constructor now but blobProcessUtil now starts CorePullFeeder in load(CoreContainer).", "author": "andyvuong", "createdAt": "2020-02-25T18:37:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3NDkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "29a8cb09bb9c50cef26f43b061072f41ee132e80", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/store/shared/SharedStoreManager.java b/solr/core/src/java/org/apache/solr/store/shared/SharedStoreManager.java\nindex a9a97a4a83c..454d978a7e1 100644\n--- a/solr/core/src/java/org/apache/solr/store/shared/SharedStoreManager.java\n+++ b/solr/core/src/java/org/apache/solr/store/shared/SharedStoreManager.java\n\n@@ -48,14 +50,15 @@ public class SharedStoreManager {\n     corePullTracker = new CorePullTracker();\n     sharedShardMetadataController = new SharedShardMetadataController(zkController.getSolrCloudManager());\n     sharedCoreConcurrencyController = new SharedCoreConcurrencyController(sharedShardMetadataController);\n+    blobCoreSyncer = new BlobCoreSyncer();\n+    blobProcessUtil = new BlobProcessUtil();\n   }\n   \n   /**\n-   * Start blob processes that depend on an initiated SharedStoreManager\n+   * Start blob processes that depend on an initiated {@link SharedStoreManager} in {@link CoreContainer}\n    */\n-  public void load() {\n-    blobCoreSyncer = new BlobCoreSyncer();\n-    blobProcessUtil = new BlobProcessUtil(zkController.getCoreContainer());\n+  public void load(CoreContainer coreContainer) {\n+    blobProcessUtil.load(coreContainer);\n   }\n \n   public SharedShardMetadataController getSharedShardMetadataController() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3OTc5NQ==", "url": "https://github.com/apache/lucene-solr/pull/1223#discussion_r381679795", "bodyText": "Don't need 3 node cluster here, one should be enough?", "author": "mbwaheed", "createdAt": "2020-02-20T02:27:24Z", "path": "solr/core/src/test/org/apache/solr/cloud/api/collections/SimpleSharedStorageCollectionTest.java", "diffHunk": "@@ -76,6 +62,28 @@ public void testCreateCollection() throws Exception {\n     waitForState(\"Timed-out wait for collection to be created\", collectionName, clusterShape(1, 1));\n     assertTrue(cloudClient.getZkStateReader().getZkClient().exists(ZkStateReader.COLLECTIONS_ZKNODE + \"/\" + collectionName, false));\n   }\n+  \n+  /**\n+   * Test that verifies that a collection creation command for a \"shared\" type collection fails\n+   * if the cluster was not enabled with shared storage\n+   */\n+  @Test\n+  public void testCreateCollectionSharedDisabled() throws Exception {\n+    setupClusterSharedDisable(3);", "originalCommit": "94e59d3740d2d9aa2f22ac28ec2a9ac7f84d3cab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29a8cb09bb9c50cef26f43b061072f41ee132e80", "chunk": "diff --git a/solr/core/src/test/org/apache/solr/cloud/api/collections/SimpleSharedStorageCollectionTest.java b/solr/core/src/test/org/apache/solr/cloud/api/collections/SimpleSharedStorageCollectionTest.java\nindex 0ce4b21521a..fad695d7d3c 100644\n--- a/solr/core/src/test/org/apache/solr/cloud/api/collections/SimpleSharedStorageCollectionTest.java\n+++ b/solr/core/src/test/org/apache/solr/cloud/api/collections/SimpleSharedStorageCollectionTest.java\n\n@@ -69,7 +69,7 @@ public class SimpleSharedStorageCollectionTest extends SolrCloudSharedStoreTestC\n    */\n   @Test\n   public void testCreateCollectionSharedDisabled() throws Exception {\n-    setupClusterSharedDisable(3);\n+    setupClusterSharedDisable(1);\n     String collectionName = \"BlobBasedCollectionName1\";\n     CloudSolrClient cloudClient = cluster.getSolrClient();\n     \n"}}, {"oid": "29a8cb09bb9c50cef26f43b061072f41ee132e80", "url": "https://github.com/apache/lucene-solr/commit/29a8cb09bb9c50cef26f43b061072f41ee132e80", "message": "Initialize fields in constructor and fix tests", "committedDate": "2020-02-25T18:18:50Z", "type": "commit"}, {"oid": "627618eeaf58d009136abad4cae3b76d0ea86f7e", "url": "https://github.com/apache/lucene-solr/commit/627618eeaf58d009136abad4cae3b76d0ea86f7e", "message": "load shared store manager vs corecontainer", "committedDate": "2020-02-27T00:44:03Z", "type": "commit"}, {"oid": "092e97602666642047a8ed2d9fa9feb67d3c73a6", "url": "https://github.com/apache/lucene-solr/commit/092e97602666642047a8ed2d9fa9feb67d3c73a6", "message": "Undo change", "committedDate": "2020-02-27T00:46:17Z", "type": "commit"}]}