{"pr_number": 1709, "pr_title": "LUCENE-9446: In boolean rewrite, remove MatchAllDocsQuery filter clauses", "pr_createdAt": "2020-07-31T23:07:44Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1709", "timeline": [{"oid": "61de3f22b6a36184bc1521da9ffcc315fc3a6cc9", "url": "https://github.com/apache/lucene-solr/commit/61de3f22b6a36184bc1521da9ffcc315fc3a6cc9", "message": "LUCENE-9446: Remove MatchAllDocsQuery filters in boolean write.\n\nPreviously, we only removed 'match all' FILTER clauses if there was at least one\nMUST clause. Now they're also removed if there is another distinct FILTER clause.\n\nThis lets boolean queries like `#field:value #*:*` be written to `#field:value`.", "committedDate": "2020-07-31T23:05:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU1Mjk4Mg==", "url": "https://github.com/apache/lucene-solr/pull/1709#discussion_r464552982", "bodyText": "maybe also add a test for the case when there are two MatchAllDocsQuery queries as filters with no MUST clauses?", "author": "jpountz", "createdAt": "2020-08-03T17:23:14Z", "path": "lucene/core/src/test/org/apache/lucene/search/TestBooleanRewrites.java", "diffHunk": "@@ -312,12 +312,20 @@ public void testRemoveMatchAllFilter() throws IOException {\n         .add(new TermQuery(new Term(\"foo\", \"baz\")), Occur.MUST)\n         .add(new MatchAllDocsQuery(), Occur.FILTER)\n         .build();\n-    BooleanQuery expected = new BooleanQuery.Builder()\n+    Query expected = new BooleanQuery.Builder()\n         .setMinimumNumberShouldMatch(bq.getMinimumNumberShouldMatch())\n         .add(new TermQuery(new Term(\"foo\", \"bar\")), Occur.MUST)\n         .add(new TermQuery(new Term(\"foo\", \"baz\")), Occur.MUST)\n         .build();\n     assertEquals(expected, searcher.rewrite(bq));\n+\n+    bq = new BooleanQuery.Builder()\n+            .add(new TermQuery(new Term(\"foo\", \"bar\")), Occur.FILTER)\n+            .add(new MatchAllDocsQuery(), Occur.FILTER)\n+            .build();\n+    expected = new BoostQuery(new ConstantScoreQuery(\n+            new TermQuery(new Term(\"foo\", \"bar\"))), 0.0f);\n+    assertEquals(expected, searcher.rewrite(bq));", "originalCommit": "61de3f22b6a36184bc1521da9ffcc315fc3a6cc9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU1NDYyNQ==", "url": "https://github.com/apache/lucene-solr/pull/1709#discussion_r464554625", "bodyText": "\ud83d\udc4d", "author": "jtibshirani", "createdAt": "2020-08-03T17:26:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU1Mjk4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "4a6d7de532a583823e3b9a4d9d7ebd1fc95c86f6", "chunk": "diff --git a/lucene/core/src/test/org/apache/lucene/search/TestBooleanRewrites.java b/lucene/core/src/test/org/apache/lucene/search/TestBooleanRewrites.java\nindex 5fbd425a988..51ca8e50859 100644\n--- a/lucene/core/src/test/org/apache/lucene/search/TestBooleanRewrites.java\n+++ b/lucene/core/src/test/org/apache/lucene/search/TestBooleanRewrites.java\n\n@@ -326,6 +326,14 @@ public class TestBooleanRewrites extends LuceneTestCase {\n     expected = new BoostQuery(new ConstantScoreQuery(\n             new TermQuery(new Term(\"foo\", \"bar\"))), 0.0f);\n     assertEquals(expected, searcher.rewrite(bq));\n+\n+    bq = new BooleanQuery.Builder()\n+            .add(new MatchAllDocsQuery(), Occur.FILTER)\n+            .add(new MatchAllDocsQuery(), Occur.FILTER)\n+            .build();\n+    expected = new BoostQuery(new ConstantScoreQuery(\n+            new MatchAllDocsQuery()), 0.0f);\n+    assertEquals(expected, searcher.rewrite(bq));\n   }\n \n   public void testRandom() throws IOException {\n"}}, {"oid": "4a6d7de532a583823e3b9a4d9d7ebd1fc95c86f6", "url": "https://github.com/apache/lucene-solr/commit/4a6d7de532a583823e3b9a4d9d7ebd1fc95c86f6", "message": "Add another test case.", "committedDate": "2020-08-03T17:34:25Z", "type": "commit"}, {"oid": "fa3f5b1bf0faa39c4c37e8885a031e517e3ac7f6", "url": "https://github.com/apache/lucene-solr/commit/fa3f5b1bf0faa39c4c37e8885a031e517e3ac7f6", "message": "Add a changelog entry.", "committedDate": "2020-08-03T17:45:18Z", "type": "commit"}]}