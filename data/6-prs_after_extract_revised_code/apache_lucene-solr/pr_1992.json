{"pr_number": 1992, "pr_title": "SOLR-14939: JSON range faceting to support cache=false parameter", "pr_createdAt": "2020-10-16T12:18:37Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1992", "timeline": [{"oid": "90444615b162e17ac64067006524dc8fc7315fdb", "url": "https://github.com/apache/lucene-solr/commit/90444615b162e17ac64067006524dc8fc7315fdb", "message": "SOLR-14939: JSON range faceting to support cache=false parameter", "committedDate": "2020-10-16T11:50:57Z", "type": "commit"}, {"oid": "d30f1e5a238ae29916f84c7af73d4c76564cdf2b", "url": "https://github.com/apache/lucene-solr/commit/d30f1e5a238ae29916f84c7af73d4c76564cdf2b", "message": "Merge remote-tracking branch 'origin/master' into master-solr-14939", "committedDate": "2020-12-10T14:31:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDcwNzQ0MA==", "url": "https://github.com/apache/lucene-solr/pull/1992#discussion_r540707440", "bodyText": "Here (and in the else) I think I would explicitly do setCache(false) as it feels more readable to me, but I don't have strong opinions on that.", "author": "madrob", "createdAt": "2020-12-11T05:51:13Z", "path": "solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor.java", "diffHunk": "@@ -531,7 +533,20 @@ private  SimpleOrderedMap getRangeCountsIndexed() throws IOException {\n   private Query[] filters;\n   private DocSet[] intersections;\n   private void rangeStats(Range range, int slot) throws IOException {\n-    Query rangeQ = sf.getType().getRangeQuery(null, sf, range.low == null ? null : calc.formatValue(range.low), range.high==null ? null : calc.formatValue(range.high), range.includeLower, range.includeUpper);\n+    final Query rangeQ;\n+    {\n+      final Query rangeQuery = sf.getType().getRangeQuery(null, sf, range.low == null ? null : calc.formatValue(range.low), range.high==null ? null : calc.formatValue(range.high), range.includeLower, range.includeUpper);\n+      if (fcontext.cache) {\n+        rangeQ = rangeQuery;\n+      } else if (rangeQuery instanceof ExtendedQuery) {\n+        ((ExtendedQuery) rangeQuery).setCache(fcontext.cache);", "originalCommit": "d30f1e5a238ae29916f84c7af73d4c76564cdf2b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f517ffd743ddef283e29040dbf309bd8100b55db", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor.java b/solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor.java\nindex 21c8c8ef9cc..dd7fc77c615 100644\n--- a/solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor.java\n+++ b/solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor.java\n\n@@ -539,11 +539,11 @@ class FacetRangeProcessor extends FacetProcessor<FacetRange> {\n       if (fcontext.cache) {\n         rangeQ = rangeQuery;\n       } else if (rangeQuery instanceof ExtendedQuery) {\n-        ((ExtendedQuery) rangeQuery).setCache(fcontext.cache);\n+        ((ExtendedQuery) rangeQuery).setCache(false);\n         rangeQ = rangeQuery;\n       } else {\n         final WrappedQuery wrappedQuery = new WrappedQuery(rangeQuery);\n-        wrappedQuery.setCache(fcontext.cache);\n+        wrappedQuery.setCache(false);\n         rangeQ = wrappedQuery;\n       }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDcwODg5MQ==", "url": "https://github.com/apache/lucene-solr/pull/1992#discussion_r540708891", "bodyText": "Might as well store the string directly?", "author": "madrob", "createdAt": "2020-12-11T05:55:37Z", "path": "solr/core/src/test/org/apache/solr/search/facet/TestJsonRangeFacets.java", "diffHunk": "@@ -41,6 +42,7 @@ public static void beforeTests() throws Exception {\n     if (Boolean.getBoolean(NUMERIC_POINTS_SYSPROP)) System.setProperty(NUMERIC_DOCVALUES_SYSPROP,\"true\");\n \n     initCore(\"solrconfig-tlog.xml\",\"schema_latest.xml\");\n+    cache = random().nextBoolean();", "originalCommit": "d30f1e5a238ae29916f84c7af73d4c76564cdf2b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f517ffd743ddef283e29040dbf309bd8100b55db", "chunk": "diff --git a/solr/core/src/test/org/apache/solr/search/facet/TestJsonRangeFacets.java b/solr/core/src/test/org/apache/solr/search/facet/TestJsonRangeFacets.java\nindex c4536a43526..9124da34175 100644\n--- a/solr/core/src/test/org/apache/solr/search/facet/TestJsonRangeFacets.java\n+++ b/solr/core/src/test/org/apache/solr/search/facet/TestJsonRangeFacets.java\n\n@@ -42,7 +42,7 @@ public class TestJsonRangeFacets extends SolrTestCaseHS {\n     if (Boolean.getBoolean(NUMERIC_POINTS_SYSPROP)) System.setProperty(NUMERIC_DOCVALUES_SYSPROP,\"true\");\n \n     initCore(\"solrconfig-tlog.xml\",\"schema_latest.xml\");\n-    cache = random().nextBoolean();\n+    cache = Boolean.toString(random().nextBoolean());\n   }\n \n   /**\n"}}, {"oid": "f517ffd743ddef283e29040dbf309bd8100b55db", "url": "https://github.com/apache/lucene-solr/commit/f517ffd743ddef283e29040dbf309bd8100b55db", "message": "code review suggestions", "committedDate": "2020-12-15T17:45:28Z", "type": "commit"}, {"oid": "5892d3c033b18aa2872fbd1b423e19bf552ed236", "url": "https://github.com/apache/lucene-solr/commit/5892d3c033b18aa2872fbd1b423e19bf552ed236", "message": "add solr/CHANGES.txt entry", "committedDate": "2020-12-16T16:56:53Z", "type": "commit"}]}