{"pr_number": 1392, "pr_title": "SOLR-14371 Zk StatusHandler should know about dynamic zk config", "pr_createdAt": "2020-03-31T14:25:48Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1392", "timeline": [{"oid": "987cbe3bb486619c3b96994335e17f3e344bc439", "url": "https://github.com/apache/lucene-solr/commit/987cbe3bb486619c3b96994335e17f3e344bc439", "message": "SOLR-14371: Zk StatusHandler should know about dynamic zk config", "committedDate": "2020-03-30T22:40:44Z", "type": "commit"}, {"oid": "66270fa70298d6df869b54d7837cfdfdb722465b", "url": "https://github.com/apache/lucene-solr/commit/66270fa70298d6df869b54d7837cfdfdb722465b", "message": "Able to parse zkstatus both from connection string and config", "committedDate": "2020-03-31T14:23:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk5MzMxNw==", "url": "https://github.com/apache/lucene-solr/pull/1392#discussion_r400993317", "bodyText": "The precommit may dislike this", "author": "HoustonPutman", "createdAt": "2020-03-31T15:12:17Z", "path": "solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java", "diffHunk": "@@ -24,15 +24,12 @@\n import java.io.Writer;\n import java.lang.invoke.MethodHandles;\n import java.net.Socket;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n+import java.nio.charset.StandardCharsets;\n+import java.util.*;", "originalCommit": "66270fa70298d6df869b54d7837cfdfdb722465b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b5542ad55da601e0bdfda96bad8c2ccabbbc397", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java\nindex e0aa2a399ab..344a208c6b1 100644\n--- a/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java\n+++ b/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java\n\n@@ -28,6 +28,7 @@ import java.nio.charset.StandardCharsets;\n import java.util.*;\n import java.util.stream.Collectors;\n \n+import org.apache.commons.collections.CollectionUtils;\n import org.apache.solr.common.SolrException;\n import org.apache.solr.common.cloud.SolrZkClient;\n import org.apache.solr.common.util.NamedList;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MjY2Mw==", "url": "https://github.com/apache/lucene-solr/pull/1392#discussion_r401042663", "bodyText": "Looking at the docs here https://zookeeper.apache.org/doc/r3.5.7/zookeeperReconfig.html, in the \"Specifying the client port\" section, it looks like the role of the zk instance is either observer or participant (where participant is the default). Participant isn't a new thing, just a name for a regular member of the ensemble (not an observer).\nThis state check change may be making everything a \"participant\" as that's the default role. Maybe keep the original state logic, but add in an additional check in the beginning to see if the role is observer?", "author": "HoustonPutman", "createdAt": "2020-03-31T16:17:59Z", "path": "solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java", "diffHunk": "@@ -108,27 +128,30 @@ public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throw\n         if (\"true\".equals(String.valueOf(stat.get(\"ok\")))) {\n           numOk++;\n         }\n-        String state = String.valueOf(stat.get(\"zk_server_state\"));\n+        String state = zk.role != null ? zk.role : String.valueOf(stat.get(\"zk_server_state\"));\n         if (\"follower\".equals(state)) {\n           followers++;\n         } else if (\"leader\".equals(state)) {\n           leaders++;\n           reportedFollowers = Integer.parseInt(String.valueOf(stat.get(\"zk_followers\")));\n         } else if (\"standalone\".equals(state)) {\n           standalone++;\n+        } else if (\"participant\".equals(state)) {\n+          // NOCOMMIT: What does participant mean vs leader or follower?", "originalCommit": "66270fa70298d6df869b54d7837cfdfdb722465b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzNTExMQ==", "url": "https://github.com/apache/lucene-solr/pull/1392#discussion_r401835111", "bodyText": "I confused server state with role. Seems like even in dynamic reconfig mode, the servers report state leader/follower, and can also have a role participant or observer.\nThe only thing I'm not 100% sure about is whether zk_server_state can have the value observer when not in dynamic reconfig mode, cause observer feature pre-dates dynamic reconfig I think. I put it in there as an OR check and count it as follower for now, but it might never get that value.\nI do not generate any WARN/ERROR messages in UI based on number of observers vs participants, as it is allowed to scale down to 1 participant if you like. Not sure what happens if you have 2 participants, is that still \"A Bad Thing\u2122\"? Today we warn if there is an even number of leader/follower, but our code does not yet know about observers. Perhaps we should count participants and WARN if they are even in number, or will ZK handle it gracefully so we don't need to warn?", "author": "janhoy", "createdAt": "2020-04-01T18:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MjY2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "9b5542ad55da601e0bdfda96bad8c2ccabbbc397", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java\nindex e0aa2a399ab..344a208c6b1 100644\n--- a/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java\n+++ b/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java\n\n@@ -128,17 +131,17 @@ public class ZookeeperStatusHandler extends RequestHandlerBase {\n         if (\"true\".equals(String.valueOf(stat.get(\"ok\")))) {\n           numOk++;\n         }\n-        String state = zk.role != null ? zk.role : String.valueOf(stat.get(\"zk_server_state\"));\n-        if (\"follower\".equals(state)) {\n+        String state = String.valueOf(stat.get(\"zk_server_state\"));\n+        if (\"follower\".equals(state) || \"observer\".equals(state)) {\n           followers++;\n         } else if (\"leader\".equals(state)) {\n           leaders++;\n           reportedFollowers = Integer.parseInt(String.valueOf(stat.get(\"zk_followers\")));\n         } else if (\"standalone\".equals(state)) {\n           standalone++;\n-        } else if (\"participant\".equals(state)) {\n-          // NOCOMMIT: What does participant mean vs leader or follower?\n-          participants++;\n+        }\n+        if (zk.role != null) {\n+          stat.put(\"role\", zk.role);\n         }\n       } catch (SolrException se) {\n         log.warn(\"Failed talking to zookeeper \" + zkClientHostPort, se);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0Mjg3Nw==", "url": "https://github.com/apache/lucene-solr/pull/1392#discussion_r401042877", "bodyText": "precommit issue?", "author": "HoustonPutman", "createdAt": "2020-03-31T16:18:18Z", "path": "solr/core/src/test/org/apache/solr/handler/admin/ZookeeperStatusHandlerTest.java", "diffHunk": "@@ -47,8 +48,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.*;", "originalCommit": "66270fa70298d6df869b54d7837cfdfdb722465b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "060978af7c75597557e81ead5c61d13e871f4498", "chunk": "diff --git a/solr/core/src/test/org/apache/solr/handler/admin/ZookeeperStatusHandlerTest.java b/solr/core/src/test/org/apache/solr/handler/admin/ZookeeperStatusHandlerTest.java\nindex 0f3033ce372..693accf93cc 100644\n--- a/solr/core/src/test/org/apache/solr/handler/admin/ZookeeperStatusHandlerTest.java\n+++ b/solr/core/src/test/org/apache/solr/handler/admin/ZookeeperStatusHandlerTest.java\n\n@@ -45,16 +44,13 @@ import org.junit.Test;\n import org.mockito.Answers;\n import org.mockito.ArgumentMatchers;\n import org.noggit.JSONUtil;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-import static org.mockito.ArgumentMatchers.*;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n public class ZookeeperStatusHandlerTest extends SolrCloudTestCase {\n-  private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n-\n   @BeforeClass\n   public static void setupCluster() throws Exception {\n     configureCluster(1)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NTYwNg==", "url": "https://github.com/apache/lucene-solr/pull/1392#discussion_r401045606", "bodyText": "these can all likely be final correct?", "author": "HoustonPutman", "createdAt": "2020-03-31T16:22:12Z", "path": "solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java", "diffHunk": "@@ -818,6 +834,49 @@ public void downloadFromZK(String zkPath, Path dir) throws IOException {\n     ZkMaintenanceUtils.downloadFromZK(this, zkPath, dir);\n   }\n \n+  /**\n+   * Represents one line in dynamic ZK config\n+   */\n+  public static class ZkConfigDyn {\n+    // server.<positive id> = <address1>:<port1>:<port2>[:role];[<client port address>:]<client port>\n+    public static Pattern linePattern = Pattern.compile(\"server\\\\.(?<serverId>\\\\d+) ?= ?(?<address>[^:]+):(?<leaderPort>\\\\d+):(?<leaderElectionPort>\\\\d+)(:(?<role>.*?))?(;((?<clientPortAddress>.*?):)?(?<clientPort>\\\\d+))?\");\n+    public int serverId;", "originalCommit": "66270fa70298d6df869b54d7837cfdfdb722465b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b625db16ff43cef7810d7fde57fd67fd5f7a1eb", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java b/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java\nindex e471b0ad593..13900c4af95 100644\n--- a/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java\n+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java\n\n@@ -839,18 +839,28 @@ public class SolrZkClient implements Closeable {\n    */\n   public static class ZkConfigDyn {\n     // server.<positive id> = <address1>:<port1>:<port2>[:role];[<client port address>:]<client port>\n-    public static Pattern linePattern = Pattern.compile(\"server\\\\.(?<serverId>\\\\d+) ?= ?(?<address>[^:]+):(?<leaderPort>\\\\d+):(?<leaderElectionPort>\\\\d+)(:(?<role>.*?))?(;((?<clientPortAddress>.*?):)?(?<clientPort>\\\\d+))?\");\n-    public int serverId;\n-    public String address;\n-    public int leaderPort;\n-    public int leaderElectionPort;\n-    public String role;\n-    public String clientPortAddress;\n-    public int clientPort;\n+    public static final Pattern linePattern = Pattern.compile(\"server\\\\.(?<serverId>\\\\d+) ?= ?(?<address>[^:]+):(?<leaderPort>\\\\d+):(?<leaderElectionPort>\\\\d+)(:(?<role>.*?))?(;((?<clientPortAddress>.*?):)?(?<clientPort>\\\\d+))?\");\n+    public final Integer serverId;\n+    public final String address;\n+    public final Integer leaderPort;\n+    public final Integer leaderElectionPort;\n+    public final String role;\n+    public final String clientPortAddress;\n+    public final Integer clientPort;\n+\n+    public ZkConfigDyn(Integer serverId, String address, Integer leaderPort, Integer leaderElectionPort, String role, String clientPortAddress, Integer clientPort) {\n+      this.serverId = serverId;\n+      this.address = address;\n+      this.leaderPort = leaderPort;\n+      this.leaderElectionPort = leaderElectionPort;\n+      this.role = role;\n+      this.clientPortAddress = clientPortAddress;\n+      this.clientPort = clientPort;\n+    }\n \n     /**\n-     * Return the most likely address, first trying 'clientPortAddress', falling back to 'address'\n-     * @return\n+     * Resolve the most likely address, first trying 'clientPortAddress', falling back to 'address'\n+     * @return a string with client address, without port\n      */\n     public String resolveClientPortAddress() {\n       return (\"0.0.0.0\".equals(clientPortAddress) || clientPortAddress == null ? address : clientPortAddress);\n"}}, {"oid": "9b625db16ff43cef7810d7fde57fd67fd5f7a1eb", "url": "https://github.com/apache/lucene-solr/commit/9b625db16ff43cef7810d7fde57fd67fd5f7a1eb", "message": "Make variables final, use constructor, use Integer over int", "committedDate": "2020-04-01T13:14:14Z", "type": "commit"}, {"oid": "46a26c9362334cce278f7df0ee79e384a27e1d42", "url": "https://github.com/apache/lucene-solr/commit/46a26c9362334cce278f7df0ee79e384a27e1d42", "message": "Adding more config options to the list of valid\nand remove server.X since they are covered elsewhere and too long to render", "committedDate": "2020-04-01T14:08:54Z", "type": "commit"}, {"oid": "9b5542ad55da601e0bdfda96bad8c2ccabbbc397", "url": "https://github.com/apache/lucene-solr/commit/9b5542ad55da601e0bdfda96bad8c2ccabbbc397", "message": "Remove nocommit. Count observer status as follower\nAdd 'role' to output, if exists", "committedDate": "2020-04-01T14:11:15Z", "type": "commit"}, {"oid": "9938a1bd398d29026ad0ed7ae52af04e558bef11", "url": "https://github.com/apache/lucene-solr/commit/9938a1bd398d29026ad0ed7ae52af04e558bef11", "message": "Revert adding a bunch of config keys that are not available through 4lw", "committedDate": "2020-04-01T15:28:11Z", "type": "commit"}, {"oid": "9777985041830b9ec66d3f1d137eb3a258990ce9", "url": "https://github.com/apache/lucene-solr/commit/9777985041830b9ec66d3f1d137eb3a258990ce9", "message": "Move role to ensemble section\nShow dynamic reconfig\nFilter empty keys", "committedDate": "2020-04-01T17:06:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc5MDgzMw==", "url": "https://github.com/apache/lucene-solr/pull/1392#discussion_r401790833", "bodyText": "I think this should live up here where the reconfig check is done. https://github.com/apache/lucene-solr/pull/1392/files#diff-2f0decb1314fc7f7d3e6e0f497839745R109", "author": "HoustonPutman", "createdAt": "2020-04-01T17:35:24Z", "path": "solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java", "diffHunk": "@@ -109,25 +133,30 @@ public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throw\n           numOk++;\n         }\n         String state = String.valueOf(stat.get(\"zk_server_state\"));\n-        if (\"follower\".equals(state)) {\n+        if (\"follower\".equals(state) || \"observer\".equals(state)) {\n           followers++;\n         } else if (\"leader\".equals(state)) {\n           leaders++;\n           reportedFollowers = Integer.parseInt(String.valueOf(stat.get(\"zk_followers\")));\n         } else if (\"standalone\".equals(state)) {\n           standalone++;\n         }\n+        if (zk.role != null) {\n+          stat.put(\"role\", zk.role);\n+          dynamicReconfig = true;", "originalCommit": "9777985041830b9ec66d3f1d137eb3a258990ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e765ac26e04994bc73a74a46222aaeac41fecf19", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java\nindex ee90ebd6084..bd928882aee 100644\n--- a/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java\n+++ b/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperStatusHandler.java\n\n@@ -143,7 +144,6 @@ public class ZookeeperStatusHandler extends RequestHandlerBase {\n         }\n         if (zk.role != null) {\n           stat.put(\"role\", zk.role);\n-          dynamicReconfig = true;\n         }\n       } catch (SolrException se) {\n         log.warn(\"Failed talking to zookeeper \" + zkClientHostPort, se);\n"}}, {"oid": "e765ac26e04994bc73a74a46222aaeac41fecf19", "url": "https://github.com/apache/lucene-solr/commit/e765ac26e04994bc73a74a46222aaeac41fecf19", "message": "More review fixes", "committedDate": "2020-04-01T18:43:44Z", "type": "commit"}, {"oid": "a2cd1ee76e4bb306811804ad032017481a06003d", "url": "https://github.com/apache/lucene-solr/commit/a2cd1ee76e4bb306811804ad032017481a06003d", "message": "Fix tests, handle null input to parseLines method, add javadoc", "committedDate": "2020-04-01T22:24:28Z", "type": "commit"}, {"oid": "c7288b3c825e32c64120d09c28dc99aa76ed44d7", "url": "https://github.com/apache/lucene-solr/commit/c7288b3c825e32c64120d09c28dc99aa76ed44d7", "message": "Return 400 error instead of 500 error if parsing of zk config line fails", "committedDate": "2020-04-01T22:41:57Z", "type": "commit"}, {"oid": "c6aa692e96cf089d918e5edaaa7f65715843ba3e", "url": "https://github.com/apache/lucene-solr/commit/c6aa692e96cf089d918e5edaaa7f65715843ba3e", "message": "Add error handling if connection string host list is different from dynamic config host list", "committedDate": "2020-04-02T09:58:59Z", "type": "commit"}, {"oid": "57f61a3ae3c23593ea2c3bff7258ee7677bd35f1", "url": "https://github.com/apache/lucene-solr/commit/57f61a3ae3c23593ea2c3bff7258ee7677bd35f1", "message": "Update tests with new error msg", "committedDate": "2020-04-02T10:01:57Z", "type": "commit"}, {"oid": "b989f23480d7d04a6f2cfb2372864e66e8a1cc19", "url": "https://github.com/apache/lucene-solr/commit/b989f23480d7d04a6f2cfb2372864e66e8a1cc19", "message": "Merge branch 'master' into solr14371-zk-status\n\n# Conflicts:\n#\tsolr/CHANGES.txt", "committedDate": "2020-04-05T15:58:14Z", "type": "commit"}, {"oid": "3975ae2a03a52070334f0148c9963969b05877a0", "url": "https://github.com/apache/lucene-solr/commit/3975ae2a03a52070334f0148c9963969b05877a0", "message": "Merge branch 'master' into solr14371-zk-status", "committedDate": "2020-04-07T11:08:06Z", "type": "commit"}, {"oid": "7946a6f0f4fd427d759bb95e7af331c35947e619", "url": "https://github.com/apache/lucene-solr/commit/7946a6f0f4fd427d759bb95e7af331c35947e619", "message": "Re-phrase docs, do not state that Solr supports reconfiguration.", "committedDate": "2020-04-07T11:16:02Z", "type": "commit"}, {"oid": "d024c9691580d7780dead7d14358d507ede06303", "url": "https://github.com/apache/lucene-solr/commit/d024c9691580d7780dead7d14358d507ede06303", "message": "Align try block better", "committedDate": "2020-04-07T11:31:25Z", "type": "commit"}, {"oid": "060978af7c75597557e81ead5c61d13e871f4498", "url": "https://github.com/apache/lucene-solr/commit/060978af7c75597557e81ead5c61d13e871f4498", "message": "Factor out ZkConfigDyn into its own class 'ZkDynamicConfig', move out of SolrZkClient\nParsing /zookeeper config string now returns the ZkDynamicConfig object instead of a List<>", "committedDate": "2020-04-07T13:20:42Z", "type": "commit"}, {"oid": "b9121f200bed6969770e494ad6c964990a2f1b0f", "url": "https://github.com/apache/lucene-solr/commit/b9121f200bed6969770e494ad6c964990a2f1b0f", "message": "Merge branch 'master' into solr14371-zk-status", "committedDate": "2020-04-17T14:01:56Z", "type": "commit"}]}