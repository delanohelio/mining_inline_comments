{"pr_number": 1252, "pr_title": "LUCENE-9218: XYGeometries should expose values as floats", "pr_createdAt": "2020-02-12T08:33:10Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1252", "timeline": [{"oid": "997b356a4dfc1cb4622bd6f2b326ea5fdcf1731d", "url": "https://github.com/apache/lucene-solr/commit/997b356a4dfc1cb4622bd6f2b326ea5fdcf1731d", "message": "XY objects should expose values as floats. Boxing to double\nonly happens when creating component2D objects", "committedDate": "2020-02-12T08:05:09Z", "type": "commit"}, {"oid": "53321b689dd0648443ca066dec744a82a3d907bb", "url": "https://github.com/apache/lucene-solr/commit/53321b689dd0648443ca066dec744a82a3d907bb", "message": "Add unequal for hashcode", "committedDate": "2020-02-14T08:32:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMxNDM2NQ==", "url": "https://github.com/apache/lucene-solr/pull/1252#discussion_r379314365", "bodyText": "This could be a single test.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (Float.isNaN(x) || Float.isInfinite(x)) {\n          \n          \n            \n                if (Float.isFinite(x) == false) {", "author": "jpountz", "createdAt": "2020-02-14T08:58:35Z", "path": "lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java", "diffHunk": "@@ -33,11 +33,12 @@\n   private XYEncodingUtils() {\n   }\n \n-  /** validates value is within +/-{@link Float#MAX_VALUE} coordinate bounds */\n-  public static void checkVal(double x) {\n-    if (Double.isNaN(x) || x < MIN_VAL_INCL || x > MAX_VAL_INCL) {\n+  /** validates value is a number and finite */\n+  static float checkVal(float x) {\n+    if (Float.isNaN(x) || Float.isInfinite(x)) {", "originalCommit": "53321b689dd0648443ca066dec744a82a3d907bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e819fdf79c330a86ce337acd286ee2852483fbc", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java b/lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java\nindex f3c88bd779b..4f2a64ff725 100644\n--- a/lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java\n+++ b/lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java\n\n@@ -35,7 +35,7 @@ public final class XYEncodingUtils {\n \n   /** validates value is a number and finite */\n   static float checkVal(float x) {\n-    if (Float.isNaN(x) || Float.isInfinite(x)) {\n+    if (Float.isFinite(x) == false) {\n       throw new IllegalArgumentException(\"invalid value \" + x + \"; must be between \" + MIN_VAL_INCL + \" and \" + MAX_VAL_INCL);\n     }\n     return x;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMxNDUzOQ==", "url": "https://github.com/apache/lucene-solr/pull/1252#discussion_r379314539", "bodyText": "nit: maybe add Array to the method name", "author": "jpountz", "createdAt": "2020-02-14T08:58:59Z", "path": "lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java", "diffHunk": "@@ -68,7 +68,15 @@ public static double decode(int encoded) {\n    * @param offset offset into {@code src} to decode from.\n    * @return decoded value.\n    */\n-  public static double decode(byte[] src, int offset) {\n+  public static float decode(byte[] src, int offset) {\n     return decode(NumericUtils.sortableBytesToInt(src, offset));\n   }\n+\n+  static double[] floatToDouble(float[] f) {", "originalCommit": "53321b689dd0648443ca066dec744a82a3d907bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e819fdf79c330a86ce337acd286ee2852483fbc", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java b/lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java\nindex f3c88bd779b..4f2a64ff725 100644\n--- a/lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java\n+++ b/lucene/core/src/java/org/apache/lucene/geo/XYEncodingUtils.java\n\n@@ -72,7 +72,7 @@ public final class XYEncodingUtils {\n     return decode(NumericUtils.sortableBytesToInt(src, offset));\n   }\n \n-  static double[] floatToDouble(float[] f) {\n+  static double[] floatArrayToDoubleArray(float[] f) {\n     double[] d = new double[f.length];\n     for (int i = 0; i < f.length; i++) {\n       d[i] = f[i];\n"}}, {"oid": "2e819fdf79c330a86ce337acd286ee2852483fbc", "url": "https://github.com/apache/lucene-solr/commit/2e819fdf79c330a86ce337acd286ee2852483fbc", "message": "Address review and add entry in CHANGES.txt", "committedDate": "2020-02-14T10:25:26Z", "type": "commit"}]}