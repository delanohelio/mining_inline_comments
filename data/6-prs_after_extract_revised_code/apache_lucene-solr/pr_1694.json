{"pr_number": 1694, "pr_title": "SOLR-14680: Provide simple interfaces to our cloud classes  (only API)", "pr_createdAt": "2020-07-26T00:20:20Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1694", "timeline": [{"oid": "8afacf215170b01f186fcfd89b31726fc3e596ec", "url": "https://github.com/apache/lucene-solr/commit/8afacf215170b01f186fcfd89b31726fc3e596ec", "message": "simple API view of Solr cluster", "committedDate": "2020-07-25T07:12:07Z", "type": "commit"}, {"oid": "80b3ce48cd5a1f8514187f5efcf7dabd1d523d29", "url": "https://github.com/apache/lucene-solr/commit/80b3ce48cd5a1f8514187f5efcf7dabd1d523d29", "message": "simple API view of Solr cluster", "committedDate": "2020-07-25T07:48:05Z", "type": "commit"}, {"oid": "a6a30eb0d3d5c1f7284db9eb7e08f740ce4844d8", "url": "https://github.com/apache/lucene-solr/commit/a6a30eb0d3d5c1f7284db9eb7e08f740ce4844d8", "message": "simple API view of Solr cluster", "committedDate": "2020-07-25T07:50:22Z", "type": "commit"}, {"oid": "a6d05f85d65355282ab2d0884ae790245c86ff9b", "url": "https://github.com/apache/lucene-solr/commit/a6d05f85d65355282ab2d0884ae790245c86ff9b", "message": "precommit", "committedDate": "2020-07-25T07:54:47Z", "type": "commit"}, {"oid": "46a371ec4a5c1abdad9197f29d59e11f038981e3", "url": "https://github.com/apache/lucene-solr/commit/46a371ec4a5c1abdad9197f29d59e11f038981e3", "message": "precommit", "committedDate": "2020-07-25T07:55:43Z", "type": "commit"}, {"oid": "001f48b4ecfad1b3f9178f31ce763a9d1f3e8aa3", "url": "https://github.com/apache/lucene-solr/commit/001f48b4ecfad1b3f9178f31ce763a9d1f3e8aa3", "message": "cleanup", "committedDate": "2020-07-26T00:07:38Z", "type": "commit"}, {"oid": "f4fd18a94201bc3f217c31396d97f3f3a9441787", "url": "https://github.com/apache/lucene-solr/commit/f4fd18a94201bc3f217c31396d97f3f3a9441787", "message": "cleanup", "committedDate": "2020-07-26T00:16:59Z", "type": "commit"}, {"oid": "ba29f2ec81c6112a317dd879a4788464ac61e4f7", "url": "https://github.com/apache/lucene-solr/commit/ba29f2ec81c6112a317dd879a4788464ac61e4f7", "message": "cleanup", "committedDate": "2020-07-26T00:38:28Z", "type": "commit"}, {"oid": "1eda20179a132baa91e609359daa30c30731a31f", "url": "https://github.com/apache/lucene-solr/commit/1eda20179a132baa91e609359daa30c30731a31f", "message": "cleanup", "committedDate": "2020-07-26T00:57:35Z", "type": "commit"}, {"oid": "342ae67f2a701f4439e872a1c95c821e5f912572", "url": "https://github.com/apache/lucene-solr/commit/342ae67f2a701f4439e872a1c95c821e5f912572", "message": "precommit errors", "committedDate": "2020-07-26T05:00:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDExMw==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460560113", "bodyText": "Possibly good to also answer the question of \"what collections are participating in this node\" and what shards of Collection X are on this node.", "author": "gus-asf", "createdAt": "2020-07-26T18:44:42Z", "path": "solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrNode.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.common.cloud.sdk;\n+\n+import org.apache.solr.common.util.SimpleMap;\n+\n+/**\n+ * A read only view of a Solr node\n+ */\n+public interface SolrNode {\n+\n+  /** The node name */\n+  String name();\n+\n+  String baseUrl(boolean isV2);\n+\n+  SimpleMap<ShardReplica> cores();", "originalCommit": "342ae67f2a701f4439e872a1c95c821e5f912572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyNDA1MA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460624050", "bodyText": "I would say, that is something that can be easily computed from the cores() method and can be provided as a helper method elsewhere", "author": "noblepaul", "createdAt": "2020-07-27T03:08:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDExMw=="}], "type": "inlineReview", "revised_code": {"commit": "87c43bdb777bf9064ceb55d8ac4431f5dacd351a", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrNode.java b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrNode.java\nindex 9ab5d16c70d..d4667b339c6 100644\n--- a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrNode.java\n+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrNode.java\n\n@@ -29,5 +29,9 @@ public interface SolrNode {\n \n   String baseUrl(boolean isV2);\n \n+  /**\n+   * Get all the cores in a given node.\n+   * This usually involves a network call. So, it's likely to be expensive\n+   */\n   SimpleMap<ShardReplica> cores();\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDI0OA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460560248", "bodyText": "Also aliases... and the Alias class returned should list the collections provided and routing info if routed. (also law of Demeter etc...)", "author": "gus-asf", "createdAt": "2020-07-26T18:46:00Z", "path": "solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.common.cloud.sdk;\n+\n+import org.apache.solr.common.util.SimpleMap;\n+\n+/**\n+ * Represents a Solr cluster\n+ */\n+public interface SolrCluster {\n+  /** collections in the cluster */\n+  SimpleMap<SolrCollection> collections();", "originalCommit": "342ae67f2a701f4439e872a1c95c821e5f912572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyNzY1NA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460627654", "bodyText": "Yes, I wanted to include aliases. Where do you propose it to be there?\nI would say , There should be no Alias class/interface.\nIt should be as simple as\nSolrCluster#collections#get(String name , boolean includeAlias) \nand\n SolrCollection#aliases() returns List<String>", "author": "noblepaul", "createdAt": "2020-07-27T03:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDI0OA=="}], "type": "inlineReview", "revised_code": {"commit": "87c43bdb777bf9064ceb55d8ac4431f5dacd351a", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java\nindex a054ea6068b..d1e3fa6c55d 100644\n--- a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java\n+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java\n\n@@ -26,6 +26,9 @@ public interface SolrCluster {\n   /** collections in the cluster */\n   SimpleMap<SolrCollection> collections();\n \n+  /** collections in the cluster and aliases */\n+  SimpleMap<SolrCollection> collections(boolean includeAlias);\n+\n   /** nodes in the cluster */\n   SimpleMap<SolrNode> nodes();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDM5Mg==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460560392", "bodyText": "Also I've definitely had cases where I wanted a list of nodes where this collection is hosted.", "author": "gus-asf", "createdAt": "2020-07-26T18:47:24Z", "path": "solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCollection.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.common.cloud.sdk;\n+\n+import org.apache.solr.common.util.SimpleMap;\n+\n+/** Represents a collection in Solr */\n+public interface SolrCollection {", "originalCommit": "342ae67f2a701f4439e872a1c95c821e5f912572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyNzgyNA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460627824", "bodyText": "That should be a utility method outside", "author": "noblepaul", "createdAt": "2020-07-27T03:27:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDM5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "8dcd447d4629590c07337598000c9f72cb60f31c", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCollection.java b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCollection.java\nindex a34969902e0..49fd0c723e7 100644\n--- a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCollection.java\n+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCollection.java\n\n@@ -30,4 +30,6 @@ public interface SolrCollection {\n    */\n   String configSet();\n \n+  Router router();\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTAxNw==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460561017", "bodyText": "Since we have our own package namespace, prepending solr isn't really needed unless we think we might also model non-solr clusters.", "author": "gus-asf", "createdAt": "2020-07-26T18:54:12Z", "path": "solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.common.cloud.sdk;\n+\n+import org.apache.solr.common.util.SimpleMap;\n+\n+/**\n+ * Represents a Solr cluster\n+ */\n+public interface SolrCluster {", "originalCommit": "342ae67f2a701f4439e872a1c95c821e5f912572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyNjU5Ng==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460626596", "bodyText": "I know. Imagine this will also be used outside of Solr as a part of SolrJ. So if you read some client code,\nCluster cluster;\nis less readable compared to\nSolrCluster solrCluster;\nEventually, I would wish to replace a lot of SolrJ code/API with a standard set of interfaces.", "author": "noblepaul", "createdAt": "2020-07-27T03:21:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTAxNw=="}], "type": "inlineReview", "revised_code": {"commit": "87c43bdb777bf9064ceb55d8ac4431f5dacd351a", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java\nindex a054ea6068b..d1e3fa6c55d 100644\n--- a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java\n+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java\n\n@@ -26,6 +26,9 @@ public interface SolrCluster {\n   /** collections in the cluster */\n   SimpleMap<SolrCollection> collections();\n \n+  /** collections in the cluster and aliases */\n+  SimpleMap<SolrCollection> collections(boolean includeAlias);\n+\n   /** nodes in the cluster */\n   SimpleMap<SolrNode> nodes();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTIxOQ==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460561219", "bodyText": "I've wondered sometimes if clusters should have name or id of some sort but that's probably another topic.", "author": "gus-asf", "createdAt": "2020-07-26T18:56:16Z", "path": "solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.common.cloud.sdk;\n+\n+import org.apache.solr.common.util.SimpleMap;\n+\n+/**\n+ * Represents a Solr cluster\n+ */\n+public interface SolrCluster {\n+  /** collections in the cluster */\n+  SimpleMap<SolrCollection> collections();\n+\n+  /** nodes in the cluster */\n+  SimpleMap<SolrNode> nodes();\n+\n+  /** Get a {@link SolrNode} by name. returns null if no such node exists */\n+  SolrNode getNode(String node);\n+\n+  /**\n+   * Name of the node in which the overseer is running\n+   */\n+  String overseerNode();\n+\n+  /**\n+   * The name of the node in which this method is invoked from. returns null, if this is not invoked from a\n+   * Solr node\n+   */\n+  String thisNode();\n+", "originalCommit": "342ae67f2a701f4439e872a1c95c821e5f912572", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "87c43bdb777bf9064ceb55d8ac4431f5dacd351a", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java\nindex a054ea6068b..d1e3fa6c55d 100644\n--- a/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java\n+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/sdk/SolrCluster.java\n\n@@ -26,6 +26,9 @@ public interface SolrCluster {\n   /** collections in the cluster */\n   SimpleMap<SolrCollection> collections();\n \n+  /** collections in the cluster and aliases */\n+  SimpleMap<SolrCollection> collections(boolean includeAlias);\n+\n   /** nodes in the cluster */\n   SimpleMap<SolrNode> nodes();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjM5NA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460562394", "bodyText": "this class appears unused...", "author": "gus-asf", "createdAt": "2020-07-26T19:08:52Z", "path": "solr/solrj/src/java/org/apache/solr/common/util/LinkedSimpleHashMap.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.solr.common.util;\n+\n+import java.util.LinkedHashMap;\n+\n+public class LinkedSimpleHashMap<T> extends LinkedHashMap<CharSequence, T>  implements SimpleMap<T> {", "originalCommit": "342ae67f2a701f4439e872a1c95c821e5f912572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyMjEwMA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460622100", "bodyText": "yes, this was to demonstrate how to implement a default impl of SimpleMap", "author": "noblepaul", "createdAt": "2020-07-27T02:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjM5NA=="}], "type": "inlineReview", "revised_code": {"commit": "870ba5f307b899f752e8aad522469b88fc1628d8", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/common/util/LinkedSimpleHashMap.java b/solr/solrj/src/java/org/apache/solr/cluster/api/Router.java\nsimilarity index 75%\nrename from solr/solrj/src/java/org/apache/solr/common/util/LinkedSimpleHashMap.java\nrename to solr/solrj/src/java/org/apache/solr/cluster/api/Router.java\nindex 185b9a7a33b..e2a147e8402 100644\n--- a/solr/solrj/src/java/org/apache/solr/common/util/LinkedSimpleHashMap.java\n+++ b/solr/solrj/src/java/org/apache/solr/cluster/api/Router.java\n\n@@ -14,14 +14,12 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.solr.common.util;\n \n-import java.util.LinkedHashMap;\n+package org.apache.solr.cluster.api;\n \n-public class LinkedSimpleHashMap<T> extends LinkedHashMap<CharSequence, T>  implements SimpleMap<T> {\n-    @Override\n-    public T get(CharSequence key) {\n-        return super.get(key);\n-    }\n+/**identify shards for a given routing key or document id */\n+public interface Router {\n \n+    /**shard name for a given routing key */\n+    String shard(String routingKey);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2Mjc4MQ==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460562781", "bodyText": "Little worried that this design allows for casting of the SolrCluster reference...", "author": "gus-asf", "createdAt": "2020-07-26T19:12:45Z", "path": "solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java", "diffHunk": "@@ -38,7 +43,7 @@\n  * {@link ZkStateReader#getClusterState()}.\n  * @lucene.experimental\n  */\n-public class ClusterState implements JSONWriter.Writable {\n+public class ClusterState implements JSONWriter.Writable , SolrCluster {", "originalCommit": "342ae67f2a701f4439e872a1c95c821e5f912572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyMjUyMA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460622520", "bodyText": "We can have multiple implementations of SolrCluster .The idea of existing classes implementing these interfaces is to have readily available implementations", "author": "noblepaul", "createdAt": "2020-07-27T03:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2Mjc4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyMzg2Mw==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r460623863", "bodyText": "Let's rename Solr luster to Cluster.", "author": "chatman", "createdAt": "2020-07-27T03:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2Mjc4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "870ba5f307b899f752e8aad522469b88fc1628d8", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java\nindex a00ca0d9e47..ebed0ff0663 100644\n--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java\n+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java\n\n@@ -43,7 +38,7 @@ import org.noggit.JSONWriter;\n  * {@link ZkStateReader#getClusterState()}.\n  * @lucene.experimental\n  */\n-public class ClusterState implements JSONWriter.Writable , SolrCluster {\n+public class ClusterState implements JSONWriter.Writable {\n \n   private final Map<String, CollectionRef> collectionStates, immutableCollectionStates;\n   private Set<String> liveNodes;\n"}}, {"oid": "87c43bdb777bf9064ceb55d8ac4431f5dacd351a", "url": "https://github.com/apache/lucene-solr/commit/87c43bdb777bf9064ceb55d8ac4431f5dacd351a", "message": "more methods", "committedDate": "2020-07-27T06:59:36Z", "type": "commit"}, {"oid": "ccb0ae907ed6d21be08b6ccfd8c2495af743e787", "url": "https://github.com/apache/lucene-solr/commit/ccb0ae907ed6d21be08b6ccfd8c2495af743e787", "message": "removed unnecessary method", "committedDate": "2020-07-27T07:14:42Z", "type": "commit"}, {"oid": "baac5333b5080421810c644ad15f0c3639413d48", "url": "https://github.com/apache/lucene-solr/commit/baac5333b5080421810c644ad15f0c3639413d48", "message": "removed a method", "committedDate": "2020-07-27T07:15:58Z", "type": "commit"}, {"oid": "8dcd447d4629590c07337598000c9f72cb60f31c", "url": "https://github.com/apache/lucene-solr/commit/8dcd447d4629590c07337598000c9f72cb60f31c", "message": "added Router", "committedDate": "2020-07-27T07:29:34Z", "type": "commit"}, {"oid": "6201980346510aa4fa43f9de6756fcc5b1010f75", "url": "https://github.com/apache/lucene-solr/commit/6201980346510aa4fa43f9de6756fcc5b1010f75", "message": "added ASL Header", "committedDate": "2020-07-27T07:30:22Z", "type": "commit"}, {"oid": "0d39cee78402cf4ed66ccab5d1fca9e5c2c1b68e", "url": "https://github.com/apache/lucene-solr/commit/0d39cee78402cf4ed66ccab5d1fca9e5c2c1b68e", "message": "moved the package to o.a.s.cluster.api", "committedDate": "2020-07-27T23:50:10Z", "type": "commit"}, {"oid": "93c5311f9aa201c5edb7e6f7135e4d359fd24c1f", "url": "https://github.com/apache/lucene-solr/commit/93c5311f9aa201c5edb7e6f7135e4d359fd24c1f", "message": "added configset as well", "committedDate": "2020-07-28T00:03:13Z", "type": "commit"}, {"oid": "fe6aa0103fc6183700ee5794f82676e26d705ec7", "url": "https://github.com/apache/lucene-solr/commit/fe6aa0103fc6183700ee5794f82676e26d705ec7", "message": "added exceptions", "committedDate": "2020-07-28T00:13:12Z", "type": "commit"}, {"oid": "b91b461632b19c9488926a9302126a2158df3298", "url": "https://github.com/apache/lucene-solr/commit/b91b461632b19c9488926a9302126a2158df3298", "message": "added HashRange", "committedDate": "2020-07-28T00:36:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMzgxOA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r462323818", "bodyText": "Instead of boolean isV2, what about an Enum, that could then evolve?", "author": "janhoy", "createdAt": "2020-07-29T14:04:09Z", "path": "solr/solrj/src/java/org/apache/solr/cluster/api/SolrNode.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.api;\n+\n+import org.apache.solr.common.util.SimpleMap;\n+\n+/** A read only view of a Solr node */\n+public interface SolrNode {\n+\n+  /** The node name */\n+  String name();\n+\n+  /**Base http url for this node\n+   *\n+   * @param isV2 if true gives the /api endpoint , else /solr endpoint\n+   */\n+  String baseUrl(boolean isV2);", "originalCommit": "b91b461632b19c9488926a9302126a2158df3298", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg0NTUxMg==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r467845512", "bodyText": "done", "author": "noblepaul", "createdAt": "2020-08-10T11:37:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMzgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "870ba5f307b899f752e8aad522469b88fc1628d8", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/cluster/api/SolrNode.java b/solr/solrj/src/java/org/apache/solr/cluster/api/SolrNode.java\nindex 733bfec2060..67547ca9d9e 100644\n--- a/solr/solrj/src/java/org/apache/solr/cluster/api/SolrNode.java\n+++ b/solr/solrj/src/java/org/apache/solr/cluster/api/SolrNode.java\n\n@@ -17,8 +17,6 @@\n \n package org.apache.solr.cluster.api;\n \n-import org.apache.solr.common.util.SimpleMap;\n-\n /** A read only view of a Solr node */\n public interface SolrNode {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjk4OQ==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r462326989", "bodyText": "General : Please format Javadocs properly with text starting on line 2 and capital letter, even if it takes more lines.", "author": "janhoy", "createdAt": "2020-07-29T14:08:29Z", "path": "solr/solrj/src/java/org/apache/solr/cluster/api/Config.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.api;\n+\n+import java.io.InputStream;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+\n+import org.apache.solr.common.SolrException;\n+\n+public interface Config {\n+\n+  String name();\n+\n+  /**set of files in the config */", "originalCommit": "b91b461632b19c9488926a9302126a2158df3298", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUwODk4Mw==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r462508983", "bodyText": "A one-line variant is acceptable: https://google.github.io/styleguide/javaguide.html#s7.1.1-javadoc-multi-line\nThe only problem I see with the javadoc here is that it's missing a leading space, and it should capitalize the first letter.", "author": "dsmiley", "createdAt": "2020-07-29T18:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxMTMzNQ==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r462911335", "bodyText": "Ok, agree", "author": "janhoy", "createdAt": "2020-07-30T10:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyNjk4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "870ba5f307b899f752e8aad522469b88fc1628d8", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/cluster/api/Config.java b/solr/solrj/src/java/org/apache/solr/cluster/api/Resource.java\nsimilarity index 56%\nrename from solr/solrj/src/java/org/apache/solr/cluster/api/Config.java\nrename to solr/solrj/src/java/org/apache/solr/cluster/api/Resource.java\nindex 084a9c417a9..470590e83e2 100644\n--- a/solr/solrj/src/java/org/apache/solr/cluster/api/Config.java\n+++ b/solr/solrj/src/java/org/apache/solr/cluster/api/Resource.java\n\n@@ -17,24 +17,25 @@\n \n package org.apache.solr.cluster.api;\n \n-import java.io.InputStream;\n-import java.util.Set;\n-import java.util.function.Consumer;\n-\n import org.apache.solr.common.SolrException;\n \n-public interface Config {\n-\n-  String name();\n-\n-  /**set of files in the config */\n-  Set<String> resources() throws SolrException;\n-\n-  /** read a file inside the config.\n-   * The caller should consume the stream completely and should not hold a reference to this stream.\n-   * This method closes the stream soon after the method returns\n-   * @param file  name of the file e.g: schema.xml\n-   */\n-  void  resource(Consumer<InputStream> file) throws SolrException;\n+import java.io.IOException;\n+import java.io.InputStream;\n \n+/**A binary resource. The impl is agnostic of the content type */\n+public interface Resource {\n+    /**\n+     * This is a full path. e.g schema.xml , solrconfig.xml , lang/stopwords.txt etc\n+     */\n+    String name();\n+    /** read a file/resource.\n+     * The caller should consume the stream completely and should not hold a reference to this stream.\n+     * This method closes the stream soon after the method returns\n+     * @param resourceConsumer This should be a full path. e.g schema.xml , solrconfig.xml , lang/stopwords.txt etc\n+     */\n+    void get(Consumer resourceConsumer) throws SolrException;\n+\n+    interface Consumer {\n+        void read(InputStream is) throws IOException;\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyOTYzNA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r462329634", "bodyText": "Use ConfigSet instead? Config is soooo overloaded.", "author": "janhoy", "createdAt": "2020-07-29T14:11:35Z", "path": "solr/solrj/src/java/org/apache/solr/cluster/api/Config.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.cluster.api;\n+\n+import java.io.InputStream;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+\n+import org.apache.solr.common.SolrException;\n+\n+public interface Config {", "originalCommit": "b91b461632b19c9488926a9302126a2158df3298", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzMTIyMA==", "url": "https://github.com/apache/lucene-solr/pull/1694#discussion_r462931220", "bodyText": "I don't like both names , Config & ConfigSet\nconfigset suggests it is a set of configs? in reality it's a single configuration which has multiple files", "author": "noblepaul", "createdAt": "2020-07-30T11:28:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyOTYzNA=="}], "type": "inlineReview", "revised_code": {"commit": "870ba5f307b899f752e8aad522469b88fc1628d8", "chunk": "diff --git a/solr/solrj/src/java/org/apache/solr/cluster/api/Config.java b/solr/solrj/src/java/org/apache/solr/cluster/api/Resource.java\nsimilarity index 56%\nrename from solr/solrj/src/java/org/apache/solr/cluster/api/Config.java\nrename to solr/solrj/src/java/org/apache/solr/cluster/api/Resource.java\nindex 084a9c417a9..470590e83e2 100644\n--- a/solr/solrj/src/java/org/apache/solr/cluster/api/Config.java\n+++ b/solr/solrj/src/java/org/apache/solr/cluster/api/Resource.java\n\n@@ -17,24 +17,25 @@\n \n package org.apache.solr.cluster.api;\n \n-import java.io.InputStream;\n-import java.util.Set;\n-import java.util.function.Consumer;\n-\n import org.apache.solr.common.SolrException;\n \n-public interface Config {\n-\n-  String name();\n-\n-  /**set of files in the config */\n-  Set<String> resources() throws SolrException;\n-\n-  /** read a file inside the config.\n-   * The caller should consume the stream completely and should not hold a reference to this stream.\n-   * This method closes the stream soon after the method returns\n-   * @param file  name of the file e.g: schema.xml\n-   */\n-  void  resource(Consumer<InputStream> file) throws SolrException;\n+import java.io.IOException;\n+import java.io.InputStream;\n \n+/**A binary resource. The impl is agnostic of the content type */\n+public interface Resource {\n+    /**\n+     * This is a full path. e.g schema.xml , solrconfig.xml , lang/stopwords.txt etc\n+     */\n+    String name();\n+    /** read a file/resource.\n+     * The caller should consume the stream completely and should not hold a reference to this stream.\n+     * This method closes the stream soon after the method returns\n+     * @param resourceConsumer This should be a full path. e.g schema.xml , solrconfig.xml , lang/stopwords.txt etc\n+     */\n+    void get(Consumer resourceConsumer) throws SolrException;\n+\n+    interface Consumer {\n+        void read(InputStream is) throws IOException;\n+    }\n }\n"}}, {"oid": "0a29e4d427ca572937a7d9c4e31c25b1c12e4dfc", "url": "https://github.com/apache/lucene-solr/commit/0a29e4d427ca572937a7d9c4e31c25b1c12e4dfc", "message": "Added replica size", "committedDate": "2020-08-03T02:05:16Z", "type": "commit"}, {"oid": "018c18fb442234210223e036276c69270b03414c", "url": "https://github.com/apache/lucene-solr/commit/018c18fb442234210223e036276c69270b03414c", "message": "added the missing name() method", "committedDate": "2020-08-03T15:02:12Z", "type": "commit"}, {"oid": "870ba5f307b899f752e8aad522469b88fc1628d8", "url": "https://github.com/apache/lucene-solr/commit/870ba5f307b899f752e8aad522469b88fc1628d8", "message": "merging with origin/jira/solr14680", "committedDate": "2020-08-10T08:49:31Z", "type": "commit"}, {"oid": "30a4ec2bca733647414fdc56c4cf39203c43617e", "url": "https://github.com/apache/lucene-solr/commit/30a4ec2bca733647414fdc56c4cf39203c43617e", "message": "merging with origin/jira/solr14680", "committedDate": "2020-08-10T08:51:08Z", "type": "commit"}, {"oid": "931eaa3d428e8728b09f4377157ace2dbe51835c", "url": "https://github.com/apache/lucene-solr/commit/931eaa3d428e8728b09f4377157ace2dbe51835c", "message": "reverting unnecessary changes", "committedDate": "2020-08-10T11:32:09Z", "type": "commit"}, {"oid": "e21e9eaf8d05de0efaccf3c4021e64da6dc069b6", "url": "https://github.com/apache/lucene-solr/commit/e21e9eaf8d05de0efaccf3c4021e64da6dc069b6", "message": "use enum for prefix", "committedDate": "2020-08-10T11:37:39Z", "type": "commit"}, {"oid": "d2e8e120fd140de498856d4ba5fc067d8b9c9cde", "url": "https://github.com/apache/lucene-solr/commit/d2e8e120fd140de498856d4ba5fc067d8b9c9cde", "message": "refactor", "committedDate": "2020-08-11T00:23:35Z", "type": "commit"}, {"oid": "8c3bc25dc94d8031944e030cabd1771ab1c79023", "url": "https://github.com/apache/lucene-solr/commit/8c3bc25dc94d8031944e030cabd1771ab1c79023", "message": "isLeader() added", "committedDate": "2020-08-11T01:13:54Z", "type": "commit"}, {"oid": "0c2da562e9ae61c337977216cf14927166031c82", "url": "https://github.com/apache/lucene-solr/commit/0c2da562e9ae61c337977216cf14927166031c82", "message": "baseUrl() added", "committedDate": "2020-08-11T01:36:59Z", "type": "commit"}, {"oid": "adebaf85e85471ede13b863e42b78fdebb6e47e2", "url": "https://github.com/apache/lucene-solr/commit/adebaf85e85471ede13b863e42b78fdebb6e47e2", "message": "url()", "committedDate": "2020-08-11T03:38:15Z", "type": "commit"}]}