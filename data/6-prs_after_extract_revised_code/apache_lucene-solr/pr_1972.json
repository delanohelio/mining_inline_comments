{"pr_number": 1972, "pr_title": "SOLR-14915: Prometheus-exporter does not depend on Solr-core any longer", "pr_createdAt": "2020-10-11T05:09:42Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1972", "timeline": [{"oid": "01400c3de5505f880e3aa8af43a92a23740e41aa", "url": "https://github.com/apache/lucene-solr/commit/01400c3de5505f880e3aa8af43a92a23740e41aa", "message": "SOLR-14915: Prometheus-exporter does not depend on Solr-core any longer\nEnhanced gradle config to operate as an application", "committedDate": "2020-10-11T04:40:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3MzUzNw==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r502873537", "bodyText": "XXE_DOCUMENT:  The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks (details)", "author": "sonatype-lift", "createdAt": "2020-10-11T06:40:52Z", "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java", "diffHunk": "@@ -66,13 +76,27 @@ public PrometheusExporterSettings getSettings() {\n     return searchConfiguration;\n   }\n \n-  public static MetricsConfiguration from(XmlConfigFile config) throws Exception {\n-    Node settings = config.getNode(\"/config/settings\", false);\n+  public static MetricsConfiguration from(Path file) throws Exception {\n+    // See solr-core XmlConfigFile\n+    final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+    try {\n+      dbf.setXIncludeAware(true);\n+      dbf.setNamespaceAware(true);\n+    } catch (UnsupportedOperationException e) {\n+      log.warn(\"{} XML parser doesn't support XInclude option\", file);\n+    }\n+\n+    final Document document = dbf.newDocumentBuilder().parse(file.toFile());", "originalCommit": "01400c3de5505f880e3aa8af43a92a23740e41aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkzNjgwNg==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r502936806", "bodyText": "Acknowledged, and doesn't matter when the XML file is a local configuration file as opposed to external input.", "author": "dsmiley", "createdAt": "2020-10-11T16:25:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3MzUzNw=="}], "type": "inlineReview", "revised_code": {"commit": "6f9a6647178a5636f535b05b2d146670d26b1064", "chunk": "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java\nindex bf05021c44e..4c4adc892ba 100644\n--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java\n+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java\n\n@@ -76,17 +81,26 @@ public class MetricsConfiguration {\n     return searchConfiguration;\n   }\n \n-  public static MetricsConfiguration from(Path file) throws Exception {\n+  public static MetricsConfiguration from(String path) throws Exception {\n     // See solr-core XmlConfigFile\n     final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n     try {\n       dbf.setXIncludeAware(true);\n       dbf.setNamespaceAware(true);\n     } catch (UnsupportedOperationException e) {\n-      log.warn(\"{} XML parser doesn't support XInclude option\", file);\n+      log.warn(\"{} XML parser doesn't support XInclude option\", path);\n+    }\n+\n+    Document document;\n+    File file = new File(path);\n+    if (file.isFile()) {\n+      document = dbf.newDocumentBuilder().parse(file);\n+    } else {\n+      try (InputStream configInputStream = MethodHandles.lookup().lookupClass().getClassLoader().getResourceAsStream(path.replace(File.separatorChar, '/'))) {\n+        document = dbf.newDocumentBuilder().parse(configInputStream);\n+      }\n     }\n \n-    final Document document = dbf.newDocumentBuilder().parse(file.toFile());\n     return from(document);\n   }\n \n"}}, {"oid": "6eefa75e9d9b07a448eb1d6e787c4516273b5e32", "url": "https://github.com/apache/lucene-solr/commit/6eefa75e9d9b07a448eb1d6e787c4516273b5e32", "message": "Merge branch 'master' into solr-14915-prometheusDeps", "committedDate": "2020-11-14T20:56:44Z", "type": "commit"}, {"oid": "afa35428b5961f6f4b44e6c559089c4177ddce37", "url": "https://github.com/apache/lucene-solr/commit/afa35428b5961f6f4b44e6c559089c4177ddce37", "message": "Don't use \"application\" plugin but add \"run\" task.\nUse own log4j2.xml", "committedDate": "2020-11-15T05:28:26Z", "type": "commit"}, {"oid": "0ffdf9ed21de194c90f65093764b867c1cd996f8", "url": "https://github.com/apache/lucene-solr/commit/0ffdf9ed21de194c90f65093764b867c1cd996f8", "message": "Assemble all dependencies except logging and SolrJ's.", "committedDate": "2020-11-15T06:37:32Z", "type": "commit"}, {"oid": "1a6e3195dc099d4cb484b123678091b8a12eb8f6", "url": "https://github.com/apache/lucene-solr/commit/1a6e3195dc099d4cb484b123678091b8a12eb8f6", "message": "refer to solr-exporter-config.xml in conf/ because it's referenced directly, not on the classpath.  Ironically this undoes SOLR-14957 a little bit.", "committedDate": "2020-11-15T07:09:09Z", "type": "commit"}, {"oid": "2ba0d157607e4897203e06c0b9b5a9fff7af8d69", "url": "https://github.com/apache/lucene-solr/commit/2ba0d157607e4897203e06c0b9b5a9fff7af8d69", "message": "Remove accidental IDE auto-declaration?", "committedDate": "2020-11-15T07:20:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3Nzc0NA==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r523777744", "bodyText": "@HoustonPutman you removed the conf/ and I'm putting it back.  I'm not sure why it worked with it gone.  It may be related to other changes in this PR that it's needed again.  I tested that this works here both with gw run and via executing normally from the built assembly.  I didn't test Docker yet.", "author": "dsmiley", "createdAt": "2020-11-15T16:04:00Z", "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java", "diffHunk": "@@ -68,7 +66,7 @@\n   private static final String[] ARG_CONFIG_FLAGS = {\"-f\", \"--config-file\"};\n   private static final String ARG_CONFIG_METAVAR = \"CONFIG\";\n   private static final String ARG_CONFIG_DEST = \"configFile\";\n-  private static final String ARG_CONFIG_DEFAULT = \"solr-exporter-config.xml\";\n+  private static final String ARG_CONFIG_DEFAULT = \"conf/solr-exporter-config.xml\";", "originalCommit": "2ba0d157607e4897203e06c0b9b5a9fff7af8d69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxNDM3MQ==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r527814371", "bodyText": "So the reason I removed the conf/ is because I was reading the file off of the classpath. That way you can run solr-exporter from anywhere, not just contrib/prometheus-exporter.\nThe reason it doesn't work anymore is that we aren't using the SolrResourceLoader in this PR. I have a fix made that should allow for both the default config to be read off of the classpath or other configs specified via a file location. I can push it to this branch if you don't mind.", "author": "HoustonPutman", "createdAt": "2020-11-20T16:38:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3Nzc0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg2NjE5MA==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r527866190", "bodyText": "Sure; push if you want.  I don't think it's important to read off the classpath so long as it reads it from somewhere... but if it works, that's nice.", "author": "dsmiley", "createdAt": "2020-11-20T17:47:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3Nzc0NA=="}], "type": "inlineReview", "revised_code": {"commit": "6f9a6647178a5636f535b05b2d146670d26b1064", "chunk": "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java\nindex 00235606195..ee0a56f4ab0 100644\n--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java\n+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java\n\n@@ -66,7 +66,7 @@ public class SolrExporter {\n   private static final String[] ARG_CONFIG_FLAGS = {\"-f\", \"--config-file\"};\n   private static final String ARG_CONFIG_METAVAR = \"CONFIG\";\n   private static final String ARG_CONFIG_DEST = \"configFile\";\n-  private static final String ARG_CONFIG_DEFAULT = \"conf/solr-exporter-config.xml\";\n+  private static final String ARG_CONFIG_DEFAULT = \"solr-exporter-config.xml\";\n   private static final String ARG_CONFIG_HELP = \"Specify the configuration file; the default is \" + ARG_CONFIG_DEFAULT + \".\";\n \n   private static final String[] ARG_SCRAPE_INTERVAL_FLAGS = {\"-s\", \"--scrape-interval\"};\n"}}, {"oid": "6f9a6647178a5636f535b05b2d146670d26b1064", "url": "https://github.com/apache/lucene-solr/commit/6f9a6647178a5636f535b05b2d146670d26b1064", "message": "Allow reading of the default prometheus exporter config from the classpath.", "committedDate": "2020-11-20T17:52:55Z", "type": "commit"}, {"oid": "2f205169019e642519581c72d30b4f9449d7b469", "url": "https://github.com/apache/lucene-solr/commit/2f205169019e642519581c72d30b4f9449d7b469", "message": "Removing unneeded imports.", "committedDate": "2020-11-20T17:55:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyNDkyOQ==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r527924929", "bodyText": "PATH_TRAVERSAL_IN:  This API (java/io/File.(Ljava/lang/String;)V) reads a file whose location might be specified by user input (details)", "author": "sonatype-lift", "createdAt": "2020-11-20T19:27:23Z", "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java", "diffHunk": "@@ -66,13 +81,36 @@ public PrometheusExporterSettings getSettings() {\n     return searchConfiguration;\n   }\n \n-  public static MetricsConfiguration from(XmlConfigFile config) throws Exception {\n-    Node settings = config.getNode(\"/config/settings\", false);\n+  public static MetricsConfiguration from(String path) throws Exception {\n+    // See solr-core XmlConfigFile\n+    final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+    try {\n+      dbf.setXIncludeAware(true);\n+      dbf.setNamespaceAware(true);\n+    } catch (UnsupportedOperationException e) {\n+      log.warn(\"{} XML parser doesn't support XInclude option\", path);\n+    }\n+\n+    Document document;\n+    File file = new File(path);", "originalCommit": "6f9a6647178a5636f535b05b2d146670d26b1064", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MjIyMQ==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r528452221", "bodyText": "Not a problem as the config can only be specified by an admin on the local machine.", "author": "dsmiley", "createdAt": "2020-11-23T03:05:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyNDkyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "137c306fc08efe8b802318fd8e9790b4d35a51ae", "chunk": "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java\nindex 4c4adc892ba..de173f0082e 100644\n--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java\n+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java\n\n@@ -81,22 +79,22 @@ public class MetricsConfiguration {\n     return searchConfiguration;\n   }\n \n-  public static MetricsConfiguration from(String path) throws Exception {\n+  public static MetricsConfiguration from(String resource) throws Exception {\n     // See solr-core XmlConfigFile\n     final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n     try {\n       dbf.setXIncludeAware(true);\n       dbf.setNamespaceAware(true);\n     } catch (UnsupportedOperationException e) {\n-      log.warn(\"{} XML parser doesn't support XInclude option\", path);\n+      log.warn(\"{} XML parser doesn't support XInclude option\", resource);\n     }\n \n     Document document;\n-    File file = new File(path);\n-    if (file.isFile()) {\n-      document = dbf.newDocumentBuilder().parse(file);\n+    Path path = Path.of(resource);\n+    if (Files.exists(path)) {\n+      document = dbf.newDocumentBuilder().parse(path.toAbsolutePath().toString());\n     } else {\n-      try (InputStream configInputStream = MethodHandles.lookup().lookupClass().getClassLoader().getResourceAsStream(path.replace(File.separatorChar, '/'))) {\n+      try (InputStream configInputStream = MethodHandles.lookup().lookupClass().getClassLoader().getResourceAsStream(resource.replace(File.separatorChar, '/'))) {\n         document = dbf.newDocumentBuilder().parse(configInputStream);\n       }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyNDkzNg==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r527924936", "bodyText": "PATH_TRAVERSAL_IN:  This API (java/io/File.(Ljava/lang/String;)V) reads a file whose location might be specified by user input (details)", "author": "sonatype-lift", "createdAt": "2020-11-20T19:27:24Z", "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java", "diffHunk": "@@ -214,12 +212,11 @@ public static void main(String[] args) {\n     }\n   }\n \n-  private static MetricsConfiguration loadMetricsConfiguration(Path configPath) {\n-    try (SolrResourceLoader loader = new SolrResourceLoader(configPath.getParent())) {\n-      XmlConfigFile config = new XmlConfigFile(loader, configPath.getFileName().toString(), null, null);\n-      return MetricsConfiguration.from(config);\n+  private static MetricsConfiguration loadMetricsConfiguration(String configPath) {\n+    try {\n+      return MetricsConfiguration.from(configPath);", "originalCommit": "6f9a6647178a5636f535b05b2d146670d26b1064", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "137c306fc08efe8b802318fd8e9790b4d35a51ae", "url": "https://github.com/apache/lucene-solr/commit/137c306fc08efe8b802318fd8e9790b4d35a51ae", "message": "Changing from File to Path", "committedDate": "2020-11-23T02:29:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MzYzMg==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r528453632", "bodyText": "This parse(String) is documented to take a URI.  I don't think a file path is a URI?  If you look at the implementation of the variant that takes a File, it converts it to a URI then and then an ASCII string.  This could be done via path.toUri().toASCIIString().   FWIW I'd also be okay with just doing path.toFile() here.", "author": "dsmiley", "createdAt": "2020-11-23T03:13:14Z", "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java", "diffHunk": "@@ -77,22 +79,22 @@ public PrometheusExporterSettings getSettings() {\n     return searchConfiguration;\n   }\n \n-  public static MetricsConfiguration from(String path) throws Exception {\n+  public static MetricsConfiguration from(String resource) throws Exception {\n     // See solr-core XmlConfigFile\n     final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n     try {\n       dbf.setXIncludeAware(true);\n       dbf.setNamespaceAware(true);\n     } catch (UnsupportedOperationException e) {\n-      log.warn(\"{} XML parser doesn't support XInclude option\", path);\n+      log.warn(\"{} XML parser doesn't support XInclude option\", resource);\n     }\n \n     Document document;\n-    File file = new File(path);\n-    if (file.isFile()) {\n-      document = dbf.newDocumentBuilder().parse(file);\n+    Path path = Path.of(resource);\n+    if (Files.exists(path)) {\n+      document = dbf.newDocumentBuilder().parse(path.toAbsolutePath().toString());", "originalCommit": "137c306fc08efe8b802318fd8e9790b4d35a51ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg0MTg5MA==", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r528841890", "bodyText": "Good catch. I tested it in multiple configurations, but there's probably some edge case it doesn't work for. I'll use path.toUri().toASCIIString() since the parse(file) method just gets the URI of the file and passes that to the parse(uri) implementation anyways. Might as well skip the middleman-method.", "author": "HoustonPutman", "createdAt": "2020-11-23T16:38:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MzYzMg=="}], "type": "inlineReview", "revised_code": {"commit": "11bea198e55a02dc7d957a59c685716b18b135ee", "chunk": "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java\nindex de173f0082e..a4e630dbcbf 100644\n--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java\n+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java\n\n@@ -92,7 +92,7 @@ public class MetricsConfiguration {\n     Document document;\n     Path path = Path.of(resource);\n     if (Files.exists(path)) {\n-      document = dbf.newDocumentBuilder().parse(path.toAbsolutePath().toString());\n+      document = dbf.newDocumentBuilder().parse(path.toUri().toASCIIString());\n     } else {\n       try (InputStream configInputStream = MethodHandles.lookup().lookupClass().getClassLoader().getResourceAsStream(resource.replace(File.separatorChar, '/'))) {\n         document = dbf.newDocumentBuilder().parse(configInputStream);\n"}}, {"oid": "11bea198e55a02dc7d957a59c685716b18b135ee", "url": "https://github.com/apache/lucene-solr/commit/11bea198e55a02dc7d957a59c685716b18b135ee", "message": "Fix path to URI", "committedDate": "2020-11-23T16:42:33Z", "type": "commit"}, {"oid": "bec84ce2a1d60480ce0c54b78e83a70f83e7b058", "url": "https://github.com/apache/lucene-solr/commit/bec84ce2a1d60480ce0c54b78e83a70f83e7b058", "message": "CHANGES.md for contrib/prometheus-exporter", "committedDate": "2020-11-23T21:13:17Z", "type": "commit"}, {"oid": "a952b4f7c96163d52792c5bde6732a99daeae18c", "url": "https://github.com/apache/lucene-solr/commit/a952b4f7c96163d52792c5bde6732a99daeae18c", "message": "remove newline", "committedDate": "2020-11-25T04:47:54Z", "type": "commit"}]}