{"pr_number": 1572, "pr_title": "SOLR-14561 CoreAdminAPI's parameters instanceDir and dataDir are now validated", "pr_createdAt": "2020-06-11T23:35:12Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1572", "timeline": [{"oid": "f509e04025e0c0fca73b1fe3fc4ddf44e4c66c43", "url": "https://github.com/apache/lucene-solr/commit/f509e04025e0c0fca73b1fe3fc4ddf44e4c66c43", "message": "SOLR-14561: Validate core creation path", "committedDate": "2020-06-11T21:51:01Z", "type": "commit"}, {"oid": "8fbbde9d94805cb51e418ec7be33f39ed91c95a9", "url": "https://github.com/apache/lucene-solr/commit/8fbbde9d94805cb51e418ec7be33f39ed91c95a9", "message": "Add sys param -Dsolr.allowPaths and solr.xml config allowPaths", "committedDate": "2020-06-11T23:05:57Z", "type": "commit"}, {"oid": "5ba49c5f2c7a064e567c9d0ff5e9025c4ff3e7af", "url": "https://github.com/apache/lucene-solr/commit/5ba49c5f2c7a064e567c9d0ff5e9025c4ff3e7af", "message": "Add test that allowPaths are actually allowed", "committedDate": "2020-06-11T23:17:42Z", "type": "commit"}, {"oid": "69309383c440dc63462cda3332be7d35884810ba", "url": "https://github.com/apache/lucene-solr/commit/69309383c440dc63462cda3332be7d35884810ba", "message": "Documentation and CHANGES", "committedDate": "2020-06-11T23:31:48Z", "type": "commit"}, {"oid": "b864bf9e197a5bcdc133f35c5386c7619e5a33f6", "url": "https://github.com/apache/lucene-solr/commit/b864bf9e197a5bcdc133f35c5386c7619e5a33f6", "message": "Log allowPaths on startup if configured", "committedDate": "2020-06-12T00:00:54Z", "type": "commit"}, {"oid": "10d3cbfd201b9b0f00c071bfe368efd4abdde924", "url": "https://github.com/apache/lucene-solr/commit/10d3cbfd201b9b0f00c071bfe368efd4abdde924", "message": "Precommit", "committedDate": "2020-06-12T00:15:27Z", "type": "commit"}, {"oid": "ac28ba892ee073d0935f65da6a5e9345f501ca14", "url": "https://github.com/apache/lucene-solr/commit/ac28ba892ee073d0935f65da6a5e9345f501ca14", "message": "Make assert public", "committedDate": "2020-06-12T00:33:14Z", "type": "commit"}, {"oid": "7c2bc64cb03277dad158deb35c4362d7942e5f9a", "url": "https://github.com/apache/lucene-solr/commit/7c2bc64cb03277dad158deb35c4362d7942e5f9a", "message": "Add documentation to coreadmin-api.adoc", "committedDate": "2020-06-12T09:48:33Z", "type": "commit"}, {"oid": "91293a791c50fc1d81718ba04aa26dd4423b66b8", "url": "https://github.com/apache/lucene-solr/commit/91293a791c50fc1d81718ba04aa26dd4423b66b8", "message": "Rename method", "committedDate": "2020-06-12T09:50:22Z", "type": "commit"}, {"oid": "86e669cacc584fb5146bd8312911aa797f3b5db9", "url": "https://github.com/apache/lucene-solr/commit/86e669cacc584fb5146bd8312911aa797f3b5db9", "message": "Rename method also in tests", "committedDate": "2020-06-12T09:57:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NjQwMw==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r439686403", "bodyText": "This doesn't cover the case of a ../foo path, right? is that covered somewhere else?", "author": "tflobbe", "createdAt": "2020-06-13T00:15:50Z", "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -1259,6 +1277,20 @@ public SolrCore create(String coreName, Path instancePath, Map<String, String> p\n     }\n   }\n \n+  /**\n+   * Checks that the given path is relative to SOLR_HOME, SOLR_DATA_HOME, coreRootDirectory or one of the paths\n+   * specified in solr.xml's allowPaths element.\n+   * @param path path to check\n+   * @throws SolrException if path is outside allowed paths\n+   */\n+  public void assertPathAllowed(Path path) throws SolrException {\n+    if (path.normalize().equals(path) && !path.isAbsolute()) return;", "originalCommit": "86e669cacc584fb5146bd8312911aa797f3b5db9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczMDc4OQ==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r439730789", "bodyText": "You are right. We need a more thorough check\n\nDisallow relative paths starting with \".\"\nAlways normalize() the path before toAbsolutePath() to catch the /var/solr/../../etc case, else that example would return true for startsWith(\"/var/solr\")", "author": "janhoy", "createdAt": "2020-06-13T11:08:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NjQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MjEzOQ==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r439772139", "bodyText": "I pushed a commit addressing this. Quite a few changes, but we now detect .. specifically.", "author": "janhoy", "createdAt": "2020-06-13T21:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NjQwMw=="}], "type": "inlineReview", "revised_code": {"commit": "851eedeeda86ffb601986ae69a5f8ac8b24f3fe0", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java\nindex 5991425f82e..28b4e137cb8 100644\n--- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java\n+++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java\n\n@@ -1279,16 +1279,12 @@ public class CoreContainer {\n \n   /**\n    * Checks that the given path is relative to SOLR_HOME, SOLR_DATA_HOME, coreRootDirectory or one of the paths\n-   * specified in solr.xml's allowPaths element.\n-   * @param path path to check\n+   * specified in solr.xml's allowPaths element. Delegates to {@link SolrPaths#assertPathAllowed(Path, Set)}\n+   * @param pathToAssert path to check\n    * @throws SolrException if path is outside allowed paths\n    */\n-  public void assertPathAllowed(Path path) throws SolrException {\n-    if (path.normalize().equals(path) && !path.isAbsolute()) return;\n-    if (allowPaths.stream().noneMatch(p -> path.toAbsolutePath().startsWith(p))) {\n-      throw new SolrException(ErrorCode.BAD_REQUEST,\n-          \"Path \" + path + \" must be relative to SOLR_HOME, SOLR_DATA_HOME coreRootDirectory. Set system property 'solr.allowPaths' to add other allowed paths.\");\n-    }\n+  public void assertPathAllowed(Path pathToAssert) throws SolrException {\n+    SolrPaths.assertPathAllowed(pathToAssert, allowPaths);\n   }\n \n   /**\n"}}, {"oid": "851eedeeda86ffb601986ae69a5f8ac8b24f3fe0", "url": "https://github.com/apache/lucene-solr/commit/851eedeeda86ffb601986ae69a5f8ac8b24f3fe0", "message": "Block paths starting with .. and UNC paths\nAdd several extra tests, restructured tests for better readability", "committedDate": "2020-06-13T21:52:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MjI5Mg==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r439772292", "bodyText": "I have not tested this on Windows. On my mac, the Path class uses an OSX implementation so I think it will not detect the UNC style path, it does not manage to normalize or make it absolute, so I scoped the check for Windows only. I test on the string version before normalizing since normalize may mess up UNC paths.\nI decided to block UNC totally instead of trying to be smart about it. Users can always map a drive letter to the desired share to work around it?", "author": "janhoy", "createdAt": "2020-06-13T21:56:39Z", "path": "solr/core/src/java/org/apache/solr/core/SolrPaths.java", "diffHunk": "@@ -128,4 +130,33 @@ private static void logOnceInfo(String key, String msg) {\n       log.info(msg);\n     }\n   }\n+\n+  /**\n+   * Checks that the given path is relative to SOLR_HOME, SOLR_DATA_HOME, coreRootDirectory or one of the paths\n+   * specified in solr.xml's allowPaths element. The following paths will fail validation\n+   * <ul>\n+   *   <li>Relative paths starting with <code>..</code></li>\n+   *   <li>Windows UNC paths (<code>\\\\host\\share\\path</code>)</li>\n+   *   <li>Absolute paths which are not below the list of allowed paths</li>\n+   * </ul>\n+   * @param pathToAssert path to check\n+   * @param allowPaths list of paths that should be allowed prefixes\n+   * @throws SolrException if path is outside allowed paths\n+   */\n+  public static void assertPathAllowed(Path pathToAssert, Set<Path> allowPaths) throws SolrException {\n+    if (OS.isFamilyWindows() && pathToAssert.toString().startsWith(\"\\\\\\\\\")) {", "originalCommit": "851eedeeda86ffb601986ae69a5f8ac8b24f3fe0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAyODgyNQ==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r440028825", "bodyText": "Anyone who have a Windows box to test this on?", "author": "janhoy", "createdAt": "2020-06-15T08:57:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MjI5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1NDk2Mw==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r441854963", "bodyText": "I have tested on Windows, validated that UNC is blocked, and modified the tests with separate ones running in Windows and non-Windows environments.", "author": "janhoy", "createdAt": "2020-06-17T21:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MjI5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ba0b544bd8cb78d9e790b8e3f0f0d1c280a5ef00", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/core/SolrPaths.java b/solr/core/src/java/org/apache/solr/core/SolrPaths.java\nindex 5220ee739cb..adbb0d05e6d 100644\n--- a/solr/core/src/java/org/apache/solr/core/SolrPaths.java\n+++ b/solr/core/src/java/org/apache/solr/core/SolrPaths.java\n\n@@ -148,13 +148,15 @@ public final class SolrPaths {\n       throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n           \"Path \" + pathToAssert + \" disallowed. UNC paths not supported. Please use drive letter instead.\");\n     }\n-    final Path path = pathToAssert.normalize();\n+    // Conversion Path -> String -> Path is to be able to compare against org.apache.lucene.mockfile.FilterPath instances\n+    final Path path = Path.of(pathToAssert.toString()).normalize();\n     if (path.startsWith(\"..\")) {\n       throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n           \"Path \" + pathToAssert + \" disallowed due to path traversal..\");\n     }\n     if (!path.isAbsolute()) return; // All relative paths are accepted\n-    if (allowPaths.stream().noneMatch(p -> path.toAbsolutePath().startsWith(p))) {\n+    if (allowPaths.contains(Paths.get(\"*\"))) return; // Catch-all path \"*\" will allow all other paths\n+    if (allowPaths.stream().noneMatch(p -> path.startsWith(Path.of(p.toString())))) {\n       throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n           \"Path \" + path + \" must be relative to SOLR_HOME, SOLR_DATA_HOME coreRootDirectory. Set system property 'solr.allowPaths' to add other allowed paths.\");\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4OTc2MQ==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r439789761", "bodyText": "paths in cfg are already absolute -- thanks to me recently :-)", "author": "dsmiley", "createdAt": "2020-06-14T04:12:45Z", "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -338,6 +339,19 @@ public CoreContainer(NodeConfig config, CoresLocator locator, boolean asyncSolrC\n         ExecutorUtil.newMDCAwareCachedThreadPool(\n             cfg.getReplayUpdatesThreads(),\n             new SolrNamedThreadFactory(\"replayUpdatesExecutor\")));\n+\n+    this.allowPaths = new java.util.HashSet<>();\n+    this.allowPaths.add(cfg.getSolrHome().toAbsolutePath());", "originalCommit": "851eedeeda86ffb601986ae69a5f8ac8b24f3fe0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg4NDE1MA==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r439884150", "bodyText": "Ok, simplified it.", "author": "janhoy", "createdAt": "2020-06-15T00:29:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4OTc2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "b035bdc24e0dfe65571553ef209ad4ba6a47ca10", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java\nindex 28b4e137cb8..469df5e1acf 100644\n--- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java\n+++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java\n\n@@ -341,15 +341,15 @@ public class CoreContainer {\n             new SolrNamedThreadFactory(\"replayUpdatesExecutor\")));\n \n     this.allowPaths = new java.util.HashSet<>();\n-    this.allowPaths.add(cfg.getSolrHome().toAbsolutePath());\n-    this.allowPaths.add(cfg.getCoreRootDirectory().toAbsolutePath());\n+    this.allowPaths.add(cfg.getSolrHome());\n+    this.allowPaths.add(cfg.getCoreRootDirectory());\n     if (cfg.getSolrDataHome() != null) {\n-      this.allowPaths.add(getNodeConfig().getSolrDataHome().toAbsolutePath());\n+      this.allowPaths.add(cfg.getSolrDataHome());\n     }\n     if (!cfg.getAllowPaths().isEmpty()) {\n       this.allowPaths.addAll(cfg.getAllowPaths());\n       if (log.isInfoEnabled()) {\n-        log.info(\"Allowing cores to use paths: {}\", cfg.getAllowPaths());\n+        log.info(\"Allowing use of paths: {}\", cfg.getAllowPaths());\n       }\n     }\n   }\n"}}, {"oid": "263af867c9ad6b4375b554b23ac0b641b4a1a688", "url": "https://github.com/apache/lucene-solr/commit/263af867c9ad6b4375b554b23ac0b641b4a1a688", "message": "Precommit", "committedDate": "2020-06-15T00:08:55Z", "type": "commit"}, {"oid": "b035bdc24e0dfe65571553ef209ad4ba6a47ca10", "url": "https://github.com/apache/lucene-solr/commit/b035bdc24e0dfe65571553ef209ad4ba6a47ca10", "message": "Review comments from Smiley", "committedDate": "2020-06-15T00:27:45Z", "type": "commit"}, {"oid": "0f3428c5b5b907b171d3d02839dbab550f08aa09", "url": "https://github.com/apache/lucene-solr/commit/0f3428c5b5b907b171d3d02839dbab550f08aa09", "message": "Merge branch 'master' into solr14561", "committedDate": "2020-06-15T00:38:51Z", "type": "commit"}, {"oid": "ba0b544bd8cb78d9e790b8e3f0f0d1c280a5ef00", "url": "https://github.com/apache/lucene-solr/commit/ba0b544bd8cb78d9e790b8e3f0f0d1c280a5ef00", "message": "Fix failing tests by allowing the tmp folders used by tests", "committedDate": "2020-06-15T09:05:23Z", "type": "commit"}, {"oid": "b7efe091c0c556560592985bc50f15b3ef232cc6", "url": "https://github.com/apache/lucene-solr/commit/b7efe091c0c556560592985bc50f15b3ef232cc6", "message": "Fix IndexSplitterTest and CollectionsAPIDistributedZkTest", "committedDate": "2020-06-15T14:15:32Z", "type": "commit"}, {"oid": "c8bbc7739579f98b6ce7c0e718187fcad8bdf19a", "url": "https://github.com/apache/lucene-solr/commit/c8bbc7739579f98b6ce7c0e718187fcad8bdf19a", "message": "Make tests work on Windows (which does not allow '*' as path)", "committedDate": "2020-06-15T14:54:53Z", "type": "commit"}, {"oid": "d531dd672bd48d703ff4e53225bb96f6c1a773cf", "url": "https://github.com/apache/lucene-solr/commit/d531dd672bd48d703ff4e53225bb96f6c1a773cf", "message": "Split tests in windows and linux tests", "committedDate": "2020-06-15T21:28:39Z", "type": "commit"}, {"oid": "8f53fab6113216205da98dbfb4ecfdf4497dba9c", "url": "https://github.com/apache/lucene-solr/commit/8f53fab6113216205da98dbfb4ecfdf4497dba9c", "message": "Fix win test", "committedDate": "2020-06-15T23:08:43Z", "type": "commit"}, {"oid": "c65cb9a9875d83a55aa074dd37ce167d9cbddbdb", "url": "https://github.com/apache/lucene-solr/commit/c65cb9a9875d83a55aa074dd37ce167d9cbddbdb", "message": "Fix windows test", "committedDate": "2020-06-17T13:25:54Z", "type": "commit"}, {"oid": "e27ffff3cfceed6f2f4fd34b862cc8542a332cb9", "url": "https://github.com/apache/lucene-solr/commit/e27ffff3cfceed6f2f4fd34b862cc8542a332cb9", "message": "Merge branch 'master' into solr14561\n\n# Conflicts:\n#\tsolr/CHANGES.txt", "committedDate": "2020-06-17T13:36:53Z", "type": "commit"}, {"oid": "1c05580286ce92b337646b3f03abd571cc4ff3f8", "url": "https://github.com/apache/lucene-solr/commit/1c05580286ce92b337646b3f03abd571cc4ff3f8", "message": "Add template to solr.in scripts", "committedDate": "2020-06-17T13:47:48Z", "type": "commit"}, {"oid": "8cead7d682777f667f2fe390ce82b0f8c3a8ccfb", "url": "https://github.com/apache/lucene-solr/commit/8cead7d682777f667f2fe390ce82b0f8c3a8ccfb", "message": "Fix SolrShardReporterTest test failure by setting solr.allowPaths=*", "committedDate": "2020-06-17T21:25:31Z", "type": "commit"}, {"oid": "f58f9c8c6c1ebb8d488592eef129b7a0d0c19fb9", "url": "https://github.com/apache/lucene-solr/commit/f58f9c8c6c1ebb8d488592eef129b7a0d0c19fb9", "message": "Add Javadoc for getAllowPaths()", "committedDate": "2020-06-17T21:50:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1NjIyNw==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r441856227", "bodyText": "@dsmiley see JavaDoc. I was hoping to keep this method private. Don't we have a special annotation that will allow access from test scope even if the method is not public?", "author": "janhoy", "createdAt": "2020-06-17T21:55:28Z", "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -1259,6 +1277,28 @@ public SolrCore create(String coreName, Path instancePath, Map<String, String> p\n     }\n   }\n \n+  /**\n+   * Checks that the given path is relative to SOLR_HOME, SOLR_DATA_HOME, coreRootDirectory or one of the paths\n+   * specified in solr.xml's allowPaths element. Delegates to {@link SolrPaths#assertPathAllowed(Path, Set)}\n+   * @param pathToAssert path to check\n+   * @throws SolrException if path is outside allowed paths\n+   */\n+  public void assertPathAllowed(Path pathToAssert) throws SolrException {\n+    SolrPaths.assertPathAllowed(pathToAssert, allowPaths);\n+  }\n+\n+  /**\n+   * <p>Return the file system paths that should be allowed for various API requests.", "originalCommit": "f58f9c8c6c1ebb8d488592eef129b7a0d0c19fb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1ODEyMA==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r441858120", "bodyText": "Javadoc is good; thanks.\ncom.google.common.annotations.VisibleForTesting", "author": "dsmiley", "createdAt": "2020-06-17T22:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1NjIyNw=="}], "type": "inlineReview", "revised_code": {"commit": "2d36d4e2ee44603f04eb6e3ff9ada504364778a9", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java\nindex e5860c1dbad..71ef939cb5b 100644\n--- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java\n+++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java\n\n@@ -1293,8 +1294,9 @@ public class CoreContainer {\n    * <code>allowPaths</code> configuration of solr.xml.\n    * These paths are used by the {@link #assertPathAllowed(Path)} method call.</p>\n    * <p><b>NOTE:</b></p> This method is currently only in use in tests in order to\n-   * modify the mutable Set directly. It shuold probably not be used elsewhere.\n+   * modify the mutable Set directly. Please treat this as a private method.\n    */\n+  @VisibleForTesting\n   public Set<Path> getAllowPaths() {\n     return allowPaths;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1ODAyNQ==", "url": "https://github.com/apache/lucene-solr/pull/1572#discussion_r441858025", "bodyText": "This is the workaround I did after realizing that Windows Path class is not happy with * as a path. When parsing the value from solr.xml/sysprop, we detect * and store it as a Path _ALL_. Then in the assert method we check for that special path and skip further testing.\nException is UNC paths and .. paths which are still rejected (should they?)", "author": "janhoy", "createdAt": "2020-06-17T22:00:01Z", "path": "solr/core/src/java/org/apache/solr/core/SolrPaths.java", "diffHunk": "@@ -128,4 +130,35 @@ private static void logOnceInfo(String key, String msg) {\n       log.info(msg);\n     }\n   }\n+\n+  /**\n+   * Checks that the given path is relative to SOLR_HOME, SOLR_DATA_HOME, coreRootDirectory or one of the paths\n+   * specified in solr.xml's allowPaths element. The following paths will fail validation\n+   * <ul>\n+   *   <li>Relative paths starting with <code>..</code></li>\n+   *   <li>Windows UNC paths (<code>\\\\host\\share\\path</code>)</li>\n+   *   <li>Absolute paths which are not below the list of allowed paths</li>\n+   * </ul>\n+   * @param pathToAssert path to check\n+   * @param allowPaths list of paths that should be allowed prefixes\n+   * @throws SolrException if path is outside allowed paths\n+   */\n+  public static void assertPathAllowed(Path pathToAssert, Set<Path> allowPaths) throws SolrException {\n+    if (OS.isFamilyWindows() && pathToAssert.toString().startsWith(\"\\\\\\\\\")) {\n+      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n+          \"Path \" + pathToAssert + \" disallowed. UNC paths not supported. Please use drive letter instead.\");\n+    }\n+    // Conversion Path -> String -> Path is to be able to compare against org.apache.lucene.mockfile.FilterPath instances\n+    final Path path = Path.of(pathToAssert.toString()).normalize();\n+    if (path.startsWith(\"..\")) {\n+      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n+          \"Path \" + pathToAssert + \" disallowed due to path traversal..\");\n+    }\n+    if (!path.isAbsolute()) return; // All relative paths are accepted\n+    if (allowPaths.contains(Paths.get(\"_ALL_\"))) return; // Catch-all path \"*\"/\"_ALL_\" will allow all other paths", "originalCommit": "f58f9c8c6c1ebb8d488592eef129b7a0d0c19fb9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a7e19d75a74f67dfc27aa45e42ab2a312a4183d5", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/core/SolrPaths.java b/solr/core/src/java/org/apache/solr/core/SolrPaths.java\nindex 4671f4918d5..c72bff78a91 100644\n--- a/solr/core/src/java/org/apache/solr/core/SolrPaths.java\n+++ b/solr/core/src/java/org/apache/solr/core/SolrPaths.java\n\n@@ -132,15 +132,17 @@ public final class SolrPaths {\n   }\n \n   /**\n-   * Checks that the given path is relative to SOLR_HOME, SOLR_DATA_HOME, coreRootDirectory or one of the paths\n-   * specified in solr.xml's allowPaths element. The following paths will fail validation\n+   * Checks that the given path is relative to one of the allowPaths supplied. Typically this will be\n+   * called from {@link CoreContainer#assertPathAllowed(Path)} and allowPaths pre-filled with the node's\n+   * SOLR_HOME, SOLR_DATA_HOME and coreRootDirectory folders, as well as any paths specified in\n+   * solr.xml's allowPaths element. The following paths will always fail validation:\n    * <ul>\n    *   <li>Relative paths starting with <code>..</code></li>\n-   *   <li>Windows UNC paths (<code>\\\\host\\share\\path</code>)</li>\n-   *   <li>Absolute paths which are not below the list of allowed paths</li>\n+   *   <li>Windows UNC paths (such as <code>\\\\host\\share\\path</code>)</li>\n+   *   <li>Paths which are not relative to any of allowPaths</li>\n    * </ul>\n    * @param pathToAssert path to check\n-   * @param allowPaths list of paths that should be allowed prefixes\n+   * @param allowPaths list of paths that should be allowed prefixes for pathToAssert\n    * @throws SolrException if path is outside allowed paths\n    */\n   public static void assertPathAllowed(Path pathToAssert, Set<Path> allowPaths) throws SolrException {\n"}}, {"oid": "2d36d4e2ee44603f04eb6e3ff9ada504364778a9", "url": "https://github.com/apache/lucene-solr/commit/2d36d4e2ee44603f04eb6e3ff9ada504364778a9", "message": "Add VisibleForTesting annotation", "committedDate": "2020-06-17T22:23:50Z", "type": "commit"}, {"oid": "2710869e2965cae1f12b221bff930db86ffc615e", "url": "https://github.com/apache/lucene-solr/commit/2710869e2965cae1f12b221bff930db86ffc615e", "message": "Merge branch 'master' into solr14561", "committedDate": "2020-06-18T11:30:11Z", "type": "commit"}, {"oid": "96aebf81f6e88cc7aad2621f95f0a05fb06262cb", "url": "https://github.com/apache/lucene-solr/commit/96aebf81f6e88cc7aad2621f95f0a05fb06262cb", "message": "Fix hardcoded unix path in a solr.xml file", "committedDate": "2020-06-18T12:45:32Z", "type": "commit"}, {"oid": "a7e19d75a74f67dfc27aa45e42ab2a312a4183d5", "url": "https://github.com/apache/lucene-solr/commit/a7e19d75a74f67dfc27aa45e42ab2a312a4183d5", "message": "Better docs in format-of-solr-xml.adoc\nBetter JavaDocs for SolrPaths.assertPathAllowed", "committedDate": "2020-06-18T13:25:23Z", "type": "commit"}]}