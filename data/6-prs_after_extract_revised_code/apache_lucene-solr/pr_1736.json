{"pr_number": 1736, "pr_title": "Harden RequestRateLimiter Tests", "pr_createdAt": "2020-08-11T07:23:30Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1736", "timeline": [{"oid": "e51e334a4d1b9a1922854483dbba6eb98ef112a8", "url": "https://github.com/apache/lucene-solr/commit/e51e334a4d1b9a1922854483dbba6eb98ef112a8", "message": "Harden RequestRateLimiter Tests\n\nThis commit adds higher data size and load in the test path. Also improves\nthe asserts that are performed.", "committedDate": "2020-08-11T07:21:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0MjkyNQ==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468542925", "bodyText": "Can we limit the higher footprint to Nightly?", "author": "madrob", "createdAt": "2020-08-11T12:30:35Z", "path": "solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java", "diffHunk": "@@ -66,15 +66,11 @@ public void testConcurrentQueries() throws Exception {\n \n     solrDispatchFilter.replaceRateLimitManager(rateLimitManager);\n \n-    processTest(client);\n+    processTest(client, 10000 /* number of documents */, 350 /* number of queries */);", "originalCommit": "e51e334a4d1b9a1922854483dbba6eb98ef112a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0efc703209cac572b479651ec29b5783d63c1716", "chunk": "diff --git a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\nindex eba6cae57f0..af52b8cd2be 100644\n--- a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n+++ b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n\n@@ -71,11 +71,14 @@ public class TestRequestRateLimiter extends SolrCloudTestCase {\n     MockRequestRateLimiter mockQueryRateLimiter = (MockRequestRateLimiter) rateLimitManager.getRequestRateLimiter(SolrRequest.SolrRequestType.QUERY);\n \n     assertEquals(350, mockQueryRateLimiter.incomingRequestCount.get());\n+\n+    assertTrue((mockQueryRateLimiter.acceptedNewRequestCount.get() == mockQueryRateLimiter.incomingRequestCount.get()\n+        || mockQueryRateLimiter.rejectedRequestCount.get() > 0));g\n     assertEquals(mockQueryRateLimiter.incomingRequestCount.get(),\n         mockQueryRateLimiter.acceptedNewRequestCount.get() + mockQueryRateLimiter.rejectedRequestCount.get());\n   }\n \n-  @Test\n+  @Nightly\n   public void testSlotBorrowing() throws Exception {\n     CloudSolrClient client = cluster.getSolrClient();\n     client.setDefaultCollection(SECOND_COLLECTION);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0MzI1NQ==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468543255", "bodyText": "Somewhat concerning that the fix to the test is to relax the assertion conditions", "author": "madrob", "createdAt": "2020-08-11T12:31:08Z", "path": "solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java", "diffHunk": "@@ -66,15 +66,11 @@ public void testConcurrentQueries() throws Exception {\n \n     solrDispatchFilter.replaceRateLimitManager(rateLimitManager);\n \n-    processTest(client);\n+    processTest(client, 10000 /* number of documents */, 350 /* number of queries */);\n \n     MockRequestRateLimiter mockQueryRateLimiter = (MockRequestRateLimiter) rateLimitManager.getRequestRateLimiter(SolrRequest.SolrRequestType.QUERY);\n \n-    assertEquals(25, mockQueryRateLimiter.incomingRequestCount.get());\n-    assertTrue(\"Incoming accepted new request count did not match. Expected 5 incoming \" + mockQueryRateLimiter.acceptedNewRequestCount.get(),", "originalCommit": "e51e334a4d1b9a1922854483dbba6eb98ef112a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4MTUzMg==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468681532", "bodyText": "It isnt really a relaxation -- the remaining assert should cover for all cases that can happen for rate limiting. The catch is that rate limiting is not a guaranteed phenomenon -- we create a high load and it should happen. I have added an additional assert -- let me know if it looks fine.", "author": "atris", "createdAt": "2020-08-11T15:45:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0MzI1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "0efc703209cac572b479651ec29b5783d63c1716", "chunk": "diff --git a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\nindex eba6cae57f0..af52b8cd2be 100644\n--- a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n+++ b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n\n@@ -71,11 +71,14 @@ public class TestRequestRateLimiter extends SolrCloudTestCase {\n     MockRequestRateLimiter mockQueryRateLimiter = (MockRequestRateLimiter) rateLimitManager.getRequestRateLimiter(SolrRequest.SolrRequestType.QUERY);\n \n     assertEquals(350, mockQueryRateLimiter.incomingRequestCount.get());\n+\n+    assertTrue((mockQueryRateLimiter.acceptedNewRequestCount.get() == mockQueryRateLimiter.incomingRequestCount.get()\n+        || mockQueryRateLimiter.rejectedRequestCount.get() > 0));g\n     assertEquals(mockQueryRateLimiter.incomingRequestCount.get(),\n         mockQueryRateLimiter.acceptedNewRequestCount.get() + mockQueryRateLimiter.rejectedRequestCount.get());\n   }\n \n-  @Test\n+  @Nightly\n   public void testSlotBorrowing() throws Exception {\n     CloudSolrClient client = cluster.getSolrClient();\n     client.setDefaultCollection(SECOND_COLLECTION);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0MzgzNg==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468543836", "bodyText": "should be numDocuments", "author": "madrob", "createdAt": "2020-08-11T12:32:11Z", "path": "solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java", "diffHunk": "@@ -124,12 +120,12 @@ private void processTest(CloudSolrClient client) throws Exception {\n     List<Future<Boolean>> futures;\n \n     try {\n-      for (int i = 0; i < 25; i++) {\n+      for (int i = 0; i < numQueries; i++) {\n         callableList.add(() -> {\n           try {\n             QueryResponse response = client.query(new SolrQuery(\"*:*\"));\n \n-            assertEquals(100, response.getResults().getNumFound());\n+            assertEquals(10000, response.getResults().getNumFound());", "originalCommit": "e51e334a4d1b9a1922854483dbba6eb98ef112a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0efc703209cac572b479651ec29b5783d63c1716", "chunk": "diff --git a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\nindex eba6cae57f0..af52b8cd2be 100644\n--- a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n+++ b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n\n@@ -125,7 +128,7 @@ public class TestRequestRateLimiter extends SolrCloudTestCase {\n           try {\n             QueryResponse response = client.query(new SolrQuery(\"*:*\"));\n \n-            assertEquals(10000, response.getResults().getNumFound());\n+            assertEquals(numDocuments, response.getResults().getNumFound());\n           } catch (Exception e) {\n             throw new RuntimeException(e.getMessage());\n           }\n"}}, {"oid": "0efc703209cac572b479651ec29b5783d63c1716", "url": "https://github.com/apache/lucene-solr/commit/0efc703209cac572b479651ec29b5783d63c1716", "message": "Update per comments", "committedDate": "2020-08-11T15:38:24Z", "type": "commit"}, {"oid": "83e7d8adbddebaa3388e9d48d08d9dccb12577b6", "url": "https://github.com/apache/lucene-solr/commit/83e7d8adbddebaa3388e9d48d08d9dccb12577b6", "message": "Remove blah", "committedDate": "2020-08-11T15:46:26Z", "type": "commit"}, {"oid": "90fa9270f0a80388a1e4c40e69a60f812883e72a", "url": "https://github.com/apache/lucene-solr/commit/90fa9270f0a80388a1e4c40e69a60f812883e72a", "message": "Fix Precommit", "committedDate": "2020-08-11T16:09:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwODk5Ng==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468708996", "bodyText": "This isn't what I meant, sorry for being unclear. Keep this as @Test but when selecting the number of documents and queries do something like https://github.com/apache/lucene-solr/blob/master/lucene/core/src/test/org/apache/lucene/index/TestMultiDocValues.java#L52", "author": "madrob", "createdAt": "2020-08-11T16:27:14Z", "path": "solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java", "diffHunk": "@@ -48,7 +47,7 @@ public static void setupCluster() throws Exception {\n     configureCluster(1).addConfig(FIRST_COLLECTION, configset(\"cloud-minimal\")).configure();\n   }\n \n-  @Test\n+  @Nightly", "originalCommit": "90fa9270f0a80388a1e4c40e69a60f812883e72a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcyMTY0OA==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468721648", "bodyText": "s/Nightly/Test", "author": "madrob", "createdAt": "2020-08-11T16:47:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwODk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcyNzQ4NQ==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468727485", "bodyText": "Updated", "author": "atris", "createdAt": "2020-08-11T16:56:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwODk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f3cb50a5a0670c7540478473c4e14c610a3429da", "chunk": "diff --git a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\nindex 496cde4dc8d..2ca547714ae 100644\n--- a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n+++ b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n\n@@ -47,7 +48,7 @@ public class TestRequestRateLimiter extends SolrCloudTestCase {\n     configureCluster(1).addConfig(FIRST_COLLECTION, configset(\"cloud-minimal\")).configure();\n   }\n \n-  @Nightly\n+  @Test\n   public void testConcurrentQueries() throws Exception {\n     CloudSolrClient client = cluster.getSolrClient();\n     client.setDefaultCollection(FIRST_COLLECTION);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwOTUwOQ==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468709509", "bodyText": "Should we assert that accepted + rejected = total?\nAnd that accepted > 0.", "author": "madrob", "createdAt": "2020-08-11T16:27:57Z", "path": "solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java", "diffHunk": "@@ -66,20 +65,19 @@ public void testConcurrentQueries() throws Exception {\n \n     solrDispatchFilter.replaceRateLimitManager(rateLimitManager);\n \n-    processTest(client);\n+    processTest(client, 10000 /* number of documents */, 350 /* number of queries */);\n \n     MockRequestRateLimiter mockQueryRateLimiter = (MockRequestRateLimiter) rateLimitManager.getRequestRateLimiter(SolrRequest.SolrRequestType.QUERY);\n \n-    assertEquals(25, mockQueryRateLimiter.incomingRequestCount.get());\n-    assertTrue(\"Incoming accepted new request count did not match. Expected 5 incoming \" + mockQueryRateLimiter.acceptedNewRequestCount.get(),\n-        mockQueryRateLimiter.acceptedNewRequestCount.get() < 25);\n-    assertTrue(\"Incoming rejected new request count did not match. Expected 20 incoming \" + mockQueryRateLimiter.rejectedRequestCount.get(),\n-        mockQueryRateLimiter.rejectedRequestCount.get() > 0);\n+    assertEquals(350, mockQueryRateLimiter.incomingRequestCount.get());\n+\n+    assertTrue((mockQueryRateLimiter.acceptedNewRequestCount.get() == mockQueryRateLimiter.incomingRequestCount.get()", "originalCommit": "90fa9270f0a80388a1e4c40e69a60f812883e72a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcxMzE5NA==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468713194", "bodyText": "That is what we do in this assert?\nassertEquals(mockQueryRateLimiter.incomingRequestCount.get(),\nmockQueryRateLimiter.acceptedNewRequestCount.get() + mockQueryRateLimiter.rejectedRequestCount.get());", "author": "atris", "createdAt": "2020-08-11T16:33:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwOTUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcyNDc1NQ==", "url": "https://github.com/apache/lucene-solr/pull/1736#discussion_r468724755", "bodyText": "yea I was looking at the wrong side of the diff", "author": "madrob", "createdAt": "2020-08-11T16:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwOTUwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "d7260228123a5a02d92a238769a6575d80ea0d52", "chunk": "diff --git a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\nindex 496cde4dc8d..e1e79a9a60e 100644\n--- a/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n+++ b/solr/core/src/test/org/apache/solr/servlet/TestRequestRateLimiter.java\n\n@@ -65,12 +65,15 @@ public class TestRequestRateLimiter extends SolrCloudTestCase {\n \n     solrDispatchFilter.replaceRateLimitManager(rateLimitManager);\n \n-    processTest(client, 10000 /* number of documents */, 350 /* number of queries */);\n+    int numDocs = TEST_NIGHTLY ? 10000 : 100;\n+\n+    processTest(client, numDocs, 350 /* number of queries */);\n \n     MockRequestRateLimiter mockQueryRateLimiter = (MockRequestRateLimiter) rateLimitManager.getRequestRateLimiter(SolrRequest.SolrRequestType.QUERY);\n \n     assertEquals(350, mockQueryRateLimiter.incomingRequestCount.get());\n \n+    assertTrue(mockQueryRateLimiter.acceptedNewRequestCount.get() > 0);\n     assertTrue((mockQueryRateLimiter.acceptedNewRequestCount.get() == mockQueryRateLimiter.incomingRequestCount.get()\n         || mockQueryRateLimiter.rejectedRequestCount.get() > 0));\n     assertEquals(mockQueryRateLimiter.incomingRequestCount.get(),\n"}}, {"oid": "d7260228123a5a02d92a238769a6575d80ea0d52", "url": "https://github.com/apache/lucene-solr/commit/d7260228123a5a02d92a238769a6575d80ea0d52", "message": "Update per comments", "committedDate": "2020-08-11T16:36:52Z", "type": "commit"}, {"oid": "f3cb50a5a0670c7540478473c4e14c610a3429da", "url": "https://github.com/apache/lucene-solr/commit/f3cb50a5a0670c7540478473c4e14c610a3429da", "message": "Revert nightly change", "committedDate": "2020-08-11T16:56:15Z", "type": "commit"}]}