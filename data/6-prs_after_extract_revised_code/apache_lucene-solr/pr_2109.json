{"pr_number": 2109, "pr_title": "LUCENE-9627: Small refactor of codec classes", "pr_createdAt": "2020-12-01T07:39:18Z", "pr_url": "https://github.com/apache/lucene-solr/pull/2109", "timeline": [{"oid": "66697f87f021306f049a50c2dacea5e86ff390f6", "url": "https://github.com/apache/lucene-solr/commit/66697f87f021306f049a50c2dacea5e86ff390f6", "message": "refactor of codec classes to separate reading header/footer from reading content of the file", "committedDate": "2020-12-01T07:37:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMzMzI2Mg==", "url": "https://github.com/apache/lucene-solr/pull/2109#discussion_r542333262", "bodyText": "call it writeCompoundFile?", "author": "jpountz", "createdAt": "2020-12-14T12:05:02Z", "path": "lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundFormat.java", "diffHunk": "@@ -80,52 +89,46 @@ public void write(Directory dir, SegmentInfo si, IOContext context) throws IOExc\n          IndexOutput entries = dir.createOutput(entriesFile, context)) {\n       CodecUtil.writeIndexHeader(data,    DATA_CODEC, VERSION_CURRENT, si.getId(), \"\");\n       CodecUtil.writeIndexHeader(entries, ENTRY_CODEC, VERSION_CURRENT, si.getId(), \"\");\n-      \n-      // write number of files\n-      entries.writeVInt(si.files().size());\n-      for (String file : si.files()) {\n-        \n-        // write bytes for file\n-        long startOffset = data.getFilePointer();\n-        try (ChecksumIndexInput in = dir.openChecksumInput(file, IOContext.READONCE)) {\n-\n-          // just copies the index header, verifying that its id matches what we expect\n-          CodecUtil.verifyAndCopyIndexHeader(in, data, si.getId());\n-          \n-          // copy all bytes except the footer\n-          long numBytesToCopy = in.length() - CodecUtil.footerLength() - in.getFilePointer();\n-          data.copyBytes(in, numBytesToCopy);\n-\n-          // verify footer (checksum) matches for the incoming file we are copying\n-          long checksum = CodecUtil.checkFooter(in);\n \n-          // this is poached from CodecUtil.writeFooter, but we need to use our own checksum, not data.getChecksum(), but I think\n-          // adding a public method to CodecUtil to do that is somewhat dangerous:\n-          data.writeInt(CodecUtil.FOOTER_MAGIC);\n-          data.writeInt(0);\n-          data.writeLong(checksum);\n-        }\n-        long endOffset = data.getFilePointer();\n-        \n-        long length = endOffset - startOffset;\n-        \n-        // write entry for file\n-        entries.writeString(IndexFileNames.stripSegmentName(file));\n-        entries.writeLong(startOffset);\n-        entries.writeLong(length);\n-      }\n+      writeSegmentInfo(entries, data, dir, si);", "originalCommit": "66697f87f021306f049a50c2dacea5e86ff390f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4b6f0386fe97907f52bb7f904c749c2bf472e545", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundFormat.java b/lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundFormat.java\nindex 38698481b26..2180dadcd6c 100644\n--- a/lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundFormat.java\n+++ b/lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundFormat.java\n\n@@ -90,14 +90,14 @@ public final class Lucene50CompoundFormat extends CompoundFormat {\n       CodecUtil.writeIndexHeader(data,    DATA_CODEC, VERSION_CURRENT, si.getId(), \"\");\n       CodecUtil.writeIndexHeader(entries, ENTRY_CODEC, VERSION_CURRENT, si.getId(), \"\");\n \n-      writeSegmentInfo(entries, data, dir, si);\n+      writeCompoundFile(entries, data, dir, si);\n       \n       CodecUtil.writeFooter(data);\n       CodecUtil.writeFooter(entries);\n     }\n   }\n   \n-  private void writeSegmentInfo(IndexOutput entries, IndexOutput data, Directory dir, SegmentInfo si) throws IOException {\n+  private void writeCompoundFile(IndexOutput entries, IndexOutput data, Directory dir, SegmentInfo si) throws IOException {\n     // write number of files\n     entries.writeVInt(si.files().size());\n     for (String file : si.files()) {\n"}}, {"oid": "d530975d7cddba1598f0b1697cce967afcffc4ee", "url": "https://github.com/apache/lucene-solr/commit/d530975d7cddba1598f0b1697cce967afcffc4ee", "message": "Merge branch 'master' into refactor-codec", "committedDate": "2020-12-14T15:00:07Z", "type": "commit"}, {"oid": "4b6f0386fe97907f52bb7f904c749c2bf472e545", "url": "https://github.com/apache/lucene-solr/commit/4b6f0386fe97907f52bb7f904c749c2bf472e545", "message": "add entry in CHANGES.txt and address review comments.", "committedDate": "2020-12-14T15:04:33Z", "type": "commit"}]}