{"pr_number": 2051, "pr_title": "LUCENE-9594 Add linear function for FeatureField", "pr_createdAt": "2020-10-30T20:52:36Z", "pr_url": "https://github.com/apache/lucene-solr/pull/2051", "timeline": [{"oid": "b1657643b378a9c43f0e10dbfc48bcbfa4925edc", "url": "https://github.com/apache/lucene-solr/commit/b1657643b378a9c43f0e10dbfc48bcbfa4925edc", "message": "LUCENE-9594 Add linear function for FeatureField\n\nThis adds a linear function and newLinearQuery for FeatureField", "committedDate": "2020-10-30T20:50:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwODYwNQ==", "url": "https://github.com/apache/lucene-solr/pull/2051#discussion_r520408605", "bodyText": "\"the simplest\" might suggest that this would be a good one to start with, when in fact I think this is the most expert function in my opinion given that it expects the feature to already be encoded in the index in a way that makes sense for scoring. Maybe javadocs should better convey that this is expert functionality?", "author": "jpountz", "createdAt": "2020-11-10T09:21:45Z", "path": "lucene/core/src/java/org/apache/lucene/document/FeatureField.java", "diffHunk": "@@ -66,8 +66,11 @@\n  * 2<sup>-8</sup> = 0.00390625.\n  * <p>\n  * Given a scoring factor {@code S > 0} and its weight {@code w > 0}, there\n- * are three ways that S can be turned into a score:\n+ * are four ways that S can be turned into a score:\n  * <ul>\n+ *   <li>{@link #newLinearQuery w * S}. This is the simplest function\n+ *       where no transformation is applied on the feature value, and\n+ *       the feature value itself multiplied by weight defines the score.", "originalCommit": "b1657643b378a9c43f0e10dbfc48bcbfa4925edc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2dfa55113e2f8b6a94842c4cb6c5f17e47e12fed", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/document/FeatureField.java b/lucene/core/src/java/org/apache/lucene/document/FeatureField.java\nindex 08fcd83699b..dafcbf4f046 100644\n--- a/lucene/core/src/java/org/apache/lucene/document/FeatureField.java\n+++ b/lucene/core/src/java/org/apache/lucene/document/FeatureField.java\n\n@@ -68,9 +68,6 @@ import org.apache.lucene.search.similarities.Similarity.SimScorer;\n  * Given a scoring factor {@code S > 0} and its weight {@code w > 0}, there\n  * are four ways that S can be turned into a score:\n  * <ul>\n- *   <li>{@link #newLinearQuery w * S}. This is the simplest function\n- *       where no transformation is applied on the feature value, and\n- *       the feature value itself multiplied by weight defines the score.\n  *   <li>{@link #newLogQuery w * log(a + S)}, with a &ge; 1. This function\n  *       usually makes sense because the distribution of scoring factors\n  *       often follows a power law. This is typically the case for pagerank for\n"}}, {"oid": "2dfa55113e2f8b6a94842c4cb6c5f17e47e12fed", "url": "https://github.com/apache/lucene-solr/commit/2dfa55113e2f8b6a94842c4cb6c5f17e47e12fed", "message": "Modify java doc", "committedDate": "2020-11-10T14:30:40Z", "type": "commit"}]}