{"pr_number": 1317, "pr_title": "SOLR-13101: Create metadataSuffix znode only at common shard creating api calls", "pr_createdAt": "2020-03-05T00:00:06Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1317", "timeline": [{"oid": "de74c5f001aeae6859c58a3d9aa14d819ec569e9", "url": "https://github.com/apache/lucene-solr/commit/de74c5f001aeae6859c58a3d9aa14d819ec569e9", "message": "Create metadataSuffix znode only at common shard creating api calls", "committedDate": "2020-03-04T23:50:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyNDM3Ng==", "url": "https://github.com/apache/lucene-solr/pull/1317#discussion_r391124376", "bodyText": "Wouldn't it be more appropriate to call it createMetadataNode and fail in case the node already exists?", "author": "mbwaheed", "createdAt": "2020-03-11T17:03:49Z", "path": "solr/core/src/java/org/apache/solr/store/shared/metadata/SharedShardMetadataController.java", "diffHunk": "@@ -53,12 +53,12 @@ public SharedShardMetadataController(SolrCloudManager cloudManager) {\n   \n   /**\n    * Creates a new metadata node if it doesn't exist for shared shared index whose correctness metadata \n-   * is managed by ZooKeeper\n+   * is managed by ZooKeeper. This node should only be created during Shard creation or Recovery events\n    *  \n    * @param collectionName name of the collection that needs a metadata node\n    * @param shardName name of the shard that needs a metadata node\n    */\n-  public void ensureMetadataNodeExists(String collectionName, String shardName) throws IOException {\n+  public void initiateMetadataNode(String collectionName, String shardName) throws IOException {", "originalCommit": "de74c5f001aeae6859c58a3d9aa14d819ec569e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0f30bc90e2a9c93a5a54c5c7ea4a4a27dc5e74a8", "chunk": "diff --git a/solr/core/src/java/org/apache/solr/store/shared/metadata/SharedShardMetadataController.java b/solr/core/src/java/org/apache/solr/store/shared/metadata/SharedShardMetadataController.java\nindex 85913c2f6c3..b8e866617cd 100644\n--- a/solr/core/src/java/org/apache/solr/store/shared/metadata/SharedShardMetadataController.java\n+++ b/solr/core/src/java/org/apache/solr/store/shared/metadata/SharedShardMetadataController.java\n\n@@ -54,11 +55,12 @@ public class SharedShardMetadataController {\n   /**\n    * Creates a new metadata node if it doesn't exist for shared shared index whose correctness metadata \n    * is managed by ZooKeeper. This node should only be created during Shard creation or Recovery events\n+   * and the method will throw an exception if the node already exists.\n    *  \n    * @param collectionName name of the collection that needs a metadata node\n    * @param shardName name of the shard that needs a metadata node\n    */\n-  public void initiateMetadataNode(String collectionName, String shardName) throws IOException {\n+  public void createMetadataNode(String collectionName, String shardName) throws IOException {\n     ClusterState clusterState = cloudManager.getClusterStateProvider().getClusterState();\n     DocCollection collection = clusterState.getCollection(collectionName);\n     if (!collection.getSharedIndex()) {\n"}}, {"oid": "0f30bc90e2a9c93a5a54c5c7ea4a4a27dc5e74a8", "url": "https://github.com/apache/lucene-solr/commit/0f30bc90e2a9c93a5a54c5c7ea4a4a27dc5e74a8", "message": "Throw error if node already exists", "committedDate": "2020-03-14T01:25:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0NDQ3Mw==", "url": "https://github.com/apache/lucene-solr/pull/1317#discussion_r392544473", "bodyText": "#makePath will also throw an AlreadyExistsException if the node exists and failOnExists=true", "author": "andyvuong", "createdAt": "2020-03-14T01:28:30Z", "path": "solr/core/src/java/org/apache/solr/store/shared/metadata/SharedShardMetadataController.java", "diffHunk": "@@ -146,20 +148,18 @@ public void cleanUpMetadataNodes(String collectionName, String shardName) {\n     }\n   }\n \n-  private void createPersistentNodeIfNonExistent(String path, byte[] data) {\n+  private void createPersistentNode(String path, byte[] data) {\n     try {\n       if (!stateManager.hasData(path)) {\n-        try {\n-          stateManager.makePath(path, data, CreateMode.PERSISTENT, /* failOnExists */ false);\n-        } catch (AlreadyExistsException e) {\n-          // it's okay if another beats us creating the node\n-        }\n+        stateManager.makePath(path, data, CreateMode.PERSISTENT, /* failOnExists */ true);", "originalCommit": "0f30bc90e2a9c93a5a54c5c7ea4a4a27dc5e74a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0NTIxNA==", "url": "https://github.com/apache/lucene-solr/pull/1317#discussion_r392545214", "bodyText": "few typos.", "author": "mbwaheed", "createdAt": "2020-03-14T01:37:34Z", "path": "solr/core/src/test/org/apache/solr/store/shared/metadata/SharedShardMetadataControllerTest.java", "diffHunk": "@@ -77,10 +77,26 @@ public void cleanup() throws Exception {\n    */\n   @Test\n   public void testSetupMetadataNode() throws Exception {    \n-    shardMetadataController.ensureMetadataNodeExists(TEST_COLLECTION_NAME, TEST_SHARD_NAME);\n+    shardMetadataController.createMetadataNode(TEST_COLLECTION_NAME, TEST_SHARD_NAME);\n     assertTrue(cluster.getZkClient().exists(metadataNodePath, false));\n   }\n   \n+  /**\n+   * Test if we try to create the same metadat anode twice, we faile", "originalCommit": "0f30bc90e2a9c93a5a54c5c7ea4a4a27dc5e74a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}