{"pr_number": 1319, "pr_title": "LUCENE-9164: process all events before closing gracefully", "pr_createdAt": "2020-03-05T09:44:56Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1319", "timeline": [{"oid": "9015222b5b7e88d68fae4f0364b40b9b825bccb4", "url": "https://github.com/apache/lucene-solr/commit/9015222b5b7e88d68fae4f0364b40b9b825bccb4", "message": "LUCENE-9164: process all events before closing gracefully", "committedDate": "2020-03-05T09:42:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4MTQ4MA==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r388181480", "bodyText": "Wouldn't it be nicer to make it just Closeable and pass IndexWriter in the constructor (instead of each method)?", "author": "dweiss", "createdAt": "2020-03-05T09:47:21Z", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,70 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final CloseableQueue eventQueue = new CloseableQueue();", "originalCommit": "9015222b5b7e88d68fae4f0364b40b9b825bccb4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77ad9b2aad59295c7b1c49c098a48b72569e44bc", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\nindex fd90b4aad15..39f99337631 100644\n--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n\n@@ -300,12 +300,17 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable,\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final CloseableQueue eventQueue = new CloseableQueue();\n+  private final CloseableQueue eventQueue = new CloseableQueue(this);\n \n-  static final class CloseableQueue  {\n+  static final class CloseableQueue implements Closeable {\n     private boolean closed = false;\n     private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n     private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    CloseableQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n \n     private void tryAcquire() {\n       if (permits.tryAcquire() == false) {\n"}}, {"oid": "77ad9b2aad59295c7b1c49c098a48b72569e44bc", "url": "https://github.com/apache/lucene-solr/commit/77ad9b2aad59295c7b1c49c098a48b72569e44bc", "message": "apply feedback", "committedDate": "2020-03-05T09:57:27Z", "type": "commit"}, {"oid": "8eafbbe5091b431cfd29493c9340bf84d544463c", "url": "https://github.com/apache/lucene-solr/commit/8eafbbe5091b431cfd29493c9340bf84d544463c", "message": "add volatile and @Override", "committedDate": "2020-03-05T10:00:52Z", "type": "commit"}, {"oid": "44d03e82dd3d35702ff9bfbe28970bacf91b4921", "url": "https://github.com/apache/lucene-solr/commit/44d03e82dd3d35702ff9bfbe28970bacf91b4921", "message": "Merge branch 'master' into close_on_queue", "committedDate": "2020-03-06T09:56:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyODI4OQ==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389028289", "bodyText": "nit: add a new line", "author": "dnhatn", "createdAt": "2020-03-06T17:05:35Z", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,76 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final CloseableQueue eventQueue = new CloseableQueue(this);\n+\n+  static final class CloseableQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    CloseableQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+    }\n+\n+    boolean add(Event event) {\n+      tryAcquire();\n+      try {\n+        return queue.add(event);\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    void processEvents() throws IOException {\n+      tryAcquire();\n+      try {\n+        processEventsInternal();\n+      }finally {\n+        permits.release();\n+      }\n+    }\n+    private void processEventsInternal() throws IOException {", "originalCommit": "44d03e82dd3d35702ff9bfbe28970bacf91b4921", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\nindex cf672369936..4299ba8bed9 100644\n--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n\n@@ -300,15 +300,15 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable,\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final CloseableQueue eventQueue = new CloseableQueue(this);\n+  private final EventQueue eventQueue = new EventQueue(this);\n \n-  static final class CloseableQueue implements Closeable {\n+  static final class EventQueue implements Closeable {\n     private volatile boolean closed = false;\n     private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n     private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n     private final IndexWriter writer;\n \n-    CloseableQueue(IndexWriter writer) {\n+    EventQueue(IndexWriter writer) {\n       this.writer = writer;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyODQ3Mw==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389028473", "bodyText": "I am not sure if EventQueue is a better name?", "author": "dnhatn", "createdAt": "2020-03-06T17:05:58Z", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,76 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final CloseableQueue eventQueue = new CloseableQueue(this);\n+\n+  static final class CloseableQueue implements Closeable {", "originalCommit": "44d03e82dd3d35702ff9bfbe28970bacf91b4921", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\nindex cf672369936..4299ba8bed9 100644\n--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n\n@@ -300,15 +300,15 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable,\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final CloseableQueue eventQueue = new CloseableQueue(this);\n+  private final EventQueue eventQueue = new EventQueue(this);\n \n-  static final class CloseableQueue implements Closeable {\n+  static final class EventQueue implements Closeable {\n     private volatile boolean closed = false;\n     private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n     private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n     private final IndexWriter writer;\n \n-    CloseableQueue(IndexWriter writer) {\n+    EventQueue(IndexWriter writer) {\n       this.writer = writer;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyODg3OQ==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389028879", "bodyText": "nit: space after }", "author": "dnhatn", "createdAt": "2020-03-06T17:06:49Z", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,76 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final CloseableQueue eventQueue = new CloseableQueue(this);\n+\n+  static final class CloseableQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    CloseableQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+    }\n+\n+    boolean add(Event event) {\n+      tryAcquire();\n+      try {\n+        return queue.add(event);\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    void processEvents() throws IOException {\n+      tryAcquire();\n+      try {\n+        processEventsInternal();\n+      }finally {", "originalCommit": "44d03e82dd3d35702ff9bfbe28970bacf91b4921", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\nindex cf672369936..4299ba8bed9 100644\n--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n\n@@ -300,15 +300,15 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable,\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final CloseableQueue eventQueue = new CloseableQueue(this);\n+  private final EventQueue eventQueue = new EventQueue(this);\n \n-  static final class CloseableQueue implements Closeable {\n+  static final class EventQueue implements Closeable {\n     private volatile boolean closed = false;\n     private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n     private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n     private final IndexWriter writer;\n \n-    CloseableQueue(IndexWriter writer) {\n+    EventQueue(IndexWriter writer) {\n       this.writer = writer;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyOTUxNA==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389029514", "bodyText": "I think we don't need to print the stack trace here.", "author": "dnhatn", "createdAt": "2020-03-06T17:07:52Z", "path": "lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java", "diffHunk": "@@ -3773,7 +3774,58 @@ public void testRefreshAndRollbackConcurrently() throws Exception {\n       stopped.set(true);\n       indexer.join();\n       refresher.join();\n+      if (w.getTragicException() != null) {\n+        w.getTragicException().printStackTrace();", "originalCommit": "44d03e82dd3d35702ff9bfbe28970bacf91b4921", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "chunk": "diff --git a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java\nindex 35d8237cc26..c1a16a6032c 100644\n--- a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java\n+++ b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java\n\n@@ -3774,9 +3773,6 @@ public class TestIndexWriter extends LuceneTestCase {\n       stopped.set(true);\n       indexer.join();\n       refresher.join();\n-      if (w.getTragicException() != null) {\n-        w.getTragicException().printStackTrace();\n-      }\n       assertNull(\"should not consider ACE a tragedy on a closed IW\", w.getTragicException());\n       IOUtils.close(sm, dir);\n     }\n"}}, {"oid": "82dcf4901ac65b3d30c5f816b23cf66d460c5253", "url": "https://github.com/apache/lucene-solr/commit/82dcf4901ac65b3d30c5f816b23cf66d460c5253", "message": "Merge branch 'master' into close_on_queue", "committedDate": "2020-03-06T18:18:21Z", "type": "commit"}, {"oid": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "url": "https://github.com/apache/lucene-solr/commit/569e357fe6d4b934793b02e4a977e35d3b56f02e", "message": "apply review comments", "committedDate": "2020-03-06T18:19:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxMzg5Nw==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389313897", "bodyText": "No need to i it with false ... this is already the default for Java.", "author": "mikemccand", "createdAt": "2020-03-07T21:35:39Z", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;", "originalCommit": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "694cf08ad87b6871fe7b0cabad0114271994736d", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\nindex 4299ba8bed9..f719f26a819 100644\n--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n\n@@ -303,7 +303,7 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable,\n   private final EventQueue eventQueue = new EventQueue(this);\n \n   static final class EventQueue implements Closeable {\n-    private volatile boolean closed = false;\n+    private volatile boolean closed;\n     private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n     private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n     private final IndexWriter writer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxMzkzMA==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389313930", "bodyText": "Hmm should we permits.release before throwing AlreadyClosedException?  Otherwise couldn't we maybe deadlock another thread doing close when it does permits.acquire(Integer.MAX_VALUE)?", "author": "mikemccand", "createdAt": "2020-03-07T21:36:27Z", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    EventQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");", "originalCommit": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5NDE1Ng==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389394156", "bodyText": "Great catch.", "author": "dnhatn", "createdAt": "2020-03-08T18:35:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxMzkzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5NzcyMQ==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389397721", "bodyText": "I added a test to ensure this works", "author": "s1monw", "createdAt": "2020-03-08T19:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxMzkzMA=="}], "type": "inlineReview", "revised_code": {"commit": "694cf08ad87b6871fe7b0cabad0114271994736d", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\nindex 4299ba8bed9..f719f26a819 100644\n--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n\n@@ -303,7 +303,7 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable,\n   private final EventQueue eventQueue = new EventQueue(this);\n \n   static final class EventQueue implements Closeable {\n-    private volatile boolean closed = false;\n+    private volatile boolean closed;\n     private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n     private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n     private final IndexWriter writer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4NzQ0OA==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389387448", "bodyText": "Maybe rewrite to assert permits.availablePermits() < Integer.MAX_VALUE for easier readability?", "author": "mikemccand", "createdAt": "2020-03-08T17:05:07Z", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    EventQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+    }\n+\n+    boolean add(Event event) {\n+      tryAcquire();\n+      try {\n+        return queue.add(event);\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    void processEvents() throws IOException {\n+      tryAcquire();\n+      try {\n+        processEventsInternal();\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    private void processEventsInternal() throws IOException {\n+      assert Integer.MAX_VALUE - permits.availablePermits() > 0 : \"must acquire a permit before processing events\";", "originalCommit": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5NzEyMw==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389397123", "bodyText": "but this wouldn't catch the case where we didn't acquire any permit?", "author": "s1monw", "createdAt": "2020-03-08T19:15:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4NzQ0OA=="}], "type": "inlineReview", "revised_code": {"commit": "694cf08ad87b6871fe7b0cabad0114271994736d", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\nindex 4299ba8bed9..f719f26a819 100644\n--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n\n@@ -303,7 +303,7 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable,\n   private final EventQueue eventQueue = new EventQueue(this);\n \n   static final class EventQueue implements Closeable {\n-    private volatile boolean closed = false;\n+    private volatile boolean closed;\n     private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n     private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n     private final IndexWriter writer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4NzczMQ==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389387731", "bodyText": "Why synchronized here (no other method is synchronized)?  Just to prevent two threads from calling close at once?", "author": "mikemccand", "createdAt": "2020-03-08T17:08:19Z", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    EventQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+    }\n+\n+    boolean add(Event event) {\n+      tryAcquire();\n+      try {\n+        return queue.add(event);\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    void processEvents() throws IOException {\n+      tryAcquire();\n+      try {\n+        processEventsInternal();\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    private void processEventsInternal() throws IOException {\n+      assert Integer.MAX_VALUE - permits.availablePermits() > 0 : \"must acquire a permit before processing events\";\n+      Event event;\n+      while ((event = queue.poll()) != null) {\n+        event.process(writer);\n+      }\n+    }\n+\n+    @Override\n+    public synchronized void close() throws IOException {", "originalCommit": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5NzY5MA==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389397690", "bodyText": "correct", "author": "s1monw", "createdAt": "2020-03-08T19:24:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4NzczMQ=="}], "type": "inlineReview", "revised_code": {"commit": "694cf08ad87b6871fe7b0cabad0114271994736d", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\nindex 4299ba8bed9..f719f26a819 100644\n--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n\n@@ -303,7 +303,7 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable,\n   private final EventQueue eventQueue = new EventQueue(this);\n \n   static final class EventQueue implements Closeable {\n-    private volatile boolean closed = false;\n+    private volatile boolean closed;\n     private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n     private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n     private final IndexWriter writer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4ODEwNg==", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389388106", "bodyText": "Can we rename this to acquire?  If it fails, it throws an exception, so upon returning, it always succeeds?", "author": "mikemccand", "createdAt": "2020-03-08T17:13:07Z", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    EventQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {", "originalCommit": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "694cf08ad87b6871fe7b0cabad0114271994736d", "chunk": "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\nindex 4299ba8bed9..f719f26a819 100644\n--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java\n\n@@ -303,7 +303,7 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable,\n   private final EventQueue eventQueue = new EventQueue(this);\n \n   static final class EventQueue implements Closeable {\n-    private volatile boolean closed = false;\n+    private volatile boolean closed;\n     private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n     private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n     private final IndexWriter writer;\n"}}, {"oid": "694cf08ad87b6871fe7b0cabad0114271994736d", "url": "https://github.com/apache/lucene-solr/commit/694cf08ad87b6871fe7b0cabad0114271994736d", "message": "add feedback", "committedDate": "2020-03-08T19:24:07Z", "type": "commit"}, {"oid": "ecb92e25b31dc777d51be49f756f49a31be72f2a", "url": "https://github.com/apache/lucene-solr/commit/ecb92e25b31dc777d51be49f756f49a31be72f2a", "message": "add comment", "committedDate": "2020-03-08T19:26:47Z", "type": "commit"}, {"oid": "5652c30d58c26f477ba5a4f3883db6880a260d63", "url": "https://github.com/apache/lucene-solr/commit/5652c30d58c26f477ba5a4f3883db6880a260d63", "message": "Merge branch 'master' into close_on_queue", "committedDate": "2020-03-09T17:56:00Z", "type": "commit"}, {"oid": "4b07f5a65341948d2b9f1770d07ab8fb2cec5ed5", "url": "https://github.com/apache/lucene-solr/commit/4b07f5a65341948d2b9f1770d07ab8fb2cec5ed5", "message": "add changes", "committedDate": "2020-03-10T06:51:13Z", "type": "commit"}, {"oid": "622bd589908f1e779bb3d2998184e9b3607b204a", "url": "https://github.com/apache/lucene-solr/commit/622bd589908f1e779bb3d2998184e9b3607b204a", "message": "Merge branch 'master' into close_on_queue", "committedDate": "2020-03-10T19:38:04Z", "type": "commit"}]}