{"pr_number": 5792, "pr_title": "[2.19.x] DDF-5627 G-7443 Add an endpoint to validate different aspects of a query", "pr_createdAt": "2020-01-21T22:11:46Z", "pr_url": "https://github.com/codice/ddf/pull/5792", "timeline": [{"oid": "e9af414361e070c80cc337abf4d5b41306f28f29", "url": "https://github.com/codice/ddf/commit/e9af414361e070c80cc337abf4d5b41306f28f29", "message": "DDF-5627 G-7443 Add an endpoint to validate different aspects of a query (#5628)", "committedDate": "2020-01-21T22:10:03Z", "type": "commit"}, {"oid": "e1bec1966eeabe67d7f016f03f1530a331f07528", "url": "https://github.com/codice/ddf/commit/e1bec1966eeabe67d7f016f03f1530a331f07528", "message": "DDF-5627 Fixed pom version", "committedDate": "2020-01-21T22:37:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3NDgxOQ==", "url": "https://github.com/codice/ddf/pull/5792#discussion_r370174819", "bodyText": "\u270f\ufe0f its", "author": "shaundmorris", "createdAt": "2020-01-23T15:10:31Z", "path": "catalog/ui/catalog-ui-search/src/main/java/org/codice/ddf/catalog/ui/query/validate/QueryValidators.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.catalog.ui.query.validate;\n+\n+import ddf.catalog.validation.QueryValidator;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * A collection of {@code QueryValidator} instances that have been registered in the system. These\n+ * instances can be fetched by their unique id (see {@code QueryValidator#getValidatorId}).\n+ */\n+public class QueryValidators {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(QueryValidators.class);\n+\n+  private Map<String, QueryValidator> validators = new ConcurrentHashMap<>();\n+\n+  /**\n+   * Gets a registered {@code QueryValidator} instance by it's id.", "originalCommit": "e1bec1966eeabe67d7f016f03f1530a331f07528", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}