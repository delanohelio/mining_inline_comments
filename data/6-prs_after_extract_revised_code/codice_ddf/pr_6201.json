{"pr_number": 6201, "pr_title": "Makes solr config auto include required files if not specified", "pr_createdAt": "2020-07-27T23:10:12Z", "pr_url": "https://github.com/codice/ddf/pull/6201", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1NDI5OA==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r462554298", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // if any defaults are missing-- create a temp  and copy collectinPath+defaults\n          \n          \n            \n                // if any defaults are missing-- create a temp  and copy collectionPath + defaults", "author": "rzwiefel", "createdAt": "2020-07-29T20:03:01Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java", "diffHunk": "@@ -80,11 +84,61 @@ private Path createDefaultConfigset(Path configsets) {\n \n   public Path get(String collection) {\n     Path collectionPath = Paths.get(configsetsPath, collection, \"conf\");\n-    if (collectionPath.toFile().exists()) {\n-      return collectionPath;\n-    } else {\n+    if (!collectionPath.toFile().exists()) {\n       LOGGER.debug(\"No configset for collection [{}]. Using default configset instead\", collection);\n       return defaultPath;\n     }\n+    return getRectifiedConfig(collection, collectionPath);\n+  }\n+\n+  private Path getRectifiedConfig(String collection, Path collectionPath) {\n+    // if any defaults are missing-- create a temp  and copy collectinPath+defaults", "originalCommit": "fad8dd5aa759df2ee7a80f61933e0acc8ccf72a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "478b229a5d66a64229b7c708ba019094eee15dab", "chunk": "diff --git a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\nindex 784838e1a2..3820c2e061 100644\n--- a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n+++ b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n\n@@ -92,7 +92,7 @@ public Path get(String collection) {\n   }\n \n   private Path getRectifiedConfig(String collection, Path collectionPath) {\n-    // if any defaults are missing-- create a temp  and copy collectinPath+defaults\n+    // if any defaults are missing-- create a temp  and copy collectionPath + defaults\n     Set<Path> allFiles =\n         SOLR_CONFIG_FILES.stream()\n             .map(configName -> Paths.get(collectionPath.toString(), configName))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMwODk3Mw==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r463308973", "bodyText": "\u2753 Shouldn't we include the collection name in the temporary folder so two clients creating different collections do not partially overwrite each other?", "author": "pklinef", "createdAt": "2020-07-30T22:33:49Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java", "diffHunk": "@@ -80,11 +84,61 @@ private Path createDefaultConfigset(Path configsets) {\n \n   public Path get(String collection) {\n     Path collectionPath = Paths.get(configsetsPath, collection, \"conf\");\n-    if (collectionPath.toFile().exists()) {\n-      return collectionPath;\n-    } else {\n+    if (!collectionPath.toFile().exists()) {\n       LOGGER.debug(\"No configset for collection [{}]. Using default configset instead\", collection);\n       return defaultPath;\n     }\n+    return getRectifiedConfig(collection, collectionPath);\n+  }\n+\n+  private Path getRectifiedConfig(String collection, Path collectionPath) {\n+    // if any defaults are missing-- create a temp  and copy collectionPath + defaults\n+    Set<Path> allFiles =\n+        SOLR_CONFIG_FILES.stream()\n+            .map(configName -> Paths.get(collectionPath.toString(), configName))\n+            .collect(Collectors.toSet());\n+    Set<Path> missingFiles =\n+        allFiles.stream().filter(config -> !config.toFile().exists()).collect(Collectors.toSet());\n+    Set<Path> existingFiles =\n+        allFiles.stream().filter(missingFiles::contains).collect(Collectors.toSet());\n+\n+    if (missingFiles.isEmpty()) {\n+      return collectionPath;\n+    }\n+\n+    Path tempConfigDir;\n+    try {\n+      tempConfigDir = Files.createTempDirectory(\"solr-configsets\");", "originalCommit": "7ef10fd313199dd900d090918bcd7fcc7a9b1626", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMzMDE0Ng==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r463330146", "bodyText": "Never mind.  The directory will have a random number added to it.\nhttps://github.com/AdoptOpenJDK/openjdk-jdk8u/blob/5ca4d2a8ca68334a9f7323ebf9f5a259cee6f6ff/jdk/src/share/classes/java/nio/file/TempFileHelper.java#L57-L65", "author": "pklinef", "createdAt": "2020-07-30T23:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMwODk3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "478b229a5d66a64229b7c708ba019094eee15dab", "chunk": "diff --git a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\nindex 1c0eb9b277..3820c2e061 100644\n--- a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n+++ b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n\n@@ -100,7 +100,7 @@ private Path getRectifiedConfig(String collection, Path collectionPath) {\n     Set<Path> missingFiles =\n         allFiles.stream().filter(config -> !config.toFile().exists()).collect(Collectors.toSet());\n     Set<Path> existingFiles =\n-        allFiles.stream().filter(missingFiles::contains).collect(Collectors.toSet());\n+        allFiles.stream().filter(config -> config.toFile().exists()).collect(Collectors.toSet());\n \n     if (missingFiles.isEmpty()) {\n       return collectionPath;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2ODMwNA==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r465368304", "bodyText": "\u2754 Does this work better for different platforms?", "author": "shaundmorris", "createdAt": "2020-08-04T22:35:53Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java", "diffHunk": "@@ -39,15 +44,14 @@\n               \"solr.xml\",\n               \"solrconfig.xml\",\n               \"stopwords.txt\",\n-              \"stopwords_en.txt\",\n               \"synonyms.txt\"));\n \n   private String configsetsPath;\n \n   private Path defaultPath;\n \n   public Configsets() {\n-    this(Paths.get(System.getProperty(\"ddf.home\", \"\"), \"etc/solr/configsets\"));\n+    this(Paths.get(System.getProperty(\"ddf.home\", \"\"), \"etc\", \"solr\", \"configsets\"));", "originalCommit": "7ef10fd313199dd900d090918bcd7fcc7a9b1626", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1NDI3OQ==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r468154279", "bodyText": "Yes, I believe this is the 'best practice' way to use Paths.get since it will insert the separator automatically, saving you from needing to hardcode it.", "author": "rzwiefel", "createdAt": "2020-08-10T20:12:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2ODMwNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1MjM2Mw==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r468152363", "bodyText": "\u2754 If something else goes wrong in there do you need to make sure that tempConfigDir is closed?", "author": "shaundmorris", "createdAt": "2020-08-10T20:08:23Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java", "diffHunk": "@@ -80,11 +84,61 @@ private Path createDefaultConfigset(Path configsets) {\n \n   public Path get(String collection) {\n     Path collectionPath = Paths.get(configsetsPath, collection, \"conf\");\n-    if (collectionPath.toFile().exists()) {\n-      return collectionPath;\n-    } else {\n+    if (!collectionPath.toFile().exists()) {\n       LOGGER.debug(\"No configset for collection [{}]. Using default configset instead\", collection);\n       return defaultPath;\n     }\n+    return getRectifiedConfig(collection, collectionPath);\n+  }\n+\n+  private Path getRectifiedConfig(String collection, Path collectionPath) {\n+    // if any defaults are missing-- create a temp  and copy collectionPath + defaults\n+    Set<Path> allFiles =\n+        SOLR_CONFIG_FILES.stream()\n+            .map(configName -> Paths.get(collectionPath.toString(), configName))\n+            .collect(Collectors.toSet());\n+    Set<Path> missingFiles =\n+        allFiles.stream().filter(config -> !config.toFile().exists()).collect(Collectors.toSet());\n+    Set<Path> existingFiles =\n+        allFiles.stream().filter(missingFiles::contains).collect(Collectors.toSet());\n+\n+    if (missingFiles.isEmpty()) {\n+      return collectionPath;\n+    }\n+\n+    Path tempConfigDir;\n+    try {\n+      tempConfigDir = Files.createTempDirectory(\"solr-configsets\");\n+      tempConfigDir.toFile().deleteOnExit();\n+    } catch (IOException e) {", "originalCommit": "7ef10fd313199dd900d090918bcd7fcc7a9b1626", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1OTA0MA==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r468159040", "bodyText": "The nice thing about using a temp directory is though we might make a couple of them (if multiple attempts are made or if something goes wrong), since its a temp directory the OS will clean it out (at a minimum) when restarted. The overhead isn't very high, so it should never accumulate into a problem.  The delete on exit is just an optimistic way to clean it out possibly sooner.", "author": "rzwiefel", "createdAt": "2020-08-10T20:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1MjM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "478b229a5d66a64229b7c708ba019094eee15dab", "chunk": "diff --git a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\nindex 1c0eb9b277..3820c2e061 100644\n--- a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n+++ b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n\n@@ -100,7 +100,7 @@ private Path getRectifiedConfig(String collection, Path collectionPath) {\n     Set<Path> missingFiles =\n         allFiles.stream().filter(config -> !config.toFile().exists()).collect(Collectors.toSet());\n     Set<Path> existingFiles =\n-        allFiles.stream().filter(missingFiles::contains).collect(Collectors.toSet());\n+        allFiles.stream().filter(config -> config.toFile().exists()).collect(Collectors.toSet());\n \n     if (missingFiles.isEmpty()) {\n       return collectionPath;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1MzE3NQ==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r468153175", "bodyText": "\u2754 Same here. Since you are not returning the tempConfigDir do you need to make sure it is closed?", "author": "shaundmorris", "createdAt": "2020-08-10T20:10:07Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java", "diffHunk": "@@ -80,11 +84,61 @@ private Path createDefaultConfigset(Path configsets) {\n \n   public Path get(String collection) {\n     Path collectionPath = Paths.get(configsetsPath, collection, \"conf\");\n-    if (collectionPath.toFile().exists()) {\n-      return collectionPath;\n-    } else {\n+    if (!collectionPath.toFile().exists()) {\n       LOGGER.debug(\"No configset for collection [{}]. Using default configset instead\", collection);\n       return defaultPath;\n     }\n+    return getRectifiedConfig(collection, collectionPath);\n+  }\n+\n+  private Path getRectifiedConfig(String collection, Path collectionPath) {\n+    // if any defaults are missing-- create a temp  and copy collectionPath + defaults\n+    Set<Path> allFiles =\n+        SOLR_CONFIG_FILES.stream()\n+            .map(configName -> Paths.get(collectionPath.toString(), configName))\n+            .collect(Collectors.toSet());\n+    Set<Path> missingFiles =\n+        allFiles.stream().filter(config -> !config.toFile().exists()).collect(Collectors.toSet());\n+    Set<Path> existingFiles =\n+        allFiles.stream().filter(missingFiles::contains).collect(Collectors.toSet());\n+\n+    if (missingFiles.isEmpty()) {\n+      return collectionPath;\n+    }\n+\n+    Path tempConfigDir;\n+    try {\n+      tempConfigDir = Files.createTempDirectory(\"solr-configsets\");\n+      tempConfigDir.toFile().deleteOnExit();\n+    } catch (IOException e) {\n+      LOGGER.debug(\n+          \"Could not create directory to utilize incomplete configset [{}]. Using default configset instead\",\n+          collection);\n+      return defaultPath;\n+    }\n+\n+    Set<Path> pathsToCopy =\n+        ImmutableSet.<Path>builder()\n+            .addAll(\n+                missingFiles.stream()\n+                    .map(Path::getFileName)\n+                    .map(Path::toString)\n+                    .map(fileName -> Paths.get(defaultPath.toString(), fileName))\n+                    .collect(Collectors.toSet()))\n+            .addAll(existingFiles)\n+            .build();\n+    for (Path filePath : pathsToCopy) {\n+      try {\n+        Files.copy(\n+            filePath,\n+            Paths.get(tempConfigDir.toString(), filePath.getFileName().toString()),\n+            StandardCopyOption.REPLACE_EXISTING);\n+      } catch (IOException e) {\n+        LOGGER.debug(\"Could not copy config file [{}], reverting to default.\", filePath);", "originalCommit": "7ef10fd313199dd900d090918bcd7fcc7a9b1626", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1OTg5OA==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r468159898", "bodyText": "see other comment", "author": "rzwiefel", "createdAt": "2020-08-10T20:16:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1MzE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE3MDY0OQ==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r468170649", "bodyText": "roger, not sure why I was missing the TempDirectory", "author": "shaundmorris", "createdAt": "2020-08-10T20:35:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1MzE3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "478b229a5d66a64229b7c708ba019094eee15dab", "chunk": "diff --git a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\nindex 1c0eb9b277..3820c2e061 100644\n--- a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n+++ b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n\n@@ -100,7 +100,7 @@ private Path getRectifiedConfig(String collection, Path collectionPath) {\n     Set<Path> missingFiles =\n         allFiles.stream().filter(config -> !config.toFile().exists()).collect(Collectors.toSet());\n     Set<Path> existingFiles =\n-        allFiles.stream().filter(missingFiles::contains).collect(Collectors.toSet());\n+        allFiles.stream().filter(config -> config.toFile().exists()).collect(Collectors.toSet());\n \n     if (missingFiles.isEmpty()) {\n       return collectionPath;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyNjIxMw==", "url": "https://github.com/codice/ddf/pull/6201#discussion_r476726213", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    allFiles.stream().filter(missingFiles::contains).collect(Collectors.toSet());\n          \n          \n            \n                    allFiles.stream().filter(config -> config.toFile().exists()).collect(Collectors.toSet());", "author": "rzwiefel", "createdAt": "2020-08-25T20:45:06Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java", "diffHunk": "@@ -80,11 +84,61 @@ private Path createDefaultConfigset(Path configsets) {\n \n   public Path get(String collection) {\n     Path collectionPath = Paths.get(configsetsPath, collection, \"conf\");\n-    if (collectionPath.toFile().exists()) {\n-      return collectionPath;\n-    } else {\n+    if (!collectionPath.toFile().exists()) {\n       LOGGER.debug(\"No configset for collection [{}]. Using default configset instead\", collection);\n       return defaultPath;\n     }\n+    return getRectifiedConfig(collection, collectionPath);\n+  }\n+\n+  private Path getRectifiedConfig(String collection, Path collectionPath) {\n+    // if any defaults are missing-- create a temp  and copy collectionPath + defaults\n+    Set<Path> allFiles =\n+        SOLR_CONFIG_FILES.stream()\n+            .map(configName -> Paths.get(collectionPath.toString(), configName))\n+            .collect(Collectors.toSet());\n+    Set<Path> missingFiles =\n+        allFiles.stream().filter(config -> !config.toFile().exists()).collect(Collectors.toSet());\n+    Set<Path> existingFiles =\n+        allFiles.stream().filter(missingFiles::contains).collect(Collectors.toSet());", "originalCommit": "7ef10fd313199dd900d090918bcd7fcc7a9b1626", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "478b229a5d66a64229b7c708ba019094eee15dab", "chunk": "diff --git a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\nindex 1c0eb9b277..3820c2e061 100644\n--- a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n+++ b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/Configsets.java\n\n@@ -100,7 +100,7 @@ private Path getRectifiedConfig(String collection, Path collectionPath) {\n     Set<Path> missingFiles =\n         allFiles.stream().filter(config -> !config.toFile().exists()).collect(Collectors.toSet());\n     Set<Path> existingFiles =\n-        allFiles.stream().filter(missingFiles::contains).collect(Collectors.toSet());\n+        allFiles.stream().filter(config -> config.toFile().exists()).collect(Collectors.toSet());\n \n     if (missingFiles.isEmpty()) {\n       return collectionPath;\n"}}, {"oid": "478b229a5d66a64229b7c708ba019094eee15dab", "url": "https://github.com/codice/ddf/commit/478b229a5d66a64229b7c708ba019094eee15dab", "message": "Makes solr config auto include required files if not specified", "committedDate": "2020-08-26T18:41:36Z", "type": "forcePushed"}, {"oid": "5b5024430cd4d18947ef4e9c02682096efb03cde", "url": "https://github.com/codice/ddf/commit/5b5024430cd4d18947ef4e9c02682096efb03cde", "message": "Makes solr config auto include required files if not specified", "committedDate": "2020-08-26T19:57:17Z", "type": "commit"}, {"oid": "5b5024430cd4d18947ef4e9c02682096efb03cde", "url": "https://github.com/codice/ddf/commit/5b5024430cd4d18947ef4e9c02682096efb03cde", "message": "Makes solr config auto include required files if not specified", "committedDate": "2020-08-26T19:57:17Z", "type": "forcePushed"}]}