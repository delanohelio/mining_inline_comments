{"pr_number": 6017, "pr_title": "Fix Solr create error when sort geo is out of bounds", "pr_createdAt": "2020-04-24T22:06:15Z", "pr_url": "https://github.com/codice/ddf/pull/6017", "timeline": [{"oid": "501f3c115af86c4cfc2338ccf69add77199096a0", "url": "https://github.com/codice/ddf/commit/501f3c115af86c4cfc2338ccf69add77199096a0", "message": "Fix Solr create error when sort geo is out of bounds", "committedDate": "2020-04-24T21:59:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMzM4MQ==", "url": "https://github.com/codice/ddf/pull/6017#discussion_r414903381", "bodyText": "interesting function... considers going past the top of the world as if you turned back around and walked down.", "author": "millerw8", "createdAt": "2020-04-24T22:44:48Z", "path": "catalog/core/catalog-core-solr/src/main/java/ddf/catalog/source/solr/DynamicSchemaResolver.java", "diffHunk": "@@ -430,7 +431,31 @@ private String createCenterPoint(List<Serializable> values) {\n       return null;\n     }\n \n-    return centerPoint.getY() + \",\" + centerPoint.getX();\n+    return normalize(centerPoint);\n+  }\n+\n+  /**\n+   * Normalizes point for coordinate boundary wrapping. Truncates coordinates to a reasonable\n+   * precision.\n+   *\n+   * @return Solr formatted coordinate\n+   */\n+  private String normalize(Point center) {\n+    return DistanceUtils.normLatDEG(truncate(center.getY()))", "originalCommit": "501f3c115af86c4cfc2338ccf69add77199096a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkxNDgyNQ==", "url": "https://github.com/codice/ddf/pull/6017#discussion_r414914825", "bodyText": "I realized I was starting to write a crappy version of it and then remembered Spatial4j would have the function I needed.  Thankfully it was public and already available to the Solr provider classes.", "author": "pklinef", "createdAt": "2020-04-24T23:20:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMzM4MQ=="}], "type": "inlineReview", "revised_code": null}]}