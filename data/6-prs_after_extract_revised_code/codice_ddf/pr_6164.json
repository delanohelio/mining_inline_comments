{"pr_number": 6164, "pr_title": "Fix linkage errors, qualifier handling, NPE in metrics processing, and revert Xerces upgrade", "pr_createdAt": "2020-07-07T18:01:41Z", "pr_url": "https://github.com/codice/ddf/pull/6164", "timeline": [{"oid": "a2e1d862354754a3e6f6a88e404640c0c70d353f", "url": "https://github.com/codice/ddf/commit/a2e1d862354754a3e6f6a88e404640c0c70d353f", "message": "Fix linkage errors\n\nEndorses ServiceMix saaj-api and activation-api bundles and exports\ntheir packages from bundle 0. This fixes an issue in Karaf causing\nlinkage errors.", "committedDate": "2020-06-25T22:28:51Z", "type": "commit"}, {"oid": "478882826458ae45677f3e8278f9e44eb6a97c7f", "url": "https://github.com/codice/ddf/commit/478882826458ae45677f3e8278f9e44eb6a97c7f", "message": "Change qualifier handling to respect use cases other than derived resources", "committedDate": "2020-06-25T22:33:00Z", "type": "commit"}, {"oid": "3d302cc733d998ed5a8e03b7214a00f610f1064d", "url": "https://github.com/codice/ddf/commit/3d302cc733d998ed5a8e03b7214a00f610f1064d", "message": "Revert \"DDF-6075 Dependency Upgrades [2.21.x] (#6098)\"\n\nThis reverts commit cbb8be60c8223f814d84a4e48af3c4f50630ccca.", "committedDate": "2020-07-02T23:51:02Z", "type": "commit"}, {"oid": "96a1d9f464b9421b59ca350b81e36106431a0ea5", "url": "https://github.com/codice/ddf/commit/96a1d9f464b9421b59ca350b81e36106431a0ea5", "message": "Check for empty collection to avoid NoSuchElementException from Iterator.next()", "committedDate": "2020-07-03T01:54:59Z", "type": "commit"}, {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97", "url": "https://github.com/codice/ddf/commit/8cceca3fff6ec22d7078de75fb95c7792c649c97", "message": "Substitute servicemix spec bundle versions", "committedDate": "2020-07-07T17:58:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NTY0Mw==", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451695643", "bodyText": "Can we update unit tests to check this?", "author": "clockard", "createdAt": "2020-07-08T17:04:02Z", "path": "catalog/core/catalog-core-metricsplugin/src/main/java/ddf/catalog/metrics/CatalogMetrics.java", "diffHunk": "@@ -95,8 +97,10 @@ public QueryRequest process(QueryRequest input)\n       throws PluginExecutionException, StopProcessingException {\n     final String scope = getQueryScope(input);\n     QueryTypeFilterDelegate queryType = new QueryTypeFilterDelegate();\n-    Set<String> sourceIds = input.getSourceIds();\n-    if (sourceIds != null) {\n+\n+    if (input.getSourceIds() != null) {", "originalCommit": "8cceca3fff6ec22d7078de75fb95c7792c649c97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTczMzQ5MA==", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451733490", "bodyText": "Added a unit test for this", "author": "SmithJosh", "createdAt": "2020-07-08T18:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NTY0Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NjYzMQ==", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451696631", "bodyText": "Update unit tests?", "author": "clockard", "createdAt": "2020-07-08T17:05:36Z", "path": "catalog/core/catalog-core-standardframework/src/main/java/ddf/catalog/impl/operations/ResourceOperations.java", "diffHunk": "@@ -429,8 +430,17 @@ private static URI getResourceOrDerivedUri(ResourceInfo resourceInfo, ResourceRe\n     // check if the resource request included a qualifier in which case we are trying to retrieve\n     // a derived resource and not the resource\n     final Serializable qualifier = resourceReq.getPropertyValue(ResourceRequest.QUALIFIER);\n-\n-    if (qualifier == null) { // no qualifier means we are retrieving the resource\n+    final String scheme = resourceInfo.getResourceUri().getScheme();\n+\n+    // no qualifier means we are retrieving the resource\n+    // presence of a qualifier can mean different things. We interpret it based on protocol:\n+    //   - content: this always means we are retrieving a derived resource.\n+    //   - http(s): we assume the intent is to retrieve a derived resource. Is this always true?\n+    //   - other: we assume we are retrieving the resource. This assumption is based on experience\n+    //            with protocols that use the qualifier for purposes other than derived resources.\n+    //            If protocols besides content and http(s) need to support derived resources, this\n+    //            could be an issue.\n+    if (qualifier == null || !Arrays.asList(\"http\", \"https\", \"content\").contains(scheme)) {", "originalCommit": "8cceca3fff6ec22d7078de75fb95c7792c649c97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc0NTA0MA==", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451745040", "bodyText": "Hm... same here. No unit tests for this derived resource handling logic. I can try to add something for this change, but the whole method needs tests.", "author": "SmithJosh", "createdAt": "2020-07-08T18:29:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NjYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDI4NQ==", "url": "https://github.com/codice/ddf/pull/6164#discussion_r452430285", "bodyText": "Added unit tests", "author": "SmithJosh", "createdAt": "2020-07-09T19:06:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NjYzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "130690e48d8ddec81ebf2752cd3a663c87784a55", "chunk": "diff --git a/catalog/core/catalog-core-standardframework/src/main/java/ddf/catalog/impl/operations/ResourceOperations.java b/catalog/core/catalog-core-standardframework/src/main/java/ddf/catalog/impl/operations/ResourceOperations.java\nindex 4563a9811a..3aab5fc0b7 100644\n--- a/catalog/core/catalog-core-standardframework/src/main/java/ddf/catalog/impl/operations/ResourceOperations.java\n+++ b/catalog/core/catalog-core-standardframework/src/main/java/ddf/catalog/impl/operations/ResourceOperations.java\n\n@@ -425,7 +426,8 @@ ResourceResponse getResource(\n     return resourceResponse;\n   }\n \n-  private static URI getResourceOrDerivedUri(ResourceInfo resourceInfo, ResourceRequest resourceReq)\n+  @VisibleForTesting\n+  static URI getResourceOrDerivedUri(ResourceInfo resourceInfo, ResourceRequest resourceReq)\n       throws ResourceNotFoundException {\n     // check if the resource request included a qualifier in which case we are trying to retrieve\n     // a derived resource and not the resource\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5ODUzOA==", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451698538", "bodyText": "Update unit tests?", "author": "clockard", "createdAt": "2020-07-08T17:08:40Z", "path": "platform/security/core/security-core-services/src/main/java/ddf/security/soap/impl/SecureProxyServiceFactoryImpl.java", "diffHunk": "@@ -326,7 +326,7 @@ public void handleMessage(Message message) throws Fault {\n       }\n \n       Collection<AssertionInfo> ais = getAllAssertionsByLocalname(aim, SPConstants.ISSUED_TOKEN);\n-      if (ais == null) {\n+      if (ais == null || ais.isEmpty()) {", "originalCommit": "8cceca3fff6ec22d7078de75fb95c7792c649c97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTczNDg3Nw==", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451734877", "bodyText": "There are no unit tests to update for this \ud83d\ude15", "author": "SmithJosh", "createdAt": "2020-07-08T18:10:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5ODUzOA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "050f5a74c6ca207c5701d6e5ffd4618da7b6b25d", "url": "https://github.com/codice/ddf/commit/050f5a74c6ca207c5701d6e5ffd4618da7b6b25d", "message": "Add CatalogMetrics unit test to verify null source id handling", "committedDate": "2020-07-08T18:07:26Z", "type": "commit"}, {"oid": "130690e48d8ddec81ebf2752cd3a663c87784a55", "url": "https://github.com/codice/ddf/commit/130690e48d8ddec81ebf2752cd3a663c87784a55", "message": "Add unit tests for qualifier handling logic", "committedDate": "2020-07-09T19:05:14Z", "type": "commit"}]}