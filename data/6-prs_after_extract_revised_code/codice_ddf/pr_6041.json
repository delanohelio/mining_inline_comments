{"pr_number": 6041, "pr_title": "Support per collection properties with Solr", "pr_createdAt": "2020-05-04T21:56:03Z", "pr_url": "https://github.com/codice/ddf/pull/6041", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2NTAyMg==", "url": "https://github.com/codice/ddf/pull/6041#discussion_r419765022", "bodyText": "\u2753 Should we be creating this FileInputStream with a try-with-resources? Properties::load states\n\nThe specified stream remains open after this method returns.", "author": "rzwiefel", "createdAt": "2020-05-04T22:25:01Z", "path": "platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/CollectionConfig.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.solr.factory.impl;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+import org.apache.commons.lang.math.NumberUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class CollectionConfig {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(CollectionConfig.class);\n+\n+  private final int shardCount;\n+\n+  private final int replicationFactor;\n+\n+  private final int maximumShardsPerNode;\n+\n+  public CollectionConfig(String collection) {\n+    this(collection, Paths.get(System.getProperty(\"ddf.home\", \"\"), \"etc/solr/configsets\"));\n+  }\n+\n+  public CollectionConfig(String collection, Path collectionConfigs) {\n+    File matchingConfig =\n+        collectionConfigs.resolve(Paths.get(collection, \"collection.properties\")).toFile();\n+    Properties collectionProps = new Properties();\n+    if (matchingConfig.exists()) {\n+      try {\n+        collectionProps.load(new FileInputStream(matchingConfig));", "originalCommit": "e8c876ca28b5dc5487890f9614a1c925f151c31c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NzU3OA==", "url": "https://github.com/codice/ddf/pull/6041#discussion_r419777578", "bodyText": "Oops. Yes, I forgot to clean this up. Fixed.", "author": "pklinef", "createdAt": "2020-05-04T22:59:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2NTAyMg=="}], "type": "inlineReview", "revised_code": {"commit": "97ceee64518eafdffa12f9cc9c600e42475478ee", "chunk": "diff --git a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/CollectionConfig.java b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/CollectionConfig.java\nindex 060839b9ca..f5c3012ad7 100644\n--- a/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/CollectionConfig.java\n+++ b/platform/solr/solr-factory-impl/src/main/java/org/codice/solr/factory/impl/CollectionConfig.java\n\n@@ -16,6 +16,7 @@\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.Properties;\n"}}, {"oid": "97ceee64518eafdffa12f9cc9c600e42475478ee", "url": "https://github.com/codice/ddf/commit/97ceee64518eafdffa12f9cc9c600e42475478ee", "message": "Configure collection options by property file", "committedDate": "2020-05-04T22:57:38Z", "type": "forcePushed"}, {"oid": "c3d7514efbe50b4ac2dfdf092e9ea362981719a9", "url": "https://github.com/codice/ddf/commit/c3d7514efbe50b4ac2dfdf092e9ea362981719a9", "message": "Fix ConfigsetsTest to be cross platform", "committedDate": "2020-05-12T20:05:37Z", "type": "commit"}, {"oid": "18e8bcfaf06e547974a70cca3a3325cbd0d96b0c", "url": "https://github.com/codice/ddf/commit/18e8bcfaf06e547974a70cca3a3325cbd0d96b0c", "message": "Configure collection options by property file", "committedDate": "2020-05-12T23:34:09Z", "type": "commit"}, {"oid": "18e8bcfaf06e547974a70cca3a3325cbd0d96b0c", "url": "https://github.com/codice/ddf/commit/18e8bcfaf06e547974a70cca3a3325cbd0d96b0c", "message": "Configure collection options by property file", "committedDate": "2020-05-12T23:34:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU2NjU1NQ==", "url": "https://github.com/codice/ddf/pull/6041#discussion_r424566555", "bodyText": "do the coverage numbers change with this addition?", "author": "bdeining", "createdAt": "2020-05-13T16:20:17Z", "path": "platform/solr/solr-factory-impl/src/test/java/org/codice/solr/factory/impl/CollectionConfigTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.solr.factory.impl;\n+\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.Assert.assertThat;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+public class CollectionConfigTest {", "originalCommit": "18e8bcfaf06e547974a70cca3a3325cbd0d96b0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwMTc0Ng==", "url": "https://github.com/codice/ddf/pull/6041#discussion_r424701746", "bodyText": "Maybe but I suspect it is probably much smaller than lenient variance.", "author": "pklinef", "createdAt": "2020-05-13T20:09:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU2NjU1NQ=="}], "type": "inlineReview", "revised_code": null}]}