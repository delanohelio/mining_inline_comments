{"pr_number": 5975, "pr_title": "DDF-5974 Simplifies logout such that we attempt to log out from a single url", "pr_createdAt": "2020-04-09T22:21:24Z", "pr_url": "https://github.com/codice/ddf/pull/5975", "timeline": [{"oid": "01dbf63e15489d855bbe40747078735ef262bb9f", "url": "https://github.com/codice/ddf/commit/01dbf63e15489d855bbe40747078735ef262bb9f", "message": "DDF-5974 Simplifies logout such that we attempt to log out from a single url", "committedDate": "2020-04-09T22:20:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU3NjAwNw==", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407576007", "bodyText": "Avoid using Log4j directly. Apache StringUtils would be better", "author": "SmithJosh", "createdAt": "2020-04-13T16:37:36Z", "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "diffHunk": "@@ -17,17 +17,20 @@\n import ddf.security.common.SecurityTokenHolder;\n import ddf.security.common.audit.SecurityLogger;\n import java.io.IOException;\n-import java.security.cert.X509Certificate;\n+import java.net.URISyntaxException;\n import java.util.Arrays;\n-import java.util.Enumeration;\n import javax.servlet.ServletException;\n import javax.servlet.http.Cookie;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.logging.log4j.util.Strings;", "originalCommit": "01dbf63e15489d855bbe40747078735ef262bb9f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ff5762adae580eb271ce57fbc235c8840cb6f88f", "chunk": "diff --git a/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java b/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java\nindex bb04c6fc0c..63c98693ce 100644\n--- a/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java\n+++ b/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java\n\n@@ -27,7 +27,6 @@\n import javax.servlet.http.HttpSession;\n import org.apache.http.HttpStatus;\n import org.apache.http.client.utils.URIBuilder;\n-import org.apache.logging.log4j.util.Strings;\n import org.apache.shiro.subject.Subject;\n import org.apache.shiro.util.ThreadContext;\n import org.codice.ddf.configuration.SystemBaseUrl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjIxMw==", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407582213", "bodyText": "\u270f\ufe0f I think you can redirect to the complete SystemBaseUrl.EXTERNAL.construct(redirectUri) url and avoid this conditional", "author": "SmithJosh", "createdAt": "2020-04-13T16:48:56Z", "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "diffHunk": "@@ -46,32 +50,24 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n \n     invalidateSession(request, response);\n \n-    boolean mustCloseBrowser = (checkForBasic(request) || checkForPki(request));\n-    String message = String.format(\"{ \\\"mustCloseBrowser\\\": %b }\", mustCloseBrowser);\n-\n     try {\n-      response.setStatus(HttpServletResponse.SC_OK);\n-      response.setContentType(\"application/json\");\n-      response.getWriter().write(message);\n-      response.flushBuffer();\n-    } catch (IOException e) {\n-      LOGGER.warn(\"Unable to write response body\", e);\n-    }\n-  }\n+      URIBuilder redirectUrlBuilder;\n \n-  private boolean checkForBasic(HttpServletRequest request) {\n-    Enumeration authHeaders = request.getHeaders(javax.ws.rs.core.HttpHeaders.AUTHORIZATION);\n-    while (authHeaders.hasMoreElements()) {\n-      if (((String) authHeaders.nextElement()).contains(\"Basic\")) {\n-        return true;\n+      if (Strings.isNotBlank(SystemBaseUrl.EXTERNAL.getRootContext())) {", "originalCommit": "01dbf63e15489d855bbe40747078735ef262bb9f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ff5762adae580eb271ce57fbc235c8840cb6f88f", "chunk": "diff --git a/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java b/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java\nindex bb04c6fc0c..63c98693ce 100644\n--- a/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java\n+++ b/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java\n\n@@ -51,13 +50,8 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n     invalidateSession(request, response);\n \n     try {\n-      URIBuilder redirectUrlBuilder;\n-\n-      if (Strings.isNotBlank(SystemBaseUrl.EXTERNAL.getRootContext())) {\n-        redirectUrlBuilder = new URIBuilder(SystemBaseUrl.EXTERNAL.getRootContext() + redirectUri);\n-      } else {\n-        redirectUrlBuilder = new URIBuilder(redirectUri);\n-      }\n+      URIBuilder redirectUrlBuilder =\n+          new URIBuilder(SystemBaseUrl.EXTERNAL.constructUrl(redirectUri));\n       redirectUrlBuilder.addParameter(\"mustCloseBrowser\", \"true\");\n \n       response.sendRedirect(redirectUrlBuilder.build().toString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODA3MA==", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407598070", "bodyText": "\u2753 What about the service query parameter? The Admin UI and Intrigue use it instead of prevurl", "author": "SmithJosh", "createdAt": "2020-04-13T17:18:14Z", "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LogoutServiceImpl.java", "diffHunk": "@@ -65,23 +65,32 @@ public String getActionProviders(HttpServletRequest request, HttpServletResponse\n     subjectMap.put(\"http_response\", response);\n     subjectMap.put(SecurityConstants.SECURITY_SUBJECT, subject);\n \n-    List<Map<String, String>> actionPropertiesList = new ArrayList<>();\n+    Map<String, String> actionProperties = new HashMap<>();\n \n     for (ActionProvider actionProvider : logoutActionProviders) {\n-      Map<String, String> actionProperties = new HashMap<>();\n       Action action = actionProvider.getAction(subjectMap);\n \n       if (action != null) {\n         String displayName = SubjectUtils.getName(subject, \"\", true);\n         actionProperties.put(\"title\", action.getTitle());\n         actionProperties.put(\"auth\", displayName);\n         actionProperties.put(\"description\", action.getDescription());\n-        actionProperties.put(\"url\", action.getUrl().toString());\n-        actionPropertiesList.add(actionProperties);\n+\n+        StringBuilder urlBuilder = new StringBuilder(action.getUrl().toString());\n+        String referer = request.getHeader(\"Referer\");\n+        if (!StringUtils.isEmpty(referer)) {\n+          String[] parts = referer.split(\"\\\\?prevurl=\");\n+          if (parts.length > 1) {\n+            String previousUrl = parts[1];\n+            urlBuilder.append(\"?prevurl=\");", "originalCommit": "01dbf63e15489d855bbe40747078735ef262bb9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyNTAzMg==", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407625032", "bodyText": "It's all switched to prevurl in the js code.", "author": "blen-desta", "createdAt": "2020-04-13T18:06:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODA3MA=="}], "type": "inlineReview", "revised_code": {"commit": "ff5762adae580eb271ce57fbc235c8840cb6f88f", "chunk": "diff --git a/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LogoutServiceImpl.java b/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LogoutServiceImpl.java\nindex 34ce5e28c1..748ab22ce0 100644\n--- a/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LogoutServiceImpl.java\n+++ b/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LogoutServiceImpl.java\n\n@@ -76,17 +83,30 @@ public String getActionProviders(HttpServletRequest request, HttpServletResponse\n         actionProperties.put(\"auth\", displayName);\n         actionProperties.put(\"description\", action.getDescription());\n \n-        StringBuilder urlBuilder = new StringBuilder(action.getUrl().toString());\n-        String referer = request.getHeader(\"Referer\");\n-        if (!StringUtils.isEmpty(referer)) {\n-          String[] parts = referer.split(\"\\\\?prevurl=\");\n-          if (parts.length > 1) {\n-            String previousUrl = parts[1];\n-            urlBuilder.append(\"?prevurl=\");\n-            urlBuilder.append(previousUrl);\n+        String url = action.getUrl().toString();\n+\n+        try {\n+          URIBuilder urlBuilder = new URIBuilder(url);\n+          String referer = request.getHeader(\"Referer\");\n+          if (!StringUtils.isEmpty(referer)) {\n+            String[] parts = referer.split(\"\\\\?prevurl=\");\n+            if (parts.length > 1) {\n+              String previousUrl = parts[1];\n+\n+              if (previousUrl.startsWith(\"/\")) {\n+                previousUrl = SystemBaseUrl.EXTERNAL.constructUrl(previousUrl, false);\n+              }\n+              urlBuilder.addParameter(\"prevurl\", previousUrl);\n+            }\n           }\n+\n+          url = urlBuilder.build().toString();\n+\n+        } catch (URISyntaxException e) {\n+          LOGGER.debug(\"Error creating URL\");\n         }\n-        actionProperties.put(\"url\", urlBuilder.toString());\n+\n+        actionProperties.put(\"url\", url);\n       }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYwNzQ5Mg==", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407607492", "bodyText": "\u2753 Why exclude the root context?", "author": "SmithJosh", "createdAt": "2020-04-13T17:35:20Z", "path": "platform/security/handler/security-handler-oidc/src/main/java/org/codice/ddf/security/handler/oidc/OidcCallbackEndpoint.java", "diffHunk": "@@ -54,12 +58,36 @@ public Response logout(\n \n     sessionStore.destroySession(j2EContext);\n \n+    String localLogout = SystemBaseUrl.EXTERNAL.constructUrl(\"/logout/local\");\n+    WebClient webClient = getWebClient(localLogout);\n+    Response logoutResponse = webClient.get();\n+    if (logoutResponse.getStatus() == HttpStatus.SC_INTERNAL_SERVER_ERROR) {\n+      return logoutResponse;\n+    }\n+\n     try {\n-      return Response.temporaryRedirect(new URI(SystemBaseUrl.EXTERNAL.constructUrl(\"/logout\")))\n-          .build();\n+      String redirectUrl = SystemBaseUrl.EXTERNAL.constructUrl(redirectUri, false);", "originalCommit": "01dbf63e15489d855bbe40747078735ef262bb9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyNTM1Mg==", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407625352", "bodyText": "The url is /logout/logout-response it doesn't have /services", "author": "blen-desta", "createdAt": "2020-04-13T18:06:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYwNzQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyODI3MQ==", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407628271", "bodyText": "Got it. Was confusing root/external context", "author": "SmithJosh", "createdAt": "2020-04-13T18:12:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYwNzQ5Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "ff5762adae580eb271ce57fbc235c8840cb6f88f", "url": "https://github.com/codice/ddf/commit/ff5762adae580eb271ce57fbc235c8840cb6f88f", "message": "Addressed PR comments", "committedDate": "2020-04-14T16:29:17Z", "type": "forcePushed"}, {"oid": "72bc44770a8a174e8a82f3381514760726c58a38", "url": "https://github.com/codice/ddf/commit/72bc44770a8a174e8a82f3381514760726c58a38", "message": "Addressed PR comments", "committedDate": "2020-04-21T06:14:02Z", "type": "forcePushed"}, {"oid": "73f24580de6560f20907df1f30f47ff9f0b4e5dc", "url": "https://github.com/codice/ddf/commit/73f24580de6560f20907df1f30f47ff9f0b4e5dc", "message": "Addressed PR comments", "committedDate": "2020-04-21T07:04:49Z", "type": "commit"}, {"oid": "73f24580de6560f20907df1f30f47ff9f0b4e5dc", "url": "https://github.com/codice/ddf/commit/73f24580de6560f20907df1f30f47ff9f0b4e5dc", "message": "Addressed PR comments", "committedDate": "2020-04-21T07:04:49Z", "type": "forcePushed"}, {"oid": "449e453642ffcab356bda5bbd110f3917bd7cfab", "url": "https://github.com/codice/ddf/commit/449e453642ffcab356bda5bbd110f3917bd7cfab", "message": "Added to security policy", "committedDate": "2020-04-22T20:39:08Z", "type": "commit"}]}