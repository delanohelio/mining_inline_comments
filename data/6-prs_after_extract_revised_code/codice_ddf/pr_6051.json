{"pr_number": 6051, "pr_title": "DDF-5900 added security logger service and permissions service", "pr_createdAt": "2020-05-11T20:18:35Z", "pr_url": "https://github.com/codice/ddf/pull/6051", "timeline": [{"oid": "8019a0dabbd636ac50f0e502a7c2920bd6f4e922", "url": "https://github.com/codice/ddf/commit/8019a0dabbd636ac50f0e502a7c2920bd6f4e922", "message": "DDF-5900 added security logger service and permissions service", "committedDate": "2020-05-12T17:19:00Z", "type": "forcePushed"}, {"oid": "25e5deaf25d8785a447d65a74f788e2ab7a8eaad", "url": "https://github.com/codice/ddf/commit/25e5deaf25d8785a447d65a74f788e2ab7a8eaad", "message": "DDF-5900 added security logger service and permissions service", "committedDate": "2020-05-13T17:51:04Z", "type": "forcePushed"}, {"oid": "f630cf922136c591226ecf10b9bfc274030bde78", "url": "https://github.com/codice/ddf/commit/f630cf922136c591226ecf10b9bfc274030bde78", "message": "DDF-5900 added security logger service, permissions service, and subject utils service", "committedDate": "2020-05-13T18:21:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2MzA0OQ==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r424663049", "bodyText": "\u2753 Did you mean to leave these comments in?", "author": "bakejeyner", "createdAt": "2020-05-13T18:57:58Z", "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/security/session/AttributeSharingHashSessionIdManager.java", "diffHunk": "@@ -150,7 +149,7 @@ private void deleteId(String id) {\n   /** @see org.eclipse.jetty.server.SessionIdManager#expireAll(String) */\n   @Override\n   public void expireAll(String id) {\n-    SecurityLogger.audit(\"Expiring session ID {}\", id);\n+    //    SecurityLogger.audit(\"Expiring session ID {}\", id);", "originalCommit": "f630cf922136c591226ecf10b9bfc274030bde78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNTU4Nw==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r424705587", "bodyText": "I did not mean to leave the comments in, no. Unfortunately, there seems to be no way to audit in these components anymore as they are wired up via jetty.xml not anything in osgi", "author": "stustison", "createdAt": "2020-05-13T20:16:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2MzA0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "d4c9609a6c048753049fb18400f49410acb969cd", "chunk": "diff --git a/platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/security/session/AttributeSharingHashSessionIdManager.java b/platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/security/session/AttributeSharingHashSessionIdManager.java\nindex 509f211042..a38964da47 100644\n--- a/platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/security/session/AttributeSharingHashSessionIdManager.java\n+++ b/platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/security/session/AttributeSharingHashSessionIdManager.java\n\n@@ -149,7 +148,6 @@ private void deleteId(String id) {\n   /** @see org.eclipse.jetty.server.SessionIdManager#expireAll(String) */\n   @Override\n   public void expireAll(String id) {\n-    //    SecurityLogger.audit(\"Expiring session ID {}\", id);\n     deleteId(id);\n     super.expireAll(id);\n   }\n"}}, {"oid": "d4c9609a6c048753049fb18400f49410acb969cd", "url": "https://github.com/codice/ddf/commit/d4c9609a6c048753049fb18400f49410acb969cd", "message": "DDF-5900 added security logger service, permissions service, and subject utils service", "committedDate": "2020-05-13T21:19:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzM3NA==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425323374", "bodyText": "I wonder if we could do something like this in the API, and have a SecurityLogger::getInstance() method or something. Then the audit logging would be similar to normal logging and we could avoid having to pass it around everywhere.", "author": "SmithJosh", "createdAt": "2020-05-14T17:48:28Z", "path": "platform/security/security-jaas-ldap/src/main/java/ddf/ldap/ldaplogin/SslLdapLoginModule.java", "diffHunk": "@@ -457,6 +460,17 @@ private void installEncryptionService() {\n     }\n   }\n \n+  private void installSecurityLogger() {\n+\n+    BundleContext bundleContext = getContext();\n+    if (bundleContext != null) {\n+      ServiceReference serviceReference =\n+          bundleContext.getServiceReference(SecurityLogger.class.getName());\n+      securityLogger = (SecurityLogger) bundleContext.getService(serviceReference);", "originalCommit": "d4c9609a6c048753049fb18400f49410acb969cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4NTUxNg==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425385516", "bodyText": "Then we're still passing an implementation in the api, which is what I was trying to avoid.", "author": "stustison", "createdAt": "2020-05-14T19:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzM3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5NDk4OQ==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425394989", "bodyText": "You'd still have the api/impl split though so you can hide the implementation dependencies from clients. As described it would make the API OSGI-specific, but you could probably make that pluggable too.\nJust a thought, not a suggestion for this PR.", "author": "SmithJosh", "createdAt": "2020-05-14T19:57:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzM3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc3NjY3OQ==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r426776679", "bodyText": "I'm going to leave it as is for now.", "author": "stustison", "createdAt": "2020-05-18T17:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzM3NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyNjg0MQ==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425326841", "bodyText": "\u2753 Why are these ignored?", "author": "SmithJosh", "createdAt": "2020-05-14T17:54:28Z", "path": "platform/solr/solr-factory-impl/src/test/java/org/codice/solr/factory/impl/ConfigsetsTest.java", "diffHunk": "@@ -47,12 +48,14 @@ public void writingDefaultToDisk() {\n     assertThat(defaultConf.listFiles().length, is(8));\n   }\n \n+  @Ignore", "originalCommit": "d4c9609a6c048753049fb18400f49410acb969cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4Mzk1Mg==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425383952", "bodyText": "They don't work on windows.", "author": "stustison", "createdAt": "2020-05-14T19:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyNjg0MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTMzMw==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425331333", "bodyText": "\u2753 Why not use the *Impl naming convention like the others?", "author": "SmithJosh", "createdAt": "2020-05-14T18:01:43Z", "path": "platform/security/core/security-core-services/src/main/java/ddf/security/service/impl/SubjectUtils.java", "diffHunk": "@@ -47,69 +48,18 @@\n import org.slf4j.LoggerFactory;\n \n /** Utility class used to perform operations on Subjects. */\n-public final class SubjectUtils {\n-\n-  public static final String GUEST_DISPLAY_NAME = \"Guest\";\n+public final class SubjectUtils implements SubjectOperations {", "originalCommit": "d4c9609a6c048753049fb18400f49410acb969cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4NDQ2MQ==", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425384461", "bodyText": "I was torn between making it an impl or leaving it with the name everyone is used to. I didn't want to make SubjectUtils and SubjectUtilsImpl like I did with the others, because I hate \"utils\"", "author": "stustison", "createdAt": "2020-05-14T19:38:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTMzMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "467c19bb548925dc5ef7ec92113f7cf1f51756c1", "url": "https://github.com/codice/ddf/commit/467c19bb548925dc5ef7ec92113f7cf1f51756c1", "message": "DDF-5900 added security logger service, permissions service, and subject utils service", "committedDate": "2020-05-14T19:33:52Z", "type": "commit"}, {"oid": "467c19bb548925dc5ef7ec92113f7cf1f51756c1", "url": "https://github.com/codice/ddf/commit/467c19bb548925dc5ef7ec92113f7cf1f51756c1", "message": "DDF-5900 added security logger service, permissions service, and subject utils service", "committedDate": "2020-05-14T19:33:52Z", "type": "forcePushed"}]}