{"pr_number": 6271, "pr_title": "DDF-6269 fixed branding registry by removing SortedServiceList usage and doing direct OSGi calls", "pr_createdAt": "2020-08-27T16:35:06Z", "pr_url": "https://github.com/codice/ddf/pull/6271", "timeline": [{"oid": "e84b8d407b041872b2832ceec1f118863ca2f348", "url": "https://github.com/codice/ddf/commit/e84b8d407b041872b2832ceec1f118863ca2f348", "message": "DDF-6269 fixed branding registry by removing SortedServiceList usage and doing direct OSGi calls (#6270)", "committedDate": "2020-08-27T16:32:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2NDM4OQ==", "url": "https://github.com/codice/ddf/pull/6271#discussion_r478564389", "bodyText": "If you provide a filter here, i.e.\ncontext.addServiceListener(brandingListener, \"(objectclass=\" + BrandingPlugin.class.getName() + \")\");\n\nYou'll only be notified when a BrandingPlugin service changes", "author": "SmithJosh", "createdAt": "2020-08-27T16:59:09Z", "path": "platform/branding-registry-impl/src/main/java/org/codice/ddf/branding/impl/BrandingRegistryImpl.java", "diffHunk": "@@ -14,19 +14,58 @@\n package org.codice.ddf.branding.impl;\n \n import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n import java.util.Objects;\n+import java.util.TreeMap;\n import org.apache.commons.lang3.StringUtils;\n import org.codice.ddf.branding.BrandingPlugin;\n import org.codice.ddf.branding.BrandingRegistry;\n+import org.codice.ddf.platform.util.ServiceComparator;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.InvalidSyntaxException;\n+import org.osgi.framework.ServiceEvent;\n+import org.osgi.framework.ServiceListener;\n+import org.osgi.framework.ServiceReference;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n public class BrandingRegistryImpl implements BrandingRegistry {\n   private static final Logger LOGGER = LoggerFactory.getLogger(BrandingRegistryImpl.class);\n \n-  private List<BrandingPlugin> brandingPlugins = Collections.emptyList();\n+  private Map<ServiceReference, BrandingPlugin> brandingPlugins =\n+      Collections.synchronizedMap(\n+          new TreeMap<>(\n+              new ServiceComparator() {\n+                public int compare(ServiceReference ref1, ServiceReference ref2) {\n+                  return ref2.compareTo(ref1);\n+                }\n+              }));\n+\n+  private BrandingListener brandingListener = new BrandingListener();\n+\n+  public void init() {\n+    BundleContext context = getContext();\n+    context.addServiceListener(brandingListener);", "originalCommit": "e84b8d407b041872b2832ceec1f118863ca2f348", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3OTQxMA==", "url": "https://github.com/codice/ddf/pull/6271#discussion_r478579410", "bodyText": "I think there's an issue with this implementation. Say\n\nBrandingPlugin1 starts\nBrandingRegistryImpl starts\nBrandingPlugin2 starts\n\nBrandingRegistryImpl will be notified when BrandingPlugin2 is registered, but not BrandingPlugin1. When getBrandingPlugins() is called, it will return a list with only BrandingPlugin2.\nYou should be able to fix this by always performing this logic when you're adding the service listener. Then the brandingPlugin list will reflect any services that were started before the registry and the service listener will take care of adding any that are registered after", "author": "SmithJosh", "createdAt": "2020-08-27T17:25:37Z", "path": "platform/branding-registry-impl/src/main/java/org/codice/ddf/branding/impl/BrandingRegistryImpl.java", "diffHunk": "@@ -65,11 +104,42 @@ public String getProductVersion() {\n \n   @Override\n   public List<BrandingPlugin> getBrandingPlugins() {\n-    return brandingPlugins;\n+    if (brandingPlugins.isEmpty()) {", "originalCommit": "e84b8d407b041872b2832ceec1f118863ca2f348", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4MDQ4MA==", "url": "https://github.com/codice/ddf/pull/6271#discussion_r478580480", "bodyText": "It wouldn't be notified, which is why I lazy initialize the list if its empty. This does work, by the way, with the scenario that you mentioned, it is exactly what happens for a downstream.", "author": "stustison", "createdAt": "2020-08-27T17:27:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3OTQxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4MTk5Ng==", "url": "https://github.com/codice/ddf/pull/6271#discussion_r478581996", "bodyText": "It works because this is only an issue when going through the installer, which immediately calls this method.", "author": "stustison", "createdAt": "2020-08-27T17:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3OTQxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4MjE2Mg==", "url": "https://github.com/codice/ddf/pull/6271#discussion_r478582162", "bodyText": "What I'm suggesting is that the list wouldn't be empty if BrandingPlugin2 is registered after, and so BrandingPlugin1 would never be added.\nIf it works, I'm curious how", "author": "SmithJosh", "createdAt": "2020-08-27T17:30:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3OTQxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4NDY4Mw==", "url": "https://github.com/codice/ddf/pull/6271#discussion_r478584683", "bodyText": "Ah, ok. That makes sense. But we're making assumptions then about how this class will be used. Imo it would be better if it worked in the general case", "author": "SmithJosh", "createdAt": "2020-08-27T17:34:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3OTQxMA=="}], "type": "inlineReview", "revised_code": null}]}