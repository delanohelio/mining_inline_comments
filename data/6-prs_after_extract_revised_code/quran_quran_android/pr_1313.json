{"pr_number": 1313, "pr_title": "Floating highlights", "pr_createdAt": "2020-04-10T18:59:23Z", "pr_url": "https://github.com/quran/quran_android/pull/1313", "timeline": [{"oid": "4043eef7c94e656baeab768b47924c4b391aa02c", "url": "https://github.com/quran/quran_android/commit/4043eef7c94e656baeab768b47924c4b391aa02c", "message": "overlapping highlights - plan B", "committedDate": "2020-04-09T12:12:57Z", "type": "commit"}, {"oid": "e8b936842e838035b071d527a09c3a008e597642", "url": "https://github.com/quran/quran_android/commit/e8b936842e838035b071d527a09c3a008e597642", "message": "demonstrating all ways to animate", "committedDate": "2020-04-09T19:17:49Z", "type": "commit"}, {"oid": "6e48647900f4bef31dc72f98b9867545b1023ffd", "url": "https://github.com/quran/quran_android/commit/6e48647900f4bef31dc72f98b9867545b1023ffd", "message": "animating using the division algorithm", "committedDate": "2020-04-09T19:44:24Z", "type": "commit"}, {"oid": "c1a1cea64fea7024f1b4c0ac72e47824c01ab929", "url": "https://github.com/quran/quran_android/commit/c1a1cea64fea7024f1b4c0ac72e47824c01ab929", "message": "checking for coordinate data before making a copy", "committedDate": "2020-04-10T07:21:41Z", "type": "commit"}, {"oid": "a57e1d82ce5005f7a906e37a2bd9a5117a61af8e", "url": "https://github.com/quran/quran_android/commit/a57e1d82ce5005f7a906e37a2bd9a5117a61af8e", "message": "overlapping animations in ayahMode + animator null crash fix", "committedDate": "2020-04-10T18:34:48Z", "type": "commit"}, {"oid": "63dcff2de261ab1097c6a06437483cb819fd61f5", "url": "https://github.com/quran/quran_android/commit/63dcff2de261ab1097c6a06437483cb819fd61f5", "message": "removing debugging changes, cleanup, sura -> surah, adding comments + TODOs", "committedDate": "2020-04-10T18:53:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzOTc2NA==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r458439764", "bodyText": "this loop will basically just get the \"last\" one, and that perhaps can change - what are you actually trying to get here then?", "author": "ahmedre", "createdAt": "2020-07-21T23:07:50Z", "path": "app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java", "diffHunk": "@@ -130,17 +152,178 @@ public void setNightMode(boolean isNightMode, int textBrightness) {\n     adjustNightMode();\n   }\n \n-  public void highlightAyah(int sura, int ayah, HighlightType type) {\n+  private void highlightFloatableAyah(Set<String> highlights, String currentSurahAyah) {\n+    final Map<String, List<AyahBounds>> coordinatesData = ayahCoordinates.getAyahCoordinates();\n+\n+    String previousSurahAyah = currentSurahAyah;\n+    for(String surahAyahs: highlights) {\n+      previousSurahAyah = surahAyahs;\n+    }", "originalCommit": "63dcff2de261ab1097c6a06437483cb819fd61f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0MzYzMQ==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r463043631", "bodyText": "Right. So this is me being lazy. All I want to do here is simply get the only element from the Set (I know this because, I have checked the size previously). So instead of doing it the obvious iterator way, I followed this approach.\nI have fixed this.", "author": "murtraja", "createdAt": "2020-07-30T14:36:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzOTc2NA=="}], "type": "inlineReview", "revised_code": {"commit": "5588b8441ea3dcb7efc9d04a3617b71642ae8dd1", "chunk": "diff --git a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\nindex ee1f6b21..10eb48cf 100644\n--- a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n+++ b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n\n@@ -193,16 +193,16 @@ public class HighlightingImageView extends AppCompatImageView {\n         int diff = maxSize - minSize;\n \n         RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n-        float oLeft = rectToBeDivided.left;\n-        float oRight = rectToBeDivided.right;\n-        float oTop = rectToBeDivided.top;\n-        float oBottom = rectToBeDivided.bottom;\n+        float originalLeft = rectToBeDivided.left;\n+        float originalRight = rectToBeDivided.right;\n+        float originalTop = rectToBeDivided.top;\n+        float originalBottom = rectToBeDivided.bottom;\n         minList.remove(minSize-1);\n-        float part = (oRight-oLeft) /(diff+1);\n+        float part = (originalRight-originalLeft) /(diff+1);\n         for(int i=0; i<(diff+1); ++i) {\n-          float left = oLeft + part*i;\n+          float left = originalLeft + part*i;\n           float right = left + part;\n-          RectF rect = new RectF(left, oTop, right, oBottom);\n+          RectF rect = new RectF(left, originalTop, right, originalBottom);\n           AyahBounds ayahBounds = new AyahBounds(0, 0, rect);\n           minList.add(ayahBounds);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDA3Mw==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r458440073", "bodyText": "i'd vote for an object - maybe AyahTransition or something that has a from and to instead of manually having an arrow and parsing it like this, since it's more complicated that way", "author": "ahmedre", "createdAt": "2020-07-21T23:08:56Z", "path": "app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java", "diffHunk": "@@ -130,17 +152,178 @@ public void setNightMode(boolean isNightMode, int textBrightness) {\n     adjustNightMode();\n   }\n \n-  public void highlightAyah(int sura, int ayah, HighlightType type) {\n+  private void highlightFloatableAyah(Set<String> highlights, String currentSurahAyah) {\n+    final Map<String, List<AyahBounds>> coordinatesData = ayahCoordinates.getAyahCoordinates();\n+\n+    String previousSurahAyah = currentSurahAyah;\n+    for(String surahAyahs: highlights) {\n+      previousSurahAyah = surahAyahs;\n+    }\n+    List<AyahBounds> startingBounds;\n+    int arrowIndex = previousSurahAyah.indexOf(\"->\");\n+    if(arrowIndex != -1) {\n+      // The ayah changed during animating\n+      startingBounds = (List<AyahBounds>)animator.getAnimatedValue();\n+      animator.cancel();\n+      previousSurahAyah = previousSurahAyah.substring(arrowIndex + 2);\n+    } else {\n+      startingBounds = coordinatesData.get(previousSurahAyah);\n+    }\n+\n+    final String ayahTransition = previousSurahAyah+\"->\"+currentSurahAyah;", "originalCommit": "63dcff2de261ab1097c6a06437483cb819fd61f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwODUwMQ==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r463008501", "bodyText": "Have created a class AyahTransition that handles this behaviour. Looking at your comment, I am getting an impression that you wanted me to remove the arrow logic altogether, but unfortunately, since we are using HashMap of Strings, I need some key to signify the transition, and the arrow is helpful in that case.", "author": "murtraja", "createdAt": "2020-07-30T13:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDA3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5588b8441ea3dcb7efc9d04a3617b71642ae8dd1", "chunk": "diff --git a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\nindex ee1f6b21..10eb48cf 100644\n--- a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n+++ b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n\n@@ -193,16 +193,16 @@ public class HighlightingImageView extends AppCompatImageView {\n         int diff = maxSize - minSize;\n \n         RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n-        float oLeft = rectToBeDivided.left;\n-        float oRight = rectToBeDivided.right;\n-        float oTop = rectToBeDivided.top;\n-        float oBottom = rectToBeDivided.bottom;\n+        float originalLeft = rectToBeDivided.left;\n+        float originalRight = rectToBeDivided.right;\n+        float originalTop = rectToBeDivided.top;\n+        float originalBottom = rectToBeDivided.bottom;\n         minList.remove(minSize-1);\n-        float part = (oRight-oLeft) /(diff+1);\n+        float part = (originalRight-originalLeft) /(diff+1);\n         for(int i=0; i<(diff+1); ++i) {\n-          float left = oLeft + part*i;\n+          float left = originalLeft + part*i;\n           float right = left + part;\n-          RectF rect = new RectF(left, oTop, right, oBottom);\n+          RectF rect = new RectF(left, originalTop, right, originalBottom);\n           AyahBounds ayahBounds = new AyahBounds(0, 0, rect);\n           minList.add(ayahBounds);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDYyNA==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r458440624", "bodyText": "i'd vote for not because:\n\nthis code doesn't ideally belong in HighlightingImageView\nyou can write a nice unit test for it that way without needing a ui test just to test the behavior (i.e if your standalone class exposes these as functions, and the animation stuff is outside that class)", "author": "ahmedre", "createdAt": "2020-07-21T23:10:28Z", "path": "app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java", "diffHunk": "@@ -130,17 +152,178 @@ public void setNightMode(boolean isNightMode, int textBrightness) {\n     adjustNightMode();\n   }\n \n-  public void highlightAyah(int sura, int ayah, HighlightType type) {\n+  private void highlightFloatableAyah(Set<String> highlights, String currentSurahAyah) {\n+    final Map<String, List<AyahBounds>> coordinatesData = ayahCoordinates.getAyahCoordinates();\n+\n+    String previousSurahAyah = currentSurahAyah;\n+    for(String surahAyahs: highlights) {\n+      previousSurahAyah = surahAyahs;\n+    }\n+    List<AyahBounds> startingBounds;\n+    int arrowIndex = previousSurahAyah.indexOf(\"->\");\n+    if(arrowIndex != -1) {\n+      // The ayah changed during animating\n+      startingBounds = (List<AyahBounds>)animator.getAnimatedValue();\n+      animator.cancel();\n+      previousSurahAyah = previousSurahAyah.substring(arrowIndex + 2);\n+    } else {\n+      startingBounds = coordinatesData.get(previousSurahAyah);\n+    }\n+\n+    final String ayahTransition = previousSurahAyah+\"->\"+currentSurahAyah;\n+\n+    // yes we make copies, because normalizing the bounds will change them\n+    List<AyahBounds> previousAyahBoundsList = new ArrayList<>(startingBounds);\n+    List<AyahBounds> currentAyahBoundsList = new ArrayList<>(coordinatesData.get(currentSurahAyah));\n+\n+    highlights.clear();\n+    highlights.add(ayahTransition);\n+\n+    // TODO: reason whether this TypeEvaluator should be anonymous or not", "originalCommit": "63dcff2de261ab1097c6a06437483cb819fd61f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwOTA4Mw==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r463009083", "bodyText": "Have taken the interpolator out of the HighlightingImageView class", "author": "murtraja", "createdAt": "2020-07-30T13:48:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDYyNA=="}], "type": "inlineReview", "revised_code": {"commit": "5588b8441ea3dcb7efc9d04a3617b71642ae8dd1", "chunk": "diff --git a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\nindex ee1f6b21..10eb48cf 100644\n--- a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n+++ b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n\n@@ -193,16 +193,16 @@ public class HighlightingImageView extends AppCompatImageView {\n         int diff = maxSize - minSize;\n \n         RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n-        float oLeft = rectToBeDivided.left;\n-        float oRight = rectToBeDivided.right;\n-        float oTop = rectToBeDivided.top;\n-        float oBottom = rectToBeDivided.bottom;\n+        float originalLeft = rectToBeDivided.left;\n+        float originalRight = rectToBeDivided.right;\n+        float originalTop = rectToBeDivided.top;\n+        float originalBottom = rectToBeDivided.bottom;\n         minList.remove(minSize-1);\n-        float part = (oRight-oLeft) /(diff+1);\n+        float part = (originalRight-originalLeft) /(diff+1);\n         for(int i=0; i<(diff+1); ++i) {\n-          float left = oLeft + part*i;\n+          float left = originalLeft + part*i;\n           float right = left + part;\n-          RectF rect = new RectF(left, oTop, right, oBottom);\n+          RectF rect = new RectF(left, originalTop, right, originalBottom);\n           AyahBounds ayahBounds = new AyahBounds(0, 0, rect);\n           minList.add(ayahBounds);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDgxNQ==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r458440815", "bodyText": "what's the o here for? can we expand it?", "author": "ahmedre", "createdAt": "2020-07-21T23:11:05Z", "path": "app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java", "diffHunk": "@@ -130,17 +152,178 @@ public void setNightMode(boolean isNightMode, int textBrightness) {\n     adjustNightMode();\n   }\n \n-  public void highlightAyah(int sura, int ayah, HighlightType type) {\n+  private void highlightFloatableAyah(Set<String> highlights, String currentSurahAyah) {\n+    final Map<String, List<AyahBounds>> coordinatesData = ayahCoordinates.getAyahCoordinates();\n+\n+    String previousSurahAyah = currentSurahAyah;\n+    for(String surahAyahs: highlights) {\n+      previousSurahAyah = surahAyahs;\n+    }\n+    List<AyahBounds> startingBounds;\n+    int arrowIndex = previousSurahAyah.indexOf(\"->\");\n+    if(arrowIndex != -1) {\n+      // The ayah changed during animating\n+      startingBounds = (List<AyahBounds>)animator.getAnimatedValue();\n+      animator.cancel();\n+      previousSurahAyah = previousSurahAyah.substring(arrowIndex + 2);\n+    } else {\n+      startingBounds = coordinatesData.get(previousSurahAyah);\n+    }\n+\n+    final String ayahTransition = previousSurahAyah+\"->\"+currentSurahAyah;\n+\n+    // yes we make copies, because normalizing the bounds will change them\n+    List<AyahBounds> previousAyahBoundsList = new ArrayList<>(startingBounds);\n+    List<AyahBounds> currentAyahBoundsList = new ArrayList<>(coordinatesData.get(currentSurahAyah));\n+\n+    highlights.clear();\n+    highlights.add(ayahTransition);\n+\n+    // TODO: reason whether this TypeEvaluator should be anonymous or not\n+    animator = ValueAnimator.ofObject(new TypeEvaluator() {\n+\n+      private void normalizeAyahBoundsList(List<AyahBounds> start, List<AyahBounds> end) {\n+        // this function takes two unequal length lists and normalizes them\n+\n+        int startSize = start.size();\n+        int endSize = end.size();\n+        int minSize = Math.min(startSize, endSize);\n+        int maxSize = Math.max(startSize, endSize);\n+        List<AyahBounds> minList = startSize < endSize? start : end;\n+        int diff = maxSize - minSize;\n+\n+        RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n+        float oLeft = rectToBeDivided.left;\n+        float oRight = rectToBeDivided.right;\n+        float oTop = rectToBeDivided.top;\n+        float oBottom = rectToBeDivided.bottom;", "originalCommit": "63dcff2de261ab1097c6a06437483cb819fd61f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5ODg5Mg==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r461998892", "bodyText": "have expanded it to original. It refers to the original rectangle that has to be divided", "author": "murtraja", "createdAt": "2020-07-29T02:21:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDgxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "5588b8441ea3dcb7efc9d04a3617b71642ae8dd1", "chunk": "diff --git a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\nindex ee1f6b21..10eb48cf 100644\n--- a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n+++ b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n\n@@ -193,16 +193,16 @@ public class HighlightingImageView extends AppCompatImageView {\n         int diff = maxSize - minSize;\n \n         RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n-        float oLeft = rectToBeDivided.left;\n-        float oRight = rectToBeDivided.right;\n-        float oTop = rectToBeDivided.top;\n-        float oBottom = rectToBeDivided.bottom;\n+        float originalLeft = rectToBeDivided.left;\n+        float originalRight = rectToBeDivided.right;\n+        float originalTop = rectToBeDivided.top;\n+        float originalBottom = rectToBeDivided.bottom;\n         minList.remove(minSize-1);\n-        float part = (oRight-oLeft) /(diff+1);\n+        float part = (originalRight-originalLeft) /(diff+1);\n         for(int i=0; i<(diff+1); ++i) {\n-          float left = oLeft + part*i;\n+          float left = originalLeft + part*i;\n           float right = left + part;\n-          RectF rect = new RectF(left, oTop, right, oBottom);\n+          RectF rect = new RectF(left, originalTop, right, originalBottom);\n           AyahBounds ayahBounds = new AyahBounds(0, 0, rect);\n           minList.add(ayahBounds);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDkxOQ==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r458440919", "bodyText": "this function would really benefit from some unit tests", "author": "ahmedre", "createdAt": "2020-07-21T23:11:23Z", "path": "app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java", "diffHunk": "@@ -130,17 +152,178 @@ public void setNightMode(boolean isNightMode, int textBrightness) {\n     adjustNightMode();\n   }\n \n-  public void highlightAyah(int sura, int ayah, HighlightType type) {\n+  private void highlightFloatableAyah(Set<String> highlights, String currentSurahAyah) {\n+    final Map<String, List<AyahBounds>> coordinatesData = ayahCoordinates.getAyahCoordinates();\n+\n+    String previousSurahAyah = currentSurahAyah;\n+    for(String surahAyahs: highlights) {\n+      previousSurahAyah = surahAyahs;\n+    }\n+    List<AyahBounds> startingBounds;\n+    int arrowIndex = previousSurahAyah.indexOf(\"->\");\n+    if(arrowIndex != -1) {\n+      // The ayah changed during animating\n+      startingBounds = (List<AyahBounds>)animator.getAnimatedValue();\n+      animator.cancel();\n+      previousSurahAyah = previousSurahAyah.substring(arrowIndex + 2);\n+    } else {\n+      startingBounds = coordinatesData.get(previousSurahAyah);\n+    }\n+\n+    final String ayahTransition = previousSurahAyah+\"->\"+currentSurahAyah;\n+\n+    // yes we make copies, because normalizing the bounds will change them\n+    List<AyahBounds> previousAyahBoundsList = new ArrayList<>(startingBounds);\n+    List<AyahBounds> currentAyahBoundsList = new ArrayList<>(coordinatesData.get(currentSurahAyah));\n+\n+    highlights.clear();\n+    highlights.add(ayahTransition);\n+\n+    // TODO: reason whether this TypeEvaluator should be anonymous or not\n+    animator = ValueAnimator.ofObject(new TypeEvaluator() {\n+\n+      private void normalizeAyahBoundsList(List<AyahBounds> start, List<AyahBounds> end) {", "originalCommit": "63dcff2de261ab1097c6a06437483cb819fd61f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0Nzc3Mg==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r463047772", "bodyText": "I have abstracted this away in a class HighlightNormalizingStrategy from which all other strategies can be extended. I see that we have already written some tests for data, model, presenter and util. Should I write the test in the util folder or create a new one?", "author": "murtraja", "createdAt": "2020-07-30T14:41:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDkxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "5588b8441ea3dcb7efc9d04a3617b71642ae8dd1", "chunk": "diff --git a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\nindex ee1f6b21..10eb48cf 100644\n--- a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n+++ b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n\n@@ -193,16 +193,16 @@ public class HighlightingImageView extends AppCompatImageView {\n         int diff = maxSize - minSize;\n \n         RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n-        float oLeft = rectToBeDivided.left;\n-        float oRight = rectToBeDivided.right;\n-        float oTop = rectToBeDivided.top;\n-        float oBottom = rectToBeDivided.bottom;\n+        float originalLeft = rectToBeDivided.left;\n+        float originalRight = rectToBeDivided.right;\n+        float originalTop = rectToBeDivided.top;\n+        float originalBottom = rectToBeDivided.bottom;\n         minList.remove(minSize-1);\n-        float part = (oRight-oLeft) /(diff+1);\n+        float part = (originalRight-originalLeft) /(diff+1);\n         for(int i=0; i<(diff+1); ++i) {\n-          float left = oLeft + part*i;\n+          float left = originalLeft + part*i;\n           float right = left + part;\n-          RectF rect = new RectF(left, oTop, right, oBottom);\n+          RectF rect = new RectF(left, originalTop, right, originalBottom);\n           AyahBounds ayahBounds = new AyahBounds(0, 0, rect);\n           minList.add(ayahBounds);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTExMg==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r458441112", "bodyText": "this matters too because we're in onDraw here potentially", "author": "ahmedre", "createdAt": "2020-07-21T23:11:57Z", "path": "app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java", "diffHunk": "@@ -130,17 +152,178 @@ public void setNightMode(boolean isNightMode, int textBrightness) {\n     adjustNightMode();\n   }\n \n-  public void highlightAyah(int sura, int ayah, HighlightType type) {\n+  private void highlightFloatableAyah(Set<String> highlights, String currentSurahAyah) {\n+    final Map<String, List<AyahBounds>> coordinatesData = ayahCoordinates.getAyahCoordinates();\n+\n+    String previousSurahAyah = currentSurahAyah;\n+    for(String surahAyahs: highlights) {\n+      previousSurahAyah = surahAyahs;\n+    }\n+    List<AyahBounds> startingBounds;\n+    int arrowIndex = previousSurahAyah.indexOf(\"->\");\n+    if(arrowIndex != -1) {\n+      // The ayah changed during animating\n+      startingBounds = (List<AyahBounds>)animator.getAnimatedValue();\n+      animator.cancel();\n+      previousSurahAyah = previousSurahAyah.substring(arrowIndex + 2);\n+    } else {\n+      startingBounds = coordinatesData.get(previousSurahAyah);\n+    }\n+\n+    final String ayahTransition = previousSurahAyah+\"->\"+currentSurahAyah;\n+\n+    // yes we make copies, because normalizing the bounds will change them\n+    List<AyahBounds> previousAyahBoundsList = new ArrayList<>(startingBounds);\n+    List<AyahBounds> currentAyahBoundsList = new ArrayList<>(coordinatesData.get(currentSurahAyah));\n+\n+    highlights.clear();\n+    highlights.add(ayahTransition);\n+\n+    // TODO: reason whether this TypeEvaluator should be anonymous or not\n+    animator = ValueAnimator.ofObject(new TypeEvaluator() {\n+\n+      private void normalizeAyahBoundsList(List<AyahBounds> start, List<AyahBounds> end) {\n+        // this function takes two unequal length lists and normalizes them\n+\n+        int startSize = start.size();\n+        int endSize = end.size();\n+        int minSize = Math.min(startSize, endSize);\n+        int maxSize = Math.max(startSize, endSize);\n+        List<AyahBounds> minList = startSize < endSize? start : end;\n+        int diff = maxSize - minSize;\n+\n+        RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n+        float oLeft = rectToBeDivided.left;\n+        float oRight = rectToBeDivided.right;\n+        float oTop = rectToBeDivided.top;\n+        float oBottom = rectToBeDivided.bottom;\n+        minList.remove(minSize-1);\n+        float part = (oRight-oLeft) /(diff+1);\n+        for(int i=0; i<(diff+1); ++i) {\n+          float left = oLeft + part*i;\n+          float right = left + part;\n+          RectF rect = new RectF(left, oTop, right, oBottom);\n+          AyahBounds ayahBounds = new AyahBounds(0, 0, rect);\n+          minList.add(ayahBounds);\n+        }\n+      }\n+\n+      @Override\n+      public Object evaluate(float fraction, Object startObject, Object endObject) {\n+        List<AyahBounds> start = (List<AyahBounds>)startObject;\n+        List<AyahBounds> end = (List<AyahBounds>)endObject;\n+\n+        if(start.size() != end.size()) {\n+          normalizeAyahBoundsList(start, end);\n+        }\n+\n+        int size = start.size();\n+\n+        //TODO: instead of creating result every time, modify in-place", "originalCommit": "63dcff2de261ab1097c6a06437483cb819fd61f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAwMjk5MQ==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r462002991", "bodyText": "Well, the evaluate() function here, provides new values. The onAnimationUpdate() hook lets the user use those values and it runs in the UI thread.\nI have noticed during my debugging sessions that the evaluate() gets called more times than onAnimationUpdate() therefore, they are potentially running independent of each other, which makes sense because onAnimationUpdate() will be called in an optimized way (once per render frame) but evaluate() can be called every update frame. So, we need not worry about our draws getting janked due to evaluate() as they are independent of each other.\nMoreover, even if we ignore the independence, we can't ignore the fact that if we modify the result in place then we will have a data race condition between the writer (evaluate()) and the reader (onAnimationUpdate()). We might have a rare  case in which the result is simultaneously accessed by onAnimationUpdate() and also written by evaluate()\nSo, I have simply removed the TODO and haven't changed the code.", "author": "murtraja", "createdAt": "2020-07-29T02:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTExMg=="}], "type": "inlineReview", "revised_code": {"commit": "5588b8441ea3dcb7efc9d04a3617b71642ae8dd1", "chunk": "diff --git a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\nindex ee1f6b21..10eb48cf 100644\n--- a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n+++ b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n\n@@ -193,16 +193,16 @@ public class HighlightingImageView extends AppCompatImageView {\n         int diff = maxSize - minSize;\n \n         RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n-        float oLeft = rectToBeDivided.left;\n-        float oRight = rectToBeDivided.right;\n-        float oTop = rectToBeDivided.top;\n-        float oBottom = rectToBeDivided.bottom;\n+        float originalLeft = rectToBeDivided.left;\n+        float originalRight = rectToBeDivided.right;\n+        float originalTop = rectToBeDivided.top;\n+        float originalBottom = rectToBeDivided.bottom;\n         minList.remove(minSize-1);\n-        float part = (oRight-oLeft) /(diff+1);\n+        float part = (originalRight-originalLeft) /(diff+1);\n         for(int i=0; i<(diff+1); ++i) {\n-          float left = oLeft + part*i;\n+          float left = originalLeft + part*i;\n           float right = left + part;\n-          RectF rect = new RectF(left, oTop, right, oBottom);\n+          RectF rect = new RectF(left, originalTop, right, originalBottom);\n           AyahBounds ayahBounds = new AyahBounds(0, 0, rect);\n           minList.add(ayahBounds);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTI0Mg==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r458441242", "bodyText": "if you move a lot of this out to new classes, let's move it there", "author": "ahmedre", "createdAt": "2020-07-21T23:12:20Z", "path": "app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java", "diffHunk": "@@ -130,17 +152,178 @@ public void setNightMode(boolean isNightMode, int textBrightness) {\n     adjustNightMode();\n   }\n \n-  public void highlightAyah(int sura, int ayah, HighlightType type) {\n+  private void highlightFloatableAyah(Set<String> highlights, String currentSurahAyah) {\n+    final Map<String, List<AyahBounds>> coordinatesData = ayahCoordinates.getAyahCoordinates();\n+\n+    String previousSurahAyah = currentSurahAyah;\n+    for(String surahAyahs: highlights) {\n+      previousSurahAyah = surahAyahs;\n+    }\n+    List<AyahBounds> startingBounds;\n+    int arrowIndex = previousSurahAyah.indexOf(\"->\");\n+    if(arrowIndex != -1) {\n+      // The ayah changed during animating\n+      startingBounds = (List<AyahBounds>)animator.getAnimatedValue();\n+      animator.cancel();\n+      previousSurahAyah = previousSurahAyah.substring(arrowIndex + 2);\n+    } else {\n+      startingBounds = coordinatesData.get(previousSurahAyah);\n+    }\n+\n+    final String ayahTransition = previousSurahAyah+\"->\"+currentSurahAyah;\n+\n+    // yes we make copies, because normalizing the bounds will change them\n+    List<AyahBounds> previousAyahBoundsList = new ArrayList<>(startingBounds);\n+    List<AyahBounds> currentAyahBoundsList = new ArrayList<>(coordinatesData.get(currentSurahAyah));\n+\n+    highlights.clear();\n+    highlights.add(ayahTransition);\n+\n+    // TODO: reason whether this TypeEvaluator should be anonymous or not\n+    animator = ValueAnimator.ofObject(new TypeEvaluator() {\n+\n+      private void normalizeAyahBoundsList(List<AyahBounds> start, List<AyahBounds> end) {\n+        // this function takes two unequal length lists and normalizes them\n+\n+        int startSize = start.size();\n+        int endSize = end.size();\n+        int minSize = Math.min(startSize, endSize);\n+        int maxSize = Math.max(startSize, endSize);\n+        List<AyahBounds> minList = startSize < endSize? start : end;\n+        int diff = maxSize - minSize;\n+\n+        RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n+        float oLeft = rectToBeDivided.left;\n+        float oRight = rectToBeDivided.right;\n+        float oTop = rectToBeDivided.top;\n+        float oBottom = rectToBeDivided.bottom;\n+        minList.remove(minSize-1);\n+        float part = (oRight-oLeft) /(diff+1);\n+        for(int i=0; i<(diff+1); ++i) {\n+          float left = oLeft + part*i;\n+          float right = left + part;\n+          RectF rect = new RectF(left, oTop, right, oBottom);\n+          AyahBounds ayahBounds = new AyahBounds(0, 0, rect);\n+          minList.add(ayahBounds);\n+        }\n+      }\n+\n+      @Override\n+      public Object evaluate(float fraction, Object startObject, Object endObject) {\n+        List<AyahBounds> start = (List<AyahBounds>)startObject;\n+        List<AyahBounds> end = (List<AyahBounds>)endObject;\n+\n+        if(start.size() != end.size()) {\n+          normalizeAyahBoundsList(start, end);\n+        }\n+\n+        int size = start.size();\n+\n+        //TODO: instead of creating result every time, modify in-place\n+        List<AyahBounds> result = new ArrayList<>(size);\n+\n+        for(int i=0; i<size; ++i) {\n+          RectF startValue = start.get(i).getBounds();\n+          RectF endValue = end.get(i).getBounds();\n+          float left = startValue.left + (endValue.left - startValue.left) * fraction;\n+          float top = startValue.top + (endValue.top - startValue.top) * fraction;\n+          float right = startValue.right + (endValue.right - startValue.right) * fraction;\n+          float bottom = startValue.bottom + (endValue.bottom - startValue.bottom) * fraction;\n+          AyahBounds intermediateBounds = new AyahBounds(0,0, new RectF(left, top, right, bottom));\n+          result.add(intermediateBounds);\n+        }\n+        return result;\n+      }\n+    }, previousAyahBoundsList, currentAyahBoundsList);\n+\n+    // TODO: where should this constant live?", "originalCommit": "63dcff2de261ab1097c6a06437483cb819fd61f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwOTM4NA==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r463009384", "bodyText": "Have moved this to HighlightAnimationConfig", "author": "murtraja", "createdAt": "2020-07-30T13:49:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTI0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5588b8441ea3dcb7efc9d04a3617b71642ae8dd1", "chunk": "diff --git a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\nindex ee1f6b21..10eb48cf 100644\n--- a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n+++ b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n\n@@ -193,16 +193,16 @@ public class HighlightingImageView extends AppCompatImageView {\n         int diff = maxSize - minSize;\n \n         RectF rectToBeDivided = minList.get(minSize-1).getBounds();\n-        float oLeft = rectToBeDivided.left;\n-        float oRight = rectToBeDivided.right;\n-        float oTop = rectToBeDivided.top;\n-        float oBottom = rectToBeDivided.bottom;\n+        float originalLeft = rectToBeDivided.left;\n+        float originalRight = rectToBeDivided.right;\n+        float originalTop = rectToBeDivided.top;\n+        float originalBottom = rectToBeDivided.bottom;\n         minList.remove(minSize-1);\n-        float part = (oRight-oLeft) /(diff+1);\n+        float part = (originalRight-originalLeft) /(diff+1);\n         for(int i=0; i<(diff+1); ++i) {\n-          float left = oLeft + part*i;\n+          float left = originalLeft + part*i;\n           float right = left + part;\n-          RectF rect = new RectF(left, oTop, right, oBottom);\n+          RectF rect = new RectF(left, originalTop, right, originalBottom);\n           AyahBounds ayahBounds = new AyahBounds(0, 0, rect);\n           minList.add(ayahBounds);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTU5NQ==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r458441595", "bodyText": "considering your comment on 279 of HighlightingImageView and your comment 27 here, i'd go for making this class and only adding the things we need now - i.e. not future proofing it for everything, but making it easy to add say the type of interpolator there later if we want to change it, etc.", "author": "ahmedre", "createdAt": "2020-07-21T23:13:35Z", "path": "app/src/main/java/com/quran/labs/androidquran/ui/helpers/HighlightType.java", "diffHunk": "@@ -8,20 +8,30 @@\n \n public class HighlightType implements Comparable<HighlightType> {\n \n-  public static final HighlightType SELECTION = new HighlightType(1, false, R.color.selection_highlight);\n-  public static final HighlightType AUDIO =     new HighlightType(2, false, R.color.audio_highlight);\n-  public static final HighlightType NOTE =      new HighlightType(3, true,  R.color.note_highlight);\n-  public static final HighlightType BOOKMARK =  new HighlightType(4, true,  R.color.bookmark_highlight);\n+  public static final HighlightType SELECTION = new HighlightType(1, false, R.color.selection_highlight, false);\n+  public static final HighlightType AUDIO =     new HighlightType(2, false, R.color.audio_highlight,     true);\n+  public static final HighlightType NOTE =      new HighlightType(3, true,  R.color.note_highlight,      false);\n+  public static final HighlightType BOOKMARK =  new HighlightType(4, true,  R.color.bookmark_highlight,  false);\n \n   private Long id;\n   private boolean multipleHighlightsAllowed;\n   private int colorId;\n   private Integer color = null;\n+  private boolean floatable; \n+  // TODO: replace this with HighlightAnimationConfig", "originalCommit": "63dcff2de261ab1097c6a06437483cb819fd61f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyNTc4NQ==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r463025785", "bodyText": "Have implemented HighlightAnimationConfig which is flexible enough", "author": "murtraja", "createdAt": "2020-07-30T14:12:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTU5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5487df369baa6150efaac58a52f9c09ebd128d11", "chunk": "diff --git a/app/src/main/java/com/quran/labs/androidquran/ui/helpers/HighlightType.java b/app/src/main/java/com/quran/labs/androidquran/ui/helpers/HighlightType.java\nindex 190e9763..a4dad5d5 100644\n--- a/app/src/main/java/com/quran/labs/androidquran/ui/helpers/HighlightType.java\n+++ b/app/src/main/java/com/quran/labs/androidquran/ui/helpers/HighlightType.java\n\n@@ -8,30 +8,22 @@ import com.quran.labs.androidquran.R;\n \n public class HighlightType implements Comparable<HighlightType> {\n \n-  public static final HighlightType SELECTION = new HighlightType(1, false, R.color.selection_highlight, false);\n-  public static final HighlightType AUDIO =     new HighlightType(2, false, R.color.audio_highlight,     true);\n-  public static final HighlightType NOTE =      new HighlightType(3, true,  R.color.note_highlight,      false);\n-  public static final HighlightType BOOKMARK =  new HighlightType(4, true,  R.color.bookmark_highlight,  false);\n+  public static final HighlightType SELECTION = new HighlightType(1, false, R.color.selection_highlight, HighlightAnimationConfig.NONE);\n+  public static final HighlightType AUDIO =     new HighlightType(2, false, R.color.audio_highlight,     HighlightAnimationConfig.AUDIO);\n+  public static final HighlightType NOTE =      new HighlightType(3, true,  R.color.note_highlight,      HighlightAnimationConfig.NONE);\n+  public static final HighlightType BOOKMARK =  new HighlightType(4, true,  R.color.bookmark_highlight,  HighlightAnimationConfig.NONE);\n \n   private Long id;\n   private boolean multipleHighlightsAllowed;\n   private int colorId;\n   private Integer color = null;\n-  private boolean floatable; \n-  // TODO: replace this with HighlightAnimationConfig\n-  // which contains:\n-  // 1. duration of animation\n-  // 2. under what circumstances to animate, given ayahs\n-  // 3. type of interpolator etc.\n-  // 4. animation rule - The mapping of bounds (if ayah A has 3 bounds and B has 2 bounds, how to take care of the extra one?)\n-  // I am not doing this right now because this seems\n-  // over-engineering to me, given that animation takes place just for Audio and that too for consecutive ayahs\n+  private HighlightAnimationConfig animationConfig;\n \n-  private HighlightType(long id, boolean multipleHighlightsAllowed, int colorId, boolean floatable) {\n+  private HighlightType(long id, boolean multipleHighlightsAllowed, int colorId, HighlightAnimationConfig config) {\n     this.id = id;\n     this.multipleHighlightsAllowed = multipleHighlightsAllowed;\n     this.colorId = colorId;\n-    this.floatable = floatable;\n+    this.animationConfig = config;\n   }\n \n   public boolean isMultipleHighlightsAllowed() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTkyNw==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r458441927", "bodyText": "as a rule of thumb, i'd vote for - when in doubt, don't animate - or when it's complicated to figure it out, don't", "author": "ahmedre", "createdAt": "2020-07-21T23:14:42Z", "path": "app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java", "diffHunk": "@@ -294,6 +477,28 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n     }\n   }\n \n+  private boolean alreadyHighlightedContains(String ayah) {\n+    // ayah can either be like 89:7 or 89:7->89:8\n+    if(alreadyHighlighted.contains(ayah)) {\n+      return true;\n+    }\n+    int arrowIndex = ayah.indexOf(\"->\");\n+    if (arrowIndex == -1) {\n+      return false;\n+    }\n+    String startAyah = ayah.substring(0, arrowIndex);\n+    String endAyah = ayah.substring(arrowIndex + 2);\n+    if(alreadyHighlighted.contains(startAyah)\n+        // TODO: to show or not to show is the question!", "originalCommit": "63dcff2de261ab1097c6a06437483cb819fd61f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMjc2Ng==", "url": "https://github.com/quran/quran_android/pull/1313#discussion_r463032766", "bodyText": "Yes, this method sounds good. I have done exactly that here.\nSay we are playing ayah a right now which is already highlighted by the bookmark highlight. Now, when we will switch to playing ayah b, then there will be no animation. Only, when both a and b aren't highlighted, do we show the animation.", "author": "murtraja", "createdAt": "2020-07-30T14:21:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MTkyNw=="}], "type": "inlineReview", "revised_code": {"commit": "16af4afd474b16bc09981de0c10df1bb1b3c7d43", "chunk": "diff --git a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\nindex ee1f6b21..7b2708fd 100644\n--- a/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n+++ b/app/src/main/java/com/quran/labs/androidquran/widgets/HighlightingImageView.java\n\n@@ -489,9 +445,7 @@ public class HighlightingImageView extends AppCompatImageView {\n     String startAyah = ayah.substring(0, arrowIndex);\n     String endAyah = ayah.substring(arrowIndex + 2);\n     if(alreadyHighlighted.contains(startAyah)\n-        // TODO: to show or not to show is the question!\n         || // if x -> y, either x or y is already highlighted, then we don't show the highlight\n-//        && // if x -> y, if one of them is not highlighted, overlap highlights and show animation\n         alreadyHighlighted.contains(endAyah)) {\n       return true;\n     }\n"}}, {"oid": "5588b8441ea3dcb7efc9d04a3617b71642ae8dd1", "url": "https://github.com/quran/quran_android/commit/5588b8441ea3dcb7efc9d04a3617b71642ae8dd1", "message": "expanding 'o' to original for rectToBeDivided", "committedDate": "2020-07-29T01:49:49Z", "type": "commit"}, {"oid": "89350844a5bb4515493397b98a31f3dbf370c67b", "url": "https://github.com/quran/quran_android/commit/89350844a5bb4515493397b98a31f3dbf370c67b", "message": "can't modify Evaluator result in place, have to make it immutable", "committedDate": "2020-07-29T02:18:24Z", "type": "commit"}, {"oid": "5487df369baa6150efaac58a52f9c09ebd128d11", "url": "https://github.com/quran/quran_android/commit/5487df369baa6150efaac58a52f9c09ebd128d11", "message": "refactoring into various classes", "committedDate": "2020-07-30T13:44:31Z", "type": "commit"}, {"oid": "16af4afd474b16bc09981de0c10df1bb1b3c7d43", "url": "https://github.com/quran/quran_android/commit/16af4afd474b16bc09981de0c10df1bb1b3c7d43", "message": "cleanup: to show or not to show animation", "committedDate": "2020-07-30T14:24:27Z", "type": "commit"}, {"oid": "4858fe34ca232e573e9ce877d20f46df74d843d4", "url": "https://github.com/quran/quran_android/commit/4858fe34ca232e573e9ce877d20f46df74d843d4", "message": "less convoluted way of accessing the highlights set and retrieving previousSurahAyah", "committedDate": "2020-07-30T14:35:12Z", "type": "commit"}, {"oid": "b71fc3beedd5d80fa2a143bcccc0e3c96f4d72ab", "url": "https://github.com/quran/quran_android/commit/b71fc3beedd5d80fa2a143bcccc0e3c96f4d72ab", "message": "adding another strategy which simplifies animation when going from more to less", "committedDate": "2020-08-03T17:58:03Z", "type": "commit"}, {"oid": "c5d57a03e3ec1c4bfe58e14b67d6909d44faa184", "url": "https://github.com/quran/quran_android/commit/c5d57a03e3ec1c4bfe58e14b67d6909d44faa184", "message": "using AyahHighlight instead of strings", "committedDate": "2020-08-04T04:22:25Z", "type": "commit"}, {"oid": "01c391ddc2f67365e8772d711d4f48524d66c597", "url": "https://github.com/quran/quran_android/commit/01c391ddc2f67365e8772d711d4f48524d66c597", "message": "Merge branch 'master' into floating-highlights", "committedDate": "2020-08-16T07:04:06Z", "type": "commit"}, {"oid": "278a33d13c8929073d3a4d3bc6277e178fd8bed8", "url": "https://github.com/quran/quran_android/commit/278a33d13c8929073d3a4d3bc6277e178fd8bed8", "message": "resolving conflicts introduced by 3e3de4", "committedDate": "2020-08-16T07:20:34Z", "type": "commit"}, {"oid": "36b5d6fc6007056d6d932ca8304e1ba8208c020f", "url": "https://github.com/quran/quran_android/commit/36b5d6fc6007056d6d932ca8304e1ba8208c020f", "message": "Extracting AyahHighlight and friends out of the HighlightingImageView", "committedDate": "2020-08-16T07:29:41Z", "type": "commit"}]}