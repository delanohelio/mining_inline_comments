{"pr_number": 1378, "pr_title": "Update docs links and add SSL debug info", "pr_createdAt": "2020-09-02T08:32:05Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1378", "timeline": [{"oid": "5905aa633521bbe3b06fa88e0f65a2b3f17dae1e", "url": "https://github.com/elastic/apm-agent-java/commit/5905aa633521bbe3b06fa88e0f65a2b3f17dae1e", "message": "Update docs links and add SSL debug info", "committedDate": "2020-09-02T08:30:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4ODkzMQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1378#discussion_r481988931", "bodyText": "[very minor] maybe split error message in two parts, with \"set logging level to info\" only if it's not already enabled. Otherwise that error message is confusing.", "author": "SylvainJuge", "createdAt": "2020-09-02T11:12:38Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java", "diffHunk": "@@ -103,18 +106,44 @@ protected boolean shouldEndRequest() {\n     protected HttpURLConnection startRequest(String endpoint) throws IOException {\n         final HttpURLConnection connection = apmServerClient.startRequest(endpoint);\n         if (connection != null) {\n-            if (logger.isDebugEnabled()) {\n-                logger.debug(\"Starting new request to {}\", connection.getURL());\n+            try {\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"Starting new request to {}\", connection.getURL());\n+                }\n+                connection.setRequestMethod(\"POST\");\n+                connection.setDoOutput(true);\n+                connection.setChunkedStreamingMode(DslJsonSerializer.BUFFER_SIZE);\n+                connection.setRequestProperty(\"Content-Encoding\", \"deflate\");\n+                connection.setRequestProperty(\"Content-Type\", \"application/x-ndjson\");\n+                connection.setUseCaches(false);\n+                connection.connect();\n+                os = new DeflaterOutputStream(connection.getOutputStream(), deflater);\n+                os.write(metaData);\n+            } catch (IOException e) {\n+                logger.error(\"Error trying to connect to APM Server. If SSL is enabled, set logging level to info \" +", "originalCommit": "5905aa633521bbe3b06fa88e0f65a2b3f17dae1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "87e3375d8880c5fb340f24cfc72c034d88b2b3cd", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java\nindex c0e195f62..92d81918b 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java\n\n@@ -120,8 +120,8 @@ public class AbstractIntakeApiHandler {\n                 os = new DeflaterOutputStream(connection.getOutputStream(), deflater);\n                 os.write(metaData);\n             } catch (IOException e) {\n-                logger.error(\"Error trying to connect to APM Server. If SSL is enabled, set logging level to info \" +\n-                    \"for detailed SSL configurations available for the current connection.\");\n+                logger.error(\"Error trying to connect to APM Server. Some details about SSL configurations corresponding \" +\n+                    \"the current connection are logged at INFO level.\");\n                 if (logger.isInfoEnabled() && connection instanceof HttpsURLConnection) {\n                     HttpsURLConnection httpsURLConnection = (HttpsURLConnection) connection;\n                     try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDg5NQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1378#discussion_r481990895", "bodyText": "why not log e1 (or at least it's error message), something like log.error(\"unable to get cipher suite {}\", e) ?", "author": "SylvainJuge", "createdAt": "2020-09-02T11:16:28Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java", "diffHunk": "@@ -103,18 +106,44 @@ protected boolean shouldEndRequest() {\n     protected HttpURLConnection startRequest(String endpoint) throws IOException {\n         final HttpURLConnection connection = apmServerClient.startRequest(endpoint);\n         if (connection != null) {\n-            if (logger.isDebugEnabled()) {\n-                logger.debug(\"Starting new request to {}\", connection.getURL());\n+            try {\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"Starting new request to {}\", connection.getURL());\n+                }\n+                connection.setRequestMethod(\"POST\");\n+                connection.setDoOutput(true);\n+                connection.setChunkedStreamingMode(DslJsonSerializer.BUFFER_SIZE);\n+                connection.setRequestProperty(\"Content-Encoding\", \"deflate\");\n+                connection.setRequestProperty(\"Content-Type\", \"application/x-ndjson\");\n+                connection.setUseCaches(false);\n+                connection.connect();\n+                os = new DeflaterOutputStream(connection.getOutputStream(), deflater);\n+                os.write(metaData);\n+            } catch (IOException e) {\n+                logger.error(\"Error trying to connect to APM Server. If SSL is enabled, set logging level to info \" +\n+                    \"for detailed SSL configurations available for the current connection.\");\n+                if (logger.isInfoEnabled() && connection instanceof HttpsURLConnection) {\n+                    HttpsURLConnection httpsURLConnection = (HttpsURLConnection) connection;\n+                    try {\n+                        logger.info(\"Cipher suite used for this connection: {}\", httpsURLConnection.getCipherSuite());\n+                    } catch (Exception e1) {\n+                        SSLSocketFactory sslSocketFactory = httpsURLConnection.getSSLSocketFactory();", "originalCommit": "5905aa633521bbe3b06fa88e0f65a2b3f17dae1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2MTQzMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1378#discussion_r482061433", "bodyText": "Because it is not interesting for our purpose, it's just a premature check on a non-initialized connection done for info logging. I am falling back to doing what I need to do on non-initialized connections.", "author": "eyalkoren", "createdAt": "2020-09-02T13:18:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDg5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "87e3375d8880c5fb340f24cfc72c034d88b2b3cd", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java\nindex c0e195f62..92d81918b 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/report/AbstractIntakeApiHandler.java\n\n@@ -120,8 +120,8 @@ public class AbstractIntakeApiHandler {\n                 os = new DeflaterOutputStream(connection.getOutputStream(), deflater);\n                 os.write(metaData);\n             } catch (IOException e) {\n-                logger.error(\"Error trying to connect to APM Server. If SSL is enabled, set logging level to info \" +\n-                    \"for detailed SSL configurations available for the current connection.\");\n+                logger.error(\"Error trying to connect to APM Server. Some details about SSL configurations corresponding \" +\n+                    \"the current connection are logged at INFO level.\");\n                 if (logger.isInfoEnabled() && connection instanceof HttpsURLConnection) {\n                     HttpsURLConnection httpsURLConnection = (HttpsURLConnection) connection;\n                     try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MjQ3MA==", "url": "https://github.com/elastic/apm-agent-java/pull/1378#discussion_r481992470", "bodyText": "[question] could this allows to easily spot a missing certificate (or CA) in trust store ?", "author": "SylvainJuge", "createdAt": "2020-09-02T11:19:29Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/report/ssl/TLSFallbackSSLSocket.java", "diffHunk": "@@ -209,17 +211,44 @@ public void setSSLParameters(SSLParameters params) {\n \n     @Override\n     public void connect(SocketAddress endpoint) throws IOException {\n-        socket.connect(endpoint);\n+        try {\n+            socket.connect(endpoint);\n+        } catch (IOException e) {\n+            logSslInfo();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public void connect(SocketAddress endpoint, int timeout) throws IOException {\n-        socket.connect(endpoint, timeout);\n+        try {\n+            socket.connect(endpoint, timeout);\n+        } catch (IOException e) {\n+            logSslInfo();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public void bind(SocketAddress bindpoint) throws IOException {\n-        socket.bind(bindpoint);\n+        try {\n+            socket.bind(bindpoint);\n+        } catch (IOException e) {\n+            logSslInfo();\n+            throw e;\n+        }\n+    }\n+\n+    private void logSslInfo() {\n+        SSLSession session = socket.getSession();\n+        if (session != null) {", "originalCommit": "5905aa633521bbe3b06fa88e0f65a2b3f17dae1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2MzE3NA==", "url": "https://github.com/elastic/apm-agent-java/pull/1378#discussion_r482063174", "bodyText": "Good question! I spent quite some time looking for a way to get the effective truststore and keystore used to create the connection, but it's only available on the internal implementations, not exposed for external query (at least I couldn't find a way). We can instrument to find that, but.... Maybe in the next enhancement \ud83d\ude42", "author": "eyalkoren", "createdAt": "2020-09-02T13:21:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MjQ3MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "87e3375d8880c5fb340f24cfc72c034d88b2b3cd", "url": "https://github.com/elastic/apm-agent-java/commit/87e3375d8880c5fb340f24cfc72c034d88b2b3cd", "message": "Applying review suggestion", "committedDate": "2020-09-02T14:03:10Z", "type": "commit"}]}