{"pr_number": 1295, "pr_title": "Allow empty server_urls", "pr_createdAt": "2020-07-19T17:45:00Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1295", "timeline": [{"oid": "4e0dd78ded108d070110d3e0c6937b72a9a971b5", "url": "https://github.com/elastic/apm-agent-java/commit/4e0dd78ded108d070110d3e0c6937b72a9a971b5", "message": "Allow empty server_urls", "committedDate": "2020-07-19T17:31:22Z", "type": "commit"}, {"oid": "b46994883bf61cad6b885273b6dc69233a469d46", "url": "https://github.com/elastic/apm-agent-java/commit/b46994883bf61cad6b885273b6dc69233a469d46", "message": "Test two more client methods", "committedDate": "2020-07-19T17:34:47Z", "type": "commit"}, {"oid": "0e5ac06e29811bb128b4824d38207c795bd538d1", "url": "https://github.com/elastic/apm-agent-java/commit/0e5ac06e29811bb128b4824d38207c795bd538d1", "message": "Tests, backoff in log shipper, health check change", "committedDate": "2020-07-20T07:43:00Z", "type": "commit"}, {"oid": "c29e71171ce47b315fc52d14fbc3ca52bd975a94", "url": "https://github.com/elastic/apm-agent-java/commit/c29e71171ce47b315fc52d14fbc3ca52bd975a94", "message": "Merge remote-tracking branch 'upstream/master' into client-error-divided-by-zero", "committedDate": "2020-07-21T10:14:42Z", "type": "commit"}, {"oid": "bb8c0dbcddfc35321c93239da43c2aa21c1b0c38", "url": "https://github.com/elastic/apm-agent-java/commit/bb8c0dbcddfc35321c93239da43c2aa21c1b0c38", "message": "Update documentation", "committedDate": "2020-07-21T11:06:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxODIyOQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1295#discussion_r458018229", "bodyText": "This is called each time any event is processed from the queue when server_urls is empty, correct?\nWhat is the purpose of flipping active and inactive metric sets in this case? Note it doesn't reset the counters and timers as that's only done during serialization. Conflating serialization and metrics resetting is probably a code smell and that's on me. But do we have to reset the metrics at all? If so, I think this also resets even if a span is reported, for example, which doesn't feel right. Or is this serving an entirely different purpose?\nDocumenting the purpose here would help.", "author": "felixbarny", "createdAt": "2020-07-21T11:12:26Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java", "diffHunk": "@@ -172,6 +172,18 @@ public void report(MetricsReporter metricsReporter) {\n         }\n     }\n \n+    public void resetBuffers() {", "originalCommit": "0e5ac06e29811bb128b4824d38207c795bd538d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzNjk2OQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1295#discussion_r458036969", "bodyText": "This is called each time any event is processed from the queue when server_urls is empty, correct?\n\nNo, every time a metrics event is reported - https://github.com/elastic/apm-agent-java/pull/1295/files#diff-517f2e7d31c3425c5ec7719efd32a06dR151.\nThe purpose is to continue collecting metrics in the right intervals, because the server_urls is a dynamic config.\n\nNote it doesn't reset the counters and timers as that's only done during serialization.\n\nRight. I was going to look into that next. What do you say simply replacing the buffers with new ones, as in:\n    public void resetBuffers() {\n        try {\n            phaser.readerLock();\n            inactiveMetricSets = activeMetricSets;\n            activeMetricSets = new ConcurrentHashMap<>();\n            phaser.flipPhase();\n        } finally {\n            phaser.readerUnlock();\n        }\n    }\n\n\nDocumenting the purpose here would help.\n\n\ud83d\udc4d", "author": "eyalkoren", "createdAt": "2020-07-21T11:50:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxODIyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3MTM2Mw==", "url": "https://github.com/elastic/apm-agent-java/pull/1295#discussion_r458071363", "bodyText": "simply replacing the buffers with new ones\n\nThat won't work for gauges that still need to remain in the registry. Having to re-add transaction timers would also increase the allocation rate.", "author": "felixbarny", "createdAt": "2020-07-21T12:52:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxODIyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU2NjI2MA==", "url": "https://github.com/elastic/apm-agent-java/pull/1295#discussion_r458566260", "bodyText": "@felixbarny check out the last commit. I separated reset from reporting. It costs a bit more because of the additional iteration, but since it is done as a secluded read-lock-operation, I think it's lightweight enough to worth the code simplification (especially now that we need to do that when not reporting as well).\nI would even go further with providing a separate resetState operation for the MetricRegistry, but since it needs to be done on the same read-operation critical section with buffer switch and reporting, I didn't.", "author": "eyalkoren", "createdAt": "2020-07-22T06:36:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxODIyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU2NjM0NQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1295#discussion_r458566345", "bodyText": "Added tests as well", "author": "eyalkoren", "createdAt": "2020-07-22T06:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxODIyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e1c47050414f8cdf670152b5d618c912fe45e2fe", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java\nindex 939119946..361077286 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java\n\n@@ -172,12 +172,14 @@ public class MetricRegistry {\n         }\n     }\n \n+    /**\n+     * Replace the active metrics container with a new one in a thread-safe manner.\n+     */\n     public void resetBuffers() {\n         try {\n             phaser.readerLock();\n-            ConcurrentMap<Labels.Immutable, MetricSet> temp = inactiveMetricSets;\n             inactiveMetricSets = activeMetricSets;\n-            activeMetricSets = temp;\n+            activeMetricSets = new ConcurrentHashMap<>();\n             phaser.flipPhase();\n         } finally {\n             phaser.readerUnlock();\n"}}, {"oid": "d1fb7a46c83416d923df91bf03caa9f19741512f", "url": "https://github.com/elastic/apm-agent-java/commit/d1fb7a46c83416d923df91bf03caa9f19741512f", "message": "Adding to documentation and CHANGELOG", "committedDate": "2020-07-21T12:01:37Z", "type": "commit"}, {"oid": "e1c47050414f8cdf670152b5d618c912fe45e2fe", "url": "https://github.com/elastic/apm-agent-java/commit/e1c47050414f8cdf670152b5d618c912fe45e2fe", "message": "Replace metrics buffers with new one", "committedDate": "2020-07-21T13:13:01Z", "type": "commit"}, {"oid": "71156e7f960defd505f3dae8145aab055f30f783", "url": "https://github.com/elastic/apm-agent-java/commit/71156e7f960defd505f3dae8145aab055f30f783", "message": "Handling metrics reset", "committedDate": "2020-07-22T06:29:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2ODgzMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1295#discussion_r458668833", "bodyText": "[minor] maybe call it flip phase and report to be consistent with the reader-writer-phaser terminology? the word buffer is not used elsewhere in this class.", "author": "felixbarny", "createdAt": "2020-07-22T09:42:22Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java", "diffHunk": "@@ -159,14 +159,30 @@ public DoubleSupplier getGauge(String name, Labels labels) {\n         return null;\n     }\n \n-    public void report(MetricsReporter metricsReporter) {\n+    /**\n+     * Executes the following steps within a single read-operation critical section:\n+     * <ul>\n+     *     <li>Switch between active and inactive MetricSet buffers</li>\n+     *     <li>Report the inactivated buffer (optional)</li>\n+     *     <li>Reset the inactivated buffer</li>\n+     * </ul>\n+     *\n+     * @param metricsReporter a reporter to be used for reporting the inactivated metrics buffer. May be {@code null}\n+     *                        if reporting is not required.\n+     */\n+    public void switchBuffersAndReport(@Nullable MetricsReporter metricsReporter) {", "originalCommit": "71156e7f960defd505f3dae8145aab055f30f783", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f935ef13eed7020b9bca6593ec00f5a39bd0e20a", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java\nindex a2259c855..651cbd30b 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/metrics/MetricRegistry.java\n\n@@ -162,15 +162,15 @@ public class MetricRegistry {\n     /**\n      * Executes the following steps within a single read-operation critical section:\n      * <ul>\n-     *     <li>Switch between active and inactive MetricSet buffers</li>\n-     *     <li>Report the inactivated buffer (optional)</li>\n-     *     <li>Reset the inactivated buffer</li>\n+     *     <li>Switch between active and inactive MetricSet containers</li>\n+     *     <li>Report the inactivated MetricSets (optional)</li>\n+     *     <li>Reset the inactivated MetricSets</li>\n      * </ul>\n      *\n-     * @param metricsReporter a reporter to be used for reporting the inactivated metrics buffer. May be {@code null}\n+     * @param metricsReporter a reporter to be used for reporting the inactivated MetricSets. May be {@code null}\n      *                        if reporting is not required.\n      */\n-    public void switchBuffersAndReport(@Nullable MetricsReporter metricsReporter) {\n+    public void flipPhaseAndReport(@Nullable MetricsReporter metricsReporter) {\n         try {\n             phaser.readerLock();\n             ConcurrentMap<Labels.Immutable, MetricSet> temp = inactiveMetricSets;\n"}}, {"oid": "f935ef13eed7020b9bca6593ec00f5a39bd0e20a", "url": "https://github.com/elastic/apm-agent-java/commit/f935ef13eed7020b9bca6593ec00f5a39bd0e20a", "message": "Change method name", "committedDate": "2020-07-26T13:38:07Z", "type": "commit"}, {"oid": "8a1e014abdb4db044b0901b1498aa5a3f03c113a", "url": "https://github.com/elastic/apm-agent-java/commit/8a1e014abdb4db044b0901b1498aa5a3f03c113a", "message": "Merge remote-tracking branch 'upstream/master' into client-error-divided-by-zero", "committedDate": "2020-07-30T09:24:20Z", "type": "commit"}]}