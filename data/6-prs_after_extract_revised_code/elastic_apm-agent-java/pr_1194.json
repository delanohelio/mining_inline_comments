{"pr_number": 1194, "pr_title": "Set framework name and version", "pr_createdAt": "2020-05-20T06:01:29Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1194", "timeline": [{"oid": "dbc7eef69df885d3de8edf3cdc47013d58b01413", "url": "https://github.com/elastic/apm-agent-java/commit/dbc7eef69df885d3de8edf3cdc47013d58b01413", "message": "issue-29 set framework name for SpringTransactionName, JaxRsTransactionName, JaxWsTransactionName, ServletApi instrumentations.", "committedDate": "2020-05-19T21:04:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjgxMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427766813", "bodyText": "Better store frameworkName and frameworkVersion  in TransactionContext, as it's only relevant to transactions and doesn't increase the memory footprint for spans.", "author": "felixbarny", "createdAt": "2020-05-20T06:22:06Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java", "diffHunk": "@@ -242,6 +242,12 @@ public boolean asChildOf(TraceContext child, Object ignore) {\n     @Nullable\n     private String serviceName;\n \n+    @Nullable\n+    private String frameworkName;", "originalCommit": "dbc7eef69df885d3de8edf3cdc47013d58b01413", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4OTg0Mg==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427889842", "bodyText": "moved to TransactionContext", "author": "kananindzya", "createdAt": "2020-05-20T10:01:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjgxMw=="}], "type": "inlineReview", "revised_code": {"commit": "1fecb0affce119a645aebfa499eab5fa73bbd9cb", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java\nindex c99611d69..aead940f7 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java\n\n@@ -242,12 +242,6 @@ public class TraceContext implements Recyclable {\n     @Nullable\n     private String serviceName;\n \n-    @Nullable\n-    private String frameworkName;\n-\n-    @Nullable\n-    private String frameworkVersion;\n-\n     private TraceContext(ElasticApmTracer tracer, Id id) {\n         coreConfiguration = tracer.getConfig(CoreConfiguration.class);\n         this.tracer = tracer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NzE3Mg==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427767172", "bodyText": "\ud83d\udc4f", "author": "felixbarny", "createdAt": "2020-05-20T06:23:05Z", "path": "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringTransactionNameInstrumentation.java", "diffHunk": "@@ -129,6 +132,8 @@ static void setTransactionName(@Advice.Argument(2) Object handler) {\n                     if (logger.isDebugEnabled()) {\n                         logger.debug(\"Set name {} to transaction {}\", transaction.getNameAsString(), transaction.getTraceContext().getId());\n                     }\n+                    transaction.getTraceContext().setFrameworkName(FRAMEWORK_NAME);\n+                    transaction.getTraceContext().setFrameworkVersion(SpringVersion.getVersion());", "originalCommit": "dbc7eef69df885d3de8edf3cdc47013d58b01413", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1fecb0affce119a645aebfa499eab5fa73bbd9cb", "chunk": "diff --git a/apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringTransactionNameInstrumentation.java b/apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringTransactionNameInstrumentation.java\nindex d677ff7ff..2243696fb 100644\n--- a/apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringTransactionNameInstrumentation.java\n+++ b/apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringTransactionNameInstrumentation.java\n\n@@ -132,8 +132,8 @@ public class SpringTransactionNameInstrumentation extends ElasticApmInstrumentat\n                     if (logger.isDebugEnabled()) {\n                         logger.debug(\"Set name {} to transaction {}\", transaction.getNameAsString(), transaction.getTraceContext().getId());\n                     }\n-                    transaction.getTraceContext().setFrameworkName(FRAMEWORK_NAME);\n-                    transaction.getTraceContext().setFrameworkVersion(SpringVersion.getVersion());\n+                    transaction.getContext().setFrameworkName(FRAMEWORK_NAME);\n+                    transaction.getContext().setFrameworkVersion(SpringVersion.getVersion());\n                 } else {\n                     logger.debug(\"Transaction is null\");\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTExMg==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427769112", "bodyText": "Could we use co.elastic.apm.agent.util.VersionUtils#getVersionFromPomProperties to get the version? Remember to cache the version as this method is quite expensive. Probably best to cache with a WeakConcurrentMap with a class such as javax.ws.rs.GET.class as the key. That's necessary as there could be multiple JAX-RS versions in different wars in an app server.", "author": "felixbarny", "createdAt": "2020-05-20T06:28:05Z", "path": "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java", "diffHunk": "@@ -79,6 +81,7 @@ private static void setTransactionName(@SimpleMethodSignature String signature,\n                     }\n                 }\n                 transaction.withName(transactionName, PRIO_HIGH_LEVEL_FRAMEWORK, false);\n+                transaction.getTraceContext().setFrameworkName(FRAMEWORK_NAME);", "originalCommit": "dbc7eef69df885d3de8edf3cdc47013d58b01413", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMDAzNw==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427900037", "bodyText": "Great! It's working!", "author": "kananindzya", "createdAt": "2020-05-20T10:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTExMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNzQwNw==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r428207407", "bodyText": "added. I added cache into JaxRsTransactionNameInstrumentation.", "author": "kananindzya", "createdAt": "2020-05-20T18:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTExMg=="}], "type": "inlineReview", "revised_code": {"commit": "1fecb0affce119a645aebfa499eab5fa73bbd9cb", "chunk": "diff --git a/apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java b/apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java\nindex 4d171442d..7c4192b9e 100644\n--- a/apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java\n+++ b/apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java\n\n@@ -81,7 +81,7 @@ public class JaxRsTransactionNameInstrumentation extends ElasticApmInstrumentati\n                     }\n                 }\n                 transaction.withName(transactionName, PRIO_HIGH_LEVEL_FRAMEWORK, false);\n-                transaction.getTraceContext().setFrameworkName(FRAMEWORK_NAME);\n+                transaction.getContext().setFrameworkName(FRAMEWORK_NAME);\n             }\n         }\n     }\n"}}, {"oid": "1fecb0affce119a645aebfa499eab5fa73bbd9cb", "url": "https://github.com/elastic/apm-agent-java/commit/1fecb0affce119a645aebfa499eab5fa73bbd9cb", "message": "issue-29 set framework name for SpringTransactionName, JaxRsTransactionName, JaxWsTransactionName, ServletApi instrumentations. Fixes according to comments.", "committedDate": "2020-05-20T10:00:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzI3OQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427897279", "bodyText": "Don't forget to include in copyFrom and resetState", "author": "felixbarny", "createdAt": "2020-05-20T10:14:11Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java", "diffHunk": "@@ -57,6 +58,12 @@\n      */\n     private final User user = new User();\n \n+    @Nullable\n+    private String frameworkName;", "originalCommit": "1fecb0affce119a645aebfa499eab5fa73bbd9cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNjg0MQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r428206841", "bodyText": "added", "author": "kananindzya", "createdAt": "2020-05-20T18:04:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzI3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "20743c0e54085f4155affe830761e82d2e9cb730", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java\nindex 1a9d7b646..40ad4a03e 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java\n\n@@ -69,6 +69,9 @@ public class TransactionContext extends AbstractContext {\n         response.copyFrom(other.response);\n         request.copyFrom(other.request);\n         user.copyFrom(other.user);\n+        this.frameworkName = other.getFrameworkName();\n+        this.frameworkVersion = other.getFrameworkVersion();\n+\n     }\n \n     public Object getCustom(String key) {\n"}}, {"oid": "20743c0e54085f4155affe830761e82d2e9cb730", "url": "https://github.com/elastic/apm-agent-java/commit/20743c0e54085f4155affe830761e82d2e9cb730", "message": "issue-29 added define version for JaxRs framework(with caching).", "committedDate": "2020-05-20T18:05:48Z", "type": "forcePushed"}, {"oid": "19ed400ff5a44aeb36d1a0a4a6db3e5b88aff087", "url": "https://github.com/elastic/apm-agent-java/commit/19ed400ff5a44aeb36d1a0a4a6db3e5b88aff087", "message": "issue-29 set framework name for JavaServerFaces transaction. Updated integration tests with framework name assertions.", "committedDate": "2020-05-22T06:17:11Z", "type": "forcePushed"}, {"oid": "803269ee0b4a49108c238fcdb1b288d8719e9ba1", "url": "https://github.com/elastic/apm-agent-java/commit/803269ee0b4a49108c238fcdb1b288d8719e9ba1", "message": "issue-29 set framework name for JavaServerFaces transaction. Updated integration tests with framework name assertions.", "committedDate": "2020-05-22T06:23:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MjQ3MA==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r429862470", "bodyText": "Test that the framework name has been set", "author": "felixbarny", "createdAt": "2020-05-25T10:31:25Z", "path": "apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java", "diffHunk": "@@ -258,6 +258,16 @@ public void testJaxRsTransactionNameFromPathAnnotationInheritanceEnabledOnResour\n         assertThat(actualTransactions.get(0).getNameAsString()).isEqualTo(\"GET /testInterface/test\");\n     }\n \n+    @Test\n+    public void testJaxRsFrameworkNameAndVersion() throws IOException {\n+        config.getConfig(CoreConfiguration.class).getSampleRate().update(0.0, SpyConfiguration.CONFIG_SOURCE_NAME);\n+        ElasticApmAgent.initInstrumentation(tracer, ByteBuddyAgent.install());\n+\n+        doRequest(\"test\");\n+\n+        List<Transaction> actualTransactions = reporter.getTransactions();\n+        assertThat(actualTransactions).hasSize(1);", "originalCommit": "803269ee0b4a49108c238fcdb1b288d8719e9ba1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NDkyNA==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r429874924", "bodyText": "fixed", "author": "kananindzya", "createdAt": "2020-05-25T11:03:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MjQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1Mzk0Mw==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430053943", "bodyText": "added assertion on JaxWsTransactionNameInstrumentationTest", "author": "kananindzya", "createdAt": "2020-05-25T19:25:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MjQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE4NDEwNg==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430184106", "bodyText": "I think I know why previously the framework has been reset. That's because for non-sampled transactions, we don't report the context. See also\n\n  \n    \n      apm-agent-java/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java\n    \n    \n        Lines 211 to 214\n      in\n      28e6f45\n    \n    \n    \n    \n\n        \n          \n           public void beforeEnd(long epochMicros) { \n        \n\n        \n          \n               if (!isSampled()) { \n        \n\n        \n          \n                   context.resetState(); \n        \n\n        \n          \n               } \n        \n    \n  \n\n\nTherefore, it's problematic to put the framework information into the TransactionContext. I think it's better to put it directly in Transaction.", "author": "felixbarny", "createdAt": "2020-05-26T06:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MjQ3MA=="}], "type": "inlineReview", "revised_code": {"commit": "22b7048663d12825eef1bd8268fc718ca6e8b36c", "chunk": "diff --git a/apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java b/apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java\nindex a2bd23e77..de7b70be6 100644\n--- a/apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java\n+++ b/apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java\n\n@@ -260,13 +260,16 @@ public class JaxRsTransactionNameInstrumentationTest extends JerseyTest {\n \n     @Test\n     public void testJaxRsFrameworkNameAndVersion() throws IOException {\n-        config.getConfig(CoreConfiguration.class).getSampleRate().update(0.0, SpyConfiguration.CONFIG_SOURCE_NAME);\n+        when(config.getConfig(JaxRsConfiguration.class).isUseJaxRsPathForTransactionName()).thenReturn(true);\n+\n         ElasticApmAgent.initInstrumentation(tracer, ByteBuddyAgent.install());\n \n         doRequest(\"test\");\n \n         List<Transaction> actualTransactions = reporter.getTransactions();\n         assertThat(actualTransactions).hasSize(1);\n+        assertThat(reporter.getFirstTransaction().getContext().getFrameworkName()).isEqualTo(\"JAX-RS\");\n+        assertThat(reporter.getFirstTransaction().getContext().getFrameworkVersion()).isEqualTo(\"2.1\");\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2NDM2OQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r429864369", "bodyText": "Doesn't seem to be used", "author": "felixbarny", "createdAt": "2020-05-25T10:35:49Z", "path": "integration-tests/application-server-integration-tests/src/test/java/co/elastic/apm/servlet/tests/TestApp.java", "diffHunk": "@@ -62,4 +64,21 @@ public String getExpectedServiceName() {\n \n     public abstract void test(AbstractServletContainerIntegrationTest test) throws Exception;\n \n+    /**\n+     * Pretty print JsonNode\n+     *\n+     * @param jsonNode\n+     * @return\n+     */\n+    protected String prettyPrintJsonNode(JsonNode jsonNode) {", "originalCommit": "803269ee0b4a49108c238fcdb1b288d8719e9ba1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MzAzMA==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430053030", "bodyText": "deleted", "author": "kananindzya", "createdAt": "2020-05-25T19:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2NDM2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "aa4744bd7a756b1bfc1cbe1fe2aef1f766d1d3ec", "chunk": "diff --git a/integration-tests/application-server-integration-tests/src/test/java/co/elastic/apm/servlet/tests/TestApp.java b/integration-tests/application-server-integration-tests/src/test/java/co/elastic/apm/servlet/tests/TestApp.java\nindex 74e7aa28f..1bd335230 100644\n--- a/integration-tests/application-server-integration-tests/src/test/java/co/elastic/apm/servlet/tests/TestApp.java\n+++ b/integration-tests/application-server-integration-tests/src/test/java/co/elastic/apm/servlet/tests/TestApp.java\n\n@@ -64,21 +62,4 @@ public abstract class TestApp {\n \n     public abstract void test(AbstractServletContainerIntegrationTest test) throws Exception;\n \n-    /**\n-     * Pretty print JsonNode\n-     *\n-     * @param jsonNode\n-     * @return\n-     */\n-    protected String prettyPrintJsonNode(JsonNode jsonNode) {\n-        try {\n-            ObjectMapper objectMapper = new ObjectMapper();\n-            Object json = objectMapper.readValue(jsonNode.toString(), Object.class);\n-            return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(json);\n-        } catch (Exception e) {\n-\n-        }\n-        return null;\n-    }\n-\n }\n"}}, {"oid": "edea9cd18b8b60f57267cc293dcb19382ebb04a0", "url": "https://github.com/elastic/apm-agent-java/commit/edea9cd18b8b60f57267cc293dcb19382ebb04a0", "message": "issue-29 Added frameworkName, frameworkVersion to TransactionContext. Set framework name for SpringTransactionName, JaxRsTransactionName(with version), JaxWsTransactionName, ServletApi,\nJavaServerFaces, Public Api, Kafka, gRPC, JMS, OpenTracing, Quartz(with version) instrumentations.", "committedDate": "2020-05-25T19:03:07Z", "type": "forcePushed"}, {"oid": "22b7048663d12825eef1bd8268fc718ca6e8b36c", "url": "https://github.com/elastic/apm-agent-java/commit/22b7048663d12825eef1bd8268fc718ca6e8b36c", "message": "issue-29 Added frameworkName, frameworkVersion to TransactionContext. Set framework name for SpringTransactionName, JaxRsTransactionName(with version), JaxWsTransactionName, ServletApi,\nJavaServerFaces, Public Api, Kafka, gRPC, JMS, OpenTracing, Quartz(with version) instrumentations.", "committedDate": "2020-05-25T19:14:07Z", "type": "forcePushed"}, {"oid": "aa4744bd7a756b1bfc1cbe1fe2aef1f766d1d3ec", "url": "https://github.com/elastic/apm-agent-java/commit/aa4744bd7a756b1bfc1cbe1fe2aef1f766d1d3ec", "message": "issue-29 Added frameworkName, frameworkVersion to TransactionContext. Set framework name for SpringTransactionName, JaxRsTransactionName(with version), JaxWsTransactionName, ServletApi,\nJavaServerFaces, Public Api, Kafka, gRPC, JMS, OpenTracing, Quartz(with version) instrumentations.", "committedDate": "2020-05-25T19:20:48Z", "type": "forcePushed"}, {"oid": "4eb0309afff8492ea6117eb930b3bd793c44e829", "url": "https://github.com/elastic/apm-agent-java/commit/4eb0309afff8492ea6117eb930b3bd793c44e829", "message": "issue-29 Added frameworkName, frameworkVersion to TransactionContext. Set framework name for SpringTransactionName, JaxRsTransactionName(with version), JaxWsTransactionName, ServletApi,\nJavaServerFaces, Public Api, Kafka, gRPC, JMS, OpenTracing, Quartz(with version) instrumentations.", "committedDate": "2020-05-25T19:23:16Z", "type": "commit"}, {"oid": "4eb0309afff8492ea6117eb930b3bd793c44e829", "url": "https://github.com/elastic/apm-agent-java/commit/4eb0309afff8492ea6117eb930b3bd793c44e829", "message": "issue-29 Added frameworkName, frameworkVersion to TransactionContext. Set framework name for SpringTransactionName, JaxRsTransactionName(with version), JaxWsTransactionName, ServletApi,\nJavaServerFaces, Public Api, Kafka, gRPC, JMS, OpenTracing, Quartz(with version) instrumentations.", "committedDate": "2020-05-25T19:23:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE3OTA0NA==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430179044", "bodyText": "This has to be public, as it needs to be visible from inlined advices", "author": "felixbarny", "createdAt": "2020-05-26T06:20:15Z", "path": "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/Utils.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*-\n+ * #%L\n+ * Elastic APM Java agent\n+ * %%\n+ * Copyright (C) 2018 - 2020 Elastic and contributors\n+ * %%\n+ * Licensed to Elasticsearch B.V. under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch B.V. licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * #L%\n+ */\n+package co.elastic.apm.agent.plugin.api;\n+\n+public final class Utils {\n+\n+    private Utils() { }\n+\n+    protected static final String FRAMEWORK_NAME = \"API\";", "originalCommit": "4eb0309afff8492ea6117eb930b3bd793c44e829", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2Mzk2Ng==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r431063966", "bodyText": "fixed", "author": "kananindzya", "createdAt": "2020-05-27T12:02:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE3OTA0NA=="}], "type": "inlineReview", "revised_code": {"commit": "8eb97d640d4a3dd1826a999a5c364d0af2bfa030", "chunk": "diff --git a/apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/Utils.java b/apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/Utils.java\nindex fe30eb0d8..b6bc8e4b7 100644\n--- a/apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/Utils.java\n+++ b/apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/Utils.java\n\n@@ -28,5 +28,5 @@ public final class Utils {\n \n     private Utils() { }\n \n-    protected static final String FRAMEWORK_NAME = \"API\";\n+    public static final String FRAMEWORK_NAME = \"API\";\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE4MjYyNA==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430182624", "bodyText": "VersionUtils may return null. Avoid re-evaluating in this case.", "author": "felixbarny", "createdAt": "2020-05-26T06:29:32Z", "path": "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java", "diffHunk": "@@ -79,6 +89,13 @@ private static void setTransactionName(@SimpleMethodSignature String signature,\n                     }\n                 }\n                 transaction.withName(transactionName, PRIO_HIGH_LEVEL_FRAMEWORK, false);\n+                transaction.getContext().setFrameworkName(FRAMEWORK_NAME);\n+                String version = versionsCache.get(javax.ws.rs.GET.class);\n+                if (version == null) {\n+                    version = VersionUtils.getVersionFromPomProperties(javax.ws.rs.GET.class, GROUP_ID, ARTIFACT_ID);", "originalCommit": "4eb0309afff8492ea6117eb930b3bd793c44e829", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2MzkxMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r431063913", "bodyText": "fixed", "author": "kananindzya", "createdAt": "2020-05-27T12:02:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE4MjYyNA=="}], "type": "inlineReview", "revised_code": {"commit": "8eb97d640d4a3dd1826a999a5c364d0af2bfa030", "chunk": "diff --git a/apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java b/apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java\nindex cd587496e..a8f0c58fb 100644\n--- a/apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java\n+++ b/apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java\n\n@@ -89,13 +89,14 @@ public class JaxRsTransactionNameInstrumentation extends ElasticApmInstrumentati\n                     }\n                 }\n                 transaction.withName(transactionName, PRIO_HIGH_LEVEL_FRAMEWORK, false);\n-                transaction.getContext().setFrameworkName(FRAMEWORK_NAME);\n+                transaction.setFrameworkName(FRAMEWORK_NAME);\n                 String version = versionsCache.get(javax.ws.rs.GET.class);\n-                if (version == null) {\n+                boolean isContains = versionsCache.containsKey(javax.ws.rs.GET.class);\n+                if (version == null && !isContains) {\n                     version = VersionUtils.getVersionFromPomProperties(javax.ws.rs.GET.class, GROUP_ID, ARTIFACT_ID);\n                     versionsCache.put(javax.ws.rs.GET.class, version);\n                 }\n-                transaction.getContext().setFrameworkVersion(version);\n+                transaction.setFrameworkVersion(version);\n             }\n         }\n     }\n"}}, {"oid": "8eb97d640d4a3dd1826a999a5c364d0af2bfa030", "url": "https://github.com/elastic/apm-agent-java/commit/8eb97d640d4a3dd1826a999a5c364d0af2bfa030", "message": "fixes according to comments", "committedDate": "2020-05-27T12:01:48Z", "type": "commit"}, {"oid": "af225d8c2aa1ffc15542680b1cd7bdb73f501cf9", "url": "https://github.com/elastic/apm-agent-java/commit/af225d8c2aa1ffc15542680b1cd7bdb73f501cf9", "message": "fixed logic with frameworkName serialization.", "committedDate": "2020-05-27T12:10:17Z", "type": "commit"}, {"oid": "f87003923b19ab58ee7d87ed6bf8a61a9b926231", "url": "https://github.com/elastic/apm-agent-java/commit/f87003923b19ab58ee7d87ed6bf8a61a9b926231", "message": "Simplify framework serialization", "committedDate": "2020-05-28T12:43:01Z", "type": "commit"}, {"oid": "0162fe3711353bdcec1a3a2ef76f3db19d41b7c0", "url": "https://github.com/elastic/apm-agent-java/commit/0162fe3711353bdcec1a3a2ef76f3db19d41b7c0", "message": "Merge remote-tracking branch 'origin/master' into issue-29-set-framework-name-and-version", "committedDate": "2020-06-10T12:57:38Z", "type": "commit"}]}