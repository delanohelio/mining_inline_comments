{"pr_number": 1508, "pr_title": "remove useless allocation in TraceState.copyOf()", "pr_createdAt": "2020-11-12T16:19:26Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1508", "timeline": [{"oid": "3cb3444b464c5c220e6ee2aa5a322829630bdfeb", "url": "https://github.com/elastic/apm-agent-java/commit/3cb3444b464c5c220e6ee2aa5a322829630bdfeb", "message": "remove useless copy", "committedDate": "2020-11-12T15:59:35Z", "type": "commit"}, {"oid": "41fcc9d9a0bd16e58fe846804b241c654d568942", "url": "https://github.com/elastic/apm-agent-java/commit/41fcc9d9a0bd16e58fe846804b241c654d568942", "message": "more efficient array copy", "committedDate": "2020-11-12T16:19:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcxMzE1OQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1508#discussion_r523713159", "bodyText": "We cannot do that - this leaks one TraceState's member (the header field) to another. Given that these are recyclable (reused) objects means it can be a mess.", "author": "eyalkoren", "createdAt": "2020-11-15T06:07:55Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java", "diffHunk": "@@ -65,10 +65,15 @@ public void copyFrom(TraceState other) {\n         sampleRate = other.sampleRate;\n         sizeLimit = other.sizeLimit;\n         tracestate.clear();\n-        // copy and make sure we have the immutable variant\n+\n+        // While this is not a deep-copy and we don't explicitly make it immutable by using CharSequence.\n+        // It's not required as entries are never modified once added.\n+        // Doing so allows to bypass any copy for String/StringBuilder in the collection\n         for (int i = 0; i < other.tracestate.size(); i++) {\n-            tracestate.add(other.tracestate.get(i).toString());\n+            //noinspection UseBulkOperation\n+            tracestate.add(other.tracestate.get(i));", "originalCommit": "41fcc9d9a0bd16e58fe846804b241c654d568942", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "07950380fe1a7a03321d89f609cbdab085e87a7f", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java\nindex bfce6cbd6..63602bc2b 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java\n\n@@ -58,25 +56,17 @@ public class TraceState implements Recyclable {\n         sizeLimit = DEFAULT_SIZE_LIMIT;\n         tracestate = new ArrayList<>(1);\n         rewriteBuffer = new StringBuilder();\n-        header = new StringBuilder(FULL_PREFIX.length());\n     }\n \n     public void copyFrom(TraceState other) {\n         sampleRate = other.sampleRate;\n         sizeLimit = other.sizeLimit;\n         tracestate.clear();\n-\n-        // While this is not a deep-copy and we don't explicitly make it immutable by using CharSequence.\n-        // It's not required as entries are never modified once added.\n-        // Doing so allows to bypass any copy for String/StringBuilder in the collection\n         for (int i = 0; i < other.tracestate.size(); i++) {\n             //noinspection UseBulkOperation\n             tracestate.add(other.tracestate.get(i));\n         }\n-\n         rewriteBuffer.setLength(0);\n-        header.setLength(0);\n-        header.append(other.header);\n     }\n \n     public void addTextHeader(String headerValue) {\n"}}, {"oid": "07950380fe1a7a03321d89f609cbdab085e87a7f", "url": "https://github.com/elastic/apm-agent-java/commit/07950380fe1a7a03321d89f609cbdab085e87a7f", "message": "use full header to minimize allocation", "committedDate": "2020-11-18T09:31:40Z", "type": "commit"}, {"oid": "043679b782da83fe205792b30a910fd7b1ba81e3", "url": "https://github.com/elastic/apm-agent-java/commit/043679b782da83fe205792b30a910fd7b1ba81e3", "message": "Merge branch 'master' of github.com:elastic/apm-agent-java into fix-tracestate-extra-allocation", "committedDate": "2020-11-18T12:36:18Z", "type": "commit"}, {"oid": "1662e1236a4932d519d2ae7133e799d7004a1956", "url": "https://github.com/elastic/apm-agent-java/commit/1662e1236a4932d519d2ae7133e799d7004a1956", "message": "Merge branch 'master' into fix-tracestate-extra-allocation", "committedDate": "2020-11-19T19:10:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwNjUyNA==", "url": "https://github.com/elastic/apm-agent-java/pull/1508#discussion_r528706524", "bodyText": "We can remove this one I guess\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final String rateString;", "author": "eyalkoren", "createdAt": "2020-11-23T13:35:13Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ConstantSampler.java", "diffHunk": "@@ -36,12 +37,15 @@\n \n     private final boolean decision;\n     private final double rate;\n+\n     private final String rateString;", "originalCommit": "043679b782da83fe205792b30a910fd7b1ba81e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d996b8b0778bee0f68c39152d48e8914d340330e", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ConstantSampler.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ConstantSampler.java\nindex a86b4b517..81aa036c6 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ConstantSampler.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ConstantSampler.java\n\n@@ -38,13 +38,11 @@ public class ConstantSampler implements Sampler {\n     private final boolean decision;\n     private final double rate;\n \n-    private final String rateString;\n     private final String traceStateHeader;\n \n     private ConstantSampler(boolean decision) {\n         this.decision = decision;\n         this.rate = decision ? 1.0d : 0.0d;\n-        this.rateString = Double.toString(rate);\n         this.traceStateHeader = TraceState.getHeaderValue(rate);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwODY5OQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1508#discussion_r528708699", "bodyText": "I didn't get this comment", "author": "eyalkoren", "createdAt": "2020-11-23T13:38:42Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ProbabilitySampler.java", "diffHunk": "@@ -56,16 +56,16 @@\n     private final double sampleRate;\n \n     // Because header value only contains sampling rate, we can cache it here\n-    private final String rateString;\n+    private final String traceStateHeader;\n \n     private ProbabilitySampler(double samplingRate) {\n-        higherBound = (long) (Long.MAX_VALUE * samplingRate);\n-        lowerBound = -higherBound;\n+        this.higherBound = (long) (Long.MAX_VALUE * samplingRate);\n+        this.lowerBound = -higherBound;\n         this.sampleRate = samplingRate;\n-        rateString = Double.toString(samplingRate);\n+        this.traceStateHeader = TraceState.getHeaderValue(samplingRate);\n     }\n \n-    public static Sampler of(double samplingRate) {\n+    public static Sampler of(double samplingRate) { // use 'Double' here", "originalCommit": "043679b782da83fe205792b30a910fd7b1ba81e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d996b8b0778bee0f68c39152d48e8914d340330e", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ProbabilitySampler.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ProbabilitySampler.java\nindex df1609914..91d945a83 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ProbabilitySampler.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ProbabilitySampler.java\n\n@@ -65,7 +65,7 @@ public class ProbabilitySampler implements Sampler {\n         this.traceStateHeader = TraceState.getHeaderValue(samplingRate);\n     }\n \n-    public static Sampler of(double samplingRate) { // use 'Double' here\n+    public static Sampler of(double samplingRate) {\n         if (samplingRate == 1) {\n             return ConstantSampler.of(true);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwOTkwNw==", "url": "https://github.com/elastic/apm-agent-java/pull/1508#discussion_r528709907", "bodyText": "\ud83d\udc4d  Can be added to the javadoc", "author": "eyalkoren", "createdAt": "2020-11-23T13:40:38Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/Sampler.java", "diffHunk": "@@ -57,8 +57,10 @@\n      */\n     double getSampleRate();\n \n+    // While header is not related to sampler itself, putting this here allows to reuse the same\n+    // String instance as long as the sample rate does not change to minimize allocation", "originalCommit": "043679b782da83fe205792b30a910fd7b1ba81e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d996b8b0778bee0f68c39152d48e8914d340330e", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/Sampler.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/Sampler.java\nindex 9058fd96f..ad0964fd2 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/Sampler.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/Sampler.java\n\n@@ -57,10 +57,14 @@ public interface Sampler {\n      */\n     double getSampleRate();\n \n-    // While header is not related to sampler itself, putting this here allows to reuse the same\n-    // String instance as long as the sample rate does not change to minimize allocation\n+\n     /**\n-     * @return sample rate as String header for context propagation\n+     * @return sample rate as (constant) header for context propagation\n+     *\n+     * <p>\n+     * While the {@code tracestate} header is not related to sampler itself, putting this here allows to reuse the same\n+     * {@link String} instance as long as the sample rate does not change to minimize allocation\n+     * </p>\n      */\n     String getTraceStateHeader();\n }\n"}}, {"oid": "d996b8b0778bee0f68c39152d48e8914d340330e", "url": "https://github.com/elastic/apm-agent-java/commit/d996b8b0778bee0f68c39152d48e8914d340330e", "message": "cleanup PR", "committedDate": "2020-11-23T19:00:46Z", "type": "commit"}, {"oid": "48ed43808bd26a3fde46495fdb1a27a431f77b09", "url": "https://github.com/elastic/apm-agent-java/commit/48ed43808bd26a3fde46495fdb1a27a431f77b09", "message": "Merge branch 'master' of github.com:elastic/apm-agent-java into fix-tracestate-extra-allocation", "committedDate": "2020-11-24T15:08:23Z", "type": "commit"}, {"oid": "76e6165a952fa9308e9a0d484556bd9b84d4fe6b", "url": "https://github.com/elastic/apm-agent-java/commit/76e6165a952fa9308e9a0d484556bd9b84d4fe6b", "message": "update changelog", "committedDate": "2020-11-24T15:10:02Z", "type": "commit"}]}