{"pr_number": 1360, "pr_title": "Lazily create profiler temporary files", "pr_createdAt": "2020-08-27T15:43:54Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1360", "timeline": [{"oid": "47e37e1c7b2d724d771cda8093900e91830cf0e4", "url": "https://github.com/elastic/apm-agent-java/commit/47e37e1c7b2d724d771cda8093900e91830cf0e4", "message": "lazy profiler init", "committedDate": "2020-08-27T14:18:32Z", "type": "commit"}, {"oid": "c67e46b4c4b365b3b4260cb4554e5a839d2045c5", "url": "https://github.com/elastic/apm-agent-java/commit/c67e46b4c4b365b3b4260cb4554e5a839d2045c5", "message": "a bit of javadoc always help", "committedDate": "2020-08-27T14:24:49Z", "type": "commit"}, {"oid": "dc84da1da916c46324c6c5ffaad2e1f01abd93f5", "url": "https://github.com/elastic/apm-agent-java/commit/dc84da1da916c46324c6c5ffaad2e1f01abd93f5", "message": "make profiler work again", "committedDate": "2020-08-27T15:35:01Z", "type": "commit"}, {"oid": "0e4c13d410f868b61ad02a544c3349a9131d037b", "url": "https://github.com/elastic/apm-agent-java/commit/0e4c13d410f868b61ad02a544c3349a9131d037b", "message": "test profiler temp file management", "committedDate": "2020-08-31T14:11:12Z", "type": "commit"}, {"oid": "d6f80d147315f671d66f553334ed5d68d0149b1c", "url": "https://github.com/elastic/apm-agent-java/commit/d6f80d147315f671d66f553334ed5d68d0149b1c", "message": "update changelog", "committedDate": "2020-08-31T14:13:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyMjU0Nw==", "url": "https://github.com/elastic/apm-agent-java/pull/1360#discussion_r484222547", "bodyText": "@SylvainJuge @felixbarny I think this is a source of a major leak of sockets", "author": "eyalkoren", "createdAt": "2020-09-07T07:05:53Z", "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/SamplingProfiler.java", "diffHunk": "@@ -209,6 +228,20 @@ public CallTree createInstance() {\n         });\n         this.jfrFile = jfrFile;\n         activationEventsBuffer = ByteBuffer.allocateDirect(ACTIVATION_EVENTS_BUFFER_SIZE);\n+        this.activationEventsFile = activationEventsFile;\n+    }\n+\n+    private synchronized void createFilesIfRequired() throws IOException {\n+        if (jfrFile == null || !jfrFile.exists()) {\n+            jfrFile = File.createTempFile(\"apm-traces-\", \".jfr\");\n+            jfrFile.deleteOnExit();\n+            canDeleteJfrFile = true;\n+        }\n+        if (activationEventsFile == null || !activationEventsFile.exists()) {\n+            activationEventsFile = File.createTempFile(\"apm-activation-events-\", \".bin\");\n+            activationEventsFile.deleteOnExit();\n+            canDeleteActivationEventsFile = true;\n+        }\n         activationEventsFileChannel = FileChannel.open(activationEventsFile.toPath(), StandardOpenOption.READ, StandardOpenOption.WRITE);", "originalCommit": "d6f80d147315f671d66f553334ed5d68d0149b1c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}