{"pr_number": 1458, "pr_title": "Bootstrap lookup fix", "pr_createdAt": "2020-10-27T13:40:53Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1458", "timeline": [{"oid": "9dcaff30fc072d5a998a5d37406a0e60c0c043aa", "url": "https://github.com/elastic/apm-agent-java/commit/9dcaff30fc072d5a998a5d37406a0e60c0c043aa", "message": "Fix MethodHandle lookup in indy bootstrap", "committedDate": "2020-10-27T13:25:24Z", "type": "commit"}, {"oid": "f7cc61deaf0062f86a49ce1912257cadb84d8be0", "url": "https://github.com/elastic/apm-agent-java/commit/f7cc61deaf0062f86a49ce1912257cadb84d8be0", "message": "Remove non-functioning tests", "committedDate": "2020-10-27T13:27:03Z", "type": "commit"}, {"oid": "053be345343a2f1c80a42ac36e480cc51c10b8a2", "url": "https://github.com/elastic/apm-agent-java/commit/053be345343a2f1c80a42ac36e480cc51c10b8a2", "message": "Restore throw", "committedDate": "2020-10-27T13:31:10Z", "type": "commit"}, {"oid": "a3272cd1a67d270eed7cdbb36c0636c4cb99b58c", "url": "https://github.com/elastic/apm-agent-java/commit/a3272cd1a67d270eed7cdbb36c0636c4cb99b58c", "message": "Add changelog", "committedDate": "2020-10-27T13:41:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcxMjg4Nw==", "url": "https://github.com/elastic/apm-agent-java/pull/1458#discussion_r512712887", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        pluginClasses.add(LookupExposer.class.getName());\n          \n          \n            \n                        pluginClasses.add(\"co.elastic.apm.agent.bci.classloading.LookupExposer\");\n          \n      \n    \n    \n  \n\nLet's only load it from the plugin class loaders.", "author": "eyalkoren", "createdAt": "2020-10-27T13:56:44Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java", "diffHunk": "@@ -272,12 +274,13 @@ public static ConstantCallSite bootstrap(MethodHandles.Lookup lookup,\n             MethodHandle instrumentedMethod = args.length >= 5 ? (MethodHandle) args[4] : null;\n \n             ClassLoader adviceClassLoader = ElasticApmAgent.getClassLoader(adviceClassName);\n-            List<String> pluginClasses;\n+            List<String> pluginClasses = new ArrayList<>();\n             if (adviceClassLoader instanceof ExternalPluginClassLoader) {\n-                pluginClasses = ((ExternalPluginClassLoader) adviceClassLoader).getClassNames();\n+                pluginClasses.addAll(((ExternalPluginClassLoader) adviceClassLoader).getClassNames());\n             } else {\n-                pluginClasses = getClassNamesFromBundledPlugin(adviceClassName, adviceClassLoader);\n+                pluginClasses.addAll(getClassNamesFromBundledPlugin(adviceClassName, adviceClassLoader));\n             }\n+            pluginClasses.add(LookupExposer.class.getName());", "originalCommit": "a3272cd1a67d270eed7cdbb36c0636c4cb99b58c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28869ad5f0bbbd256ff6fdbbf5c1c9de9d324a37", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java\nindex 573d513f9..6b8594fc8 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java\n\n@@ -280,7 +280,7 @@ public class IndyBootstrap {\n             } else {\n                 pluginClasses.addAll(getClassNamesFromBundledPlugin(adviceClassName, adviceClassLoader));\n             }\n-            pluginClasses.add(LookupExposer.class.getName());\n+            pluginClasses.add(\"co.elastic.apm.agent.bci.classloading.LookupExposer\");\n             ClassLoader pluginClassLoader = IndyPluginClassLoaderFactory.getOrCreatePluginClassLoader(\n                 lookup.lookupClass().getClassLoader(),\n                 pluginClasses,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcxMzU5NA==", "url": "https://github.com/elastic/apm-agent-java/pull/1458#discussion_r512713594", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Class<LookupExposer> lookupExposer = (Class<LookupExposer>) pluginClassLoader.loadClass(LookupExposer.class.getName());\n          \n          \n            \n                        Class<LookupExposer> lookupExposer = (Class<LookupExposer>) pluginClassLoader.loadClass(\"co.elastic.apm.agent.bci.classloading.LookupExposer\");", "author": "eyalkoren", "createdAt": "2020-10-27T13:57:33Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java", "diffHunk": "@@ -287,7 +290,10 @@ public static ConstantCallSite bootstrap(MethodHandles.Lookup lookup,\n                     // also, this plugin is used as a dependency in other plugins\n                     .or(nameStartsWith(\"co.elastic.apm.agent.concurrent\")));\n             Class<?> adviceInPluginCL = pluginClassLoader.loadClass(adviceClassName);\n-            MethodHandle methodHandle = MethodHandles.lookup().findStatic(adviceInPluginCL, adviceMethodName, adviceMethodType);\n+            Class<LookupExposer> lookupExposer = (Class<LookupExposer>) pluginClassLoader.loadClass(LookupExposer.class.getName());", "originalCommit": "a3272cd1a67d270eed7cdbb36c0636c4cb99b58c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28869ad5f0bbbd256ff6fdbbf5c1c9de9d324a37", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java\nindex 573d513f9..6b8594fc8 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java\n\n@@ -290,7 +290,7 @@ public class IndyBootstrap {\n                     // also, this plugin is used as a dependency in other plugins\n                     .or(nameStartsWith(\"co.elastic.apm.agent.concurrent\")));\n             Class<?> adviceInPluginCL = pluginClassLoader.loadClass(adviceClassName);\n-            Class<LookupExposer> lookupExposer = (Class<LookupExposer>) pluginClassLoader.loadClass(LookupExposer.class.getName());\n+            Class<LookupExposer> lookupExposer = (Class<LookupExposer>) pluginClassLoader.loadClass(\"co.elastic.apm.agent.bci.classloading.LookupExposer\");\n             // can't use MethodHandle.lookup(), see also https://github.com/elastic/apm-agent-java/issues/1450\n             MethodHandles.Lookup indyLookup = (MethodHandles.Lookup) lookupExposer.getMethod(\"getLookup\").invoke(null);\n             MethodHandle methodHandle = indyLookup.findStatic(adviceInPluginCL, adviceMethodName, adviceMethodType);\n"}}, {"oid": "28869ad5f0bbbd256ff6fdbbf5c1c9de9d324a37", "url": "https://github.com/elastic/apm-agent-java/commit/28869ad5f0bbbd256ff6fdbbf5c1c9de9d324a37", "message": "Apply suggestions from code review\n\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>", "committedDate": "2020-10-27T14:09:52Z", "type": "commit"}]}