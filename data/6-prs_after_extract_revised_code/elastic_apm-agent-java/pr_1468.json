{"pr_number": 1468, "pr_title": "Override IndyBootstrapDispatcher class module", "pr_createdAt": "2020-11-02T15:27:12Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1468", "timeline": [{"oid": "3661a929adcfd671f9d463b2f1e6957bd121aa36", "url": "https://github.com/elastic/apm-agent-java/commit/3661a929adcfd671f9d463b2f1e6957bd121aa36", "message": "Override IntyBootstrapDispather class module", "committedDate": "2020-11-01T17:39:17Z", "type": "commit"}, {"oid": "40287fcee8ead155acff6a8c35fbf5503c2985b8", "url": "https://github.com/elastic/apm-agent-java/commit/40287fcee8ead155acff6a8c35fbf5503c2985b8", "message": "Override IndyBootstrapDispatcher class module", "committedDate": "2020-11-02T15:22:15Z", "type": "commit"}, {"oid": "512d9a4af5017f279641d7afb52c03522c617a0e", "url": "https://github.com/elastic/apm-agent-java/commit/512d9a4af5017f279641d7afb52c03522c617a0e", "message": "Merge branch 'java-modules-support' into IndyBootstrapDispatcher-module-override", "committedDate": "2020-11-03T06:25:25Z", "type": "commit"}, {"oid": "b0e24f223c4a429c5eea360160c494bd5435352f", "url": "https://github.com/elastic/apm-agent-java/commit/b0e24f223c4a429c5eea360160c494bd5435352f", "message": "Small merge fix", "committedDate": "2020-11-03T06:29:57Z", "type": "commit"}, {"oid": "8432ac24731c7d087cf76cf1a61ddaaecf79a307", "url": "https://github.com/elastic/apm-agent-java/commit/8432ac24731c7d087cf76cf1a61ddaaecf79a307", "message": "Doing it the right way", "committedDate": "2020-11-03T10:06:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNzg2Nw==", "url": "https://github.com/elastic/apm-agent-java/pull/1468#discussion_r517307867", "bodyText": "[minor] make this log message specific to J9 JVM as it won't happen with other JVMs", "author": "SylvainJuge", "createdAt": "2020-11-04T12:27:25Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java", "diffHunk": "@@ -196,14 +203,40 @@ public static Method getIndyBootstrapMethod() {\n     /**\n      * Injects the {@code java.lang.IndyBootstrapDispatcher} class into the bootstrap class loader if it wasn't already.\n      */\n-    private static Class<?> initIndyBootstrap() throws Exception {\n+    private static Class<?> initIndyBootstrap(final Logger logger) throws Exception {\n+        Class<?> indyBootstrapDispatcherClass;\n         try {\n-            return Class.forName(INDY_BOOTSTRAP_CLASS_NAME, false, null);\n+            indyBootstrapDispatcherClass = Class.forName(INDY_BOOTSTRAP_CLASS_NAME, false, null);\n         } catch (ClassNotFoundException e) {\n             byte[] bootstrapClass = IOUtils.readToBytes(ClassLoader.getSystemClassLoader().getResourceAsStream(INDY_BOOTSTRAP_RESOURCE));\n             ClassInjector.UsingUnsafe.ofBootLoader().injectRaw(Collections.singletonMap(INDY_BOOTSTRAP_CLASS_NAME, bootstrapClass));\n+            indyBootstrapDispatcherClass = Class.forName(INDY_BOOTSTRAP_CLASS_NAME, false, null);\n+        }\n+\n+        if (JvmRuntimeInfo.getMajorVersion() >= 9 && JvmRuntimeInfo.isJ9VM()) {\n+            try {\n+                logger.info(\"Overriding IndyBootstrapDispatcher class's module to java.base module\");", "originalCommit": "8432ac24731c7d087cf76cf1a61ddaaecf79a307", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f8be726f20f27cb9fd5b2974cde0e14a3517ab1b", "chunk": "diff --git a/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java b/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java\nindex c02b59910..4cede00f9 100644\n--- a/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java\n+++ b/apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java\n\n@@ -215,7 +215,7 @@ public class IndyBootstrap {\n \n         if (JvmRuntimeInfo.getMajorVersion() >= 9 && JvmRuntimeInfo.isJ9VM()) {\n             try {\n-                logger.info(\"Overriding IndyBootstrapDispatcher class's module to java.base module\");\n+                logger.info(\"Overriding IndyBootstrapDispatcher class's module to java.base module. This is required in J9 VMs.\");\n                 setJavaBaseModule(indyBootstrapDispatcherClass);\n             } catch (Throwable throwable) {\n                 logger.warn(\"Failed to setup proper module for the IndyBootstrapDispatcher class, instrumentation may fail\", throwable);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMxMTA3MQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1468#discussion_r517311071", "bodyText": "[minor] use assertJ assertions instead of Junit ones", "author": "SylvainJuge", "createdAt": "2020-11-04T12:33:38Z", "path": "apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*-\n+ * #%L\n+ * Elastic APM Java agent\n+ * %%\n+ * Copyright (C) 2018 - 2020 Elastic and contributors\n+ * %%\n+ * Licensed to Elasticsearch B.V. under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch B.V. licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * #L%\n+ */\n+package co.elastic.apm.agent.bci;\n+\n+import co.elastic.apm.agent.AbstractInstrumentationTest;\n+import net.bytebuddy.dynamic.loading.ClassInjector;\n+import org.junit.jupiter.api.Test;\n+import org.stagemonitor.util.IOUtils;\n+\n+import java.io.InputStream;\n+import java.util.Collections;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;", "originalCommit": "8432ac24731c7d087cf76cf1a61ddaaecf79a307", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f8be726f20f27cb9fd5b2974cde0e14a3517ab1b", "chunk": "diff --git a/apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java b/apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java\nindex a8a8c6eb8..e69a886d2 100644\n--- a/apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java\n+++ b/apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java\n\n@@ -32,22 +32,22 @@ import org.stagemonitor.util.IOUtils;\n import java.io.InputStream;\n import java.util.Collections;\n \n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.assertj.core.api.Assertions.assertThat;\n \n class IndyBootstrapTest extends AbstractInstrumentationTest {\n \n     @Test\n     void testSetJavaBaseModule() throws Throwable {\n         Module javaBaseModule = Class.class.getModule();\n-        assertNotEquals(IndyBootstrapTest.class.getModule(), javaBaseModule);\n+        assertThat(IndyBootstrapTest.class.getModule()).isNotEqualTo(javaBaseModule);\n \n-        // In order to test this functionality, IndyBootstrapDispatcherModuleSetter needs to be loaded from the Boot CL\n+        // In order to test this functionality, IndyBootstrapDispatcherModuleSetter needs to be loaded from the Boot CL.\n+        // We don't mind loading it with the test's class loader as well only to get it's class file\n         InputStream classFileAsStream = IndyBootstrapDispatcherModuleSetter.class.getResourceAsStream(\"IndyBootstrapDispatcherModuleSetter.class\");\n         byte[] bootstrapClass = IOUtils.readToBytes(classFileAsStream);\n         ClassInjector.UsingUnsafe.ofBootLoader().injectRaw(Collections.singletonMap(IndyBootstrapDispatcherModuleSetter.class.getName(), bootstrapClass));\n \n         IndyBootstrap.setJavaBaseModule(IndyBootstrapTest.class);\n-        assertEquals(IndyBootstrapTest.class.getModule(), javaBaseModule);\n+        assertThat(IndyBootstrapTest.class.getModule()).isEqualTo(javaBaseModule);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMxNDQyNQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1468#discussion_r517314425", "bodyText": "[question] Would it be possible to have an exception thrown with an explicit message when this method is called and IndyBootstrapDispatcherModuleSetter hasn't been loaded from the right classloader ? If yes, that might help to diagnose any unexpected state in the field.", "author": "SylvainJuge", "createdAt": "2020-11-04T12:39:57Z", "path": "apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*-\n+ * #%L\n+ * Elastic APM Java agent\n+ * %%\n+ * Copyright (C) 2018 - 2020 Elastic and contributors\n+ * %%\n+ * Licensed to Elasticsearch B.V. under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch B.V. licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * #L%\n+ */\n+package co.elastic.apm.agent.bci;\n+\n+import co.elastic.apm.agent.AbstractInstrumentationTest;\n+import net.bytebuddy.dynamic.loading.ClassInjector;\n+import org.junit.jupiter.api.Test;\n+import org.stagemonitor.util.IOUtils;\n+\n+import java.io.InputStream;\n+import java.util.Collections;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+\n+class IndyBootstrapTest extends AbstractInstrumentationTest {\n+\n+    @Test\n+    void testSetJavaBaseModule() throws Throwable {\n+        Module javaBaseModule = Class.class.getModule();\n+        assertNotEquals(IndyBootstrapTest.class.getModule(), javaBaseModule);\n+\n+        // In order to test this functionality, IndyBootstrapDispatcherModuleSetter needs to be loaded from the Boot CL\n+        InputStream classFileAsStream = IndyBootstrapDispatcherModuleSetter.class.getResourceAsStream(\"IndyBootstrapDispatcherModuleSetter.class\");\n+        byte[] bootstrapClass = IOUtils.readToBytes(classFileAsStream);\n+        ClassInjector.UsingUnsafe.ofBootLoader().injectRaw(Collections.singletonMap(IndyBootstrapDispatcherModuleSetter.class.getName(), bootstrapClass));\n+\n+        IndyBootstrap.setJavaBaseModule(IndyBootstrapTest.class);", "originalCommit": "8432ac24731c7d087cf76cf1a61ddaaecf79a307", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4NTQ3Nw==", "url": "https://github.com/elastic/apm-agent-java/pull/1468#discussion_r517385477", "bodyText": "This can't happen - the setJavaBaseModule method tries to load it from the bootstrap CL explicitly, so failing to inject it there will result with ClassNotFoundException (which I think is explanatory enough).\nAs you can see here, I do load it with the test's class loader, but its single method is never invoked on any class that is not loaded correctly.", "author": "eyalkoren", "createdAt": "2020-11-04T14:31:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMxNDQyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f8be726f20f27cb9fd5b2974cde0e14a3517ab1b", "chunk": "diff --git a/apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java b/apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java\nindex a8a8c6eb8..e69a886d2 100644\n--- a/apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java\n+++ b/apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java\n\n@@ -32,22 +32,22 @@ import org.stagemonitor.util.IOUtils;\n import java.io.InputStream;\n import java.util.Collections;\n \n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.assertj.core.api.Assertions.assertThat;\n \n class IndyBootstrapTest extends AbstractInstrumentationTest {\n \n     @Test\n     void testSetJavaBaseModule() throws Throwable {\n         Module javaBaseModule = Class.class.getModule();\n-        assertNotEquals(IndyBootstrapTest.class.getModule(), javaBaseModule);\n+        assertThat(IndyBootstrapTest.class.getModule()).isNotEqualTo(javaBaseModule);\n \n-        // In order to test this functionality, IndyBootstrapDispatcherModuleSetter needs to be loaded from the Boot CL\n+        // In order to test this functionality, IndyBootstrapDispatcherModuleSetter needs to be loaded from the Boot CL.\n+        // We don't mind loading it with the test's class loader as well only to get it's class file\n         InputStream classFileAsStream = IndyBootstrapDispatcherModuleSetter.class.getResourceAsStream(\"IndyBootstrapDispatcherModuleSetter.class\");\n         byte[] bootstrapClass = IOUtils.readToBytes(classFileAsStream);\n         ClassInjector.UsingUnsafe.ofBootLoader().injectRaw(Collections.singletonMap(IndyBootstrapDispatcherModuleSetter.class.getName(), bootstrapClass));\n \n         IndyBootstrap.setJavaBaseModule(IndyBootstrapTest.class);\n-        assertEquals(IndyBootstrapTest.class.getModule(), javaBaseModule);\n+        assertThat(IndyBootstrapTest.class.getModule()).isEqualTo(javaBaseModule);\n     }\n }\n"}}, {"oid": "bc5540845c4d760d2269d7792fbe5115c5a55f9c", "url": "https://github.com/elastic/apm-agent-java/commit/bc5540845c4d760d2269d7792fbe5115c5a55f9c", "message": "Merge remote-tracking branch 'upstream/master' into IndyBootstrapDispatcher-module-override", "committedDate": "2020-11-04T14:38:57Z", "type": "commit"}, {"oid": "f8be726f20f27cb9fd5b2974cde0e14a3517ab1b", "url": "https://github.com/elastic/apm-agent-java/commit/f8be726f20f27cb9fd5b2974cde0e14a3517ab1b", "message": "Applying review comments and updating CHANGELOG", "committedDate": "2020-11-04T14:43:04Z", "type": "commit"}]}