{"pr_number": 1020, "pr_title": "Add log correlation for log4j and log4j2", "pr_createdAt": "2020-02-04T14:19:56Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1020", "timeline": [{"oid": "a7f6f6d65b1691f2db2145803f617f9ab7e68463", "url": "https://github.com/elastic/apm-agent-java/commit/a7f6f6d65b1691f2db2145803f617f9ab7e68463", "message": "Add log correlation for log4j and log4j2\n\ncloses #922", "committedDate": "2020-02-04T14:17:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2NDQ0Nw==", "url": "https://github.com/elastic/apm-agent-java/pull/1020#discussion_r376864447", "bodyText": "The returned message is not really used, but change it to something generic so that it won't be misleading (same for the comment)", "author": "eyalkoren", "createdAt": "2020-02-10T04:29:31Z", "path": "apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java", "diffHunk": "@@ -41,44 +41,101 @@\n \n public class Slf4JMdcActivationListener implements ActivationListener {\n \n-    // the string concatenation prevents the shade plugin from relocating org.slf4j.MDC to co.elastic.apm.agent.shaded.slf4j.MDC\n-    // the toString prevents constant folding, which would also make the shade plugin relocate\n-    private static final String ORG_SLF4J_MDC = \"org.\" + \"slf4j.MDC\".toString();\n+    // prevents the shade plugin from relocating org.slf4j.MDC to co.elastic.apm.agent.shaded.slf4j.MDC\n+    private static final String SLF4J_MDC = \"org!slf4j!MDC\".replace('!', '.');\n+    private static final String LOG4J_MDC = \"org.apache.log4j.MDC\";\n+    private static final String LOG4J2_MDC = \"org.apache.logging.log4j.ThreadContext\";\n+\n     private static final String TRACE_ID = \"trace.id\";\n     private static final String TRANSACTION_ID = \"transaction.id\";\n     private static final Logger logger = LoggerFactory.getLogger(Slf4JMdcActivationListener.class);\n \n     // Never invoked- only used for caching ClassLoaders that can't load the slf4j MDC class\n     private static final MethodHandle NOOP = MethodHandles.constant(String.class, \"ClassLoader cannot load slf4j API\");", "originalCommit": "a7f6f6d65b1691f2db2145803f617f9ab7e68463", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f2c99ecf57fa88042cd87fd09ae1e2d12cc86f2", "chunk": "diff --git a/apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java b/apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/mdc/MdcActivationListener.java\nsimilarity index 96%\nrename from apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java\nrename to apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/mdc/MdcActivationListener.java\nindex 55d0c4e85..a5e2519a4 100644\n--- a/apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java\n+++ b/apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/mdc/MdcActivationListener.java\n\n@@ -39,7 +39,7 @@ import java.lang.invoke.MethodHandle;\n import java.lang.invoke.MethodHandles;\n import java.lang.invoke.MethodType;\n \n-public class Slf4JMdcActivationListener implements ActivationListener {\n+public class MdcActivationListener implements ActivationListener {\n \n     // prevents the shade plugin from relocating org.slf4j.MDC to co.elastic.apm.agent.shaded.slf4j.MDC\n     private static final String SLF4J_MDC = \"org!slf4j!MDC\".replace('!', '.');\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2NTUzNw==", "url": "https://github.com/elastic/apm-agent-java/pull/1020#discussion_r376865537", "bodyText": "What is this?", "author": "eyalkoren", "createdAt": "2020-02-10T04:36:54Z", "path": "apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListenerTest.java", "diffHunk": "@@ -49,12 +53,25 @@\n \n     private LoggingConfiguration loggingConfiguration;\n     private CoreConfiguration coreConfiguration;\n+    private Boolean log4jMdcWorking;\n+    private ExecutorService executorService = Executors.newSingleThreadExecutor();\n \n     @BeforeEach\n-    void setUp() {\n+    void setUp() throws Exception {\n+        org.apache.log4j.MDC.put(\"test\", true);\n+        log4jMdcWorking = (Boolean) org.apache.log4j.MDC.get(\"test\");", "originalCommit": "a7f6f6d65b1691f2db2145803f617f9ab7e68463", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkwNTQzOA==", "url": "https://github.com/elastic/apm-agent-java/pull/1020#discussion_r376905438", "bodyText": "Log4j thinks that Java 11 is Java 1 and disables ThreadLocals", "author": "felixbarny", "createdAt": "2020-02-10T07:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2NTUzNw=="}], "type": "inlineReview", "revised_code": {"commit": "7f2c99ecf57fa88042cd87fd09ae1e2d12cc86f2", "chunk": "diff --git a/apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListenerTest.java b/apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/mdc/MdcActivationListenerTest.java\nsimilarity index 99%\nrename from apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListenerTest.java\nrename to apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/mdc/MdcActivationListenerTest.java\nindex 5614c246c..2c931a02a 100644\n--- a/apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListenerTest.java\n+++ b/apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/mdc/MdcActivationListenerTest.java\n\n@@ -49,7 +49,7 @@ import static org.assertj.core.api.Assertions.assertThat;\n import static org.assertj.core.api.Assertions.assertThatCode;\n import static org.mockito.Mockito.when;\n \n-class Slf4JMdcActivationListenerTest extends AbstractInstrumentationTest {\n+class MdcActivationListenerTest extends AbstractInstrumentationTest {\n \n     private LoggingConfiguration loggingConfiguration;\n     private CoreConfiguration coreConfiguration;\n"}}, {"oid": "7f2c99ecf57fa88042cd87fd09ae1e2d12cc86f2", "url": "https://github.com/elastic/apm-agent-java/commit/7f2c99ecf57fa88042cd87fd09ae1e2d12cc86f2", "message": "Apply suggestions from code review", "committedDate": "2020-02-10T07:54:27Z", "type": "commit"}]}