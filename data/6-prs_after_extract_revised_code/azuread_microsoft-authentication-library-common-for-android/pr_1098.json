{"pr_number": 1098, "pr_title": "Clean up tokens after writing the new one, to avoid having cache momentarily empty of RTs", "pr_createdAt": "2020-10-27T19:08:37Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098", "timeline": [{"oid": "1d1bd984e8355fa2692eac8414e01c5f31eefbdd", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1d1bd984e8355fa2692eac8414e01c5f31eefbdd", "message": "WIP -- Clean up tokens after writing the new one, to avoid having\ncache momentarily empty of RTs", "committedDate": "2020-10-27T18:58:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1Njg2Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512956862", "bodyText": "Remove before merging", "author": "iambmelt", "createdAt": "2020-10-27T19:09:09Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -312,12 +312,16 @@ public ICacheRecord save(@NonNull final GenericOAuth2Strategy oAuth2Strategy,\n         );\n \n         // remove old refresh token if it's MRRT or FRT\n-        removeRefreshTokenIfNeeded(accountToSave, refreshTokenToSave);\n+        // removeRefreshTokenIfNeeded(accountToSave, refreshTokenToSave);", "originalCommit": "1d1bd984e8355fa2692eac8414e01c5f31eefbdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1ODczOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512958739", "bodyText": "03b1279", "author": "iambmelt", "createdAt": "2020-10-27T19:12:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1Njg2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "03b1279d0cb5e49e58cb53b73f6093049acc0896", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\nindex 61b774932..a0364391f 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n\n@@ -311,15 +311,11 @@ public class MsalOAuth2TokenCache\n                 idTokenToSave\n         );\n \n-        // remove old refresh token if it's MRRT or FRT\n-        // removeRefreshTokenIfNeeded(accountToSave, refreshTokenToSave);\n-\n         // Save the Account and Credentials...\n         saveAccounts(accountToSave);\n         saveCredentialsInternal(accessTokenToSave, refreshTokenToSave, idTokenToSave);\n \n-        // Add a new method, where we delete all of the refresh tokens in the cache\n-        // except for the one that we just created....\n+        // Remove old refresh tokens (except for the one we just saved) if it's MRRT or FRT\n         removeAllRefreshTokensExcept(accountToSave, refreshTokenToSave);\n \n         final CacheRecord result = new CacheRecord();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1Njk3Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512956976", "bodyText": "Update this comment", "author": "iambmelt", "createdAt": "2020-10-27T19:09:20Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -312,12 +312,16 @@ public ICacheRecord save(@NonNull final GenericOAuth2Strategy oAuth2Strategy,\n         );\n \n         // remove old refresh token if it's MRRT or FRT\n-        removeRefreshTokenIfNeeded(accountToSave, refreshTokenToSave);\n+        // removeRefreshTokenIfNeeded(accountToSave, refreshTokenToSave);\n \n         // Save the Account and Credentials...\n         saveAccounts(accountToSave);\n         saveCredentialsInternal(accessTokenToSave, refreshTokenToSave, idTokenToSave);\n \n+        // Add a new method, where we delete all of the refresh tokens in the cache", "originalCommit": "1d1bd984e8355fa2692eac8414e01c5f31eefbdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1ODc4Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512958782", "bodyText": "03b1279", "author": "iambmelt", "createdAt": "2020-10-27T19:12:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1Njk3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "03b1279d0cb5e49e58cb53b73f6093049acc0896", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\nindex 61b774932..a0364391f 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n\n@@ -311,15 +311,11 @@ public class MsalOAuth2TokenCache\n                 idTokenToSave\n         );\n \n-        // remove old refresh token if it's MRRT or FRT\n-        // removeRefreshTokenIfNeeded(accountToSave, refreshTokenToSave);\n-\n         // Save the Account and Credentials...\n         saveAccounts(accountToSave);\n         saveCredentialsInternal(accessTokenToSave, refreshTokenToSave, idTokenToSave);\n \n-        // Add a new method, where we delete all of the refresh tokens in the cache\n-        // except for the one that we just created....\n+        // Remove old refresh tokens (except for the one we just saved) if it's MRRT or FRT\n         removeAllRefreshTokensExcept(accountToSave, refreshTokenToSave);\n \n         final CacheRecord result = new CacheRecord();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1NzE5Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512957196", "bodyText": "Rename this param", "author": "iambmelt", "createdAt": "2020-10-27T19:09:42Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -327,6 +331,129 @@ public ICacheRecord save(@NonNull final GenericOAuth2Strategy oAuth2Strategy,\n         return result;\n     }\n \n+    private void removeAllRefreshTokensExcept(@NonNull final AccountRecord accountRecord,\n+                                              @NonNull final RefreshTokenRecord refreshTokenRecord) {", "originalCommit": "1d1bd984e8355fa2692eac8414e01c5f31eefbdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1OTM1Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512959353", "bodyText": "5cdc936", "author": "iambmelt", "createdAt": "2020-10-27T19:13:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1NzE5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5cdc9364ec4c04281f6b12f1e854edd1e4e10c52", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\nindex 61b774932..cd7d08c46 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n\n@@ -332,11 +328,11 @@ public class MsalOAuth2TokenCache\n     }\n \n     private void removeAllRefreshTokensExcept(@NonNull final AccountRecord accountRecord,\n-                                              @NonNull final RefreshTokenRecord refreshTokenRecord) {\n+                                              @NonNull final RefreshTokenRecord deletionExemptRefreshToken) {\n         // Delete all of the refresh tokens associated with this account, except for the provided one\n         final String methodName = \":removeAllRefreshTokensExcept\";\n         final boolean isFamilyRefreshToken = !StringExtensions.isNullOrBlank(\n-                refreshTokenRecord.getFamilyId()\n+                deletionExemptRefreshToken.getFamilyId()\n         );\n \n         Logger.info(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1NzI4Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512957282", "bodyText": "Add javadoc", "author": "iambmelt", "createdAt": "2020-10-27T19:09:48Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -327,6 +331,129 @@ public ICacheRecord save(@NonNull final GenericOAuth2Strategy oAuth2Strategy,\n         return result;\n     }\n \n+    private void removeAllRefreshTokensExcept(@NonNull final AccountRecord accountRecord,", "originalCommit": "1d1bd984e8355fa2692eac8414e01c5f31eefbdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk2MDcwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512960700", "bodyText": "905e9b3", "author": "iambmelt", "createdAt": "2020-10-27T19:15:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1NzI4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5cdc9364ec4c04281f6b12f1e854edd1e4e10c52", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\nindex 61b774932..cd7d08c46 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n\n@@ -332,11 +328,11 @@ public class MsalOAuth2TokenCache\n     }\n \n     private void removeAllRefreshTokensExcept(@NonNull final AccountRecord accountRecord,\n-                                              @NonNull final RefreshTokenRecord refreshTokenRecord) {\n+                                              @NonNull final RefreshTokenRecord deletionExemptRefreshToken) {\n         // Delete all of the refresh tokens associated with this account, except for the provided one\n         final String methodName = \":removeAllRefreshTokensExcept\";\n         final boolean isFamilyRefreshToken = !StringExtensions.isNullOrBlank(\n-                refreshTokenRecord.getFamilyId()\n+                deletionExemptRefreshToken.getFamilyId()\n         );\n \n         Logger.info(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1NzYwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512957600", "bodyText": "Add a comment", "author": "iambmelt", "createdAt": "2020-10-27T19:10:18Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -327,6 +331,129 @@ public ICacheRecord save(@NonNull final GenericOAuth2Strategy oAuth2Strategy,\n         return result;\n     }\n \n+    private void removeAllRefreshTokensExcept(@NonNull final AccountRecord accountRecord,\n+                                              @NonNull final RefreshTokenRecord refreshTokenRecord) {\n+        // Delete all of the refresh tokens associated with this account, except for the provided one\n+        final String methodName = \":removeAllRefreshTokensExcept\";\n+        final boolean isFamilyRefreshToken = !StringExtensions.isNullOrBlank(\n+                refreshTokenRecord.getFamilyId()\n+        );\n+\n+        Logger.info(\n+                TAG + methodName,\n+                \"isFamilyRefreshToken? [\" + isFamilyRefreshToken + \"]\"\n+        );\n+\n+        final boolean isMultiResourceCapable = MicrosoftAccount.AUTHORITY_TYPE_V1_V2.equals(\n+                accountRecord.getAuthorityType()\n+        );\n+\n+        Logger.info(\n+                TAG + methodName,\n+                \"isMultiResourceCapable? [\" + isMultiResourceCapable + \"]\"\n+        );\n+\n+        if (isFamilyRefreshToken || isMultiResourceCapable) {\n+            final String environment = accountRecord.getEnvironment();\n+            final String clientId = refreshTokenRecord.getClientId();\n+\n+            final int refreshTokensRemoved = removeRefreshTokensForAccountExcept(\n+                    accountRecord,\n+                    isFamilyRefreshToken,\n+                    environment,\n+                    clientId,\n+                    refreshTokenRecord\n+            );\n+\n+            Logger.info(\n+                    TAG + methodName,\n+                    \"Refresh tokens removed: [\" + refreshTokensRemoved + \"]\"\n+            );\n+\n+            if (refreshTokensRemoved > 1) {\n+                Logger.warn(\n+                        TAG + methodName,\n+                        \"Multiple refresh tokens found for Account.\"\n+                );\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Deletes all of the local refresh tokens on disk for the associated account, except for the\n+     * refresh token provided.\n+     *\n+     * @param accountRecord                    The {@link AccountRecord} for whome tokens should be deleted.\n+     * @param isFamilyRefreshToken             Indicates whether or not the tokens targeted for deletion should\n+     *                                         scope across all client_ids or not.\n+     * @param environment                      The cloud for which tokens should be deleted.\n+     * @param clientId                         The client_id for which tokens should be deleted, if not FRT.\n+     * @param deletionExemptRefreshTokenRecord The refresh token we want to exempt from deletion.\n+     * @return The number of tokens we removed from the cache.\n+     */\n+    private int removeRefreshTokensForAccountExcept(@NonNull final AccountRecord accountRecord,\n+                                                    final boolean isFamilyRefreshToken,\n+                                                    @NonNull final String environment,\n+                                                    @Nullable final String clientId,\n+                                                    @NonNull final RefreshTokenRecord deletionExemptRefreshTokenRecord) {\n+        return removeCredentialsOfTypeForAccountExcept(\n+                environment,\n+                isFamilyRefreshToken\n+                        // Delete all RTs, irrespective of client_id\n+                        // (so long as it is not the exempted record)\n+                        ? null\n+                        : clientId,\n+                CredentialType.RefreshToken,\n+                accountRecord,\n+                true,\n+                deletionExemptRefreshTokenRecord\n+        );\n+    }\n+\n+    /**\n+     * Removes Credentials of the supplied type for the supplied Account; skipping any record\n+     * specified as exempt.\n+     *\n+     * @param environment          Entity which issued the token represented as a host.\n+     * @param clientId             The clientId of the target app.\n+     * @param credentialType       The type of Credential to remove.\n+     * @param targetAccount        The target Account whose Credentials should be removed.\n+     * @param realmAgnostic        True if the specified action should be completed irrespective of realm.\n+     * @param deletionExemptRecord A record which explicitly must not be removed.\n+     * @return The number of Credentials removed.\n+     */\n+    private int removeCredentialsOfTypeForAccountExcept(@NonNull final String environment,\n+                                                        @Nullable final String clientId,\n+                                                        @NonNull final CredentialType credentialType,\n+                                                        @NonNull final AccountRecord targetAccount,\n+                                                        final boolean realmAgnostic,\n+                                                        @NonNull final Credential deletionExemptRecord) {\n+        int credentialsRemoved = 0;\n+\n+        // Query it for Credentials matching the supplied targetAccount\n+        final List<Credential> credentialsToRemove =\n+                mAccountCredentialCache.getCredentialsFilteredBy(\n+                        targetAccount.getHomeAccountId(),\n+                        environment,\n+                        credentialType,\n+                        clientId,\n+                        realmAgnostic\n+                                ? null // wildcard (*) realm\n+                                : targetAccount.getRealm(),\n+                        null, // wildcard (*) target,\n+                        null\n+                );\n+\n+        for (final Credential credentialToRemove : credentialsToRemove) {\n+            if (!deletionExemptRecord.equals(credentialToRemove)", "originalCommit": "1d1bd984e8355fa2692eac8414e01c5f31eefbdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk2MjgwNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512962805", "bodyText": "904d7cc", "author": "iambmelt", "createdAt": "2020-10-27T19:19:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1NzYwMA=="}], "type": "inlineReview", "revised_code": {"commit": "5cdc9364ec4c04281f6b12f1e854edd1e4e10c52", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\nindex 61b774932..cd7d08c46 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n\n@@ -332,11 +328,11 @@ public class MsalOAuth2TokenCache\n     }\n \n     private void removeAllRefreshTokensExcept(@NonNull final AccountRecord accountRecord,\n-                                              @NonNull final RefreshTokenRecord refreshTokenRecord) {\n+                                              @NonNull final RefreshTokenRecord deletionExemptRefreshToken) {\n         // Delete all of the refresh tokens associated with this account, except for the provided one\n         final String methodName = \":removeAllRefreshTokensExcept\";\n         final boolean isFamilyRefreshToken = !StringExtensions.isNullOrBlank(\n-                refreshTokenRecord.getFamilyId()\n+                deletionExemptRefreshToken.getFamilyId()\n         );\n \n         Logger.info(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1NzcwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512957700", "bodyText": "Update this also...", "author": "iambmelt", "createdAt": "2020-10-27T19:10:28Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -1689,6 +1816,7 @@ public void setSingleSignOnState(final GenericAccount account,\n         );\n \n         if (isFamilyRefreshToken || isMultiResourceCapable) {\n+            // TODO Consider updating this method for Teams' fix", "originalCommit": "1d1bd984e8355fa2692eac8414e01c5f31eefbdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk2NTY1MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1098#discussion_r512965651", "bodyText": "de0042f", "author": "iambmelt", "createdAt": "2020-10-27T19:23:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1NzcwMA=="}], "type": "inlineReview", "revised_code": {"commit": "de0042f4d1576af829dd6ec1cc377d36d117be5d", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\nindex 61b774932..5f3a480fc 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java\n\n@@ -1816,12 +1823,12 @@ public class MsalOAuth2TokenCache\n         );\n \n         if (isFamilyRefreshToken || isMultiResourceCapable) {\n-            // TODO Consider updating this method for Teams' fix\n-            final int refreshTokensRemoved = removeRefreshTokensForAccount(\n+            final int refreshTokensRemoved = removeRefreshTokensForAccountExcept(\n                     accountDto,\n                     isFamilyRefreshToken,\n                     accountDto.getEnvironment(),\n-                    rt.getClientId()\n+                    rt.getClientId(),\n+                    rt\n             );\n \n             Logger.info(\n"}}, {"oid": "03b1279d0cb5e49e58cb53b73f6093049acc0896", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/03b1279d0cb5e49e58cb53b73f6093049acc0896", "message": "Update comment for clarity", "committedDate": "2020-10-27T19:11:48Z", "type": "commit"}, {"oid": "5cdc9364ec4c04281f6b12f1e854edd1e4e10c52", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5cdc9364ec4c04281f6b12f1e854edd1e4e10c52", "message": "Rename param for clarity", "committedDate": "2020-10-27T19:13:03Z", "type": "commit"}, {"oid": "905e9b3dbc1ed1d138d5a3a60a6768b8df3d44be", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/905e9b3dbc1ed1d138d5a3a60a6768b8df3d44be", "message": "Adds javadoc to new method", "committedDate": "2020-10-27T19:15:04Z", "type": "commit"}, {"oid": "904d7ccedcabc99cb5c4d0002ded3e385d80a322", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/904d7ccedcabc99cb5c4d0002ded3e385d80a322", "message": "Adding code comments for clarity", "committedDate": "2020-10-27T19:18:59Z", "type": "commit"}, {"oid": "de0042f4d1576af829dd6ec1cc377d36d117be5d", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/de0042f4d1576af829dd6ec1cc377d36d117be5d", "message": "Apply same saving logic to TSL paths", "committedDate": "2020-10-27T19:22:43Z", "type": "commit"}]}