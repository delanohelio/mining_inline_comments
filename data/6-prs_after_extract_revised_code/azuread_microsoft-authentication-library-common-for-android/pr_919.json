{"pr_number": 919, "pr_title": "Allow for different Http invocation styles.", "pr_createdAt": "2020-05-28T19:00:18Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/919", "timeline": [{"oid": "6aff15d217e11270f977fd085843aff980237368", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/6aff15d217e11270f977fd085843aff980237368", "message": "Initial commit of new client work.\n\n- Create a (threadsafe, singelton-safe) implementation of an HttpClient.\n- Create a configurable retry system.\n- Write tests to validate behavior of the new system.", "committedDate": "2020-05-28T16:28:24Z", "type": "commit"}, {"oid": "a5e0ebe9f43888a242ab7648a2c83a56f80c13aa", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a5e0ebe9f43888a242ab7648a2c83a56f80c13aa", "message": "Lombok default annotations.", "committedDate": "2020-05-28T16:28:24Z", "type": "commit"}, {"oid": "cc803c159e164d1296dad510648a3273e2c0e75b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/cc803c159e164d1296dad510648a3273e2c0e75b", "message": "The executable should be executable?", "committedDate": "2020-05-28T16:28:24Z", "type": "commit"}, {"oid": "faa0f6ec6d9e6ee4b0f6f9782b24e3553da6479a", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/faa0f6ec6d9e6ee4b0f6f9782b24e3553da6479a", "message": "Pretty sure these shouldn't be here.", "committedDate": "2020-05-28T16:28:24Z", "type": "commit"}, {"oid": "dccf1dd89f1a72083ab96fc8fb1e5471ea67d961", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/dccf1dd89f1a72083ab96fc8fb1e5471ea67d961", "message": "Documentation updates, code cleanup.\n\n- Delete now-unused code.\n- Add tests that insure that no-retry means it.\n- Add documentation and license information.", "committedDate": "2020-05-28T16:28:24Z", "type": "commit"}, {"oid": "2e3a4cd2ec4cf5e4353e2e352def178aa0cc44c1", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2e3a4cd2ec4cf5e4353e2e352def178aa0cc44c1", "message": "Just let exceptions flow through the NoRetryPolicy.\n\n- Rather than wrap the resulting exception in a RuntimeException,\n  allow the exception to propagate with @SneakyThrows.", "committedDate": "2020-05-28T16:28:24Z", "type": "commit"}, {"oid": "247811b05079fbed38036956f2c89e3831d41bf5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/247811b05079fbed38036956f2c89e3831d41bf5", "message": "Repair damage to incidental files.\n\nThese probably shouldn't change.  There are a number of\nandoid studio configruation files in the system and it\nseems unwise to commit them to git.", "committedDate": "2020-05-28T16:46:07Z", "type": "commit"}, {"oid": "b8e6d583649c85ffc77be6dfd1ab65a7e9dde007", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b8e6d583649c85ffc77be6dfd1ab65a7e9dde007", "message": "Restore the UnknownServiceException.\n\nI accidentally removed this behavior from the legacy lib.  Add it back,\nand put in a test to insure that it stays there.", "committedDate": "2020-05-28T17:31:11Z", "type": "commit"}, {"oid": "313cbae01abe1f59318f1b618cc78c65b70894da", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/313cbae01abe1f59318f1b618cc78c65b70894da", "message": "Create HttpClient as an interface.\n\nSplit the interface for HttpClient from the class,\nmaking the UrlConnectionHttpClient the only impl.", "committedDate": "2020-05-28T18:55:25Z", "type": "commit"}, {"oid": "5f1811fe6ba58bbe64b8ca129a487471af14e6e4", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5f1811fe6ba58bbe64b8ca129a487471af14e6e4", "message": "Add license information.", "committedDate": "2020-05-28T18:59:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1NTA1NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/919#discussion_r432055055", "bodyText": "Javadoc.", "author": "AdamBJohnsonx", "createdAt": "2020-05-28T19:01:05Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpClient.java", "diffHunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.net;\n+\n+import android.text.TextUtils;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+public interface HttpClient {", "originalCommit": "5f1811fe6ba58bbe64b8ca129a487471af14e6e4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e92c66fefa00fa5e1138e1bf1ca9383a9cd9dd9b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpClient.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpClient.java\nindex b92bf7797..75821e2a3 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpClient.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpClient.java\n\n@@ -32,45 +32,132 @@ import java.net.URL;\n import java.util.LinkedHashMap;\n import java.util.Map;\n \n+/**\n+ * An interface providing access to resources backed by web requests.  This provides access to only\n+ * the verbs enumerated by HttpMethod.\n+ */\n public interface HttpClient {\n+    /**\n+     * Execute an arbitrary method by name.  This will fail with an IllegalArgumentException unless\n+     * httpMethod is one of { PUT, GET, HEAD, POST, PATCH, DELETE, OPTIONS, or TRACE }.\n+     * @param httpMethod the string of the http method to use.  Must be one of { PUT, GET,\n+     *                   HEAD, POST, PATCH, DELETE, OPTIONS, or TRACE }, case insensitive.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @param requestContent the body content of the request, if applicable.  May be null.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse method(@NonNull String httpMethod,\n                         @NonNull URL requestUrl,\n                         @NonNull Map<String, String> requestHeaders,\n                         @Nullable byte[] requestContent) throws IOException;\n \n+    /**\n+     * Execute an arbitrary method.\n+     * @param httpMethod the HttpMethod to use for the call.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @param requestContent the body content of the request, if applicable.  May be null.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse method(@NonNull HttpMethod httpMethod,\n                         @NonNull URL requestUrl,\n                         @NonNull Map<String, String> requestHeaders,\n                         @Nullable byte[] requestContent) throws IOException;\n \n+    /**\n+     * Execute an HTTP PUT request.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @param requestContent the body content of the request, if applicable.  May be null.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse put(@NonNull URL requestUrl,\n                      @NonNull Map<String, String> requestHeaders,\n                      @Nullable byte[] requestContent) throws IOException;\n \n+    /**\n+     * Execute an HTTP PATCH request.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @param requestContent the body content of the request, if applicable.  May be null.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse patch(@NonNull URL requestUrl,\n                        @NonNull Map<String, String> requestHeaders,\n                        @Nullable byte[] requestContent) throws IOException;\n \n+    /**\n+     * Execute an HTTP OPTIONS request.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse options(@NonNull URL requestUrl,\n                          @NonNull Map<String, String> requestHeaders) throws IOException;\n \n+    /**\n+     * Execute an HTTP POST request.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @param requestContent the body content of the request, if applicable.  May be null.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse post(@NonNull URL requestUrl,\n                       @NonNull Map<String, String> requestHeaders,\n                       @Nullable byte[] requestContent) throws IOException;\n \n+    /**\n+     * Execute an HTTP PATCH request.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @param requestContent the body content of the request, if applicable.  May be null.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse delete(@NonNull URL requestUrl,\n                         @NonNull Map<String, String> requestHeaders,\n                         @Nullable byte[] requestContent) throws IOException;\n \n+    /**\n+     * Execute an HTTP GET request.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse get(@NonNull URL requestUrl,\n                      @NonNull Map<String, String> requestHeaders) throws IOException;\n \n+    /**\n+     * Execute an HTTP HEAD request.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse head(@NonNull URL requestUrl,\n                       @NonNull Map<String, String> requestHeaders) throws IOException;\n \n+    /**\n+     * Execute an HTTP TRACE request.\n+     * @param requestUrl the URL of the resource to operate on.\n+     * @param requestHeaders the headers for the request.\n+     * @return an HttpResponse with the result of the call.\n+     * @throws IOException if there was a communication problem.\n+     */\n     HttpResponse trace(@NonNull URL requestUrl,\n                        @NonNull Map<String, String> requestHeaders) throws IOException;\n \n+    /**\n+     * An enumeration of the HTTP verbs supported by this client interface.\n+     */\n     enum HttpMethod {\n         GET,\n         HEAD,\n"}}, {"oid": "e92c66fefa00fa5e1138e1bf1ca9383a9cd9dd9b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e92c66fefa00fa5e1138e1bf1ca9383a9cd9dd9b", "message": "Add javadoc for HttpClient.", "committedDate": "2020-05-29T00:20:51Z", "type": "commit"}, {"oid": "a5d15ec7c424b554826a7b025ee2e1d3c0b3f337", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a5d15ec7c424b554826a7b025ee2e1d3c0b3f337", "message": "Reduce length of long line.", "committedDate": "2020-05-29T21:36:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2NzYzNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/919#discussion_r433567634", "bodyText": "@AdamBJohnsonx Why were these removed? It's breaking MSAL. Do you have the corresponding MSAL pr that goes with this common PR?", "author": "shahzaibj", "createdAt": "2020-06-02T01:09:18Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -87,19 +98,30 @@\n         HTTP_METHODS.add(REQUEST_METHOD_PATCH);\n     }\n \n-    /**\n-     * Value of read timeout in milliseconds.\n-     */\n-    public static int READ_TIMEOUT = 30000;", "originalCommit": "a5d15ec7c424b554826a7b025ee2e1d3c0b3f337", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}