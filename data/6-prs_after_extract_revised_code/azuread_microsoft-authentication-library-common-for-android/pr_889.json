{"pr_number": 889, "pr_title": "Closes #888 - Adds support for additional HTTP request methods", "pr_createdAt": "2020-04-15T00:52:10Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889", "timeline": [{"oid": "1261f8b7695024d19cca4b2d8792b689251cc4fd", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1261f8b7695024d19cca4b2d8792b689251cc4fd", "message": "WIP - adding new methods, applying annots", "committedDate": "2020-04-15T00:50:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxODg3Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r408518876", "bodyText": "I don't think we can support this currently -- support may also not be needed", "author": "iambmelt", "createdAt": "2020-04-15T00:52:54Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -158,27 +166,83 @@ public static HttpResponse sendPost(final URL requestUrl, final Map<String, Stri\n      * @return HttpResponse\n      * @throws IOException throw if service error happen during http request.\n      */\n-    public static HttpResponse sendGet(final URL requestUrl, final Map<String, String> requestHeaders)\n+    public static HttpResponse sendGet(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n         Telemetry.emit(\n                 new HttpStartEvent()\n                         .putMethod(REQUEST_METHOD_GET)\n                         .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders == null ? null : requestHeaders.get(CLIENT_REQUEST_ID))\n+                        .putRequestIdHeader(requestHeaders.get(CLIENT_REQUEST_ID))\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_GET\n         );\n \n-        final HttpRequest httpRequest = new HttpRequest(requestUrl, requestHeaders, REQUEST_METHOD_GET);\n         final HttpResponse response = httpRequest.send();\n \n         final HttpEndEvent httpEndEvent = new HttpEndEvent();\n+\n         if (response != null) {\n             httpEndEvent.putStatusCode(response.getStatusCode());\n         }\n+\n         Telemetry.emit(httpEndEvent);\n \n         return response;\n     }\n \n+    public static HttpResponse sendHead(@NonNull final URL requestUrl,\n+                                        @NonNull final Map<String, String> requestHeaders) {\n+        // TODO\n+        return null;\n+    }\n+\n+    public static HttpResponse sendPut(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders,\n+                                       @Nullable final byte[] requestContent,\n+                                       @Nullable final String requestContentType) {\n+        // TODO\n+        return null;\n+    }\n+\n+    public static HttpResponse sendDelete(@NonNull final URL requestUrl,\n+                                          @NonNull final Map<String, String> requestHeaders,\n+                                          @Nullable final byte[] requestContent,\n+                                          @Nullable final String requestContentType) {\n+        // TODO\n+        return null;\n+    }\n+\n+    public static HttpResponse sendTrace(@NonNull final URL requestUrl,\n+                                         @NonNull final Map<String, String> requestHeaders) {\n+        // TODO\n+        return null;\n+    }\n+\n+    public static HttpResponse sendOptions(@NonNull final URL requestUrl,\n+                                           @NonNull final Map<String, String> requestHeaders) {\n+        // TODO\n+        return null;\n+    }\n+\n+    public static HttpResponse sendConnect(@NonNull final URL requestUrl,\n+                                           @NonNull final Map<String, String> requestHeaders) {\n+        // TODO Can this be supported? I suspect not.", "originalCommit": "1261f8b7695024d19cca4b2d8792b689251cc4fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3OTkzNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414179934", "bodyText": "Not needed. Resolving", "author": "iambmelt", "createdAt": "2020-04-23T23:01:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxODg3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "af4810218ee2c35a3dedac3f63a33209cefc180b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\nindex 7b9e00d18..dc66f8c20 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n\n@@ -169,11 +189,10 @@ public final class HttpRequest {\n     public static HttpResponse sendGet(@NonNull final URL requestUrl,\n                                        @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        Telemetry.emit(\n-                new HttpStartEvent()\n-                        .putMethod(REQUEST_METHOD_GET)\n-                        .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders.get(CLIENT_REQUEST_ID))\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_GET,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n         );\n \n         final HttpRequest httpRequest = new HttpRequest(\n"}}, {"oid": "af4810218ee2c35a3dedac3f63a33209cefc180b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/af4810218ee2c35a3dedac3f63a33209cefc180b", "message": "Additional impl, refactor", "committedDate": "2020-04-15T19:28:47Z", "type": "commit"}, {"oid": "24832f9605dd0fad297177f5fc995f7fa35a5094", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/24832f9605dd0fad297177f5fc995f7fa35a5094", "message": "Merge branch 'dev' into iambmelt/888", "committedDate": "2020-04-15T19:29:22Z", "type": "commit"}, {"oid": "e0966fbc2d63835466991d86d432d168378d5294", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e0966fbc2d63835466991d86d432d168378d5294", "message": "Adding sendWithMethod -- this is so I can refactor out duplicative code\nin other paths", "committedDate": "2020-04-15T19:44:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTY4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r409091687", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-04-15T19:46:03Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -158,24 +203,223 @@ public static HttpResponse sendPost(final URL requestUrl, final Map<String, Stri\n      * @return HttpResponse\n      * @throws IOException throw if service error happen during http request.\n      */\n-    public static HttpResponse sendGet(final URL requestUrl, final Map<String, String> requestHeaders)\n+    public static HttpResponse sendGet(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        Telemetry.emit(\n-                new HttpStartEvent()\n-                        .putMethod(REQUEST_METHOD_GET)\n-                        .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders == null ? null : requestHeaders.get(CLIENT_REQUEST_ID))\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_GET,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_GET\n         );\n \n-        final HttpRequest httpRequest = new HttpRequest(requestUrl, requestHeaders, REQUEST_METHOD_GET);\n         final HttpResponse response = httpRequest.send();\n \n-        final HttpEndEvent httpEndEvent = new HttpEndEvent();\n-        if (response != null) {\n-            httpEndEvent.putStatusCode(response.getStatusCode());\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendHead(@NonNull final URL requestUrl,", "originalCommit": "e0966fbc2d63835466991d86d432d168378d5294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3ODk5MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414178991", "bodyText": "Resolved in 5bdd4b7", "author": "iambmelt", "createdAt": "2020-04-23T22:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\nindex 556361704..41d58ac83 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n\n@@ -206,45 +194,25 @@ public final class HttpRequest {\n     public static HttpResponse sendGet(@NonNull final URL requestUrl,\n                                        @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_GET,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_GET\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendHead(@NonNull final URL requestUrl,\n                                         @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_HEAD,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_HEAD\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendPut(@NonNull final URL requestUrl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTcxNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r409091716", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-04-15T19:46:07Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -158,24 +203,223 @@ public static HttpResponse sendPost(final URL requestUrl, final Map<String, Stri\n      * @return HttpResponse\n      * @throws IOException throw if service error happen during http request.\n      */\n-    public static HttpResponse sendGet(final URL requestUrl, final Map<String, String> requestHeaders)\n+    public static HttpResponse sendGet(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        Telemetry.emit(\n-                new HttpStartEvent()\n-                        .putMethod(REQUEST_METHOD_GET)\n-                        .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders == null ? null : requestHeaders.get(CLIENT_REQUEST_ID))\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_GET,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_GET\n         );\n \n-        final HttpRequest httpRequest = new HttpRequest(requestUrl, requestHeaders, REQUEST_METHOD_GET);\n         final HttpResponse response = httpRequest.send();\n \n-        final HttpEndEvent httpEndEvent = new HttpEndEvent();\n-        if (response != null) {\n-            httpEndEvent.putStatusCode(response.getStatusCode());\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendHead(@NonNull final URL requestUrl,\n+                                        @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_HEAD,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_HEAD\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPut(@NonNull final URL requestUrl,", "originalCommit": "e0966fbc2d63835466991d86d432d168378d5294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3OTA5Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414179093", "bodyText": "Resolved in 5bdd4b7", "author": "iambmelt", "createdAt": "2020-04-23T22:59:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTcxNg=="}], "type": "inlineReview", "revised_code": {"commit": "f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\nindex 556361704..41d58ac83 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n\n@@ -206,45 +194,25 @@ public final class HttpRequest {\n     public static HttpResponse sendGet(@NonNull final URL requestUrl,\n                                        @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_GET,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_GET\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendHead(@NonNull final URL requestUrl,\n                                         @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_HEAD,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_HEAD\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendPut(@NonNull final URL requestUrl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTc1Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r409091757", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-04-15T19:46:11Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -158,24 +203,223 @@ public static HttpResponse sendPost(final URL requestUrl, final Map<String, Stri\n      * @return HttpResponse\n      * @throws IOException throw if service error happen during http request.\n      */\n-    public static HttpResponse sendGet(final URL requestUrl, final Map<String, String> requestHeaders)\n+    public static HttpResponse sendGet(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        Telemetry.emit(\n-                new HttpStartEvent()\n-                        .putMethod(REQUEST_METHOD_GET)\n-                        .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders == null ? null : requestHeaders.get(CLIENT_REQUEST_ID))\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_GET,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_GET\n         );\n \n-        final HttpRequest httpRequest = new HttpRequest(requestUrl, requestHeaders, REQUEST_METHOD_GET);\n         final HttpResponse response = httpRequest.send();\n \n-        final HttpEndEvent httpEndEvent = new HttpEndEvent();\n-        if (response != null) {\n-            httpEndEvent.putStatusCode(response.getStatusCode());\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendHead(@NonNull final URL requestUrl,\n+                                        @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_HEAD,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_HEAD\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPut(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders,\n+                                       @Nullable final byte[] requestContent,\n+                                       @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_PUT,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_PUT,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendDelete(@NonNull final URL requestUrl,", "originalCommit": "e0966fbc2d63835466991d86d432d168378d5294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3OTEyNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414179126", "bodyText": "Resolved in 5bdd4b7", "author": "iambmelt", "createdAt": "2020-04-23T22:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTc1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\nindex 556361704..41d58ac83 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n\n@@ -206,45 +194,25 @@ public final class HttpRequest {\n     public static HttpResponse sendGet(@NonNull final URL requestUrl,\n                                        @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_GET,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_GET\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendHead(@NonNull final URL requestUrl,\n                                         @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_HEAD,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_HEAD\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendPut(@NonNull final URL requestUrl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTc4Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r409091783", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-04-15T19:46:14Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -158,24 +203,223 @@ public static HttpResponse sendPost(final URL requestUrl, final Map<String, Stri\n      * @return HttpResponse\n      * @throws IOException throw if service error happen during http request.\n      */\n-    public static HttpResponse sendGet(final URL requestUrl, final Map<String, String> requestHeaders)\n+    public static HttpResponse sendGet(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        Telemetry.emit(\n-                new HttpStartEvent()\n-                        .putMethod(REQUEST_METHOD_GET)\n-                        .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders == null ? null : requestHeaders.get(CLIENT_REQUEST_ID))\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_GET,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_GET\n         );\n \n-        final HttpRequest httpRequest = new HttpRequest(requestUrl, requestHeaders, REQUEST_METHOD_GET);\n         final HttpResponse response = httpRequest.send();\n \n-        final HttpEndEvent httpEndEvent = new HttpEndEvent();\n-        if (response != null) {\n-            httpEndEvent.putStatusCode(response.getStatusCode());\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendHead(@NonNull final URL requestUrl,\n+                                        @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_HEAD,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_HEAD\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPut(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders,\n+                                       @Nullable final byte[] requestContent,\n+                                       @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_PUT,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_PUT,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendDelete(@NonNull final URL requestUrl,\n+                                          @NonNull final Map<String, String> requestHeaders,\n+                                          @Nullable final byte[] requestContent,\n+                                          @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_DELETE,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_DELETE,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendTrace(@NonNull final URL requestUrl,", "originalCommit": "e0966fbc2d63835466991d86d432d168378d5294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3OTE2Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414179166", "bodyText": "Resolved in 5bdd4b7", "author": "iambmelt", "createdAt": "2020-04-23T22:59:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTc4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\nindex 556361704..41d58ac83 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n\n@@ -206,45 +194,25 @@ public final class HttpRequest {\n     public static HttpResponse sendGet(@NonNull final URL requestUrl,\n                                        @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_GET,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_GET\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendHead(@NonNull final URL requestUrl,\n                                         @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_HEAD,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_HEAD\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendPut(@NonNull final URL requestUrl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTgxMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r409091811", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-04-15T19:46:18Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -158,24 +203,223 @@ public static HttpResponse sendPost(final URL requestUrl, final Map<String, Stri\n      * @return HttpResponse\n      * @throws IOException throw if service error happen during http request.\n      */\n-    public static HttpResponse sendGet(final URL requestUrl, final Map<String, String> requestHeaders)\n+    public static HttpResponse sendGet(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        Telemetry.emit(\n-                new HttpStartEvent()\n-                        .putMethod(REQUEST_METHOD_GET)\n-                        .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders == null ? null : requestHeaders.get(CLIENT_REQUEST_ID))\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_GET,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_GET\n         );\n \n-        final HttpRequest httpRequest = new HttpRequest(requestUrl, requestHeaders, REQUEST_METHOD_GET);\n         final HttpResponse response = httpRequest.send();\n \n-        final HttpEndEvent httpEndEvent = new HttpEndEvent();\n-        if (response != null) {\n-            httpEndEvent.putStatusCode(response.getStatusCode());\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendHead(@NonNull final URL requestUrl,\n+                                        @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_HEAD,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_HEAD\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPut(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders,\n+                                       @Nullable final byte[] requestContent,\n+                                       @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_PUT,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_PUT,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendDelete(@NonNull final URL requestUrl,\n+                                          @NonNull final Map<String, String> requestHeaders,\n+                                          @Nullable final byte[] requestContent,\n+                                          @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_DELETE,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_DELETE,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendTrace(@NonNull final URL requestUrl,\n+                                         @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_TRACE,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_TRACE\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendOptions(@NonNull final URL requestUrl,", "originalCommit": "e0966fbc2d63835466991d86d432d168378d5294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3OTIwOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414179209", "bodyText": "Resolved in 5bdd4b7", "author": "iambmelt", "createdAt": "2020-04-23T22:59:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTgxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\nindex 556361704..41d58ac83 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n\n@@ -206,45 +194,25 @@ public final class HttpRequest {\n     public static HttpResponse sendGet(@NonNull final URL requestUrl,\n                                        @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_GET,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_GET\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendHead(@NonNull final URL requestUrl,\n                                         @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_HEAD,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_HEAD\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendPut(@NonNull final URL requestUrl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTgzNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r409091836", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-04-15T19:46:22Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -158,24 +203,223 @@ public static HttpResponse sendPost(final URL requestUrl, final Map<String, Stri\n      * @return HttpResponse\n      * @throws IOException throw if service error happen during http request.\n      */\n-    public static HttpResponse sendGet(final URL requestUrl, final Map<String, String> requestHeaders)\n+    public static HttpResponse sendGet(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        Telemetry.emit(\n-                new HttpStartEvent()\n-                        .putMethod(REQUEST_METHOD_GET)\n-                        .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders == null ? null : requestHeaders.get(CLIENT_REQUEST_ID))\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_GET,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_GET\n         );\n \n-        final HttpRequest httpRequest = new HttpRequest(requestUrl, requestHeaders, REQUEST_METHOD_GET);\n         final HttpResponse response = httpRequest.send();\n \n-        final HttpEndEvent httpEndEvent = new HttpEndEvent();\n-        if (response != null) {\n-            httpEndEvent.putStatusCode(response.getStatusCode());\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendHead(@NonNull final URL requestUrl,\n+                                        @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_HEAD,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_HEAD\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPut(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders,\n+                                       @Nullable final byte[] requestContent,\n+                                       @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_PUT,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_PUT,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendDelete(@NonNull final URL requestUrl,\n+                                          @NonNull final Map<String, String> requestHeaders,\n+                                          @Nullable final byte[] requestContent,\n+                                          @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_DELETE,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_DELETE,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendTrace(@NonNull final URL requestUrl,\n+                                         @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_TRACE,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_TRACE\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendOptions(@NonNull final URL requestUrl,\n+                                           @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_OPTIONS,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_OPTIONS\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPatch(@NonNull final URL requestUrl,", "originalCommit": "e0966fbc2d63835466991d86d432d168378d5294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3OTI1Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414179252", "bodyText": "Resolved in 5bdd4b7", "author": "iambmelt", "createdAt": "2020-04-23T22:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTgzNg=="}], "type": "inlineReview", "revised_code": {"commit": "f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\nindex 556361704..41d58ac83 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n\n@@ -206,45 +194,25 @@ public final class HttpRequest {\n     public static HttpResponse sendGet(@NonNull final URL requestUrl,\n                                        @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_GET,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_GET\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendHead(@NonNull final URL requestUrl,\n                                         @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_HEAD,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_HEAD\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendPut(@NonNull final URL requestUrl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTg3Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r409091873", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-04-15T19:46:27Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -158,24 +203,223 @@ public static HttpResponse sendPost(final URL requestUrl, final Map<String, Stri\n      * @return HttpResponse\n      * @throws IOException throw if service error happen during http request.\n      */\n-    public static HttpResponse sendGet(final URL requestUrl, final Map<String, String> requestHeaders)\n+    public static HttpResponse sendGet(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        Telemetry.emit(\n-                new HttpStartEvent()\n-                        .putMethod(REQUEST_METHOD_GET)\n-                        .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders == null ? null : requestHeaders.get(CLIENT_REQUEST_ID))\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_GET,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_GET\n         );\n \n-        final HttpRequest httpRequest = new HttpRequest(requestUrl, requestHeaders, REQUEST_METHOD_GET);\n         final HttpResponse response = httpRequest.send();\n \n-        final HttpEndEvent httpEndEvent = new HttpEndEvent();\n-        if (response != null) {\n-            httpEndEvent.putStatusCode(response.getStatusCode());\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendHead(@NonNull final URL requestUrl,\n+                                        @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_HEAD,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_HEAD\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPut(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders,\n+                                       @Nullable final byte[] requestContent,\n+                                       @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_PUT,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_PUT,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendDelete(@NonNull final URL requestUrl,\n+                                          @NonNull final Map<String, String> requestHeaders,\n+                                          @Nullable final byte[] requestContent,\n+                                          @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_DELETE,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_DELETE,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendTrace(@NonNull final URL requestUrl,\n+                                         @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_TRACE,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_TRACE\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendOptions(@NonNull final URL requestUrl,\n+                                           @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_OPTIONS,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_OPTIONS\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPatch(@NonNull final URL requestUrl,\n+                                         @NonNull final Map<String, String> requestHeaders,\n+                                         @Nullable final byte[] requestContent,\n+                                         @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_PATCH,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        // Because HttpURLConnection predates RFC-5789, we need to fallback on POST w/ a backcompat\n+        // workaround. See: https://stackoverflow.com/a/32503192/741827\n+        requestHeaders.put(\"X-HTTP-Method-Override\", \"PATCH\");\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_POST, // HttpURLConnection doesn't natively support PATCH\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendWithMethod(@NonNull final String httpMethod,", "originalCommit": "e0966fbc2d63835466991d86d432d168378d5294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3OTQwMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414179402", "bodyText": "Resolved in 5bdd4b7", "author": "iambmelt", "createdAt": "2020-04-23T23:00:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTg3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\nindex 556361704..41d58ac83 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n\n@@ -206,45 +194,25 @@ public final class HttpRequest {\n     public static HttpResponse sendGet(@NonNull final URL requestUrl,\n                                        @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_GET,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_GET\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendHead(@NonNull final URL requestUrl,\n                                         @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_HEAD,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_HEAD\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendPut(@NonNull final URL requestUrl,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTk2OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r409091968", "bodyText": "Refactor other methods to call this one", "author": "iambmelt", "createdAt": "2020-04-15T19:46:36Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java", "diffHunk": "@@ -158,24 +203,223 @@ public static HttpResponse sendPost(final URL requestUrl, final Map<String, Stri\n      * @return HttpResponse\n      * @throws IOException throw if service error happen during http request.\n      */\n-    public static HttpResponse sendGet(final URL requestUrl, final Map<String, String> requestHeaders)\n+    public static HttpResponse sendGet(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        Telemetry.emit(\n-                new HttpStartEvent()\n-                        .putMethod(REQUEST_METHOD_GET)\n-                        .putPath(requestUrl)\n-                        .putRequestIdHeader(requestHeaders == null ? null : requestHeaders.get(CLIENT_REQUEST_ID))\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_GET,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_GET\n         );\n \n-        final HttpRequest httpRequest = new HttpRequest(requestUrl, requestHeaders, REQUEST_METHOD_GET);\n         final HttpResponse response = httpRequest.send();\n \n-        final HttpEndEvent httpEndEvent = new HttpEndEvent();\n-        if (response != null) {\n-            httpEndEvent.putStatusCode(response.getStatusCode());\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendHead(@NonNull final URL requestUrl,\n+                                        @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_HEAD,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_HEAD\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPut(@NonNull final URL requestUrl,\n+                                       @NonNull final Map<String, String> requestHeaders,\n+                                       @Nullable final byte[] requestContent,\n+                                       @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_PUT,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_PUT,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendDelete(@NonNull final URL requestUrl,\n+                                          @NonNull final Map<String, String> requestHeaders,\n+                                          @Nullable final byte[] requestContent,\n+                                          @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_DELETE,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_DELETE,\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendTrace(@NonNull final URL requestUrl,\n+                                         @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_TRACE,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_TRACE\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendOptions(@NonNull final URL requestUrl,\n+                                           @NonNull final Map<String, String> requestHeaders)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_OPTIONS,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_OPTIONS\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendPatch(@NonNull final URL requestUrl,\n+                                         @NonNull final Map<String, String> requestHeaders,\n+                                         @Nullable final byte[] requestContent,\n+                                         @Nullable final String requestContentType)\n+            throws IOException {\n+        recordHttpTelemetryEventStart(\n+                REQUEST_METHOD_PATCH,\n+                requestUrl,\n+                requestHeaders.get(CLIENT_REQUEST_ID)\n+        );\n+\n+        // Because HttpURLConnection predates RFC-5789, we need to fallback on POST w/ a backcompat\n+        // workaround. See: https://stackoverflow.com/a/32503192/741827\n+        requestHeaders.put(\"X-HTTP-Method-Override\", \"PATCH\");\n+\n+        final HttpRequest httpRequest = new HttpRequest(\n+                requestUrl,\n+                requestHeaders,\n+                REQUEST_METHOD_POST, // HttpURLConnection doesn't natively support PATCH\n+                requestContent,\n+                requestContentType\n+        );\n+\n+        final HttpResponse response = httpRequest.send();\n+\n+        recordHttpTelemetryEventEnd(response);\n+\n+        return response;\n+    }\n+\n+    public static HttpResponse sendWithMethod(@NonNull final String httpMethod,", "originalCommit": "e0966fbc2d63835466991d86d432d168378d5294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3OTU1OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414179558", "bodyText": "Resolved in f7703d4", "author": "iambmelt", "createdAt": "2020-04-23T23:00:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTk2OA=="}], "type": "inlineReview", "revised_code": {"commit": "f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\nindex 556361704..41d58ac83 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/net/HttpRequest.java\n\n@@ -206,45 +194,25 @@ public final class HttpRequest {\n     public static HttpResponse sendGet(@NonNull final URL requestUrl,\n                                        @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_GET,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_GET\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendHead(@NonNull final URL requestUrl,\n                                         @NonNull final Map<String, String> requestHeaders)\n             throws IOException {\n-        recordHttpTelemetryEventStart(\n+        return sendWithMethod(\n                 REQUEST_METHOD_HEAD,\n-                requestUrl,\n-                requestHeaders.get(CLIENT_REQUEST_ID)\n-        );\n-\n-        final HttpRequest httpRequest = new HttpRequest(\n                 requestUrl,\n                 requestHeaders,\n-                REQUEST_METHOD_HEAD\n+                null,\n+                null\n         );\n-\n-        final HttpResponse response = httpRequest.send();\n-\n-        recordHttpTelemetryEventEnd(response);\n-\n-        return response;\n     }\n \n     public static HttpResponse sendPut(@NonNull final URL requestUrl,\n"}}, {"oid": "f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f7703d44d3354e084c9cf46813ccd0b16b56cc5b", "message": "Refactor, code sharing", "committedDate": "2020-04-16T01:33:41Z", "type": "commit"}, {"oid": "dc58e1bd6460e970886e4ff4f5942ea29f885d90", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/dc58e1bd6460e970886e4ff4f5942ea29f885d90", "message": "Merge branch 'dev' into iambmelt/888", "committedDate": "2020-04-16T16:28:00Z", "type": "commit"}, {"oid": "8ef76ddf922e3b22424594a06ccd732150fe7e06", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8ef76ddf922e3b22424594a06ccd732150fe7e06", "message": "Merge branch 'dev' into iambmelt/888", "committedDate": "2020-04-23T21:46:32Z", "type": "commit"}, {"oid": "5bdd4b78e1e7fb084ef92f7264a10c6fc664480c", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5bdd4b78e1e7fb084ef92f7264a10c6fc664480c", "message": "Tidying up javadoc", "committedDate": "2020-04-23T22:56:07Z", "type": "commit"}, {"oid": "64f61fd8f9a9cf8d2f54bebce2e664355e4aa300", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/64f61fd8f9a9cf8d2f54bebce2e664355e4aa300", "message": "Experimental: test fixes (#896)\n\n* Experimental: test fixes\r\n\r\n* Lots of formatting changes\r\n\r\n* Make method private\r\n\r\n* Adding new tests", "committedDate": "2020-04-24T23:54:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyOTY4NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414929685", "bodyText": "I think we can remove this comment now", "author": "shahzaibj", "createdAt": "2020-04-25T00:13:59Z", "path": "common/src/androidTest/java/com/microsoft/identity/common/HttpRequestTest.java", "diffHunk": "@@ -0,0 +1,816 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.common;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.internal.net.HttpRequest;\n+import com.microsoft.identity.common.internal.net.HttpResponse;\n+import com.microsoft.identity.common.internal.net.HttpUrlConnectionFactory;\n+\n+import org.junit.After;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InOrder;\n+import org.mockito.Mockito;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.net.HttpURLConnection;\n+import java.net.SocketTimeoutException;\n+import java.util.Collections;\n+import java.util.HashMap;\n+\n+import static com.microsoft.identity.common.MockUtil.getMockedConnectionWithFailureResponse;\n+import static com.microsoft.identity.common.internal.net.HttpUrlConnectionFactory.addMockedConnection;\n+import static com.microsoft.identity.common.internal.net.HttpUrlConnectionFactory.getMockedConnectionCountInQueue;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ * Tests for {@link HttpRequest}.\n+ * <p>\n+ * We need to fix setup of these tests as something is missing post moving from MSAL to common", "originalCommit": "64f61fd8f9a9cf8d2f54bebce2e664355e4aa300", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyOTc1MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414929750", "bodyText": "Yup, good catch", "author": "iambmelt", "createdAt": "2020-04-25T00:14:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyOTY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkzMDE4Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/889#discussion_r414930183", "bodyText": "Fixed in c17b8cc", "author": "iambmelt", "createdAt": "2020-04-25T00:16:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyOTY4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "c17b8ccab1722b99bfea6ef691c12a6b92bdacc7", "chunk": "diff --git a/common/src/androidTest/java/com/microsoft/identity/common/HttpRequestTest.java b/common/src/androidTest/java/com/microsoft/identity/common/HttpRequestTest.java\nindex 010b20cc4..c41997b09 100644\n--- a/common/src/androidTest/java/com/microsoft/identity/common/HttpRequestTest.java\n+++ b/common/src/androidTest/java/com/microsoft/identity/common/HttpRequestTest.java\n\n@@ -52,8 +52,6 @@ import static org.junit.Assert.fail;\n \n /**\n  * Tests for {@link HttpRequest}.\n- * <p>\n- * We need to fix setup of these tests as something is missing post moving from MSAL to common\n  */\n @RunWith(AndroidJUnit4.class)\n public final class HttpRequestTest {\n"}}, {"oid": "c17b8ccab1722b99bfea6ef691c12a6b92bdacc7", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c17b8ccab1722b99bfea6ef691c12a6b92bdacc7", "message": "Removing old comment / no longer applies", "committedDate": "2020-04-25T00:15:16Z", "type": "commit"}]}