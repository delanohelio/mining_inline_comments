{"pr_number": 927, "pr_title": "Removed AccountRecord validation while saving credentials", "pr_createdAt": "2020-06-09T23:58:41Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/927", "timeline": [{"oid": "8119aa16a639cc7c88b2592ab132b2c23348cf50", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8119aa16a639cc7c88b2592ab132b2c23348cf50", "message": "Removed AccountRecord validation while saving credentials", "committedDate": "2020-06-09T23:56:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg0MTA1OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/927#discussion_r437841058", "bodyText": "I'm not sure I understand this removal -- we still will make a single WriteCredentials call, which may contain multiple credentials", "author": "jbzdarkid", "createdAt": "2020-06-10T03:35:29Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java", "diffHunk": "@@ -93,37 +91,26 @@ public static MsalCppOAuth2TokenCache create(@NonNull final Context context) {\n     }\n \n     /**\n-     * @param accountRecord : AccountRecord associated with the input credentials.\n+     * @param accountRecord : AccountRecord associated with the input credentials, can be null.\n      * @param credentials   : list of Credential which can include AccessTokenRecord, IdTokenRecord and RefreshTokenRecord.\n-     *                      Note : Both IdTokenRecord and RefreshTokenRecord need to be non null. AccessTokenRecord can be optional.\n      * @throws ClientException : If the supplied Account or Credential are null or schema invalid.\n      */\n-    public synchronized void saveCredentials(@NonNull final AccountRecord accountRecord,\n+    public synchronized void saveCredentials(@Nullable final AccountRecord accountRecord,\n                                              @NonNull final Credential... credentials) throws ClientException {\n         if (credentials == null || credentials.length == 0) {\n             throw new ClientException(\"Credential array passed in is null or empty\");\n         }\n \n-        AccessTokenRecord accessTokenRecord = null;\n-        IdTokenRecord idTokenRecord = null;\n         RefreshTokenRecord refreshTokenRecord = null;\n \n         for (final Credential credential : credentials) {\n-            if (credential instanceof AccessTokenRecord) {\n-                accessTokenRecord = (AccessTokenRecord) credential;\n-            } else if (credential instanceof IdTokenRecord) {\n-                idTokenRecord = (IdTokenRecord) credential;", "originalCommit": "8119aa16a639cc7c88b2592ab132b2c23348cf50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4MDg0Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/927#discussion_r438280843", "bodyText": "We are saving all the credentials, see line 115. I removed explicit validation to check that both IdToken and RefreshToken needs to be present.", "author": "kreedula", "createdAt": "2020-06-10T17:09:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg0MTA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "237c25b3996674f7c2f97823830fcb9b1f4c8d0d", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java\nindex 88cf2daa5..fbf8700b9 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java\n\n@@ -109,6 +109,9 @@ public class MsalCppOAuth2TokenCache\n             }\n         }\n         if (accountRecord != null && refreshTokenRecord != null) {\n+            // MSAL C++ writes credentials first and then the account.\n+            // For a new account, this will not be true as the accountRecord will be null.\n+            // For existing accounts, we would remove the old refresh token if present.\n             removeRefreshTokenIfNeeded(accountRecord, refreshTokenRecord);\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg0MTIxMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/927#discussion_r437841211", "bodyText": "Just for my own edification, can you add a comment here?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (accountRecord != null && refreshTokenRecord != null) {\n          \n          \n            \n                        removeRefreshTokenIfNeeded(accountRecord, refreshTokenRecord);\n          \n          \n            \n                    }\n          \n          \n            \n                    if (accountRecord != null && refreshTokenRecord != null) {\n          \n          \n            \n                        // This will not be true when we are called from MSAL C++, as the account will always be null.\n          \n          \n            \n                        removeRefreshTokenIfNeeded(accountRecord, refreshTokenRecord);\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nFeel free to reword.", "author": "jbzdarkid", "createdAt": "2020-06-10T03:36:13Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java", "diffHunk": "@@ -93,37 +91,26 @@ public static MsalCppOAuth2TokenCache create(@NonNull final Context context) {\n     }\n \n     /**\n-     * @param accountRecord : AccountRecord associated with the input credentials.\n+     * @param accountRecord : AccountRecord associated with the input credentials, can be null.\n      * @param credentials   : list of Credential which can include AccessTokenRecord, IdTokenRecord and RefreshTokenRecord.\n-     *                      Note : Both IdTokenRecord and RefreshTokenRecord need to be non null. AccessTokenRecord can be optional.\n      * @throws ClientException : If the supplied Account or Credential are null or schema invalid.\n      */\n-    public synchronized void saveCredentials(@NonNull final AccountRecord accountRecord,\n+    public synchronized void saveCredentials(@Nullable final AccountRecord accountRecord,\n                                              @NonNull final Credential... credentials) throws ClientException {\n         if (credentials == null || credentials.length == 0) {\n             throw new ClientException(\"Credential array passed in is null or empty\");\n         }\n \n-        AccessTokenRecord accessTokenRecord = null;\n-        IdTokenRecord idTokenRecord = null;\n         RefreshTokenRecord refreshTokenRecord = null;\n \n         for (final Credential credential : credentials) {\n-            if (credential instanceof AccessTokenRecord) {\n-                accessTokenRecord = (AccessTokenRecord) credential;\n-            } else if (credential instanceof IdTokenRecord) {\n-                idTokenRecord = (IdTokenRecord) credential;\n-            } else if (credential instanceof RefreshTokenRecord) {\n+            if (credential instanceof RefreshTokenRecord) {\n                 refreshTokenRecord = (RefreshTokenRecord) credential;\n             }\n         }\n-\n-        validateNonNull(accountRecord, \"AccountRecord\");\n-        validateNonNull(refreshTokenRecord, \"RefreshTokenRecord\");\n-        validateNonNull(idTokenRecord, \"IdTokenRecord\");\n-        validateCacheArtifacts(accountRecord, accessTokenRecord, refreshTokenRecord, idTokenRecord);\n-\n-        removeRefreshTokenIfNeeded(accountRecord, refreshTokenRecord);\n+        if (accountRecord != null && refreshTokenRecord != null) {\n+            removeRefreshTokenIfNeeded(accountRecord, refreshTokenRecord);\n+        }", "originalCommit": "8119aa16a639cc7c88b2592ab132b2c23348cf50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4NDkyNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/927#discussion_r438284925", "bodyText": "the account will not be null, if it already exists, added a comment describing the behavior. Let me know what you think here , we can remove this if x-plat wants to handle this too", "author": "kreedula", "createdAt": "2020-06-10T17:16:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg0MTIxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "237c25b3996674f7c2f97823830fcb9b1f4c8d0d", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java\nindex 88cf2daa5..fbf8700b9 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java\n\n@@ -109,6 +109,9 @@ public class MsalCppOAuth2TokenCache\n             }\n         }\n         if (accountRecord != null && refreshTokenRecord != null) {\n+            // MSAL C++ writes credentials first and then the account.\n+            // For a new account, this will not be true as the accountRecord will be null.\n+            // For existing accounts, we would remove the old refresh token if present.\n             removeRefreshTokenIfNeeded(accountRecord, refreshTokenRecord);\n         }\n \n"}}, {"oid": "237c25b3996674f7c2f97823830fcb9b1f4c8d0d", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/237c25b3996674f7c2f97823830fcb9b1f4c8d0d", "message": "Addressing comments", "committedDate": "2020-06-10T17:14:20Z", "type": "commit"}]}