{"pr_number": 982, "pr_title": "Add (a lot) more UI test utilities and Test Infrastructure Improvements. See description for complete context!", "pr_createdAt": "2020-07-24T23:47:17Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982", "timeline": [{"oid": "421c1eba749a2c17c03be1d941ae453387872f84", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/421c1eba749a2c17c03be1d941ae453387872f84", "message": "Add utils for CP device registration and enrollment", "committedDate": "2020-06-21T20:50:27Z", "type": "commit"}, {"oid": "8681ffb7f19a324a7e4911fb51373e835eb022ea", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8681ffb7f19a324a7e4911fb51373e835eb022ea", "message": "Merge branch 'dev' into shahzaibj/more-ui-test-utils", "committedDate": "2020-06-26T21:33:32Z", "type": "commit"}, {"oid": "6234802aa5870ad8ba0f85997017673833141a44", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/6234802aa5870ad8ba0f85997017673833141a44", "message": "Add more utilities for UI Tests", "committedDate": "2020-06-27T00:53:16Z", "type": "commit"}, {"oid": "48d4f6b6b3c33dfb3eb36382f797ac922876ee76", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/48d4f6b6b3c33dfb3eb36382f797ac922876ee76", "message": "Add license and comments", "committedDate": "2020-06-29T16:59:19Z", "type": "commit"}, {"oid": "5f0ee44c5f3ad7ac831dd5ebb889b4d1cfae9660", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5f0ee44c5f3ad7ac831dd5ebb889b4d1cfae9660", "message": "Address comments", "committedDate": "2020-06-29T23:29:49Z", "type": "commit"}, {"oid": "315d72e653d884d86a3fee5d4551a8108b3e6672", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/315d72e653d884d86a3fee5d4551a8108b3e6672", "message": "Add ui test utils for 1p apps as well as Settings screen", "committedDate": "2020-07-06T23:39:35Z", "type": "commit"}, {"oid": "f5f3b07beb03a175568f9862b9fb1c288f5e5799", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f5f3b07beb03a175568f9862b9fb1c288f5e5799", "message": "Merge branch 'dev' into shahzaibj/more-ui-test-utils", "committedDate": "2020-07-06T23:42:30Z", "type": "commit"}, {"oid": "5e4381ba6244eb59690bf94ba865de1e8dc17671", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5e4381ba6244eb59690bf94ba865de1e8dc17671", "message": "Address comments", "committedDate": "2020-07-06T23:47:53Z", "type": "commit"}, {"oid": "0cf836265c3b5ae1ae07de5ad8a95ed73b3da773", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0cf836265c3b5ae1ae07de5ad8a95ed73b3da773", "message": "Merge branch 'shahzaibj/more-ui-test-utils' into shahzaibj/extensive-test-utils", "committedDate": "2020-07-08T22:38:40Z", "type": "commit"}, {"oid": "b2159a165d0625d611f6667a464f05e6760b95e9", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b2159a165d0625d611f6667a464f05e6760b95e9", "message": "Merge branch 'dev' into shahzaibj/extensive-test-utils", "committedDate": "2020-07-08T22:38:49Z", "type": "commit"}, {"oid": "36d1d431231e6f9611b7bb8dce4b5b469f34b6d7", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/36d1d431231e6f9611b7bb8dce4b5b469f34b6d7", "message": "Add auth ui utilities for 1p apps", "committedDate": "2020-07-13T17:31:13Z", "type": "commit"}, {"oid": "43e20289faeccf88a1a0be219728512fe0c6f051", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/43e20289faeccf88a1a0be219728512fe0c6f051", "message": "Add more ui test utilities", "committedDate": "2020-07-20T18:26:07Z", "type": "commit"}, {"oid": "4f012672e0c0ab84c4f7d00caa6eef2b3f17bb87", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/4f012672e0c0ab84c4f7d00caa6eef2b3f17bb87", "message": "Add test rules", "committedDate": "2020-07-20T20:50:03Z", "type": "commit"}, {"oid": "d1ae0c296cf938005bf868ba3fd5375ce4d966be", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d1ae0c296cf938005bf868ba3fd5375ce4d966be", "message": "Add device enrollment failure recovery rule", "committedDate": "2020-07-22T01:27:20Z", "type": "commit"}, {"oid": "2bb6e7c8485ade614bb7c2c7212c35e142b370e3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2bb6e7c8485ade614bb7c2c7212c35e142b370e3", "message": "Rename rules package", "committedDate": "2020-07-22T01:32:29Z", "type": "commit"}, {"oid": "6f463cdc1e9348b48545079a50df87a13a06fd3d", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/6f463cdc1e9348b48545079a50df87a13a06fd3d", "message": "Accept retry on failure count", "committedDate": "2020-07-22T17:44:00Z", "type": "commit"}, {"oid": "cb05c7bce9685245c99ff50f9920f9780634e6c3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/cb05c7bce9685245c99ff50f9920f9780634e6c3", "message": "Fix remove account from Settings page", "committedDate": "2020-07-22T18:57:12Z", "type": "commit"}, {"oid": "4297100223edb885478e0118fd744e1143ca9d0d", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/4297100223edb885478e0118fd744e1143ca9d0d", "message": "Add device and settings interface", "committedDate": "2020-07-24T23:40:19Z", "type": "commit"}, {"oid": "31551a6c08e10e1b3f5464a114a19c9ab6b488db", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/31551a6c08e10e1b3f5464a114a19c9ab6b488db", "message": "Add change date util for samsung devices", "committedDate": "2020-07-25T19:22:52Z", "type": "commit"}, {"oid": "ebf26c8734145b919e409321f8ce51648d8a1bc9", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/ebf26c8734145b919e409321f8ce51648d8a1bc9", "message": "Add javadoc and comments to code", "committedDate": "2020-07-25T23:06:27Z", "type": "commit"}, {"oid": "54f3881c93c3ef00ec5b574426f9df44c37c49e2", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/54f3881c93c3ef00ec5b574426f9df44c37c49e2", "message": "Add missing licenses", "committedDate": "2020-07-25T23:10:47Z", "type": "commit"}, {"oid": "ec5795d3d9e591ad3e61995739142c4e26f1eeac", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/ec5795d3d9e591ad3e61995739142c4e26f1eeac", "message": "Add nonnull and final where needed", "committedDate": "2020-07-25T23:33:07Z", "type": "commit"}, {"oid": "f7da8a8f70fe4da03dd9fb626ce0aba912b50a03", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f7da8a8f70fe4da03dd9fb626ce0aba912b50a03", "message": "Add more comments and javadoc", "committedDate": "2020-07-25T23:41:06Z", "type": "commit"}, {"oid": "20b7302dbef3684fb3d68ccb73d190c659104da0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/20b7302dbef3684fb3d68ccb73d190c659104da0", "message": "Configure broker install source via CLI", "committedDate": "2020-07-26T17:10:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1MjU3Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461052577", "bodyText": "final", "author": "shahzaibj", "createdAt": "2020-07-27T17:29:16Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java", "diffHunk": "@@ -0,0 +1,56 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DeleteDeviceApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link DeleteDeviceApi}\n+ */\n+public class LabDeviceHelper {\n+\n+    /**\n+     * Deletes the provided device from the directory\n+     *\n+     * @param upn      the upn to whom this device is associated\n+     * @param deviceId the device id of the device to delete\n+     * @return\n+     */\n+    public static boolean deleteDevice(final String upn, final String deviceId) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        DeleteDeviceApi deleteDeviceApi = new DeleteDeviceApi();", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTA0Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065042", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1MjU3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\nindex 5918761d5..c003f7277 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\n\n@@ -36,11 +36,11 @@ public class LabDeviceHelper {\n      *\n      * @param upn      the upn to whom this device is associated\n      * @param deviceId the device id of the device to delete\n-     * @return\n+     * @return a boolean indicating if the device has been deleted successfully\n      */\n     public static boolean deleteDevice(final String upn, final String deviceId) {\n         LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        DeleteDeviceApi deleteDeviceApi = new DeleteDeviceApi();\n+        final DeleteDeviceApi deleteDeviceApi = new DeleteDeviceApi();\n \n         final CustomSuccessResponse customSuccessResponse;\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1Mjc3Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461052772", "bodyText": "final", "author": "shahzaibj", "createdAt": "2020-07-27T17:29:36Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.ResetApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link ResetApi}\n+ */\n+public class LabResetHelper {\n+\n+    /**\n+     * Reset the password for the supplied account\n+     *\n+     * @param upn the upn of the user for which to reset password\n+     * @return a boolean indicating if password reset was successful\n+     */\n+    public static boolean resetPassword(@NonNull final String upn) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        ResetApi resetApi = new ResetApi();", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTA4OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065088", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1Mjc3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\nindex a6086786d..6d36b82f1 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n\n@@ -41,7 +41,7 @@ public class LabResetHelper {\n      */\n     public static boolean resetPassword(@NonNull final String upn) {\n         LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        ResetApi resetApi = new ResetApi();\n+        final ResetApi resetApi = new ResetApi();\n \n         final CustomSuccessResponse customSuccessResponse;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1Mjg4MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461052881", "bodyText": "final", "author": "shahzaibj", "createdAt": "2020-07-27T17:29:44Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.ResetApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link ResetApi}\n+ */\n+public class LabResetHelper {\n+\n+    /**\n+     * Reset the password for the supplied account\n+     *\n+     * @param upn the upn of the user for which to reset password\n+     * @return a boolean indicating if password reset was successful\n+     */\n+    public static boolean resetPassword(@NonNull final String upn) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        ResetApi resetApi = new ResetApi();\n+\n+        final CustomSuccessResponse customSuccessResponse;\n+\n+        try {\n+            customSuccessResponse = resetApi.putResetInfo(upn, LabConstants.ResetOperation.PASSWORD);\n+            final String expectedResult = (\"Password reset successful for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Resets the MFA for the supplied user account\n+     *\n+     * @param upn the upn of the user for which to reset MFA\n+     * @return a boolean indicating if MFA reset was successful\n+     */\n+    public static boolean resetMfa(@NonNull final String upn) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        ResetApi resetApi = new ResetApi();", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTEyNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065124", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1Mjg4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\nindex a6086786d..6d36b82f1 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n\n@@ -41,7 +41,7 @@ public class LabResetHelper {\n      */\n     public static boolean resetPassword(@NonNull final String upn) {\n         LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        ResetApi resetApi = new ResetApi();\n+        final ResetApi resetApi = new ResetApi();\n \n         final CustomSuccessResponse customSuccessResponse;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NDAzMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461054033", "bodyText": "this first party app", "author": "shahzaibj", "createdAt": "2020-07-27T17:31:36Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java", "diffHunk": "@@ -0,0 +1,71 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+\n+/**\n+ * An interface describing a first party application and the actions that can be performed on them.\n+ */\n+public interface IFirstPartyApp {\n+\n+    /**\n+     * Add the first user account to this first party app\n+     *\n+     * @param username                the username of the account to add\n+     * @param password                the password of the account to add\n+     * @param promptHandlerParameters the prompt handler parameters indicating how to handle prompt\n+     */\n+    void addFirstAccount(@NonNull final String username,\n+                         @NonNull final String password,\n+                         @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters);\n+\n+    /**\n+     * Add another account to this first party app. This must only be called if the an account was\n+     * previously added to this first party app.\n+     *\n+     * @param username                the username of the account to add\n+     * @param password                the password of the account to add\n+     * @param promptHandlerParameters the prompt handler parameters indicating how to handle prompt\n+     */\n+    void addAnotherAccount(final String username,\n+                           final String password,\n+                           final FirstPartyAppPromptHandlerParameters promptHandlerParameters);\n+\n+    /**\n+     * This method can be called handle welcome screens in the first party app that appear on the\n+     * successful addition of an account to that first party app", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTE5MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065191", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NDAzMw=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\nindex 648b8092c..b89ab77ec 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n\n@@ -55,8 +55,8 @@ public interface IFirstPartyApp {\n                            final FirstPartyAppPromptHandlerParameters promptHandlerParameters);\n \n     /**\n-     * This method can be called handle welcome screens in the first party app that appear on the\n-     * successful addition of an account to that first party app\n+     * This method can be called to handle the welcome screens in the first party app that appear on\n+     * the successful addition of an account to that first party app\n      */\n     void onAccountAdded();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NDI0NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461054245", "bodyText": "are", "author": "shahzaibj", "createdAt": "2020-07-27T17:31:56Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java", "diffHunk": "@@ -0,0 +1,116 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class represents the Outlook Android app during UI Automated Test\n+ */\n+public class OutlookApp extends App implements IFirstPartyApp {\n+\n+    private static final String OUTLOOK_PACKAGE_NAME = \"com.microsoft.office.outlook\";\n+    private static final String OUTLOOK_APP_NAME = \"Microsoft Outlook\";\n+\n+    public OutlookApp() {\n+        super(OUTLOOK_PACKAGE_NAME, OUTLOOK_APP_NAME, new PlayStore());\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        // nothing required\n+    }\n+\n+    @Override\n+    public void addFirstAccount(@NonNull final String username,\n+                                @NonNull final String password,\n+                                @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // Click start btn\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.outlook:id/btn_splash_start\");\n+\n+        // sign in with supplied username/password\n+        signIn(username, password, promptHandlerParameters);\n+    }\n+\n+    @Override\n+    public void onAccountAdded() {\n+        // Make sure we on add another account (shows up after an account is added)", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTI0Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065243", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NDI0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java\nindex af34238fb..f9e9185f6 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java\n\n@@ -62,7 +62,7 @@ public class OutlookApp extends App implements IFirstPartyApp {\n \n     @Override\n     public void onAccountAdded() {\n-        // Make sure we on add another account (shows up after an account is added)\n+        // Make sure we are on add another account (shows up after an account is added)\n         final UiObject addAnotherAccountScreen = UiAutomatorUtils.obtainUiObjectWithText(\"Add another account\");\n         Assert.assertTrue(addAnotherAccountScreen.exists());\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NDQ2NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461054464", "bodyText": "extra line", "author": "shahzaibj", "createdAt": "2020-07-27T17:32:19Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java", "diffHunk": "@@ -0,0 +1,121 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class represents the Teams Android app during UI Automated Test\n+ */\n+public class TeamsApp extends App implements IFirstPartyApp {\n+\n+    private static final String TEAMS_PACKAGE_NAME = \"com.microsoft.teams\";\n+    private static final String TEAMS_APP_NAME = \"Microsoft Teams\";\n+\n+    public TeamsApp() {\n+        super(TEAMS_PACKAGE_NAME, TEAMS_APP_NAME, new PlayStore());\n+    }\n+\n+", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTI4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065287", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NDQ2NA=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java\nindex c0e936cae..7e4927ff3 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java\n\n@@ -46,7 +46,6 @@ public class TeamsApp extends App implements IFirstPartyApp {\n         super(TEAMS_PACKAGE_NAME, TEAMS_APP_NAME, new PlayStore());\n     }\n \n-\n     @Override\n     public void handleFirstRun() {\n         // nothing needed here\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NTg5Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461055896", "bodyText": "if account", "author": "shahzaibj", "createdAt": "2020-07-27T17:34:52Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/BrowserEdge.java", "diffHunk": "@@ -0,0 +1,155 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.browser;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.app.App;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+import static org.junit.Assert.fail;\n+\n+/**\n+ * This class represents the Edge Android app during UI Automated Test\n+ */\n+public class BrowserEdge extends App implements IBrowser {\n+\n+    private static final String EDGE_PACKAGE_NAME = \"com.microsoft.emmx\";\n+    private static final String EDGE_APP_NAME = \"Microsoft Edge\";\n+\n+    public BrowserEdge() {\n+        super(EDGE_PACKAGE_NAME, EDGE_APP_NAME);\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        // cancel sync in Edge\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.emmx:id/not_now\");\n+        sleep(); // need to use sleep due to Edge animations\n+        // cancel sharing data\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.emmx:id/not_now\");\n+        sleep(); // need to use sleep due to Edge animations\n+        // cancel personalization\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.emmx:id/fre_share_not_now\");\n+        sleep();// need to use sleep due to Edge animations\n+        // avoid setting default\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.emmx:id/no\");\n+        sleep();// need to use sleep due to Edge animations\n+    }\n+\n+    public void browse(@NonNull final String url) {\n+        //  Click on the search bar in the browser UI\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.emmx:id/search_box_text\");\n+\n+        final UiObject inputField = UiAutomatorUtils.obtainUiObjectWithResourceId(\n+                \"com.microsoft.emmx:id/url_bar\"\n+        );\n+\n+        try {\n+            // enter the URL\n+            inputField.setText(url);\n+        } catch (UiObjectNotFoundException e) {\n+            fail(e.getMessage());\n+        }\n+\n+        final UiDevice device =\n+                UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+\n+        // press enter on the Keyboard\n+        device.pressEnter();\n+    }\n+\n+    private void sleep() {\n+        try {\n+            Thread.sleep(3000);\n+        } catch (InterruptedException e) {\n+            Assert.fail(e.getMessage());\n+        }\n+    }\n+\n+    public void signIn(@NonNull final String username,\n+                       @NonNull final String password,\n+                       @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // The Sign In UI in Edge is different depending on account(s) are in TSL", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTMzNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065337", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NTg5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/BrowserEdge.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/BrowserEdge.java\nindex 1b312c8c4..c7f5433e6 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/BrowserEdge.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/BrowserEdge.java\n\n@@ -98,7 +98,7 @@ public class BrowserEdge extends App implements IBrowser {\n     public void signIn(@NonNull final String username,\n                        @NonNull final String password,\n                        @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n-        // The Sign In UI in Edge is different depending on account(s) are in TSL\n+        // The Sign In UI in Edge is different depending on if account(s) are in TSL\n         try {\n             if (promptHandlerParameters.isExpectingProvidedAccountInTSL()) {\n                 // This case handles the UI if our account is expected to be in TSL\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NjY4OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461056689", "bodyText": "should fail", "author": "shahzaibj", "createdAt": "2020-07-27T17:36:14Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/installer/PlayStore.java", "diffHunk": "@@ -92,61 +107,51 @@ private void selectGooglePlayAppFromInstallBar() throws UiObjectNotFoundExceptio\n         appInstallBar.click();\n     }\n \n-    private void selectGooglePlayAppFromAppName(@NonNull final String appName) {\n+    private void selectGooglePlayAppFromAppName() {\n         try {\n             selectGooglePlayAppFromInstallBar();\n         } catch (UiObjectNotFoundException e) {\n             try {\n-                selectGooglePlayAppFromAppList(appName);\n+                selectGooglePlayAppFromAppList();\n             } catch (UiObjectNotFoundException ex) {\n-                Assert.fail(ex.getMessage());\n+                ex.printStackTrace();", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTM3Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065373", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NjY4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/installer/PlayStore.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/installer/PlayStore.java\nindex c5f1bbd8d..c1f2416d8 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/installer/PlayStore.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/installer/PlayStore.java\n\n@@ -114,7 +114,7 @@ public class PlayStore implements IAppInstaller {\n             try {\n                 selectGooglePlayAppFromAppList();\n             } catch (UiObjectNotFoundException ex) {\n-                ex.printStackTrace();\n+                Assert.fail(ex.getMessage());\n             }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NzEzMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461057130", "bodyText": "comments", "author": "shahzaibj", "createdAt": "2020-07-27T17:37:05Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java", "diffHunk": "@@ -44,23 +44,37 @@\n     @NonNull\n     private final PromptParameter prompt;\n \n+    // the login hint that was provided\n+    private final String loginHint;\n+\n     // whether session is expected or not (via presence of a cookie)\n     private final boolean sessionExpected;\n \n-    // whether login hint was supplied or not to the interactive request\n-    private final boolean loginHintProvided;\n+    // The broker that should be being used for this request\n+    private final ITestBroker broker;\n+\n+    private final boolean expectingBrokerAccountChooserActivity;\n+\n+    private final boolean expectingProvidedAccountInBroker;\n+\n+    private final boolean expectingLoginPageAccountPicker;\n+\n+    private final boolean expectingProvidedAccountInCookie;", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTQyOA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065428", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NzEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java\nindex 7f4025f3a..6520b461a 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java\n\n@@ -53,12 +53,17 @@ public class PromptHandlerParameters {\n     // The broker that should be being used for this request\n     private final ITestBroker broker;\n \n+    // whether we expected the broker account chooser activity to appear\n     private final boolean expectingBrokerAccountChooserActivity;\n \n+    // whether we expect our account (the one being used to login) to exist in the broker\n     private final boolean expectingProvidedAccountInBroker;\n \n+    // whether we expect the login page account picker (AAD login page) to appear\n     private final boolean expectingLoginPageAccountPicker;\n \n+    // whether we expect our account (the one being used to login) to exist in cookies.\n+    // This determines if that account would appear in AAD account picker\n     private final boolean expectingProvidedAccountInCookie;\n \n     // whether we expect to receive consent page or not\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NzIwNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461057205", "bodyText": "comment", "author": "shahzaibj", "createdAt": "2020-07-27T17:37:13Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java", "diffHunk": "@@ -44,23 +44,37 @@\n     @NonNull\n     private final PromptParameter prompt;\n \n+    // the login hint that was provided\n+    private final String loginHint;\n+\n     // whether session is expected or not (via presence of a cookie)\n     private final boolean sessionExpected;\n \n-    // whether login hint was supplied or not to the interactive request\n-    private final boolean loginHintProvided;\n+    // The broker that should be being used for this request\n+    private final ITestBroker broker;\n+\n+    private final boolean expectingBrokerAccountChooserActivity;\n+\n+    private final boolean expectingProvidedAccountInBroker;\n+\n+    private final boolean expectingLoginPageAccountPicker;\n+\n+    private final boolean expectingProvidedAccountInCookie;\n \n     // whether we expect to receive consent page or not\n     private final boolean consentPageExpected;\n \n     // whether we expect to receive speed bump or not\n     private final boolean speedBumpExpected;\n \n-    // whether we are expecting at least one account in broker\n-    private final boolean expectingNonZeroAccountsInBroker;\n+    private final boolean registerPageExpected;", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTQ2Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065462", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NzIwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java\nindex 7f4025f3a..6520b461a 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java\n\n@@ -53,12 +53,17 @@ public class PromptHandlerParameters {\n     // The broker that should be being used for this request\n     private final ITestBroker broker;\n \n+    // whether we expected the broker account chooser activity to appear\n     private final boolean expectingBrokerAccountChooserActivity;\n \n+    // whether we expect our account (the one being used to login) to exist in the broker\n     private final boolean expectingProvidedAccountInBroker;\n \n+    // whether we expect the login page account picker (AAD login page) to appear\n     private final boolean expectingLoginPageAccountPicker;\n \n+    // whether we expect our account (the one being used to login) to exist in cookies.\n+    // This determines if that account would appear in AAD account picker\n     private final boolean expectingProvidedAccountInCookie;\n \n     // whether we expect to receive consent page or not\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1ODQ3OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461058478", "bodyText": "This class isn't needed anymore and should be deleted", "author": "shahzaibj", "createdAt": "2020-07-27T17:39:34Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/SettingsUtils.java", "diffHunk": "@@ -0,0 +1,253 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.utils;\n+\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.provider.Settings;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+import androidx.test.uiautomator.UiSelector;\n+\n+import com.microsoft.identity.client.ui.automation.app.App;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+\n+import org.junit.Assert;\n+\n+import java.util.Calendar;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.getResourceId;\n+import static com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils.obtainUiObjectWithExactText;\n+\n+/**\n+ * This class contains utilities to interact with device Settings during a UI TEST\n+ */\n+public class SettingsUtils {", "originalCommit": "20b7302dbef3684fb3d68ccb73d190c659104da0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTUxNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461065517", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-27T17:51:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1ODQ3OA=="}], "type": "inlineReview", "revised_code": {"commit": "ca3e2ce288baa752dad049040ada13142cacc5b0", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/SettingsUtils.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/SettingsUtils.java\ndeleted file mode 100644\nindex 42c0216bb..000000000\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/SettingsUtils.java\n+++ /dev/null\n\n@@ -1,253 +0,0 @@\n-//  Copyright (c) Microsoft Corporation.\n-//  All rights reserved.\n-//\n-//  This code is licensed under the MIT License.\n-//\n-//  Permission is hereby granted, free of charge, to any person obtaining a copy\n-//  of this software and associated documentation files(the \"Software\"), to deal\n-//  in the Software without restriction, including without limitation the rights\n-//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n-//  copies of the Software, and to permit persons to whom the Software is\n-//  furnished to do so, subject to the following conditions :\n-//\n-//  The above copyright notice and this permission notice shall be included in\n-//  all copies or substantial portions of the Software.\n-//\n-//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n-//  THE SOFTWARE.\n-package com.microsoft.identity.client.ui.automation.utils;\n-\n-import android.content.ComponentName;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.provider.Settings;\n-\n-import androidx.annotation.NonNull;\n-import androidx.test.core.app.ApplicationProvider;\n-import androidx.test.platform.app.InstrumentationRegistry;\n-import androidx.test.uiautomator.UiDevice;\n-import androidx.test.uiautomator.UiObject;\n-import androidx.test.uiautomator.UiObjectNotFoundException;\n-import androidx.test.uiautomator.UiSelector;\n-\n-import com.microsoft.identity.client.ui.automation.app.App;\n-import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n-import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n-import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n-import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n-\n-import org.junit.Assert;\n-\n-import java.util.Calendar;\n-\n-import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n-import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.getResourceId;\n-import static com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils.obtainUiObjectWithExactText;\n-\n-/**\n- * This class contains utilities to interact with device Settings during a UI TEST\n- */\n-public class SettingsUtils {\n-\n-    final static String SETTINGS_PKG = \"com.android.settings\";\n-\n-    private static void launchIntent(final String action) {\n-        final Context context = ApplicationProvider.getApplicationContext();\n-        Intent intent = new Intent(action);\n-        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\n-        context.startActivity(intent);\n-    }\n-\n-    /**\n-     * Launch the device admin settings page\n-     */\n-    public static void launchDeviceAdminSettingsPage() {\n-        Intent intent = new Intent();\n-        intent.setComponent(new ComponentName(\n-                SETTINGS_PKG,\n-                SETTINGS_PKG + \".DeviceAdminSettings\")\n-        );\n-        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\n-        final Context context = ApplicationProvider.getApplicationContext();\n-        context.startActivity(intent);\n-\n-        final UiObject deviceAdminPage = UiAutomatorUtils.obtainUiObjectWithText(\"device admin\");\n-        Assert.assertTrue(deviceAdminPage.exists());\n-    }\n-\n-    /**\n-     * Disable the specified admin app on the device via the Settings screen\n-     *\n-     * @param adminName the admin app to disable\n-     */\n-    public static void disableAdmin(final String adminName) {\n-        launchDeviceAdminSettingsPage();\n-\n-        try {\n-            // scroll down the recycler view to find the list item for this admin\n-            final UiObject adminAppListItem = UiAutomatorUtils.obtainChildInScrollable(\n-                    \"android:id/list\",\n-                    adminName\n-            );\n-\n-            assert adminAppListItem != null;\n-            adminAppListItem.click();\n-\n-            // scroll down the recycler view to find btn to deactivate admin\n-            final UiObject deactivateBtn = UiAutomatorUtils.obtainChildInScrollable(\n-                    android.widget.ScrollView.class,\n-                    \"Deactivate this device admin app\"\n-            );\n-\n-            deactivateBtn.click();\n-\n-            UiAutomatorUtils.handleButtonClick(\"android:id/button1\");\n-        } catch (UiObjectNotFoundException e) {\n-            Assert.fail(e.getMessage());\n-        }\n-\n-    }\n-\n-    public static void launchAddAccountPage() {\n-        launchIntent(Settings.ACTION_ADD_ACCOUNT);\n-    }\n-\n-    public static void launchAccountListPage() {\n-        launchIntent(Settings.ACTION_SYNC_SETTINGS);\n-    }\n-\n-    public static void removeAccount(@NonNull final String username) {\n-        launchAccountListPage();\n-        try {\n-            final UiObject account = UiAutomatorUtils.obtainChildInScrollable(\n-                    \"com.android.settings:id/list\",\n-                    username\n-            );\n-            account.click();\n-\n-            final UiObject removeAccountBtn = UiAutomatorUtils.obtainUiObjectWithResourceIdAndText(\n-                    \"com.android.settings:id/button\",\n-                    \"Remove account\"\n-            );\n-\n-            removeAccountBtn.click();\n-\n-            final UiObject removeAccountConfirmationDialogBtn = UiAutomatorUtils.obtainUiObjectWithResourceIdAndText(\n-                    \"android:id/button1\",\n-                    \"Remove account\"\n-            );\n-\n-            removeAccountConfirmationDialogBtn.click();\n-        } catch (UiObjectNotFoundException e) {\n-            Assert.fail(e.getMessage());\n-        }\n-    }\n-\n-    public static void addWorkAccount(final ITestBroker expectedBroker,\n-                                      final String username,\n-                                      final String password) {\n-        launchAddAccountPage();\n-\n-        try {\n-            // scroll down the recycler view to find the list item for this account type\n-            final UiObject workAccount = UiAutomatorUtils.obtainChildInScrollable(\n-                    \"com.android.settings:id/list\",\n-                    \"Work account\"\n-            );\n-\n-            workAccount.click();\n-\n-            UiAutomatorUtils.handleInput(\n-                    CommonUtils.getResourceId(\n-                            ((App) expectedBroker).getPackageName(), \"UsernameET\"\n-                    ),\n-                    username\n-            );\n-\n-            UiAutomatorUtils.handleButtonClick(\n-                    CommonUtils.getResourceId(\n-                            ((App) expectedBroker).getPackageName(), \"JoinButton\"\n-                    )\n-            );\n-\n-            final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n-                    .broker(expectedBroker)\n-                    .prompt(PromptParameter.SELECT_ACCOUNT)\n-                    .loginHint(username)\n-                    .sessionExpected(false)\n-                    .build();\n-\n-            final AadPromptHandler aadPromptHandler = new AadPromptHandler(promptHandlerParameters);\n-\n-            aadPromptHandler.handlePrompt(username, password);\n-\n-            final UiDevice device =\n-                    UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n-\n-            UiObject certInstaller = device.findObject(new UiSelector().packageName(\"com.android.certinstaller\"));\n-            certInstaller.waitForExists(FIND_UI_ELEMENT_TIMEOUT);\n-            Assert.assertTrue(certInstaller.exists());\n-\n-            UiAutomatorUtils.handleButtonClick(\"android:id/button1\");\n-\n-            final UiObject joinConfirmation = UiAutomatorUtils.obtainUiObjectWithText(\n-                    \"Workplace Joined to\u00a0\" + username\n-            );\n-\n-            Assert.assertTrue(joinConfirmation.exists());\n-\n-            UiAutomatorUtils.handleButtonClick(getResourceId(\n-                    ((App) expectedBroker).getPackageName(),\n-                    \"JoinButton\"\n-            ));\n-        } catch (UiObjectNotFoundException e) {\n-            Assert.fail(e.getMessage());\n-        }\n-    }\n-\n-    public static void launchDateTimeSettingsPage() {\n-        launchIntent(Settings.ACTION_DATE_SETTINGS);\n-    }\n-\n-    public static void changeDeviceTime() {\n-        AdbShellUtils.disableAutomaticTimeZone();\n-        launchDateTimeSettingsPage();\n-\n-        try {\n-            final UiObject setTimeBtn = UiAutomatorUtils.obtainUiObjectWithText(\"Set date\");\n-            setTimeBtn.click();\n-\n-            final UiObject datePicker = UiAutomatorUtils.obtainUiObjectWithResourceId(\"android:id/date_picker_header_date\");\n-            Assert.assertTrue(datePicker.exists());\n-\n-            final Calendar cal = Calendar.getInstance();\n-\n-            // add one to move to next day\n-            cal.add(Calendar.DATE, 1);\n-\n-            // this is the new date\n-            final int dateToSet = cal.get(Calendar.DATE);\n-\n-            if (dateToSet == 1) {\n-                // looks we are into the next month, so let's update month here too\n-                UiAutomatorUtils.handleButtonClick(\"android:id/next\");\n-            }\n-\n-            UiObject specifiedDateIcon = obtainUiObjectWithExactText(\n-                    String.valueOf(dateToSet)\n-            );\n-            specifiedDateIcon.click();\n-\n-            final UiObject okBtn = UiAutomatorUtils.obtainUiObjectWithText(\"OK\");\n-            okBtn.click();\n-        } catch (UiObjectNotFoundException e) {\n-            Assert.fail(e.getMessage());\n-        }\n-\n-    }\n-}\n"}}, {"oid": "f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f18aa85be4b7cc8f3cf5e957a042dc4c10d864ec", "message": "Address comments", "committedDate": "2020-07-27T17:50:45Z", "type": "commit"}, {"oid": "ca3e2ce288baa752dad049040ada13142cacc5b0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/ca3e2ce288baa752dad049040ada13142cacc5b0", "message": "Delete SettingsUtils.java", "committedDate": "2020-07-27T17:50:59Z", "type": "commit"}, {"oid": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/249ab28af1e7e67ad64fc250b7378bc65b921f02", "message": "Merge branch 'dev' into shahzaibj/extensive-test-utils", "committedDate": "2020-07-27T18:15:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzOTgwMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461139802", "bodyText": "punctuation for first line of Javadoc.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:08:59Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java", "diffHunk": "@@ -0,0 +1,56 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DeleteDeviceApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link DeleteDeviceApi}", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTgzNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461141837", "bodyText": "From: https://docs.oracle.com/javase/1.5.0/docs/tooldocs/solaris/javadoc.html#comments\nFirst sentence - The first sentence of each doc comment should be a summary sentence, containing a concise but complete description of the declared entity. This sentence ends at the first period that is followed by a blank, tab, or line terminator, or at the first block tag. The Javadoc tool copies this first sentence to the member summary at the top of the HTML page.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:13:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzOTgwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMwMDI5Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461300293", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T03:47:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzOTgwMg=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\nindex c003f7277..b093f3c8a 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\n\n@@ -27,12 +27,12 @@ import com.microsoft.identity.internal.test.labapi.api.DeleteDeviceApi;\n import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n \n /**\n- * Utilities to interact with Lab {@link DeleteDeviceApi}\n+ * Utilities to interact with Lab {@link DeleteDeviceApi}.\n  */\n public class LabDeviceHelper {\n \n     /**\n-     * Deletes the provided device from the directory\n+     * Deletes the provided device from the directory.\n      *\n      * @param upn      the upn to whom this device is associated\n      * @param deviceId the device id of the device to delete\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzOTkyMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461139921", "bodyText": "punctuation for first line of javadoc.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:09:13Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java", "diffHunk": "@@ -0,0 +1,56 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DeleteDeviceApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link DeleteDeviceApi}\n+ */\n+public class LabDeviceHelper {\n+\n+    /**\n+     * Deletes the provided device from the directory", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMwMDM0Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461300346", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T03:47:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzOTkyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\nindex c003f7277..b093f3c8a 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\n\n@@ -27,12 +27,12 @@ import com.microsoft.identity.internal.test.labapi.api.DeleteDeviceApi;\n import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n \n /**\n- * Utilities to interact with Lab {@link DeleteDeviceApi}\n+ * Utilities to interact with Lab {@link DeleteDeviceApi}.\n  */\n public class LabDeviceHelper {\n \n     /**\n-     * Deletes the provided device from the directory\n+     * Deletes the provided device from the directory.\n      *\n      * @param upn      the upn to whom this device is associated\n      * @param deviceId the device id of the device to delete\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MDAxOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461140019", "bodyText": "punctuation", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:09:26Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.ResetApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link ResetApi}", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMwMDM2Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461300367", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T03:47:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MDAxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\nindex 6d36b82f1..6420aa13a 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n\n@@ -29,12 +29,12 @@ import com.microsoft.identity.internal.test.labapi.api.ResetApi;\n import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n \n /**\n- * Utilities to interact with Lab {@link ResetApi}\n+ * Utilities to interact with Lab {@link ResetApi}.\n  */\n public class LabResetHelper {\n \n     /**\n-     * Reset the password for the supplied account\n+     * Reset the password for the supplied account.\n      *\n      * @param upn the upn of the user for which to reset password\n      * @return a boolean indicating if password reset was successful\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MDA4Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461140082", "bodyText": "punctuation.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:09:33Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.ResetApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link ResetApi}\n+ */\n+public class LabResetHelper {\n+\n+    /**\n+     * Reset the password for the supplied account", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMwMDM4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461300387", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T03:47:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MDA4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\nindex 6d36b82f1..6420aa13a 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n\n@@ -29,12 +29,12 @@ import com.microsoft.identity.internal.test.labapi.api.ResetApi;\n import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n \n /**\n- * Utilities to interact with Lab {@link ResetApi}\n+ * Utilities to interact with Lab {@link ResetApi}.\n  */\n public class LabResetHelper {\n \n     /**\n-     * Reset the password for the supplied account\n+     * Reset the password for the supplied account.\n      *\n      * @param upn the upn of the user for which to reset password\n      * @return a boolean indicating if password reset was successful\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk2MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461141961", "bodyText": "Punctuation.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:13:16Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.ResetApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link ResetApi}\n+ */\n+public class LabResetHelper {\n+\n+    /**\n+     * Reset the password for the supplied account\n+     *\n+     * @param upn the upn of the user for which to reset password\n+     * @return a boolean indicating if password reset was successful\n+     */\n+    public static boolean resetPassword(@NonNull final String upn) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final ResetApi resetApi = new ResetApi();\n+\n+        final CustomSuccessResponse customSuccessResponse;\n+\n+        try {\n+            customSuccessResponse = resetApi.putResetInfo(upn, LabConstants.ResetOperation.PASSWORD);\n+            final String expectedResult = (\"Password reset successful for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Resets the MFA for the supplied user account", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMwMDQwOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461300409", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T03:47:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\nindex 6d36b82f1..6420aa13a 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n\n@@ -29,12 +29,12 @@ import com.microsoft.identity.internal.test.labapi.api.ResetApi;\n import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n \n /**\n- * Utilities to interact with Lab {@link ResetApi}\n+ * Utilities to interact with Lab {@link ResetApi}.\n  */\n public class LabResetHelper {\n \n     /**\n-     * Reset the password for the supplied account\n+     * Reset the password for the supplied account.\n      *\n      * @param upn the upn of the user for which to reset password\n      * @return a boolean indicating if password reset was successful\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MjcxOA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461142718", "bodyText": "punctuation.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:14:50Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/IBrokerTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation;\n+\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+\n+/**\n+ * An interface describing a test that can leverage a {@link ITestBroker} installed on the device", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMwMDQzMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461300432", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T03:47:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MjcxOA=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/IBrokerTest.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/IBrokerTest.java\nindex 77681d224..3b4e82e33 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/IBrokerTest.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/IBrokerTest.java\n\n@@ -25,7 +25,7 @@ package com.microsoft.identity.client.ui.automation;\n import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n \n /**\n- * An interface describing a test that can leverage a {@link ITestBroker} installed on the device\n+ * An interface describing a test that can leverage a {@link ITestBroker} installed on the device.\n  */\n public interface IBrokerTest {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0Mjk0Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461142943", "bodyText": "punctuation.  What does implementing this interface do?", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:15:14Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/ILabTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation;\n+\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+/**\n+ * An interface describing a test that can leverage the Lab Api to fetch accounts", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0MjQ0NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461742445", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T17:15:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0Mjk0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/ILabTest.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/ILabTest.java\nindex 3ee57f99b..70ab179ab 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/ILabTest.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/ILabTest.java\n\n@@ -25,19 +25,19 @@ package com.microsoft.identity.client.ui.automation;\n import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n \n /**\n- * An interface describing a test that can leverage the Lab Api to fetch accounts\n+ * An interface describing a test that can leverage the Lab Api to fetch accounts.\n  */\n public interface ILabTest {\n \n     /**\n-     * Get the query that can be used to pull a user from the LAB API\n+     * Get the query that can be used to pull a user from the LAB API.\n      *\n      * @return A {@link LabUserQuery} object that can be used to pull user via LAB API\n      */\n     LabUserQuery getLabUserQuery();\n \n     /**\n-     * Get the type of temp user that can be used to create a new temp user via LAB API\n+     * Get the type of temp user that can be used to create a new temp user via LAB API.\n      *\n      * @return The type of temp user as denoted in {@link com.microsoft.identity.internal.testutils.labutils.LabConstants.TempUserType}\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NTE2MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461145160", "bodyText": "This non-final protected member variable should have documentation describing what it does.  How would one decide when to set it to false?", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:19:33Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/App.java", "diffHunk": "@@ -45,13 +45,15 @@\n     @Setter\n     private IAppInstaller appInstaller;\n \n-    private String packageName;\n+    private final String packageName;\n \n     @Setter\n     private String appName;\n \n     protected String localApkFileName = null;\n \n+    protected boolean shouldHandleFirstRun = true;", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0MjgxMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461742811", "bodyText": "Yup, added javadoc for variable.", "author": "shahzaibj", "createdAt": "2020-07-28T17:15:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NTE2MA=="}], "type": "inlineReview", "revised_code": {"commit": "42b4b5e2b285daef3669105298961b937807cd05", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/App.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/App.java\nindex c0925960c..171721450 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/App.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/App.java\n\n@@ -52,6 +52,12 @@ public abstract class App implements IApp {\n \n     protected String localApkFileName = null;\n \n+    /**\n+     * Indicates whether the first run experience should be handled in the UI. This value can\n+     * (should) be changed to false by child classes as appropriate. Usually if the app is launched\n+     * for the first time, then it makes sense for this value to be true and first run experience\n+     * to be handled, and this value to be set to false for subsequent launches of the app.\n+     */\n     protected boolean shouldHandleFirstRun = true;\n \n     public App(@NonNull final String packageName) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NjQ4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461146487", "bodyText": "nit: silly naming comment, but this name reads like it is the app.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:21:53Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.browser.IBrowser;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class models the Azure Sample App for MSAL Android.\n+ * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java\n+ */\n+public class AzureSampleApp extends App {", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0Mzc3MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461743771", "bodyText": "I'll keep it this way because I guess it just feels more natural. I improved the javadoc though with your suggestions to call out this this is a model to interact with the app during a UI Test.", "author": "shahzaibj", "createdAt": "2020-07-28T17:17:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NjQ4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\nindex ffbd26c12..f34a0ea53 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n\n@@ -38,7 +38,7 @@ import org.junit.Assert;\n /**\n  * This class models the Azure Sample App for MSAL Android.\n  * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n- * See this: https://github.com/Azure-Samples/ms-identity-android-java\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java.\n  */\n public class AzureSampleApp extends App {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NzA0OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461147048", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Sing out of the Azure Sample App. Please note that this method performs sign out of the\n          \n          \n            \n                 * Sign out of the Azure Sample App. Please note that this method performs sign out of the", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:22:56Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.browser.IBrowser;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class models the Azure Sample App for MSAL Android.\n+ * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java\n+ */\n+public class AzureSampleApp extends App {\n+\n+    private static final String AZURE_SAMPLE_PACKAGE_NAME = \"com.azuresamples.msalandroidapp\";\n+    private static final String AZURE_SAMPLE_APP_NAME = \"Azure Sample\";\n+    public final static String AZURE_SAMPLE_APK = \"AzureSample.apk\";\n+\n+    public AzureSampleApp() {\n+        super(AZURE_SAMPLE_PACKAGE_NAME, AZURE_SAMPLE_APP_NAME, new LocalApkInstaller());\n+        localApkFileName = AZURE_SAMPLE_APK;\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        // nothing required\n+    }\n+\n+    /**\n+     * Sign in into the Azure Sample App. Please note that this method performs sign in into the\n+     * Single Account Mode Fragment in the Sample App.\n+     *\n+     * @param username                    the username of the account to sign in\n+     * @param password                    the password of the account to sign in\n+     * @param browser                     the browser that is expected to be used during sign in flow\n+     * @param shouldHandleBrowserFirstRun whether this is the first time the browser being run\n+     * @param promptHandlerParameters     the prompt handler parameters indicating how to handle prompt\n+     */\n+    public void signIn(@NonNull final String username,\n+                       @NonNull final String password,\n+                       @Nullable final IBrowser browser,\n+                       final boolean shouldHandleBrowserFirstRun,\n+                       @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n+        // Click Sign In in Single Account Fragment\n+        UiAutomatorUtils.handleButtonClick(\"com.azuresamples.msalandroidapp:id/btn_signIn\");\n+\n+        if (promptHandlerParameters.getBroker() == null && browser != null && shouldHandleBrowserFirstRun) {\n+            // handle browser first run as applicable\n+            ((IApp) browser).handleFirstRun();\n+        }\n+\n+        // handle prompt in AAD login page\n+        final MicrosoftStsPromptHandler microsoftStsPromptHandler =\n+                new MicrosoftStsPromptHandler(promptHandlerParameters);\n+\n+        microsoftStsPromptHandler.handlePrompt(username, password);\n+    }\n+\n+    /**\n+     * Sing out of the Azure Sample App. Please note that this method performs sign out of the", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\nindex ffbd26c12..f34a0ea53 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n\n@@ -38,7 +38,7 @@ import org.junit.Assert;\n /**\n  * This class models the Azure Sample App for MSAL Android.\n  * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n- * See this: https://github.com/Azure-Samples/ms-identity-android-java\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java.\n  */\n public class AzureSampleApp extends App {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NzE2OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461147169", "bodyText": "punctuation", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:23:12Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.browser.IBrowser;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class models the Azure Sample App for MSAL Android.\n+ * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java\n+ */\n+public class AzureSampleApp extends App {\n+\n+    private static final String AZURE_SAMPLE_PACKAGE_NAME = \"com.azuresamples.msalandroidapp\";\n+    private static final String AZURE_SAMPLE_APP_NAME = \"Azure Sample\";\n+    public final static String AZURE_SAMPLE_APK = \"AzureSample.apk\";\n+\n+    public AzureSampleApp() {\n+        super(AZURE_SAMPLE_PACKAGE_NAME, AZURE_SAMPLE_APP_NAME, new LocalApkInstaller());\n+        localApkFileName = AZURE_SAMPLE_APK;\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        // nothing required\n+    }\n+\n+    /**\n+     * Sign in into the Azure Sample App. Please note that this method performs sign in into the\n+     * Single Account Mode Fragment in the Sample App.\n+     *\n+     * @param username                    the username of the account to sign in\n+     * @param password                    the password of the account to sign in\n+     * @param browser                     the browser that is expected to be used during sign in flow\n+     * @param shouldHandleBrowserFirstRun whether this is the first time the browser being run\n+     * @param promptHandlerParameters     the prompt handler parameters indicating how to handle prompt\n+     */\n+    public void signIn(@NonNull final String username,\n+                       @NonNull final String password,\n+                       @Nullable final IBrowser browser,\n+                       final boolean shouldHandleBrowserFirstRun,\n+                       @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n+        // Click Sign In in Single Account Fragment\n+        UiAutomatorUtils.handleButtonClick(\"com.azuresamples.msalandroidapp:id/btn_signIn\");\n+\n+        if (promptHandlerParameters.getBroker() == null && browser != null && shouldHandleBrowserFirstRun) {\n+            // handle browser first run as applicable\n+            ((IApp) browser).handleFirstRun();\n+        }\n+\n+        // handle prompt in AAD login page\n+        final MicrosoftStsPromptHandler microsoftStsPromptHandler =\n+                new MicrosoftStsPromptHandler(promptHandlerParameters);\n+\n+        microsoftStsPromptHandler.handlePrompt(username, password);\n+    }\n+\n+    /**\n+     * Sing out of the Azure Sample App. Please note that this method performs sign out of the\n+     * Single Account mode fragment in the Azure Sample App.\n+     */\n+    public void signOut() {\n+        UiAutomatorUtils.handleButtonClick(\"com.azuresamples.msalandroidapp:id/btn_removeAccount\");\n+    }\n+\n+    /**\n+     * Makes sure that the provided username is already signed into the Azure Sample App", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwODU0OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461708549", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T16:20:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NzE2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\nindex ffbd26c12..f34a0ea53 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n\n@@ -38,7 +38,7 @@ import org.junit.Assert;\n /**\n  * This class models the Azure Sample App for MSAL Android.\n  * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n- * See this: https://github.com/Azure-Samples/ms-identity-android-java\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java.\n  */\n public class AzureSampleApp extends App {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NzU2OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461147568", "bodyText": "punctuation.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:24:00Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java", "diffHunk": "@@ -66,4 +66,16 @@\n      * @param permission the permission that should be granted\n      */\n     void grantPermission(String permission);\n+\n+    /**\n+     * Force stops (closes, shuts down) this application", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwODYyNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461708624", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T16:20:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NzU2OA=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java\nindex efeb7a31a..adbd18a81 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java\n\n@@ -61,19 +61,19 @@ public interface IApp {\n     boolean hasPermission(String permission);\n \n     /**\n-     * Grant (allow) the requested Android system permission for this app\n+     * Grant (allow) the requested Android system permission for this app.\n      *\n      * @param permission the permission that should be granted\n      */\n     void grantPermission(String permission);\n \n     /**\n-     * Force stops (closes, shuts down) this application\n+     * Force stops (closes, shuts down) this application.\n      */\n     void forceStop();\n \n     /**\n-     * Determines if this application (package) is installed on the device\n+     * Determines if this application (package) is installed on the device.\n      *\n      * @return a boolean indicating if the package is installed on the device\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NzYyMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461147620", "bodyText": "punctuation", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:24:05Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java", "diffHunk": "@@ -66,4 +66,16 @@\n      * @param permission the permission that should be granted\n      */\n     void grantPermission(String permission);\n+\n+    /**\n+     * Force stops (closes, shuts down) this application\n+     */\n+    void forceStop();\n+\n+    /**\n+     * Determines if this application (package) is installed on the device", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwODY2OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461708668", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T16:20:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NzYyMA=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java\nindex efeb7a31a..adbd18a81 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IApp.java\n\n@@ -61,19 +61,19 @@ public interface IApp {\n     boolean hasPermission(String permission);\n \n     /**\n-     * Grant (allow) the requested Android system permission for this app\n+     * Grant (allow) the requested Android system permission for this app.\n      *\n      * @param permission the permission that should be granted\n      */\n     void grantPermission(String permission);\n \n     /**\n-     * Force stops (closes, shuts down) this application\n+     * Force stops (closes, shuts down) this application.\n      */\n     void forceStop();\n \n     /**\n-     * Determines if this application (package) is installed on the device\n+     * Determines if this application (package) is installed on the device.\n      *\n      * @return a boolean indicating if the package is installed on the device\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0Nzg4OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461147889", "bodyText": "What's the relationship between this interface and App.class?", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:24:33Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java", "diffHunk": "@@ -0,0 +1,71 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+\n+/**\n+ * An interface describing a first party application and the actions that can be performed on them.\n+ */\n+public interface IFirstPartyApp {", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0NDIyMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461744222", "bodyText": "You're right. It should extend. Addressed here: d35df23", "author": "shahzaibj", "createdAt": "2020-07-28T17:18:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0Nzg4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\nindex b89ab77ec..7e7400350 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n\n@@ -32,7 +32,7 @@ import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppProm\n public interface IFirstPartyApp {\n \n     /**\n-     * Add the first user account to this first party app\n+     * Add the first user account to this first party app.\n      *\n      * @param username                the username of the account to add\n      * @param password                the password of the account to add\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODMxMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461148312", "bodyText": "Do we need two distinct methods here?", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:25:18Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java", "diffHunk": "@@ -0,0 +1,71 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+\n+/**\n+ * An interface describing a first party application and the actions that can be performed on them.\n+ */\n+public interface IFirstPartyApp {\n+\n+    /**\n+     * Add the first user account to this first party app\n+     *\n+     * @param username                the username of the account to add\n+     * @param password                the password of the account to add\n+     * @param promptHandlerParameters the prompt handler parameters indicating how to handle prompt\n+     */\n+    void addFirstAccount(@NonNull final String username,\n+                         @NonNull final String password,\n+                         @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters);\n+\n+    /**\n+     * Add another account to this first party app. This must only be called if the an account was\n+     * previously added to this first party app.\n+     *\n+     * @param username                the username of the account to add\n+     * @param password                the password of the account to add\n+     * @param promptHandlerParameters the prompt handler parameters indicating how to handle prompt\n+     */\n+    void addAnotherAccount(final String username,", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0NzA0Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461747043", "bodyText": "I like your suggestion....we can track of how many accounts are added internally in our app model classes and just create one method here addAccount and change the behavior of it depending on if there was already an account added or not. I think this make sense and I'll incorporate that change.", "author": "shahzaibj", "createdAt": "2020-07-28T17:22:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4MDY3MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461780671", "bodyText": "This actually isn't that simple because some apps like Microsoft Word, simply launching them adds an account to the app (without user interaction). So a caller could simply call word.launch() and that would add the first account to the app.\nI think we can also make improvements here overall in terms of when someone calls addAccount then is it their repsonsilbility to make sure that they have called launch prior to that. The code currently assumes that the app is launched and open when someone calls addAccount and will fail the test case if the app isn't open because it wouldn't find the appropriate UI element. Looking more into UI Automator, I think I can use the getCurrentPackageName internally in addAccount to decide if we also need to launch the app or not. I'm thinking I'll leave the code as is for now, and create a backlog item for these changes and address both of these (distinct methods for adding accounts, and us vs them launching the app) next month.", "author": "shahzaibj", "createdAt": "2020-07-28T18:19:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4MTAxMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461781011", "bodyText": "@AdamBJohnsonx ^^", "author": "shahzaibj", "createdAt": "2020-07-28T18:19:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4MTIwMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461881202", "bodyText": "Ew.  Sounds like there's a plan, then.", "author": "AdamBJohnsonx", "createdAt": "2020-07-28T21:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODMxMg=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\nindex b89ab77ec..7e7400350 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n\n@@ -32,7 +32,7 @@ import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppProm\n public interface IFirstPartyApp {\n \n     /**\n-     * Add the first user account to this first party app\n+     * Add the first user account to this first party app.\n      *\n      * @param username                the username of the account to add\n      * @param password                the password of the account to add\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODYwMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461148603", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Add another account to this first party app. This must only be called if the an account was\n          \n          \n            \n                 * Add another account to this first party app. This must only be called if an account was", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:25:55Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java", "diffHunk": "@@ -0,0 +1,71 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+\n+/**\n+ * An interface describing a first party application and the actions that can be performed on them.\n+ */\n+public interface IFirstPartyApp {\n+\n+    /**\n+     * Add the first user account to this first party app\n+     *\n+     * @param username                the username of the account to add\n+     * @param password                the password of the account to add\n+     * @param promptHandlerParameters the prompt handler parameters indicating how to handle prompt\n+     */\n+    void addFirstAccount(@NonNull final String username,\n+                         @NonNull final String password,\n+                         @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters);\n+\n+    /**\n+     * Add another account to this first party app. This must only be called if the an account was", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\nindex b89ab77ec..7e7400350 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n\n@@ -32,7 +32,7 @@ import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppProm\n public interface IFirstPartyApp {\n \n     /**\n-     * Add the first user account to this first party app\n+     * Add the first user account to this first party app.\n      *\n      * @param username                the username of the account to add\n      * @param password                the password of the account to add\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODgwOA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461148808", "bodyText": "punctuation", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:26:21Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java", "diffHunk": "@@ -0,0 +1,71 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+\n+/**\n+ * An interface describing a first party application and the actions that can be performed on them.\n+ */\n+public interface IFirstPartyApp {\n+\n+    /**\n+     * Add the first user account to this first party app\n+     *\n+     * @param username                the username of the account to add\n+     * @param password                the password of the account to add\n+     * @param promptHandlerParameters the prompt handler parameters indicating how to handle prompt\n+     */\n+    void addFirstAccount(@NonNull final String username,\n+                         @NonNull final String password,\n+                         @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters);\n+\n+    /**\n+     * Add another account to this first party app. This must only be called if the an account was\n+     * previously added to this first party app.\n+     *\n+     * @param username                the username of the account to add\n+     * @param password                the password of the account to add\n+     * @param promptHandlerParameters the prompt handler parameters indicating how to handle prompt\n+     */\n+    void addAnotherAccount(final String username,\n+                           final String password,\n+                           final FirstPartyAppPromptHandlerParameters promptHandlerParameters);\n+\n+    /**\n+     * This method can be called to handle the welcome screens in the first party app that appear on", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwOTgwOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461709809", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T16:22:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODgwOA=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\nindex b89ab77ec..7e7400350 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/IFirstPartyApp.java\n\n@@ -32,7 +32,7 @@ import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppProm\n public interface IFirstPartyApp {\n \n     /**\n-     * Add the first user account to this first party app\n+     * Add the first user account to this first party app.\n      *\n      * @param username                the username of the account to add\n      * @param password                the password of the account to add\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODkzMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461148932", "bodyText": "punctuation.  Maybe model for interacting with the instead of this class.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:26:32Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java", "diffHunk": "@@ -0,0 +1,116 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class represents the Outlook Android app during UI Automated Test", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0NDQ4Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461744486", "bodyText": "Addressed here: 50f411f", "author": "shahzaibj", "createdAt": "2020-07-28T17:18:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0ODkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java\nindex f9e9185f6..27fb2fcb0 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java\n\n@@ -33,7 +33,7 @@ import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n import org.junit.Assert;\n \n /**\n- * This class represents the Outlook Android app during UI Automated Test\n+ * This class represents the Outlook Android app during UI Automated Test.\n  */\n public class OutlookApp extends App implements IFirstPartyApp {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0OTk1NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461149954", "bodyText": "punctuation. see above comment regarding what the class is doing.  \"A representation of the Teams Android app that can be interacted with by UI automation.\" perhaps.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:28:22Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java", "diffHunk": "@@ -0,0 +1,120 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class represents the Teams Android app during UI Automated Test", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0NDY0MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461744641", "bodyText": "Addressed here: 50f411f", "author": "shahzaibj", "createdAt": "2020-07-28T17:18:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0OTk1NA=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java\nindex 7e4927ff3..a2a5d5b35 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/TeamsApp.java\n\n@@ -35,7 +35,7 @@ import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n import org.junit.Assert;\n \n /**\n- * This class represents the Teams Android app during UI Automated Test\n+ * This class represents the Teams Android app during UI Automated Test.\n  */\n public class TeamsApp extends App implements IFirstPartyApp {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1NjMwNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461156304", "bodyText": "final", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:40:26Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java", "diffHunk": "@@ -0,0 +1,120 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import android.widget.Button;\n+import android.widget.EditText;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.CommonUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class represents the Word Android app during UI Automated Test\n+ */\n+public class WordApp extends App implements IFirstPartyApp {\n+\n+    public static final String WORD_PACKAGE_NAME = \"com.microsoft.office.word\";\n+    public static final String WORD_APP_NAME = \"Microsoft Word\";\n+\n+    public WordApp() {\n+        super(WORD_PACKAGE_NAME, WORD_APP_NAME, new PlayStore());\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        CommonUtils.grantPackagePermission(); // grant permission to access storage\n+    }\n+\n+    @Override\n+    public void addFirstAccount(@NonNull final String username,\n+                                @NonNull final String password,\n+                                @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // Enter email\n+        UiAutomatorUtils.handleInput(\"com.microsoft.office.word:id/OfcEditText\", username);\n+        // Click continue\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.word:id/OfcActionButton2\");\n+        // handle prompt\n+        final MicrosoftStsPromptHandler microsoftStsPromptHandler = new MicrosoftStsPromptHandler(promptHandlerParameters);\n+        microsoftStsPromptHandler.handlePrompt(username, password);\n+    }\n+\n+    @Override\n+    public void addAnotherAccount(@NonNull final String username,\n+                                  @NonNull final String password,\n+                                  @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // Click account drawer\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.word:id/docsui_me_image\");\n+        // Click add account\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.word:id/docsui_account_list_add_account\");\n+        // sing in with supplied username/password\n+        signIn(username, password, promptHandlerParameters);\n+    }\n+\n+    @Override\n+    public void onAccountAdded() {\n+        throw new UnsupportedOperationException(\"Not implemented\");\n+    }\n+\n+    private void signIn(@NonNull final String username,\n+                        @NonNull final String password,\n+                        @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        try {\n+            // Word has very interesting sing in UI. They show a custom WebView to accept email\n+            // No resource id available on anything :(\n+            final UiObject emailField = UiAutomatorUtils.obtainUiObjectWithTextAndClassType(\n+                    \"\", EditText.class\n+            );\n+\n+            emailField.setText(username);\n+\n+            final UiObject nextBtn = UiAutomatorUtils.obtainUiObjectWithTextAndClassType(\n+                    \"Next\", Button.class\n+            );\n+\n+            nextBtn.click();\n+        } catch (UiObjectNotFoundException e) {", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1MjM5OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461752398", "bodyText": "Addressed here: 68b3111", "author": "shahzaibj", "createdAt": "2020-07-28T17:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1NjMwNA=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\nindex 579b3486a..53c718774 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n\n@@ -38,7 +38,7 @@ import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n import org.junit.Assert;\n \n /**\n- * This class represents the Word Android app during UI Automated Test\n+ * This class represents the Word Android app during UI Automated Test.\n  */\n public class WordApp extends App implements IFirstPartyApp {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1NjQwMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461156401", "bodyText": "punctuation, phrase as a statement of being instead of a reference \"A representation of\" instead of \"This class is...\".", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:40:36Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java", "diffHunk": "@@ -0,0 +1,120 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import android.widget.Button;\n+import android.widget.EditText;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.CommonUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class represents the Word Android app during UI Automated Test", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0NDczNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461744737", "bodyText": "Addressed here: 50f411f", "author": "shahzaibj", "createdAt": "2020-07-28T17:19:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1NjQwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\nindex 579b3486a..53c718774 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n\n@@ -38,7 +38,7 @@ import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n import org.junit.Assert;\n \n /**\n- * This class represents the Word Android app during UI Automated Test\n+ * This class represents the Word Android app during UI Automated Test.\n  */\n public class WordApp extends App implements IFirstPartyApp {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1ODE2Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461158162", "bodyText": "Javadoc", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:43:50Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java", "diffHunk": "@@ -0,0 +1,126 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.broker;\n+\n+import android.text.TextUtils;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+import androidx.test.uiautomator.UiSelector;\n+\n+import com.microsoft.identity.client.ui.automation.BuildConfig;\n+import com.microsoft.identity.client.ui.automation.app.App;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.CommonUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.getResourceId;\n+\n+public abstract class AbstractTestBroker extends App implements ITestBroker {", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0NDk4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461744987", "bodyText": "Addressed here: 50f411f", "author": "shahzaibj", "createdAt": "2020-07-28T17:19:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1ODE2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "50f411f2c5adcc56a6e8a4d9aaabc62d69d46c8b", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java\nindex c1ce41517..e87f5f131 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java\n\n@@ -47,6 +47,9 @@ import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentat\n import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.getResourceId;\n \n+/**\n+ * A model for interacting with a Broker App during UI Test.\n+ */\n public abstract class AbstractTestBroker extends App implements ITestBroker {\n \n     public AbstractTestBroker(@NonNull final String packageName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1OTE2OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461159168", "bodyText": "Hm.  Is this really what we want to do?  It seems fragile.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:45:44Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java", "diffHunk": "@@ -0,0 +1,120 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import android.widget.Button;\n+import android.widget.EditText;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.CommonUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class represents the Word Android app during UI Automated Test\n+ */\n+public class WordApp extends App implements IFirstPartyApp {\n+\n+    public static final String WORD_PACKAGE_NAME = \"com.microsoft.office.word\";\n+    public static final String WORD_APP_NAME = \"Microsoft Word\";\n+\n+    public WordApp() {\n+        super(WORD_PACKAGE_NAME, WORD_APP_NAME, new PlayStore());\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        CommonUtils.grantPackagePermission(); // grant permission to access storage\n+    }\n+\n+    @Override\n+    public void addFirstAccount(@NonNull final String username,\n+                                @NonNull final String password,\n+                                @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // Enter email\n+        UiAutomatorUtils.handleInput(\"com.microsoft.office.word:id/OfcEditText\", username);\n+        // Click continue\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.word:id/OfcActionButton2\");\n+        // handle prompt\n+        final MicrosoftStsPromptHandler microsoftStsPromptHandler = new MicrosoftStsPromptHandler(promptHandlerParameters);\n+        microsoftStsPromptHandler.handlePrompt(username, password);\n+    }\n+\n+    @Override\n+    public void addAnotherAccount(@NonNull final String username,\n+                                  @NonNull final String password,\n+                                  @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // Click account drawer\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.word:id/docsui_me_image\");\n+        // Click add account\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.word:id/docsui_account_list_add_account\");\n+        // sing in with supplied username/password\n+        signIn(username, password, promptHandlerParameters);\n+    }\n+\n+    @Override\n+    public void onAccountAdded() {\n+        throw new UnsupportedOperationException(\"Not implemented\");", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxMTYzNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r466011635", "bodyText": "Addressed here: 89481c1 (just needed to return as nothing needed here)", "author": "shahzaibj", "createdAt": "2020-08-05T21:22:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1OTE2OA=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\nindex 579b3486a..53c718774 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n\n@@ -38,7 +38,7 @@ import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n import org.junit.Assert;\n \n /**\n- * This class represents the Word Android app during UI Automated Test\n+ * This class represents the Word Android app during UI Automated Test.\n  */\n public class WordApp extends App implements IFirstPartyApp {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1OTc2Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461159766", "bodyText": "interesting that this didn't fall into a UiAutomatorUtils method,", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:46:52Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java", "diffHunk": "@@ -0,0 +1,126 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.broker;\n+\n+import android.text.TextUtils;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+import androidx.test.uiautomator.UiSelector;\n+\n+import com.microsoft.identity.client.ui.automation.BuildConfig;\n+import com.microsoft.identity.client.ui.automation.app.App;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.CommonUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.getResourceId;\n+\n+public abstract class AbstractTestBroker extends App implements ITestBroker {\n+\n+    public AbstractTestBroker(@NonNull final String packageName,\n+                              @NonNull final String appName) {\n+        super(packageName, appName, BuildConfig.INSTALL_SOURCE_LOCAL_APK\n+                .equalsIgnoreCase(BuildConfig.BROKER_INSTALL_SOURCE)\n+                ? new LocalApkInstaller() : new PlayStore());\n+    }\n+\n+    @Override\n+    public void handleAccountPicker(@Nullable final String username) {\n+        final UiDevice device = UiDevice.getInstance(getInstrumentation());\n+\n+        // find the object associated to this username in account picker.\n+        // if the username is not provided, then click on the \"Use another account\" option\n+        final UiObject accountSelected = device.findObject(new UiSelector().resourceId(\n+                getResourceId(getPackageName(), \"account_chooser_listView\")", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50f411f2c5adcc56a6e8a4d9aaabc62d69d46c8b", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java\nindex c1ce41517..e87f5f131 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java\n\n@@ -47,6 +47,9 @@ import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentat\n import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.getResourceId;\n \n+/**\n+ * A model for interacting with a Broker App during UI Test.\n+ */\n public abstract class AbstractTestBroker extends App implements ITestBroker {\n \n     public AbstractTestBroker(@NonNull final String packageName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MTYwOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461161609", "bodyText": "Javadoc", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:50:27Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java", "diffHunk": "@@ -23,28 +23,40 @@\n package com.microsoft.identity.client.ui.automation.broker;\n \n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.platform.app.InstrumentationRegistry;\n import androidx.test.uiautomator.UiDevice;\n import androidx.test.uiautomator.UiObject;\n import androidx.test.uiautomator.UiObjectNotFoundException;\n import androidx.test.uiautomator.UiSelector;\n \n-import com.microsoft.identity.client.ui.automation.app.App;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.device.settings.ISettings;\n+import com.microsoft.identity.client.ui.automation.device.settings.SamsungSettings;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.CommonUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n \n import org.junit.Assert;\n \n+import java.util.Random;\n+\n import lombok.Getter;\n \n-import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;\n import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n-import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.getResourceId;\n+import static org.junit.Assert.fail;\n \n @Getter\n-public class BrokerCompanyPortal extends App implements ITestBroker {\n+public class BrokerCompanyPortal extends AbstractTestBroker implements ITestBroker, IMdmAgent {", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0NTE4Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461745182", "bodyText": "Addressed here: 50f411f", "author": "shahzaibj", "createdAt": "2020-07-28T17:19:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MTYwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "50f411f2c5adcc56a6e8a4d9aaabc62d69d46c8b", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java\nindex 51984156f..4bf891c0e 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java\n\n@@ -48,6 +48,9 @@ import lombok.Getter;\n import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n import static org.junit.Assert.fail;\n \n+/**\n+ * A model for interacting with the Company Portal Broker App during UI Test.\n+ */\n @Getter\n public class BrokerCompanyPortal extends AbstractTestBroker implements ITestBroker, IMdmAgent {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MTgxOA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461161818", "bodyText": "punctuation", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:50:53Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java", "diffHunk": "@@ -184,4 +250,41 @@ private static void closeKeyboardIfNeeded() {\n             uiDevice.pressBack();\n         }\n     }\n+\n+    /**\n+     * Obtain an instance of the UiObject for the given text\n+     *\n+     * @param text the text of the element to obtain\n+     * @return the UiObject associated to the supplied text\n+     */\n+    public static UiObject obtainUiObjectWithExactText(@NonNull final String text) {\n+        final UiDevice device =\n+                UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+\n+        final UiObject uiObject = device.findObject(new UiSelector()\n+                .text(text));\n+\n+        uiObject.waitForExists(FIND_UI_ELEMENT_TIMEOUT);\n+        return uiObject;\n+    }\n+\n+    /**\n+     * Obtain an instance of the UiObject for the given class and index", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcxMDE0NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461710145", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T16:22:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MTgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\nindex 56c0dc91a..d856f707e 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\n\n@@ -252,7 +252,7 @@ public class UiAutomatorUtils {\n     }\n \n     /**\n-     * Obtain an instance of the UiObject for the given text\n+     * Obtain an instance of the UiObject for the given text.\n      *\n      * @param text the text of the element to obtain\n      * @return the UiObject associated to the supplied text\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MTk0NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461161944", "bodyText": "punctuation", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:51:06Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java", "diffHunk": "@@ -184,4 +250,41 @@ private static void closeKeyboardIfNeeded() {\n             uiDevice.pressBack();\n         }\n     }\n+\n+    /**\n+     * Obtain an instance of the UiObject for the given text\n+     *\n+     * @param text the text of the element to obtain\n+     * @return the UiObject associated to the supplied text\n+     */\n+    public static UiObject obtainUiObjectWithExactText(@NonNull final String text) {", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcxMDI5MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461710290", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T16:23:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MTk0NA=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\nindex 56c0dc91a..d856f707e 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\n\n@@ -252,7 +252,7 @@ public class UiAutomatorUtils {\n     }\n \n     /**\n-     * Obtain an instance of the UiObject for the given text\n+     * Obtain an instance of the UiObject for the given text.\n      *\n      * @param text the text of the element to obtain\n      * @return the UiObject associated to the supplied text\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MjIyNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461162226", "bodyText": "punctuation.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:51:41Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java", "diffHunk": "@@ -104,6 +124,52 @@ public static UiObject obtainUiObjectWithTextAndClassType(@NonNull final String\n     public static UiObject obtainChildInScrollable(@NonNull final String scrollableResourceId,\n                                                    @NonNull final String childText) {\n         final UiSelector scrollSelector = new UiSelector().resourceId(scrollableResourceId);\n+        return obtainChildInScrollable(childText, scrollSelector);\n+    }\n+\n+    /**\n+     * Obtain a child element inside a scrollable view by specifying class and text\n+     *\n+     * @param clazz     the class of the parent scroll view\n+     * @param childText the text on the child view\n+     * @return the UiObject associated to the desired child element\n+     */\n+    public static UiObject obtainChildInScrollable(@NonNull final Class clazz,\n+                                                   @NonNull final String childText) {\n+        final UiSelector scrollSelector = new UiSelector().className(clazz);\n+        return obtainChildInScrollable(childText, scrollSelector);\n+    }\n+\n+    private static UiObject obtainChildInScrollable(@NonNull final String childText,\n+                                                    @NonNull final UiSelector scrollSelector) {\n+        final UiScrollable recyclerView = new UiScrollable(scrollSelector);\n+\n+        final UiSelector childSelector = new UiSelector()\n+                .textContains(childText);\n+\n+        try {\n+            final UiObject child = recyclerView.getChildByText(\n+                    childSelector,\n+                    childText\n+            );\n+\n+            child.waitForExists(FIND_UI_ELEMENT_TIMEOUT);\n+            return child;\n+        } catch (UiObjectNotFoundException e) {\n+            fail(e.getMessage());\n+        }\n+\n+        return null;\n+    }\n+\n+    /**\n+     * Obtain a child element inside a scrollable view by specifying text", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcxMDM3OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461710379", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T16:23:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MjIyNg=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\nindex 56c0dc91a..d856f707e 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\n\n@@ -128,7 +128,7 @@ public class UiAutomatorUtils {\n     }\n \n     /**\n-     * Obtain a child element inside a scrollable view by specifying class and text\n+     * Obtain a child element inside a scrollable view by specifying class and text.\n      *\n      * @param clazz     the class of the parent scroll view\n      * @param childText the text on the child view\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MjMwOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461162309", "bodyText": "Punctuation.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:51:49Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java", "diffHunk": "@@ -104,6 +124,52 @@ public static UiObject obtainUiObjectWithTextAndClassType(@NonNull final String\n     public static UiObject obtainChildInScrollable(@NonNull final String scrollableResourceId,\n                                                    @NonNull final String childText) {\n         final UiSelector scrollSelector = new UiSelector().resourceId(scrollableResourceId);\n+        return obtainChildInScrollable(childText, scrollSelector);\n+    }\n+\n+    /**\n+     * Obtain a child element inside a scrollable view by specifying class and text", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcxMDQzMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461710431", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T16:23:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MjMwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\nindex 56c0dc91a..d856f707e 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/UiAutomatorUtils.java\n\n@@ -128,7 +128,7 @@ public class UiAutomatorUtils {\n     }\n \n     /**\n-     * Obtain a child element inside a scrollable view by specifying class and text\n+     * Obtain a child element inside a scrollable view by specifying class and text.\n      *\n      * @param clazz     the class of the parent scroll view\n      * @param childText the text on the child view\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2NTYyMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461165621", "bodyText": "Why would we want this to be nullable?", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T20:58:08Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/InstallBrokerTestRule.java", "diffHunk": "@@ -0,0 +1,56 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import androidx.annotation.Nullable;\n+\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+/**\n+ * A Test Rule to install the provided broker on the device prior to executing the test case\n+ */\n+public class InstallBrokerTestRule implements TestRule {\n+\n+    private final ITestBroker broker;\n+\n+    public InstallBrokerTestRule(@Nullable ITestBroker broker) {", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMDUxMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461800511", "bodyText": "I was trying to use as shortcut for both broker and non-broker tests. So non-broker tests can just say broker is null and this would install anything. But you're right, this should be NonNull. I'll clean this up.", "author": "shahzaibj", "createdAt": "2020-07-28T18:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2NTYyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg1MzU3Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461853577", "bodyText": "Addressed here: b210f1b", "author": "shahzaibj", "createdAt": "2020-07-28T20:19:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2NTYyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/InstallBrokerTestRule.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/InstallBrokerTestRule.java\nindex 139ce9d41..f56641766 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/InstallBrokerTestRule.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/InstallBrokerTestRule.java\n\n@@ -31,7 +31,7 @@ import org.junit.runner.Description;\n import org.junit.runners.model.Statement;\n \n /**\n- * A Test Rule to install the provided broker on the device prior to executing the test case\n+ * A Test Rule to install the provided broker on the device prior to executing the test case.\n  */\n public class InstallBrokerTestRule implements TestRule {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2Njk4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461166987", "bodyText": "The location of these comments is strange.  These are all private and final.  Do these single-line comments feed some javadoc generation via Lombok?  I thought that was required to be javadoc to start with.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T21:00:35Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java", "diffHunk": "@@ -44,23 +44,43 @@\n     @NonNull\n     private final PromptParameter prompt;\n \n+    // the login hint that was provided\n+    private final String loginHint;\n+\n     // whether session is expected or not (via presence of a cookie)\n     private final boolean sessionExpected;\n \n-    // whether login hint was supplied or not to the interactive request\n-    private final boolean loginHintProvided;\n+    // The broker that should be being used for this request\n+    private final ITestBroker broker;\n+\n+    // whether we expected the broker account chooser activity to appear", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxNDY3NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461814675", "bodyText": "Probably not, I'll change these to javadoc", "author": "shahzaibj", "createdAt": "2020-07-28T19:17:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2Njk4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4NTk2NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461885965", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T21:19:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2Njk4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c8a2bc9270bdad42df26a271e840cf66efd628e1", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java\nindex 6520b461a..7d2f40407 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/PromptHandlerParameters.java\n\n@@ -40,53 +40,91 @@ import lombok.experimental.SuperBuilder;\n @Getter\n public class PromptHandlerParameters {\n \n-    // the prompt behaviour we expect\n+    /**\n+     * The prompt behaviour expected to be observed during an interactive token request.\n+     */\n     @NonNull\n     private final PromptParameter prompt;\n \n-    // the login hint that was provided\n+    /**\n+     * The login hint that was provided to the interactive token request.\n+     */\n     private final String loginHint;\n \n-    // whether session is expected or not (via presence of a cookie)\n+    /**\n+     * Denotes whether session is expected during an interactive token request.\n+     */\n     private final boolean sessionExpected;\n \n-    // The broker that should be being used for this request\n+    /**\n+     * Denotes the broker that is expected to be used during an interactive token request.\n+     */\n     private final ITestBroker broker;\n \n-    // whether we expected the broker account chooser activity to appear\n+    /**\n+     * Denotes whether the broker account chooser activity is expected to appear during an\n+     * interactive token request.\n+     */\n     private final boolean expectingBrokerAccountChooserActivity;\n \n-    // whether we expect our account (the one being used to login) to exist in the broker\n+    /**\n+     * Denotes whether the account being used during an interactive token request is expected to\n+     * exist in the broker.\n+     */\n     private final boolean expectingProvidedAccountInBroker;\n \n-    // whether we expect the login page account picker (AAD login page) to appear\n+    /**\n+     * Denotes whether the AAD login page account picker is expected to appear during an\n+     * interactive token request.\n+     */\n     private final boolean expectingLoginPageAccountPicker;\n \n-    // whether we expect our account (the one being used to login) to exist in cookies.\n-    // This determines if that account would appear in AAD account picker\n+    /**\n+     * Denotes whether the account being used during an interactive token request is expected to\n+     * exist in the AAD login web page cookies. This determines if that account would appear in\n+     * AAD account picker.\n+     */\n     private final boolean expectingProvidedAccountInCookie;\n \n-    // whether we expect to receive consent page or not\n+    /**\n+     * Denotes whether or not the consent page is expected to appear during an interactive token\n+     * request.\n+     */\n     private final boolean consentPageExpected;\n \n-    // whether we expect to receive speed bump or not\n+    /**\n+     * Denotes whether or not the speed bump page is expected to appear during an interactive token\n+     * request.\n+     */\n     private final boolean speedBumpExpected;\n \n-    // whether we expect to receive the registration page from AAD\n+    /**\n+     * Denotes whether or not the register page is expected to appear during an interactive token\n+     * request.\n+     */\n     private final boolean registerPageExpected;\n \n-    // whether we expect to receive enroll page or not\n+    /**\n+     * Denotes whether or not the enroll page is expected to appear during an interactive token\n+     * request.\n+     */\n     private final boolean enrollPageExpected;\n \n-    // The way in which we want to respond to the enroll page for this request\n+    /**\n+     * Denotes the way in which we want to respond to the enroll page for this request.\n+     */\n     @Builder.Default\n     private final UiResponse enrollPageResponse = UiResponse.ACCEPT;\n \n-    // The way in which we want to respond to consent page for this request\n+    /**\n+     * Denotes the way in which we want to respond to the consent page for this request.\n+     */\n     @Builder.Default\n     private final UiResponse consentPageResponse = UiResponse.ACCEPT;\n \n-    // The way in which we want to respond to speed bump page for this request\n+    /**\n+     * Denotes the way in which we want to respond to the register page for this request.\n+     */\n     @Builder.Default\n     private final UiResponse speedBumpResponse = UiResponse.ACCEPT;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NDE5Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461174197", "bodyText": "Assert messages are more helpful if they give some context.", "author": "AdamBJohnsonx", "createdAt": "2020-07-27T21:14:47Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.browser.IBrowser;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * This class models the Azure Sample App for MSAL Android.\n+ * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java\n+ */\n+public class AzureSampleApp extends App {\n+\n+    private static final String AZURE_SAMPLE_PACKAGE_NAME = \"com.azuresamples.msalandroidapp\";\n+    private static final String AZURE_SAMPLE_APP_NAME = \"Azure Sample\";\n+    public final static String AZURE_SAMPLE_APK = \"AzureSample.apk\";\n+\n+    public AzureSampleApp() {\n+        super(AZURE_SAMPLE_PACKAGE_NAME, AZURE_SAMPLE_APP_NAME, new LocalApkInstaller());\n+        localApkFileName = AZURE_SAMPLE_APK;\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        // nothing required\n+    }\n+\n+    /**\n+     * Sign in into the Azure Sample App. Please note that this method performs sign in into the\n+     * Single Account Mode Fragment in the Sample App.\n+     *\n+     * @param username                    the username of the account to sign in\n+     * @param password                    the password of the account to sign in\n+     * @param browser                     the browser that is expected to be used during sign in flow\n+     * @param shouldHandleBrowserFirstRun whether this is the first time the browser being run\n+     * @param promptHandlerParameters     the prompt handler parameters indicating how to handle prompt\n+     */\n+    public void signIn(@NonNull final String username,\n+                       @NonNull final String password,\n+                       @Nullable final IBrowser browser,\n+                       final boolean shouldHandleBrowserFirstRun,\n+                       @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n+        // Click Sign In in Single Account Fragment\n+        UiAutomatorUtils.handleButtonClick(\"com.azuresamples.msalandroidapp:id/btn_signIn\");\n+\n+        if (promptHandlerParameters.getBroker() == null && browser != null && shouldHandleBrowserFirstRun) {\n+            // handle browser first run as applicable\n+            ((IApp) browser).handleFirstRun();\n+        }\n+\n+        // handle prompt in AAD login page\n+        final MicrosoftStsPromptHandler microsoftStsPromptHandler =\n+                new MicrosoftStsPromptHandler(promptHandlerParameters);\n+\n+        microsoftStsPromptHandler.handlePrompt(username, password);\n+    }\n+\n+    /**\n+     * Sing out of the Azure Sample App. Please note that this method performs sign out of the\n+     * Single Account mode fragment in the Azure Sample App.\n+     */\n+    public void signOut() {\n+        UiAutomatorUtils.handleButtonClick(\"com.azuresamples.msalandroidapp:id/btn_removeAccount\");\n+    }\n+\n+    /**\n+     * Makes sure that the provided username is already signed into the Azure Sample App\n+     *\n+     * @param username the username of the account for which to confirm sign in\n+     */\n+    public void confirmSignedIn(@NonNull final String username) {\n+        final UiObject signedInUser = UiAutomatorUtils.obtainUiObjectWithResourceId(\"com.azuresamples.msalandroidapp:id/current_user\");\n+        try {\n+            Assert.assertEquals(signedInUser.getText(), username);", "originalCommit": "249ab28af1e7e67ad64fc250b7378bc65b921f02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjExNjQzOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r466116439", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-08-06T02:58:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NDE5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\nindex ffbd26c12..f34a0ea53 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n\n@@ -38,7 +38,7 @@ import org.junit.Assert;\n /**\n  * This class models the Azure Sample App for MSAL Android.\n  * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n- * See this: https://github.com/Azure-Samples/ms-identity-android-java\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java.\n  */\n public class AzureSampleApp extends App {\n \n"}}, {"oid": "3f0dff2ef9a56e6711deccfb22b120d7d374f433", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/3f0dff2ef9a56e6711deccfb22b120d7d374f433", "message": "Add periods to javadoc", "committedDate": "2020-07-28T03:40:58Z", "type": "commit"}, {"oid": "803e6b1f2b530ea2288e5fadd8c41b4fbd26a909", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/803e6b1f2b530ea2288e5fadd8c41b4fbd26a909", "message": "Address comment\n\nCo-authored-by: AdamBJohnsonx <63813613+AdamBJohnsonx@users.noreply.github.com>", "committedDate": "2020-07-28T16:21:13Z", "type": "commit"}, {"oid": "230b04a3880580158ac8e2263aa2375322d3ec4f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/230b04a3880580158ac8e2263aa2375322d3ec4f", "message": "Address comment\n\nCo-authored-by: AdamBJohnsonx <63813613+AdamBJohnsonx@users.noreply.github.com>", "committedDate": "2020-07-28T16:21:49Z", "type": "commit"}, {"oid": "42b4b5e2b285daef3669105298961b937807cd05", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/42b4b5e2b285daef3669105298961b937807cd05", "message": "Add javadoc for shouldHandleFirstRun", "committedDate": "2020-07-28T17:03:17Z", "type": "commit"}, {"oid": "5eb510bcf596aaa3d8266591b8ab21977e7107c8", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5eb510bcf596aaa3d8266591b8ab21977e7107c8", "message": "Improve javadoc for ILabTest", "committedDate": "2020-07-28T17:03:30Z", "type": "commit"}, {"oid": "7aaffce2b818f122958646fb4cd3bfc186163d81", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/7aaffce2b818f122958646fb4cd3bfc186163d81", "message": "Merge branch 'shahzaibj/extensive-test-utils' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into shahzaibj/extensive-test-utils", "committedDate": "2020-07-28T17:03:38Z", "type": "commit"}, {"oid": "d35df23b1e7a0bb1e85485573ed1ae0c832f6d16", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d35df23b1e7a0bb1e85485573ed1ae0c832f6d16", "message": "Add relationship between first party app and app", "committedDate": "2020-07-28T17:04:55Z", "type": "commit"}, {"oid": "50f411f2c5adcc56a6e8a4d9aaabc62d69d46c8b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/50f411f2c5adcc56a6e8a4d9aaabc62d69d46c8b", "message": "Incorporate javadoc suggestions for Apps", "committedDate": "2020-07-28T17:14:35Z", "type": "commit"}, {"oid": "68b31111f392450c6a2dc147f066a88d0063842c", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/68b31111f392450c6a2dc147f066a88d0063842c", "message": "Add final to exception catch blocks", "committedDate": "2020-07-28T17:30:35Z", "type": "commit"}, {"oid": "107ff17583dfa6f49c238d37ed82a98b27f8a50b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/107ff17583dfa6f49c238d37ed82a98b27f8a50b", "message": "Add relationship between browser and app", "committedDate": "2020-07-28T17:33:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1NDk1Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461754952", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Word has very interesting sing in UI. They show a custom WebView to accept email\n          \n          \n            \n                        // Word has very interesting sign in UI. They show a custom WebView to accept email", "author": "AdamBJohnsonx", "createdAt": "2020-07-28T17:35:40Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java", "diffHunk": "@@ -0,0 +1,120 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import android.widget.Button;\n+import android.widget.EditText;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.CommonUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A model for interacting with the Word Android App during UI Test.\n+ */\n+public class WordApp extends App implements IFirstPartyApp {\n+\n+    public static final String WORD_PACKAGE_NAME = \"com.microsoft.office.word\";\n+    public static final String WORD_APP_NAME = \"Microsoft Word\";\n+\n+    public WordApp() {\n+        super(WORD_PACKAGE_NAME, WORD_APP_NAME, new PlayStore());\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        CommonUtils.grantPackagePermission(); // grant permission to access storage\n+    }\n+\n+    @Override\n+    public void addFirstAccount(@NonNull final String username,\n+                                @NonNull final String password,\n+                                @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // Enter email\n+        UiAutomatorUtils.handleInput(\"com.microsoft.office.word:id/OfcEditText\", username);\n+        // Click continue\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.word:id/OfcActionButton2\");\n+        // handle prompt\n+        final MicrosoftStsPromptHandler microsoftStsPromptHandler = new MicrosoftStsPromptHandler(promptHandlerParameters);\n+        microsoftStsPromptHandler.handlePrompt(username, password);\n+    }\n+\n+    @Override\n+    public void addAnotherAccount(@NonNull final String username,\n+                                  @NonNull final String password,\n+                                  @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // Click account drawer\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.word:id/docsui_me_image\");\n+        // Click add account\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.word:id/docsui_account_list_add_account\");\n+        // sing in with supplied username/password\n+        signIn(username, password, promptHandlerParameters);\n+    }\n+\n+    @Override\n+    public void onAccountAdded() {\n+        throw new UnsupportedOperationException(\"Not implemented\");\n+    }\n+\n+    private void signIn(@NonNull final String username,\n+                        @NonNull final String password,\n+                        @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        try {\n+            // Word has very interesting sing in UI. They show a custom WebView to accept email", "originalCommit": "107ff17583dfa6f49c238d37ed82a98b27f8a50b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "af3b64ecd658def0bbcc093253a6c7e1da1ae46f", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\nindex a33cd62fd..6a084d978 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n\n@@ -88,7 +88,7 @@ public class WordApp extends App implements IFirstPartyApp {\n                         @NonNull final String password,\n                         @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n         try {\n-            // Word has very interesting sing in UI. They show a custom WebView to accept email\n+            // Word has very interesting sign in UI. They show a custom WebView to accept email\n             // No resource id available on anything :(\n             final UiObject emailField = UiAutomatorUtils.obtainUiObjectWithTextAndClassType(\n                     \"\", EditText.class\n"}}, {"oid": "af3b64ecd658def0bbcc093253a6c7e1da1ae46f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/af3b64ecd658def0bbcc093253a6c7e1da1ae46f", "message": "Update uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n\nCo-authored-by: AdamBJohnsonx <63813613+AdamBJohnsonx@users.noreply.github.com>", "committedDate": "2020-07-28T17:59:14Z", "type": "commit"}, {"oid": "4c56bdf37f3cd2c749d209cbe98494ee752535ad", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/4c56bdf37f3cd2c749d209cbe98494ee752535ad", "message": "Merge branch 'dev' into shahzaibj/extensive-test-utils", "committedDate": "2020-07-28T18:24:46Z", "type": "commit"}, {"oid": "b210f1b6280abec3158cf68a5e5b5b583819a46d", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b210f1b6280abec3158cf68a5e5b5b583819a46d", "message": "Make broker rule non-null", "committedDate": "2020-07-28T19:20:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1NDU0Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461754543", "bodyText": "how would this work with userless WPJ?\nI assume that UPN here is being used to find a matching tenant? (UPN is not a required field for device registration. For those account without it, the owner would be displayed as \"none\" in the portal, and I can still look up the device with only deviceID and delete the device manually).", "author": "rpdome", "createdAt": "2020-07-28T17:35:01Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java", "diffHunk": "@@ -0,0 +1,56 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DeleteDeviceApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link DeleteDeviceApi}.\n+ */\n+public class LabDeviceHelper {\n+\n+    /**\n+     * Deletes the provided device from the directory.\n+     *\n+     * @param upn      the upn to whom this device is associated\n+     * @param deviceId the device id of the device to delete\n+     * @return a boolean indicating if the device has been deleted successfully\n+     */\n+    public static boolean deleteDevice(final String upn, final String deviceId) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DeleteDeviceApi deleteDeviceApi = new DeleteDeviceApi();\n+\n+        final CustomSuccessResponse customSuccessResponse;\n+        try {\n+            customSuccessResponse = deleteDeviceApi.delete(upn, deviceId);", "originalCommit": "68b31111f392450c6a2dc147f066a88d0063842c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgzNjU5Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461836596", "bodyText": "We will probably need to ask the Lab Team to expose an endpoint in that case then that accepts deviceid and tenantId....it doesn't exist right now.", "author": "shahzaibj", "createdAt": "2020-07-28T19:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1NDU0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4553db202e268d085dcf879544fe1a602fa6db01", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\nindex b093f3c8a..c5896eab6 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabDeviceHelper.java\n\n@@ -42,8 +42,8 @@ public class LabDeviceHelper {\n         LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n         final DeleteDeviceApi deleteDeviceApi = new DeleteDeviceApi();\n \n-        final CustomSuccessResponse customSuccessResponse;\n         try {\n+            final CustomSuccessResponse customSuccessResponse;\n             customSuccessResponse = deleteDeviceApi.delete(upn, deviceId);\n \n             return customSuccessResponse.getResult().contains(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2MDAyMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461760021", "bodyText": "nit: we could put this in try{} block. Here and in the function below.", "author": "rpdome", "createdAt": "2020-07-28T17:44:12Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.ResetApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+/**\n+ * Utilities to interact with Lab {@link ResetApi}.\n+ */\n+public class LabResetHelper {\n+\n+    /**\n+     * Reset the password for the supplied account.\n+     *\n+     * @param upn the upn of the user for which to reset password\n+     * @return a boolean indicating if password reset was successful\n+     */\n+    public static boolean resetPassword(@NonNull final String upn) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final ResetApi resetApi = new ResetApi();\n+\n+        final CustomSuccessResponse customSuccessResponse;", "originalCommit": "107ff17583dfa6f49c238d37ed82a98b27f8a50b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4NjI4Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461886286", "bodyText": "Addressed here: 4553db2", "author": "shahzaibj", "createdAt": "2020-07-28T21:19:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2MDAyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "4553db202e268d085dcf879544fe1a602fa6db01", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\nindex 6420aa13a..008ee10fb 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/LabResetHelper.java\n\n@@ -43,9 +43,8 @@ public class LabResetHelper {\n         LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n         final ResetApi resetApi = new ResetApi();\n \n-        final CustomSuccessResponse customSuccessResponse;\n-\n         try {\n+            final CustomSuccessResponse customSuccessResponse;\n             customSuccessResponse = resetApi.putResetInfo(upn, LabConstants.ResetOperation.PASSWORD);\n             final String expectedResult = (\"Password reset successful for user : \" + upn)\n                     .toLowerCase();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2NzE4Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461767183", "bodyText": "I think it would help to make a clear line between AAD Device (WPJ) and the device that the test is being run on. Could you please rename the variables/classes/method/etc or update comments to reflect that?", "author": "rpdome", "createdAt": "2020-07-28T17:55:38Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/TestContext.java", "diffHunk": "@@ -0,0 +1,74 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation;\n+\n+import android.content.Context;\n+import android.os.Build;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+\n+import com.microsoft.identity.client.ui.automation.device.Device;\n+\n+import lombok.Getter;\n+import lombok.NonNull;\n+\n+/**\n+ * A class describing the context under which the test is being executed. This includes things like\n+ * details about the device on which the test is being run.\n+ */\n+@Getter\n+public class TestContext {\n+\n+    private final Device device;", "originalCommit": "107ff17583dfa6f49c238d37ed82a98b27f8a50b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg1MjUzNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461852535", "bodyText": "I'll rename to TestDevice", "author": "shahzaibj", "createdAt": "2020-07-28T20:17:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2NzE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4NjE1OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461886159", "bodyText": "Addressed here: 64f9f6c", "author": "shahzaibj", "createdAt": "2020-07-28T21:19:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2NzE4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "64f9f6cbe37f80ed682ddac59b1be50b8175390f", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/TestContext.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/TestContext.java\nindex 9d9cebbc2..dfc87c00d 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/TestContext.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/TestContext.java\n\n@@ -27,7 +27,7 @@ import android.os.Build;\n \n import androidx.test.core.app.ApplicationProvider;\n \n-import com.microsoft.identity.client.ui.automation.device.Device;\n+import com.microsoft.identity.client.ui.automation.device.TestDevice;\n \n import lombok.Getter;\n import lombok.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3MTU1MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461771550", "bodyText": "Suggestion: Is it possible to add version support? (i.e. if we're making changes in broker protocol, it would be great if we can test it with MSAL with the new protocol, and the one with the old protocol, making sure that things work as expected).\n(doesn't have to be this PR, just something to be considered).", "author": "rpdome", "createdAt": "2020-07-28T18:02:48Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.browser.IBrowser;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A model for interacting with the Azure Sample App for MSAL Android during UI Test.\n+ * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java.\n+ */\n+public class AzureSampleApp extends App {\n+\n+    private static final String AZURE_SAMPLE_PACKAGE_NAME = \"com.azuresamples.msalandroidapp\";\n+    private static final String AZURE_SAMPLE_APP_NAME = \"Azure Sample\";\n+    public final static String AZURE_SAMPLE_APK = \"AzureSample.apk\";", "originalCommit": "107ff17583dfa6f49c238d37ed82a98b27f8a50b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4Mzk1MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461883951", "bodyText": "It should be possible, I'll make a backlog item to add that", "author": "shahzaibj", "createdAt": "2020-07-28T21:15:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3MTU1MA=="}], "type": "inlineReview", "revised_code": {"commit": "ef5fb5be33eda091cdcd7349ec26cd9f5ce7ce65", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\nindex ccc9d2411..4baf7aa1a 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n\n@@ -66,11 +66,11 @@ public class AzureSampleApp extends App {\n      * @param shouldHandleBrowserFirstRun whether this is the first time the browser being run\n      * @param promptHandlerParameters     the prompt handler parameters indicating how to handle prompt\n      */\n-    public void signIn(@NonNull final String username,\n-                       @NonNull final String password,\n-                       @Nullable final IBrowser browser,\n-                       final boolean shouldHandleBrowserFirstRun,\n-                       @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n+    public void signInWithSingleAccountFragment(@NonNull final String username,\n+                                                @NonNull final String password,\n+                                                @Nullable final IBrowser browser,\n+                                                final boolean shouldHandleBrowserFirstRun,\n+                                                @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n         // Click Sign In in Single Account Fragment\n         UiAutomatorUtils.handleButtonClick(\"com.azuresamples.msalandroidapp:id/btn_signIn\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3NTk4NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461775984", "bodyText": "nit: signInWithSingleAccountFragment?", "author": "rpdome", "createdAt": "2020-07-28T18:10:42Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.browser.IBrowser;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A model for interacting with the Azure Sample App for MSAL Android during UI Test.\n+ * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java.\n+ */\n+public class AzureSampleApp extends App {\n+\n+    private static final String AZURE_SAMPLE_PACKAGE_NAME = \"com.azuresamples.msalandroidapp\";\n+    private static final String AZURE_SAMPLE_APP_NAME = \"Azure Sample\";\n+    public final static String AZURE_SAMPLE_APK = \"AzureSample.apk\";\n+\n+    public AzureSampleApp() {\n+        super(AZURE_SAMPLE_PACKAGE_NAME, AZURE_SAMPLE_APP_NAME, new LocalApkInstaller());\n+        localApkFileName = AZURE_SAMPLE_APK;\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        // nothing required\n+    }\n+\n+    /**\n+     * Sign in into the Azure Sample App. Please note that this method performs sign in into the\n+     * Single Account Mode Fragment in the Sample App.\n+     *\n+     * @param username                    the username of the account to sign in\n+     * @param password                    the password of the account to sign in\n+     * @param browser                     the browser that is expected to be used during sign in flow\n+     * @param shouldHandleBrowserFirstRun whether this is the first time the browser being run\n+     * @param promptHandlerParameters     the prompt handler parameters indicating how to handle prompt\n+     */\n+    public void signIn(@NonNull final String username,", "originalCommit": "107ff17583dfa6f49c238d37ed82a98b27f8a50b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4NjQzNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461886436", "bodyText": "Addressed here: ef5fb5b", "author": "shahzaibj", "createdAt": "2020-07-28T21:20:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3NTk4NA=="}], "type": "inlineReview", "revised_code": {"commit": "ef5fb5be33eda091cdcd7349ec26cd9f5ce7ce65", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\nindex ccc9d2411..4baf7aa1a 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n\n@@ -66,11 +66,11 @@ public class AzureSampleApp extends App {\n      * @param shouldHandleBrowserFirstRun whether this is the first time the browser being run\n      * @param promptHandlerParameters     the prompt handler parameters indicating how to handle prompt\n      */\n-    public void signIn(@NonNull final String username,\n-                       @NonNull final String password,\n-                       @Nullable final IBrowser browser,\n-                       final boolean shouldHandleBrowserFirstRun,\n-                       @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n+    public void signInWithSingleAccountFragment(@NonNull final String username,\n+                                                @NonNull final String password,\n+                                                @Nullable final IBrowser browser,\n+                                                final boolean shouldHandleBrowserFirstRun,\n+                                                @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n         // Click Sign In in Single Account Fragment\n         UiAutomatorUtils.handleButtonClick(\"com.azuresamples.msalandroidapp:id/btn_signIn\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3NjU2Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461776566", "bodyText": "what does this actually do in this flow?", "author": "rpdome", "createdAt": "2020-07-28T18:11:46Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.browser.IBrowser;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A model for interacting with the Azure Sample App for MSAL Android during UI Test.\n+ * This refers to app stored in Azure-Samples/ms-identity-android-java repository.\n+ * See this: https://github.com/Azure-Samples/ms-identity-android-java.\n+ */\n+public class AzureSampleApp extends App {\n+\n+    private static final String AZURE_SAMPLE_PACKAGE_NAME = \"com.azuresamples.msalandroidapp\";\n+    private static final String AZURE_SAMPLE_APP_NAME = \"Azure Sample\";\n+    public final static String AZURE_SAMPLE_APK = \"AzureSample.apk\";\n+\n+    public AzureSampleApp() {\n+        super(AZURE_SAMPLE_PACKAGE_NAME, AZURE_SAMPLE_APP_NAME, new LocalApkInstaller());\n+        localApkFileName = AZURE_SAMPLE_APK;\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        // nothing required\n+    }\n+\n+    /**\n+     * Sign in into the Azure Sample App. Please note that this method performs sign in into the\n+     * Single Account Mode Fragment in the Sample App.\n+     *\n+     * @param username                    the username of the account to sign in\n+     * @param password                    the password of the account to sign in\n+     * @param browser                     the browser that is expected to be used during sign in flow\n+     * @param shouldHandleBrowserFirstRun whether this is the first time the browser being run\n+     * @param promptHandlerParameters     the prompt handler parameters indicating how to handle prompt\n+     */\n+    public void signIn(@NonNull final String username,\n+                       @NonNull final String password,\n+                       @Nullable final IBrowser browser,\n+                       final boolean shouldHandleBrowserFirstRun,\n+                       @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n+        // Click Sign In in Single Account Fragment\n+        UiAutomatorUtils.handleButtonClick(\"com.azuresamples.msalandroidapp:id/btn_signIn\");\n+\n+        if (promptHandlerParameters.getBroker() == null && browser != null && shouldHandleBrowserFirstRun) {\n+            // handle browser first run as applicable\n+            ((IApp) browser).handleFirstRun();", "originalCommit": "107ff17583dfa6f49c238d37ed82a98b27f8a50b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4NTI3MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461885270", "bodyText": "If Chrome is being launched the very first time after installation, then shows a terms of use/privacy policy dialog. See this: \n  \n    \n      microsoft-authentication-library-common-for-android/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/BrowserChrome.java\n    \n    \n        Lines 42 to 46\n      in\n      c8a2bc9\n    \n    \n    \n    \n\n        \n          \n           @Override \n        \n\n        \n          \n           public void handleFirstRun() { \n        \n\n        \n          \n               UiAutomatorUtils.handleButtonClick(\"com.android.chrome:id/terms_accept\"); \n        \n\n        \n          \n               UiAutomatorUtils.handleButtonClick(\"com.android.chrome:id/negative_button\"); \n        \n\n        \n          \n           }", "author": "shahzaibj", "createdAt": "2020-07-28T21:17:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3NjU2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ef5fb5be33eda091cdcd7349ec26cd9f5ce7ce65", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\nindex ccc9d2411..4baf7aa1a 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/AzureSampleApp.java\n\n@@ -66,11 +66,11 @@ public class AzureSampleApp extends App {\n      * @param shouldHandleBrowserFirstRun whether this is the first time the browser being run\n      * @param promptHandlerParameters     the prompt handler parameters indicating how to handle prompt\n      */\n-    public void signIn(@NonNull final String username,\n-                       @NonNull final String password,\n-                       @Nullable final IBrowser browser,\n-                       final boolean shouldHandleBrowserFirstRun,\n-                       @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n+    public void signInWithSingleAccountFragment(@NonNull final String username,\n+                                                @NonNull final String password,\n+                                                @Nullable final IBrowser browser,\n+                                                final boolean shouldHandleBrowserFirstRun,\n+                                                @NonNull final MicrosoftStsPromptHandlerParameters promptHandlerParameters) {\n         // Click Sign In in Single Account Fragment\n         UiAutomatorUtils.handleButtonClick(\"com.azuresamples.msalandroidapp:id/btn_signIn\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4MjczOA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461782738", "bodyText": "nit: This is technically first run, right?", "author": "rpdome", "createdAt": "2020-07-28T18:22:37Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java", "diffHunk": "@@ -0,0 +1,116 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A model for interacting with the Outlook Android App during UI Test.\n+ */\n+public class OutlookApp extends App implements IFirstPartyApp {\n+\n+    private static final String OUTLOOK_PACKAGE_NAME = \"com.microsoft.office.outlook\";\n+    private static final String OUTLOOK_APP_NAME = \"Microsoft Outlook\";\n+\n+    public OutlookApp() {\n+        super(OUTLOOK_PACKAGE_NAME, OUTLOOK_APP_NAME, new PlayStore());\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        // nothing required\n+    }\n+\n+    @Override\n+    public void addFirstAccount(@NonNull final String username,\n+                                @NonNull final String password,\n+                                @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // Click start btn\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.outlook:id/btn_splash_start\");", "originalCommit": "107ff17583dfa6f49c238d37ed82a98b27f8a50b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0Mjg2Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461842863", "bodyText": "I'd say no....I consider first run to be UI that only appears on the very first launch of an app or subsequent launches until the user dismisses it. For example Authenticator app has welcome screens that appear until you go past them.\nThis UI in Outlook, however, appears as long as there isn't an account in Outlook and not necessarily first run or one time experience.", "author": "shahzaibj", "createdAt": "2020-07-28T20:02:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4MjczOA=="}], "type": "inlineReview", "revised_code": {"commit": "37e1482a21ae79d4aff08fd5c003370cbbe68a9f", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java\nindex b23539b6d..f5ecdd00b 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/OutlookApp.java\n\n@@ -64,7 +64,10 @@ public class OutlookApp extends App implements IFirstPartyApp {\n     public void onAccountAdded() {\n         // Make sure we are on add another account (shows up after an account is added)\n         final UiObject addAnotherAccountScreen = UiAutomatorUtils.obtainUiObjectWithText(\"Add another account\");\n-        Assert.assertTrue(addAnotherAccountScreen.exists());\n+        Assert.assertTrue(\n+                \"Add another account screen appears in Outlook account.\",\n+                addAnotherAccountScreen.exists()\n+        );\n \n         // click may be later\n         UiAutomatorUtils.handleButtonClick(\"com.microsoft.office.outlook:id/bottom_flow_navigation_start_button\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4OTA1Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461789057", "bodyText": "Not related to this PR:\nThis makes me wonder if there's a clear signal if the test breaks because Word, etc decide to change its UI?\nUse case: Word shipped a new UI in the middle of our hot fix release. With a clear sign (ideally without having to go through the error logs), we would know that we could run the test with Word manually, and update this class later.", "author": "rpdome", "createdAt": "2020-07-28T18:33:25Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java", "diffHunk": "@@ -0,0 +1,120 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.app;\n+\n+import android.widget.Button;\n+import android.widget.EditText;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.FirstPartyAppPromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.MicrosoftStsPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.CommonUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A model for interacting with the Word Android App during UI Test.\n+ */\n+public class WordApp extends App implements IFirstPartyApp {\n+\n+    public static final String WORD_PACKAGE_NAME = \"com.microsoft.office.word\";\n+    public static final String WORD_APP_NAME = \"Microsoft Word\";\n+\n+    public WordApp() {\n+        super(WORD_PACKAGE_NAME, WORD_APP_NAME, new PlayStore());\n+    }\n+\n+    @Override\n+    public void handleFirstRun() {\n+        CommonUtils.grantPackagePermission(); // grant permission to access storage\n+    }\n+\n+    @Override\n+    public void addFirstAccount(@NonNull final String username,\n+                                @NonNull final String password,\n+                                @NonNull final FirstPartyAppPromptHandlerParameters promptHandlerParameters) {\n+        // Enter email\n+        UiAutomatorUtils.handleInput(\"com.microsoft.office.word:id/OfcEditText\", username);", "originalCommit": "4c56bdf37f3cd2c749d209cbe98494ee752535ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0NDYwMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461844601", "bodyText": "There would be precise error logs indicating that an element with this specific id is not found. The test wouldn't know however, if an element wasn't found due to Word changing their UI or if this was simply an issue with UI Automator. IMO, the error message about the element should be enough to guide us to do the following:\n\nRetry Test via Automation\nIf still fails, it is probably that Word changed their UI, then we should attempt manual", "author": "shahzaibj", "createdAt": "2020-07-28T20:05:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4OTA1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "89481c18cedd45882877423586406b171d9f171e", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\nindex 6a084d978..68ba03ef3 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/app/WordApp.java\n\n@@ -81,7 +81,7 @@ public class WordApp extends App implements IFirstPartyApp {\n \n     @Override\n     public void onAccountAdded() {\n-        throw new UnsupportedOperationException(\"Not implemented\");\n+        return;\n     }\n \n     private void signIn(@NonNull final String username,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MzIyOA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461793228", "bodyText": "We're going to make changes to this UI soon (to support device less PRT). How would one debug this class/function with a local UI change?", "author": "rpdome", "createdAt": "2020-07-28T18:40:48Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/AbstractTestBroker.java", "diffHunk": "@@ -0,0 +1,129 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.broker;\n+\n+import android.text.TextUtils;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+import androidx.test.uiautomator.UiSelector;\n+\n+import com.microsoft.identity.client.ui.automation.BuildConfig;\n+import com.microsoft.identity.client.ui.automation.app.App;\n+import com.microsoft.identity.client.ui.automation.installer.LocalApkInstaller;\n+import com.microsoft.identity.client.ui.automation.installer.PlayStore;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.client.ui.automation.utils.CommonUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.getResourceId;\n+\n+/**\n+ * A model for interacting with a Broker App during UI Test.\n+ */\n+public abstract class AbstractTestBroker extends App implements ITestBroker {\n+\n+    public AbstractTestBroker(@NonNull final String packageName,\n+                              @NonNull final String appName) {\n+        super(packageName, appName, BuildConfig.INSTALL_SOURCE_LOCAL_APK\n+                .equalsIgnoreCase(BuildConfig.BROKER_INSTALL_SOURCE)\n+                ? new LocalApkInstaller() : new PlayStore());\n+    }\n+\n+    @Override\n+    public void handleAccountPicker(@Nullable final String username) {\n+        final UiDevice device = UiDevice.getInstance(getInstrumentation());\n+\n+        // find the object associated to this username in account picker.\n+        // if the username is not provided, then click on the \"Use another account\" option\n+        final UiObject accountSelected = device.findObject(new UiSelector().resourceId(\n+                getResourceId(getPackageName(), \"account_chooser_listView\")\n+        ).childSelector(new UiSelector().textContains(\n+                // This String is pulled from\n+                // R.string.broker_account_chooser_choose_another_account\n+                TextUtils.isEmpty(username) ? \"Use another account\" : username\n+        )));\n+\n+        try {\n+            accountSelected.waitForExists(FIND_UI_ELEMENT_TIMEOUT);\n+            accountSelected.click();\n+        } catch (final UiObjectNotFoundException e) {\n+            Assert.fail(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void performJoinViaJoinActivity(@NonNull final String username,", "originalCommit": "4c56bdf37f3cd2c749d209cbe98494ee752535ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5NzA0MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461897041", "bodyText": "The ultimate goal is to publish this library/module i.e uiautomationutilities as an artifact in ADO. Then we can start maintain different versions of this library and allow us to locally change from local to dist. It would then make sense for anyone working on broker UI to also make changes to UI Test utilities for broker that listed in this class and a few other classes. This would allow us to debug/run the tests with local UI changes and also makes sure that UI automation utilities are updated accordingly without breaking existing tests.", "author": "shahzaibj", "createdAt": "2020-07-28T21:41:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MzIyOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5NDM5MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461794390", "bodyText": "Would it be possible to clear all registered device first prior to running this test?", "author": "rpdome", "createdAt": "2020-07-28T18:43:03Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java", "diffHunk": "@@ -53,40 +68,225 @@ public BrokerCompanyPortal() {\n     @Override\n     public void performDeviceRegistration(@NonNull final String username,\n                                           @NonNull final String password) {\n-        //TODO implement device registration for CP\n-        throw new UnsupportedOperationException(\"Unimplemented!\");\n+        enrollDevice(username, password); // enrolling device also performs device registration\n     }\n \n     @Override\n     public void performSharedDeviceRegistration(@NonNull final String username,\n                                                 @NonNull final String password) {\n         //TODO implement shared device registration for CP\n-        throw new UnsupportedOperationException(\"Unimplemented!\");\n+        throw new UnsupportedOperationException(\"Not supported!\");\n+    }\n+\n+    @Nullable\n+    @Override\n+    public String obtainDeviceId() {\n+        throw new UnsupportedOperationException(\"Not supported!\");\n+    }\n+\n+    @Override\n+    public void enableBrowserAccess() {\n+        throw new UnsupportedOperationException(\"Not implemented\");\n     }\n \n     @Override\n     public void handleFirstRun() {\n-        //TODO handle first run for CP\n-        throw new UnsupportedOperationException(\"Unimplemented!\");\n+        // nothing needed here\n     }\n \n     @Override\n-    public void handleAccountPicker(@NonNull final String username) {\n-        final UiDevice device = UiDevice.getInstance(getInstrumentation());\n+    public void enrollDevice(@NonNull final String username,\n+                             @NonNull final String password) {\n+        launch(); // launch CP app\n+\n+        handleFirstRun(); // handle CP first run\n+\n+        // click Sign In button on CP welcome page\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.windowsintune.companyportal:id/sign_in_button\");\n+\n+        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                .prompt(PromptParameter.LOGIN)\n+                .consentPageExpected(false)\n+                .expectingLoginPageAccountPicker(false)\n+                .sessionExpected(false)\n+                .loginHint(null)\n+                .build();\n+\n+        final AadPromptHandler aadPromptHandler = new AadPromptHandler(promptHandlerParameters);\n+\n+        // handle AAD login page\n+        aadPromptHandler.handlePrompt(username, password);\n+\n+        // click the activate device admin btn\n+        final UiObject accessSetupScreen = UiAutomatorUtils.obtainUiObjectWithText(\"Access Setup\");\n+        Assert.assertTrue(accessSetupScreen.exists());\n+\n+        // click on BEGIN button to start enroll\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.windowsintune.companyportal:id/setup_positive_button\");\n+\n+        // click CONTINUE to ack privacy page\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.windowsintune.companyportal:id/ContinueButton\");\n+\n+        // click NEXT to ack Android system permissions requirements\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.windowsintune.companyportal:id/bullet_list_page_forward_button\");\n+\n+        // grant permission\n+        CommonUtils.grantPackagePermission();\n+\n+        // Activate CP as admin\n+        TestContext.getTestContext().getDevice().getSettings().activateAdmin();\n+\n+        final ISettings deviceSettings = TestContext.getTestContext().getDevice().getSettings();\n+\n+        // if on a Samsung device, also need to handle enrollment in Knox\n+        if (deviceSettings instanceof SamsungSettings) {\n+            ((SamsungSettings) deviceSettings).enrollInKnox();\n+        }\n+\n+        // make sure we are on the page to complete setup\n+        final UiObject setupCompletePage = UiAutomatorUtils.obtainUiObjectWithResourceId(\n+                \"com.microsoft.windowsintune.companyportal:id/setup_title\"\n+        );\n+\n+        if (!setupCompletePage.exists()) {\n+            // Something went wrong with enrollment. If we see a device limit reached dialog, then\n+            // we throw a DeviceLimitReachedException so that we the DeviceEnrollmentRecoveryRule\n+            // can perform cleanup and recovery for future enrollments.\n+            final UiObject deviceLimitReachedDialog = UiAutomatorUtils.obtainUiObjectWithResourceId(\n+                    \"com.microsoft.windowsintune.companyportal:id/alertTitle\"\n+            );\n+\n+            if (deviceLimitReachedDialog.exists()) {\n+                throw new DeviceLimitReachedException(", "originalCommit": "4c56bdf37f3cd2c749d209cbe98494ee752535ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5OTI2MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461899260", "bodyText": "If we have some signal then yes.....with that said, I'll probably refactor the test cases to just use temp users so this never happens. Both have their pros and cons though.....creating temp user is also a bottleneck as it takes a bit of time for AAD to start recognizing that user...so we have to put thread sleep before we try to use it.", "author": "shahzaibj", "createdAt": "2020-07-28T21:44:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5NDM5MA=="}], "type": "inlineReview", "revised_code": {"commit": "64f9f6cbe37f80ed682ddac59b1be50b8175390f", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java\nindex 445980621..70703eb06 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java\n\n@@ -134,9 +134,9 @@ public class BrokerCompanyPortal extends AbstractTestBroker implements ITestBrok\n         CommonUtils.grantPackagePermission();\n \n         // Activate CP as admin\n-        TestContext.getTestContext().getDevice().getSettings().activateAdmin();\n+        TestContext.getTestContext().getTestDevice().getSettings().activateAdmin();\n \n-        final ISettings deviceSettings = TestContext.getTestContext().getDevice().getSettings();\n+        final ISettings deviceSettings = TestContext.getTestContext().getTestDevice().getSettings();\n \n         // if on a Samsung device, also need to handle enrollment in Knox\n         if (deviceSettings instanceof SamsungSettings) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMDI0Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461800243", "bodyText": "This is a WPJ error, right?", "author": "rpdome", "createdAt": "2020-07-28T18:53:25Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/DeviceLimitReachedException.java", "diffHunk": "@@ -0,0 +1,49 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * This exception indicates device enrollment failure in Company Portal due to the device limit", "originalCommit": "4c56bdf37f3cd2c749d209cbe98494ee752535ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwMDA2Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461900062", "bodyText": "I think this is just enrollment specific. In my experience, you can do as many WPJ as you want, however, device enrollment has a max limit of 15 devices.", "author": "shahzaibj", "createdAt": "2020-07-28T21:45:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMDI0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwNDA4Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461904082", "bodyText": "https://docs.microsoft.com/en-us/mem/intune/enrollment/enrollment-restrictions-set", "author": "shahzaibj", "createdAt": "2020-07-28T21:50:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMDI0Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMTIxMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461801213", "bodyText": "nit: Suggest renaming to TestDevice (to prevent a confusion with \"WPJ Device\").", "author": "rpdome", "createdAt": "2020-07-28T18:54:59Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/Device.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.device;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.ui.automation.device.settings.GoogleSettings;\n+import com.microsoft.identity.client.ui.automation.device.settings.ISettings;\n+import com.microsoft.identity.client.ui.automation.device.settings.SamsungSettings;\n+\n+import lombok.Getter;\n+\n+/**\n+ * This class represents a device under test during UI Automation.\n+ */\n+@Getter\n+public class Device {", "originalCommit": "4c56bdf37f3cd2c749d209cbe98494ee752535ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg1MjMwNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461852306", "bodyText": "Sure, I'll rename to TestDevice", "author": "shahzaibj", "createdAt": "2020-07-28T20:16:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMTIxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwMDI4MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461900280", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-07-28T21:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMTIxMw=="}], "type": "inlineReview", "revised_code": {"commit": "64f9f6cbe37f80ed682ddac59b1be50b8175390f", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/Device.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/TestDevice.java\nsimilarity index 87%\nrename from uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/Device.java\nrename to uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/TestDevice.java\nindex 1e93ccf61..22af01d4c 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/Device.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/TestDevice.java\n\n@@ -34,26 +34,26 @@ import lombok.Getter;\n  * This class represents a device under test during UI Automation.\n  */\n @Getter\n-public class Device {\n+public class TestDevice {\n \n     private final String manufacturer;\n     private final String model;\n     private final int apiLevel;\n     private final ISettings settings;\n \n-    public Device(@NonNull final String manufacturer,\n-                  @NonNull final String model,\n-                  final int apiLevel) {\n+    public TestDevice(@NonNull final String manufacturer,\n+                      @NonNull final String model,\n+                      final int apiLevel) {\n         this.manufacturer = manufacturer;\n         this.model = model;\n         this.apiLevel = apiLevel;\n         this.settings = getSupportedDeviceSettings(manufacturer, model);\n     }\n \n-    public Device(@NonNull final String manufacturer,\n-                  @NonNull final String model,\n-                  final int apiLevel,\n-                  @NonNull final ISettings settings) {\n+    public TestDevice(@NonNull final String manufacturer,\n+                      @NonNull final String model,\n+                      final int apiLevel,\n+                      @NonNull final ISettings settings) {\n         this.manufacturer = manufacturer;\n         this.model = model;\n         this.apiLevel = apiLevel;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMjI4OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461802288", "bodyText": "would this UI be different for each OS version?", "author": "rpdome", "createdAt": "2020-07-28T18:56:52Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/GoogleSettings.java", "diffHunk": "@@ -0,0 +1,205 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.device.settings;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+import androidx.test.uiautomator.UiSelector;\n+\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+import java.util.Calendar;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.FIND_UI_ELEMENT_TIMEOUT;\n+import static com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils.obtainUiObjectWithExactText;\n+\n+public class GoogleSettings extends BaseSettings {", "originalCommit": "4c56bdf37f3cd2c749d209cbe98494ee752535ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwMDg5NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461900895", "bodyText": "Probably different for each OS version, device model, skin etc....this is currently optimized for Pixel 2. I'll update the Javadoc with that info.", "author": "shahzaibj", "createdAt": "2020-07-28T21:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMjI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNDk1Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r466014952", "bodyText": "Addressed here: bbc2327", "author": "shahzaibj", "createdAt": "2020-08-05T21:29:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMjI4OA=="}], "type": "inlineReview", "revised_code": {"commit": "087aa79b92bf86d15b01ac0623aa3c4b316507e7", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/GoogleSettings.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/GoogleSettings.java\nindex 0ef4900e2..dd8c4d447 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/GoogleSettings.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/GoogleSettings.java\n\n@@ -30,6 +30,7 @@ import androidx.test.uiautomator.UiObjectNotFoundException;\n import androidx.test.uiautomator.UiSelector;\n \n import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.constants.DeviceAdmin;\n import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMjU4MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461802581", "bodyText": "Would this UI be different for each (Knox?) version?", "author": "rpdome", "createdAt": "2020-07-28T18:57:24Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java", "diffHunk": "@@ -0,0 +1,186 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.device.settings;\n+\n+import android.view.View;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+import java.util.Calendar;\n+\n+public class SamsungSettings extends BaseSettings {", "originalCommit": "4c56bdf37f3cd2c749d209cbe98494ee752535ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwMTEzNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461901136", "bodyText": "Probably different for each OS version, device model, skin etc....this is currently optimized for Galaxy S6. I'll update the Javadoc with that info.", "author": "shahzaibj", "createdAt": "2020-07-28T21:46:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMjU4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNTAwOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r466015009", "bodyText": "Addressed here: bbc2327", "author": "shahzaibj", "createdAt": "2020-08-05T21:29:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwMjU4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "087aa79b92bf86d15b01ac0623aa3c4b316507e7", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java\nindex 7a743dc42..8ac1452bf 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java\n\n@@ -29,6 +29,7 @@ import androidx.test.uiautomator.UiObject;\n import androidx.test.uiautomator.UiObjectNotFoundException;\n \n import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.constants.DeviceAdmin;\n import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwNTg0MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461805841", "bodyText": "Would this be different for each Play Store app version?\nFYI, for every comment like this, I'm not asking you to implement/support all possible version, but it would really be great to have a clear signal that tells something like.... \"Google Play Store changes their UX in page A. We're trying to do B but now we can't.\" without having to debug, or dig through logs.", "author": "rpdome", "createdAt": "2020-07-28T19:03:10Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/installer/PlayStore.java", "diffHunk": "@@ -66,18 +79,20 @@ private void searchAppOnGooglePlay(@NonNull final String hint) {\n         try {\n             searchTextField.waitForExists(FIND_UI_ELEMENT_TIMEOUT);\n             searchTextField.setText(hint);\n-        } catch (UiObjectNotFoundException e) {\n+        } catch (final UiObjectNotFoundException e) {\n             Assert.fail(e.getMessage());\n         }\n \n         device.pressEnter();\n     }\n \n-    private void selectGooglePlayAppFromAppList(@NonNull final String appName) throws UiObjectNotFoundException {\n+    private void selectGooglePlayAppFromAppList() throws UiObjectNotFoundException {", "originalCommit": "4c56bdf37f3cd2c749d209cbe98494ee752535ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwMjgyMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461902820", "bodyText": "I think we would ultimately want those kinds of error messages, I am bit hesitant to put those right now as we still don't know a lot about the reliability of these tests. Once we get these to run on a nightly basis on some pipeline on a few different devices and we get a more comprehensive sense of their reliability, then we can go in and provide those kinds of error messages.", "author": "shahzaibj", "createdAt": "2020-07-28T21:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgwNTg0MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxOTA0MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461819040", "bodyText": "Question: If these elements can't be found (due to app update, for example), do these fail in a way that's easy to understand/correct?", "author": "iambmelt", "createdAt": "2020-07-28T19:26:12Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java", "diffHunk": "@@ -53,40 +68,225 @@ public BrokerCompanyPortal() {\n     @Override\n     public void performDeviceRegistration(@NonNull final String username,\n                                           @NonNull final String password) {\n-        //TODO implement device registration for CP\n-        throw new UnsupportedOperationException(\"Unimplemented!\");\n+        enrollDevice(username, password); // enrolling device also performs device registration\n     }\n \n     @Override\n     public void performSharedDeviceRegistration(@NonNull final String username,\n                                                 @NonNull final String password) {\n         //TODO implement shared device registration for CP\n-        throw new UnsupportedOperationException(\"Unimplemented!\");\n+        throw new UnsupportedOperationException(\"Not supported!\");\n+    }\n+\n+    @Nullable\n+    @Override\n+    public String obtainDeviceId() {\n+        throw new UnsupportedOperationException(\"Not supported!\");\n+    }\n+\n+    @Override\n+    public void enableBrowserAccess() {\n+        throw new UnsupportedOperationException(\"Not implemented\");\n     }\n \n     @Override\n     public void handleFirstRun() {\n-        //TODO handle first run for CP\n-        throw new UnsupportedOperationException(\"Unimplemented!\");\n+        // nothing needed here\n     }\n \n     @Override\n-    public void handleAccountPicker(@NonNull final String username) {\n-        final UiDevice device = UiDevice.getInstance(getInstrumentation());\n+    public void enrollDevice(@NonNull final String username,\n+                             @NonNull final String password) {\n+        launch(); // launch CP app\n+\n+        handleFirstRun(); // handle CP first run\n+\n+        // click Sign In button on CP welcome page\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.windowsintune.companyportal:id/sign_in_button\");\n+\n+        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                .prompt(PromptParameter.LOGIN)\n+                .consentPageExpected(false)\n+                .expectingLoginPageAccountPicker(false)\n+                .sessionExpected(false)\n+                .loginHint(null)\n+                .build();\n+\n+        final AadPromptHandler aadPromptHandler = new AadPromptHandler(promptHandlerParameters);\n+\n+        // handle AAD login page\n+        aadPromptHandler.handlePrompt(username, password);\n+\n+        // click the activate device admin btn\n+        final UiObject accessSetupScreen = UiAutomatorUtils.obtainUiObjectWithText(\"Access Setup\");\n+        Assert.assertTrue(accessSetupScreen.exists());\n+\n+        // click on BEGIN button to start enroll\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.windowsintune.companyportal:id/setup_positive_button\");\n+\n+        // click CONTINUE to ack privacy page\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.windowsintune.companyportal:id/ContinueButton\");\n+\n+        // click NEXT to ack Android system permissions requirements\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.windowsintune.companyportal:id/bullet_list_page_forward_button\");\n+\n+        // grant permission\n+        CommonUtils.grantPackagePermission();\n+\n+        // Activate CP as admin\n+        TestContext.getTestContext().getDevice().getSettings().activateAdmin();\n+\n+        final ISettings deviceSettings = TestContext.getTestContext().getDevice().getSettings();\n+\n+        // if on a Samsung device, also need to handle enrollment in Knox\n+        if (deviceSettings instanceof SamsungSettings) {\n+            ((SamsungSettings) deviceSettings).enrollInKnox();\n+        }\n+\n+        // make sure we are on the page to complete setup\n+        final UiObject setupCompletePage = UiAutomatorUtils.obtainUiObjectWithResourceId(\n+                \"com.microsoft.windowsintune.companyportal:id/setup_title\"\n+        );\n+\n+        if (!setupCompletePage.exists()) {\n+            // Something went wrong with enrollment. If we see a device limit reached dialog, then\n+            // we throw a DeviceLimitReachedException so that we the DeviceEnrollmentRecoveryRule\n+            // can perform cleanup and recovery for future enrollments.\n+            final UiObject deviceLimitReachedDialog = UiAutomatorUtils.obtainUiObjectWithResourceId(\n+                    \"com.microsoft.windowsintune.companyportal:id/alertTitle\"\n+            );\n+\n+            if (deviceLimitReachedDialog.exists()) {\n+                throw new DeviceLimitReachedException(\n+                        \"Unable to complete enrollment as device limit reached for this account.\",\n+                        this\n+                );\n+            } else {\n+                // We don't see device limit issue, but the enrollment still failed due to reasons\n+                // that aren't immediately known\n+                Assert.fail(\"Unable to complete enrollment due to unknown reason\");\n+            }\n+        }\n+\n+        // click on DONE to complete setup\n+        UiAutomatorUtils.handleButtonClick(\n+                \"com.microsoft.windowsintune.companyportal:id/setup_center_button\"\n+        );\n+\n+        // Enrollment has been performed successfully\n+        enrollmentPerformedSuccessfully = true;\n+    }\n+\n+    @Override\n+    public void handleAppProtectionPolicy() {\n+        final UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+\n+        // get access screen\n+        final UiObject getAccessScreen = UiAutomatorUtils.obtainUiObjectWithText(\"Get Access\");\n+        Assert.assertTrue(getAccessScreen.exists());\n+\n+        // get access screen - continue\n+        UiAutomatorUtils.handleButtonClick(\"com.microsoft.windowsintune.companyportal:id/positive_button\");\n \n-        // find the object associated to this username in account picker\n-        final UiObject accountSelected = device.findObject(new UiSelector().resourceId(\n-                getResourceId(COMPANY_PORTAL_APP_PACKAGE_NAME, \"account_chooser_listView\")\n-        ).childSelector(new UiSelector().textContains(\n-                username\n-        )));\n+        // handle PIN\n+        final Random random = new Random();\n+        final int randomPin = random.nextInt(10000);\n+\n+        final UiObject pinField = UiAutomatorUtils.obtainUiObjectWithResourceId(\n+                \"com.microsoft.windowsintune.companyportal:id/pin_entry_passcodeEditView\"\n+        );\n \n         try {\n-            accountSelected.waitForExists(FIND_UI_ELEMENT_TIMEOUT);\n-            accountSelected.click();\n-        } catch (UiObjectNotFoundException e) {\n+            pinField.setText(String.valueOf(randomPin));\n+        } catch (final UiObjectNotFoundException e) {\n+            fail(e.getMessage());\n+        }\n+\n+        device.pressEnter();\n+\n+        // confirm PIN\n+\n+        final UiObject pinConfirmField = UiAutomatorUtils.obtainUiObjectWithResourceId(\n+                \"com.microsoft.windowsintune.companyportal:id/pin_entry_passcodeEditView\"\n+        );\n+\n+        try {\n+            pinConfirmField.setText(String.valueOf(randomPin));\n+        } catch (final UiObjectNotFoundException e) {\n+            fail(e.getMessage());\n+        }\n+\n+        device.pressEnter();\n+    }\n+\n+    private void openDevicesTab() {\n+        // launch CP\n+        launch();\n+\n+        try {\n+            final UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+\n+            // Click Devices Tab\n+            final UiObject devicesTab = device.findObject(new UiSelector().description(\n+                    \"Devices, Tab, 2 of 3\"\n+            ).clickable(true));\n+\n+            devicesTab.waitForExists(FIND_UI_ELEMENT_TIMEOUT);\n+\n+            devicesTab.click();\n+        } catch (final UiObjectNotFoundException e) {\n             Assert.fail(e.getMessage());\n         }\n     }\n \n+    /**\n+     * Removes a device from Company Portal (from the devices listed in CP Devices Tab)\n+     */\n+    public void removeDevice() {\n+        // if enrollment failed, then Devices Tab is automatically opened for us\n+        if (enrollmentPerformedSuccessfully) {\n+            openDevicesTab();\n+        }\n+\n+        try {\n+            final UiDevice uiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+\n+            // If Enrollment failed, then the first device on the list is in corrupted state and\n+            // cannot even be removed, we need to remove the second one in the list\n+            final UiObject deviceToRemove = uiDevice.findObject(new UiSelector()\n+                    .resourceId(\"com.microsoft.windowsintune.companyportal:id/device_list_item\")\n+                    .index(enrollmentPerformedSuccessfully ? 0 : 1)\n+            );\n+\n+            deviceToRemove.waitForExists(FIND_UI_ELEMENT_TIMEOUT);\n+\n+            // click on the device to be removed\n+            deviceToRemove.click();\n+\n+            // Click more options in the top right\n+            final UiObject threeDots = uiDevice.findObject(new UiSelector().descriptionContains(\n+                    \"More options\"\n+            ));\n+\n+            threeDots.waitForExists(FIND_UI_ELEMENT_TIMEOUT);", "originalCommit": "b210f1b6280abec3158cf68a5e5b5b583819a46d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxOTcxMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461819712", "bodyText": "Or..... should we assert the existence of these buttons? \ud83e\udd14", "author": "iambmelt", "createdAt": "2020-07-28T19:27:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxOTA0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0OTU3Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461849572", "bodyText": "The test would fail with an AssertionError and there would be precise error logs indicating that an element with this specific id is not found. The test wouldn't know however, if an element wasn't found due to the app changing their UI or if this was simply an issue with UI Automator. IMO, the error message about the element should be enough to guide us to do the following:\n\nRetry Test via Automation\nIf still fails, it is probably that the App changed their UI, then we should attempt manual", "author": "shahzaibj", "createdAt": "2020-07-28T20:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxOTA0MA=="}], "type": "inlineReview", "revised_code": {"commit": "64f9f6cbe37f80ed682ddac59b1be50b8175390f", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java\nindex 445980621..70703eb06 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/broker/BrokerCompanyPortal.java\n\n@@ -134,9 +134,9 @@ public class BrokerCompanyPortal extends AbstractTestBroker implements ITestBrok\n         CommonUtils.grantPackagePermission();\n \n         // Activate CP as admin\n-        TestContext.getTestContext().getDevice().getSettings().activateAdmin();\n+        TestContext.getTestContext().getTestDevice().getSettings().activateAdmin();\n \n-        final ISettings deviceSettings = TestContext.getTestContext().getDevice().getSettings();\n+        final ISettings deviceSettings = TestContext.getTestContext().getTestDevice().getSettings();\n \n         // if on a Samsung device, also need to handle enrollment in Knox\n         if (deviceSettings instanceof SamsungSettings) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMDQ4NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461820485", "bodyText": "Suggestion: navigateTo() (browse() wasn't very to me)", "author": "iambmelt", "createdAt": "2020-07-28T19:28:52Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/IBrowser.java", "diffHunk": "@@ -0,0 +1,39 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.browser;\n+\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+\n+/**\n+ * An interface describing a browser app on an Android device during UI Automated test.\n+ */\n+public interface IBrowser extends IApp {\n+\n+    /**\n+     * Browse to the supplied url using this browser.\n+     *\n+     * @param url the url to open\n+     */\n+    void browse(String url);", "originalCommit": "b210f1b6280abec3158cf68a5e5b5b583819a46d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxNzA1MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461917051", "bodyText": "Addressed here: 172b12c", "author": "shahzaibj", "createdAt": "2020-07-28T22:06:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMDQ4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "172b12c97b3ea1654257c7f96a20ffb06447a529", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/IBrowser.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/IBrowser.java\nindex 0e51e6391..adc909e45 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/IBrowser.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/browser/IBrowser.java\n\n@@ -34,6 +34,6 @@ public interface IBrowser extends IApp {\n      *\n      * @param url the url to open\n      */\n-    void browse(String url);\n+    void navigateTo(String url);\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMTUxMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461821512", "bodyText": "Opportunity to have an AdminNames object or constant?", "author": "iambmelt", "createdAt": "2020-07-28T19:30:35Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java", "diffHunk": "@@ -0,0 +1,186 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.device.settings;\n+\n+import android.view.View;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+import java.util.Calendar;\n+\n+public class SamsungSettings extends BaseSettings {\n+\n+    @Override\n+    public void disableAdmin(@NonNull final String adminName) {\n+        launchDeviceAdminSettingsPage();\n+\n+        try {\n+            // scroll down the recycler view to find the list item for this admin\n+            final UiObject adminAppListItem = UiAutomatorUtils.obtainChildInScrollable(\n+                    \"android:id/list\",\n+                    adminName\n+            );\n+\n+            // Click into this admin\n+            assert adminAppListItem != null;\n+            adminAppListItem.click();\n+\n+            // Click Deactivate button\n+            UiAutomatorUtils.handleButtonClick(\"com.android.settings:id/action_button\");\n+\n+            if (\"Company Portal\".equalsIgnoreCase(adminName)) {", "originalCommit": "b210f1b6280abec3158cf68a5e5b5b583819a46d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxNjUxMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461916513", "bodyText": "Addressed here: 087aa79", "author": "shahzaibj", "createdAt": "2020-07-28T22:06:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMTUxMg=="}], "type": "inlineReview", "revised_code": {"commit": "087aa79b92bf86d15b01ac0623aa3c4b316507e7", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java\nindex 7a743dc42..8ac1452bf 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/SamsungSettings.java\n\n@@ -29,6 +29,7 @@ import androidx.test.uiautomator.UiObject;\n import androidx.test.uiautomator.UiObjectNotFoundException;\n \n import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.constants.DeviceAdmin;\n import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMjI2Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461822266", "bodyText": "Nit javadoc", "author": "iambmelt", "createdAt": "2020-07-28T19:32:06Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/microsoftsts/MicrosoftStsPromptHandlerParameters.java", "diffHunk": "@@ -0,0 +1,35 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.microsoftsts;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+\n+import lombok.Getter;\n+import lombok.experimental.SuperBuilder;\n+\n+@SuperBuilder\n+@Getter\n+public class MicrosoftStsPromptHandlerParameters extends PromptHandlerParameters {", "originalCommit": "b210f1b6280abec3158cf68a5e5b5b583819a46d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxNjc2Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/982#discussion_r461916766", "bodyText": "Addressed here: 2322538", "author": "shahzaibj", "createdAt": "2020-07-28T22:06:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMjI2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c8a2bc9270bdad42df26a271e840cf66efd628e1", "chunk": "diff --git a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/microsoftsts/MicrosoftStsPromptHandlerParameters.java b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/microsoftsts/MicrosoftStsPromptHandlerParameters.java\nindex 4aee1ae2d..8f4e49fae 100644\n--- a/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/microsoftsts/MicrosoftStsPromptHandlerParameters.java\n+++ b/uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/microsoftsts/MicrosoftStsPromptHandlerParameters.java\n\n@@ -31,5 +31,8 @@ import lombok.experimental.SuperBuilder;\n @Getter\n public class MicrosoftStsPromptHandlerParameters extends PromptHandlerParameters {\n \n+    /**\n+     * Denotes whether the account being used for this request is a federated account.\n+     */\n     private boolean isFederated;\n }\n"}}, {"oid": "c8a2bc9270bdad42df26a271e840cf66efd628e1", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c8a2bc9270bdad42df26a271e840cf66efd628e1", "message": "Fix javadoc for prompt handler parameters", "committedDate": "2020-07-28T20:39:09Z", "type": "commit"}, {"oid": "64f9f6cbe37f80ed682ddac59b1be50b8175390f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/64f9f6cbe37f80ed682ddac59b1be50b8175390f", "message": "Rename Device to TestDevice", "committedDate": "2020-07-28T20:44:28Z", "type": "commit"}, {"oid": "4553db202e268d085dcf879544fe1a602fa6db01", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/4553db202e268d085dcf879544fe1a602fa6db01", "message": "Address try catch block comment", "committedDate": "2020-07-28T21:14:19Z", "type": "commit"}, {"oid": "ef5fb5be33eda091cdcd7349ec26cd9f5ce7ce65", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/ef5fb5be33eda091cdcd7349ec26cd9f5ce7ce65", "message": "Address comment about azure sample app", "committedDate": "2020-07-28T21:18:35Z", "type": "commit"}, {"oid": "232253803f674235f06e02268737bac1a2eb0c0c", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/232253803f674235f06e02268737bac1a2eb0c0c", "message": "Address comment about javadoc", "committedDate": "2020-07-28T21:52:35Z", "type": "commit"}, {"oid": "172b12c97b3ea1654257c7f96a20ffb06447a529", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/172b12c97b3ea1654257c7f96a20ffb06447a529", "message": "Address comment about method name", "committedDate": "2020-07-28T21:53:39Z", "type": "commit"}, {"oid": "087aa79b92bf86d15b01ac0623aa3c4b316507e7", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/087aa79b92bf86d15b01ac0623aa3c4b316507e7", "message": "Add enum for device admin", "committedDate": "2020-07-28T22:05:30Z", "type": "commit"}, {"oid": "89481c18cedd45882877423586406b171d9f171e", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/89481c18cedd45882877423586406b171d9f171e", "message": "Return from word on account added", "committedDate": "2020-08-05T21:21:00Z", "type": "commit"}, {"oid": "bbc2327a1a52a0a5f04bbebb1255df4a30772a90", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/bbc2327a1a52a0a5f04bbebb1255df4a30772a90", "message": "Add javadoc for settings", "committedDate": "2020-08-05T21:28:40Z", "type": "commit"}, {"oid": "37e1482a21ae79d4aff08fd5c003370cbbe68a9f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/37e1482a21ae79d4aff08fd5c003370cbbe68a9f", "message": "Add assert messages", "committedDate": "2020-08-06T02:58:10Z", "type": "commit"}, {"oid": "717c12b97a5883d4b9744dbdfe8de118e212e19c", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/717c12b97a5883d4b9744dbdfe8de118e212e19c", "message": "Merge branch 'dev' into shahzaibj/extensive-test-utils", "committedDate": "2020-08-06T02:59:29Z", "type": "commit"}, {"oid": "055e35cb5cb1b315e70efdc23e9c09a39fd3c017", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/055e35cb5cb1b315e70efdc23e9c09a39fd3c017", "message": "Rename method to change device time", "committedDate": "2020-08-08T03:16:48Z", "type": "commit"}, {"oid": "442429ccdfbf2740b3d5d298b94268cab86e0382", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/442429ccdfbf2740b3d5d298b94268cab86e0382", "message": "Merge branch 'dev' into shahzaibj/extensive-test-utils", "committedDate": "2020-08-08T03:29:50Z", "type": "commit"}]}