{"pr_number": 1075, "pr_title": "Keystore Localization Workaround for Non-Gregorian Calendar Types", "pr_createdAt": "2020-10-08T19:41:08Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1075", "timeline": [{"oid": "656ddbd00ab4f1a95f497e95a803c7e7a42486ef", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/656ddbd00ab4f1a95f497e95a803c7e7a42486ef", "message": "Apply workaround to StorageManager (non-ADAL)", "committedDate": "2020-10-08T19:31:30Z", "type": "commit"}, {"oid": "e5451082b21df52ab2a81bf7cd1a6b71c9e8baba", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e5451082b21df52ab2a81bf7cd1a6b71c9e8baba", "message": "Add javdoc", "committedDate": "2020-10-08T19:33:52Z", "type": "commit"}, {"oid": "d429c7a3d809ad5f51d671fc7f5711f29cf124ad", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d429c7a3d809ad5f51d671fc7f5711f29cf124ad", "message": "Apply same fix to DevicePopManager", "committedDate": "2020-10-08T19:38:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk3MjQwNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1075#discussion_r501972406", "bodyText": "The synchronization here needs to encompass the entire time that the locale is altered.  Otherwise a second thread entering this section will pick the current locale as the new altered locale, the first thread retires and restores the correct locale and the second sets it to it's view of the default locale, which is the wrong one.", "author": "AdamBJohnsonx", "createdAt": "2020-10-08T19:47:54Z", "path": "common/src/main/java/com/microsoft/identity/common/adal/internal/cache/StorageHelper.java", "diffHunk": "@@ -703,6 +715,14 @@ private synchronized KeyPair generateKeyPairFromAndroidKeyStore()\n         }\n     }\n \n+    public static synchronized void applyKeyStoreLocaleWorkarounds(@NonNull final Locale currentLocale) {", "originalCommit": "d429c7a3d809ad5f51d671fc7f5711f29cf124ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bad369a9727480e36d3d9a57f4d12876ee42ea5c", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/adal/internal/cache/StorageHelper.java b/common/src/main/java/com/microsoft/identity/common/adal/internal/cache/StorageHelper.java\nindex 294f6b285..568b47106 100644\n--- a/common/src/main/java/com/microsoft/identity/common/adal/internal/cache/StorageHelper.java\n+++ b/common/src/main/java/com/microsoft/identity/common/adal/internal/cache/StorageHelper.java\n\n@@ -665,53 +666,55 @@ public class StorageHelper implements IStorageHelper {\n             throws GeneralSecurityException, IOException {\n         final String methodName = \":generateKeyPairFromAndroidKeyStore\";\n \n-        try {\n-            logFlowStart(methodName, AuthenticationConstants.TelemetryEvents.KEYCHAIN_WRITE_START);\n-\n-            final KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE);\n-            keyStore.load(null);\n-\n-            Logger.verbose(TAG + methodName, \"Generate KeyPair from AndroidKeyStore\");\n-\n+        synchronized (LOCALE_CHANGE_LOCK) {\n             // Due to the following bug in lower API versions of keystore, locale workarounds may\n             // need to be applied\n             // https://issuetracker.google.com/issues/37095309\n             final Locale currentLocale = Locale.getDefault();\n             applyKeyStoreLocaleWorkarounds(currentLocale);\n \n-            final Calendar start = Calendar.getInstance();\n-            final Calendar end = Calendar.getInstance();\n-            final int certValidYears = 100;\n-            end.add(Calendar.YEAR, certValidYears);\n-\n-            // self signed cert stored in AndroidKeyStore to asym. encrypt key\n-            // to a file\n-            final KeyPairGenerator generator = KeyPairGenerator.getInstance(\"RSA\",\n-                    ANDROID_KEY_STORE);\n-            generator.initialize(getKeyPairGeneratorSpec(mContext, start.getTime(), end.getTime()));\n-\n-            final KeyPair keyPair = generator.generateKeyPair();\n-\n-            // Reset to our default locale after generating keys\n-            Locale.setDefault(currentLocale);\n-\n-            logFlowSuccess(methodName, AuthenticationConstants.TelemetryEvents.KEYCHAIN_WRITE_END, \"\");\n-            return keyPair;\n-        } catch (final GeneralSecurityException | IOException e) {\n-            logFlowError(methodName, AuthenticationConstants.TelemetryEvents.KEYCHAIN_WRITE_END, e.toString(), e);\n-            throw e;\n-        } catch (final IllegalStateException e) {\n-            // There is an issue with AndroidKeyStore when attempting to generate keypair\n-            // if user doesn't have pin/passphrase setup for their lock screen.\n-            // Issue 177459 : AndroidKeyStore KeyPairGenerator fails to generate\n-            // KeyPair after toggling lock type, even without setting the encryptionRequired\n-            // flag on the KeyPairGeneratorSpec.\n-            // https://code.google.com/p/android/issues/detail?id=177459\n-            // The thrown exception in this case is:\n-            // java.lang.IllegalStateException: could not generate key in keystore\n-            // To avoid app crashing, re-throw as checked exception\n-            logFlowError(methodName, AuthenticationConstants.TelemetryEvents.KEYCHAIN_WRITE_END, e.toString(), e);\n-            throw new KeyStoreException(e);\n+            try {\n+                logFlowStart(methodName, AuthenticationConstants.TelemetryEvents.KEYCHAIN_WRITE_START);\n+\n+                final KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE);\n+                keyStore.load(null);\n+\n+                Logger.verbose(TAG + methodName, \"Generate KeyPair from AndroidKeyStore\");\n+\n+                final Calendar start = Calendar.getInstance();\n+                final Calendar end = Calendar.getInstance();\n+                final int certValidYears = 100;\n+                end.add(Calendar.YEAR, certValidYears);\n+\n+                // self signed cert stored in AndroidKeyStore to asym. encrypt key\n+                // to a file\n+                final KeyPairGenerator generator = KeyPairGenerator.getInstance(\"RSA\",\n+                        ANDROID_KEY_STORE);\n+                generator.initialize(getKeyPairGeneratorSpec(mContext, start.getTime(), end.getTime()));\n+\n+                final KeyPair keyPair = generator.generateKeyPair();\n+\n+                logFlowSuccess(methodName, AuthenticationConstants.TelemetryEvents.KEYCHAIN_WRITE_END, \"\");\n+                return keyPair;\n+            } catch (final GeneralSecurityException | IOException e) {\n+                logFlowError(methodName, AuthenticationConstants.TelemetryEvents.KEYCHAIN_WRITE_END, e.toString(), e);\n+                throw e;\n+            } catch (final IllegalStateException e) {\n+                // There is an issue with AndroidKeyStore when attempting to generate keypair\n+                // if user doesn't have pin/passphrase setup for their lock screen.\n+                // Issue 177459 : AndroidKeyStore KeyPairGenerator fails to generate\n+                // KeyPair after toggling lock type, even without setting the encryptionRequired\n+                // flag on the KeyPairGeneratorSpec.\n+                // https://code.google.com/p/android/issues/detail?id=177459\n+                // The thrown exception in this case is:\n+                // java.lang.IllegalStateException: could not generate key in keystore\n+                // To avoid app crashing, re-throw as checked exception\n+                logFlowError(methodName, AuthenticationConstants.TelemetryEvents.KEYCHAIN_WRITE_END, e.toString(), e);\n+                throw new KeyStoreException(e);\n+            } finally {\n+                // Reset to our default locale after generating keys\n+                Locale.setDefault(currentLocale);\n+            }\n         }\n     }\n \n"}}, {"oid": "bad369a9727480e36d3d9a57f4d12876ee42ea5c", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/bad369a9727480e36d3d9a57f4d12876ee42ea5c", "message": "Address concurrency issue", "committedDate": "2020-10-08T20:23:04Z", "type": "commit"}, {"oid": "9e53423a8d62033001ceaeb627fdd744e638141e", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9e53423a8d62033001ceaeb627fdd744e638141e", "message": "Update javadoc", "committedDate": "2020-10-08T20:25:00Z", "type": "commit"}, {"oid": "9215a82c5ec672b6a0dadd558aa4a91e92b815e9", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9215a82c5ec672b6a0dadd558aa4a91e92b815e9", "message": "Conditionally acquire the lock", "committedDate": "2020-10-08T20:30:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk5NTgyNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1075#discussion_r501995825", "bodyText": "wild.", "author": "AdamBJohnsonx", "createdAt": "2020-10-08T20:33:57Z", "path": "common/src/main/java/com/microsoft/identity/common/adal/internal/cache/StorageHelper.java", "diffHunk": "@@ -664,42 +667,63 @@ private synchronized KeyPair generateKeyPairFromAndroidKeyStore()\n             throws GeneralSecurityException, IOException {\n         final String methodName = \":generateKeyPairFromAndroidKeyStore\";\n \n-        try {\n-            logFlowStart(methodName, AuthenticationConstants.TelemetryEvents.KEYCHAIN_WRITE_START);\n-\n-            final KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE);\n-            keyStore.load(null);\n+        synchronized (isLocaleCalendarNonGregorian(Locale.getDefault()) ? LOCALE_CHANGE_LOCK : new Object()) {", "originalCommit": "9215a82c5ec672b6a0dadd558aa4a91e92b815e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk5Nzc4MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1075#discussion_r501997781", "bodyText": "thought there was a getLanguage() that we could use instead of this string manipulation.", "author": "AdamBJohnsonx", "createdAt": "2020-10-08T20:37:43Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java", "diffHunk": "@@ -49,5 +93,17 @@ public static long getExpiresOn(long expiresIn) {\n         final long currentTimeSecs = TimeUnit.MILLISECONDS.toSeconds(currentTimeMillis);\n         return currentTimeSecs + expiresIn;\n     }\n+\n+    /**\n+     * Checks if the provided locale has a default calendar format that is non-Gregorian.\n+     *\n+     * @param inputLocale A locale to inspect.\n+     * @return True, if the provided locale's default calendar format is non-Gregorian. False otherwise.\n+     */\n+    public static boolean isLocaleCalendarNonGregorian(@NonNull final Locale inputLocale) {\n+        final String localeStr = inputLocale.toString();", "originalCommit": "9215a82c5ec672b6a0dadd558aa4a91e92b815e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAwMTYyMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1075#discussion_r502001623", "bodyText": "6d16f14", "author": "iambmelt", "createdAt": "2020-10-08T20:44:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk5Nzc4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6d16f14855291c43e43a4b0cf3ecab407f359ba3", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java b/common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java\nindex 666c72674..d2ec67a53 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java\n\n@@ -101,8 +101,7 @@ public final class DateUtilities {\n      * @return True, if the provided locale's default calendar format is non-Gregorian. False otherwise.\n      */\n     public static boolean isLocaleCalendarNonGregorian(@NonNull final Locale inputLocale) {\n-        final String localeStr = inputLocale.toString();\n-        final String localePrefix = localeStr.split(\"_\")[0];\n+        final String localePrefix = inputLocale.getLanguage();\n         return NON_GREGORIAN_CALENDAR_LOCALES.contains(localePrefix);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk5OTI1Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1075#discussion_r501999253", "bodyText": "You can initialize your hash set with a Collection using Arrays.asList().", "author": "AdamBJohnsonx", "createdAt": "2020-10-08T20:40:34Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java", "diffHunk": "@@ -22,11 +22,55 @@\n // THE SOFTWARE.\n package com.microsoft.identity.common.internal.util;\n \n+import androidx.annotation.NonNull;\n+\n import java.util.Date;\n+import java.util.HashSet;\n+import java.util.Locale;\n+import java.util.Set;\n import java.util.concurrent.TimeUnit;\n \n public final class DateUtilities {\n \n+    /**\n+     * Static lock object to use when performing operations that modify locale state of JVM.\n+     */\n+    public static final Object LOCALE_CHANGE_LOCK = new Object();\n+\n+    private static final String LOCALE_PREFIX_ARABIC = \"ar\";\n+    private static final String LOCALE_PREFIX_ASSAMESE = \"as\";\n+    private static final String LOCALE_PREFIX_BENGALI = \"bn\";\n+    private static final String LOCALE_PREFIX_ALGERIAN = \"dz\";\n+    private static final String LOCALE_PREFIX_PERSIAN = \"fa\";\n+    private static final String LOCALE_PREFIX_KASHMIRI = \"ks\";\n+    private static final String LOCALE_PREFIX_MARATHI = \"mr\";\n+    private static final String LOCALE_PREFIX_BURMESE = \"my\";\n+    private static final String LOCALE_PREFIX_NEPALI = \"ne\";\n+    private static final String LOCALE_PREFIX_PUNJABI = \"pa\";\n+    private static final String LOCALE_PREFIX_PASHTO = \"ps\";\n+    private static final String LOCALE_PREFIX_URDU = \"ur\";\n+    private static final String LOCALE_PREFIX_UZBEK = \"uz\";\n+\n+    // This list may not be exhaustive, but represents the set of non-Gregorian locales\n+    // available as of AOSP API 24\n+    private static final Set<String> NON_GREGORIAN_CALENDAR_LOCALES = new HashSet<>();", "originalCommit": "9215a82c5ec672b6a0dadd558aa4a91e92b815e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAwNTE5Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1075#discussion_r502005193", "bodyText": "e65bcf2", "author": "iambmelt", "createdAt": "2020-10-08T20:51:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk5OTI1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e65bcf2ca599fd50d835c03d97d8f0545d23d3ee", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java b/common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java\nindex 666c72674..540d16e73 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/util/DateUtilities.java\n\n@@ -24,6 +24,7 @@ package com.microsoft.identity.common.internal.util;\n \n import androidx.annotation.NonNull;\n \n+import java.util.Arrays;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Locale;\n"}}, {"oid": "6d16f14855291c43e43a4b0cf3ecab407f359ba3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/6d16f14855291c43e43a4b0cf3ecab407f359ba3", "message": "Dont manip string when parsing the locale", "committedDate": "2020-10-08T20:43:18Z", "type": "commit"}, {"oid": "e65bcf2ca599fd50d835c03d97d8f0545d23d3ee", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e65bcf2ca599fd50d835c03d97d8f0545d23d3ee", "message": "Remove static block initializer", "committedDate": "2020-10-08T20:49:23Z", "type": "commit"}, {"oid": "de47da9752e02ebf1c74d02f54f0044e841ba2ba", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/de47da9752e02ebf1c74d02f54f0044e841ba2ba", "message": "Update changelog", "committedDate": "2020-10-08T21:30:25Z", "type": "commit"}]}