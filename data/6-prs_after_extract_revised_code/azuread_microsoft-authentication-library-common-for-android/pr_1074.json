{"pr_number": 1074, "pr_title": "Kkoppart policy helper", "pr_createdAt": "2020-10-07T05:07:51Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074", "timeline": [{"oid": "68b69abbcd20711bd6744ea63aec05546f15112f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/68b69abbcd20711bd6744ea63aec05546f15112f", "message": "policy helper to enable and disable policy for a user", "committedDate": "2020-10-07T05:02:15Z", "type": "commit"}, {"oid": "fa8ba88ef94a976187feffb13c11fb93ece73f2c", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/fa8ba88ef94a976187feffb13c11fb93ece73f2c", "message": "policy helper to enable and disable policy to user", "committedDate": "2020-10-07T05:03:58Z", "type": "commit"}, {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "message": "Merge branch 'dev' into kkoppart-policy_helper", "committedDate": "2020-10-07T15:57:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNzgzMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501127833", "bodyText": "Class names must start with upper case", "author": "shahzaibj", "createdAt": "2020-10-07T15:58:15Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDI1Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184252", "bodyText": "Renamed to PolicyHelper", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNzgzMw=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNzk1NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501127955", "bodyText": "Needs javadoc", "author": "shahzaibj", "createdAt": "2020-10-07T15:58:23Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDM1Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184356", "bodyText": "added javadoc.", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:35:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNzk1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODA3NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128074", "bodyText": "needs javadoc", "author": "shahzaibj", "createdAt": "2020-10-07T15:58:32Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDQwMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184403", "bodyText": "added javadoc.", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:35:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODA3NA=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODE1MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128151", "bodyText": "needs javadoc", "author": "shahzaibj", "createdAt": "2020-10-07T15:58:39Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTYwMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501131603", "bodyText": "+1 javadoc all public methods", "author": "iambmelt", "createdAt": "2020-10-07T16:03:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODE1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDQzNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184434", "bodyText": "added javadoc.", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:35:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODE1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODM0OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128348", "bodyText": "add NonNull and final", "author": "shahzaibj", "createdAt": "2020-10-07T15:58:56Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDQ3Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184477", "bodyText": "added NonNull and final to upn and policy.", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODM0OA=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODQxNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128415", "bodyText": "add NonNull and final", "author": "shahzaibj", "createdAt": "2020-10-07T15:59:01Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDUwMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184501", "bodyText": "added NonNull and final to upn and policy.", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:35:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODQxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODU3NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128574", "bodyText": "methods should be separated by an empty line", "author": "shahzaibj", "createdAt": "2020-10-07T15:59:15Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDUyNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184525", "bodyText": "separated by a single line", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:35:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODU3NA=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODc3OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128778", "bodyText": "Needs license", "author": "shahzaibj", "createdAt": "2020-10-07T15:59:29Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDYwNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184607", "bodyText": "license is added.", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODc3OA=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyOTA4MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501129081", "bodyText": "final", "author": "shahzaibj", "createdAt": "2020-10-07T15:59:55Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDY4Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184682", "bodyText": "added final", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyOTA4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyOTEzMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501129130", "bodyText": "final", "author": "shahzaibj", "createdAt": "2020-10-07T15:59:58Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NTA0NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502185045", "bodyText": "added final", "author": "kkrishnareddy", "createdAt": "2020-10-09T04:38:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyOTEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTAzMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501131032", "bodyText": "Add logging", "author": "iambmelt", "createdAt": "2020-10-07T16:02:22Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTI0Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501131242", "bodyText": "Preferably, don't just crash. If we can recover from this, we should", "author": "iambmelt", "createdAt": "2020-10-07T16:02:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2MjQxNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504162417", "bodyText": "I think we do need to fail the test if this fails.....we can throw an AssertionError instead to just fail the test case.", "author": "shahzaibj", "createdAt": "2020-10-13T18:15:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwMDc3Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504400777", "bodyText": "Added logging", "author": "kkrishnareddy", "createdAt": "2020-10-14T04:54:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTAzMg=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTkxMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501131912", "bodyText": "Add logging / dont crash -- surface the error instead", "author": "iambmelt", "createdAt": "2020-10-07T16:03:34Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwMDgyMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504400822", "bodyText": "Added logging", "author": "kkrishnareddy", "createdAt": "2020-10-14T04:54:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTkxMg=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNTkyOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501135929", "bodyText": "Are you sure this result can never be null?\nAlthough this is kind of a trivial example, as a matter of good practice, split multiple method calls into multiple lines. It makes debugging stack traces substantially easier.\nSo rather than....\nreturn customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\ndo\nfinal String result  = successResponse.getResult();\n\nif (null != result) {\n    return result.toLowerCase().contains(expectedResult);\n}", "author": "iambmelt", "createdAt": "2020-10-07T16:09:01Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NjU2Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r503446563", "bodyText": "and if it is null, you can throw new AssertionError() -- could probably pass a message in there", "author": "shahzaibj", "createdAt": "2020-10-12T17:50:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNTkyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwMTA3OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504401078", "bodyText": "modified the code to handle null results.", "author": "kkrishnareddy", "createdAt": "2020-10-14T04:55:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNTkyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNjA0OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501136048", "bodyText": "Does this declaration need to span two lines?", "author": "iambmelt", "createdAt": "2020-10-07T16:09:15Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;", "originalCommit": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwMTE4Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504401186", "bodyText": "merged into a single line", "author": "kkrishnareddy", "createdAt": "2020-10-14T04:56:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNjA0OA=="}], "type": "inlineReview", "revised_code": {"commit": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\ndeleted file mode 100644\nindex 6f2582c65..000000000\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.microsoft.identity.internal.testutils.labutils;\n-\n-import com.microsoft.identity.internal.test.labapi.ApiException;\n-import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n-import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n-\n-public class policyHelper {\n-    public boolean enablePolicy(String upn, String policy)\n-    {\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n-            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-    public boolean disablePolicy(String upn, String policy){\n-        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n-        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n-        try{\n-            final CustomSuccessResponse customSuccessResponse;\n-            customSuccessResponse = disablePolicyApi.put(upn, policy);\n-            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n-                    .toLowerCase();\n-            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n-        } catch (ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-    }\n-}\n"}}, {"oid": "0128fa75f92ce258057e3bb0d15557f7b26401f6", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0128fa75f92ce258057e3bb0d15557f7b26401f6", "message": "resolving PR Comments", "committedDate": "2020-10-09T04:29:33Z", "type": "commit"}, {"oid": "a8511a604c0846edac41e141599217b0b8a969af", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a8511a604c0846edac41e141599217b0b8a969af", "message": "Merge branch 'kkoppart-policy_helper' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into kkoppart-policy_helper", "committedDate": "2020-10-09T04:30:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2MzEwMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504163101", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new RuntimeException(e.getMessage());\n          \n          \n            \n                        throw new AssertionError(e);", "author": "shahzaibj", "createdAt": "2020-10-13T18:16:12Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    /**\n+     * lets you enable CA/Special Policies for any Locked User.\n+     * Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n+     *\n+     * @param upn    Enter a valid Locked User UPN (optional)\n+     * @param policy Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO. (optional)\n+     * @return boolean value indicating policy enabled or not.\n+     */\n+    public boolean enablePolicy(@NonNull final String upn, @NonNull final String policy) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try {\n+            final CustomSuccessResponse customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (policy +\" Enabled for user : \" + upn).toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (final ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "originalCommit": "a8511a604c0846edac41e141599217b0b8a969af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "827eb4fd1fc0f485342fc564f328923fa8ece7ac", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\nindex 47da3e396..3ba5d2b7b 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n\n@@ -51,7 +51,7 @@ public class PolicyHelper {\n             final String expectedResult = (policy +\" Enabled for user : \" + upn).toLowerCase();\n             return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n         } catch (final ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n+            throw new AssertionError(e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2MzE5NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504163194", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new RuntimeException(e.getMessage());\n          \n          \n            \n                        throw new AssertionError(e);", "author": "shahzaibj", "createdAt": "2020-10-13T18:16:19Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    /**\n+     * lets you enable CA/Special Policies for any Locked User.\n+     * Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n+     *\n+     * @param upn    Enter a valid Locked User UPN (optional)\n+     * @param policy Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO. (optional)\n+     * @return boolean value indicating policy enabled or not.\n+     */\n+    public boolean enablePolicy(@NonNull final String upn, @NonNull final String policy) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try {\n+            final CustomSuccessResponse customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (policy +\" Enabled for user : \" + upn).toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (final ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * lets you disable CA/Special Policies for any Locked User.\n+     * Disable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n+     *\n+     * @param upn    Enter a valid Locked User UPN (optional)\n+     * @param policy Disable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO. (optional)\n+     * @return boolean value indicating policy is disabled or not for the upn.\n+     */\n+    public boolean disablePolicy(@NonNull final String upn, @NonNull final String policy) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try {\n+            final CustomSuccessResponse customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (policy + \" Disabled for user : \" + upn).toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (final ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "originalCommit": "a8511a604c0846edac41e141599217b0b8a969af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "827eb4fd1fc0f485342fc564f328923fa8ece7ac", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\nindex 47da3e396..3ba5d2b7b 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n\n@@ -51,7 +51,7 @@ public class PolicyHelper {\n             final String expectedResult = (policy +\" Enabled for user : \" + upn).toLowerCase();\n             return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n         } catch (final ApiException e) {\n-            throw new RuntimeException(e.getMessage());\n+            throw new AssertionError(e);\n         }\n     }\n \n"}}, {"oid": "827eb4fd1fc0f485342fc564f328923fa8ece7ac", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/827eb4fd1fc0f485342fc564f328923fa8ece7ac", "message": "Update testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n\nCo-authored-by: Shahzaib <37125644+shahzaibj@users.noreply.github.com>", "committedDate": "2020-10-13T18:17:30Z", "type": "commit"}, {"oid": "149dede6dadaf6b3a6b958f5c7247055cbda7ceb", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/149dede6dadaf6b3a6b958f5c7247055cbda7ceb", "message": "Update testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n\nCo-authored-by: Shahzaib <37125644+shahzaibj@users.noreply.github.com>", "committedDate": "2020-10-13T18:17:54Z", "type": "commit"}, {"oid": "9f170d58c4ca9e35b8e0d6a413d5e0536cfa5ae3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9f170d58c4ca9e35b8e0d6a413d5e0536cfa5ae3", "message": "adding logging to exceptions", "committedDate": "2020-10-14T04:43:24Z", "type": "commit"}, {"oid": "4325a2a7112edce41765086819350156539f8d78", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/4325a2a7112edce41765086819350156539f8d78", "message": "adding logging to exceptions", "committedDate": "2020-10-14T04:48:29Z", "type": "commit"}, {"oid": "8a9f54b6873f2bb70de1b681476f113a89d08264", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8a9f54b6873f2bb70de1b681476f113a89d08264", "message": "resolving PR comments", "committedDate": "2020-10-14T04:51:10Z", "type": "commit"}, {"oid": "9a46f7ec1f907acf25dda6b3675600d320f4da83", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9a46f7ec1f907acf25dda6b3675600d320f4da83", "message": "Merge branch 'dev' into kkoppart-policy_helper", "committedDate": "2020-10-26T02:17:39Z", "type": "commit"}, {"oid": "07121d8d3ecd927f6973579cf77d1149d8f209a1", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/07121d8d3ecd927f6973579cf77d1149d8f209a1", "message": "Merge branch 'dev' into kkoppart-policy_helper", "committedDate": "2020-11-17T01:51:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgzMzMyOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r524833329", "bodyText": "add empty line above", "author": "shahzaibj", "createdAt": "2020-11-17T01:51:29Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.common.internal.logging.Logger;\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import org.junit.Assert;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    private static final String TAG = PolicyHelper.class.getName();\n+    /**", "originalCommit": "07121d8d3ecd927f6973579cf77d1149d8f209a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3723978bf7ec0ee983f1ccf032d60b4b6038865", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\nindex a59ea2af2..d21a23042 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n\n@@ -40,7 +40,7 @@ public class PolicyHelper {\n \n     private static final String TAG = PolicyHelper.class.getName();\n     /**\n-     * lets you enable CA/Special Policies for any Locked User.\n+     * Enable CA/Special Policies for any Locked User.\n      * Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n      *\n      * @param upn    Enter a valid Locked User UPN (optional)\n"}}, {"oid": "998621dcb5f705b7c958fb27a0e5ca5067d74a6f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/998621dcb5f705b7c958fb27a0e5ca5067d74a6f", "message": "Merge branch 'dev' into kkoppart-policy_helper", "committedDate": "2020-11-17T22:28:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYxMDMyNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r525610324", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * lets you enable CA/Special Policies for any Locked User.\n          \n          \n            \n                 * Enable CA/Special Policies for any Locked User.", "author": "shahzaibj", "createdAt": "2020-11-18T00:14:59Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.common.internal.logging.Logger;\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import org.junit.Assert;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    private static final String TAG = PolicyHelper.class.getName();\n+    /**\n+     * lets you enable CA/Special Policies for any Locked User.", "originalCommit": "998621dcb5f705b7c958fb27a0e5ca5067d74a6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3723978bf7ec0ee983f1ccf032d60b4b6038865", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\nindex a59ea2af2..d21a23042 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n\n@@ -40,7 +40,7 @@ public class PolicyHelper {\n \n     private static final String TAG = PolicyHelper.class.getName();\n     /**\n-     * lets you enable CA/Special Policies for any Locked User.\n+     * Enable CA/Special Policies for any Locked User.\n      * Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n      *\n      * @param upn    Enter a valid Locked User UPN (optional)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYxMDUxMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r525610510", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * lets you disable CA/Special Policies for any Locked User.\n          \n          \n            \n                 * Disable CA/Special Policies for any Locked User.", "author": "shahzaibj", "createdAt": "2020-11-18T00:15:28Z", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.common.internal.logging.Logger;\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import org.junit.Assert;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    private static final String TAG = PolicyHelper.class.getName();\n+    /**\n+     * lets you enable CA/Special Policies for any Locked User.\n+     * Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n+     *\n+     * @param upn    Enter a valid Locked User UPN (optional)\n+     * @param policy Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO. (optional)\n+     * @return boolean value indicating policy enabled or not.\n+     */\n+    public boolean enablePolicy(@NonNull final String upn, @NonNull final String policy) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try {\n+            final CustomSuccessResponse customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (policy +\" Enabled for user : \" + upn).toLowerCase();\n+            final String result = customSuccessResponse.getResult();\n+            Assert.assertNotNull(result);\n+            return result.toLowerCase().contains(expectedResult);\n+        } catch (final ApiException e) {\n+            Logger.error(TAG,\"Bad Request : Enable Policy can be used only for Locked users.\",e);\n+            throw new AssertionError(e);\n+        }\n+    }\n+\n+    /**\n+     * lets you disable CA/Special Policies for any Locked User.", "originalCommit": "998621dcb5f705b7c958fb27a0e5ca5067d74a6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3723978bf7ec0ee983f1ccf032d60b4b6038865", "chunk": "diff --git a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\nindex a59ea2af2..d21a23042 100644\n--- a/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n+++ b/testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n\n@@ -40,7 +40,7 @@ public class PolicyHelper {\n \n     private static final String TAG = PolicyHelper.class.getName();\n     /**\n-     * lets you enable CA/Special Policies for any Locked User.\n+     * Enable CA/Special Policies for any Locked User.\n      * Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n      *\n      * @param upn    Enter a valid Locked User UPN (optional)\n"}}, {"oid": "b3f2860b314036a5dd4c6da81f476b5c0fd0c6bb", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b3f2860b314036a5dd4c6da81f476b5c0fd0c6bb", "message": "Merge branch 'dev' into kkoppart-policy_helper", "committedDate": "2020-11-18T00:16:20Z", "type": "commit"}, {"oid": "b3723978bf7ec0ee983f1ccf032d60b4b6038865", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b3723978bf7ec0ee983f1ccf032d60b4b6038865", "message": "Update testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n\nCo-authored-by: Shahzaib <37125644+shahzaibj@users.noreply.github.com>", "committedDate": "2020-11-18T12:51:25Z", "type": "commit"}, {"oid": "d197f33d0fd8f30702f49f3f7e2aacde753b3445", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d197f33d0fd8f30702f49f3f7e2aacde753b3445", "message": "Update testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java\n\nCo-authored-by: Shahzaib <37125644+shahzaibj@users.noreply.github.com>", "committedDate": "2020-11-18T12:51:34Z", "type": "commit"}, {"oid": "da77b5dfadf261bbe141468ada49a73ce07ab018", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/da77b5dfadf261bbe141468ada49a73ce07ab018", "message": "Merge branch 'dev' into kkoppart-policy_helper", "committedDate": "2020-11-18T20:09:13Z", "type": "commit"}, {"oid": "fa78972a3281a8f4a9c21d003351f6471b3cea35", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/fa78972a3281a8f4a9c21d003351f6471b3cea35", "message": "Merge branch 'dev' into kkoppart-policy_helper", "committedDate": "2020-11-20T04:29:02Z", "type": "commit"}]}