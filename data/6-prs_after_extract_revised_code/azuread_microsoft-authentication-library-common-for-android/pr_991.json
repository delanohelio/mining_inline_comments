{"pr_number": 991, "pr_title": "Handle full authority URL properly", "pr_createdAt": "2020-08-06T20:12:36Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991", "timeline": [{"oid": "bb127e6f596ab5fc0280727f6287a953e8a32e37", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/bb127e6f596ab5fc0280727f6287a953e8a32e37", "message": "Handle full authority URL properly", "committedDate": "2020-08-06T20:10:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466672258", "bodyText": "Looks like we are just setting the tenant id on the audience -- whatever audience was created; which may not be correct in the first place i.e. not having any audience in the config defaults to AllAccounts. I think we need to make sure the the audience on the Authority is of the correct type.", "author": "shahzaibj", "createdAt": "2020-08-06T20:37:41Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java", "diffHunk": "@@ -48,9 +51,14 @@ public Authority deserialize(JsonElement json, Type typeOfT, JsonDeserialization\n                             TAG + methodName,\n                             \"Type: AAD\"\n                     );\n-                    AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n-                    if (aadAuthority != null && aadAuthority.mAudience != null) {\n-                        aadAuthority.mAudience.setCloudUrl(aadAuthority.mAuthorityUrl);\n+                    final AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n+                    if (aadAuthority != null && aadAuthority.mAudience != null && aadAuthority.mAuthorityUrl != null) {\n+                        final Uri uri = Uri.parse(aadAuthority.mAuthorityUrl);\n+                        aadAuthority.mAudience.setCloudUrl(uri.getScheme() + \"://\" + uri.getHost());\n+                        // Try to extract tenant ID from the authority link.\n+                        if (!TextUtils.isEmpty(uri.getLastPathSegment())) {\n+                            aadAuthority.mAudience.setTenantId(uri.getLastPathSegment());\n+                        }", "originalCommit": "bb127e6f596ab5fc0280727f6287a953e8a32e37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3Mzc1OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466673758", "bodyText": "In this case, audience won't be provided.\ni.e.\n\"authorities\" : [\n    {\n      \"type\": \"AAD\",\n      \"authority_url\": \"https://login.microsoftonline.com/rapong.onmicrosoft.com\"\n    }\n  ]\n\nWe wouldn't be able to identify the audience type in the first place.", "author": "rpdome", "createdAt": "2020-08-06T20:40:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3NDQ5OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466674498", "bodyText": "(both tenant name and tenant id work interchangeably. Although setting a tenant name here in the tenantID field could be misleading. I could rename that field in audience to \"setTenant()\" if that makes more sense.)", "author": "rpdome", "createdAt": "2020-08-06T20:42:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3NTg4Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466675882", "bodyText": "We should be able to by splitting the URL in parts and checking the last segment and create the following mapping:\n\n/common - AllAccounts\n/organizations - AnyOrganizationalAccount\n/consumers - AnyPersonalAccount\n/tenantId (or tenantName) - AccountsInOneOrganization\n\nand then we can initialize the authority object with the correct audience", "author": "shahzaibj", "createdAt": "2020-08-06T20:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3Njg4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466676887", "bodyText": "ah ok. makes sense. will do.", "author": "rpdome", "createdAt": "2020-08-06T20:47:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA=="}], "type": "inlineReview", "revised_code": {"commit": "4b6344b1d4a9a33b98e831e8e457616476509c30", "chunk": "diff --git a/common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java b/common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java\nindex 500dab3e9..7ff6e5fea 100644\n--- a/common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java\n+++ b/common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java\n\n@@ -52,12 +56,32 @@ public class AuthorityDeserializer implements JsonDeserializer<Authority> {\n                             \"Type: AAD\"\n                     );\n                     final AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n-                    if (aadAuthority != null && aadAuthority.mAudience != null && aadAuthority.mAuthorityUrl != null) {\n+\n+                    // The developer might supply authority_url instead of audience.\n+                    // In that case, we'll try our best to map the audience here.\n+                    if (aadAuthority != null && aadAuthority.mAuthorityUrl != null) {\n                         final Uri uri = Uri.parse(aadAuthority.mAuthorityUrl);\n-                        aadAuthority.mAudience.setCloudUrl(uri.getScheme() + \"://\" + uri.getHost());\n-                        // Try to extract tenant ID from the authority link.\n-                        if (!TextUtils.isEmpty(uri.getLastPathSegment())) {\n-                            aadAuthority.mAudience.setTenantId(uri.getLastPathSegment());\n+                        final String cloudUrl = uri.getScheme() + \"://\" + uri.getHost();\n+                        final String tenant = uri.getLastPathSegment();\n+\n+                        if (!TextUtils.isEmpty(tenant)) {\n+                            switch (tenant) {\n+                                case AadAuthorityAudience.common:\n+                                    // Do nothing. This is the default value.\n+                                    break;\n+\n+                                case AadAuthorityAudience.organizations:\n+                                    aadAuthority.mAudience = new AnyOrganizationalAccount(cloudUrl);\n+                                    break;\n+\n+                                case AadAuthorityAudience.consumers:\n+                                    aadAuthority.mAudience = new AnyPersonalAccount(cloudUrl);\n+                                    break;\n+\n+                                default:\n+                                    aadAuthority.mAudience = new AccountsInOneOrganization(cloudUrl, uri.getLastPathSegment());\n+                                    break;\n+                            }\n                         }\n                     }\n                     return aadAuthority;\n"}}, {"oid": "4b6344b1d4a9a33b98e831e8e457616476509c30", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/4b6344b1d4a9a33b98e831e8e457616476509c30", "message": "Address comments", "committedDate": "2020-08-06T21:09:44Z", "type": "commit"}, {"oid": "2d6b4164123e7a1f3ccc6c18f60915b9cedc11b6", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2d6b4164123e7a1f3ccc6c18f60915b9cedc11b6", "message": "shorten code", "committedDate": "2020-08-06T21:13:35Z", "type": "commit"}, {"oid": "2f0c6e8c5722b584df7fcaf3e061c6f9e4af9e56", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2f0c6e8c5722b584df7fcaf3e061c6f9e4af9e56", "message": "Merge branch 'dev' into rapong/fixAuthority", "committedDate": "2020-08-07T16:02:39Z", "type": "commit"}]}