{"pr_number": 2862, "pr_title": "Implemented QuantityScrutinizer tests using Mocks", "pr_createdAt": "2020-07-02T16:35:54Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/2862", "timeline": [{"oid": "343831ccb21905f38bcf4533a920a3688a2b5e90", "url": "https://github.com/OpenRefine/OpenRefine/commit/343831ccb21905f38bcf4533a920a3688a2b5e90", "message": "Implemented QunatityScrutinizer tests using Mockito\n\nUpdated test cases and added AllowedUnitsConstraint class", "committedDate": "2020-07-02T14:52:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyMTg0NA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2862#discussion_r449221844", "bodyText": "Why did you need to change this value? Isn't this changing the meaning of the tests below?", "author": "wetneb", "createdAt": "2020-07-02T19:20:16Z", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java", "diffHunk": "@@ -24,10 +42,17 @@\n             new BigDecimal(\"1.545\"));\n     \n     private QuantityValue wrongUnitValue = Datamodel.makeQuantityValue(\n-            new BigDecimal(\"1.234\"), \"Q346721\");\n+            new BigDecimal(\"2\"), \"Q346721\");", "originalCommit": "c9ed61efdaf64adf66248f439debae5882b4eb94", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fea98d96af7766239a17aafb322fed61a4cc322", "chunk": "diff --git a/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java b/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java\nindex 05b5f5a1a..ca1634d83 100644\n--- a/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java\n+++ b/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java\n\n@@ -42,15 +45,16 @@ public class QuantityScrutinizerTest extends ValueScrutinizerTest{\n             new BigDecimal(\"1.545\"));\n     \n     private QuantityValue wrongUnitValue = Datamodel.makeQuantityValue(\n-            new BigDecimal(\"2\"), \"Q346721\");\n+            new BigDecimal(\"1.234\"), \"Q346721\");\n     \n     private QuantityValue goodUnitValue = Datamodel.makeQuantityValue(\n-            new BigDecimal(\"4\"), (ItemIdValue) allowedUnit);\n+            new BigDecimal(\"1.234\"), (ItemIdValue) allowedUnit);\n+\n \n     public static PropertyIdValue propertyIdValue = Datamodel.makeWikidataPropertyIdValue(\"P1083\");\n-    public static ItemIdValue noBoundsEntity = Datamodel.makeWikidataItemIdValue(\"Q51723761\");\n-    public static ItemIdValue integerValueEntity = Datamodel.makeWikidataItemIdValue(\"Q52848401\");\n-    public static ItemIdValue allowedUnitEntity = Datamodel.makeWikidataItemIdValue(\"Q21514353\");\n+    public static ItemIdValue noBoundsEntity = Datamodel.makeWikidataItemIdValue(NO_BOUNDS_CONSTRAINT_QID);\n+    public static ItemIdValue integerValueEntity = Datamodel.makeWikidataItemIdValue(INTEGER_VALUED_CONSTRAINT_QID);\n+    public static ItemIdValue allowedUnitEntity = Datamodel.makeWikidataItemIdValue(ALLOWED_UNITS_CONSTRAINT_QID);\n     public static PropertyIdValue itemParameterPID = Datamodel.makeWikidataPropertyIdValue(\"P2305\");\n     public static Value allowedUnit = Datamodel.makeWikidataItemIdValue(\"Q5\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyMjI0Ng==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2862#discussion_r449222246", "bodyText": "It would be better to reuse the constant declared in the scrutinizer, NO_BOUNDS_CONSTRAINT_QID (and same for all other tests).", "author": "wetneb", "createdAt": "2020-07-02T19:21:15Z", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java", "diffHunk": "@@ -36,67 +61,190 @@ public EditScrutinizer getScrutinizer() {\n     \n     @Test\n     public void testBoundsAllowed() {\n-        scrutinize(valueWithBounds);\n+        ItemIdValue idA = TestingData.existingId;\n+        Snak mainSnak = Datamodel.makeSomeValueSnak(propertyIdValue);\n+        Statement statement = new StatementImpl(\"P1083\", mainSnak, idA);\n+        ItemUpdate update = new ItemUpdateBuilder(idA).addStatement(statement).build();\n+\n+        ConstraintFetcher fetcher = mock(ConstraintFetcher.class);\n+        when(fetcher.getConstraintsByType(propertyIdValue, \"Q51723761\")).thenReturn(new ArrayList<>());", "originalCommit": "c9ed61efdaf64adf66248f439debae5882b4eb94", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fea98d96af7766239a17aafb322fed61a4cc322", "chunk": "diff --git a/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java b/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java\nindex 05b5f5a1a..ca1634d83 100644\n--- a/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java\n+++ b/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java\n\n@@ -62,12 +66,12 @@ public class QuantityScrutinizerTest extends ValueScrutinizerTest{\n     @Test\n     public void testBoundsAllowed() {\n         ItemIdValue idA = TestingData.existingId;\n-        Snak mainSnak = Datamodel.makeSomeValueSnak(propertyIdValue);\n+        Snak mainSnak = Datamodel.makeValueSnak(propertyIdValue, valueWithBounds);\n         Statement statement = new StatementImpl(\"P1083\", mainSnak, idA);\n         ItemUpdate update = new ItemUpdateBuilder(idA).addStatement(statement).build();\n \n         ConstraintFetcher fetcher = mock(ConstraintFetcher.class);\n-        when(fetcher.getConstraintsByType(propertyIdValue, \"Q51723761\")).thenReturn(new ArrayList<>());\n+        when(fetcher.getConstraintsByType(propertyIdValue, NO_BOUNDS_CONSTRAINT_QID)).thenReturn(new ArrayList<>());\n         setFetcher(fetcher);\n \n         scrutinize(update);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5MDQwNA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2862#discussion_r449390404", "bodyText": "This could be simply imported from the QuantityScrutinizer itself.", "author": "wetneb", "createdAt": "2020-07-03T05:59:59Z", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java", "diffHunk": "@@ -27,7 +45,18 @@\n             new BigDecimal(\"1.234\"), \"Q346721\");\n     \n     private QuantityValue goodUnitValue = Datamodel.makeQuantityValue(\n-            new BigDecimal(\"1.234\"), MockConstraintFetcher.allowedUnit.getIri());\n+            new BigDecimal(\"1.234\"), (ItemIdValue) allowedUnit);\n+\n+    public static String NO_BOUNDS_CONSTRAINT_QID = \"Q51723761\";\n+    public static String INTEGER_VALUED_CONSTRAINT_QID = \"Q52848401\";\n+    public static String ALLOWED_UNITS_CONSTRAINT_QID = \"Q21514353\";", "originalCommit": "93d3ffc12cd2f2ee85d64535d75a8e00941d70bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fea98d96af7766239a17aafb322fed61a4cc322", "chunk": "diff --git a/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java b/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java\nindex eb83944ed..ca1634d83 100644\n--- a/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java\n+++ b/extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/QuantityScrutinizerTest.java\n\n@@ -47,9 +50,6 @@ public class QuantityScrutinizerTest extends ValueScrutinizerTest{\n     private QuantityValue goodUnitValue = Datamodel.makeQuantityValue(\n             new BigDecimal(\"1.234\"), (ItemIdValue) allowedUnit);\n \n-    public static String NO_BOUNDS_CONSTRAINT_QID = \"Q51723761\";\n-    public static String INTEGER_VALUED_CONSTRAINT_QID = \"Q52848401\";\n-    public static String ALLOWED_UNITS_CONSTRAINT_QID = \"Q21514353\";\n \n     public static PropertyIdValue propertyIdValue = Datamodel.makeWikidataPropertyIdValue(\"P1083\");\n     public static ItemIdValue noBoundsEntity = Datamodel.makeWikidataItemIdValue(NO_BOUNDS_CONSTRAINT_QID);\n"}}, {"oid": "5fea98d96af7766239a17aafb322fed61a4cc322", "url": "https://github.com/OpenRefine/OpenRefine/commit/5fea98d96af7766239a17aafb322fed61a4cc322", "message": "Test cases updated", "committedDate": "2020-07-03T11:15:04Z", "type": "commit"}]}