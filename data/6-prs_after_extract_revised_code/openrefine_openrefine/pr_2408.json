{"pr_number": 2408, "pr_title": "Adds trim whitespace option to separator based files", "pr_createdAt": "2020-03-13T20:26:36Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/2408", "timeline": [{"oid": "3cd74e4858ecb955e27bf6b3c2e71a95a7797fe1", "url": "https://github.com/OpenRefine/OpenRefine/commit/3cd74e4858ecb955e27bf6b3c2e71a95a7797fe1", "message": "added trim ui to csv importer", "committedDate": "2020-03-12T10:43:50Z", "type": "commit"}, {"oid": "263431481859a050ecad7d9e8b3d1f73d3652267", "url": "https://github.com/OpenRefine/OpenRefine/commit/263431481859a050ecad7d9e8b3d1f73d3652267", "message": "added trim functionality", "committedDate": "2020-03-13T20:24:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU3MTM3Ng==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2408#discussion_r392571376", "bodyText": "If value is an instance of Cell, then you should not replace it by a String. This will cause runtime type errors.", "author": "wetneb", "createdAt": "2020-03-14T09:29:23Z", "path": "main/src/com/google/refine/importers/TabularImportingParserBase.java", "diffHunk": "@@ -161,6 +163,9 @@ static public void readTable(\n                             \n                             Object value = cells.get(c);\n                             if (value instanceof Cell) {\n+                                if(trimStrings) {\n+                                    value = ((Cell) value).value.toString().trim();", "originalCommit": "263431481859a050ecad7d9e8b3d1f73d3652267", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ceb956c197dc47b5e3bde8d7c032df41cdf0c5a6", "chunk": "diff --git a/main/src/com/google/refine/importers/TabularImportingParserBase.java b/main/src/com/google/refine/importers/TabularImportingParserBase.java\nindex 7257bb417..d9594f3a7 100644\n--- a/main/src/com/google/refine/importers/TabularImportingParserBase.java\n+++ b/main/src/com/google/refine/importers/TabularImportingParserBase.java\n\n@@ -163,9 +163,6 @@ abstract public class TabularImportingParserBase extends ImportingParserBase {\n                             \n                             Object value = cells.get(c);\n                             if (value instanceof Cell) {\n-                                if(trimStrings) {\n-                                    value = ((Cell) value).value.toString().trim();\n-                                }\n                                 row.setCell(column.getCellIndex(), (Cell) value);\n                                 rowHasData = true;\n                             } else if (ExpressionUtils.isNonBlankData(value)) {\n"}}, {"oid": "ceb956c197dc47b5e3bde8d7c032df41cdf0c5a6", "url": "https://github.com/OpenRefine/OpenRefine/commit/ceb956c197dc47b5e3bde8d7c032df41cdf0c5a6", "message": "trimStrings handler only for strings", "committedDate": "2020-03-14T20:11:44Z", "type": "commit"}, {"oid": "9eb6f5d1edf8479d34eb39dcd05b4ac9504d2ee0", "url": "https://github.com/OpenRefine/OpenRefine/commit/9eb6f5d1edf8479d34eb39dcd05b4ac9504d2ee0", "message": "added test for trimStrings option in csv/tsv files", "committedDate": "2020-03-14T20:17:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNzI2OA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2408#discussion_r392617268", "bodyText": "We could potentially set this to true instead - this would enable the option by default in the UI. The importer would still behave in the same way if using an importer configuration generated by a previous version, since you use false as default value in getBoolean in readTable.\nI don't have strong feelings about whether this should be enabled by default in the UI. It would perhaps make it more consistent with the other importers which already support trimming strings. And I would expect that workflows where preserving whitespace around strings are quite rare for TSV/CSV. So leaning towards enabling\u2026 @ostephens what do you think?", "author": "wetneb", "createdAt": "2020-03-14T20:33:45Z", "path": "main/src/com/google/refine/importers/SeparatorBasedImporter.java", "diffHunk": "@@ -76,6 +76,7 @@ public ObjectNode createParserUIInitializationData(ImportingJob job,\n         JSONUtilities.safePut(options, \"guessCellValueTypes\", false);\n         JSONUtilities.safePut(options, \"processQuotes\", true);\n         JSONUtilities.safePut(options, \"quoteCharacter\", String.valueOf(CSVParser.DEFAULT_QUOTE_CHARACTER));\n+        JSONUtilities.safePut(options, \"trimStrings\", false);", "originalCommit": "9eb6f5d1edf8479d34eb39dcd05b4ac9504d2ee0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNzc4NA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2408#discussion_r392617784", "bodyText": "Yes, that would be a better option, I think.", "author": "lisa761", "createdAt": "2020-03-14T20:42:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNzI2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyMjg4Nw==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2408#discussion_r392622887", "bodyText": "\ud83d\udc4d \"enabled\", it's a smart default.", "author": "thadguidry", "createdAt": "2020-03-14T22:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNzI2OA=="}], "type": "inlineReview", "revised_code": {"commit": "f441dc18a294e72376a711266b39a4ce506dc3b4", "chunk": "diff --git a/main/src/com/google/refine/importers/SeparatorBasedImporter.java b/main/src/com/google/refine/importers/SeparatorBasedImporter.java\nindex 491966552..51234c4f3 100644\n--- a/main/src/com/google/refine/importers/SeparatorBasedImporter.java\n+++ b/main/src/com/google/refine/importers/SeparatorBasedImporter.java\n\n@@ -76,7 +76,7 @@ public class SeparatorBasedImporter extends TabularImportingParserBase {\n         JSONUtilities.safePut(options, \"guessCellValueTypes\", false);\n         JSONUtilities.safePut(options, \"processQuotes\", true);\n         JSONUtilities.safePut(options, \"quoteCharacter\", String.valueOf(CSVParser.DEFAULT_QUOTE_CHARACTER));\n-        JSONUtilities.safePut(options, \"trimStrings\", false);\n+        JSONUtilities.safePut(options, \"trimStrings\", true);\n \n         return options;\n     }\n"}}, {"oid": "f441dc18a294e72376a711266b39a4ce506dc3b4", "url": "https://github.com/OpenRefine/OpenRefine/commit/f441dc18a294e72376a711266b39a4ce506dc3b4", "message": "made trim option enabled by default", "committedDate": "2020-03-15T04:51:22Z", "type": "commit"}]}