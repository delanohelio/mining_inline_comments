{"pr_number": 2488, "pr_title": "Provides more intuitive representation for arrays in GREL", "pr_createdAt": "2020-03-28T06:56:24Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/2488", "timeline": [{"oid": "09a6750220d088aab82db8b224c3628c02f7e94b", "url": "https://github.com/OpenRefine/OpenRefine/commit/09a6750220d088aab82db8b224c3628c02f7e94b", "message": "Provides more intuitive representation for arrays in GREL\n\nAdded test for same\ncloses #2040", "committedDate": "2020-03-31T17:01:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MTI2MQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2488#discussion_r401081261", "bodyText": "Shouldn't this also test an Array that is empty, i.e []?  Instead of a String that is empty, \"\"?\nAlso, I am wondering about multi-dimensional arrays which is kinda the point of deepToString... If the array contains other arrays as elements, the string representation contains their contents and so on.  https://www.geeksforgeeks.org/arrays-deeptostring-in-java-with-example/", "author": "thadguidry", "createdAt": "2020-03-31T17:17:02Z", "path": "main/tests/server/src/com/google/refine/util/StringUtilsTests.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.google.refine.util;\n+\n+import com.google.refine.RefineTest;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+import java.time.OffsetDateTime;\n+import com.google.refine.util.StringUtils;\n+\n+public class StringUtilsTests extends RefineTest {\n+\n+    @Test\n+    public void objectToString() {\n+        Object[] nums = {4, \"hello\", true, 0.01};\n+        OffsetDateTime time = OffsetDateTime.parse(\"2017-01-02T01:02:03Z\");\n+\n+        Assert.assertEquals(\"[4, hello, true, 0.01]\", StringUtils.toString(nums));\n+        Assert.assertEquals(\"\", StringUtils.toString(null));", "originalCommit": "09a6750220d088aab82db8b224c3628c02f7e94b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "055c520db3a7e7223bf090c27c1b5dd65468bcec", "chunk": "diff --git a/main/tests/server/src/com/google/refine/util/StringUtilsTests.java b/main/tests/server/src/com/google/refine/util/StringUtilsTests.java\nindex 3a05351bc..e9dae027e 100644\n--- a/main/tests/server/src/com/google/refine/util/StringUtilsTests.java\n+++ b/main/tests/server/src/com/google/refine/util/StringUtilsTests.java\n\n@@ -10,11 +10,16 @@ public class StringUtilsTests extends RefineTest {\n \n     @Test\n     public void objectToString() {\n-        Object[] nums = {4, \"hello\", true, 0.01};\n+        Object nullObject = null;\n+        Object[] emptyArray = {};\n+        Object[] objArray = {4, \"hello\", true, 0.01};\n+        Object[][] multiArray = {{\"OpenRefine\", 12}, {13, 4.6}, {\"data\", \"mining\"}};\n         OffsetDateTime time = OffsetDateTime.parse(\"2017-01-02T01:02:03Z\");\n \n-        Assert.assertEquals(\"[4, hello, true, 0.01]\", StringUtils.toString(nums));\n-        Assert.assertEquals(\"\", StringUtils.toString(null));\n+        Assert.assertEquals(\"\", StringUtils.toString(nullObject));\n+        Assert.assertEquals(\"[]\", StringUtils.toString(emptyArray));\n+        Assert.assertEquals(\"[4, hello, true, 0.01]\", StringUtils.toString(objArray));\n+        Assert.assertEquals(\"[[OpenRefine, 12], [13, 4.6], [data, mining]]\", StringUtils.toString(multiArray));\n         Assert.assertEquals(\"2017-01-02T01:02:03Z\", StringUtils.toString(time));\n     }\n }\n"}}, {"oid": "055c520db3a7e7223bf090c27c1b5dd65468bcec", "url": "https://github.com/OpenRefine/OpenRefine/commit/055c520db3a7e7223bf090c27c1b5dd65468bcec", "message": "Provides more intuitive representation for arrays in GREL\n\nAdded test for same\ncloses #2040", "committedDate": "2020-03-31T17:54:14Z", "type": "commit"}, {"oid": "055c520db3a7e7223bf090c27c1b5dd65468bcec", "url": "https://github.com/OpenRefine/OpenRefine/commit/055c520db3a7e7223bf090c27c1b5dd65468bcec", "message": "Provides more intuitive representation for arrays in GREL\n\nAdded test for same\ncloses #2040", "committedDate": "2020-03-31T17:54:14Z", "type": "forcePushed"}]}