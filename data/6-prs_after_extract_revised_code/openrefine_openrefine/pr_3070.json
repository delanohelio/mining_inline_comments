{"pr_number": 3070, "pr_title": "Changed List return type to ImmutableList in Wikidata schema package classes", "pr_createdAt": "2020-08-12T17:49:34Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/3070", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ2OTgwOQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/3070#discussion_r469469809", "bodyText": "Any chance of convincing your IDE to not reorder imports? It makes for a very noisy diff.", "author": "tfmorris", "createdAt": "2020-08-12T18:49:50Z", "path": "extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java", "diffHunk": "@@ -23,20 +23,20 @@\n  ******************************************************************************/\n package org.openrefine.wikidata.schema;\n \n-import java.util.Collections;\n-import java.util.List;\n-\n+import com.fasterxml.jackson.annotation.JsonCreator;", "originalCommit": "d6ccaffda3500343f073b3c11495eedaeb6aa511", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e4be067501625053845f7d0865082aab471008b", "chunk": "diff --git a/extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java b/extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java\nindex a6f93e466..f61b8a8c4 100644\n--- a/extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java\n+++ b/extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java\n\n@@ -23,11 +23,9 @@\n  ******************************************************************************/\n package org.openrefine.wikidata.schema;\n \n-import com.fasterxml.jackson.annotation.JsonCreator;\n-import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.annotation.JsonTypeInfo;\n-import com.google.common.collect.ImmutableList;\n+import java.util.Collections;\n+import java.util.List;\n+\n import org.jsoup.helper.Validate;\n import org.openrefine.wikidata.schema.exceptions.SkipSchemaExpressionException;\n import org.openrefine.wikidata.updates.ItemUpdate;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ3MjQ2NQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/3070#discussion_r469472465", "bodyText": "Collections.unmodifiableList() is probably a simpler (and higher performance?) idiom here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return nameDescs.stream().collect(ImmutableList.toImmutableList());\n          \n          \n            \n                    return Collections.unmodifiableList(nameDescs);", "author": "tfmorris", "createdAt": "2020-08-12T18:54:36Z", "path": "extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java", "diffHunk": "@@ -96,12 +96,12 @@ public ItemUpdate evaluate(ExpressionContext ctxt)\n \n     @JsonProperty(\"nameDescs\")\n     public List<WbNameDescExpr> getNameDescs() {\n-        return nameDescs;\n+        return nameDescs.stream().collect(ImmutableList.toImmutableList());", "originalCommit": "d6ccaffda3500343f073b3c11495eedaeb6aa511", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e4be067501625053845f7d0865082aab471008b", "chunk": "diff --git a/extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java b/extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java\nindex a6f93e466..f61b8a8c4 100644\n--- a/extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java\n+++ b/extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java\n\n@@ -96,12 +96,12 @@ public class WbItemDocumentExpr implements WbExpression<ItemUpdate> {\n \n     @JsonProperty(\"nameDescs\")\n     public List<WbNameDescExpr> getNameDescs() {\n-        return nameDescs.stream().collect(ImmutableList.toImmutableList());\n+        return Collections.unmodifiableList(nameDescs);\n     }\n \n     @JsonProperty(\"statementGroups\")\n     public List<WbStatementGroupExpr> getStatementGroups() {\n-        return statementGroups.stream().collect(ImmutableList.toImmutableList());\n+        return Collections.unmodifiableList(statementGroups);\n     }\n \n     @Override\n"}}, {"oid": "5e4be067501625053845f7d0865082aab471008b", "url": "https://github.com/OpenRefine/OpenRefine/commit/5e4be067501625053845f7d0865082aab471008b", "message": "replaced ImmutableList to unmodifiableList", "committedDate": "2020-08-13T05:50:22Z", "type": "commit"}, {"oid": "a70f164053b0cd5e046e5685da6f2b911a15be8b", "url": "https://github.com/OpenRefine/OpenRefine/commit/a70f164053b0cd5e046e5685da6f2b911a15be8b", "message": "added test cases to check unmodifiable Lists", "committedDate": "2020-08-13T06:55:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0MTIwOA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/3070#discussion_r469741208", "bodyText": "This way of testing immutability might be a bit brittle - the tests could fail if we use other implementations of unmodifiable lists which have a different name (typically, the immutable variant you first used). Perhaps a simpler way to test that would be to try to modify the list and check that it throws an exception?\nFor instance\n@Test(expectedExceptions = UnsupportedOperationException.class)\npublic void testUnmodifiableList() {\n        expr.getSnaks().clear();\n}", "author": "wetneb", "createdAt": "2020-08-13T07:07:54Z", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbReferenceExprTest.java", "diffHunk": "@@ -77,4 +79,10 @@ public void testSerialize()\n             throws JsonProcessingException {\n         JacksonSerializationTest.canonicalSerialization(WbReferenceExpr.class, expr, jsonRepresentation);\n     }\n+\n+    @Test\n+    public void testUnmodifiableList() {\n+        List<WbSnakExpr> snakExprs = expr.getSnaks();\n+        Assert.assertTrue(snakExprs.getClass().getName().contains(\"Unmodifiable\"));", "originalCommit": "a70f164053b0cd5e046e5685da6f2b911a15be8b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "465840e932cb6f8f96a52480cd3d47a092321d79", "chunk": "diff --git a/extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbReferenceExprTest.java b/extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbReferenceExprTest.java\nindex 05389b2fd..d04e3ae5a 100644\n--- a/extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbReferenceExprTest.java\n+++ b/extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbReferenceExprTest.java\n\n@@ -80,9 +80,8 @@ public class WbReferenceExprTest extends WbExpressionTest<Reference> {\n         JacksonSerializationTest.canonicalSerialization(WbReferenceExpr.class, expr, jsonRepresentation);\n     }\n \n-    @Test\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n     public void testUnmodifiableList() {\n-        List<WbSnakExpr> snakExprs = expr.getSnaks();\n-        Assert.assertTrue(snakExprs.getClass().getName().contains(\"Unmodifiable\"));\n+        expr.getSnaks().clear();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NDI5Mw==", "url": "https://github.com/OpenRefine/OpenRefine/pull/3070#discussion_r469754293", "bodyText": "This will only test if expr.getNameDescs() is immutable, since that will already throw an exception. The second line will not be executed if the first line throws an exception. So you need to split that into two tests.", "author": "wetneb", "createdAt": "2020-08-13T07:34:46Z", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbItemDocumentExprTest.java", "diffHunk": "@@ -92,11 +92,9 @@ public void testSerialize() {\n         JacksonSerializationTest.canonicalSerialization(WbItemDocumentExpr.class, expr, jsonRepresentation);\n     }\n \n-    @Test\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n     public void testUnmodifiableList() {\n-        List<WbNameDescExpr> nameDescExprs = expr.getNameDescs();\n-        Assert.assertTrue(nameDescExprs.getClass().getName().contains(\"Unmodifiable\"));\n-        List<WbStatementGroupExpr> statementGroupExprs = expr.getStatementGroups();\n-        Assert.assertTrue(statementGroupExprs.getClass().getName().contains(\"Unmodifiable\"));\n+        expr.getNameDescs().clear();\n+        expr.getStatementGroups().clear();", "originalCommit": "733443fb1a7d74089d7f38044d3c4c809b6426a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "465840e932cb6f8f96a52480cd3d47a092321d79", "chunk": "diff --git a/extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbItemDocumentExprTest.java b/extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbItemDocumentExprTest.java\nindex b2ba2886b..2b5293a24 100644\n--- a/extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbItemDocumentExprTest.java\n+++ b/extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbItemDocumentExprTest.java\n\n@@ -93,8 +93,12 @@ public class WbItemDocumentExprTest extends WbExpressionTest<ItemUpdate> {\n     }\n \n     @Test(expectedExceptions = UnsupportedOperationException.class)\n-    public void testUnmodifiableList() {\n+    public void testUnmodifiableNameDescsList() {\n         expr.getNameDescs().clear();\n+    }\n+\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n+    public void testUnmodifiableStatementGroupsList() {\n         expr.getStatementGroups().clear();\n     }\n }\n"}}, {"oid": "465840e932cb6f8f96a52480cd3d47a092321d79", "url": "https://github.com/OpenRefine/OpenRefine/commit/465840e932cb6f8f96a52480cd3d47a092321d79", "message": "improved test cases", "committedDate": "2020-08-13T07:44:02Z", "type": "commit"}]}