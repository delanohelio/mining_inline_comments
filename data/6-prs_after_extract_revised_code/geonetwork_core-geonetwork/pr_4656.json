{"pr_number": 4656, "pr_title": "Bot session exclusion / Move hard coded list to config.", "pr_createdAt": "2020-04-30T08:52:13Z", "pr_url": "https://github.com/geonetwork/core-geonetwork/pull/4656", "timeline": [{"oid": "6f066ad4ff8d9a84853e6e8deb13a5be89a7a362", "url": "https://github.com/geonetwork/core-geonetwork/commit/6f066ad4ff8d9a84853e6e8deb13a5be89a7a362", "message": "Bot session exclusion / Move hardcoded list to config.", "committedDate": "2020-04-30T08:50:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE2MTM5Mg==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4656#discussion_r418161392", "bodyText": "Invalid syntax - } in the wrong place.\n@value(\"${bot.regexpfilter:.(bot|crawler|baiduspider|80legs|ia_archiver|voyager|yahoo! slurp|mediapartners-google).}\")", "author": "ianwallen", "createdAt": "2020-04-30T17:09:47Z", "path": "services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java", "diffHunk": "@@ -42,24 +43,18 @@\n  * crawlers.\n  */\n public class AllRequestsInterceptor extends HandlerInterceptorAdapter {\n+\n     /**\n      * List of bots to avoid.\n      */\n-    public static final String BOT_REGEXP = \".*(bot|crawler|baiduspider|80legs|ia_archiver|\"\n-        + \"voyager|yahoo! slurp|mediapartners-google).*\";\n+    @Value(\"${bot.regexpfilter}:.*(bot|crawler|baiduspider|80legs|ia_archiver|voyager|yahoo! slurp|mediapartners-google).*\")", "originalCommit": "6f066ad4ff8d9a84853e6e8deb13a5be89a7a362", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "afb6c1d422b3379ca960fef5ca81b5f346cfc71f", "chunk": "diff --git a/services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java b/services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java\nindex 7d6c2dfcf0..800863124a 100644\n--- a/services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java\n+++ b/services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java\n\n@@ -47,7 +47,7 @@ public class AllRequestsInterceptor extends HandlerInterceptorAdapter {\n     /**\n      * List of bots to avoid.\n      */\n-    @Value(\"${bot.regexpfilter}:.*(bot|crawler|baiduspider|80legs|ia_archiver|voyager|yahoo! slurp|mediapartners-google).*\")\n+    @Value(\"${bot.regexpFilter}:.*(bot|crawler|baiduspider|80legs|ia_archiver|voyager|yahoo! slurp|mediapartners-google).*\")\n     public String botRegexpFilter = \"\";\n \n     private Pattern regex = Pattern.compile(botRegexpFilter, Pattern.CASE_INSENSITIVE);\n"}}, {"oid": "afb6c1d422b3379ca960fef5ca81b5f346cfc71f", "url": "https://github.com/geonetwork/core-geonetwork/commit/afb6c1d422b3379ca960fef5ca81b5f346cfc71f", "message": "Bot session exclusion / Move hardcoded list to config. Fix case.", "committedDate": "2020-05-01T08:19:04Z", "type": "commit"}, {"oid": "18443136dcb153f1e36c7b789b5781de6b64368d", "url": "https://github.com/geonetwork/core-geonetwork/commit/18443136dcb153f1e36c7b789b5781de6b64368d", "message": "Bot session exclusion / Move hardcoded list to config. Fix invalid syntax.", "committedDate": "2020-05-01T08:24:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMzc1Nw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4656#discussion_r418613757", "bodyText": "Are there any cases where this actually works?\n@value are only parse after the class has been initialized so the pattern will always be based on the initial value of botRegexpFilter which is \"\"\nI believe this should be done in a postconstruct", "author": "ianwallen", "createdAt": "2020-05-01T16:15:41Z", "path": "services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java", "diffHunk": "@@ -23,49 +23,42 @@\n \n package org.fao.geonet.api;\n \n+import jeeves.constants.Jeeves;\n+import jeeves.server.UserSession;\n import org.apache.commons.lang.StringUtils;\n import org.fao.geonet.utils.Log;\n+import org.springframework.beans.factory.annotation.Value;\n import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n \n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n-\n-import jeeves.constants.Jeeves;\n-import jeeves.server.UserSession;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n /**\n- * In charge of creating a new {@link UserSession} if not existing. Avoid to create any sessions for\n- * crawlers.\n+ * In charge of creating a new {@link UserSession} if not existing.\n+ * Avoid to create any sessions for crawlers.\n  */\n public class AllRequestsInterceptor extends HandlerInterceptorAdapter {\n+\n     /**\n      * List of bots to avoid.\n      */\n-    public static final String BOT_REGEXP = \".*(bot|crawler|baiduspider|80legs|ia_archiver|\"\n-        + \"voyager|yahoo! slurp|mediapartners-google).*\";\n+    @Value(\"${bot.regexpFilter:.*(bot|crawler|baiduspider|80legs|ia_archiver|voyager|yahoo! slurp|mediapartners-google).*}\")\n+    public String botRegexpFilter = \"\";\n \n-    private static final Pattern regex = Pattern.compile(BOT_REGEXP, Pattern.CASE_INSENSITIVE);\n+    private Pattern regex = Pattern.compile(botRegexpFilter, Pattern.CASE_INSENSITIVE);", "originalCommit": "18443136dcb153f1e36c7b789b5781de6b64368d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bd6e5069011c3b417d262b559ad7b65601eca31", "chunk": "diff --git a/services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java b/services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java\nindex 4bf54b14f7..a46da50fcf 100644\n--- a/services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java\n+++ b/services/src/main/java/org/fao/geonet/api/AllRequestsInterceptor.java\n\n@@ -30,6 +30,7 @@ import org.fao.geonet.utils.Log;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n \n+import javax.annotation.PostConstruct;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n"}}, {"oid": "6bd6e5069011c3b417d262b559ad7b65601eca31", "url": "https://github.com/geonetwork/core-geonetwork/commit/6bd6e5069011c3b417d262b559ad7b65601eca31", "message": "Update maven bot.regexpFilter to support non existing value\nAlso fixed some postconstruct bugs.", "committedDate": "2020-05-04T11:29:43Z", "type": "commit"}, {"oid": "7469d76924ac2edacd647eb42b583d66e7e361ab", "url": "https://github.com/geonetwork/core-geonetwork/commit/7469d76924ac2edacd647eb42b583d66e7e361ab", "message": "Formatting and add Linguee and Semrush bots in defaults.", "committedDate": "2020-05-04T11:38:32Z", "type": "commit"}, {"oid": "66320bdde5c2243f09717462ba1cf3124e2feefb", "url": "https://github.com/geonetwork/core-geonetwork/commit/66320bdde5c2243f09717462ba1cf3124e2feefb", "message": "Merge branch 'master' into config-for-bot-session-exclusion", "committedDate": "2020-05-25T11:58:44Z", "type": "commit"}]}