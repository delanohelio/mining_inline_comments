{"pr_number": 5219, "pr_title": "Fix bug related to canceling working copy removes approved resource (#5214)", "pr_createdAt": "2020-11-26T13:55:37Z", "pr_url": "https://github.com/geonetwork/core-geonetwork/pull/5219", "timeline": [{"oid": "5fc0890eebec0f373b98932e436bab18884993ff", "url": "https://github.com/geonetwork/core-geonetwork/commit/5fc0890eebec0f373b98932e436bab18884993ff", "message": "Fix bug related to canceling working copy removes approved resource (#5214)\nstore.delResources was not passing the correct approved flag.\nAlso fixed issue related to creating a working copy. It was not copying the resources correctly to the new metadata record. Wrong approved flag was being passed.", "committedDate": "2020-11-26T13:53:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMTMyMQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/5219#discussion_r532401321", "bodyText": "I would add some additional documentation explaining the usage of these parameters.\nSeem oldApproved is always call with the value true, are there any cases where can be relevant to use the value false, if not maybe it can be removed and use only newApproved.", "author": "josegar74", "createdAt": "2020-11-30T07:53:35Z", "path": "core/src/main/java/org/fao/geonet/api/records/attachments/StoreUtils.java", "diffHunk": "@@ -40,18 +40,20 @@\n      * @param context\n      * @param oldMetadataId               The source metadata ID\n      * @param newMetadataId               The destination metadata ID\n+     * @param oldApproved                 Old approved flag to use for the source.\n+     * @param newApproved                 New approved flag to use on the destination.", "originalCommit": "5fc0890eebec0f373b98932e436bab18884993ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0MDgyNA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/5219#discussion_r532540824", "bodyText": "In the existing code I don't believe there are cases for old approved being false.\nThe only possible case I can think of at the moment is if we were to add logic for duplicating a working copy (i.e a user may want to make a new metadata copy of their working copy before adding more changes.   In that case I believe the old approved would be false and the new approved would be true. But then the UUID would also need to change on the destination. I'm not sure if that case will ever exist?\nI will remove the oldApproved and update the documentation as you suggested.", "author": "ianwallen", "createdAt": "2020-11-30T11:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMTMyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "003a632516efb2c1b40ff0a81fc9cc4b2d039592", "chunk": "diff --git a/core/src/main/java/org/fao/geonet/api/records/attachments/StoreUtils.java b/core/src/main/java/org/fao/geonet/api/records/attachments/StoreUtils.java\nindex 356962b9e1..93bfd3a7b1 100644\n--- a/core/src/main/java/org/fao/geonet/api/records/attachments/StoreUtils.java\n+++ b/core/src/main/java/org/fao/geonet/api/records/attachments/StoreUtils.java\n\n@@ -40,19 +40,19 @@ public abstract class StoreUtils {\n      * @param context\n      * @param oldMetadataId               The source metadata ID\n      * @param newMetadataId               The destination metadata ID\n-     * @param oldApproved                 Old approved flag to use for the source.\n      * @param newApproved                 New approved flag to use on the destination.\n+     *                                    Used when creating a working copy where the destination will have the approved flag to false.\n      * @throws Exception\n      */\n-    public static void copyDataDir(ServiceContext context, int oldMetadataId, int newMetadataId, boolean oldApproved, boolean newApproved) throws Exception {\n+    public static void copyDataDir(ServiceContext context, int oldMetadataId, int newMetadataId, boolean newApproved) throws Exception {\n         final Store store = context.getBean(\"resourceStore\", Store.class);\n         final IMetadataUtils metadataUtils = context.getBean(IMetadataUtils.class);\n         final String oldUuid = metadataUtils.getMetadataUuid(String.valueOf(oldMetadataId));\n         final String newUuid = metadataUtils.getMetadataUuid(String.valueOf(newMetadataId));\n         for (MetadataResourceVisibility visibility: MetadataResourceVisibility.values()) {\n-            final List<MetadataResource> resources = store.getResources(context, oldUuid, visibility, null, oldApproved);\n+            final List<MetadataResource> resources = store.getResources(context, oldUuid, visibility, null, true);\n             for (MetadataResource resource: resources) {\n-                try (Store.ResourceHolder holder = store.getResource(context, oldUuid, visibility, resource.getFilename(), oldApproved)) {\n+                try (Store.ResourceHolder holder = store.getResource(context, oldUuid, visibility, resource.getFilename(), true)) {\n                     store.putResource(context, newUuid, holder.getPath(), visibility, newApproved);\n                 }\n             }\n"}}, {"oid": "003a632516efb2c1b40ff0a81fc9cc4b2d039592", "url": "https://github.com/geonetwork/core-geonetwork/commit/003a632516efb2c1b40ff0a81fc9cc4b2d039592", "message": "Removed oldApproved as it is always true.\nUpdated javadocs for newApproved", "committedDate": "2020-11-30T11:55:34Z", "type": "commit"}]}