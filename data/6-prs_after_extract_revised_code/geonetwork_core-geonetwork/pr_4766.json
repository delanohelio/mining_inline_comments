{"pr_number": 4766, "pr_title": "add multilingual titles to thesauri", "pr_createdAt": "2020-06-16T03:50:30Z", "pr_url": "https://github.com/geonetwork/core-geonetwork/pull/4766", "timeline": [{"oid": "d2a9058b4794981d586e64dccd2bd5b4fd229cf5", "url": "https://github.com/geonetwork/core-geonetwork/commit/d2a9058b4794981d586e64dccd2bd5b4fd229cf5", "message": "add multilingual titles to thesauri", "committedDate": "2020-06-16T03:44:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxNjk2MQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r440616961", "bodyText": "Are both required? Can't be send with the iso code used by other thesaurus services and use in the UI the services to convert the codes?", "author": "josegar74", "createdAt": "2020-06-16T06:36:35Z", "path": "core/src/main/java/org/fao/geonet/kernel/Thesaurus.java", "diffHunk": "@@ -693,6 +693,47 @@ public void addTitleElement(String thesaurusTitle) throws IOException, AccessDen\n         repository.addGraph(myGraph);\n     }\n \n+    //    <rdf:RDF>\n+    //    <skos:ConceptScheme rdf:about=\"http://www.thesaurus.gc.ca/#CoreSubjectThesaurus\">\n+    //          <dc:title>Main GN Title</dc:title>\n+    //          <dc:title xml:lang=\"en\">English Version (en)</dc:title>\n+    //          <dc:title xml:lang=\"fr\">French Version (fr)</dc:title>\n+    //          <dc:description></dc:description>\n+    //     </skos:ConceptScheme>\n+    //\n+    // This will setup;\n+    //  {\n+    //      \"en\": \"English Version (en)\",\n+    //      \"fr\": \"French Version (fr)\"\n+    //      \"eng\": \"English Version (en)\",\n+    //      \"fre\": \"French Version (fr)\"\n+    //  }\n+    private void retrieveMultiLingualTitles(Element thesaurusEl) {\n+        List<Namespace> theNSs = new ArrayList<Namespace>();\n+        theNSs.add(Namespace.getNamespace(\"rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"));\n+        theNSs.add(Namespace.getNamespace(\"skos\", \"http://www.w3.org/2004/02/skos/core#\"));\n+        theNSs.add(Namespace.getNamespace(\"dc\", \"http://purl.org/dc/elements/1.1/\"));\n+        theNSs.add(Namespace.getNamespace(\"dcterms\", \"http://purl.org/dc/terms/\"));\n+\n+        Namespace xmlNS = Namespace.getNamespace(\"xml\",\"http://www.w3.org/XML/1998/namespace\");\n+\n+        try {\n+            List<Element> multiLingualTitles = (List<Element>) Xml.selectNodes(thesaurusEl,\n+                \"skos:ConceptScheme/dc:title[@xml:lang]|skos:ConceptScheme/dcterms:title[@xml:lang]\", theNSs);\n+            multilingualTitles.clear();\n+            for (Element el: multiLingualTitles) {\n+                    //use both forms of the lang name", "originalCommit": "d2a9058b4794981d586e64dccd2bd5b4fd229cf5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5MzQ1OQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r440993459", "bodyText": "I put this in for some consistency - dealing with any form of language codes can be difficult (i.e. fr/fre/fra).  This makes things easier down the line.", "author": "davidblasby", "createdAt": "2020-06-16T16:41:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxNjk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyNjczOA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r441026738", "bodyText": "I added a bit of code so it wouldn't overwrite explicitly set languages using this 2/3 letter conversion.", "author": "davidblasby", "createdAt": "2020-06-16T17:37:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxNjk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzMjA4NA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r442132084", "bodyText": "Would it not be better to create 2 functions? - one to get 2 char lang code and values like the following\n    {\n       \"en\": \"English Version (en)\",\n       \"fr\": \"French Version (fr)\"\n    }\n\n\nand one to get 3 char lang codes and values like the following\n   {\n      \"eng\": \"English Version (en)\",\n      \"fre\": \"French Version (fr)\"\n   }\n\n\nWith 2 function, if in the future you want to know where 2 char codes are used vs 3 char code it will be easier to identify usage. This can probably be done by making the main function private and creating 2 public functions that could just subset the existing results.", "author": "ianwallen", "createdAt": "2020-06-18T10:36:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxNjk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI5NjYyNw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r442296627", "bodyText": "I can just put in the values that were explicitly specified.  However, this is going to make the XSLT code much more difficult.", "author": "davidblasby", "createdAt": "2020-06-18T15:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxNjk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzNjQxNg==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r442536416", "bodyText": "Ok, I pushed a commit to handle this.  There's will now only be \"en\" and \"fr\" in the Thesaurus object", "author": "davidblasby", "createdAt": "2020-06-18T22:30:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxNjk2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "339c42012b6e884d49462e92e19ca934d6ab854d", "chunk": "diff --git a/core/src/main/java/org/fao/geonet/kernel/Thesaurus.java b/core/src/main/java/org/fao/geonet/kernel/Thesaurus.java\nindex e95f44f7cf..df80a72740 100644\n--- a/core/src/main/java/org/fao/geonet/kernel/Thesaurus.java\n+++ b/core/src/main/java/org/fao/geonet/kernel/Thesaurus.java\n\n@@ -727,7 +727,9 @@ public class Thesaurus {\n                      String lang2 = isoLanguageMapper.iso639_1_to_iso639_2(el.getAttribute(\"lang\", xmlNS).getValue());\n                      String title = el.getTextTrim();\n                      multilingualTitles.put(lang,title);\n-                     multilingualTitles.put(lang2,title);\n+                     if (!multilingualTitles.containsKey(lang2)) { // don't overwrite if its already explicitly given\n+                         multilingualTitles.put(lang2, title);\n+                     }\n             }\n         } catch (Exception e) {\n             Log.warning(Geonet.THESAURUS,\"error extracting multilingual titles from thesaurus\",e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxODA0Ng==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r440618046", "bodyText": "Surround code with curly braces", "author": "josegar74", "createdAt": "2020-06-16T06:39:17Z", "path": "services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java", "diffHunk": "@@ -416,31 +406,31 @@ public Element getKeywordById(\n             KeywordsSearcher searcher = new KeywordsSearcher(context, thesaurusManager);\n \n             KeywordBean kb;\n-            if (!uri.contains(SEPARATOR)) {\n-                kb = searcher.searchById(uri, sThesaurusName, langs);\n-                if (kb == null) {\n-                    descKeys = new Element(\"descKeys\");\n-                } else {\n-                    descKeys = KeywordsSearcher.toRawElement(new Element(\"descKeys\"), kb);\n-                }\n-            } else {\n-                String[] url = uri.split(SEPARATOR);\n-                List<KeywordBean> kbList = new ArrayList<>();\n-                for (String currentUri : url) {\n+            String[] url;\n+            if (!uri.contains(SEPARATOR))\n+                url = new String[] {uri};\n+            else\n+                url = uri.split(SEPARATOR);\n+            List<KeywordBean> kbList = new ArrayList<>();\n+            for (String currentUri : url) {\n+                kb = searcher.searchById(currentUri, sThesaurusName, iso3langCodes);\n+                if (kb == null)\n                     kb = searcher.searchById(currentUri, sThesaurusName, langs);\n-                    if (kb == null)\n-                        kb = searcher.searchById(fixUri(currentUri), sThesaurusName, langs);\n-                    if (kb != null) {\n-                        kbList.add(kb);\n-                    }\n-                }\n-                descKeys = new Element(\"descKeys\");\n-                for (KeywordBean keywordBean : kbList) {\n-                    KeywordsSearcher.toRawElement(descKeys, keywordBean);\n+                if (kb == null)", "originalCommit": "d2a9058b4794981d586e64dccd2bd5b4fd229cf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e6c56bfbb06e5944439f1fe0e066a0b813c475d", "chunk": "diff --git a/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java b/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\nindex e594be1995..87e53f6d9f 100644\n--- a/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\n+++ b/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\n\n@@ -407,19 +407,24 @@ public class KeywordsApi {\n \n             KeywordBean kb;\n             String[] url;\n-            if (!uri.contains(SEPARATOR))\n-                url = new String[] {uri};\n-            else\n+            if (!uri.contains(SEPARATOR)) {\n+                url = new String[]{uri};\n+            }\n+            else {\n                 url = uri.split(SEPARATOR);\n+            }\n             List<KeywordBean> kbList = new ArrayList<>();\n             for (String currentUri : url) {\n                 kb = searcher.searchById(currentUri, sThesaurusName, iso3langCodes);\n-                if (kb == null)\n+                if (kb == null) {\n                     kb = searcher.searchById(currentUri, sThesaurusName, langs);\n-                if (kb == null)\n-                    kb = searcher.searchById(fixUri(currentUri), sThesaurusName, iso3langCodes);\n-                if (kb == null)\n-                    kb = searcher.searchById(fixUri(currentUri), sThesaurusName, langs);\n+                }\n+                if (kb == null) {\n+                    kb = searcher.searchById(ApiUtils.fixURIFragment(currentUri), sThesaurusName, iso3langCodes);\n+                }\n+                if (kb == null) {\n+                    kb = searcher.searchById(ApiUtils.fixURIFragment(currentUri), sThesaurusName, langs);\n+                }\n                 if (kb != null) {\n                     kbList.add(kb);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxODExNw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r440618117", "bodyText": "Surround code with curly braces", "author": "josegar74", "createdAt": "2020-06-16T06:39:28Z", "path": "services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java", "diffHunk": "@@ -416,31 +406,31 @@ public Element getKeywordById(\n             KeywordsSearcher searcher = new KeywordsSearcher(context, thesaurusManager);\n \n             KeywordBean kb;\n-            if (!uri.contains(SEPARATOR)) {\n-                kb = searcher.searchById(uri, sThesaurusName, langs);\n-                if (kb == null) {\n-                    descKeys = new Element(\"descKeys\");\n-                } else {\n-                    descKeys = KeywordsSearcher.toRawElement(new Element(\"descKeys\"), kb);\n-                }\n-            } else {\n-                String[] url = uri.split(SEPARATOR);\n-                List<KeywordBean> kbList = new ArrayList<>();\n-                for (String currentUri : url) {\n+            String[] url;\n+            if (!uri.contains(SEPARATOR))\n+                url = new String[] {uri};\n+            else\n+                url = uri.split(SEPARATOR);\n+            List<KeywordBean> kbList = new ArrayList<>();\n+            for (String currentUri : url) {\n+                kb = searcher.searchById(currentUri, sThesaurusName, iso3langCodes);\n+                if (kb == null)\n                     kb = searcher.searchById(currentUri, sThesaurusName, langs);\n-                    if (kb == null)\n-                        kb = searcher.searchById(fixUri(currentUri), sThesaurusName, langs);\n-                    if (kb != null) {\n-                        kbList.add(kb);\n-                    }\n-                }\n-                descKeys = new Element(\"descKeys\");\n-                for (KeywordBean keywordBean : kbList) {\n-                    KeywordsSearcher.toRawElement(descKeys, keywordBean);\n+                if (kb == null)\n+                    kb = searcher.searchById(fixUri(currentUri), sThesaurusName, iso3langCodes);\n+                if (kb == null)", "originalCommit": "d2a9058b4794981d586e64dccd2bd5b4fd229cf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e6c56bfbb06e5944439f1fe0e066a0b813c475d", "chunk": "diff --git a/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java b/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\nindex e594be1995..87e53f6d9f 100644\n--- a/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\n+++ b/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\n\n@@ -407,19 +407,24 @@ public class KeywordsApi {\n \n             KeywordBean kb;\n             String[] url;\n-            if (!uri.contains(SEPARATOR))\n-                url = new String[] {uri};\n-            else\n+            if (!uri.contains(SEPARATOR)) {\n+                url = new String[]{uri};\n+            }\n+            else {\n                 url = uri.split(SEPARATOR);\n+            }\n             List<KeywordBean> kbList = new ArrayList<>();\n             for (String currentUri : url) {\n                 kb = searcher.searchById(currentUri, sThesaurusName, iso3langCodes);\n-                if (kb == null)\n+                if (kb == null) {\n                     kb = searcher.searchById(currentUri, sThesaurusName, langs);\n-                if (kb == null)\n-                    kb = searcher.searchById(fixUri(currentUri), sThesaurusName, iso3langCodes);\n-                if (kb == null)\n-                    kb = searcher.searchById(fixUri(currentUri), sThesaurusName, langs);\n+                }\n+                if (kb == null) {\n+                    kb = searcher.searchById(ApiUtils.fixURIFragment(currentUri), sThesaurusName, iso3langCodes);\n+                }\n+                if (kb == null) {\n+                    kb = searcher.searchById(ApiUtils.fixURIFragment(currentUri), sThesaurusName, langs);\n+                }\n                 if (kb != null) {\n                     kbList.add(kb);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxOTU5Nw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r440619597", "bodyText": "Please check to move to add Unit tests, if required move to a utility class.", "author": "josegar74", "createdAt": "2020-06-16T06:43:02Z", "path": "services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java", "diffHunk": "@@ -473,12 +463,14 @@ public Element getKeywordById(\n     }\n \n     // fixes common problems in uri\n-    private String fixUri(String uri) throws URISyntaxException {\n-        // We could be smarter about this.\n-        // ie. by breaking string at \"#\" and then urlencode the left part.\n-        //     However, the rdf files could be inconsistent with\n-        //     other characters like \":\" (i.e. should not be url encoded)\n-        return uri.replace(\" \",\"%20\");\n+    private String fixUri(String uri) throws   UnsupportedEncodingException {", "originalCommit": "d2a9058b4794981d586e64dccd2bd5b4fd229cf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e6c56bfbb06e5944439f1fe0e066a0b813c475d", "chunk": "diff --git a/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java b/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\nindex e594be1995..87e53f6d9f 100644\n--- a/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\n+++ b/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\n\n@@ -462,16 +467,6 @@ public class KeywordsApi {\n         return transform;\n     }\n \n-    // fixes common problems in uri\n-    private String fixUri(String uri) throws   UnsupportedEncodingException {\n-        String[] parts = uri.split(\"#\");\n-        if (parts.length >1) {\n-            parts[parts.length - 1] = URLEncoder.encode(parts[parts.length - 1], \"UTF-8\");\n-            parts[parts.length - 1] = parts[parts.length - 1].replace(\"+\", \"%20\");\n-            parts[parts.length - 1] = parts[parts.length - 1].replace(\"%3A\", \":\");\n-        }\n-        return String.join(\"#\",parts);\n-    }\n \n     /**\n      * Gets the thesaurus.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYyMDMxMA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r440620310", "bodyText": "Surround code with curly braces", "author": "josegar74", "createdAt": "2020-06-16T06:44:46Z", "path": "services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java", "diffHunk": "@@ -416,31 +406,31 @@ public Element getKeywordById(\n             KeywordsSearcher searcher = new KeywordsSearcher(context, thesaurusManager);\n \n             KeywordBean kb;\n-            if (!uri.contains(SEPARATOR)) {\n-                kb = searcher.searchById(uri, sThesaurusName, langs);\n-                if (kb == null) {\n-                    descKeys = new Element(\"descKeys\");\n-                } else {\n-                    descKeys = KeywordsSearcher.toRawElement(new Element(\"descKeys\"), kb);\n-                }\n-            } else {\n-                String[] url = uri.split(SEPARATOR);\n-                List<KeywordBean> kbList = new ArrayList<>();\n-                for (String currentUri : url) {\n+            String[] url;\n+            if (!uri.contains(SEPARATOR))", "originalCommit": "d2a9058b4794981d586e64dccd2bd5b4fd229cf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e6c56bfbb06e5944439f1fe0e066a0b813c475d", "chunk": "diff --git a/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java b/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\nindex e594be1995..87e53f6d9f 100644\n--- a/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\n+++ b/services/src/main/java/org/fao/geonet/api/registries/vocabularies/KeywordsApi.java\n\n@@ -407,19 +407,24 @@ public class KeywordsApi {\n \n             KeywordBean kb;\n             String[] url;\n-            if (!uri.contains(SEPARATOR))\n-                url = new String[] {uri};\n-            else\n+            if (!uri.contains(SEPARATOR)) {\n+                url = new String[]{uri};\n+            }\n+            else {\n                 url = uri.split(SEPARATOR);\n+            }\n             List<KeywordBean> kbList = new ArrayList<>();\n             for (String currentUri : url) {\n                 kb = searcher.searchById(currentUri, sThesaurusName, iso3langCodes);\n-                if (kb == null)\n+                if (kb == null) {\n                     kb = searcher.searchById(currentUri, sThesaurusName, langs);\n-                if (kb == null)\n-                    kb = searcher.searchById(fixUri(currentUri), sThesaurusName, iso3langCodes);\n-                if (kb == null)\n-                    kb = searcher.searchById(fixUri(currentUri), sThesaurusName, langs);\n+                }\n+                if (kb == null) {\n+                    kb = searcher.searchById(ApiUtils.fixURIFragment(currentUri), sThesaurusName, iso3langCodes);\n+                }\n+                if (kb == null) {\n+                    kb = searcher.searchById(ApiUtils.fixURIFragment(currentUri), sThesaurusName, langs);\n+                }\n                 if (kb != null) {\n                     kbList.add(kb);\n                 }\n"}}, {"oid": "8e6c56bfbb06e5944439f1fe0e066a0b813c475d", "url": "https://github.com/geonetwork/core-geonetwork/commit/8e6c56bfbb06e5944439f1fe0e066a0b813c475d", "message": "fixes from review", "committedDate": "2020-06-16T17:33:35Z", "type": "commit"}, {"oid": "339c42012b6e884d49462e92e19ca934d6ab854d", "url": "https://github.com/geonetwork/core-geonetwork/commit/339c42012b6e884d49462e92e19ca934d6ab854d", "message": "slightly better 2/3 letter handling", "committedDate": "2020-06-16T17:36:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzMjI5Nw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4766#discussion_r442132297", "bodyText": "Missing \",\" at the end", "author": "ianwallen", "createdAt": "2020-06-18T10:37:09Z", "path": "core/src/main/java/org/fao/geonet/kernel/Thesaurus.java", "diffHunk": "@@ -693,6 +693,49 @@ public void addTitleElement(String thesaurusTitle) throws IOException, AccessDen\n         repository.addGraph(myGraph);\n     }\n \n+    //    <rdf:RDF>\n+    //    <skos:ConceptScheme rdf:about=\"http://www.thesaurus.gc.ca/#CoreSubjectThesaurus\">\n+    //          <dc:title>Main GN Title</dc:title>\n+    //          <dc:title xml:lang=\"en\">English Version (en)</dc:title>\n+    //          <dc:title xml:lang=\"fr\">French Version (fr)</dc:title>\n+    //          <dc:description></dc:description>\n+    //     </skos:ConceptScheme>\n+    //\n+    // This will setup;\n+    //  {\n+    //      \"en\": \"English Version (en)\",\n+    //      \"fr\": \"French Version (fr)\"", "originalCommit": "339c42012b6e884d49462e92e19ca934d6ab854d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "add232cf4279a6a8b70d513c56a1f6b18fd9c68a", "chunk": "diff --git a/core/src/main/java/org/fao/geonet/kernel/Thesaurus.java b/core/src/main/java/org/fao/geonet/kernel/Thesaurus.java\nindex df80a72740..dbd36bdb69 100644\n--- a/core/src/main/java/org/fao/geonet/kernel/Thesaurus.java\n+++ b/core/src/main/java/org/fao/geonet/kernel/Thesaurus.java\n\n@@ -705,8 +705,6 @@ public class Thesaurus {\n     //  {\n     //      \"en\": \"English Version (en)\",\n     //      \"fr\": \"French Version (fr)\"\n-    //      \"eng\": \"English Version (en)\",\n-    //      \"fre\": \"French Version (fr)\"\n     //  }\n     private void retrieveMultiLingualTitles(Element thesaurusEl) {\n         List<Namespace> theNSs = new ArrayList<Namespace>();\n"}}, {"oid": "add232cf4279a6a8b70d513c56a1f6b18fd9c68a", "url": "https://github.com/geonetwork/core-geonetwork/commit/add232cf4279a6a8b70d513c56a1f6b18fd9c68a", "message": "use only 2letter keywords", "committedDate": "2020-06-18T22:28:01Z", "type": "commit"}, {"oid": "9b2e9c515f852c9e8803dadb546c2841c716b3af", "url": "https://github.com/geonetwork/core-geonetwork/commit/9b2e9c515f852c9e8803dadb546c2841c716b3af", "message": "add language conversion functionality to keywords api", "committedDate": "2020-06-24T20:55:50Z", "type": "commit"}, {"oid": "5ed5826c59a885ec6d115c407f3be109a1a2bd57", "url": "https://github.com/geonetwork/core-geonetwork/commit/5ed5826c59a885ec6d115c407f3be109a1a2bd57", "message": "remove unused code", "committedDate": "2020-06-25T16:18:47Z", "type": "commit"}, {"oid": "a5f4ec37698d36fd5908e6cdee103d91146a8c3f", "url": "https://github.com/geonetwork/core-geonetwork/commit/a5f4ec37698d36fd5908e6cdee103d91146a8c3f", "message": "add missing test case file", "committedDate": "2020-06-25T17:15:35Z", "type": "commit"}]}