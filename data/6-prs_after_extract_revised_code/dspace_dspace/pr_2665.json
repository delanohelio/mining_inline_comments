{"pr_number": 2665, "pr_title": "DS-4418 remove uuid from resource policy rest", "pr_createdAt": "2020-02-10T15:04:59Z", "pr_url": "https://github.com/DSpace/DSpace/pull/2665", "timeline": [{"oid": "c5bf2b23460df1d2a4cfac91945b621fa878e50a", "url": "https://github.com/DSpace/DSpace/commit/c5bf2b23460df1d2a4cfac91945b621fa878e50a", "message": "added unit test for addAccessCondition and removeAccessCondition", "committedDate": "2020-02-12T17:01:13Z", "type": "commit"}, {"oid": "7664c2da94b2f49ecc8ca749a8bf0954d5a22477", "url": "https://github.com/DSpace/DSpace/commit/7664c2da94b2f49ecc8ca749a8bf0954d5a22477", "message": "removed attributes groupUuid/epersonUuid from resourcePolicyRest", "committedDate": "2020-02-12T17:01:13Z", "type": "commit"}, {"oid": "7664c2da94b2f49ecc8ca749a8bf0954d5a22477", "url": "https://github.com/DSpace/DSpace/commit/7664c2da94b2f49ecc8ca749a8bf0954d5a22477", "message": "removed attributes groupUuid/epersonUuid from resourcePolicyRest", "committedDate": "2020-02-12T17:01:13Z", "type": "forcePushed"}, {"oid": "10fbf2eae70e712d15637feba8c5eaa7d16d67f8", "url": "https://github.com/DSpace/DSpace/commit/10fbf2eae70e712d15637feba8c5eaa7d16d67f8", "message": "restore upload as mandatory as by dspace default configuration", "committedDate": "2020-02-12T21:08:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4NTA3Mg==", "url": "https://github.com/DSpace/DSpace/pull/2665#discussion_r381585072", "bodyText": "I have to admit, this class is confusing to me. What is an \"UploadAccessCondition\" and what does it have to do with a ResourcePolicy?  Why do we require a \"partial representation\" of a ResourcePolicy? Why is this class a DTO, when we tend to create *Rest model objects for the REST API layer?\nAlso, I'm noticing we already have an org.dspace.app.rest.model.AccessConditionOptionRest object and an org.dspace.app.rest.model.ResourcePolicyRest object.  What is this class doing that couldn't be handled by one of those other existing objects?\n(To clarify here, I'm not against adding this DTO if it's needed. But, I'd like us to better describe why it is needed and how it differs from the previously mentioned Rest objects. It's currently not clear to me why we need this object.)", "author": "tdonohue", "createdAt": "2020-02-19T22:32:19Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadAccessConditionDTO.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.model;\n+\n+import java.util.Date;\n+import java.util.UUID;\n+\n+/**\n+ * The UploadAccessCondition it is partial representation of the DSpace ResourcePolicy\n+ *\n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n+ */\n+public class UploadAccessConditionDTO  {", "originalCommit": "10fbf2eae70e712d15637feba8c5eaa7d16d67f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwMTYwOA==", "url": "https://github.com/DSpace/DSpace/pull/2665#discussion_r382101608", "bodyText": "yes, we need an additional class to represent the payload used by the rest client to update information in the upload section of a workspaceitem. I will add more information about it in the javadoc, but the main difference is that the ResourcePolicyRest object contains a reference to the real Group object but here we only need the uuid (the uri-list approach cannot be used inside the patch). The AccessConditionOptionRest instead is used to represent one option to set access in the upload pannel, such as open acces, embargo, leave, etc.\nYou are of course right about use this new class everywhere in the patch, we will look to fix that", "author": "abollini", "createdAt": "2020-02-20T16:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4NTA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI2NjU2OQ==", "url": "https://github.com/DSpace/DSpace/pull/2665#discussion_r382266569", "bodyText": "Thanks @abollini for the better JavaDocs here, as it's helped me to better wrap my head around how this is working.  I'll now do a more thorough review.", "author": "tdonohue", "createdAt": "2020-02-20T21:26:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4NTA3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d64609df220538e017fc51ad729253df5e3e31e7", "chunk": "diff --git a/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadAccessConditionDTO.java b/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadAccessConditionDTO.java\nindex 8e6761b45..7dee6b5c9 100644\n--- a/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadAccessConditionDTO.java\n+++ b/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadAccessConditionDTO.java\n\n@@ -10,8 +10,19 @@ package org.dspace.app.rest.model;\n import java.util.Date;\n import java.util.UUID;\n \n+import org.dspace.app.rest.model.step.UploadBitstreamRest;\n+\n /**\n- * The UploadAccessCondition it is partial representation of the DSpace ResourcePolicy\n+ * The UploadAccessConditionDTO is a partial representation of the DSpace\n+ * {@link ResourcePolicyRest} as used in the patch payload for the upload\n+ * submission section (see {@link UploadBitstreamRest}. The main reason for this\n+ * class is to have a DTO to use serialize/deserialize the REST model, that\n+ * include reference to the GroupRest and EPersonRest object, in the upload\n+ * section data in a simpler way where such reference are just UUID. Indeed, due\n+ * to the fact that the RestModel class are serialized according to the HAL\n+ * format and the reference are only exposed in the _links section of the\n+ * RestResource it was not possible to use the {@link ResourcePolicyRest} class\n+ * directly in the upload section\n  *\n  * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n  */\n"}}, {"oid": "d64609df220538e017fc51ad729253df5e3e31e7", "url": "https://github.com/DSpace/DSpace/commit/d64609df220538e017fc51ad729253df5e3e31e7", "message": "DS-4418 improve javadoc, cleanup dependencies", "committedDate": "2020-02-20T18:48:38Z", "type": "commit"}, {"oid": "d2c658289902b9c660c1cd9f474631867b9572e1", "url": "https://github.com/DSpace/DSpace/commit/d2c658289902b9c660c1cd9f474631867b9572e1", "message": "Minor spelling corrections", "committedDate": "2020-02-20T21:19:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI2NzI0MQ==", "url": "https://github.com/DSpace/DSpace/pull/2665#discussion_r382267241", "bodyText": "Could we take this opportunity to add JavaDocs to this class as well, and describe how it works with the new UploadAccessConditionDTO?  I notice the UploadAccessConditionDTO is used here & references this UploadBitstreamRest class in it's JavaDocs, but this class doesn't have it's own description", "author": "tdonohue", "createdAt": "2020-02-20T21:27:42Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/model/step/UploadBitstreamRest.java", "diffHunk": "@@ -16,13 +17,13 @@\n import org.dspace.app.rest.model.BitstreamFormatRest;\n import org.dspace.app.rest.model.CheckSumRest;\n import org.dspace.app.rest.model.MetadataValueRest;\n-import org.dspace.app.rest.model.ResourcePolicyRest;\n+import org.dspace.app.rest.model.UploadAccessConditionDTO;\n \n public class UploadBitstreamRest extends UploadStatusResponse {", "originalCommit": "d2c658289902b9c660c1cd9f474631867b9572e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "22a2b12aa81298972298a51e6b507d405d7f74c7", "chunk": "diff --git a/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/step/UploadBitstreamRest.java b/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/step/UploadBitstreamRest.java\nindex 65276e1d5..48d285ee0 100644\n--- a/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/step/UploadBitstreamRest.java\n+++ b/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/step/UploadBitstreamRest.java\n\n@@ -19,6 +19,12 @@ import org.dspace.app.rest.model.CheckSumRest;\n import org.dspace.app.rest.model.MetadataValueRest;\n import org.dspace.app.rest.model.UploadAccessConditionDTO;\n \n+/**\n+ * This Java Bean is used to represent a single bitstream with all its metadata\n+ * and access conditions ({@link UploadAccessConditionDTO}) inside an\n+ * upload submission section ({@link DataUpload}\n+ *\n+ */\n public class UploadBitstreamRest extends UploadStatusResponse {\n \n     private UUID uuid;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI2ODcyMA==", "url": "https://github.com/DSpace/DSpace/pull/2665#discussion_r382268720", "bodyText": "Similarly, with this change, I'd like to ask if we can add JavaDocs to the buildUploadBitstream() method (they are currently missing).  Describing this method would really help clarify the purposes of both UploadBitstreamRest (which it is building) and UploadAccessConditionDTO (which it uses to pass along access conditions from the Bitstream's resource policies)", "author": "tdonohue", "createdAt": "2020-02-20T21:31:15Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/SubmissionService.java", "diffHunk": "@@ -168,8 +169,8 @@ public UploadBitstreamRest buildUploadBitstream(ConfigurationService configurati\n \n         for (ResourcePolicy rp : source.getResourcePolicies()) {\n             if (ResourcePolicy.TYPE_CUSTOM.equals(rp.getRpType())) {\n-                ResourcePolicyRest resourcePolicyRest = converter.toRest(rp, Projection.DEFAULT);\n-                data.getAccessConditions().add(resourcePolicyRest);\n+                UploadAccessConditionDTO uploadAccessCondition = createAccessConditionFromResourcePolicy(rp);", "originalCommit": "d2c658289902b9c660c1cd9f474631867b9572e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "353b12034c8fb63ad732a3fb58b65a856f3aae2f", "chunk": "diff --git a/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/SubmissionService.java b/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/SubmissionService.java\nindex 3d67360cc..776e7cd52 100644\n--- a/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/SubmissionService.java\n+++ b/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/SubmissionService.java\n\n@@ -169,7 +180,7 @@ public class SubmissionService {\n \n         for (ResourcePolicy rp : source.getResourcePolicies()) {\n             if (ResourcePolicy.TYPE_CUSTOM.equals(rp.getRpType())) {\n-                UploadAccessConditionDTO uploadAccessCondition = createAccessConditionFromResourcePolicy(rp);\n+                UploadBitstreamAccessConditionDTO uploadAccessCondition = createAccessConditionFromResourcePolicy(rp);\n                 data.getAccessConditions().add(uploadAccessCondition);\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3NTM0OA==", "url": "https://github.com/DSpace/DSpace/pull/2665#discussion_r382275348", "bodyText": "Based on the new JavaDocs here & the improvements to other Javadocs, I would say this class might be better named UploadBitstreamAccessConditionDTO, as it's really specific to Bitstreams and it's used/needed directly by UploadBitstreamRest (so it'd be nice to name them similarly)", "author": "tdonohue", "createdAt": "2020-02-20T21:46:10Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadAccessConditionDTO.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.model;\n+\n+import java.util.Date;\n+import java.util.UUID;\n+\n+import org.dspace.app.rest.model.step.UploadBitstreamRest;\n+\n+/**\n+ * The UploadAccessConditionDTO is a partial representation of the DSpace\n+ * {@link ResourcePolicyRest} as used in the patch payload for the upload\n+ * submission section (see {@link UploadBitstreamRest}. The main reason for this\n+ * class is to have a DTO to use serialize/deserialize the REST model, that\n+ * include reference to the GroupRest and EPersonRest object, in the upload\n+ * section data in a simpler way where such reference are just UUID. Indeed, due\n+ * to the fact that the RestModel class are serialized according to the HAL\n+ * format and the reference are only exposed in the _links section of the\n+ * RestResource it was not possible to use the {@link ResourcePolicyRest} class\n+ * directly in the upload section\n+ *\n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n+ */\n+public class UploadAccessConditionDTO  {", "originalCommit": "d2c658289902b9c660c1cd9f474631867b9572e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "353b12034c8fb63ad732a3fb58b65a856f3aae2f", "chunk": "diff --git a/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadAccessConditionDTO.java b/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadBitstreamAccessConditionDTO.java\nsimilarity index 97%\nrename from dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadAccessConditionDTO.java\nrename to dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadBitstreamAccessConditionDTO.java\nindex 7dee6b5c9..120cb6a9d 100644\n--- a/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadAccessConditionDTO.java\n+++ b/dspace-server-webapp/src/main/java/org/dspace/app/rest/model/UploadBitstreamAccessConditionDTO.java\n\n@@ -26,7 +26,7 @@ import org.dspace.app.rest.model.step.UploadBitstreamRest;\n  *\n  * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n  */\n-public class UploadAccessConditionDTO  {\n+public class UploadBitstreamAccessConditionDTO  {\n \n     private Integer id;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3ODAwNw==", "url": "https://github.com/DSpace/DSpace/pull/2665#discussion_r382278007", "bodyText": "Based on the changes in this PR, I'm realizing that this PatchOperation class (and all of the ResourcePolicy*PatchOperation classes) is improperly named.\nOne of the points of confusion I had with this PR was that I initially couldn't understand why \"generic\" Resource Policy PATCH operations would use a Bitstream-specific DTO.   After digging deeper (thanks to @abollini 's JavaDocs), I'm realizing this PATCH class is not generic (i.e. it's not handling a patch on the /api/authz/resourcepolicies endpoint).  It's specific to patching resource policies of Bitstreams (only).\nCould we use this PR as an opportunity to correct the names of these PatchOperation Classes?  They probably should be named:\n\nBitstreamResourcePolicyAddPatchOperation\nBitstreamResourcePolicyReplacePatchOperation\nBitstreamResourcePolicyRemovePatchOperation", "author": "tdonohue", "createdAt": "2020-02-20T21:51:53Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/ResourcePolicyAddPatchOperation.java", "diffHunk": "@@ -35,7 +36,7 @@\n  *\n  * @author Luigi Andrea Pascarelli (luigiandrea.pascarelli at 4science.it)\n  */\n-public class ResourcePolicyAddPatchOperation extends AddPatchOperation<ResourcePolicyRest> {\n+public class ResourcePolicyAddPatchOperation extends AddPatchOperation<UploadAccessConditionDTO> {", "originalCommit": "d2c658289902b9c660c1cd9f474631867b9572e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "22a2b12aa81298972298a51e6b507d405d7f74c7", "chunk": "diff --git a/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/ResourcePolicyAddPatchOperation.java b/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamResourcePolicyAddPatchOperation.java\nsimilarity index 97%\nrename from dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/ResourcePolicyAddPatchOperation.java\nrename to dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamResourcePolicyAddPatchOperation.java\nindex 7b241da0e..570b805ca 100644\n--- a/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/ResourcePolicyAddPatchOperation.java\n+++ b/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamResourcePolicyAddPatchOperation.java\n\n@@ -36,7 +36,7 @@ import org.springframework.beans.factory.annotation.Autowired;\n  *\n  * @author Luigi Andrea Pascarelli (luigiandrea.pascarelli at 4science.it)\n  */\n-public class ResourcePolicyAddPatchOperation extends AddPatchOperation<UploadAccessConditionDTO> {\n+public class BitstreamResourcePolicyAddPatchOperation extends AddPatchOperation<UploadAccessConditionDTO> {\n \n     @Autowired\n     BitstreamService bitstreamService;\n"}}, {"oid": "04df6f9d891b7ee2b519e72819f00ce0d749b86a", "url": "https://github.com/DSpace/DSpace/commit/04df6f9d891b7ee2b519e72819f00ce0d749b86a", "message": "Merge branch 'master' of https://github.com/DSpace/DSpace into resourcepolicy-DS-4418", "committedDate": "2020-02-21T08:52:50Z", "type": "commit"}, {"oid": "22a2b12aa81298972298a51e6b507d405d7f74c7", "url": "https://github.com/DSpace/DSpace/commit/22a2b12aa81298972298a51e6b507d405d7f74c7", "message": "DS-4418 extra javadoc and clarified the name of the path operations over bitstream's policies", "committedDate": "2020-02-22T21:35:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQxMDM0NQ==", "url": "https://github.com/DSpace/DSpace/pull/2665#discussion_r383410345", "bodyText": "There's two commented out lines here that don't seem to be necessary.  Here and 5 lines above this line.", "author": "tdonohue", "createdAt": "2020-02-24T17:35:37Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamResourcePolicyAddPatchOperation.java", "diffHunk": "@@ -74,17 +76,19 @@ void add(Context context, Request currentRequest, InProgressSubmission source, S\n                         newAccessConditions.add(evaluateSingleObject((LateObjectEvaluator) value));\n                     }\n \n-                    for (ResourcePolicyRest newAccessCondition : newAccessConditions) {\n+                    for (UploadAccessConditionDTO newAccessCondition : newAccessConditions) {\n                         String name = newAccessCondition.getName();\n                         String description = newAccessCondition.getDescription();\n \n                         //TODO manage error on select group and eperson\n                         Group group = null;\n                         if (newAccessCondition.getGroupUUID() != null) {\n+                           // UUID uuidGroup = UUID.fromString(newAccessCondition.getGroup().getUuid());\n                             group = groupService.find(context, newAccessCondition.getGroupUUID());\n                         }\n                         EPerson eperson = null;\n                         if (newAccessCondition.getEpersonUUID() != null) {\n+                           // UUID uuidEPerson = UUID.fromString(newAccessCondition.getEperson().getUuid());", "originalCommit": "22a2b12aa81298972298a51e6b507d405d7f74c7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "353b12034c8fb63ad732a3fb58b65a856f3aae2f", "chunk": "diff --git a/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamResourcePolicyAddPatchOperation.java b/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamResourcePolicyAddPatchOperation.java\nindex 570b805ca..05e7c5052 100644\n--- a/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamResourcePolicyAddPatchOperation.java\n+++ b/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamResourcePolicyAddPatchOperation.java\n\n@@ -76,19 +77,17 @@ public class BitstreamResourcePolicyAddPatchOperation extends AddPatchOperation<\n                         newAccessConditions.add(evaluateSingleObject((LateObjectEvaluator) value));\n                     }\n \n-                    for (UploadAccessConditionDTO newAccessCondition : newAccessConditions) {\n+                    for (UploadBitstreamAccessConditionDTO newAccessCondition : newAccessConditions) {\n                         String name = newAccessCondition.getName();\n                         String description = newAccessCondition.getDescription();\n \n                         //TODO manage error on select group and eperson\n                         Group group = null;\n                         if (newAccessCondition.getGroupUUID() != null) {\n-                           // UUID uuidGroup = UUID.fromString(newAccessCondition.getGroup().getUuid());\n                             group = groupService.find(context, newAccessCondition.getGroupUUID());\n                         }\n                         EPerson eperson = null;\n                         if (newAccessCondition.getEpersonUUID() != null) {\n-                           // UUID uuidEPerson = UUID.fromString(newAccessCondition.getEperson().getUuid());\n                             eperson = epersonService.find(context, newAccessCondition.getEpersonUUID());\n                         }\n \n"}}, {"oid": "353b12034c8fb63ad732a3fb58b65a856f3aae2f", "url": "https://github.com/DSpace/DSpace/commit/353b12034c8fb63ad732a3fb58b65a856f3aae2f", "message": "code cleanup - community feedback", "committedDate": "2020-02-28T15:50:01Z", "type": "commit"}, {"oid": "be3d51cd8299aca1127fd4a97b363d746e1c6314", "url": "https://github.com/DSpace/DSpace/commit/be3d51cd8299aca1127fd4a97b363d746e1c6314", "message": "Merge branch 'master' of https://github.com/DSpace/DSpace into resourcepolicy-DS-4418", "committedDate": "2020-03-02T08:44:50Z", "type": "commit"}]}