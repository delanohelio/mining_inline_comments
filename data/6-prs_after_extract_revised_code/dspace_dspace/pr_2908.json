{"pr_number": 2908, "pr_title": "Ensure ShibbolethRestController only redirects to trusted URLs after authentication", "pr_createdAt": "2020-07-28T19:06:22Z", "pr_url": "https://github.com/DSpace/DSpace/pull/2908", "timeline": [{"oid": "441043587bab7bb350764fb09425f5b8d293e6d7", "url": "https://github.com/DSpace/DSpace/commit/441043587bab7bb350764fb09425f5b8d293e6d7", "message": "Ensure ShibbolethRestController only redirects to trusted URLs", "committedDate": "2020-07-28T17:55:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzExNTc2Nw==", "url": "https://github.com/DSpace/DSpace/pull/2908#discussion_r463115767", "bodyText": "@tdonohue since we are in shibboleth context, this is what I did in the current Shibboleth SLO PR:\nI've added a specific method to that particular authentication method that retrieves a validated URL. To only allows redireccion for what is only configured.\n\n    public static String getURLFromLogoutActionRequest(HttpServletRequest request) throws ShibAuthenticationException {\n        String returnURL = null;\n        // verify if we have shibboleth parameters (action and return)\n        String action = request.getParameter(\"action\");\n        String shibLogoutURL = request.getParameter(\"return\");\n\n        // is shibboleth action for logout?\n        if (ShibAuthentication.SHIBBOLETH_LOGOUT_ACTION.equals(action) && StringUtils.isNotBlank(shibLogoutURL)) {\n            // for security issues we still need to validate return param\n            ConfigurationService configurationService = DSpaceServicesFactory.getInstance().getConfigurationService();\n            String serverUrl = Utils.getBaseUrl(configurationService.getProperty(\"dspace.server.url\"));\n            serverUrl = getSecureURL(serverUrl, request);\n            if (!shibLogoutURL.startsWith(serverUrl)) {\n                throw new ShibAuthenticationException(\"Invalid 'return' param\");\n            }\n            returnURL = shibLogoutURL;\n        }\n        return returnURL;\n    }\n\n\nMeanwhile, I did some refactoring and because of higher priority stuff and I bug I found with logout I didn't got the chance to rebase my work.\nThis work it was based (I think) on @atarix83 work with Shibboleth authentication PR. He added a methods I think it was Utils.getBaseUrl to retrieve the correct and absolute URL. I think, since we are at Shibboleth context it makes sense to try to use those methods to validate the URL redirection.", "author": "paulo-graca", "createdAt": "2020-07-30T16:19:40Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/ShibbolethRestController.java", "diffHunk": "@@ -53,8 +55,20 @@ public void shibboleth(HttpServletResponse response,\n         if (redirectUrl == null) {\n             redirectUrl = configurationService.getProperty(\"dspace.ui.url\");\n         }\n-        log.info(\"Redirecting to \" + redirectUrl);\n-        response.sendRedirect(redirectUrl);\n+\n+        // Validate that the redirectURL matches either the server or UI hostname. It *cannot* be an arbitrary URL.\n+        String redirectHostName = Utils.getHostName(redirectUrl);\n+        String serverHostName = Utils.getHostName(configurationService.getProperty(\"dspace.server.url\"));\n+        String clientHostName = Utils.getHostName(configurationService.getProperty(\"dspace.ui.url\"));\n+        if (StringUtils.equalsAnyIgnoreCase(redirectHostName, serverHostName, clientHostName)) {", "originalCommit": "441043587bab7bb350764fb09425f5b8d293e6d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1NDAwMA==", "url": "https://github.com/DSpace/DSpace/pull/2908#discussion_r463154000", "bodyText": "@paulo-graca : I'm not seeing much difference between your method and mine?  In mine, I'm doing a Hostname comparison to ensure the redirectUrl param matches the Hostname of either dspace.server.url or dspace.ui.url.  In your code pasted above, it looks like you are just making sure the redirectUrl starts with the same base URL as dspace.server.url (which is almost the same as a Hostname, without the HTTP/HTTPS).\nSo, I'm not sure how to respond here.  Did you want me to make changes to the code I've added to ShibbolethRestController to no longer validate against the Hostname, but check more of the URL?", "author": "tdonohue", "createdAt": "2020-07-30T17:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzExNTc2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "cf2f50dfe5e4757134a8db83c313979de4c2a75a", "chunk": "diff --git a/dspace-server-webapp/src/main/java/org/dspace/app/rest/ShibbolethRestController.java b/dspace-server-webapp/src/main/java/org/dspace/app/rest/ShibbolethRestController.java\nindex d673bd278..06ad196e4 100644\n--- a/dspace-server-webapp/src/main/java/org/dspace/app/rest/ShibbolethRestController.java\n+++ b/dspace-server-webapp/src/main/java/org/dspace/app/rest/ShibbolethRestController.java\n\n@@ -49,6 +49,9 @@ public class ShibbolethRestController implements InitializingBean {\n             .register(this, Arrays.asList(new Link(\"/api/\" + AuthnRest.CATEGORY, \"shibboleth\")));\n     }\n \n+    // LGTM.com thinks this method has an unvalidated URL redirect (https://lgtm.com/rules/4840088/) in `redirectUrl`,\n+    // even though we are clearly validating the hostname of `redirectUrl` and test it in ShibbolethRestControllerIT\n+    @SuppressWarnings(\"lgtm[java/unvalidated-url-redirection]\")\n     @RequestMapping(method = RequestMethod.GET)\n     public void shibboleth(HttpServletResponse response,\n             @RequestParam(name = \"redirectUrl\", required = false) String redirectUrl) throws IOException {\n"}}, {"oid": "cf2f50dfe5e4757134a8db83c313979de4c2a75a", "url": "https://github.com/DSpace/DSpace/commit/cf2f50dfe5e4757134a8db83c313979de4c2a75a", "message": "Add a SuppressWarnings annotation for LGTM as it doesn't detect that we fixed this.", "committedDate": "2020-07-31T15:00:08Z", "type": "commit"}]}