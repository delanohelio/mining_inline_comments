{"pr_number": 2736, "pr_title": "DS-4412 Create Integration Tests to prove that users in the Administrators group get full Admin Rights", "pr_createdAt": "2020-04-03T15:38:23Z", "pr_url": "https://github.com/DSpace/DSpace/pull/2736", "timeline": [{"oid": "ce2f965b9c59a3f283c3fff6cecb67de13017d8a", "url": "https://github.com/DSpace/DSpace/commit/ce2f965b9c59a3f283c3fff6cecb67de13017d8a", "message": "implemented Administrator feature", "committedDate": "2020-04-02T16:33:27Z", "type": "commit"}, {"oid": "1d6f6ef02b53fc22d175aa25068b95eff4f18c7a", "url": "https://github.com/DSpace/DSpace/commit/1d6f6ef02b53fc22d175aa25068b95eff4f18c7a", "message": "added IT to prove that an eperson has same rights when is part of admin group", "committedDate": "2020-04-02T16:39:18Z", "type": "commit"}, {"oid": "bd0055d5632abfcb6690fa04e1413aaea3e3566f", "url": "https://github.com/DSpace/DSpace/commit/bd0055d5632abfcb6690fa04e1413aaea3e3566f", "message": "added ITs for Administrator feature", "committedDate": "2020-04-03T12:59:41Z", "type": "commit"}, {"oid": "09b2f0e17a164b7242c6977a7aa66c9c4474d55e", "url": "https://github.com/DSpace/DSpace/commit/09b2f0e17a164b7242c6977a7aa66c9c4474d55e", "message": "added javadoc", "committedDate": "2020-04-03T15:28:53Z", "type": "commit"}, {"oid": "a4a9126620a4a011f88643c09f82b44eb2327dc7", "url": "https://github.com/DSpace/DSpace/commit/a4a9126620a4a011f88643c09f82b44eb2327dc7", "message": "added IT for Administrator feature", "committedDate": "2020-04-03T15:31:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMxMDM2Mw==", "url": "https://github.com/DSpace/DSpace/pull/2736#discussion_r403310363", "bodyText": "We might just want to call this new feature \"administratorOf\".  It seems to be checking whether you are an Administrator of a particular object (Community, Collection or Site).", "author": "tdonohue", "createdAt": "2020-04-03T20:29:50Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorFeature.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.authorization.impl;\n+\n+import java.sql.SQLException;\n+\n+import org.dspace.app.rest.authorization.AuthorizationFeature;\n+import org.dspace.app.rest.authorization.AuthorizationFeatureDocumentation;\n+import org.dspace.app.rest.model.BaseObjectRest;\n+import org.dspace.app.rest.model.CollectionRest;\n+import org.dspace.app.rest.model.CommunityRest;\n+import org.dspace.app.rest.model.SiteRest;\n+import org.dspace.app.rest.utils.Utils;\n+import org.dspace.authorize.service.AuthorizeService;\n+import org.dspace.content.Collection;\n+import org.dspace.content.Community;\n+import org.dspace.core.Context;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * The administrator feature. It can be used for verify that an user has access\n+ * to the administrative feature of the repository or of a specific community and collection.\n+ *\n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n+ */\n+@Component\n+@AuthorizationFeatureDocumentation(name = AdministratorFeature.NAME)\n+public class AdministratorFeature implements AuthorizationFeature {\n+\n+    public static final String NAME = \"administratorfeature\";", "originalCommit": "a4a9126620a4a011f88643c09f82b44eb2327dc7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "452261853124745e8b7f338a2c7c4f7b4469f3e9", "chunk": "diff --git a/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorFeature.java b/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOf.java\nsimilarity index 82%\nrename from dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorFeature.java\nrename to dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOf.java\nindex 183e9959f..e6aa72415 100644\n--- a/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorFeature.java\n+++ b/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOf.java\n\n@@ -25,15 +25,17 @@ import org.springframework.stereotype.Component;\n \n /**\n  * The administrator feature. It can be used for verify that an user has access\n- * to the administrative feature of the repository or of a specific community and collection.\n+ * to the administrative features of the repository or of a specific community and collection.\n  *\n  * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n  */\n @Component\n-@AuthorizationFeatureDocumentation(name = AdministratorFeature.NAME)\n-public class AdministratorFeature implements AuthorizationFeature {\n+@AuthorizationFeatureDocumentation(name = AdministratorOf.NAME,\n+        description = \"It can be used for verify that an user has access \"\n+                    + \"to the administrative features of the repository or of a specific community and collection\")\n+public class AdministratorOf implements AuthorizationFeature {\n \n-    public static final String NAME = \"administratorfeature\";\n+    public static final String NAME = \"administratorOf\";\n \n     @Autowired\n     AuthorizeService authService;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMxMzk4OQ==", "url": "https://github.com/DSpace/DSpace/pull/2736#discussion_r403313989", "bodyText": "Just a note. A lot of these Converters get refactored/renamed in the (currently open) PR #2726.  So, depending on which PR is merged first (this one or that one), the other will require refactoring slightly.", "author": "tdonohue", "createdAt": "2020-04-03T20:34:35Z", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/authorization/EnrollAdministratorIT.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.authorization;\n+\n+import static org.springframework.data.rest.webmvc.RestMediaTypes.TEXT_URI_LIST_VALUE;\n+import static org.springframework.http.MediaType.parseMediaType;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import org.dspace.app.rest.authorization.impl.AdministratorFeature;\n+import org.dspace.app.rest.builder.EPersonBuilder;\n+import org.dspace.app.rest.converter.ConverterService;\n+import org.dspace.app.rest.matcher.AuthorizationMatcher;\n+import org.dspace.app.rest.model.SiteRest;\n+import org.dspace.app.rest.projection.DefaultProjection;\n+import org.dspace.app.rest.test.AbstractControllerIntegrationTest;\n+import org.dspace.content.Site;\n+import org.dspace.content.factory.ContentServiceFactory;\n+import org.dspace.content.service.SiteService;\n+import org.dspace.eperson.EPerson;\n+import org.dspace.eperson.Group;\n+import org.dspace.eperson.service.GroupService;\n+import org.hamcrest.Matchers;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+/**\n+ * test that the enroll process for a new administrator, i.e. create an user and\n+ * add him to the administrators group, will result in the Administrator Feature(s) to be available to such user.\n+ * \n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n+ *\n+ */\n+public class EnrollAdministratorIT extends AbstractControllerIntegrationTest {\n+\n+    @Autowired\n+    private AuthorizationFeatureService authorizationFeatureService;\n+    @Autowired\n+    private ConverterService converterService;\n+    @Autowired\n+    GroupService groupService;\n+\n+    private SiteService siteService;\n+\n+    /** \n+     * this hold a reference to the test feature {@link AdministratorFeature}\n+     */\n+    private AuthorizationFeature administratorFeature;\n+\n+    @Override\n+    @Before\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        siteService = ContentServiceFactory.getInstance().getSiteService();\n+        administratorFeature = authorizationFeatureService.find(AdministratorFeature.NAME);\n+    }\n+\n+    @Test\n+    public void addUserToAdminGroupOnSiteTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson eperson1 = EPersonBuilder.createEPerson(context)\n+                          .withNameInMetadata(\"Jhon\", \"Brown\")\n+                          .withEmail(\"johnbrown@example.com\")\n+                          .withPassword(password)\n+                          .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        Site site = siteService.findSite(context);\n+        SiteRest siteRest = converterService.toRest(site, DefaultProjection.DEFAULT);", "originalCommit": "a4a9126620a4a011f88643c09f82b44eb2327dc7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "452261853124745e8b7f338a2c7c4f7b4469f3e9", "chunk": "diff --git a/dspace-server-webapp/src/test/java/org/dspace/app/rest/authorization/EnrollAdministratorIT.java b/dspace-server-webapp/src/test/java/org/dspace/app/rest/authorization/EnrollAdministratorIT.java\nindex a209b0f02..5b43bb2f6 100644\n--- a/dspace-server-webapp/src/test/java/org/dspace/app/rest/authorization/EnrollAdministratorIT.java\n+++ b/dspace-server-webapp/src/test/java/org/dspace/app/rest/authorization/EnrollAdministratorIT.java\n\n@@ -14,7 +14,7 @@ import static org.springframework.test.web.servlet.request.MockMvcRequestBuilder\n import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n \n-import org.dspace.app.rest.authorization.impl.AdministratorFeature;\n+import org.dspace.app.rest.authorization.impl.AdministratorOf;\n import org.dspace.app.rest.builder.EPersonBuilder;\n import org.dspace.app.rest.converter.ConverterService;\n import org.dspace.app.rest.matcher.AuthorizationMatcher;\n"}}, {"oid": "452261853124745e8b7f338a2c7c4f7b4469f3e9", "url": "https://github.com/DSpace/DSpace/commit/452261853124745e8b7f338a2c7c4f7b4469f3e9", "message": "renamed class AdministratorFeature to AdministratorOf and added description", "committedDate": "2020-04-06T07:40:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2ODAyNA==", "url": "https://github.com/DSpace/DSpace/pull/2736#discussion_r405768024", "bodyText": "Small clarification to my previous comment.  To align with other existing \"Feature\" classes, I'd recommend we name the class AdministratorOfFeature (or even revert back to AdministratorFeature which is OK as well), but keep the NAME property below as administratorOf.\nThese two names need not match, and in fact they often don't match in other Feature classes, e.g. https://github.com/DSpace/DSpace/blob/master/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/WithdrawFeature.java or https://github.com/DSpace/DSpace/blob/master/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/ReinstateFeature.java", "author": "tdonohue", "createdAt": "2020-04-08T19:40:16Z", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOf.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.authorization.impl;\n+\n+import java.sql.SQLException;\n+\n+import org.dspace.app.rest.authorization.AuthorizationFeature;\n+import org.dspace.app.rest.authorization.AuthorizationFeatureDocumentation;\n+import org.dspace.app.rest.model.BaseObjectRest;\n+import org.dspace.app.rest.model.CollectionRest;\n+import org.dspace.app.rest.model.CommunityRest;\n+import org.dspace.app.rest.model.SiteRest;\n+import org.dspace.app.rest.utils.Utils;\n+import org.dspace.authorize.service.AuthorizeService;\n+import org.dspace.content.Collection;\n+import org.dspace.content.Community;\n+import org.dspace.core.Context;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * The administrator feature. It can be used for verify that an user has access\n+ * to the administrative features of the repository or of a specific community and collection.\n+ *\n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n+ */\n+@Component\n+@AuthorizationFeatureDocumentation(name = AdministratorOf.NAME,\n+        description = \"It can be used for verify that an user has access \"\n+                    + \"to the administrative features of the repository or of a specific community and collection\")\n+public class AdministratorOf implements AuthorizationFeature {", "originalCommit": "452261853124745e8b7f338a2c7c4f7b4469f3e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ffdd4a8474985a65bf9ae4c00f3ad217b57dd8bd", "chunk": "diff --git a/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOf.java b/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOfFeature.java\nsimilarity index 94%\nrename from dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOf.java\nrename to dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOfFeature.java\nindex e6aa72415..5ce4977b5 100644\n--- a/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOf.java\n+++ b/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOfFeature.java\n\n@@ -30,10 +30,10 @@ import org.springframework.stereotype.Component;\n  * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n  */\n @Component\n-@AuthorizationFeatureDocumentation(name = AdministratorOf.NAME,\n+@AuthorizationFeatureDocumentation(name = AdministratorOfFeature.NAME,\n         description = \"It can be used for verify that an user has access \"\n                     + \"to the administrative features of the repository or of a specific community and collection\")\n-public class AdministratorOf implements AuthorizationFeature {\n+public class AdministratorOfFeature implements AuthorizationFeature {\n \n     public static final String NAME = \"administratorOf\";\n \n"}}, {"oid": "ffdd4a8474985a65bf9ae4c00f3ad217b57dd8bd", "url": "https://github.com/DSpace/DSpace/commit/ffdd4a8474985a65bf9ae4c00f3ad217b57dd8bd", "message": "renamed AdministratorOf in AdministratorOfFeature", "committedDate": "2020-04-09T17:45:56Z", "type": "commit"}]}