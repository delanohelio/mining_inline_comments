{"pr_number": 2910, "pr_title": "The /authz/authorizations/search/object endpoint sometimes ignores the feature param", "pr_createdAt": "2020-07-29T13:51:48Z", "pr_url": "https://github.com/DSpace/DSpace/pull/2910", "timeline": [{"oid": "76d441b53fcf16657a26afedc8fe480b5b66aa6f", "url": "https://github.com/DSpace/DSpace/commit/76d441b53fcf16657a26afedc8fe480b5b66aa6f", "message": "taskid 71855 The /authz/authorizations/search/object endpoint sometimes ignores the feature param", "committedDate": "2020-07-29T11:49:20Z", "type": "commit"}, {"oid": "e37600d64a43c109ef760b6daad61e730c5840fd", "url": "https://github.com/DSpace/DSpace/commit/e37600d64a43c109ef760b6daad61e730c5840fd", "message": "taskid 71855 The /authz/authorizations/search/object endpoint sometimes ignores the feature param - feedback", "committedDate": "2020-07-29T12:47:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcxNzg5OA==", "url": "https://github.com/DSpace/DSpace/pull/2910#discussion_r463717898", "bodyText": "This looked odd to me at first, but you are correct :) We don't have an /objectAndFeature endpoint...it's named /object in the REST contract: https://github.com/DSpace/Rest7Contract/blob/main/authorizations.md#object", "author": "tdonohue", "createdAt": "2020-07-31T16:45:46Z", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/AuthorizationRestRepositoryIT.java", "diffHunk": "@@ -982,94 +986,153 @@ public void findByObjectAndFeatureTest() throws Exception {\n         String adminToken = getAuthToken(admin.getEmail(), password);\n \n         // verify that it works for administrators - with eperson parameter\n-        getClient(adminToken).perform(get(\"/api/authz/authorizations/search/objectAndFeature\")\n+        getClient(adminToken).perform(get(\"/api/authz/authorizations/search/object\")\n                 .param(\"uri\", comUri)\n                 .param(\"projection\", \"level\")\n                 .param(\"embedLevelDepth\", \"1\")\n                 .param(\"feature\", alwaysTrue.getName())\n                 .param(\"eperson\", admin.getID().toString()))\n             .andExpect(status().isOk())\n-            .andExpect(jsonPath(\"$.type\", is(\"authorization\")))\n-            .andExpect(jsonPath(\"$._embedded.feature.id\", is(alwaysTrue.getName())))\n-            .andExpect(jsonPath(\"$.id\", Matchers.is(admin.getID().toString() + \"_\" + alwaysTrue.getName() + \"_\"\n-                    + comRest.getUniqueType() + \"_\" + comRest.getId())));\n+            .andExpect(jsonPath(\"$.page.totalElements\", is(1)))\n+            .andExpect(jsonPath(\"$._embedded.authorizations\", contains(\n+                    allOf(\n+                            hasJsonPath(\"$.id\", is(admin.getID().toString() + \"_\" + alwaysTrue.getName() + \"_\"\n+                                    + comRest.getUniqueType() + \"_\" + comRest.getId())),\n+                            hasJsonPath(\"$.type\", is(\"authorization\")),\n+                            hasJsonPath(\"$._embedded.feature.id\", is(alwaysTrue.getName())),\n+                            hasJsonPath(\"$._embedded.eperson.id\", is(admin.getID().toString()))\n+                    )\n+            )));\n \n         // verify that it works for administrators - without eperson parameter\n-        getClient(adminToken).perform(get(\"/api/authz/authorizations/search/objectAndFeature\")\n+        getClient(adminToken).perform(get(\"/api/authz/authorizations/search/object\")", "originalCommit": "e37600d64a43c109ef760b6daad61e730c5840fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}