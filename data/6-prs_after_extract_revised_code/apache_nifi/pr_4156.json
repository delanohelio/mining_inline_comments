{"pr_number": 4156, "pr_title": "NIFI-7273: Add flow metrics REST endpoint with for Prometheus scraping", "pr_createdAt": "2020-03-23T13:56:55Z", "pr_url": "https://github.com/apache/nifi/pull/4156", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxNjYyMA==", "url": "https://github.com/apache/nifi/pull/4156#discussion_r396516620", "bodyText": "Maybe require HTTPS by default, and require explicit override to allow plaintext listening? Idea being, make it harder to misconfigure NiFi --you would have to explicitly shoot yourself in the foot.", "author": "achristianson", "createdAt": "2020-03-23T15:00:43Z", "path": "nifi-nar-bundles/nifi-prometheus-bundle/nifi-prometheus-reporting-task/src/main/java/org/apache/nifi/reporting/prometheus/PrometheusRecordSink.java", "diffHunk": "@@ -62,13 +63,22 @@\n     private volatile Map<String, Gauge> gauges;\n     private static final CollectorRegistry RECORD_REGISTRY = new CollectorRegistry();\n \n+    public static final PropertyDescriptor SSL_CONTEXT = new PropertyDescriptor.Builder()\n+            .name(\"prometheus-reporting-task-ssl-context\")\n+            .displayName(\"SSL Context Service\")\n+            .description(\"The SSL Context Service to use in order to secure the server. If specified, the server will\"\n+                    + \"accept only HTTPS requests; otherwise, the server will accept only HTTP requests\")\n+            .required(false)\n+            .identifiesControllerService(RestrictedSSLContextService.class)\n+            .build();", "originalCommit": "eaf7d51a0e65564ea452017597f92817687b5268", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyNTk5NQ==", "url": "https://github.com/apache/nifi/pull/4156#discussion_r396525995", "bodyText": "That's a good point, but this was just moving the existing properties into the existing Prometheus components (since we don't have a dependency on things like RestrictedSSLContextService in the module I added the REST call, I just moved the other common components to a util JAR), changing the default would prevent anyone from running over HTTP. I think that's why these properties default to false everywhere in NiFi, otherwise you must run a secure instance to use the \"securable\" components.", "author": "mattyb149", "createdAt": "2020-03-23T15:13:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxNjYyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUzMTY3OA==", "url": "https://github.com/apache/nifi/pull/4156#discussion_r396531678", "bodyText": "Fair enough... changing all that would be well out of scope for this PR. I think it's something to look into in the future (changing all of NiFi to be secure by default), but not a worry for now.", "author": "achristianson", "createdAt": "2020-03-23T15:20:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxNjYyMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxNzE4OQ==", "url": "https://github.com/apache/nifi/pull/4156#discussion_r396517189", "bodyText": "Same default-to-TLS note as above.", "author": "achristianson", "createdAt": "2020-03-23T15:01:32Z", "path": "nifi-nar-bundles/nifi-prometheus-bundle/nifi-prometheus-reporting-task/src/main/java/org/apache/nifi/reporting/prometheus/PrometheusReportingTask.java", "diffHunk": "@@ -53,6 +54,15 @@\n \n     private PrometheusServer prometheusServer;\n \n+    public static final PropertyDescriptor SSL_CONTEXT = new PropertyDescriptor.Builder()\n+            .name(\"prometheus-reporting-task-ssl-context\")\n+            .displayName(\"SSL Context Service\")\n+            .description(\"The SSL Context Service to use in order to secure the server. If specified, the server will\"\n+                    + \"accept only HTTPS requests; otherwise, the server will accept only HTTP requests\")\n+            .required(false)\n+            .identifiesControllerService(RestrictedSSLContextService.class)\n+            .build();\n+", "originalCommit": "eaf7d51a0e65564ea452017597f92817687b5268", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNTIwNg==", "url": "https://github.com/apache/nifi/pull/4156#discussion_r398725206", "bodyText": "minor: feels odd to call this a get when we don't return anything", "author": "apiri", "createdAt": "2020-03-26T16:45:31Z", "path": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/NiFiServiceFacade.java", "diffHunk": "@@ -313,6 +313,11 @@\n      */\n     FlowConfigurationEntity getFlowConfiguration();\n \n+    /**\n+     * Gets the metrics for the flow.\n+     */\n+    void getFlowMetrics();", "originalCommit": "eaf7d51a0e65564ea452017597f92817687b5268", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzOTk2Ng==", "url": "https://github.com/apache/nifi/pull/4156#discussion_r399339966", "bodyText": "Changed to generateFlowMetrics() (I didn't use create as it appears to be meant for creating components via the facade)", "author": "mattyb149", "createdAt": "2020-03-27T15:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNTIwNg=="}], "type": "inlineReview", "revised_code": {"commit": "449b330c9b8f8ccf9470f1cbc9783868654c9ec9", "chunk": "diff --git a/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/NiFiServiceFacade.java b/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/NiFiServiceFacade.java\nindex e5f0d72049..8f217b5d3f 100644\n--- a/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/NiFiServiceFacade.java\n+++ b/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/NiFiServiceFacade.java\n\n@@ -316,7 +316,7 @@ public interface NiFiServiceFacade {\n     /**\n      * Gets the metrics for the flow.\n      */\n-    void getFlowMetrics();\n+    void generateFlowMetrics();\n \n     /**\n      * Updates the configuration for this controller.\n"}}, {"oid": "449b330c9b8f8ccf9470f1cbc9783868654c9ec9", "url": "https://github.com/apache/nifi/commit/449b330c9b8f8ccf9470f1cbc9783868654c9ec9", "message": "NIFI-7273: Changed method name, fix handling when analytics not enabled", "committedDate": "2020-03-27T14:27:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2ODM1NQ==", "url": "https://github.com/apache/nifi/pull/4156#discussion_r403068355", "bodyText": "@mattyb149 this line (along with line 441) isn't needed (it's causing the metrics be be downloaded as a file vs visible in a browser).  Prometheus works fine with it however it may cause an issue for others attempting to simply view metrics", "author": "YolandaMDavis", "createdAt": "2020-04-03T15:00:57Z", "path": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/FlowResource.java", "diffHunk": "@@ -381,6 +388,66 @@ public Response getFlow(\n         return generateOkResponse(entity).build();\n     }\n \n+    /**\n+     * Retrieves the metrics of the entire flow.\n+     *\n+     * @return A flowMetricsEntity.\n+     * @throws InterruptedException if interrupted\n+     */\n+    @GET\n+    @Consumes(MediaType.WILDCARD)\n+    @Produces(MediaType.WILDCARD)\n+    @Path(\"metrics/{producer}\")\n+    @ApiOperation(\n+            value = \"Gets all metrics for the flow from a particular node\",\n+            response = StreamingOutput.class,\n+            authorizations = {\n+                    @Authorization(value = \"Read - /flow\")\n+            }\n+    )\n+    @ApiResponses(\n+            value = {\n+                    @ApiResponse(code = 400, message = \"NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.\"),\n+                    @ApiResponse(code = 401, message = \"Client could not be authenticated.\"),\n+                    @ApiResponse(code = 403, message = \"Client is not authorized to make this request.\"),\n+                    @ApiResponse(code = 404, message = \"The specified resource could not be found.\"),\n+                    @ApiResponse(code = 409, message = \"The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.\")\n+            }\n+    )\n+    public Response getFlowMetrics(\n+            @ApiParam(\n+                    value = \"The producer for flow file metrics. Each producer may have its own output format.\",\n+                    required = true\n+            )\n+            @PathParam(\"producer\") final String producer) throws InterruptedException {\n+\n+        authorizeFlow();\n+\n+        if (\"prometheus\".equalsIgnoreCase(producer)) {\n+            // get this process group flow\n+            serviceFacade.generateFlowMetrics();\n+            // generate a streaming response\n+            final StreamingOutput response = output -> {\n+                Writer writer = new BufferedWriter(new OutputStreamWriter(output));\n+                for (CollectorRegistry collectorRegistry : PrometheusMetricsUtil.ALL_REGISTRIES) {\n+                    TextFormat.write004(writer, collectorRegistry.metricFamilySamples());\n+                    // flush the response\n+                    output.flush();\n+                }\n+                writer.flush();\n+                writer.close();\n+            };\n+\n+            String generatedFilename = \"flowMetrics_\" + System.currentTimeMillis();\n+            return generateOkResponse(response)\n+                    .type(MediaType.TEXT_PLAIN_TYPE)\n+                    .header(\"Content-Disposition\", String.format(\"attachment; filename=\\\"%s\\\"\", generatedFilename))", "originalCommit": "449b330c9b8f8ccf9470f1cbc9783868654c9ec9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MTQzMQ==", "url": "https://github.com/apache/nifi/pull/4156#discussion_r403141431", "bodyText": "Good point, will change", "author": "mattyb149", "createdAt": "2020-04-03T16:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2ODM1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "0845a7ac7ae70c309cf24887781d75ca2425586b", "chunk": "diff --git a/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/FlowResource.java b/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/FlowResource.java\nindex 1b52924901..ba7762011e 100644\n--- a/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/FlowResource.java\n+++ b/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/FlowResource.java\n\n@@ -425,7 +425,7 @@ public class FlowResource extends ApplicationResource {\n \n         if (\"prometheus\".equalsIgnoreCase(producer)) {\n             // get this process group flow\n-            serviceFacade.generateFlowMetrics();\n+            serviceFacade.getFlowMetrics();\n             // generate a streaming response\n             final StreamingOutput response = output -> {\n                 Writer writer = new BufferedWriter(new OutputStreamWriter(output));\n"}}, {"oid": "0845a7ac7ae70c309cf24887781d75ca2425586b", "url": "https://github.com/apache/nifi/commit/0845a7ac7ae70c309cf24887781d75ca2425586b", "message": "NIFI-7273: Add flow metrics REST endpoint with for Prometheus scraping", "committedDate": "2020-04-03T16:49:48Z", "type": "commit"}, {"oid": "be4e64c3c2bfdbf5e996fff6031b43124472bdd2", "url": "https://github.com/apache/nifi/commit/be4e64c3c2bfdbf5e996fff6031b43124472bdd2", "message": "NIFI-7273: Changed method name, fix handling when analytics not enabled", "committedDate": "2020-04-03T16:49:48Z", "type": "commit"}, {"oid": "2d30f958e0875a30aad513892e488dfce7ff8566", "url": "https://github.com/apache/nifi/commit/2d30f958e0875a30aad513892e488dfce7ff8566", "message": "NIFI-7273: Removed attachment header from Prometheus metrics endpoint", "committedDate": "2020-04-03T17:31:48Z", "type": "commit"}, {"oid": "2d30f958e0875a30aad513892e488dfce7ff8566", "url": "https://github.com/apache/nifi/commit/2d30f958e0875a30aad513892e488dfce7ff8566", "message": "NIFI-7273: Removed attachment header from Prometheus metrics endpoint", "committedDate": "2020-04-03T17:31:48Z", "type": "forcePushed"}, {"oid": "5ecd8bac485aa13f7851d6d9b57eb079f0e9b605", "url": "https://github.com/apache/nifi/commit/5ecd8bac485aa13f7851d6d9b57eb079f0e9b605", "message": "NIFI-7273: Removed unused variable", "committedDate": "2020-04-03T19:18:32Z", "type": "commit"}]}