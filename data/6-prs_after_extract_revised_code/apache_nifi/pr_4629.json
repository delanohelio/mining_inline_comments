{"pr_number": 4629, "pr_title": "NIFI-7954 Wrapping HBase_*_ClientService calls in getUgi().doAs()", "pr_createdAt": "2020-10-28T20:14:37Z", "pr_url": "https://github.com/apache/nifi/pull/4629", "timeline": [{"oid": "43e66082c31f09c8ed761c18e32a3ffba2115d6f", "url": "https://github.com/apache/nifi/commit/43e66082c31f09c8ed761c18e32a3ffba2115d6f", "message": "NIFI-7954 Wrapping HBase_*_ClientService calls in getUgi().doAs() and taking care of TGT renewal.", "committedDate": "2020-10-28T20:11:37Z", "type": "commit"}, {"oid": "825da77feb4586852b6f0e7dfbdfae3981bb3bb4", "url": "https://github.com/apache/nifi/commit/825da77feb4586852b6f0e7dfbdfae3981bb3bb4", "message": "NIFI-7954 Simplified SecurityUtil.callWithUgi a little.", "committedDate": "2020-10-29T14:16:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDM4Mw==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r514300383", "bodyText": "In my opinion passing in a UserGroupProvider instance instead of the ugiProvider would make no difference from the functionality point of view but it'd simplify the usage/improve the readability.\nAs for the second parameter I'm not fully sure why we need the CallableThrowingException class. For me simple Callable seems to be ok too, even though it doesn't specify its exception type, but I don't see the need for that.", "author": "adenes", "createdAt": "2020-10-29T14:26:38Z", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(CallableThrowingException<UserGroupInformation, IOException> ugiProvider, CallableThrowingException<T, IOException> function) throws IOException {", "originalCommit": "43e66082c31f09c8ed761c18e32a3ffba2115d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNzM5NA==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r514307394", "bodyText": "wow, the first point from this comment has been fixed even before I submitted the comment :) Thanks @tpalfy", "author": "adenes", "createdAt": "2020-10-29T14:35:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDM4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMzODAzMQ==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r514338031", "bodyText": "I haven't looked too closely, but I was also wondering about the need for CallableThrowingException , isn't it basically providing the same thing as PrivilegedExceptionAction ?\nI would think the code inside the client services could just be:\ngetUgi().doAs((PrivilegedExceptionAction<Object>)() -> {\n  ...\n}", "author": "bbende", "createdAt": "2020-10-29T15:13:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDM4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4MDgyNw==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r515980827", "bodyText": "Yeah, that would work. I overcomplicated it a little it seems. Updated.", "author": "tpalfy", "createdAt": "2020-11-02T13:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDM4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054", "chunk": "diff --git a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java b/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\nindex c8eab7b874..f143a75b69 100644\n--- a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\n+++ b/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\n\n@@ -144,9 +144,9 @@ public class SecurityUtil {\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n \n-    public static <T> T callWithUgi(CallableThrowingException<UserGroupInformation, IOException> ugiProvider, CallableThrowingException<T, IOException> function) throws IOException {\n+    public static <T> T callWithUgi(UserGroupInformation ugi, PrivilegedExceptionAction<T> action) throws IOException {\n         try {\n-            return ugiProvider.call().doAs((PrivilegedExceptionAction<T>)() -> function.call());\n+            return ugi.doAs(action);\n         } catch (InterruptedException e) {\n             throw new IOException(e);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDk4MA==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r514300980", "bodyText": "minor nit: () -> function.call() could be replaced with method reference, i.e. function::call", "author": "adenes", "createdAt": "2020-10-29T14:27:22Z", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(CallableThrowingException<UserGroupInformation, IOException> ugiProvider, CallableThrowingException<T, IOException> function) throws IOException {\n+        try {\n+            return ugiProvider.call().doAs((PrivilegedExceptionAction<T>)() -> function.call());", "originalCommit": "43e66082c31f09c8ed761c18e32a3ffba2115d6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054", "chunk": "diff --git a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java b/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\nindex c8eab7b874..f143a75b69 100644\n--- a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\n+++ b/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\n\n@@ -144,9 +144,9 @@ public class SecurityUtil {\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n \n-    public static <T> T callWithUgi(CallableThrowingException<UserGroupInformation, IOException> ugiProvider, CallableThrowingException<T, IOException> function) throws IOException {\n+    public static <T> T callWithUgi(UserGroupInformation ugi, PrivilegedExceptionAction<T> action) throws IOException {\n         try {\n-            return ugiProvider.call().doAs((PrivilegedExceptionAction<T>)() -> function.call());\n+            return ugi.doAs(action);\n         } catch (InterruptedException e) {\n             throw new IOException(e);\n         }\n"}}, {"oid": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054", "url": "https://github.com/apache/nifi/commit/2f060300a2c5f25d0c8f66a94cb1cb0f763f5054", "message": "NIFI-7954 Simplified SecurityUtil.callWithUgi more.", "committedDate": "2020-11-02T13:45:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODQ5NQ==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r516688495", "bodyText": "This can be removed now that it is not used right?", "author": "bbende", "createdAt": "2020-11-03T14:04:06Z", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/CallableThrowingException.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.nifi.hadoop;\n+\n+@FunctionalInterface\n+public interface CallableThrowingException<T, E extends Exception> {", "originalCommit": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5MDI1MQ==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r518690251", "bodyText": "Yes, deleting it.", "author": "tpalfy", "createdAt": "2020-11-06T11:24:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODQ5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "64b1b38b8094cb0d25f173c584a0b3e85b7d3ec3", "chunk": "diff --git a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/CallableThrowingException.java b/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/CallableThrowingException.java\ndeleted file mode 100644\nindex 7f733926d3..0000000000\n--- a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/CallableThrowingException.java\n+++ /dev/null\n\n@@ -1,22 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.nifi.hadoop;\n-\n-@FunctionalInterface\n-public interface CallableThrowingException<T, E extends Exception> {\n-        T call() throws E;\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4OTkxNw==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r516689917", "bodyText": "It looks like only the method below that takes log and kerberosUser is used, can we remove this one if it is unused?", "author": "bbende", "createdAt": "2020-11-03T14:06:11Z", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(UserGroupInformation ugi, PrivilegedExceptionAction<T> action) throws IOException {\n+        try {\n+            return ugi.doAs(action);\n+        } catch (InterruptedException e) {\n+            throw new IOException(e);\n+        }\n+    }\n+\n+    public static void checkTGTAndRelogin(ComponentLog log, KerberosUser kerberosUser, UserGroupInformation ugi) throws IOException {", "originalCommit": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5MDQzNg==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r518690436", "bodyText": "Indeed, removing it.", "author": "tpalfy", "createdAt": "2020-11-06T11:24:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4OTkxNw=="}], "type": "inlineReview", "revised_code": {"commit": "64b1b38b8094cb0d25f173c584a0b3e85b7d3ec3", "chunk": "diff --git a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java b/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\nindex f143a75b69..c6cd511394 100644\n--- a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\n+++ b/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\n\n@@ -152,15 +152,6 @@ public class SecurityUtil {\n         }\n     }\n \n-    public static void checkTGTAndRelogin(ComponentLog log, KerberosUser kerberosUser, UserGroupInformation ugi) throws IOException {\n-        log.trace(\"getting UGI instance\");\n-        checkTGTAndRelogin(log, kerberosUser);\n-        if (kerberosUser == null) {\n-            // no synchronization is needed for UserGroupInformation.checkTGTAndReloginFromKeytab; UGI handles the synchronization internally\n-            ugi.checkTGTAndReloginFromKeytab();\n-        }\n-    }\n-\n     public static void checkTGTAndRelogin(ComponentLog log, KerberosUser kerberosUser) {\n         log.trace(\"getting UGI instance\");\n         if (kerberosUser != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDQ1MA==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r516694450", "bodyText": "It doesn't seem like we really need a utility method here just to call one line return ugi.doAs(action); , I think it would be simpler to just call ugi.doAs from all the places where this method is being called", "author": "bbende", "createdAt": "2020-11-03T14:12:07Z", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(UserGroupInformation ugi, PrivilegedExceptionAction<T> action) throws IOException {", "originalCommit": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5MjMyMw==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r518692323", "bodyText": "It handles the InterruptedException. Most of the callers only declare IOException. This is a general pattern which could use a utility method in my opinion. Just in this case the wrapping would need to be replicated in 15 places or so.", "author": "tpalfy", "createdAt": "2020-11-06T11:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDQ1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzMjkyMA==", "url": "https://github.com/apache/nifi/pull/4629#discussion_r519832920", "bodyText": "Ok fair enough", "author": "bbende", "createdAt": "2020-11-09T13:58:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDQ1MA=="}], "type": "inlineReview", "revised_code": {"commit": "64b1b38b8094cb0d25f173c584a0b3e85b7d3ec3", "chunk": "diff --git a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java b/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\nindex f143a75b69..c6cd511394 100644\n--- a/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\n+++ b/nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java\n\n@@ -152,15 +152,6 @@ public class SecurityUtil {\n         }\n     }\n \n-    public static void checkTGTAndRelogin(ComponentLog log, KerberosUser kerberosUser, UserGroupInformation ugi) throws IOException {\n-        log.trace(\"getting UGI instance\");\n-        checkTGTAndRelogin(log, kerberosUser);\n-        if (kerberosUser == null) {\n-            // no synchronization is needed for UserGroupInformation.checkTGTAndReloginFromKeytab; UGI handles the synchronization internally\n-            ugi.checkTGTAndReloginFromKeytab();\n-        }\n-    }\n-\n     public static void checkTGTAndRelogin(ComponentLog log, KerberosUser kerberosUser) {\n         log.trace(\"getting UGI instance\");\n         if (kerberosUser != null) {\n"}}, {"oid": "64b1b38b8094cb0d25f173c584a0b3e85b7d3ec3", "url": "https://github.com/apache/nifi/commit/64b1b38b8094cb0d25f173c584a0b3e85b7d3ec3", "message": "NIFI-7954 Removed unnecessary code.", "committedDate": "2020-11-06T14:05:37Z", "type": "commit"}]}