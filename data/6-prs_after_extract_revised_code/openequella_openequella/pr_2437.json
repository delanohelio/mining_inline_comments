{"pr_number": 2437, "pr_title": "Feature/integrate new search page in selection section", "pr_createdAt": "2020-10-19T06:16:56Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2437", "timeline": [{"oid": "b99fc0c6e7f4bb7332e976a757a441073533b3e6", "url": "https://github.com/openequella/openEQUELLA/commit/b99fc0c6e7f4bb7332e976a757a441073533b3e6", "message": "Display new search ui in Selection Section.", "committedDate": "2020-10-19T03:32:11Z", "type": "commit"}, {"oid": "bf5b601a3818474255f3327418857202cb71fefe", "url": "https://github.com/openequella/openEQUELLA/commit/bf5b601a3818474255f3327418857202cb71fefe", "message": "Add the new search page entry files in 'entrybuild'.", "committedDate": "2020-10-19T03:32:36Z", "type": "commit"}, {"oid": "149699d1856b8ad7479daf79fe638a58ca2c2f7a", "url": "https://github.com/openequella/openEQUELLA/commit/149699d1856b8ad7479daf79fe638a58ca2c2f7a", "message": "Rename the ID of new search page DIV.", "committedDate": "2020-10-19T03:32:49Z", "type": "commit"}, {"oid": "d2e7120b78cd11b66b06c72049a57facc0d32587", "url": "https://github.com/openequella/openEQUELLA/commit/d2e7120b78cd11b66b06c72049a57facc0d32587", "message": "Fix a broken comment format for RootSearchSection.", "committedDate": "2020-10-19T03:33:01Z", "type": "commit"}, {"oid": "8c7f31a63d3f4a43a79c0fbdab192748a9f3d39b", "url": "https://github.com/openequella/openEQUELLA/commit/8c7f31a63d3f4a43a79c0fbdab192748a9f3d39b", "message": "Selection Section CSS styles tweaks\n\n1. Make sure the new search UI display properly.\n2. Also improve other pages and the LMS side panel.", "committedDate": "2020-10-19T03:33:10Z", "type": "commit"}, {"oid": "7e0317a129fe3e54409b6c39ad572895fce45535", "url": "https://github.com/openequella/openEQUELLA/commit/7e0317a129fe3e54409b6c39ad572895fce45535", "message": "Show new search page in Selection Section when the mode is\n'structured'.", "committedDate": "2020-10-19T05:22:53Z", "type": "commit"}, {"oid": "5c2d907eaea575b90e1ddd0e90a1e40d9f1e6ec2", "url": "https://github.com/openequella/openEQUELLA/commit/5c2d907eaea575b90e1ddd0e90a1e40d9f1e6ec2", "message": "Improve the UI of Selection Section when it's in\n'selectOrAdd' mode.", "committedDate": "2020-10-19T06:06:00Z", "type": "commit"}, {"oid": "e789f2060cf834d7216027c5b486eb1fb20801ef", "url": "https://github.com/openequella/openEQUELLA/commit/e789f2060cf834d7216027c5b486eb1fb20801ef", "message": "Create header for RenderNewSearchPage.scala", "committedDate": "2020-10-19T22:26:13Z", "type": "commit"}, {"oid": "58d4cb55bbf970cf9dec9421315f3d6cf21295f1", "url": "https://github.com/openequella/openEQUELLA/commit/58d4cb55bbf970cf9dec9421315f3d6cf21295f1", "message": "Ensure CSS changes made for Selection Section do not\napply to other UI pages", "committedDate": "2020-10-20T00:42:05Z", "type": "commit"}, {"oid": "7fd77379af2b162c92a40cbd6c274fed27d8f7f0", "url": "https://github.com/openequella/openEQUELLA/commit/7fd77379af2b162c92a40cbd6c274fed27d8f7f0", "message": "Remove MUI class name conflicts in production environment.\n\nLoading NewSearchPage.tsx in Selection Section with New UI turned\non causes MUI class name conflicts. For example, there would be\ntwo styles named 'jss1'. This can be fixed by using 'Class Name\ngenerator' to differentiate styles.", "committedDate": "2020-10-21T01:16:59Z", "type": "commit"}, {"oid": "5cc78ca3e58394efb5c6e1127469e8642ff08560", "url": "https://github.com/openequella/openEQUELLA/commit/5cc78ca3e58394efb5c6e1127469e8642ff08560", "message": "Also display new search UI when Selection Session is in\nNORMAL layout.", "committedDate": "2020-10-21T03:28:30Z", "type": "commit"}, {"oid": "85357985dd7c44c219b455141f6df02331a6d0bc", "url": "https://github.com/openequella/openEQUELLA/commit/85357985dd7c44c219b455141f6df02331a6d0bc", "message": "Ensure new search UI displays properly with the Two Column\nLayout in Selection Session.", "committedDate": "2020-10-21T03:45:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyMDkzMA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510620930", "bodyText": "The below code is not immediately clear, as it seems it has gone more with a pattern of augmentation. I wonder if instead the above code can be broken into a few useful private methods, and then further up in this method the below if becomes part of an if/else.", "author": "edalex-ian", "createdAt": "2020-10-23T05:39:00Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java", "diffHunk": "@@ -104,6 +106,20 @@ protected TemplateResult getTemplateResult(RenderEventContext info) {\n     templateResult.addNamedResult(\n         OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n \n+    // If new search UI should be rendered, keep the right column content and override", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1263d7e562fd1bf35830c0efe32e51da0342e01", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java\nindex 32d8072cb..456699187 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java\n\n@@ -82,45 +81,52 @@ public abstract class AbstractRootSearchSection<M extends AbstractRootSearchSect\n     CombinedTemplateResult templateResult = new CombinedTemplateResult();\n     M model = getModel(info);\n     SectionId modalSection = model.getModalSection();\n+    SimpleSectionResult newSearchUIContent = model.getNewSearchUIContent();\n+\n     if (modalSection != null) {\n       templateResult.addNamedResult(\n           OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n       templateResult.addResult(\n           OneColumnLayout.BODY, SectionUtils.renderSectionResult(info, modalSection));\n-      return templateResult;\n-    }\n-\n-    SectionRenderable bodyHeader = getBodyHeader(info);\n-    if (bodyHeader != null) {\n-      templateResult.addNamedResult(OneColumnLayout.BODY, bodyHeader);\n     }\n-    List<SectionId> children = getChildIds(info);\n-    for (SectionId childId : children) {\n-      String side = info.getLayout(childId.getSectionId());\n \n-      if (!TwoColumnLayout.RIGHT.equals(side)) {\n-        side = OneColumnLayout.BODY;\n+    // The only case where newSearchUIContent is NOT null is rendering the new Search UI\n+    // in selection session and selection session is using the NORMAL layout. This layout\n+    // contains two named columns: left and right.\n+    else if (newSearchUIContent != null) {\n+      // Firstly, find out child sections which use 'TwoColumnLayout.RIGHT', and\n+      // add their contents to the 'right' column.\n+      // Secondly, add the new search UI content with a name being 'body' to the template,\n+      // and 'body' will get merged to 'left' column later in method 'setupTemplate'.\n+\n+      getChildIds(info).stream()\n+          .filter(childId -> TwoColumnLayout.RIGHT.equals(info.getLayout(childId.getSectionId())))\n+          .forEach(\n+              childId ->\n+                  templateResult.addResult(\n+                      TwoColumnLayout.RIGHT, SectionUtils.renderSectionResult(info, childId)));\n+\n+      templateResult.addNamedResult(OneColumnLayout.BODY, model.getNewSearchUIContent());\n+    } else {\n+      SectionRenderable bodyHeader = getBodyHeader(info);\n+      if (bodyHeader != null) {\n+        templateResult.addNamedResult(OneColumnLayout.BODY, bodyHeader);\n       }\n-      templateResult.addResult(side, SectionUtils.renderSectionResult(info, childId));\n-    }\n-    templateResult.addNamedResult(\n-        OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n-\n-    // If new search UI should be rendered, keep the right column content and override\n-    // the body content with new search UI.\n-    if (model.isNewSearchUIInNormalLayout()) {\n-      TemplateRenderable rightColumnContent =\n-          templateResult.getNamedResult(info, TwoColumnLayout.RIGHT);\n-\n-      CombinedTemplateResult twoColumnLayoutForNewSearchUI = new CombinedTemplateResult();\n-      twoColumnLayoutForNewSearchUI.addNamedResult(\n-          OneColumnLayout.BODY, model.getNewSearchUIContent());\n-      twoColumnLayoutForNewSearchUI.addNamedResult(TwoColumnLayout.RIGHT, rightColumnContent);\n+      List<SectionId> children = getChildIds(info);\n+      for (SectionId childId : children) {\n+        String side = info.getLayout(childId.getSectionId());\n+\n+        if (!TwoColumnLayout.RIGHT.equals(side)) {\n+          side = OneColumnLayout.BODY;\n+        }\n+        templateResult.addResult(side, SectionUtils.renderSectionResult(info, childId));\n+      }\n+      templateResult.addNamedResult(\n+          OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n \n-      return twoColumnLayoutForNewSearchUI;\n+      addBlueBarBits(info, templateResult);\n     }\n \n-    addBlueBarBits(info, templateResult);\n     return templateResult;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyMTMxOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510621318", "bodyText": "Could this fail to getNamedResult?", "author": "edalex-ian", "createdAt": "2020-10-23T05:39:23Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java", "diffHunk": "@@ -104,6 +106,20 @@ protected TemplateResult getTemplateResult(RenderEventContext info) {\n     templateResult.addNamedResult(\n         OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n \n+    // If new search UI should be rendered, keep the right column content and override\n+    // the body content with new search UI.\n+    if (model.isNewSearchUIInNormalLayout()) {\n+      TemplateRenderable rightColumnContent =\n+          templateResult.getNamedResult(info, TwoColumnLayout.RIGHT);", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1263d7e562fd1bf35830c0efe32e51da0342e01", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java\nindex 32d8072cb..456699187 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java\n\n@@ -82,45 +81,52 @@ public abstract class AbstractRootSearchSection<M extends AbstractRootSearchSect\n     CombinedTemplateResult templateResult = new CombinedTemplateResult();\n     M model = getModel(info);\n     SectionId modalSection = model.getModalSection();\n+    SimpleSectionResult newSearchUIContent = model.getNewSearchUIContent();\n+\n     if (modalSection != null) {\n       templateResult.addNamedResult(\n           OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n       templateResult.addResult(\n           OneColumnLayout.BODY, SectionUtils.renderSectionResult(info, modalSection));\n-      return templateResult;\n-    }\n-\n-    SectionRenderable bodyHeader = getBodyHeader(info);\n-    if (bodyHeader != null) {\n-      templateResult.addNamedResult(OneColumnLayout.BODY, bodyHeader);\n     }\n-    List<SectionId> children = getChildIds(info);\n-    for (SectionId childId : children) {\n-      String side = info.getLayout(childId.getSectionId());\n \n-      if (!TwoColumnLayout.RIGHT.equals(side)) {\n-        side = OneColumnLayout.BODY;\n+    // The only case where newSearchUIContent is NOT null is rendering the new Search UI\n+    // in selection session and selection session is using the NORMAL layout. This layout\n+    // contains two named columns: left and right.\n+    else if (newSearchUIContent != null) {\n+      // Firstly, find out child sections which use 'TwoColumnLayout.RIGHT', and\n+      // add their contents to the 'right' column.\n+      // Secondly, add the new search UI content with a name being 'body' to the template,\n+      // and 'body' will get merged to 'left' column later in method 'setupTemplate'.\n+\n+      getChildIds(info).stream()\n+          .filter(childId -> TwoColumnLayout.RIGHT.equals(info.getLayout(childId.getSectionId())))\n+          .forEach(\n+              childId ->\n+                  templateResult.addResult(\n+                      TwoColumnLayout.RIGHT, SectionUtils.renderSectionResult(info, childId)));\n+\n+      templateResult.addNamedResult(OneColumnLayout.BODY, model.getNewSearchUIContent());\n+    } else {\n+      SectionRenderable bodyHeader = getBodyHeader(info);\n+      if (bodyHeader != null) {\n+        templateResult.addNamedResult(OneColumnLayout.BODY, bodyHeader);\n       }\n-      templateResult.addResult(side, SectionUtils.renderSectionResult(info, childId));\n-    }\n-    templateResult.addNamedResult(\n-        OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n-\n-    // If new search UI should be rendered, keep the right column content and override\n-    // the body content with new search UI.\n-    if (model.isNewSearchUIInNormalLayout()) {\n-      TemplateRenderable rightColumnContent =\n-          templateResult.getNamedResult(info, TwoColumnLayout.RIGHT);\n-\n-      CombinedTemplateResult twoColumnLayoutForNewSearchUI = new CombinedTemplateResult();\n-      twoColumnLayoutForNewSearchUI.addNamedResult(\n-          OneColumnLayout.BODY, model.getNewSearchUIContent());\n-      twoColumnLayoutForNewSearchUI.addNamedResult(TwoColumnLayout.RIGHT, rightColumnContent);\n+      List<SectionId> children = getChildIds(info);\n+      for (SectionId childId : children) {\n+        String side = info.getLayout(childId.getSectionId());\n+\n+        if (!TwoColumnLayout.RIGHT.equals(side)) {\n+          side = OneColumnLayout.BODY;\n+        }\n+        templateResult.addResult(side, SectionUtils.renderSectionResult(info, childId));\n+      }\n+      templateResult.addNamedResult(\n+          OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n \n-      return twoColumnLayoutForNewSearchUI;\n+      addBlueBarBits(info, templateResult);\n     }\n \n-    addBlueBarBits(info, templateResult);\n     return templateResult;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyMjA5Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510622092", "bodyText": "I reckon a bit of JavaDoc would go a long way here to help readers understand what you mean by 'Normal Layout'.", "author": "edalex-ian", "createdAt": "2020-10-23T05:40:07Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java", "diffHunk": "@@ -150,5 +168,21 @@ public InfoBookmark getPermanentUrl() {\n     public void setPermanentUrl(InfoBookmark permanentUrl) {\n       this.permanentUrl = permanentUrl;\n     }\n+\n+    public boolean isNewSearchUIInNormalLayout() {", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMjkyOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r513102928", "bodyText": "I think this method is redundant so I remove it.", "author": "PenghaiZhang", "createdAt": "2020-10-28T00:05:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyMjA5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a1263d7e562fd1bf35830c0efe32e51da0342e01", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java\nindex 32d8072cb..456699187 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java\n\n@@ -169,14 +174,6 @@ public abstract class AbstractRootSearchSection<M extends AbstractRootSearchSect\n       this.permanentUrl = permanentUrl;\n     }\n \n-    public boolean isNewSearchUIInNormalLayout() {\n-      return newSearchUIInNormalLayout;\n-    }\n-\n-    public void setNewSearchUIInNormalLayout(boolean newSearchUIInNormalLayout) {\n-      this.newSearchUIInNormalLayout = newSearchUIInNormalLayout;\n-    }\n-\n     public SimpleSectionResult getNewSearchUIContent() {\n       return newSearchUIContent;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyNjIwOQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510626209", "bodyText": "Should this be an else if, and then follow with an else to throw an IllegalStateException if we've ended up with an unexpected Layout? Or are there only two Layouts? (Maybe if there are only two, we might want to protect from the unknown future.", "author": "edalex-ian", "createdAt": "2020-10-23T05:44:39Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java", "diffHunk": "@@ -80,6 +85,21 @@ public SectionResult renderHtml(RenderEventContext context) {\n       throw new AccessDeniedException(\n           urlHelper.getString(\"missingprivileges\", WebConstants.SEARCH_PAGE_PRIVILEGE));\n     }\n+\n+    // If this method is triggered from Selection Section, then check if Selection Section\n+    // is in 'structured' mode. If yes, then render the new search page if it's enabled.\n+    SelectionSession selectionSession = selectionService.getCurrentSession(context);\n+    if (isNewSearchUIInSelectionSession(selectionSession)) {\n+      SimpleSectionResult newSearchUIContent = RenderNewSearchPage.renderNewSearchPage(context);\n+      // For 'structured' layout, output the new search UI content directly.\n+      // For 'addOrSelected' layout, save the content in model.\n+      if (selectionSession.getLayout() == Layout.COURSE) {\n+        return newSearchUIContent;\n+      } else {", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MTY3Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r513791673", "bodyText": "After more digging I realised that there is no need to check what layout is used.\nBut to answer your question, there are three layouts: NORMAL, COURSE, SKINNY. So far, I have seen NORMAL and COURSE in selection session. Take Moodle as an example, if the openEQUELLA action is configured to use selectOrAdd then NORMAL is used, and if that's configured to use 'structured' then COURSE is used.", "author": "PenghaiZhang", "createdAt": "2020-10-28T22:09:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyNjIwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "a1263d7e562fd1bf35830c0efe32e51da0342e01", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\nindex 1eb65b207..63d5b393f 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n\n@@ -96,7 +96,6 @@ public class RootSearchSection extends ContextableSearchSection<ContextableSearc\n       if (selectionSession.getLayout() == Layout.COURSE) {\n         return newSearchUIContent;\n       } else {\n-        getModel(context).setNewSearchUIInNormalLayout(true);\n         getModel(context).setNewSearchUIContent(newSearchUIContent);\n       }\n     }\n"}}, {"oid": "188bd95b7208f07a32d0ac4363d860e8c4859fd1", "url": "https://github.com/openequella/openEQUELLA/commit/188bd95b7208f07a32d0ac4363d860e8c4859fd1", "message": "Remove folder 'entrydev' and rename 'entrybuild' to\n'entrypoint'.", "committedDate": "2020-10-26T01:08:19Z", "type": "commit"}, {"oid": "aca1cbbaa9a34ce4f10abf48eaaa1c8452ae9d83", "url": "https://github.com/openequella/openEQUELLA/commit/aca1cbbaa9a34ce4f10abf48eaaa1c8452ae9d83", "message": "Update the js entry path used in 'package.json' and\n'tsconfig.json'.", "committedDate": "2020-10-26T02:56:46Z", "type": "commit"}, {"oid": "7932628147cb14e39b80f6ccf352393d99134685", "url": "https://github.com/openequella/openEQUELLA/commit/7932628147cb14e39b80f6ccf352393d99134685", "message": "Let the default function of 'index.tsx' take an argument\nwhich indicates where the function is called.", "committedDate": "2020-10-26T03:23:31Z", "type": "commit"}, {"oid": "d944d3eb4f1971f9534b2feabc6f653f484c1e7f", "url": "https://github.com/openequella/openEQUELLA/commit/d944d3eb4f1971f9534b2feabc6f653f484c1e7f", "message": "Update the html and ts files under 'entrypoint'\n\n1. Each html file now has their own ts file.\n2. Each ts file calls the default function of 'Index.tsx' with\na string literal argument.", "committedDate": "2020-10-26T03:40:56Z", "type": "commit"}, {"oid": "15573e4944b3e89d18fe18612c4c19611b5d4901", "url": "https://github.com/openequella/openEQUELLA/commit/15573e4944b3e89d18fe18612c4c19611b5d4901", "message": "Use 'runtypes' to determine what component should be rendered.", "committedDate": "2020-10-26T05:42:22Z", "type": "commit"}, {"oid": "f37e4482cd9384e989c3d106a70052600ebe14cc", "url": "https://github.com/openequella/openEQUELLA/commit/f37e4482cd9384e989c3d106a70052600ebe14cc", "message": "Use 'runtypes' to match the entry JS file", "committedDate": "2020-10-27T02:56:33Z", "type": "commit"}, {"oid": "3a76ecc0b149d3e0c1d493a8c51bb5df1ad9af0b", "url": "https://github.com/openequella/openEQUELLA/commit/3a76ecc0b149d3e0c1d493a8c51bb5df1ad9af0b", "message": "More Css work for selection session\n\n1. Make sure all pages have consistent horizontal margin by reusing\npre-defined variable '$doubleMargin'.\n\n2. Improve the LMS side panel in Normal layout.\n\n3. Adjust the width of contribution page.\n\n4. Add comments to explain the purposes of some styles.", "committedDate": "2020-10-27T04:58:25Z", "type": "commit"}, {"oid": "a1263d7e562fd1bf35830c0efe32e51da0342e01", "url": "https://github.com/openequella/openEQUELLA/commit/a1263d7e562fd1bf35830c0efe32e51da0342e01", "message": "Refactor the logic of generating contents of AbstractRootSearchSection.", "committedDate": "2020-10-28T01:05:01Z", "type": "commit"}, {"oid": "63ad4a65b5a31f9f4e13c35742441a24b80adcdf", "url": "https://github.com/openequella/openEQUELLA/commit/63ad4a65b5a31f9f4e13c35742441a24b80adcdf", "message": "Override the CSS of 'mainCols' and 'col2' in different contexts.", "committedDate": "2020-10-28T01:06:11Z", "type": "commit"}, {"oid": "ecd45a7d8cb01ca66324ebf3898ef3c85d591d45", "url": "https://github.com/openequella/openEQUELLA/commit/ecd45a7d8cb01ca66324ebf3898ef3c85d591d45", "message": "Update how to render new search UI in selection\nsession.\n\nThe previous approach results in unnecessary DOM tree\ndifferences: in COURSE layout new search UI is just under\n'selection-content-inner' whereas in NORMAL layout it is\nunder 'selection-content-inner/mainCols/col1'. This commit\nensure the DOM tree keeps consistent. By doing this, some\nCSS styles made previously can be removed.", "committedDate": "2020-10-29T06:57:32Z", "type": "commit"}, {"oid": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "url": "https://github.com/openequella/openEQUELLA/commit/b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "message": "Remove unused imports in RootSearchSection", "committedDate": "2020-10-29T08:42:07Z", "type": "commit"}, {"oid": "5ce22a021f6a69b69c19ed9424ccb697e98c5b9f", "url": "https://github.com/openequella/openEQUELLA/commit/5ce22a021f6a69b69c19ed9424ccb697e98c5b9f", "message": "Merge branch 'component/new-search-page-in-selection-section' into feature/integrate-new-search-page-in-selection-section", "committedDate": "2020-11-02T05:43:12Z", "type": "commit"}, {"oid": "16122511c64fad3d2c788bef7c7536337bbe2082", "url": "https://github.com/openequella/openEQUELLA/commit/16122511c64fad3d2c788bef7c7536337bbe2082", "message": "Use the pinned version of 'runtypes'.", "committedDate": "2020-11-02T05:44:41Z", "type": "commit"}, {"oid": "9ae3500c57175e0a27447c9a3c715063e4ca64c3", "url": "https://github.com/openequella/openEQUELLA/commit/9ae3500c57175e0a27447c9a3c715063e4ca64c3", "message": "Wrap component IndexPage by ThemeProvider in App.tsx.", "committedDate": "2020-11-02T05:51:08Z", "type": "commit"}, {"oid": "839057e9546c2fb6b871a864c10366a0e14e1aec", "url": "https://github.com/openequella/openEQUELLA/commit/839057e9546c2fb6b871a864c10366a0e14e1aec", "message": "Reuse sass mixin 'curvedCorners' in CSS class 'box_head'\nand 'box_content'.", "committedDate": "2020-11-02T06:04:48Z", "type": "commit"}, {"oid": "d91192b3da938c05138ac8705a6368c8157eb4cd", "url": "https://github.com/openequella/openEQUELLA/commit/d91192b3da938c05138ac8705a6368c8157eb4cd", "message": "A couple tweaks for 'App.tsx'.\n\n1. Rename 'page' to 'children' for 'NewPageProps' and update\nhow 'children' is passed into 'NewPage'.\n2. Rename function 'emptyFunc' to 'nop'.", "committedDate": "2020-11-02T22:30:59Z", "type": "commit"}, {"oid": "b4084222b0d63147b1e9805de09e700274882465", "url": "https://github.com/openequella/openEQUELLA/commit/b4084222b0d63147b1e9805de09e700274882465", "message": "Move the compiled 'uploadlist.js' to the correct target folder.", "committedDate": "2020-11-03T02:45:40Z", "type": "commit"}, {"oid": "7c636222ec7d9916f7155ad8dfec057e63cf8ef2", "url": "https://github.com/openequella/openEQUELLA/commit/7c636222ec7d9916f7155ad8dfec057e63cf8ef2", "message": "Clean up the NPM scripts for Parcel build/watch.", "committedDate": "2020-11-03T03:04:14Z", "type": "commit"}, {"oid": "7e9f5f3e6d38383680ba7a2bfc3f1d7eb3c22553", "url": "https://github.com/openequella/openEQUELLA/commit/7e9f5f3e6d38383680ba7a2bfc3f1d7eb3c22553", "message": "Update react route to ensure new search UI displays\nproperly in Selection Session.", "committedDate": "2020-11-04T04:25:00Z", "type": "commit"}, {"oid": "6868196bdbebadae9a708b0c336369d2679da32f", "url": "https://github.com/openequella/openEQUELLA/commit/6868196bdbebadae9a708b0c336369d2679da32f", "message": "Revert \"Update react route to ensure new search UI displays\"\n\nThis reverts commit 7e9f5f3e6d38383680ba7a2bfc3f1d7eb3c22553.", "committedDate": "2020-11-05T04:30:23Z", "type": "commit"}, {"oid": "38a5481ea4fd8f92a41ebe17d7189803136a7ec2", "url": "https://github.com/openequella/openEQUELLA/commit/38a5481ea4fd8f92a41ebe17d7189803136a7ec2", "message": "Support accessing Legacy Search page through\n'/access/selectoradd/searching.do'.\n\nThe intention of this commit is to differentiate the URL\nused to access the old Search UI from Selection Session.\nWith the changes made in #2414, once New Search UI is enabled,\n'searching.do' will be captured by react-route, which results\nin incorrect contents of Search page displayed in Selection\nSession. Therefore, we need to have a new URL to access old\nSearch page in Selection Session.", "committedDate": "2020-11-05T04:52:02Z", "type": "commit"}, {"oid": "fa77e5b06920ea2d4e8ee446b4b6cf34df2ec251", "url": "https://github.com/openequella/openEQUELLA/commit/fa77e5b06920ea2d4e8ee446b4b6cf34df2ec251", "message": "Reuse mixin 'buttonShadowBorder' for CSS class 'box'.", "committedDate": "2020-11-05T05:01:56Z", "type": "commit"}, {"oid": "adc09192d6b064403c861df6b90433df0f8328e1", "url": "https://github.com/openequella/openEQUELLA/commit/adc09192d6b064403c861df6b90433df0f8328e1", "message": "Remove unneeded prefix from the URL used to access\nold Search UI in 'selectoradd' mode.", "committedDate": "2020-11-05T05:14:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5OTU2MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r517799561", "bodyText": "I'm just wondering how this may inadvertently affect clients who are not using the new ui?\nI can't think of any specific examples, but it might be safe to check if the new UI is enabled before using this path?", "author": "mrblippy", "createdAt": "2020-11-05T05:24:41Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/selection/SearchSelectable.java", "diffHunk": "@@ -50,7 +50,7 @@ public SectionInfo createSectionInfo(SectionInfo info, SelectionSession session)\n \n   @SuppressWarnings(\"nls\")\n   protected SectionInfo getSearchTree(SectionInfo info) {\n-    return controller.createForward(info, \"/searching.do\");\n+    return controller.createForward(info, \"/selectoradd/searching.do\");", "originalCommit": "adc09192d6b064403c861df6b90433df0f8328e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "20437199406caf8006162e7958fc2fa430348370", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/selection/SearchSelectable.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/selection/SearchSelectable.java\nindex 0177ad7a6..dd0587c62 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/selection/SearchSelectable.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/selection/SearchSelectable.java\n\n@@ -50,7 +54,10 @@ public class SearchSelectable extends AbstractSelectionNavAction {\n \n   @SuppressWarnings(\"nls\")\n   protected SectionInfo getSearchTree(SectionInfo info) {\n-    return controller.createForward(info, \"/selectoradd/searching.do\");\n+    if (UISettingsJava.getUISettings().newUI().enabled()) {\n+      return controller.createForward(info, NEW_FORWARD_PATH);\n+    }\n+    return controller.createForward(info, LEGACY_FORWARD_PATH);\n   }\n \n   public void setController(SectionsController controller) {\n"}}, {"oid": "20437199406caf8006162e7958fc2fa430348370", "url": "https://github.com/openequella/openEQUELLA/commit/20437199406caf8006162e7958fc2fa430348370", "message": "Only forward to \"/selectoradd/searching.do\" when new\nUI is enabled.", "committedDate": "2020-11-05T05:45:24Z", "type": "commit"}]}