{"pr_number": 1426, "pr_title": "Convert the bb lti flow to a generic lti flow.", "pr_createdAt": "2020-01-13T21:37:10Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/1426", "timeline": [{"oid": "a6285ddfda3b1e201cebc232c503e88d57ecda99", "url": "https://github.com/openequella/openEQUELLA/commit/a6285ddfda3b1e201cebc232c503e88d57ecda99", "message": "Blackboard LTI to Generic LTI", "committedDate": "2020-01-07T21:44:06Z", "type": "commit"}, {"oid": "847f7e2d9c609dacac482042573575e3689216b0", "url": "https://github.com/openequella/openEQUELLA/commit/847f7e2d9c609dacac482042573575e3689216b0", "message": "Blackboard LTI to Generic LTI. Update in the GenericLtiWrapperExtension to allow custom parameters for userid and username", "committedDate": "2020-01-09T16:17:50Z", "type": "commit"}, {"oid": "755b0f0442e0e0ea3bda17da5c058dbae95c5484", "url": "https://github.com/openequella/openEQUELLA/commit/755b0f0442e0e0ea3bda17da5c058dbae95c5484", "message": "Generic LTI. Allow custom LTI attributes for userId and userName", "committedDate": "2020-01-10T15:06:53Z", "type": "commit"}, {"oid": "ac9cdd0f35d0a8fec782f645bf109799008280ca", "url": "https://github.com/openequella/openEQUELLA/commit/ac9cdd0f35d0a8fec782f645bf109799008280ca", "message": "Generic LTI: Labels and Editor improvements. UserName instead UserLoginId", "committedDate": "2020-01-13T13:47:08Z", "type": "commit"}, {"oid": "9e6d09b57b17073fe9ef786f8eef0746e22e7258", "url": "https://github.com/openequella/openEQUELLA/commit/9e6d09b57b17073fe9ef786f8eef0746e22e7258", "message": "Blackboard LTI to Generic LTI. Ignore the custom parameters in Canvas and D2L", "committedDate": "2020-01-13T18:06:38Z", "type": "commit"}, {"oid": "463bf37f926b1297f9d775caa2eb29b175086394", "url": "https://github.com/openequella/openEQUELLA/commit/463bf37f926b1297f9d775caa2eb29b175086394", "message": "Blackboard LTI to Generic LTI. Style improvements.", "committedDate": "2020-01-13T20:43:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MDk4NA==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366150984", "bodyText": "Being a new file, this is no longer needed. As we don't run the tooling to check for non-localised strings any more.", "author": "edalex-ian", "createdAt": "2020-01-14T04:46:07Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")", "originalCommit": "463bf37f926b1297f9d775caa2eb29b175086394", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "52114502a0bbbee4da158f3d01c1aa70db6da4c1", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java b/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java\nindex 8400a6b18..1651e10e1 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java\n\n@@ -21,11 +21,11 @@ package com.tle.integration.lti.generic;\n import com.tle.common.externaltools.constants.ExternalToolConstants;\n import com.tle.core.guice.Bind;\n import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import java.util.function.Supplier;\n import javax.inject.Singleton;\n import javax.servlet.http.HttpServletRequest;\n import org.apache.commons.lang.StringUtils;\n \n-@SuppressWarnings(\"nls\")\n @Bind\n @Singleton\n public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2Mjc2Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366162766", "bodyText": "This method has a number of issues which ultimately contribute to poor readability. Primarily this is duplication and excessive nesting. Further, a good chunk of it - including string literals is duplicated in a method further down. Including the method below, I offer the following for comparison:\nAs a comparison, I offer this:\n  private String getGenericLtiParam(HttpServletRequest request, String param,\n      Supplier<String> supplier) {\n    String family =\n        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n    if (StringUtils.isEmpty(family) || StringUtils.isEmpty(param)) {\n      // If invalid inputs provided\n      return null;\n    }\n\n    if (family.matches(\"(canvas)|(desire2learn)\")) {\n      // If request is for an LTI provider we have explicit support for\n      return null;\n    }\n\n    return supplier.get();\n  }\n\n  @Override\n  public String getUserId(HttpServletRequest request, String param) {\n    return getGenericLtiParam(request, param, () ->\n        request.getParameter(param)\n    );\n  }\nAs to why I also added the getGenericLtiParam() method, please read on below...", "author": "edalex-ian", "createdAt": "2020-01-14T05:55:02Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")\n+@Bind\n+@Singleton\n+public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n+  @Override\n+  public String getUserId(HttpServletRequest request) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param)) {\n+          if (request.getParameterMap().containsKey(param)) {\n+            return request.getParameter(param);\n+          }\n+        }\n+      }\n+    }", "originalCommit": "463bf37f926b1297f9d775caa2eb29b175086394", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3Mzg3OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366973879", "bodyText": "I like the idea to extract the duplicated code.  Thanks for the proposed code, it works fine.", "author": "ddelblanco", "createdAt": "2020-01-15T16:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2Mjc2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "52114502a0bbbee4da158f3d01c1aa70db6da4c1", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java b/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java\nindex 8400a6b18..1651e10e1 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java\n\n@@ -21,11 +21,11 @@ package com.tle.integration.lti.generic;\n import com.tle.common.externaltools.constants.ExternalToolConstants;\n import com.tle.core.guice.Bind;\n import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import java.util.function.Supplier;\n import javax.inject.Singleton;\n import javax.servlet.http.HttpServletRequest;\n import org.apache.commons.lang.StringUtils;\n \n-@SuppressWarnings(\"nls\")\n @Bind\n @Singleton\n public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2NDk1OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366164959", "bodyText": "As mentioned in the previous comment, this is a significant duplication of the above (with slight variation). As a result, it provides maintenance concerns - as well as previous concerns around readability.\nContinuing on from the previous code recommendation, this then would look like:\n  public String getUsername(HttpServletRequest request, String param) {\n    return getGenericLtiParam(request, param, () -> {\n      String username = request.getParameter(param);\n      if (StringUtils.isEmpty(username)) {\n        username = request.getParameter(ExternalToolConstants.LIS_PERSON_SOURCEDID);\n      }\n\n      return username;\n    });\n  }", "author": "edalex-ian", "createdAt": "2020-01-14T06:06:44Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")\n+@Bind\n+@Singleton\n+public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n+  @Override\n+  public String getUserId(HttpServletRequest request) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param)) {\n+          if (request.getParameterMap().containsKey(param)) {\n+            return request.getParameter(param);\n+          }\n+        }\n+      }\n+    }\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUsername(HttpServletRequest request) {\n+    return getUsername(request, null);\n+  }\n+\n+  @Override\n+  public String getUsername(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param) && request.getParameterMap().containsKey(param)) {\n+          return request.getParameter(param);\n+        }\n+        return request.getParameter(ExternalToolConstants.LIS_PERSON_SOURCEDID);\n+      }\n+    }\n+    return null;\n+  }", "originalCommit": "463bf37f926b1297f9d775caa2eb29b175086394", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3NDAyNA==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366974024", "bodyText": "Same as before. Changing it.", "author": "ddelblanco", "createdAt": "2020-01-15T16:25:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2NDk1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "52114502a0bbbee4da158f3d01c1aa70db6da4c1", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java b/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java\nindex 8400a6b18..1651e10e1 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java\n\n@@ -21,11 +21,11 @@ package com.tle.integration.lti.generic;\n import com.tle.common.externaltools.constants.ExternalToolConstants;\n import com.tle.core.guice.Bind;\n import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import java.util.function.Supplier;\n import javax.inject.Singleton;\n import javax.servlet.http.HttpServletRequest;\n import org.apache.commons.lang.StringUtils;\n \n-@SuppressWarnings(\"nls\")\n @Bind\n @Singleton\n public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n"}}, {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1", "url": "https://github.com/openequella/openEQUELLA/commit/52114502a0bbbee4da158f3d01c1aa70db6da4c1", "message": "Blackboard LTI to Generic LTI. Style improvements in GenericLTIWrapperExtension. Remove nls tes", "committedDate": "2020-01-15T16:22:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5Mzk2Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367193962", "bodyText": "I would pass the actual LtiConsumer object instead of param.  The GenericLtiWrapperExtension can pull out its specific param, and custom wrappers like Canvas can do what it likes to get its own custom parameters out of the LtiConsumer", "author": "abidingotter", "createdAt": "2020-01-16T01:40:29Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "diffHunk": "@@ -32,11 +33,33 @@ public String getUserId(HttpServletRequest request) {\n     return null;\n   }\n \n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {", "originalCommit": "52114502a0bbbee4da158f3d01c1aa70db6da4c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAwNTg2MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368005861", "bodyText": "\ud83d\udc4d", "author": "cbeach47", "createdAt": "2020-01-17T15:52:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5Mzk2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNDkxNg==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368704916", "bodyText": "done.", "author": "cbeach47", "createdAt": "2020-01-20T19:49:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5Mzk2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "80b5e1c2898c64c165b8786342e5023eb20654ba", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java\nindex dac13fd1f..518fab327 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java\n\n@@ -19,47 +19,29 @@\n package com.tle.web.lti.usermanagement;\n \n import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.common.lti.consumers.entity.LtiConsumer;\n import com.tle.core.guice.Bind;\n import javax.inject.Singleton;\n import javax.servlet.http.HttpServletRequest;\n-import org.apache.commons.lang.StringUtils;\n \n /** @author Aaron */\n+\n+// FIXME: With the new GenericLtiWrapperExtension, this code shouldn't be called anymore\n+\n @Bind\n @Singleton\n public class LisLtiWrapperExtension implements LtiWrapperExtension {\n-  @Override\n-  public String getUserId(HttpServletRequest request) {\n-    return null;\n-  }\n \n   @Override\n-  public String getUserId(HttpServletRequest request, String param) {\n-    if (StringUtils.isNotEmpty(param)) {\n-      return request.getParameter(param);\n-    } else {\n-      return getUserId(request);\n-    }\n+  public String getUserId(HttpServletRequest request, LtiConsumer consumer) {\n+    return null;\n   }\n \n   @Override\n-  public String getUsername(HttpServletRequest request) {\n+  public String getUsername(HttpServletRequest request, LtiConsumer consumer) {\n     return request.getParameter(ExternalToolConstants.LIS_PERSON_SOURCEDID);\n   }\n \n-  // FIXME: With the new GenericLtiWrapperExtension, this code shouldn't be called anymore\n-  // I added this method because the interface now defines it but in the future, this wrapper\n-  // can surely be removed.\n-\n-  @Override\n-  public String getUsername(HttpServletRequest request, String param) {\n-    if (StringUtils.isNotEmpty(param)) {\n-      return request.getParameter(param);\n-    } else {\n-      return getUsername(request);\n-    }\n-  }\n-\n   @Override\n   public String getFirstName(HttpServletRequest request) {\n     return request.getParameter(ExternalToolConstants.LIS_PERSON_NAME_GIVEN);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQzNg==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367194436", "bodyText": "Should remove this one", "author": "abidingotter", "createdAt": "2020-01-16T01:42:42Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);", "originalCommit": "52114502a0bbbee4da158f3d01c1aa70db6da4c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk5NTEwMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367995101", "bodyText": "\ud83d\udc4d", "author": "cbeach47", "createdAt": "2020-01-17T15:31:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNTIzNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368705235", "bodyText": "done.", "author": "cbeach47", "createdAt": "2020-01-20T19:50:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "80b5e1c2898c64c165b8786342e5023eb20654ba", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java\nindex efffa8dca..7966c48b6 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java\n\n@@ -20,22 +20,17 @@ package com.tle.web.lti.usermanagement;\n \n import com.tle.annotation.NonNullByDefault;\n import com.tle.annotation.Nullable;\n+import com.tle.common.lti.consumers.entity.LtiConsumer;\n import javax.servlet.http.HttpServletRequest;\n \n /** @author Aaron */\n @NonNullByDefault\n public interface LtiWrapperExtension {\n   @Nullable\n-  String getUserId(HttpServletRequest request);\n+  String getUserId(HttpServletRequest request, LtiConsumer consumer);\n \n   @Nullable\n-  String getUserId(HttpServletRequest request, String param);\n-\n-  @Nullable\n-  String getUsername(HttpServletRequest request);\n-\n-  @Nullable\n-  String getUsername(HttpServletRequest request, String param);\n+  String getUsername(HttpServletRequest request, LtiConsumer consumer);\n \n   @Nullable\n   String getFirstName(HttpServletRequest request);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQ4MA==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367194480", "bodyText": "Should remove this one", "author": "abidingotter", "createdAt": "2020-01-16T01:42:58Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);\n+\n   @Nullable\n   String getUsername(HttpServletRequest request);", "originalCommit": "52114502a0bbbee4da158f3d01c1aa70db6da4c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk5NTQ1OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367995459", "bodyText": "\ud83d\udc4d", "author": "cbeach47", "createdAt": "2020-01-17T15:32:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNDk5MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368704991", "bodyText": "done.", "author": "cbeach47", "createdAt": "2020-01-20T19:49:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQ4MA=="}], "type": "inlineReview", "revised_code": {"commit": "80b5e1c2898c64c165b8786342e5023eb20654ba", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java\nindex efffa8dca..7966c48b6 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java\n\n@@ -20,22 +20,17 @@ package com.tle.web.lti.usermanagement;\n \n import com.tle.annotation.NonNullByDefault;\n import com.tle.annotation.Nullable;\n+import com.tle.common.lti.consumers.entity.LtiConsumer;\n import javax.servlet.http.HttpServletRequest;\n \n /** @author Aaron */\n @NonNullByDefault\n public interface LtiWrapperExtension {\n   @Nullable\n-  String getUserId(HttpServletRequest request);\n+  String getUserId(HttpServletRequest request, LtiConsumer consumer);\n \n   @Nullable\n-  String getUserId(HttpServletRequest request, String param);\n-\n-  @Nullable\n-  String getUsername(HttpServletRequest request);\n-\n-  @Nullable\n-  String getUsername(HttpServletRequest request, String param);\n+  String getUsername(HttpServletRequest request, LtiConsumer consumer);\n \n   @Nullable\n   String getFirstName(HttpServletRequest request);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDU4Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367194583", "bodyText": "I would change String param to LtiConsumer consumer", "author": "abidingotter", "createdAt": "2020-01-16T01:43:24Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);", "originalCommit": "52114502a0bbbee4da158f3d01c1aa70db6da4c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk5NTYzMg==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367995632", "bodyText": "\ud83d\udc4d", "author": "cbeach47", "createdAt": "2020-01-17T15:32:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNTA3Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368705073", "bodyText": "done", "author": "cbeach47", "createdAt": "2020-01-20T19:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDU4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "80b5e1c2898c64c165b8786342e5023eb20654ba", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java\nindex efffa8dca..7966c48b6 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java\n\n@@ -20,22 +20,17 @@ package com.tle.web.lti.usermanagement;\n \n import com.tle.annotation.NonNullByDefault;\n import com.tle.annotation.Nullable;\n+import com.tle.common.lti.consumers.entity.LtiConsumer;\n import javax.servlet.http.HttpServletRequest;\n \n /** @author Aaron */\n @NonNullByDefault\n public interface LtiWrapperExtension {\n   @Nullable\n-  String getUserId(HttpServletRequest request);\n+  String getUserId(HttpServletRequest request, LtiConsumer consumer);\n \n   @Nullable\n-  String getUserId(HttpServletRequest request, String param);\n-\n-  @Nullable\n-  String getUsername(HttpServletRequest request);\n-\n-  @Nullable\n-  String getUsername(HttpServletRequest request, String param);\n+  String getUsername(HttpServletRequest request, LtiConsumer consumer);\n \n   @Nullable\n   String getFirstName(HttpServletRequest request);\n"}}, {"oid": "80b5e1c2898c64c165b8786342e5023eb20654ba", "url": "https://github.com/openequella/openEQUELLA/commit/80b5e1c2898c64c165b8786342e5023eb20654ba", "message": "bb-lti:  generalized user id prefix, revisions due to PR", "committedDate": "2020-01-20T19:13:30Z", "type": "commit"}, {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2", "url": "https://github.com/openequella/openEQUELLA/commit/e30b75c3ca07540d20200e824c0a69df6c5350a2", "message": "bb-lti:  minor code cleanup", "committedDate": "2020-01-20T19:57:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NTUwNg==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369375506", "bodyText": "You're right, we can probably delete it (and the reference to it in the plugin.xml)", "author": "abidingotter", "createdAt": "2020-01-22T05:27:30Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "diffHunk": "@@ -19,21 +19,26 @@\n package com.tle.web.lti.usermanagement;\n \n import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.common.lti.consumers.entity.LtiConsumer;\n import com.tle.core.guice.Bind;\n import javax.inject.Singleton;\n import javax.servlet.http.HttpServletRequest;\n \n /** @author Aaron */\n+", "originalCommit": "e30b75c3ca07540d20200e824c0a69df6c5350a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYzNzQ2OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369637469", "bodyText": "Since I'm not 100% sure the use case for LisLtiWrapperExtension, and I plan to backport this to 2019.1.3 so I don't want to remove functionality, I'm going to hold off for this effort.  I opened #1435 so there's visibility for future work", "author": "cbeach47", "createdAt": "2020-01-22T15:43:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NTUwNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NjE3NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369376175", "bodyText": "Should probably be called GenericLtiIntegration?", "author": "abidingotter", "createdAt": "2020-01-22T05:30:53Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/LtiIntegration.java", "diffHunk": "@@ -75,32 +74,16 @@\n @Singleton\n @NonNullByDefault\n @SuppressWarnings(\"nls\")\n-public class BlackboardLtiIntegration extends AbstractIntegrationService<BlackboardLtiSessionData> {\n-  private static final Logger LOGGER = Logger.getLogger(BlackboardLtiIntegration.class);\n-\n-  // TODO - I think all this can be removed.\n-  // Omitted logic for now...\n-  //\n-  // private static final String CUSTOM_CANVAS_COURSE_ID = \"custom_bb_course_id\";\n-  // private static final String CUSTOM_CANVAS_API_DOMAIN = \"custom_bb_api_domain\";\n-  // private static final String LIS_COURSE_OFFERING_SOURCEDID = \"lis_course_offering_sourcedid\";\n-  private static final String CONTENT_ITEM_SELECTION_REQUEST = \"ContentItemSelectionRequest\";\n+public class LtiIntegration extends AbstractIntegrationService<GenericLtiSessionData> {", "originalCommit": "e30b75c3ca07540d20200e824c0a69df6c5350a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcwNjYwNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369706605", "bodyText": "ah good point - done.", "author": "cbeach47", "createdAt": "2020-01-22T17:43:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NjE3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a0171caddcc34d6e7551d17d696fc95e6ba9ae20", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/LtiIntegration.java b/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiIntegration.java\nsimilarity index 98%\nrename from Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/LtiIntegration.java\nrename to Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiIntegration.java\nindex 6a6971ca5..81e012beb 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/LtiIntegration.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiIntegration.java\n\n@@ -74,13 +74,13 @@ import org.apache.log4j.Logger;\n @Singleton\n @NonNullByDefault\n @SuppressWarnings(\"nls\")\n-public class LtiIntegration extends AbstractIntegrationService<GenericLtiSessionData> {\n-  private static final Logger LOGGER = Logger.getLogger(LtiIntegration.class);\n+public class GenericLtiIntegration extends AbstractIntegrationService<GenericLtiSessionData> {\n+  private static final Logger LOGGER = Logger.getLogger(GenericLtiIntegration.class);\n \n   private static final String CONTENT_ITEM_SELECTION_REQUEST = \"ContentItemSelectionRequest\";\n \n   static {\n-    PluginResourceHandler.init(LtiIntegration.class);\n+    PluginResourceHandler.init(GenericLtiIntegration.class);\n   }\n \n   @PlugKey(\"integration.receipt.addedtolti\")\n"}}, {"oid": "a0171caddcc34d6e7551d17d696fc95e6ba9ae20", "url": "https://github.com/openequella/openEQUELLA/commit/a0171caddcc34d6e7551d17d696fc95e6ba9ae20", "message": "bb-lti:  rename to align with generic LTI", "committedDate": "2020-01-22T17:42:41Z", "type": "commit"}]}