{"pr_number": 2577, "pr_title": "Parse Youtube Date Modified dates properly", "pr_createdAt": "2020-12-02T05:46:38Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2577", "timeline": [{"oid": "80b24f26d2ee690568f5ee7afbce9f6b6eb322ef", "url": "https://github.com/openequella/openEQUELLA/commit/80b24f26d2ee690568f5ee7afbce9f6b6eb322ef", "message": "Parse Youtube Date Modified dates properly", "committedDate": "2020-12-02T05:40:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwMTUyMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r534201523", "bodyText": "Would this a be a place where Joda time, could be dropped in favor of java.Time?\nhttps://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-\nhttps://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toInstant--\nhttps://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#toEpochMilli--", "author": "ChristianMurphy", "createdAt": "2020-12-02T14:19:39Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java", "diffHunk": "@@ -45,7 +46,10 @@ public EquellaAttachmentBean serialize(Attachment attachment) {\n     ybean.setThumbUrl((String) cattach.getData(YoutubeUtils.PROPERTY_THUMB_URL));\n     ybean.setViewUrl((String) cattach.getData(YoutubeUtils.PROPERTY_PLAY_URL));\n     ybean.setCustomParameters((String) cattach.getData(YoutubeUtils.PROPERTY_PARAMETERS));\n-    final Long date = (Long) cattach.getData(YoutubeUtils.PROPERTY_DATE);\n+    final Long date =\n+        ISODateTimeFormat.dateTimeNoMillis()\n+            .parseDateTime((String) cattach.getData(YoutubeUtils.PROPERTY_DATE))\n+            .getMillis();", "originalCommit": "80b24f26d2ee690568f5ee7afbce9f6b6eb322ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "398d0ccce04fc0494f12359a1de50ef36d9c625d", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java\nindex f1b0e84f2..fcc5659be 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java\n\n@@ -46,13 +46,9 @@ public class YoutubeAttachmentSerializer extends AbstractAttachmentSerializer {\n     ybean.setThumbUrl((String) cattach.getData(YoutubeUtils.PROPERTY_THUMB_URL));\n     ybean.setViewUrl((String) cattach.getData(YoutubeUtils.PROPERTY_PLAY_URL));\n     ybean.setCustomParameters((String) cattach.getData(YoutubeUtils.PROPERTY_PARAMETERS));\n-    final Long date =\n-        ISODateTimeFormat.dateTimeNoMillis()\n-            .parseDateTime((String) cattach.getData(YoutubeUtils.PROPERTY_DATE))\n-            .getMillis();\n-    if (date != null) {\n-      ybean.setUploadedDate(new Date(date));\n-    }\n+    final Optional<Date> date =\n+        YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE));\n+    date.ifPresent(ybean::setUploadedDate);\n     ybean.setUploader((String) cattach.getData(YoutubeUtils.PROPERTY_AUTHOR));\n     final Object durationData = cattach.getData(YoutubeUtils.PROPERTY_DURATION);\n     String duration = null;\n"}}, {"oid": "5dd49cae5073083d559de899ad7dd622eb7e107d", "url": "https://github.com/openequella/openEQUELLA/commit/5dd49cae5073083d559de899ad7dd622eb7e107d", "message": "Write util function for parsing date", "committedDate": "2020-12-07T04:36:15Z", "type": "commit"}, {"oid": "398d0ccce04fc0494f12359a1de50ef36d9c625d", "url": "https://github.com/openequella/openEQUELLA/commit/398d0ccce04fc0494f12359a1de50ef36d9c625d", "message": "Rework Date parsing to use helper function", "committedDate": "2020-12-07T04:36:44Z", "type": "commit"}, {"oid": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "url": "https://github.com/openequella/openEQUELLA/commit/68b89709bafe17fdeef8cbac7fe9947256a9fde7", "message": "Fix up whitespaces on comments", "committedDate": "2020-12-07T05:07:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mzg0MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537253840", "bodyText": "In this case, the intermediate date variable is rather redundant. I'd keep it nice and tidy and simply have:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final Optional<Date> date =\n          \n          \n            \n                    YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE));\n          \n          \n            \n                date.ifPresent(ybean::setUploadedDate);\n          \n          \n            \n                YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE))\n          \n          \n            \n                  .ifPresent(ybean::setUploadedDate);", "author": "edalex-ian", "createdAt": "2020-12-07T06:09:30Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java", "diffHunk": "@@ -45,10 +46,9 @@ public EquellaAttachmentBean serialize(Attachment attachment) {\n     ybean.setThumbUrl((String) cattach.getData(YoutubeUtils.PROPERTY_THUMB_URL));\n     ybean.setViewUrl((String) cattach.getData(YoutubeUtils.PROPERTY_PLAY_URL));\n     ybean.setCustomParameters((String) cattach.getData(YoutubeUtils.PROPERTY_PARAMETERS));\n-    final Long date = (Long) cattach.getData(YoutubeUtils.PROPERTY_DATE);\n-    if (date != null) {\n-      ybean.setUploadedDate(new Date(date));\n-    }\n+    final Optional<Date> date =\n+        YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE));\n+    date.ifPresent(ybean::setUploadedDate);", "originalCommit": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "af6807076afa4f5f51ba2c61107fd435022d0dd8", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java\nindex fcc5659be..8e4c3f431 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java\n\n@@ -46,9 +44,8 @@ public class YoutubeAttachmentSerializer extends AbstractAttachmentSerializer {\n     ybean.setThumbUrl((String) cattach.getData(YoutubeUtils.PROPERTY_THUMB_URL));\n     ybean.setViewUrl((String) cattach.getData(YoutubeUtils.PROPERTY_PLAY_URL));\n     ybean.setCustomParameters((String) cattach.getData(YoutubeUtils.PROPERTY_PARAMETERS));\n-    final Optional<Date> date =\n-        YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE));\n-    date.ifPresent(ybean::setUploadedDate);\n+    YoutubeUtils.parseDateModifiedToDate(cattach.getData(YoutubeUtils.PROPERTY_DATE))\n+        .ifPresent(ybean::setUploadedDate);\n     ybean.setUploader((String) cattach.getData(YoutubeUtils.PROPERTY_AUTHOR));\n     final Object durationData = cattach.getData(YoutubeUtils.PROPERTY_DURATION);\n     String duration = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1NDQzOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537254438", "bodyText": "Similar to above.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          Optional<Date> parsedDate =\n          \n          \n            \n                              YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt());\n          \n          \n            \n                          parsedDate.ifPresent(\n          \n          \n            \n                              date -> result.setDate(dateRendererFactory.createDateRenderer(date)));\n          \n          \n            \n                          YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt())\n          \n          \n            \n                            .ifPresent(\n          \n          \n            \n                              date -> result.setDate(dateRendererFactory.createDateRenderer(date)));\n          \n      \n    \n    \n  \n\n(Unless I'm missing them being used somewhere else.)", "author": "edalex-ian", "createdAt": "2020-12-07T06:11:25Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeHandler.java", "diffHunk": "@@ -286,9 +287,10 @@ public void registered(String id, SectionTree tree) {\n \n               YoutubeResultOption result = new YoutubeResultOption(videoId);\n               result.setAuthor(new KeyLabel(ADD_AUTHOR_LABEL, vidInfo.getChannelTitle()));\n-              result.setDate(\n-                  dateRendererFactory.createDateRenderer(new Date(vidInfo.getPublishedAt())));\n-\n+              Optional<Date> parsedDate =\n+                  YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt());\n+              parsedDate.ifPresent(\n+                  date -> result.setDate(dateRendererFactory.createDateRenderer(date)));", "originalCommit": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "af6807076afa4f5f51ba2c61107fd435022d0dd8", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeHandler.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeHandler.java\nindex 5030d39d6..5eae837f1 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeHandler.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeHandler.java\n\n@@ -287,10 +285,8 @@ public class YoutubeHandler\n \n               YoutubeResultOption result = new YoutubeResultOption(videoId);\n               result.setAuthor(new KeyLabel(ADD_AUTHOR_LABEL, vidInfo.getChannelTitle()));\n-              Optional<Date> parsedDate =\n-                  YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt());\n-              parsedDate.ifPresent(\n-                  date -> result.setDate(dateRendererFactory.createDateRenderer(date)));\n+              YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt())\n+                  .ifPresent(date -> result.setDate(dateRendererFactory.createDateRenderer(date)));\n               String description = vidInfo.getDescription();\n               result.setDescription(\n                   Check.isEmpty(description)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1NTYyNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537255627", "bodyText": "As above. date redundant.", "author": "edalex-ian", "createdAt": "2020-12-07T06:14:41Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeViewableResource.java", "diffHunk": "@@ -188,11 +189,13 @@ public boolean isCustomThumb() {\n     }\n \n     // Uploaded\n-    Long date = (Long) youTubeAttachment.getData(YoutubeUtils.PROPERTY_DATE);\n-    if (date != null) {\n-      commonDetails.add(\n-          makeDetail(UPLOADED, dateRendererFactory.createDateRenderer(new Date(date))));\n-    }\n+    Optional<Date> date =", "originalCommit": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "af6807076afa4f5f51ba2c61107fd435022d0dd8", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeViewableResource.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeViewableResource.java\nindex 01f61a0da..a974f4a50 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeViewableResource.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeViewableResource.java\n\n@@ -189,13 +187,11 @@ public class YoutubeViewableResource extends AbstractWrappedResource {\n     }\n \n     // Uploaded\n-    Optional<Date> date =\n-        YoutubeUtils.parseDateModifiedToDate(\n-            (String) youTubeAttachment.getData(YoutubeUtils.PROPERTY_DATE));\n-    date.ifPresent(\n-        parsedDate ->\n-            commonDetails.add(\n-                makeDetail(UPLOADED, dateRendererFactory.createDateRenderer(parsedDate))));\n+    YoutubeUtils.parseDateModifiedToDate(youTubeAttachment.getData(YoutubeUtils.PROPERTY_DATE))\n+        .ifPresent(\n+            parsedDate ->\n+                commonDetails.add(\n+                    makeDetail(UPLOADED, dateRendererFactory.createDateRenderer(parsedDate))));\n \n     // Tags\n     String tags = (String) youTubeAttachment.getData(YoutubeUtils.PROPERTY_TAGS);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Njg1Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537256856", "bodyText": "Rewrapping into a generic exception can limit possibilities for callers. I'd say just drop the try/catch adn allow the DateTimeParseException to percolate. Or, if you feel it's handy to add the extra message, consider doing so but maybe go with a more meaningful exception - say, IllegalArgumentException or reuse DateTimeParseException.", "author": "edalex-ian", "createdAt": "2020-12-07T06:18:20Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java", "diffHunk": "@@ -55,6 +59,45 @@ public static String formatDuration(String duration) {\n     return String.format(format, seconds, minutes, hours);\n   }\n \n+  /**\n+   * Parses a date string returned from the Youtube Data API V3's \"modified\" entry for a given\n+   * Youtube search result. Returns a date epoch long.\n+   *\n+   * @param date The string to parse (Expects it to be in ISO_DATE_TIME format)\n+   * @return a long containing the date represented as the number of milliseconds since midnight\n+   *     January 1, 1970.\n+   * @throws RuntimeException when the date cannot be parsed.\n+   */\n+  public static Optional<Long> parseDateModifiedToMillis(String date) {\n+    Optional<Long> parsedDate;\n+    try {\n+      parsedDate =\n+          Optional.of(\n+              ZonedDateTime.parse(date, DateTimeFormatter.ISO_DATE_TIME)\n+                  .toInstant()\n+                  .toEpochMilli());\n+    } catch (DateTimeParseException e) {\n+      throw new RuntimeException(\"Unable to parse youtube date modified: \" + date, e);", "originalCommit": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNjI3MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537926271", "bodyText": "I think it's worth keeping the message. So I'll just throw a new DateTimeParseException with the message and the contents of the initial thrown one.", "author": "SammyIsConfused", "createdAt": "2020-12-07T23:57:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Njg1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "af6807076afa4f5f51ba2c61107fd435022d0dd8", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java\nindex 62a3a0cf5..cbc2bcb8e 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java\n\n@@ -77,7 +77,8 @@ public final class YoutubeUtils {\n                   .toInstant()\n                   .toEpochMilli());\n     } catch (DateTimeParseException e) {\n-      throw new RuntimeException(\"Unable to parse youtube date modified: \" + date, e);\n+      throw new DateTimeParseException(\n+          \"Unable to parse youtube date modified\", date, e.getErrorIndex());\n     }\n     return parsedDate;\n   }\n"}}, {"oid": "af6807076afa4f5f51ba2c61107fd435022d0dd8", "url": "https://github.com/openequella/openEQUELLA/commit/af6807076afa4f5f51ba2c61107fd435022d0dd8", "message": "Update the parser function to support existing v2 Youtube attachments", "committedDate": "2020-12-07T23:55:52Z", "type": "commit"}, {"oid": "a367caa555aed585ac67c25189503c382e30f8cd", "url": "https://github.com/openequella/openEQUELLA/commit/a367caa555aed585ac67c25189503c382e30f8cd", "message": "Remove stray <p> tag", "committedDate": "2020-12-07T23:58:44Z", "type": "commit"}, {"oid": "cf3371a3195c24babe8554dd40f3bce914acf24a", "url": "https://github.com/openequella/openEQUELLA/commit/cf3371a3195c24babe8554dd40f3bce914acf24a", "message": "Revert \"Remove stray <p> tag\"\n\nThis reverts commit a367caa555aed585ac67c25189503c382e30f8cd.", "committedDate": "2020-12-08T01:39:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk3ODU1MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537978551", "bodyText": "I like the rework of this method - and supporting calls. But, why not do an else if(date instanceof String) for this block, and then have a final else block which throws an IllegalArgumentException?\nBest to only assume if you have to.", "author": "edalex-ian", "createdAt": "2020-12-08T02:10:54Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java", "diffHunk": "@@ -86,14 +87,24 @@ public static String formatDuration(String duration) {\n    * Wrapper for parseDateModifiedToMillis which if present will return the date as a\n    * java.util.Date.\n    *\n-   * @param date The string to parse (Expects it to be in ISO_DATE_TIME format)\n+   * <p>Youtube Data API v3 returns ISO_DATE_TIME strings, but existing attachments returned from v2\n+   * will be stored as epoch millis, so this function supports both.\n+   *\n+   * @param date The date object to parse (Expects it to be a string in ISO_DATE_TIME format, or an\n+   *     epoch long)\n    * @return The date represented as a java.util.Date.\n    */\n-  public static Optional<Date> parseDateModifiedToDate(String date) {\n-    Optional<Long> parsedLong = parseDateModifiedToMillis(date);\n+  public static Optional<Date> parseDateModifiedToDate(Object date) {\n     Optional<Date> parsedDate = Optional.empty();\n-    if (parsedLong.isPresent()) {\n-      parsedDate = Optional.of(new Date(parsedLong.get()));\n+    if (date instanceof Long) {\n+      // if its a long, assume its an epoch long\n+      parsedDate = Optional.of(new Date((Long) date));\n+    } else {", "originalCommit": "cf3371a3195c24babe8554dd40f3bce914acf24a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4MzIzMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537983233", "bodyText": "Fixed in 3be02e2.", "author": "SammyIsConfused", "createdAt": "2020-12-08T02:24:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk3ODU1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "3be02e275a34d14f29021ac1d5093fd8ba85436a", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java\nindex cbc2bcb8e..f9bf3d7bb 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java\n\n@@ -93,18 +93,22 @@ public final class YoutubeUtils {\n    * @param date The date object to parse (Expects it to be a string in ISO_DATE_TIME format, or an\n    *     epoch long)\n    * @return The date represented as a java.util.Date.\n+   * @throws IllegalArgumentException if passed in Object is not an instance of long or string\n    */\n   public static Optional<Date> parseDateModifiedToDate(Object date) {\n     Optional<Date> parsedDate = Optional.empty();\n     if (date instanceof Long) {\n       // if its a long, assume its an epoch long\n       parsedDate = Optional.of(new Date((Long) date));\n-    } else {\n+    } else if (date instanceof String) {\n       // assume its an ISO_DATE_TIME string\n       Optional<Long> parsedLong = parseDateModifiedToMillis((String) date);\n       if (parsedLong.isPresent()) {\n         parsedDate = Optional.of(new Date(parsedLong.get()));\n       }\n+    } else {\n+      throw new IllegalArgumentException(\n+          \"Date object must be a long or a string. Unable to parse \" + date + \"as a date.\");\n     }\n     return parsedDate;\n   }\n"}}, {"oid": "3be02e275a34d14f29021ac1d5093fd8ba85436a", "url": "https://github.com/openequella/openEQUELLA/commit/3be02e275a34d14f29021ac1d5093fd8ba85436a", "message": "throw IllegalArgumentException if can't cast to long or string", "committedDate": "2020-12-08T02:23:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAyNTkxNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r538025915", "bodyText": "Is this not just something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Optional<Long> parsedLong = parseDateModifiedToMillis((String) date);\n          \n          \n            \n                  if (parsedLong.isPresent()) {\n          \n          \n            \n                    parsedDate = Optional.of(new Date(parsedLong.get()));\n          \n          \n            \n                  }\n          \n          \n            \n                  parsedDate = parseDateModifiedToMillis((String) date)\n          \n          \n            \n                    .map(millis -> new Date(millis));\n          \n      \n    \n    \n  \n\nI'm just freestyling there, but hopefully you get the idea.", "author": "edalex-ian", "createdAt": "2020-12-08T04:28:41Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java", "diffHunk": "@@ -55,6 +59,60 @@ public static String formatDuration(String duration) {\n     return String.format(format, seconds, minutes, hours);\n   }\n \n+  /**\n+   * Parses a date string returned from the Youtube Data API V3's \"modified\" entry for a given\n+   * Youtube search result. Returns a date epoch long.\n+   *\n+   * @param date The string to parse (Expects it to be in ISO_DATE_TIME format)\n+   * @return a long containing the date represented as the number of milliseconds since midnight\n+   *     January 1, 1970.\n+   * @throws RuntimeException when the date cannot be parsed.\n+   */\n+  public static Optional<Long> parseDateModifiedToMillis(String date) {\n+    Optional<Long> parsedDate;\n+    try {\n+      parsedDate =\n+          Optional.of(\n+              ZonedDateTime.parse(date, DateTimeFormatter.ISO_DATE_TIME)\n+                  .toInstant()\n+                  .toEpochMilli());\n+    } catch (DateTimeParseException e) {\n+      throw new DateTimeParseException(\n+          \"Unable to parse youtube date modified\", date, e.getErrorIndex());\n+    }\n+    return parsedDate;\n+  }\n+\n+  /**\n+   * Wrapper for parseDateModifiedToMillis which if present will return the date as a\n+   * java.util.Date.\n+   *\n+   * <p>Youtube Data API v3 returns ISO_DATE_TIME strings, but existing attachments returned from v2\n+   * will be stored as epoch millis, so this function supports both.\n+   *\n+   * @param date The date object to parse (Expects it to be a string in ISO_DATE_TIME format, or an\n+   *     epoch long)\n+   * @return The date represented as a java.util.Date.\n+   * @throws IllegalArgumentException if passed in Object is not an instance of long or string\n+   */\n+  public static Optional<Date> parseDateModifiedToDate(Object date) {\n+    Optional<Date> parsedDate = Optional.empty();\n+    if (date instanceof Long) {\n+      // if its a long, assume its an epoch long\n+      parsedDate = Optional.of(new Date((Long) date));\n+    } else if (date instanceof String) {\n+      // assume its an ISO_DATE_TIME string\n+      Optional<Long> parsedLong = parseDateModifiedToMillis((String) date);\n+      if (parsedLong.isPresent()) {\n+        parsedDate = Optional.of(new Date(parsedLong.get()));\n+      }", "originalCommit": "3be02e275a34d14f29021ac1d5093fd8ba85436a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNzkyMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r538037921", "bodyText": "You were close! It has to be flatMap.", "author": "SammyIsConfused", "createdAt": "2020-12-08T05:05:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAyNTkxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b7f97a993b4543ba80b0d09d0c2e1ce51da5e714", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java\nindex f9bf3d7bb..87ceb67b3 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java\n\n@@ -102,10 +102,9 @@ public final class YoutubeUtils {\n       parsedDate = Optional.of(new Date((Long) date));\n     } else if (date instanceof String) {\n       // assume its an ISO_DATE_TIME string\n-      Optional<Long> parsedLong = parseDateModifiedToMillis((String) date);\n-      if (parsedLong.isPresent()) {\n-        parsedDate = Optional.of(new Date(parsedLong.get()));\n-      }\n+      parsedDate =\n+          parseDateModifiedToMillis((String) date).flatMap(millis -> Optional.of(new Date(millis)));\n+\n     } else {\n       throw new IllegalArgumentException(\n           \"Date object must be a long or a string. Unable to parse \" + date + \"as a date.\");\n"}}, {"oid": "b7f97a993b4543ba80b0d09d0c2e1ce51da5e714", "url": "https://github.com/openequella/openEQUELLA/commit/b7f97a993b4543ba80b0d09d0c2e1ce51da5e714", "message": "Simplify function by using flatMap", "committedDate": "2020-12-08T05:06:59Z", "type": "commit"}]}