{"pr_number": 2308, "pr_title": "Bugfix/search page acl issues", "pr_createdAt": "2020-09-21T06:37:08Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2308", "timeline": [{"oid": "2620fffdfded393714516fcb144ed0bc766f15c2", "url": "https://github.com/openequella/openEQUELLA/commit/2620fffdfded393714516fcb144ed0bc766f15c2", "message": "Remove ACL checks from the GET endpoints of Search settings\nand Classifications.", "committedDate": "2020-09-21T06:11:15Z", "type": "commit"}, {"oid": "69e6fc86da2786a953ad91580b42af7ff7be7e14", "url": "https://github.com/openequella/openEQUELLA/commit/69e6fc86da2786a953ad91580b42af7ff7be7e14", "message": "Changes for PagedResults.scala\n\n1. When resumption token is generated, required ACLs for\naccessing entities should be taken into account.\n2. The number of maximum entities retrieved in one request\nis fixed to 200.\n3. Simplify method 'collectMore' and rename some variables\nand methods to improve readability.", "committedDate": "2020-09-21T06:11:15Z", "type": "commit"}, {"oid": "9e00ca17b1447039c7da5b829d75da918cfde3bc", "url": "https://github.com/openequella/openEQUELLA/commit/9e00ca17b1447039c7da5b829d75da918cfde3bc", "message": "Make 'commentCount' of interface 'SearchResultItem'\noptional.\n\nWithout permissions, one cannot get an item's comments\nso this field should be optional.", "committedDate": "2020-09-21T06:11:15Z", "type": "commit"}, {"oid": "9d4b6b4b27185ee0e1fae0c292a39089bd9a13e7", "url": "https://github.com/openequella/openEQUELLA/commit/9d4b6b4b27185ee0e1fae0c292a39089bd9a13e7", "message": "Add a new method to get comments with ACL checks.", "committedDate": "2020-09-21T06:11:15Z", "type": "commit"}, {"oid": "4d53b0507cbbea30933a0a4571a435be6619d7fc", "url": "https://github.com/openequella/openEQUELLA/commit/4d53b0507cbbea30933a0a4571a435be6619d7fc", "message": "Update Search2 endpoint for permission checks.\n\nPermission COMMENT_VIEW_ITEM should be checked before\ngetting an item's comments. If the permission is granted\nthen the number of comments is included in the response.", "committedDate": "2020-09-21T06:11:15Z", "type": "commit"}, {"oid": "c3b7680d1325119a4bb292a90bc66cdda3b61659", "url": "https://github.com/openequella/openEQUELLA/commit/c3b7680d1325119a4bb292a90bc66cdda3b61659", "message": "Remove a line of useless statement in SearchResource.scala.", "committedDate": "2020-09-21T06:11:15Z", "type": "commit"}, {"oid": "2bebee625a65f22ac90b6404bc39650a4a38eae2", "url": "https://github.com/openequella/openEQUELLA/commit/2bebee625a65f22ac90b6404bc39650a4a38eae2", "message": "Add comments in PagedResults.scala.", "committedDate": "2020-09-21T07:51:22Z", "type": "commit"}, {"oid": "f37a84083dc4e5ee1c29ad3793c77ee8ac21e53d", "url": "https://github.com/openequella/openEQUELLA/commit/f37a84083dc4e5ee1c29ad3793c77ee8ac21e53d", "message": "Fix two issues of PagedResults.scala\n\n1. Remove the use of -1 as offset for retrieving entities\nso that all entities are retrievable.\n2. Rework how to generate resumption tokens and when they\nshould be returned.", "committedDate": "2020-09-23T06:51:37Z", "type": "commit"}, {"oid": "790a1edb65395a8a07d1621bd103f85b6dc48e38", "url": "https://github.com/openequella/openEQUELLA/commit/790a1edb65395a8a07d1621bd103f85b6dc48e38", "message": "Properly get the count of item's comments.", "committedDate": "2020-09-23T08:12:35Z", "type": "commit"}, {"oid": "823c0077832d416b18ad584be9109f56c0489d39", "url": "https://github.com/openequella/openEQUELLA/commit/823c0077832d416b18ad584be9109f56c0489d39", "message": "Remove useless comments for PagedResults.scala.", "committedDate": "2020-09-23T08:16:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0NDY2Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r493944662", "bodyText": "I did not create a new method for comment count. Instead, I reused itemDao.getCommentCounts like how old search page uses it.", "author": "PenghaiZhang", "createdAt": "2020-09-23T23:08:42Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java", "diffHunk": "@@ -85,6 +89,27 @@ public Comment getComment(Item item, String commentUuid) {\n     return getComments(item, filter, order, limit);\n   }\n \n+  @Override\n+  @Transactional\n+  public List<Comment> getCommentsWithACLCheck(\n+      ItemKey itemId, EnumSet<CommentFilter> filter, CommentOrder order, int limit) {\n+    Item item = itemDao.getExistingItem(itemId);\n+    if (canViewComment(item)) {\n+      return getComments(item, filter, order, limit);\n+    }\n+    return null;\n+  }\n+\n+  @Override\n+  @Transactional\n+  public int getCommentCountWithACLCheck(ItemKey itemId) {\n+    Item item = itemDao.getExistingItem(itemId);\n+    if (canViewComment(item)) {\n+      return itemDao.getCommentCounts(Collections.singletonList(item)).get(0);", "originalCommit": "823c0077832d416b18ad584be9109f56c0489d39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5MDc4Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r493990783", "bodyText": "Good find, I see it's doing a HQL count(), so that's perfect. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-09-24T01:43:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0NDY2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "fe8d97fd62eb1ca2ad35f8b5a1ab17a77d915bf3", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java b/Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java\nindex 2bea62146..d877d9a3b 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java\n\n@@ -93,21 +94,14 @@ public class ItemCommentServiceImpl implements ItemCommentService, UserChangeLis\n   @Transactional\n   public List<Comment> getCommentsWithACLCheck(\n       ItemKey itemId, EnumSet<CommentFilter> filter, CommentOrder order, int limit) {\n-    Item item = itemDao.getExistingItem(itemId);\n-    if (canViewComment(item)) {\n-      return getComments(item, filter, order, limit);\n-    }\n-    return null;\n+    return canViewComment(itemId, (item) -> getComments(item, filter, order, limit));\n   }\n \n   @Override\n   @Transactional\n-  public int getCommentCountWithACLCheck(ItemKey itemId) {\n-    Item item = itemDao.getExistingItem(itemId);\n-    if (canViewComment(item)) {\n-      return itemDao.getCommentCounts(Collections.singletonList(item)).get(0);\n-    }\n-    return -1;\n+  public Integer getCommentCountWithACLCheck(ItemKey itemId) {\n+    return canViewComment(\n+        itemId, (item) -> itemDao.getCommentCounts(Collections.singletonList(item)).get(0));\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5NjQxNA==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r493996414", "bodyText": "I'm just thinking. Both the methods above which call this are almost the same. And indeed, if you change the above two methods to instead return Optional<List<Comment>> and Optional<Integer> you could then possibly change this method to take a lambda which receives an Item and the returns an Optional (returning Optional.empty() if can't view comments). And then the other two methods could look something like (the very rough code):\n@Override\n@Transactional\npublic Optional<Integer> getCommentCountWithACLCheck(ItemKey itemId) {\n  return canViewComment( itemId, (item) -> Optional.of(\n    itemDao.getCommentCounts(Collections.singletonList(item)).get(0)\n  ));\n}", "author": "edalex-ian", "createdAt": "2020-09-24T02:05:17Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java", "diffHunk": "@@ -159,6 +184,11 @@ AddCommentOperation comment(\n     ReassignOperation reassign(\n         @Assisted(\"fromUserId\") String fromUserId, @Assisted(\"toUserId\") String toUserId);\n   }\n+\n+  private boolean canViewComment(Item item) {\n+    Set<String> privileges = tleAclManager.filterNonGrantedPrivileges(item, COMMENT_VIEW_ITEM);\n+    return !privileges.isEmpty();\n+  }", "originalCommit": "823c0077832d416b18ad584be9109f56c0489d39", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe8d97fd62eb1ca2ad35f8b5a1ab17a77d915bf3", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java b/Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java\nindex 2bea62146..d877d9a3b 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/core/item/standard/service/impl/ItemCommentServiceImpl.java\n\n@@ -185,9 +179,15 @@ public class ItemCommentServiceImpl implements ItemCommentService, UserChangeLis\n         @Assisted(\"fromUserId\") String fromUserId, @Assisted(\"toUserId\") String toUserId);\n   }\n \n-  private boolean canViewComment(Item item) {\n+  // If view comment permission is granted, execute f and return the result.\n+  // Return null if the permission is missing.\n+  private <T> T canViewComment(ItemKey itemId, Function<Item, T> f) {\n+    Item item = itemDao.getExistingItem(itemId);\n     Set<String> privileges = tleAclManager.filterNonGrantedPrivileges(item, COMMENT_VIEW_ITEM);\n-    return !privileges.isEmpty();\n+    if (!privileges.isEmpty()) {\n+      return f.apply(item);\n+    }\n+    return null;\n   }\n }\n \n"}}, {"oid": "f399398a32aab902e9637d747e335ef23d41cbb8", "url": "https://github.com/openequella/openEQUELLA/commit/f399398a32aab902e9637d747e335ef23d41cbb8", "message": "Add comment to explain why retrieve all entities for\nresumption tokens.", "committedDate": "2020-09-24T04:19:03Z", "type": "commit"}, {"oid": "46b280be8faa2e39c1521790bcae7156e51dfb73", "url": "https://github.com/openequella/openEQUELLA/commit/46b280be8faa2e39c1521790bcae7156e51dfb73", "message": "Collection base entities with the specified length.", "committedDate": "2020-09-24T04:23:10Z", "type": "commit"}, {"oid": "fe8d97fd62eb1ca2ad35f8b5a1ab17a77d915bf3", "url": "https://github.com/openequella/openEQUELLA/commit/fe8d97fd62eb1ca2ad35f8b5a1ab17a77d915bf3", "message": "Tweaks for how to get the comment count.", "committedDate": "2020-09-24T05:51:38Z", "type": "commit"}, {"oid": "09141d4e2470e00af4d5334334d9f7fa0e04cd62", "url": "https://github.com/openequella/openEQUELLA/commit/09141d4e2470e00af4d5334334d9f7fa0e04cd62", "message": "Rewrite the method to retrieve entities with permissions.", "committedDate": "2020-09-25T00:21:06Z", "type": "commit"}, {"oid": "c3c03305146bbb6babeec5d054481cf6153831c4", "url": "https://github.com/openequella/openEQUELLA/commit/c3c03305146bbb6babeec5d054481cf6153831c4", "message": "Tidy ups for PagedResults.scala", "committedDate": "2020-10-05T01:23:55Z", "type": "commit"}, {"oid": "31f5b142b13bdc1fbd8ad3f1a42d86160dcdec28", "url": "https://github.com/openequella/openEQUELLA/commit/31f5b142b13bdc1fbd8ad3f1a42d86160dcdec28", "message": "Add a new Collection to testing Institution 'rest'\nand revoke the permission to access this Collection.", "committedDate": "2020-10-05T02:18:03Z", "type": "commit"}, {"oid": "58530ed9a287bee485e6b04ce6701c090b163f4b", "url": "https://github.com/openequella/openEQUELLA/commit/58530ed9a287bee485e6b04ce6701c090b163f4b", "message": "Use ID as PageListCallback's sorting order.", "committedDate": "2020-10-05T02:20:29Z", "type": "commit"}, {"oid": "8a81df273c9bcaf2682bee6a16f34f0d87a00b5b", "url": "https://github.com/openequella/openEQUELLA/commit/8a81df273c9bcaf2682bee6a16f34f0d87a00b5b", "message": "Create a test for a range of base entity endpoints.", "committedDate": "2020-10-05T02:24:15Z", "type": "commit"}, {"oid": "74d5b230aeeef1da7a04048f2f67b7ff3e433203", "url": "https://github.com/openequella/openEQUELLA/commit/74d5b230aeeef1da7a04048f2f67b7ff3e433203", "message": "Add BaseEntityAPITest to Codebuild configuration file.", "committedDate": "2020-10-05T02:24:46Z", "type": "commit"}, {"oid": "8f47348b2a3eb6b96d0af852e05c56c0f2139c29", "url": "https://github.com/openequella/openEQUELLA/commit/8f47348b2a3eb6b96d0af852e05c56c0f2139c29", "message": "Merge branch 'component/new-search-page' into bugfix/search-page-acl-issues", "committedDate": "2020-10-05T02:28:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzMTEwNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r499331106", "bodyText": "Just something to ponder...\nYou can make this a bit stricter on typing with:\n  @DataProvider(name = \"initialResumptionTokens\")\n  public static Iterator<String> tokens() {\n    return Arrays.asList({\"0:5\"}, {\"0:10\"}, {\"0:20\"}).iterator();\n  }", "author": "edalex-ian", "createdAt": "2020-10-05T03:29:57Z", "path": "autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package io.github.openequella.rest;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import org.apache.commons.httpclient.HttpMethod;\n+import org.apache.commons.httpclient.HttpStatus;\n+import org.apache.commons.httpclient.NameValuePair;\n+import org.apache.commons.httpclient.methods.GetMethod;\n+import org.codehaus.jackson.JsonNode;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+public class BaseEntityAPITest extends AbstractRestApiTest {\n+  private static final String COLLECTION_API_ENDPOINT =\n+      TEST_CONFIG.getInstitutionUrl() + \"api/collection\";\n+\n+  @DataProvider(name = \"initialResumptionTokens\")\n+  public static Object[][] tokens() {", "originalCommit": "8f47348b2a3eb6b96d0af852e05c56c0f2139c29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NDA2Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r499374066", "bodyText": "We probably need to update TESTNG to change the type of DataProvider.", "author": "PenghaiZhang", "createdAt": "2020-10-05T06:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzMTEwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg5NjA5Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r499896092", "bodyText": "Yeah, we did have a Renovate PR there for a bit, but it got closed. #2022", "author": "edalex-ian", "createdAt": "2020-10-05T21:59:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzMTEwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg5OTUxMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r499899513", "bodyText": "I see that PR failed on scala check, but I can't remember why we did not give Renovate some help.", "author": "PenghaiZhang", "createdAt": "2020-10-05T22:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzMTEwNg=="}], "type": "inlineReview", "revised_code": {"commit": "48b08dbdcab73f82a984c917ccb4cd5157a87f00", "chunk": "diff --git a/autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java b/autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java\nindex eea77177e..01dee4ffc 100644\n--- a/autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java\n+++ b/autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java\n\n@@ -1,6 +1,8 @@\n package io.github.openequella.rest;\n \n import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertNotNull;\n+import static org.testng.Assert.assertNull;\n \n import java.io.IOException;\n import org.apache.commons.httpclient.HttpMethod;\n"}}, {"oid": "187774d46dc2363a20319ddc82cc48b4b64ddfa2", "url": "https://github.com/openequella/openEQUELLA/commit/187774d46dc2363a20319ddc82cc48b4b64ddfa2", "message": "Improve the comments in PagedResults.scala.\n\nCo-authored-by: edalex-ian <43919233+edalex-ian@users.noreply.github.com>", "committedDate": "2020-10-05T03:50:07Z", "type": "commit"}, {"oid": "e8f878b365591a507531dbdae5641b85ebfacdfa", "url": "https://github.com/openequella/openEQUELLA/commit/e8f878b365591a507531dbdae5641b85ebfacdfa", "message": "Support getting full information of base entity.", "committedDate": "2020-10-05T05:54:30Z", "type": "commit"}, {"oid": "f0819ad94b4002ebdc4667acbe007f38838f66af", "url": "https://github.com/openequella/openEQUELLA/commit/f0819ad94b4002ebdc4667acbe007f38838f66af", "message": "Update testing Institution 'rest'\n\nRevoke permission 'EDIT_COLLECTION' from one\nCollection.", "committedDate": "2020-10-05T06:34:24Z", "type": "commit"}, {"oid": "48b08dbdcab73f82a984c917ccb4cd5157a87f00", "url": "https://github.com/openequella/openEQUELLA/commit/48b08dbdcab73f82a984c917ccb4cd5157a87f00", "message": "Add a test for getting full details of base entity.", "committedDate": "2020-10-05T06:37:58Z", "type": "commit"}, {"oid": "1cfaae13ea66447590c636b43da055676a9fe37d", "url": "https://github.com/openequella/openEQUELLA/commit/1cfaae13ea66447590c636b43da055676a9fe37d", "message": "Remove HQL 'order by' for counting the number of Portlets.", "committedDate": "2020-10-05T07:18:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM5MDc5Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r499390792", "bodyText": "Here is why PortletTest failed. The callback passed in this method is essentially a PagedListCallback so an order by will be appended to the HQL, which resulted in Postgresl error [42803]: column \"be.id\" must appear in the GROUP BY clause or be used in an aggregate function Position: 42  .\nHowever, this method is used to count the number of Portlets. There is no point to do a sorting. So I believe we should remove this if statement. One good example is method createEnumerateQuery from GenericInstitionalDaoImpl.", "author": "PenghaiZhang", "createdAt": "2020-10-05T07:26:31Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/portal/dao/PortletDaoImpl.java", "diffHunk": "@@ -158,10 +158,6 @@ public Object doInHibernate(Session session) throws HibernateException {\n                           hql.append(callback.getAdditionalWhere());\n                         }\n \n-                        if (callback != null && callback.getOrderBy() != null) {", "originalCommit": "1cfaae13ea66447590c636b43da055676a9fe37d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg5ODcxNA==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r499898714", "bodyText": "I agree.\nThis is odd it's doing an order for a count. I wonder if it's a case of copy pasta. \ud83e\udd14", "author": "edalex-ian", "createdAt": "2020-10-05T22:06:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM5MDc5Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg5OTI3NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r499899275", "bodyText": "Maybe expand this out then to highlight what the significance of then checking for security is. (As personally, I'm not sure what the point is...)", "author": "edalex-ian", "createdAt": "2020-10-05T22:08:03Z", "path": "autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java", "diffHunk": "@@ -49,6 +51,27 @@ public void getEntities(String initialToken) throws IOException {\n     assertEquals(count, 12);\n   }\n \n+  @Test\n+  public void getFullInformation() throws IOException {\n+    final HttpMethod method = new GetMethod(COLLECTION_API_ENDPOINT);\n+    final NameValuePair[] queryParams = new NameValuePair[3];\n+    queryParams[0] = new NameValuePair(\"privilege\", PERMISSION);\n+    queryParams[1] = new NameValuePair(\"full\", \"true\");\n+    queryParams[2] = new NameValuePair(\"q\", \"Basic\");\n+    method.setQueryString(queryParams);\n+\n+    int statusCode = makeClientRequest(method);\n+    assertEquals(statusCode, HttpStatus.SC_OK);\n+\n+    JsonNode results = getResultList(mapper.readTree(method.getResponseBody()));\n+\n+    // There are two Collections named 'Basic xxx'. Full information of the first one\n+    // is accessible whereas that of the second is not accessible.", "originalCommit": "1cfaae13ea66447590c636b43da055676a9fe37d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c82b27796612cec0618c05501fb9e0a6b5fc497", "chunk": "diff --git a/autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java b/autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java\nindex 01dee4ffc..798f7b15e 100644\n--- a/autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java\n+++ b/autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java\n\n@@ -67,13 +67,15 @@ public class BaseEntityAPITest extends AbstractRestApiTest {\n \n     // There are two Collections named 'Basic xxx'. Full information of the first one\n     // is accessible whereas that of the second is not accessible.\n+    // The purpose of checking 'security' is to confirm whether full details is returned\n+    // because 'security' is only available when an entity's full detail is accessible.\n     assertEquals(results.size(), 2);\n     assertNotNull(results.get(0).get(\"security\"));\n     assertNull(results.get(1).get(\"security\"));\n   }\n \n   private int getResultLength(JsonNode result) {\n-    return result.get(\"results\").size();\n+    return getResultList(result).size();\n   }\n \n   private String getTokenFromResponse(JsonNode result) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwMTYzNA==", "url": "https://github.com/openequella/openEQUELLA/pull/2308#discussion_r499901634", "bodyText": "You should update getResultLength to also use this new method.", "author": "edalex-ian", "createdAt": "2020-10-05T22:14:26Z", "path": "autotest/OldTests/src/test/java/io/github/openequella/rest/BaseEntityAPITest.java", "diffHunk": "@@ -60,4 +83,8 @@ private String getTokenFromResponse(JsonNode result) {\n     }\n     return null;\n   }\n+\n+  private JsonNode getResultList(JsonNode result) {", "originalCommit": "1cfaae13ea66447590c636b43da055676a9fe37d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "2c82b27796612cec0618c05501fb9e0a6b5fc497", "url": "https://github.com/openequella/openEQUELLA/commit/2c82b27796612cec0618c05501fb9e0a6b5fc497", "message": "Improvements for BaseEntityAPITest", "committedDate": "2020-10-05T22:44:00Z", "type": "commit"}, {"oid": "e1ec8eb7665cf4fb7ee9ccc4f069b52ef01b82ef", "url": "https://github.com/openequella/openEQUELLA/commit/e1ec8eb7665cf4fb7ee9ccc4f069b52ef01b82ef", "message": "Create a case class to help improve the readability\nof PagedResults.", "committedDate": "2020-10-06T00:11:13Z", "type": "commit"}]}