{"pr_number": 2581, "pr_title": "Enable course folder selection in Bb LTI flow", "pr_createdAt": "2020-12-03T01:51:32Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2581", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDI3NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2581#discussion_r535820274", "bodyText": "My initial reaction here is that it'd be great to see these use Java 8 features, and specifically Stream. However I appreciate it's calling a recursive function and so you want it to end execution on the first match (to avoid unnecessary tree walking).\nBut it would still be great if you could use the Java 8 forEach and perhaps an Optional around the search with findFolder. Just helps to make the code a bit more robust.", "author": "edalex-ian", "createdAt": "2020-12-04T04:04:17Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java", "diffHunk": "@@ -299,46 +326,161 @@ private Content getContentBean(Connector connector, String courseID, String fold\n   public List<ConnectorFolder> getFoldersForCourse(\n       Connector connector, String username, String courseId, boolean management)\n       throws LmsUserNotFoundException {\n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents\";\n \n-    return retrieveFolders(connector, url, courseId, management);\n+    return retrieveFolders(connector, courseId, management);\n   }\n \n   @Override\n   public List<ConnectorFolder> getFoldersForFolder(\n       Connector connector, String username, String courseId, String folderId, boolean management) {\n     // Username not needed to since we authenticate via 3LO.\n \n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents/\" + folderId + \"/children/\";\n+    List<ConnectorFolder> folders = retrieveFolders(connector, courseId, management);\n+    for (ConnectorFolder folder : folders) {\n+      ConnectorFolder foundFolder = findFolder(folder, folderId);\n+      if (foundFolder != null) {\n+        return foundFolder.getFolders();\n+      }\n+    }\n+\n+    // Cache of folders exist, but folderId was not found\n+    return null;\n+  }", "originalCommit": "1db86f0e806f78619b2575a2e208bed4fc7a1972", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5a0aa01887ddf170f9aa8adc97f9374ab278ac3", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java b/Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java\nindex f6cdc433e..ec2c2a818 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java\n\n@@ -326,8 +322,9 @@ public class BlackboardRESTConnectorServiceImpl extends AbstractIntegrationConne\n   public List<ConnectorFolder> getFoldersForCourse(\n       Connector connector, String username, String courseId, boolean management)\n       throws LmsUserNotFoundException {\n+    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents?recursive=true\";\n \n-    return retrieveFolders(connector, courseId, management);\n+    return retrieveFolders(connector, url, courseId, management);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDY2OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2581#discussion_r535820669", "bodyText": "Rather than returning the ol' \"null if not found\", in Java 8 there's usefulness of Optional and all it brings to the calling code. And imagine how nice it'd read here:\nOptional<ConnectorFolder> possibleSubFolder = findFolder(subFolder, folderId);\nif(possibleSubFolder.isPresent()) {\n  return possibleSubFolder.get();\n}", "author": "edalex-ian", "createdAt": "2020-12-04T04:05:34Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java", "diffHunk": "@@ -299,46 +326,161 @@ private Content getContentBean(Connector connector, String courseID, String fold\n   public List<ConnectorFolder> getFoldersForCourse(\n       Connector connector, String username, String courseId, boolean management)\n       throws LmsUserNotFoundException {\n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents\";\n \n-    return retrieveFolders(connector, url, courseId, management);\n+    return retrieveFolders(connector, courseId, management);\n   }\n \n   @Override\n   public List<ConnectorFolder> getFoldersForFolder(\n       Connector connector, String username, String courseId, String folderId, boolean management) {\n     // Username not needed to since we authenticate via 3LO.\n \n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents/\" + folderId + \"/children/\";\n+    List<ConnectorFolder> folders = retrieveFolders(connector, courseId, management);\n+    for (ConnectorFolder folder : folders) {\n+      ConnectorFolder foundFolder = findFolder(folder, folderId);\n+      if (foundFolder != null) {\n+        return foundFolder.getFolders();\n+      }\n+    }\n+\n+    // Cache of folders exist, but folderId was not found\n+    return null;\n+  }\n+\n+  /**\n+   * Recursively searches for a folder with the given ID\n+   *\n+   * @param folder\n+   * @param folderId\n+   * @return null if not found, the children of the folder if found", "originalCommit": "1db86f0e806f78619b2575a2e208bed4fc7a1972", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ0NjU5Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2581#discussion_r536446593", "bodyText": "good point, that is cleaner", "author": "cbeach47", "createdAt": "2020-12-04T23:39:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDY2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "b5a0aa01887ddf170f9aa8adc97f9374ab278ac3", "chunk": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java b/Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java\nindex f6cdc433e..ec2c2a818 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java\n\n@@ -326,8 +322,9 @@ public class BlackboardRESTConnectorServiceImpl extends AbstractIntegrationConne\n   public List<ConnectorFolder> getFoldersForCourse(\n       Connector connector, String username, String courseId, boolean management)\n       throws LmsUserNotFoundException {\n+    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents?recursive=true\";\n \n-    return retrieveFolders(connector, courseId, management);\n+    return retrieveFolders(connector, url, courseId, management);\n   }\n \n   @Override\n"}}, {"oid": "b5a0aa01887ddf170f9aa8adc97f9374ab278ac3", "url": "https://github.com/openequella/openEQUELLA/commit/b5a0aa01887ddf170f9aa8adc97f9374ab278ac3", "message": "selection session course folders are now functional for generic LTI", "committedDate": "2020-12-04T16:10:44Z", "type": "commit"}, {"oid": "caad86ef1d0bd4fd76011260ccd9c49947f1ad97", "url": "https://github.com/openequella/openEQUELLA/commit/caad86ef1d0bd4fd76011260ccd9c49947f1ad97", "message": "Fixed some regressions in the Bb LTI / REST flows", "committedDate": "2020-12-04T16:10:44Z", "type": "commit"}, {"oid": "1016489ff2ca946b54d349314572eee0ae74e83c", "url": "https://github.com/openequella/openEQUELLA/commit/1016489ff2ca946b54d349314572eee0ae74e83c", "message": "clean up unused code", "committedDate": "2020-12-04T16:10:44Z", "type": "commit"}, {"oid": "1016489ff2ca946b54d349314572eee0ae74e83c", "url": "https://github.com/openequella/openEQUELLA/commit/1016489ff2ca946b54d349314572eee0ae74e83c", "message": "clean up unused code", "committedDate": "2020-12-04T16:10:44Z", "type": "forcePushed"}, {"oid": "ffb3eb17b474f48bcb14938874f84c352f05f5e0", "url": "https://github.com/openequella/openEQUELLA/commit/ffb3eb17b474f48bcb14938874f84c352f05f5e0", "message": "Revised to use Optional and streams", "committedDate": "2020-12-04T23:22:03Z", "type": "commit"}, {"oid": "337788072b91507d668385c76b1bc6d4111a12a7", "url": "https://github.com/openequella/openEQUELLA/commit/337788072b91507d668385c76b1bc6d4111a12a7", "message": "Add header", "committedDate": "2020-12-05T00:29:52Z", "type": "commit"}]}