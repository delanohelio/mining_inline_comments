{"pr_number": 282, "pr_title": "Corrected HTTP response code for Model version does not exists exception", "pr_createdAt": "2020-04-29T12:14:51Z", "pr_url": "https://github.com/pytorch/serve/pull/282", "timeline": [{"oid": "65213a19218fa7472951b923b645b7103a2cdbbe", "url": "https://github.com/pytorch/serve/commit/65213a19218fa7472951b923b645b7103a2cdbbe", "message": "issue 196 patch", "committedDate": "2020-04-29T12:08:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgwMDkzMg==", "url": "https://github.com/pytorch/serve/pull/282#discussion_r417800932", "bodyText": "Should this be 'throw ModelVersionNotFoundException'? Also, let's keep only one class.", "author": "dhaniram-kshirsagar", "createdAt": "2020-04-30T07:11:43Z", "path": "frontend/server/src/main/java/org/pytorch/serve/http/ManagementRequestHandler.java", "diffHunk": "@@ -270,13 +270,14 @@ private void handleUnregisterModel(\n         } else if (httpResponseStatus == HttpResponseStatus.BAD_REQUEST) {\n             throw new ModelVersionNotFoundException(\n                     String.format(\n-                            \"Model version: %s not found for model: %s\", modelVersion, modelName));\n+                            \"Model version: %s does not exist for model: %s\",\n+                            modelVersion, modelName));\n         } else if (httpResponseStatus == HttpResponseStatus.INTERNAL_SERVER_ERROR) {\n             throw new InternalServerException(\"Interrupted while cleaning resources: \" + modelName);\n         } else if (httpResponseStatus == HttpResponseStatus.REQUEST_TIMEOUT) {\n             throw new RequestTimeoutException(\"Timed out while cleaning resources: \" + modelName);\n         } else if (httpResponseStatus == HttpResponseStatus.FORBIDDEN) {\n-            throw new InternalServerException(\n+            throw new InvalidModelVersionException(", "originalCommit": "65213a19218fa7472951b923b645b7103a2cdbbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjE1MQ==", "url": "https://github.com/pytorch/serve/pull/282#discussion_r417922151", "bodyText": "InvalidModelVersionException for case where user tries to unregister the default version.", "author": "harshbafna", "createdAt": "2020-04-30T10:48:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgwMDkzMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgwOTY5MQ==", "url": "https://github.com/pytorch/serve/pull/282#discussion_r417809691", "bodyText": "As per #196, it should be 404 and not 403. Why 403? Also, let's keep things simple i.e. Catch ModelVersionNotFound exception in NOT-FOUND if clause above instead of having base as illegalArgexception.", "author": "dhaniram-kshirsagar", "createdAt": "2020-04-30T07:29:00Z", "path": "frontend/server/src/main/java/org/pytorch/serve/http/HttpRequestHandler.java", "diffHunk": "@@ -61,6 +61,9 @@ protected void channelRead0(ChannelHandlerContext ctx, FullHttpRequest req) {\n         } catch (OutOfMemoryError e) {\n             logger.trace(\"\", e);\n             NettyUtils.sendError(ctx, HttpResponseStatus.INSUFFICIENT_STORAGE, e);\n+        } catch (IllegalArgumentException e) {\n+            logger.error(\"\", e);\n+            NettyUtils.sendError(ctx, HttpResponseStatus.FORBIDDEN, e);", "originalCommit": "65213a19218fa7472951b923b645b7103a2cdbbe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgxNDM5OA==", "url": "https://github.com/pytorch/serve/pull/282#discussion_r417814398", "bodyText": "I think it should be NOT_FOUND as commented above.", "author": "dhaniram-kshirsagar", "createdAt": "2020-04-30T07:37:43Z", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -426,7 +430,7 @@ private void testSetInvalidVersionDefault(String modelName, String defaultVersio\n         TestUtils.getLatch().await();\n \n         ErrorResponse resp = JsonUtils.GSON.fromJson(TestUtils.getResult(), ErrorResponse.class);\n-        Assert.assertEquals(resp.getCode(), HttpResponseStatus.INTERNAL_SERVER_ERROR.code());\n+        Assert.assertEquals(resp.getCode(), HttpResponseStatus.BAD_REQUEST.code());", "originalCommit": "65213a19218fa7472951b923b645b7103a2cdbbe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6d169c2d070686323aa0b436c310810012a7ed48", "chunk": "diff --git a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\nindex 8d8d6d55..d5cb75ad 100644\n--- a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n+++ b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n\n@@ -430,7 +430,7 @@ public class ModelServerTest {\n         TestUtils.getLatch().await();\n \n         ErrorResponse resp = JsonUtils.GSON.fromJson(TestUtils.getResult(), ErrorResponse.class);\n-        Assert.assertEquals(resp.getCode(), HttpResponseStatus.BAD_REQUEST.code());\n+        Assert.assertEquals(resp.getCode(), HttpResponseStatus.NOT_FOUND.code());\n         Assert.assertEquals(\n                 resp.getMessage(),\n                 \"Model version \" + defaultVersion + \" does not exist for model \" + modelName);\n"}}, {"oid": "57debd9d3cbc98a40e8c06761a26c6cab5550e89", "url": "https://github.com/pytorch/serve/commit/57debd9d3cbc98a40e8c06761a26c6cab5550e89", "message": "Merge branch 'staging_0_1_1' into issue_196", "committedDate": "2020-05-01T08:25:49Z", "type": "commit"}, {"oid": "a057b92af16f0feea9e8ff4c75a3ed293eca6272", "url": "https://github.com/pytorch/serve/commit/a057b92af16f0feea9e8ff4c75a3ed293eca6272", "message": "Merge branch 'staging_0_1_1' into issue_196", "committedDate": "2020-05-02T01:39:17Z", "type": "commit"}, {"oid": "6d169c2d070686323aa0b436c310810012a7ed48", "url": "https://github.com/pytorch/serve/commit/6d169c2d070686323aa0b436c310810012a7ed48", "message": "Added openapi missing responses. - incorporated review comments", "committedDate": "2020-05-06T05:06:05Z", "type": "commit"}, {"oid": "24567fe3928620d52f17b8351557778330594c38", "url": "https://github.com/pytorch/serve/commit/24567fe3928620d52f17b8351557778330594c38", "message": "Merge branch 'staging_0_1_1' into issue_196", "committedDate": "2020-05-06T06:18:14Z", "type": "commit"}, {"oid": "f6d2cf699c0921c2b9fd7576382b9abcafd5ef52", "url": "https://github.com/pytorch/serve/commit/f6d2cf699c0921c2b9fd7576382b9abcafd5ef52", "message": "Merge branch 'staging_0_1_1' into issue_196", "committedDate": "2020-05-07T02:57:19Z", "type": "commit"}, {"oid": "b82ba646f0f98bad10cee46ee891bb31a5f95a61", "url": "https://github.com/pytorch/serve/commit/b82ba646f0f98bad10cee46ee891bb31a5f95a61", "message": "updated method signature after resolving merge conflicts", "committedDate": "2020-05-07T03:07:10Z", "type": "commit"}, {"oid": "592d7e28e3ed36fe4ceebdad99eaaf5330d5b351", "url": "https://github.com/pytorch/serve/commit/592d7e28e3ed36fe4ceebdad99eaaf5330d5b351", "message": "Merge branch 'staging_0_1_1' into issue_196", "committedDate": "2020-05-16T00:55:30Z", "type": "commit"}]}