{"pr_number": 646, "pr_title": "Add support for file:// url for copying .mar files into model store", "pr_createdAt": "2020-08-25T03:13:19Z", "pr_url": "https://github.com/pytorch/serve/pull/646", "timeline": [{"oid": "1febc5bbf121c3afa7fb50716d559a5139c627f4", "url": "https://github.com/pytorch/serve/commit/1febc5bbf121c3afa7fb50716d559a5139c627f4", "message": "Add support for file:// url for copying .mar files into model store", "committedDate": "2020-08-21T18:50:41Z", "type": "commit"}, {"oid": "70077597fe003a5c38f96cb4383f00da9a1b7d31", "url": "https://github.com/pytorch/serve/commit/70077597fe003a5c38f96cb4383f00da9a1b7d31", "message": "Fixing Spacing and Style issues", "committedDate": "2020-08-24T08:43:19Z", "type": "commit"}, {"oid": "1d07c19d7e4fca28ce3f12da03afb91f5e993ccf", "url": "https://github.com/pytorch/serve/commit/1d07c19d7e4fca28ce3f12da03afb91f5e993ccf", "message": "Adding UT for local model file", "committedDate": "2020-08-25T11:03:46Z", "type": "commit"}, {"oid": "98d1016d47987acd8db1e27cb0967a70bb3882c5", "url": "https://github.com/pytorch/serve/commit/98d1016d47987acd8db1e27cb0967a70bb3882c5", "message": "Merge branch 'master' into issue_643", "committedDate": "2020-08-27T12:30:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2MTE3MQ==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r478861171", "bodyText": "This test case only tests the \"mar file already exists\" scenario. Please add test cases for the following use cases:\n\nValid local mar file URL, validate that the mar file correctly gets copied to the model-store.\nURL path does not exist", "author": "harshbafna", "createdAt": "2020-08-28T06:37:57Z", "path": "frontend/modelarchive/src/test/java/org/pytorch/serve/archive/ModelArchiveTest.java", "diffHunk": "@@ -91,4 +91,10 @@ public void testMalformURL() throws ModelException, IOException, InterruptedExce\n         ModelArchive.downloadModel(\n                 modelStore, \"https://../model-server/models/squeezenet_v1.1/squeezenet_v1.1.mod\");\n     }\n+\n+    @Test(expectedExceptions = DownloadModelException.class)\n+    public void testMalformLocalURL() throws ModelException, IOException, InterruptedException {\n+        String modelStore = \"src/test/resources/models\";\n+        ModelArchive.downloadModel(modelStore, \"file://\" + modelStore + \"/mnist1.mar\");", "originalCommit": "98d1016d47987acd8db1e27cb0967a70bb3882c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "116dd3539f12a9a31a72fcd38e05e4763ab3a73e", "url": "https://github.com/pytorch/serve/commit/116dd3539f12a9a31a72fcd38e05e4763ab3a73e", "message": "Adding test to check if mar file is getting copied locally when file:// is used", "committedDate": "2020-08-31T09:39:17Z", "type": "commit"}, {"oid": "ea7c6bda242099afdb7739393ecf1c31ff235998", "url": "https://github.com/pytorch/serve/commit/ea7c6bda242099afdb7739393ecf1c31ff235998", "message": "Adding test cases for local mar file register and un-registration", "committedDate": "2020-08-31T10:26:03Z", "type": "commit"}, {"oid": "15c11a021bd730819d38f97191c4596094769fec", "url": "https://github.com/pytorch/serve/commit/15c11a021bd730819d38f97191c4596094769fec", "message": "Merge branch 'master' into issue_643", "committedDate": "2020-09-04T04:44:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4Mzg1Mg==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r483383852", "bodyText": "Make the test cases sequential.", "author": "harshbafna", "createdAt": "2020-09-04T04:47:51Z", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -710,6 +710,38 @@ public void testLoadModelFromURL() throws InterruptedException {\n         Assert.assertTrue(new File(configManager.getModelStore(), \"squeezenet1_1.mar\").exists());\n     }\n \n+    @Test(\n+            alwaysRun = true,\n+            dependsOnMethods = {\"testModelRegisterWithDefaultWorkers\"})", "originalCommit": "15c11a021bd730819d38f97191c4596094769fec", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c38aa10e478966cde1bf2fb1b7b4b8a449ddf94d", "chunk": "diff --git a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\nindex 93fa0463..0d75426d 100644\n--- a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n+++ b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n\n@@ -710,10 +710,8 @@ public class ModelServerTest {\n         Assert.assertTrue(new File(configManager.getModelStore(), \"squeezenet1_1.mar\").exists());\n     }\n \n-    @Test(\n-            alwaysRun = true,\n-            dependsOnMethods = {\"testModelRegisterWithDefaultWorkers\"})\n-    public void testLoadModelFromFileURI() throws InterruptedException {\n+    @Test(alwaysRun = true)\n+    public void testLoadModelFromFileURI() throws InterruptedException, IOException {\n         String curDir = System.getProperty(\"user.dir\");\n         File curDirFile = new File(curDir);\n         String parent = curDirFile.getParent();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4NTA4MQ==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r483385081", "bodyText": "Ideally, we should never encounter this exception. If we do, that means something went wrong. It would be better to add the exception with throws.", "author": "harshbafna", "createdAt": "2020-09-04T04:52:47Z", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -710,6 +710,38 @@ public void testLoadModelFromURL() throws InterruptedException {\n         Assert.assertTrue(new File(configManager.getModelStore(), \"squeezenet1_1.mar\").exists());\n     }\n \n+    @Test(\n+            alwaysRun = true,\n+            dependsOnMethods = {\"testModelRegisterWithDefaultWorkers\"})\n+    public void testLoadModelFromFileURI() throws InterruptedException {\n+        String curDir = System.getProperty(\"user.dir\");\n+        File curDirFile = new File(curDir);\n+        String parent = curDirFile.getParent();\n+\n+        String source = configManager.getModelStore() + \"/mnist.mar\";\n+        String destination = parent + \"/modelarchive/mnist1.mar\";\n+        File sourceFile = new File(source);\n+        File destinationFile = new File(destination);\n+        String fileUrl = \"\";\n+        try {\n+            FileUtils.copyFile(sourceFile, destinationFile);\n+            fileUrl = \"file://\" + parent + \"/modelarchive/mnist1.mar\";\n+        } catch (Exception e) {\n+            Assert.assertEquals(e.getClass(), IOException.class);", "originalCommit": "15c11a021bd730819d38f97191c4596094769fec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2Mjk3Ng==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r484362976", "bodyText": "Please see inline comments.\nThe test case for URL path does not exist is still missing in both ModelArchiveTest and ModelServerTest\n\nIn ModelArchiveTest.java - We already have a test to check invalid URL - testMalformLocalUrl.\nIn ModelServerTest.java - we have added a new test case - testModelWithInvalidFileUri", "author": "shrinath-suresh", "createdAt": "2020-09-07T11:07:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4NTA4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c38aa10e478966cde1bf2fb1b7b4b8a449ddf94d", "chunk": "diff --git a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\nindex 93fa0463..0d75426d 100644\n--- a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n+++ b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n\n@@ -710,10 +710,8 @@ public class ModelServerTest {\n         Assert.assertTrue(new File(configManager.getModelStore(), \"squeezenet1_1.mar\").exists());\n     }\n \n-    @Test(\n-            alwaysRun = true,\n-            dependsOnMethods = {\"testModelRegisterWithDefaultWorkers\"})\n-    public void testLoadModelFromFileURI() throws InterruptedException {\n+    @Test(alwaysRun = true)\n+    public void testLoadModelFromFileURI() throws InterruptedException, IOException {\n         String curDir = System.getProperty(\"user.dir\");\n         File curDirFile = new File(curDir);\n         String parent = curDirFile.getParent();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4NTIzMQ==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r483385231", "bodyText": "clean up the fileUrl as well.", "author": "harshbafna", "createdAt": "2020-09-04T04:53:26Z", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -710,6 +710,38 @@ public void testLoadModelFromURL() throws InterruptedException {\n         Assert.assertTrue(new File(configManager.getModelStore(), \"squeezenet1_1.mar\").exists());\n     }\n \n+    @Test(\n+            alwaysRun = true,\n+            dependsOnMethods = {\"testModelRegisterWithDefaultWorkers\"})\n+    public void testLoadModelFromFileURI() throws InterruptedException {\n+        String curDir = System.getProperty(\"user.dir\");\n+        File curDirFile = new File(curDir);\n+        String parent = curDirFile.getParent();\n+\n+        String source = configManager.getModelStore() + \"/mnist.mar\";\n+        String destination = parent + \"/modelarchive/mnist1.mar\";\n+        File sourceFile = new File(source);\n+        File destinationFile = new File(destination);\n+        String fileUrl = \"\";\n+        try {\n+            FileUtils.copyFile(sourceFile, destinationFile);\n+            fileUrl = \"file://\" + parent + \"/modelarchive/mnist1.mar\";\n+        } catch (Exception e) {\n+            Assert.assertEquals(e.getClass(), IOException.class);\n+        }\n+        testLoadModel(fileUrl, \"mnist1\", \"1.0\");\n+        Assert.assertTrue(new File(configManager.getModelStore(), \"mnist1.mar\").exists());\n+        FileUtils.deleteQuietly(destinationFile);", "originalCommit": "15c11a021bd730819d38f97191c4596094769fec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2MTUwOQ==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r484361509", "bodyText": "@harshbafna In this testcase, we copied mnist.mar from resources folder as mnist1.mar. In the end we have deleted mnist1.mar (fileUrl variable is just a URL like \"file://path) .", "author": "shrinath-suresh", "createdAt": "2020-09-07T11:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4NTIzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c38aa10e478966cde1bf2fb1b7b4b8a449ddf94d", "chunk": "diff --git a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\nindex 93fa0463..0d75426d 100644\n--- a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n+++ b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n\n@@ -710,10 +710,8 @@ public class ModelServerTest {\n         Assert.assertTrue(new File(configManager.getModelStore(), \"squeezenet1_1.mar\").exists());\n     }\n \n-    @Test(\n-            alwaysRun = true,\n-            dependsOnMethods = {\"testModelRegisterWithDefaultWorkers\"})\n-    public void testLoadModelFromFileURI() throws InterruptedException {\n+    @Test(alwaysRun = true)\n+    public void testLoadModelFromFileURI() throws InterruptedException, IOException {\n         String curDir = System.getProperty(\"user.dir\");\n         File curDirFile = new File(curDir);\n         String parent = curDirFile.getParent();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4NTUxOQ==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r483385519", "bodyText": "make this test case dependent on testLoadModelFromFileURI.", "author": "harshbafna", "createdAt": "2020-09-04T04:54:27Z", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -710,6 +710,38 @@ public void testLoadModelFromURL() throws InterruptedException {\n         Assert.assertTrue(new File(configManager.getModelStore(), \"squeezenet1_1.mar\").exists());\n     }\n \n+    @Test(\n+            alwaysRun = true,\n+            dependsOnMethods = {\"testModelRegisterWithDefaultWorkers\"})\n+    public void testLoadModelFromFileURI() throws InterruptedException {\n+        String curDir = System.getProperty(\"user.dir\");\n+        File curDirFile = new File(curDir);\n+        String parent = curDirFile.getParent();\n+\n+        String source = configManager.getModelStore() + \"/mnist.mar\";\n+        String destination = parent + \"/modelarchive/mnist1.mar\";\n+        File sourceFile = new File(source);\n+        File destinationFile = new File(destination);\n+        String fileUrl = \"\";\n+        try {\n+            FileUtils.copyFile(sourceFile, destinationFile);\n+            fileUrl = \"file://\" + parent + \"/modelarchive/mnist1.mar\";\n+        } catch (Exception e) {\n+            Assert.assertEquals(e.getClass(), IOException.class);\n+        }\n+        testLoadModel(fileUrl, \"mnist1\", \"1.0\");\n+        Assert.assertTrue(new File(configManager.getModelStore(), \"mnist1.mar\").exists());\n+        FileUtils.deleteQuietly(destinationFile);\n+    }\n+\n+    @Test(\n+            alwaysRun = true,\n+            dependsOnMethods = {\"testModelWithInvalidCustomPythonDependency\"})", "originalCommit": "15c11a021bd730819d38f97191c4596094769fec", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c38aa10e478966cde1bf2fb1b7b4b8a449ddf94d", "chunk": "diff --git a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\nindex 93fa0463..0d75426d 100644\n--- a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n+++ b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n\n@@ -710,10 +710,8 @@ public class ModelServerTest {\n         Assert.assertTrue(new File(configManager.getModelStore(), \"squeezenet1_1.mar\").exists());\n     }\n \n-    @Test(\n-            alwaysRun = true,\n-            dependsOnMethods = {\"testModelRegisterWithDefaultWorkers\"})\n-    public void testLoadModelFromFileURI() throws InterruptedException {\n+    @Test(alwaysRun = true)\n+    public void testLoadModelFromFileURI() throws InterruptedException, IOException {\n         String curDir = System.getProperty(\"user.dir\");\n         File curDirFile = new File(curDir);\n         String parent = curDirFile.getParent();\n"}}, {"oid": "c38aa10e478966cde1bf2fb1b7b4b8a449ddf94d", "url": "https://github.com/pytorch/serve/commit/c38aa10e478966cde1bf2fb1b7b4b8a449ddf94d", "message": "Addressing review comments", "committedDate": "2020-09-07T08:25:06Z", "type": "commit"}, {"oid": "f0cb4e764456d654cc0fac34b050d67c611d5ab1", "url": "https://github.com/pytorch/serve/commit/f0cb4e764456d654cc0fac34b050d67c611d5ab1", "message": "Adding invalid url test - ModelServerTest", "committedDate": "2020-09-07T10:19:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNTQ2OA==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r485835468", "bodyText": "NIT: Can't we just use file:///<path> as the url and remove the if-else here?", "author": "maaquib", "createdAt": "2020-09-09T18:42:59Z", "path": "frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java", "diffHunk": "@@ -59,7 +59,14 @@ public static ModelArchive downloadModel(String modelStore, String url)\n                 throw new FileAlreadyExistsException(marFileName);\n             }\n             try {\n-                FileUtils.copyURLToFile(new URL(url), modelLocation);\n+                if (url.indexOf(\"file://\") != -1) {\n+                    String originalPath = url.replace(\"file://\", \"\");\n+                    String path = FilenameUtils.getFullPath(originalPath);\n+                    File source = new File(path, marFileName);\n+                    FileUtils.copyFile(source, modelLocation);\n+                } else {\n+                    FileUtils.copyURLToFile(new URL(url), modelLocation);", "originalCommit": "f0cb4e764456d654cc0fac34b050d67c611d5ab1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0NzI3Ng==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r486047276", "bodyText": "NIT: Can't we just use file:///<path> as the url and remove the if-else here?\n\n@maaquib  FileUtils.copyURLToFile is a two step process. It downloads the file from URL and copies it to the destination. if we pass file://<path> as url, step one would fail.", "author": "shrinath-suresh", "createdAt": "2020-09-10T03:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNTQ2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4Mzg3MA==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r486483870", "bodyText": "@shrinath-suresh This seems to be working", "author": "maaquib", "createdAt": "2020-09-10T16:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNTQ2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAzODk1Mg==", "url": "https://github.com/pytorch/serve/pull/646#discussion_r487038952", "bodyText": "@maaquib Thanks. Removed the if else block. Just the pattern change is enough for accommodating file://", "author": "shrinath-suresh", "createdAt": "2020-09-11T13:18:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNTQ2OA=="}], "type": "inlineReview", "revised_code": {"commit": "812d902d1aa16b2d4bc3a413078a56ff74ea88c6", "chunk": "diff --git a/frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java b/frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java\nindex 66335dfb..e08a3c54 100644\n--- a/frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java\n+++ b/frontend/modelarchive/src/main/java/org/pytorch/serve/archive/ModelArchive.java\n\n@@ -59,14 +59,7 @@ public class ModelArchive {\n                 throw new FileAlreadyExistsException(marFileName);\n             }\n             try {\n-                if (url.indexOf(\"file://\") != -1) {\n-                    String originalPath = url.replace(\"file://\", \"\");\n-                    String path = FilenameUtils.getFullPath(originalPath);\n-                    File source = new File(path, marFileName);\n-                    FileUtils.copyFile(source, modelLocation);\n-                } else {\n-                    FileUtils.copyURLToFile(new URL(url), modelLocation);\n-                }\n+                FileUtils.copyURLToFile(new URL(url), modelLocation);\n             } catch (IOException e) {\n                 FileUtils.deleteQuietly(modelLocation);\n                 throw new DownloadModelException(\"Failed to download model from: \" + url, e);\n"}}, {"oid": "b4e401e2e8cedf742432ed4726e3fa403fb86ddf", "url": "https://github.com/pytorch/serve/commit/b4e401e2e8cedf742432ed4726e3fa403fb86ddf", "message": "Merge branch 'master' into issue_643", "committedDate": "2020-09-09T18:50:48Z", "type": "commit"}, {"oid": "812d902d1aa16b2d4bc3a413078a56ff74ea88c6", "url": "https://github.com/pytorch/serve/commit/812d902d1aa16b2d4bc3a413078a56ff74ea88c6", "message": "Using FileUtils.copyURLToFile for file:// url as well", "committedDate": "2020-09-11T13:17:01Z", "type": "commit"}, {"oid": "298d499e88cd44728d23c3914f170d4e36977b10", "url": "https://github.com/pytorch/serve/commit/298d499e88cd44728d23c3914f170d4e36977b10", "message": "Merge branch 'issue_643' of github.com:shrinath-suresh/serve into issue_643", "committedDate": "2020-09-11T13:17:24Z", "type": "commit"}]}