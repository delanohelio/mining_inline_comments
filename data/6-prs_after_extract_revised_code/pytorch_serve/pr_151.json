{"pr_number": 151, "pr_title": "Do not change default version unless asked", "pr_createdAt": "2020-04-01T13:44:50Z", "pr_url": "https://github.com/pytorch/serve/pull/151", "timeline": [{"oid": "e3a936b24d9ff08b7f89fc2caccf14c3171c2553", "url": "https://github.com/pytorch/serve/commit/e3a936b24d9ff08b7f89fc2caccf14c3171c2553", "message": "changes to not change the default version of a model unless asked", "committedDate": "2020-04-01T13:43:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM5NjU1NA==", "url": "https://github.com/pytorch/serve/pull/151#discussion_r404396554", "bodyText": "This change looks okay, but there's a problem in line 50:\nif (this.modelsVersionMap.putIfAbsent(Double.valueOf(versionId), model) != null) {\n\nThis cast to double is problematic. The version is taken in by the model archiver as a string (qv: model-archiver/model_archiver/arg_parser.py). If someone includes a version string that can't be cast to a double (\"1.0.1\", \"v1.0\"), they'll get no error from the model archiver, but this method will throw a java.lang.NumberFormatException.\nIs there any reason modelsVersionMap can't be a ConcurrentHashMap<String, Model>?", "author": "fbbradheintz", "createdAt": "2020-04-06T21:22:41Z", "path": "frontend/server/src/main/java/org/pytorch/serve/wlm/ModelVersionedRefs.java", "diffHunk": "@@ -55,8 +55,9 @@ public void addVersionModel(Model model, String versionId)\n                             + model.getModelName());\n         }\n \n-        // TODO what if user wants to keep existing default as it is?\n-        this.setDefaultVersion(versionId);\n+        if (this.defaultVersion == null) {", "originalCommit": "e3a936b24d9ff08b7f89fc2caccf14c3171c2553", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQzMjgxNg==", "url": "https://github.com/pytorch/serve/pull/151#discussion_r404432816", "bodyText": "This is also a problem in lines 25 & 26 of this file, and in line 141 of http/ManagementRequestHandler.java.", "author": "fbbradheintz", "createdAt": "2020-04-06T22:44:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM5NjU1NA=="}], "type": "inlineReview", "revised_code": {"commit": "aeab443435644e638c091552693d89700f6f4778", "chunk": "diff --git a/frontend/server/src/main/java/org/pytorch/serve/wlm/ModelVersionedRefs.java b/frontend/server/src/main/java/org/pytorch/serve/wlm/ModelVersionedRefs.java\nindex 77c8ce9c..b9a93ac5 100644\n--- a/frontend/server/src/main/java/org/pytorch/serve/wlm/ModelVersionedRefs.java\n+++ b/frontend/server/src/main/java/org/pytorch/serve/wlm/ModelVersionedRefs.java\n\n@@ -45,9 +36,7 @@ public final class ModelVersionedRefs {\n             throw new InvalidModelVersionException(\"Model version not found. \");\n         }\n \n-        validateVersionId(versionId);\n-\n-        if (this.modelsVersionMap.putIfAbsent(Double.valueOf(versionId), model) != null) {\n+        if (this.modelsVersionMap.putIfAbsent(versionId, model) != null) {\n             throw new ConflictStatusException(\n                     \"Model version \"\n                             + versionId\n"}}, {"oid": "b4ae7d5e2bfc298b6c17da942a72960f10362d09", "url": "https://github.com/pytorch/serve/commit/b4ae7d5e2bfc298b6c17da942a72960f10362d09", "message": "Merge branch 'stage_release' into issue_43", "committedDate": "2020-04-07T09:10:58Z", "type": "commit"}, {"oid": "aeab443435644e638c091552693d89700f6f4778", "url": "https://github.com/pytorch/serve/commit/aeab443435644e638c091552693d89700f6f4778", "message": "refactored version type as string", "committedDate": "2020-04-07T10:20:57Z", "type": "commit"}, {"oid": "8a616df78bc86fa05da37d4fbc3cfcce908505d6", "url": "https://github.com/pytorch/serve/commit/8a616df78bc86fa05da37d4fbc3cfcce908505d6", "message": "updated documentation", "committedDate": "2020-04-07T10:24:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgyMTg3Mg==", "url": "https://github.com/pytorch/serve/pull/151#discussion_r405821872", "bodyText": "This PR is looking much better. The only thing missing is a test case for non-Double-parseable version strings, e.g. \"v1.0.3\".", "author": "fbbradheintz", "createdAt": "2020-04-08T21:20:08Z", "path": "frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java", "diffHunk": "@@ -151,11 +151,11 @@ public void test()\n         testLoadModelWithInitialWorkers(managementChannel, \"noop.mar\", \"noop\");\n         testLoadModelWithInitialWorkers(managementChannel, \"noop.mar\", \"noopversioned\");\n         testLoadModelWithInitialWorkers(managementChannel, \"noop_v2.mar\", \"noopversioned\");\n-        testDescribeModel(managementChannel, \"noopversioned\", null, \"1.21\");\n-        testDescribeModel(managementChannel, \"noopversioned\", \"all\", \"1.11\");\n+        testDescribeModel(managementChannel, \"noopversioned\", null, \"1.11\");\n+        testDescribeModel(managementChannel, \"noopversioned\", \"all\", \"1.21\");\n         testDescribeModel(managementChannel, \"noopversioned\", \"1.11\", \"1.11\");\n         testPredictions(channel, \"noopversioned\", \"OK\", \"1.21\");\n-        testSetDefault(managementChannel, \"noopversioned\", \"1.11\");\n+        testSetDefault(managementChannel, \"noopversioned\", \"1.21\");", "originalCommit": "8a616df78bc86fa05da37d4fbc3cfcce908505d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE2MDMxMw==", "url": "https://github.com/pytorch/serve/pull/151#discussion_r406160313", "bodyText": "Done, updated 1.2 to 1.2.1 in the existing UT mar file.", "author": "harshbafna", "createdAt": "2020-04-09T12:12:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgyMTg3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "df9506087dc4ea3139f6772a7c1432a1930ee2f4", "chunk": "diff --git a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\nindex 18952325..66abeb0b 100644\n--- a/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n+++ b/frontend/server/src/test/java/org/pytorch/serve/ModelServerTest.java\n\n@@ -152,10 +152,10 @@ public class ModelServerTest {\n         testLoadModelWithInitialWorkers(managementChannel, \"noop.mar\", \"noopversioned\");\n         testLoadModelWithInitialWorkers(managementChannel, \"noop_v2.mar\", \"noopversioned\");\n         testDescribeModel(managementChannel, \"noopversioned\", null, \"1.11\");\n-        testDescribeModel(managementChannel, \"noopversioned\", \"all\", \"1.21\");\n+        testDescribeModel(managementChannel, \"noopversioned\", \"all\", \"1.2.1\");\n         testDescribeModel(managementChannel, \"noopversioned\", \"1.11\", \"1.11\");\n-        testPredictions(channel, \"noopversioned\", \"OK\", \"1.21\");\n-        testSetDefault(managementChannel, \"noopversioned\", \"1.21\");\n+        testPredictions(channel, \"noopversioned\", \"OK\", \"1.2.1\");\n+        testSetDefault(managementChannel, \"noopversioned\", \"1.2.1\");\n         testLoadModelWithInitialWorkersWithJSONReqBody(managementChannel);\n         testPredictions(channel, \"noop\", \"OK\", null);\n         testPredictionsBinary(channel);\n"}}, {"oid": "df9506087dc4ea3139f6772a7c1432a1930ee2f4", "url": "https://github.com/pytorch/serve/commit/df9506087dc4ea3139f6772a7c1432a1930ee2f4", "message": "changed model version to string format in UT", "committedDate": "2020-04-09T11:32:44Z", "type": "commit"}, {"oid": "ab39fc6b6ff02a4368ccee637bc5c7722306bebf", "url": "https://github.com/pytorch/serve/commit/ab39fc6b6ff02a4368ccee637bc5c7722306bebf", "message": "updated missed out version change in UT", "committedDate": "2020-04-09T11:58:56Z", "type": "commit"}, {"oid": "510264c9e3741be2a8d0f355d857a29a5c3af51f", "url": "https://github.com/pytorch/serve/commit/510264c9e3741be2a8d0f355d857a29a5c3af51f", "message": "updated error message on invalid model version", "committedDate": "2020-04-09T13:14:24Z", "type": "commit"}, {"oid": "23df0d9ff8281b67774ebd425c4865d1b5a543e3", "url": "https://github.com/pytorch/serve/commit/23df0d9ff8281b67774ebd425c4865d1b5a543e3", "message": "added UT for setting non-existent model version as default", "committedDate": "2020-04-09T13:26:20Z", "type": "commit"}, {"oid": "447310630bccdba9170d68e8fb561a9f07ff8a8a", "url": "https://github.com/pytorch/serve/commit/447310630bccdba9170d68e8fb561a9f07ff8a8a", "message": "Merge branch 'stage_release' into issue_43", "committedDate": "2020-04-09T13:37:41Z", "type": "commit"}, {"oid": "200f3906ad147794d61874bee05bd244c3575535", "url": "https://github.com/pytorch/serve/commit/200f3906ad147794d61874bee05bd244c3575535", "message": "made changes for fixing build failures merging stage_release branch", "committedDate": "2020-04-09T14:25:08Z", "type": "commit"}]}