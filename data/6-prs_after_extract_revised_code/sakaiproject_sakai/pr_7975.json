{"pr_number": 7975, "pr_title": "SAK-43319 Fixed various grade types in Grader.", "pr_createdAt": "2020-03-04T17:08:27Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/7975", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3MDA0Nw==", "url": "https://github.com/sakaiproject/sakai/pull/7975#discussion_r388170047", "bodyText": "Spacing...", "author": "jesusmmp", "createdAt": "2020-03-05T09:27:13Z", "path": "assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java", "diffHunk": "@@ -427,11 +427,18 @@ public AssignmentSubmission gradeSubmission(AssignmentSubmission submission, Str\n \n             String siteId = (String) options.get(\"siteId\");\n \n+            Map<String, String> rubricsParams\n+                = options.entrySet().stream().filter(e -> e.getKey().startsWith(\"rbcs\"))\n+                    .collect(Collectors.toMap(e -> e.getKey(), e -> (String) e.getValue()));\n+\n             // Persist the rubric evaluations\n-            if (rubricsService.hasAssociatedRubric(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId())){\n+            if (!rubricsParams.isEmpty()) {\n+            if (rubricsService.hasAssociatedRubric(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), siteId)){", "originalCommit": "ce36b0ea3bec4562fd6b395a29b716d220a1a1f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3MDgzMQ==", "url": "https://github.com/sakaiproject/sakai/pull/7975#discussion_r388170831", "bodyText": "good spot, forgot that.", "author": "adrianfish", "createdAt": "2020-03-05T09:28:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3MDA0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "292de9ec1745c57bb0c0d99ff291284785700a6a", "chunk": "diff --git a/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java b/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java\nindex f12228c76e..c7eaa989d5 100644\n--- a/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java\n+++ b/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java\n\n@@ -433,22 +433,17 @@ public class AssignmentToolUtils {\n \n             // Persist the rubric evaluations\n             if (!rubricsParams.isEmpty()) {\n-            if (rubricsService.hasAssociatedRubric(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), siteId)){\n-                /*\n-                Map<String, String> rubricsParams\n-                    = options.entrySet().stream().filter(e -> e.getKey().startsWith(\"rbcs\"))\n-                        .collect(Collectors.toMap(e -> e.getKey(), e -> (String) e.getValue()));\n-                        */\n-\n-                if (StringUtils.isNotBlank(siteId)) {\n-                    rubricsParams.put(\"siteId\", siteId);\n-                }\n-                for (AssignmentSubmissionSubmitter submitter : submission.getSubmitters()) {\n-                    String submitterId = submitter.getSubmitter();\n-                    rubricsService.saveRubricEvaluation(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), submission.getId(), submitterId, submission.getGradedBy(), rubricsParams);\n+                if (rubricsService.hasAssociatedRubric(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), siteId)){\n+\n+                    if (StringUtils.isNotBlank(siteId)) {\n+                        rubricsParams.put(\"siteId\", siteId);\n+                    }\n+                    for (AssignmentSubmissionSubmitter submitter : submission.getSubmitters()) {\n+                        String submitterId = submitter.getSubmitter();\n+                        rubricsService.saveRubricEvaluation(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), submission.getId(), submitterId, submission.getGradedBy(), rubricsParams);\n+                    }\n                 }\n             }\n-            }\n \n             try {\n                 return assignmentService.getSubmission(submission.getId());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3MDE5MA==", "url": "https://github.com/sakaiproject/sakai/pull/7975#discussion_r388170190", "bodyText": "Please, remove this. Thanks!", "author": "jesusmmp", "createdAt": "2020-03-05T09:27:29Z", "path": "assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java", "diffHunk": "@@ -427,11 +427,18 @@ public AssignmentSubmission gradeSubmission(AssignmentSubmission submission, Str\n \n             String siteId = (String) options.get(\"siteId\");\n \n+            Map<String, String> rubricsParams\n+                = options.entrySet().stream().filter(e -> e.getKey().startsWith(\"rbcs\"))\n+                    .collect(Collectors.toMap(e -> e.getKey(), e -> (String) e.getValue()));\n+\n             // Persist the rubric evaluations\n-            if (rubricsService.hasAssociatedRubric(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId())){\n+            if (!rubricsParams.isEmpty()) {\n+            if (rubricsService.hasAssociatedRubric(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), siteId)){\n+                /*", "originalCommit": "ce36b0ea3bec4562fd6b395a29b716d220a1a1f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "292de9ec1745c57bb0c0d99ff291284785700a6a", "chunk": "diff --git a/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java b/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java\nindex f12228c76e..c7eaa989d5 100644\n--- a/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java\n+++ b/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentToolUtils.java\n\n@@ -433,22 +433,17 @@ public class AssignmentToolUtils {\n \n             // Persist the rubric evaluations\n             if (!rubricsParams.isEmpty()) {\n-            if (rubricsService.hasAssociatedRubric(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), siteId)){\n-                /*\n-                Map<String, String> rubricsParams\n-                    = options.entrySet().stream().filter(e -> e.getKey().startsWith(\"rbcs\"))\n-                        .collect(Collectors.toMap(e -> e.getKey(), e -> (String) e.getValue()));\n-                        */\n-\n-                if (StringUtils.isNotBlank(siteId)) {\n-                    rubricsParams.put(\"siteId\", siteId);\n-                }\n-                for (AssignmentSubmissionSubmitter submitter : submission.getSubmitters()) {\n-                    String submitterId = submitter.getSubmitter();\n-                    rubricsService.saveRubricEvaluation(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), submission.getId(), submitterId, submission.getGradedBy(), rubricsParams);\n+                if (rubricsService.hasAssociatedRubric(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), siteId)){\n+\n+                    if (StringUtils.isNotBlank(siteId)) {\n+                        rubricsParams.put(\"siteId\", siteId);\n+                    }\n+                    for (AssignmentSubmissionSubmitter submitter : submission.getSubmitters()) {\n+                        String submitterId = submitter.getSubmitter();\n+                        rubricsService.saveRubricEvaluation(RubricsConstants.RBCS_TOOL_ASSIGNMENT, submission.getAssignment().getId(), submission.getId(), submitterId, submission.getGradedBy(), rubricsParams);\n+                    }\n                 }\n             }\n-            }\n \n             try {\n                 return assignmentService.getSubmission(submission.getId());\n"}}, {"oid": "292de9ec1745c57bb0c0d99ff291284785700a6a", "url": "https://github.com/sakaiproject/sakai/commit/292de9ec1745c57bb0c0d99ff291284785700a6a", "message": "SAK-43319 Fixed various grade types in Grader.\n\nhttps://jira.sakaiproject.org/browse/SAK-43319\n\nReusing Assignments i18n bundle\n\ndialog feedback working ok\ninline feedback working\nprivate notes and cancel working better\nrubric saving working\nAdded rubric grader button\nfixed date picker", "committedDate": "2020-03-05T10:57:05Z", "type": "forcePushed"}, {"oid": "bb2e6ff4d2e892d136c2969f57fc85ccd746d5ff", "url": "https://github.com/sakaiproject/sakai/commit/bb2e6ff4d2e892d136c2969f57fc85ccd746d5ff", "message": "SAK-43319 Fixed various grade types in Grader.\n\nhttps://jira.sakaiproject.org/browse/SAK-43319\n\nReusing Assignments i18n bundle\n\ndialog feedback working ok\ninline feedback working\nprivate notes and cancel working better\nrubric saving working\nAdded rubric grader button\nfixed date picker", "committedDate": "2020-03-05T12:31:26Z", "type": "commit"}, {"oid": "bb2e6ff4d2e892d136c2969f57fc85ccd746d5ff", "url": "https://github.com/sakaiproject/sakai/commit/bb2e6ff4d2e892d136c2969f57fc85ccd746d5ff", "message": "SAK-43319 Fixed various grade types in Grader.\n\nhttps://jira.sakaiproject.org/browse/SAK-43319\n\nReusing Assignments i18n bundle\n\ndialog feedback working ok\ninline feedback working\nprivate notes and cancel working better\nrubric saving working\nAdded rubric grader button\nfixed date picker", "committedDate": "2020-03-05T12:31:26Z", "type": "forcePushed"}]}