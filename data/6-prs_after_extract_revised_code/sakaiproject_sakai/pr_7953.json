{"pr_number": 7953, "pr_title": "SAK-43339 Added group picker to permissions component", "pr_createdAt": "2020-02-27T17:40:39Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/7953", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU1MDI5Ng==", "url": "https://github.com/sakaiproject/sakai/pull/7953#discussion_r385550296", "bodyText": "Indentation (this and following lines)", "author": "bgarciaentornos", "createdAt": "2020-02-28T07:50:04Z", "path": "gradebookng/tool/src/java/org/sakaiproject/gradebookng/rest/GradebookNgEntityProvider.java", "diffHunk": "@@ -238,46 +242,29 @@ public String getComments(final EntityView view, final Map<String, Object> param\n \t\tfinal String siteId = (String) params.get(\"siteId\");\n \t\tfinal long assignmentId = NumberUtils.toLong((String) params.get(\"assignmentId\"));\n \t\tfinal String action = (String) params.get(\"action\");\n-\t\tfinal String groupId = (String) params.get(\"groupId\");\n+\t\tfinal String groupRef = (String) params.get(\"groupRef\");\n \t\tfinal String minScoreString  = (String) params.get(\"minScore\");\n \t\tfinal String maxScoreString = (String) params.get(\"maxScore\");\n \n-\t\tfinal String subject = (String) params.get(\"subject\");\n-\t\tfinal String body = (String) params.get(\"body\");\n-\n \t\t// check params supplied are valid\n-\t\tif (StringUtils.isBlank(siteId) || assignmentId == 0 || StringUtils.isBlank(subject) || StringUtils.isBlank(body)) {\n-\t\t\tthrow new IllegalArgumentException(\"You must supply siteId, assignmentId, subject and body\");\n+\t\tif (StringUtils.isBlank(siteId) || assignmentId == 0 || StringUtils.isEmpty(groupRef)) {\n+\t\t\tthrow new IllegalArgumentException(\"You must supply siteId, groupRef and assignmentId\");\n \t\t}\n \n \t\tcheckInstructorOrTA(siteId);\n \n \t\tfinal Double minScore = (!StringUtils.isEmpty(minScoreString)) ? Double.valueOf(minScoreString) : null;\n \t\tfinal Double maxScore = (!StringUtils.isEmpty(maxScoreString)) ? Double.valueOf(maxScoreString) : null;\n \n-\t\tSite site = null;\n-\t\ttry {\n-\t\t\tsite = siteService.getSite(siteId);\n-\t\t} catch(IdUnusedException idue) {\n-\t\t\tthrow new IllegalArgumentException(\"siteId \" + siteId + \" is invalid\");\n-\t\t}\n-\n-\t\tSet<String> recipients = null;\n-\t\tif (StringUtils.isEmpty(groupId)) {\n-\t\t\t// Start with the site users\n-\t\t\trecipients = site.getUsers();\n-\t\t\t// Remove the instructors\n-\t\t\trecipients.removeAll(site.getUsersIsAllowed(Authz.PERMISSION_GRADE_ALL));\n-\t\t} else {\n-\t\t\tGroup group = site.getGroup(groupId);\n-\t\t\tif (group == null) {\n-\t\t\t\tthrow new IllegalArgumentException(\"Invalid groupId supplied.\");\n-\t\t\t}\n-\t\t\t// Start with the group users\n-\t\t\trecipients = group.getUsers();\n+        Set<String> recipients = null;", "originalCommit": "28e5bf576968a6d945e0f8550fecb12561ea9478", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a14055e0c414ef300a076c025bb533dec78d038", "chunk": "diff --git a/gradebookng/tool/src/java/org/sakaiproject/gradebookng/rest/GradebookNgEntityProvider.java b/gradebookng/tool/src/java/org/sakaiproject/gradebookng/rest/GradebookNgEntityProvider.java\nindex dc69a9478a..92b87158f6 100644\n--- a/gradebookng/tool/src/java/org/sakaiproject/gradebookng/rest/GradebookNgEntityProvider.java\n+++ b/gradebookng/tool/src/java/org/sakaiproject/gradebookng/rest/GradebookNgEntityProvider.java\n\n@@ -256,15 +256,15 @@ public class GradebookNgEntityProvider extends AbstractEntityProvider implements\n \t\tfinal Double minScore = (!StringUtils.isEmpty(minScoreString)) ? Double.valueOf(minScoreString) : null;\n \t\tfinal Double maxScore = (!StringUtils.isEmpty(maxScoreString)) ? Double.valueOf(maxScoreString) : null;\n \n-        Set<String> recipients = null;\n-        try {\n-            AuthzGroup authzGroup = authzGroupService.getAuthzGroup(groupRef);\n-            recipients = authzGroup.getUsers();\n+\t\tSet<String> recipients = null;\n+\t\ttry {\n+\t\t\tAuthzGroup authzGroup = authzGroupService.getAuthzGroup(groupRef);\n+\t\t\trecipients = authzGroup.getUsers();\n \t\t\t// Remove the instructors\n \t\t\trecipients.removeAll(authzGroup.getUsersIsAllowed(Authz.PERMISSION_GRADE_ALL));\n \t\t} catch (GroupNotDefinedException gnde) {\n \t\t\tthrow new IllegalArgumentException(\"No group defined for \" + groupRef);\n-        }\n+\t\t}\n \n \t\tList<GradeDefinition> grades\n \t\t\t= gradebookService.getGradesForStudentsForItem(siteId, assignmentId, new ArrayList<String>(recipients));\n"}}, {"oid": "7a14055e0c414ef300a076c025bb533dec78d038", "url": "https://github.com/sakaiproject/sakai/commit/7a14055e0c414ef300a076c025bb533dec78d038", "message": "SAK-43339 Added group picker to permissions component\n\nhttps://jira.sakaiproject.org/browse/SAK-43339", "committedDate": "2020-03-01T14:34:00Z", "type": "forcePushed"}, {"oid": "6727c24c0e913974e2ec682e123f6da9a5cba4df", "url": "https://github.com/sakaiproject/sakai/commit/6727c24c0e913974e2ec682e123f6da9a5cba4df", "message": "SAK-43339 Added group picker to permissions component\n\nhttps://jira.sakaiproject.org/browse/SAK-43339", "committedDate": "2020-03-08T13:49:51Z", "type": "commit"}, {"oid": "6727c24c0e913974e2ec682e123f6da9a5cba4df", "url": "https://github.com/sakaiproject/sakai/commit/6727c24c0e913974e2ec682e123f6da9a5cba4df", "message": "SAK-43339 Added group picker to permissions component\n\nhttps://jira.sakaiproject.org/browse/SAK-43339", "committedDate": "2020-03-08T13:49:51Z", "type": "forcePushed"}]}