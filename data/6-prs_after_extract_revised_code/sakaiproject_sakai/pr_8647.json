{"pr_number": 8647, "pr_title": "SAK-44397: Bugs fixes for SAK-42856: Provide a way to reply private", "pr_createdAt": "2020-10-01T16:38:59Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/8647", "timeline": [{"oid": "a23ff9ad3598045e23b7029ee360a4ae65304d8f", "url": "https://github.com/sakaiproject/sakai/commit/a23ff9ad3598045e23b7029ee360a4ae65304d8f", "message": "SAK-44397: Bugs fixes for SAK-42856: Provide a way to reply private\nmessages from external mail", "committedDate": "2020-10-01T16:24:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxODE1Nw==", "url": "https://github.com/sakaiproject/sakai/pull/8647#discussion_r498518157", "bodyText": "use the ServerConfigurationService api vs the cover", "author": "ern", "createdAt": "2020-10-01T21:17:43Z", "path": "msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java", "diffHunk": "@@ -1184,7 +1184,7 @@ private String getSystemAndReplyEmail(String defaultEmail, User currentUser, Mes\n \t\t    else\n \t\t\t    systemEmail = ServerConfigurationService.getString(FROM_ADDRESS, defaultEmail);\n \t    }\n-\t\tif ((\"all\".equals(ServerConfigurationService.getString(REAL_REPLY, \"none\")) || contextId.contains(ServerConfigurationService.getString(REAL_REPLY, \"none\"))) && systemEmail.equalsIgnoreCase(ServerConfigurationService.getString(FROM_ADDRESS, defaultEmail))) {\n+\t\tif (ServerConfigurationService.getStrings(REAL_REPLY)!=null && (\"all\".equals(ServerConfigurationService.getString(REAL_REPLY, \"none\")) || Arrays.asList(ServerConfigurationService.getStrings(REAL_REPLY)).contains(contextId)) && systemEmail.equalsIgnoreCase(ServerConfigurationService.getString(FROM_ADDRESS, defaultEmail))) {", "originalCommit": "a23ff9ad3598045e23b7029ee360a4ae65304d8f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9529e43927bb14141e89cf4b6bc70fd5a611167", "chunk": "diff --git a/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java b/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\nindex 44f6b6fdff..6b24c95ea8 100644\n--- a/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\n+++ b/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\n\n@@ -1176,17 +1176,17 @@ public class PrivateMessageManagerImpl extends HibernateDaoSupport implements Pr\n   private String getSystemAndReplyEmail(String defaultEmail, User currentUser, Message savedMessage, List replyEmail, String contextId) throws MessagingException{\n \t    String systemEmail;\n \n-\t    if (!ServerConfigurationService.getBoolean(\"msgcntr.notification.user.real.from\", false)) {\n-\t\t    systemEmail = ServerConfigurationService.getString(FROM_ADDRESS, defaultEmail);\n+\t    if (!serverConfigurationService.getBoolean(\"msgcntr.notification.user.real.from\", false)) {\n+\t\t    systemEmail = serverConfigurationService.getString(FROM_ADDRESS, defaultEmail);\n \t    } else  {\n \t\t    if (currentUser.getEmail() != null)\n \t\t\t    systemEmail = currentUser.getEmail();\n \t\t    else\n-\t\t\t    systemEmail = ServerConfigurationService.getString(FROM_ADDRESS, defaultEmail);\n+\t\t\t    systemEmail = serverConfigurationService.getString(FROM_ADDRESS, defaultEmail);\n \t    }\n-\t\tif (ServerConfigurationService.getStrings(REAL_REPLY)!=null && (\"all\".equals(ServerConfigurationService.getString(REAL_REPLY, \"none\")) || Arrays.asList(ServerConfigurationService.getStrings(REAL_REPLY)).contains(contextId)) && systemEmail.equalsIgnoreCase(ServerConfigurationService.getString(FROM_ADDRESS, defaultEmail))) {\n+\t\tif (serverConfigurationService.getStrings(REAL_REPLY)!=null && (\"all\".equals(serverConfigurationService.getString(REAL_REPLY, \"none\")) || Arrays.asList(serverConfigurationService.getStrings(REAL_REPLY)).contains(contextId)) && systemEmail.equalsIgnoreCase(serverConfigurationService.getString(FROM_ADDRESS, defaultEmail))) {\n \t\t\treplyEmail.add(new InternetAddress(buildMailReply(savedMessage)));\n-\t\t\tsystemEmail = ServerConfigurationService.getString(\"msgcntr.notification.from.address.reply\", defaultEmail);\n+\t\t\tsystemEmail = serverConfigurationService.getString(\"msgcntr.notification.from.address.reply\", defaultEmail);\n \t\t}\n \t    return systemEmail;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxODIxNQ==", "url": "https://github.com/sakaiproject/sakai/pull/8647#discussion_r498518215", "bodyText": "use the ServerConfigurationService api vs the cover", "author": "ern", "createdAt": "2020-10-01T21:17:51Z", "path": "msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java", "diffHunk": "@@ -1452,7 +1452,7 @@ private String buildMessageBody(PrivateMessage message) {\n \t      getResourceBundleString(EMAIL_FOOTER1) + \" \" + ServerConfigurationService.getString(\"ui.service\",\"Sakai\") +\n \t  \" \" + getResourceBundleString(EMAIL_FOOTER2) + \" \\\"\" +\n \t  siteTitle + \"\\\" \" + getResourceBundleString(EMAIL_FOOTER3) + \"\\n\";\n-\t  if ((\"all\".equals(ServerConfigurationService.getString(REAL_REPLY, \"none\")) || contextId.contains(ServerConfigurationService.getString(REAL_REPLY, \"none\")))){\n+\t  if (ServerConfigurationService.getStrings(REAL_REPLY)!=null && (\"all\".equals(ServerConfigurationService.getString(REAL_REPLY, \"none\")) || Arrays.asList(ServerConfigurationService.getStrings(REAL_REPLY)).contains(contextId))){", "originalCommit": "a23ff9ad3598045e23b7029ee360a4ae65304d8f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9529e43927bb14141e89cf4b6bc70fd5a611167", "chunk": "diff --git a/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java b/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\nindex 44f6b6fdff..6b24c95ea8 100644\n--- a/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\n+++ b/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\n\n@@ -1449,13 +1449,13 @@ public class PrivateMessageManagerImpl extends HibernateDaoSupport implements Pr\n \t  }\n \n \t  String footer = \"<p>----------------------<br>\" +\n-\t      getResourceBundleString(EMAIL_FOOTER1) + \" \" + ServerConfigurationService.getString(\"ui.service\",\"Sakai\") +\n+\t      getResourceBundleString(EMAIL_FOOTER1) + \" \" + serverConfigurationService.getString(\"ui.service\",\"Sakai\") +\n \t  \" \" + getResourceBundleString(EMAIL_FOOTER2) + \" \\\"\" +\n \t  siteTitle + \"\\\" \" + getResourceBundleString(EMAIL_FOOTER3) + \"\\n\";\n-\t  if (ServerConfigurationService.getStrings(REAL_REPLY)!=null && (\"all\".equals(ServerConfigurationService.getString(REAL_REPLY, \"none\")) || Arrays.asList(ServerConfigurationService.getStrings(REAL_REPLY)).contains(contextId))){\n+\t  if (serverConfigurationService.getStrings(REAL_REPLY)!=null && (\"all\".equals(serverConfigurationService.getString(REAL_REPLY, \"none\")) || Arrays.asList(serverConfigurationService.getStrings(REAL_REPLY)).contains(contextId))){\n \t\t  footer = footer +  getResourceBundleString(EMAIL_FOOTER4_A) +\n \t\t\t\t  \" <a href=\\\"\" +\n-\t\t\t\t  ServerConfigurationService.getPortalUrl() + \n+\t\t\t\t  serverConfigurationService.getPortalUrl() + \n \t\t\t\t  \"/site/\" + contextTool +\n \t\t\t\t  \"/tool/\" + thisToolId+\n \t\t\t\t  (message!=null?\"/privateMsg/pvtMsgDirectAccess?current_msg_detail=\"+message.getId():\"\")+\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxODg1Mg==", "url": "https://github.com/sakaiproject/sakai/pull/8647#discussion_r498518852", "bodyText": "use Types", "author": "ern", "createdAt": "2020-10-01T21:19:30Z", "path": "msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java", "diffHunk": "@@ -2235,7 +2235,7 @@ public void processPvtMsgReplySentAction(PrivateMessage currentMessage, PrivateM\n \t\t\t\t  log.error(e.getMessage(), e);\n \t\t\t  }\n \n-\t\t\t  Event event = eventTrackingService.newEvent(DiscussionForumService.EVENT_MESSAGES_RESPONSE, getEventMessage(currentMessage, DiscussionForumService.MESSAGES_TOOL_ID, rrepMsg.getAuthorId(), ((PrivateMessageRecipientImpl)currentMessage.getRecipients().get(0)).getContextId()), null, true, NotificationService.NOTI_OPTIONAL, statement);\n+\t\t\t  Event event = eventTrackingService.newEvent(DiscussionForumService.EVENT_MESSAGES_RESPONSE, getEventMessage(currentMessage, DiscussionForumService.MESSAGES_TOOL_ID, rrepMsg.getAuthorId(), ((PrivateMessageRecipientImpl)currentMessage.getRecipients().get(0)).getContextId()), contextId, true, NotificationService.NOTI_OPTIONAL, statement);", "originalCommit": "a23ff9ad3598045e23b7029ee360a4ae65304d8f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9529e43927bb14141e89cf4b6bc70fd5a611167", "chunk": "diff --git a/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java b/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\nindex 44f6b6fdff..6b24c95ea8 100644\n--- a/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\n+++ b/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\n\n@@ -2241,10 +2241,10 @@ return topicTypeUuid;\n \t  }\n   }\n   \n-  private static String encrypt(String value) {\n+  private String encrypt(String value) {\n \t  try {\n \t\t  IvParameterSpec iv = new IvParameterSpec(INIT_VECTOR.getBytes(StandardCharsets.UTF_8));\n-\t\t  String key = ServerConfigurationService.getString(\"msgcntr.no.reply.secret\", \"1111111111111111\");\n+\t\t  String key = serverConfigurationService.getString(\"msgcntr.no.reply.secret\", \"1111111111111111\");\n \t\t  SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes(StandardCharsets.UTF_8), \"AES\");\n \n \t\t  Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5PADDING\");\n"}}, {"oid": "e9529e43927bb14141e89cf4b6bc70fd5a611167", "url": "https://github.com/sakaiproject/sakai/commit/e9529e43927bb14141e89cf4b6bc70fd5a611167", "message": "SAK-44397: Resolved Issues", "committedDate": "2020-10-08T09:14:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYwNDQwNw==", "url": "https://github.com/sakaiproject/sakai/pull/8647#discussion_r508604407", "bodyText": "use a local variable for serverConfigurationService.getStrings(REAL_REPLY)", "author": "ern", "createdAt": "2020-10-20T15:23:33Z", "path": "msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java", "diffHunk": "@@ -1449,21 +1449,21 @@ private String buildMessageBody(PrivateMessage message) {\n \t  }\n \n \t  String footer = \"<p>----------------------<br>\" +\n-\t      getResourceBundleString(EMAIL_FOOTER1) + \" \" + ServerConfigurationService.getString(\"ui.service\",\"Sakai\") +\n+\t      getResourceBundleString(EMAIL_FOOTER1) + \" \" + serverConfigurationService.getString(\"ui.service\",\"Sakai\") +\n \t  \" \" + getResourceBundleString(EMAIL_FOOTER2) + \" \\\"\" +\n \t  siteTitle + \"\\\" \" + getResourceBundleString(EMAIL_FOOTER3) + \"\\n\";\n-\t  if ((\"all\".equals(ServerConfigurationService.getString(REAL_REPLY, \"none\")) || contextId.contains(ServerConfigurationService.getString(REAL_REPLY, \"none\")))){\n+\t  if (serverConfigurationService.getStrings(REAL_REPLY)!=null && (\"all\".equals(serverConfigurationService.getString(REAL_REPLY, \"none\")) || Arrays.asList(serverConfigurationService.getStrings(REAL_REPLY)).contains(contextId))){", "originalCommit": "e9529e43927bb14141e89cf4b6bc70fd5a611167", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "104f79284e30b60557abd1d1cc24def1cc38593d", "chunk": "diff --git a/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java b/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\nindex 6b24c95ea8..e1064dbfdd 100644\n--- a/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\n+++ b/msgcntr/messageforums-component-impl/src/java/org/sakaiproject/component/app/messageforums/ui/PrivateMessageManagerImpl.java\n\n@@ -1452,7 +1453,8 @@ public class PrivateMessageManagerImpl extends HibernateDaoSupport implements Pr\n \t      getResourceBundleString(EMAIL_FOOTER1) + \" \" + serverConfigurationService.getString(\"ui.service\",\"Sakai\") +\n \t  \" \" + getResourceBundleString(EMAIL_FOOTER2) + \" \\\"\" +\n \t  siteTitle + \"\\\" \" + getResourceBundleString(EMAIL_FOOTER3) + \"\\n\";\n-\t  if (serverConfigurationService.getStrings(REAL_REPLY)!=null && (\"all\".equals(serverConfigurationService.getString(REAL_REPLY, \"none\")) || Arrays.asList(serverConfigurationService.getStrings(REAL_REPLY)).contains(contextId))){\n+\t  String[] realReply = serverConfigurationService.getStrings(REAL_REPLY);\n+\t  if (realReply!=null && (\"all\".equals(serverConfigurationService.getString(REAL_REPLY, \"none\")) || Arrays.asList(realReply).contains(contextId))){\n \t\t  footer = footer +  getResourceBundleString(EMAIL_FOOTER4_A) +\n \t\t\t\t  \" <a href=\\\"\" +\n \t\t\t\t  serverConfigurationService.getPortalUrl() + \n"}}, {"oid": "104f79284e30b60557abd1d1cc24def1cc38593d", "url": "https://github.com/sakaiproject/sakai/commit/104f79284e30b60557abd1d1cc24def1cc38593d", "message": "SAK-44397: use a local variable for\nserverConfigurationService.getStrings(REAL_REPLY)", "committedDate": "2020-10-27T09:01:06Z", "type": "commit"}]}