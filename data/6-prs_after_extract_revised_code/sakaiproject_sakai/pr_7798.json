{"pr_number": 7798, "pr_title": "SAK-42980 - Assignment submission list - comparator has errors when sorting by content review", "pr_createdAt": "2020-01-22T19:35:14Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/7798", "timeline": [{"oid": "575f31989af26d24372376a88425d90af79908fc", "url": "https://github.com/sakaiproject/sakai/commit/575f31989af26d24372376a88425d90af79908fc", "message": "SAK-42980 - Assignment submission list - comparator has errors when sorting by content review", "committedDate": "2020-01-22T19:33:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2Mjg3NQ==", "url": "https://github.com/sakaiproject/sakai/pull/7798#discussion_r369762875", "bodyText": "Note to reviewers: I've done this change as this method is invoked pretty frequently for content review items that are in 'Error' status (e.g. student submission is less than 20 words, etc.). It contributes to log bloat with lines like:\n:getReviewReport(ContentResource) Report status: 2", "author": "bbailla2", "createdAt": "2020-01-22T19:38:04Z", "path": "assignment/impl/src/java/org/sakaiproject/assignment/impl/AssignmentServiceImpl.java", "diffHunk": "@@ -4319,7 +4337,7 @@ private String getReviewReport(ContentResource cr, String assignmentReference) {\n                 return contentReviewService.getReviewReportStudent(contentId, assignmentReference, userDirectoryService.getCurrentUser().getId());\n             }\n         } catch (Exception e) {\n-            log.warn(\":getReviewReport(ContentResource) {}\", e.getMessage());\n+            log.debug(\":getReviewReport(ContentResource) {}\", e.getMessage());", "originalCommit": "575f31989af26d24372376a88425d90af79908fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "d1b2089ba8071727c971d64c13a0342d47b24942", "url": "https://github.com/sakaiproject/sakai/commit/d1b2089ba8071727c971d64c13a0342d47b24942", "message": "SAK-42980 - removing unnecessary comment", "committedDate": "2020-01-22T19:41:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzNzcwNw==", "url": "https://github.com/sakaiproject/sakai/pull/7798#discussion_r369837707", "bodyText": "We can't delete all of this sorting logic and just call getSortedContentReviewResults instead?", "author": "ottenhoff", "createdAt": "2020-01-22T22:22:59Z", "path": "assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java", "diffHunk": "@@ -14528,7 +14528,9 @@ else if (m_criteria.equals(SORTED_GRADE_SUBMISSION_CONTENTREVIEW)) {\n                         List<ContentReviewResult> r1 = assignmentService.getContentReviewResults(s1);\n                         List<ContentReviewResult> r2 = assignmentService.getContentReviewResults(s2);\n \n-                        if (CollectionUtils.isEmpty(r1)) {\n+                        if (CollectionUtils.isEmpty(r1) && CollectionUtils.isEmpty(r2)) {\n+                            result = 0;\n+                        } else if (CollectionUtils.isEmpty(r1)) {", "originalCommit": "d1b2089ba8071727c971d64c13a0342d47b24942", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0NDA1MA==", "url": "https://github.com/sakaiproject/sakai/pull/7798#discussion_r369844050", "bodyText": "I was initially going to do that, but that would require it to fully sort the content review items on the two submissions being compared, which would result in a lot of duplicated computation when it sorts the full submission list. This just seeks the maximum score which should perform better", "author": "bbailla2", "createdAt": "2020-01-22T22:38:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzNzcwNw=="}], "type": "inlineReview", "revised_code": null}]}