{"pr_number": 8626, "pr_title": "SAK-44324: SAMIGO - Calculated Questions: Some functions don't work (mXparser)", "pr_createdAt": "2020-09-28T09:36:12Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/8626", "timeline": [{"oid": "6cb5b58a49f788f6de733fbcb7c794530e9268df", "url": "https://github.com/sakaiproject/sakai/commit/6cb5b58a49f788f6de733fbcb7c794530e9268df", "message": "SAK-44324: SAMIGO - Calculated Questions: Some functions don't work (mXparser)", "committedDate": "2020-09-28T09:34:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzMTE4Nw==", "url": "https://github.com/sakaiproject/sakai/pull/8626#discussion_r496431187", "bodyText": "@ottenhoff Added unescape to make work functions that contains <, and >", "author": "jesusmmp", "createdAt": "2020-09-29T05:44:24Z", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/author/CalculatedQuestionExtractListener.java", "diffHunk": "@@ -460,7 +462,7 @@ private Long getMaxSequenceValue(Map<String, CalculatedQuestionVariableBean> var\n \n             // evaluate each calculation\n             for (CalculatedQuestionCalculationBean cqcb : calculatedQuestionBean.getCalculationsList()) {\n-                String formulaStr = GradingService.cleanFormula(cqcb.getText());\n+                String formulaStr = StringEscapeUtils.unescapeHtml4(GradingService.cleanFormula(cqcb.getText()));", "originalCommit": "6cb5b58a49f788f6de733fbcb7c794530e9268df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzMTM0OQ==", "url": "https://github.com/sakaiproject/sakai/pull/8626#discussion_r496431349", "bodyText": "@ottenhoff Added a new test that contains >", "author": "jesusmmp", "createdAt": "2020-09-29T05:44:59Z", "path": "samigo/samigo-services/src/test/org/sakaiproject/tool/assessment/services/GradingServiceTest.java", "diffHunk": "@@ -431,7 +449,41 @@ public void testCalculationsToValues() throws SamigoExpressionError {\n         Assert.assertEquals(\"1E11\", result);                 \n         result = gradingService.processFormulaIntoValue(\"1000000000000.00\", 2);\n         Assert.assertNotNull(result);\n-        Assert.assertEquals(\"1E12\", result);                 \n+        Assert.assertEquals(\"1E12\", result);\n+\n+        // mixed-case functions\n+        result = gradingService.processFormulaIntoValue(\"qNor(0.5, 2, 1)\", 2);\n+        Assert.assertNotNull(result);\n+        Assert.assertEquals(\"2\", result);\n+        result = gradingService.processFormulaIntoValue(\"cNor(0.7, 3, 1)\", 2);\n+        Assert.assertNotNull(result);\n+        Assert.assertEquals(\"0.01\", result);\n+        // test lowercasing\n+        result = gradingService.processFormulaIntoValue(\"pi + E\", 2);\n+        Assert.assertNotNull(result);\n+        Assert.assertEquals(\"5.86\", result);\n+        // speed of light\n+        result = gradingService.processFormulaIntoValue(\"[c]*3\", 2);\n+        Assert.assertNotNull(result);\n+        Assert.assertEquals(\"899377374\", result);\n+        // golden ratio\n+        result = gradingService.processFormulaIntoValue(\"3*[phi]\", 2);\n+        Assert.assertNotNull(result);\n+        Assert.assertEquals(\"4.85\", result);\n+        // binomial coefficient\n+        result = gradingService.processFormulaIntoValue(\"C(8,3)\", 2);\n+        Assert.assertNotNull(result);\n+        Assert.assertEquals(\"56\", result);\n+        result = gradingService.processFormulaIntoValue(\"if(1>3, 5, 2)\", 2);\n+        Assert.assertNotNull(result);\n+        Assert.assertEquals(\"2\", result);", "originalCommit": "6cb5b58a49f788f6de733fbcb7c794530e9268df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b7bde26d54520dbb0794f1ce21eb69f1845aa159", "url": "https://github.com/sakaiproject/sakai/commit/b7bde26d54520dbb0794f1ce21eb69f1845aa159", "message": "SAK-44324: SAMIGO - Calculated Questions: Some functions don't work (mXparser)", "committedDate": "2020-10-08T06:30:25Z", "type": "commit"}]}