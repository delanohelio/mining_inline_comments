{"pr_number": 7079, "pr_title": "Add retry custom confirmation logic", "pr_createdAt": "2020-09-03T07:37:31Z", "pr_url": "https://github.com/realm/realm-java/pull/7079", "timeline": [{"oid": "93587e0b30b2c67003bec828a221b695cf7189c0", "url": "https://github.com/realm/realm-java/commit/93587e0b30b2c67003bec828a221b695cf7189c0", "message": "Add retry custom confirmation logic", "committedDate": "2020-09-03T07:32:18Z", "type": "commit"}, {"oid": "316cbaff7047cc3fad90389893c9a44dc5fba569", "url": "https://github.com/realm/realm-java/commit/316cbaff7047cc3fad90389893c9a44dc5fba569", "message": "Bump object store head", "committedDate": "2020-09-03T09:00:24Z", "type": "commit"}, {"oid": "7169911ed2f69bbc9fa17b3ed80b95100e654974", "url": "https://github.com/realm/realm-java/commit/7169911ed2f69bbc9fa17b3ed80b95100e654974", "message": "Rename call custom confirmation function", "committedDate": "2020-09-03T14:55:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIzMTc3MA==", "url": "https://github.com/realm/realm-java/pull/7079#discussion_r484231770", "bodyText": "Don't we usually include a test for these validations?", "author": "rorbech", "createdAt": "2020-09-07T07:25:44Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java", "diffHunk": "@@ -145,6 +146,19 @@ public void resendConfirmationEmail(String email) throws AppException {\n         ResultHandler.handleResult(null, error);\n     }\n \n+    /**\n+     * Retries the custom confirmation function on a user for a given email.\n+     *\n+     * @param email the email of the user.\n+     * @throws AppException if the server failed to confirm the user.\n+     */\n+    public void retryCustomConfirmation(String email) throws AppException {\n+        Util.checkEmpty(email, \"email\");", "originalCommit": "7169911ed2f69bbc9fa17b3ed80b95100e654974", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI0NTIwNg==", "url": "https://github.com/realm/realm-java/pull/7079#discussion_r484245206", "bodyText": "Yes, I missed writing such tests", "author": "clementetb", "createdAt": "2020-09-07T07:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIzMTc3MA=="}], "type": "inlineReview", "revised_code": {"commit": "d8d5d0e4bb13042ca0d3da3d52c3856772cf89bd", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java\nindex 2809163d4..4c27c2dc6 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java\n\n@@ -147,12 +147,31 @@ public abstract class EmailPasswordAuth {\n     }\n \n     /**\n-     * Retries the custom confirmation function on a user for a given email.\n+     * Resend the confirmation for a user to the given email.\n+     *\n+     * @param email the email of the user.\n+     * @param callback callback when resending the email has completed or failed. The callback will\n+     * always happen on the same thread as this method is called on.\n+     * @throws IllegalStateException if called from a non-looper thread.\n+     */\n+    public RealmAsyncTask resendConfirmationEmailAsync(String email, App.Callback<Void> callback) {\n+        Util.checkLooperThread(\"Asynchronous resending the confirmation email is only possible from looper threads.\");\n+        return new Request<Void>(NETWORK_POOL_EXECUTOR, callback) {\n+            @Override\n+            public Void run() throws AppException {\n+                resendConfirmationEmail(email);\n+                return null;\n+            }\n+        }.start();\n+    }\n+\n+    /**\n+     * Calls the custom confirmation function on a user for a given email.\n      *\n      * @param email the email of the user.\n      * @throws AppException if the server failed to confirm the user.\n      */\n-    public void retryCustomConfirmation(String email) throws AppException {\n+    public void callCustomConfirmationFunction(String email) throws AppException {\n         Util.checkEmpty(email, \"email\");\n         AtomicReference<AppException> error = new AtomicReference<>(null);\n         call(TYPE_CALL_CUSTOM_CONFIRMATION_FUNCTION, new OsJNIVoidResultCallback(error), email);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIzMjIyNg==", "url": "https://github.com/realm/realm-java/pull/7079#discussion_r484232226", "bodyText": "Any particular reason that we do not have an async variant of this?", "author": "rorbech", "createdAt": "2020-09-07T07:26:37Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java", "diffHunk": "@@ -145,6 +146,19 @@ public void resendConfirmationEmail(String email) throws AppException {\n         ResultHandler.handleResult(null, error);\n     }\n \n+    /**\n+     * Retries the custom confirmation function on a user for a given email.\n+     *\n+     * @param email the email of the user.\n+     * @throws AppException if the server failed to confirm the user.\n+     */\n+    public void retryCustomConfirmation(String email) throws AppException {", "originalCommit": "7169911ed2f69bbc9fa17b3ed80b95100e654974", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI0NTM0Nw==", "url": "https://github.com/realm/realm-java/pull/7079#discussion_r484245347", "bodyText": "Yes, I missed writing an async method.", "author": "clementetb", "createdAt": "2020-09-07T07:47:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIzMjIyNg=="}], "type": "inlineReview", "revised_code": {"commit": "d8d5d0e4bb13042ca0d3da3d52c3856772cf89bd", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java\nindex 2809163d4..4c27c2dc6 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java\n\n@@ -147,12 +147,31 @@ public abstract class EmailPasswordAuth {\n     }\n \n     /**\n-     * Retries the custom confirmation function on a user for a given email.\n+     * Resend the confirmation for a user to the given email.\n+     *\n+     * @param email the email of the user.\n+     * @param callback callback when resending the email has completed or failed. The callback will\n+     * always happen on the same thread as this method is called on.\n+     * @throws IllegalStateException if called from a non-looper thread.\n+     */\n+    public RealmAsyncTask resendConfirmationEmailAsync(String email, App.Callback<Void> callback) {\n+        Util.checkLooperThread(\"Asynchronous resending the confirmation email is only possible from looper threads.\");\n+        return new Request<Void>(NETWORK_POOL_EXECUTOR, callback) {\n+            @Override\n+            public Void run() throws AppException {\n+                resendConfirmationEmail(email);\n+                return null;\n+            }\n+        }.start();\n+    }\n+\n+    /**\n+     * Calls the custom confirmation function on a user for a given email.\n      *\n      * @param email the email of the user.\n      * @throws AppException if the server failed to confirm the user.\n      */\n-    public void retryCustomConfirmation(String email) throws AppException {\n+    public void callCustomConfirmationFunction(String email) throws AppException {\n         Util.checkEmpty(email, \"email\");\n         AtomicReference<AppException> error = new AtomicReference<>(null);\n         call(TYPE_CALL_CUSTOM_CONFIRMATION_FUNCTION, new OsJNIVoidResultCallback(error), email);\n"}}, {"oid": "d8d5d0e4bb13042ca0d3da3d52c3856772cf89bd", "url": "https://github.com/realm/realm-java/commit/d8d5d0e4bb13042ca0d3da3d52c3856772cf89bd", "message": "Add missing test cases and async function", "committedDate": "2020-09-07T08:09:18Z", "type": "commit"}, {"oid": "69eb6ac0b7fe090bcc8453c982cf2b6306cf5231", "url": "https://github.com/realm/realm-java/commit/69eb6ac0b7fe090bcc8453c982cf2b6306cf5231", "message": "Test threading cases", "committedDate": "2020-09-07T08:25:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM5MzA1MQ==", "url": "https://github.com/realm/realm-java/pull/7079#discussion_r484393051", "bodyText": "We should make sure we call this method the same across SDK's. Right now it doesn't seem to be documented on the website (most likely because the old SDK did not have it).\nEspecially since it is described as rerunning the registration. This makes me wonder if we should rename this to rerunCustomConfirmationFunction since it already ran once when registering and reword the javadoc appropriately?", "author": "cmelchior", "createdAt": "2020-09-07T12:11:03Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java", "diffHunk": "@@ -164,6 +165,38 @@ public Void run() throws AppException {\n         }.start();\n     }\n \n+    /**\n+     * Calls the custom confirmation function on a user for a given email.\n+     *\n+     * @param email the email of the user.\n+     * @throws AppException if the server failed to confirm the user.\n+     */\n+    public void callCustomConfirmationFunction(String email) throws AppException {", "originalCommit": "69eb6ac0b7fe090bcc8453c982cf2b6306cf5231", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "149684697f2e8ab497661f8147cfbef4823df85a", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java\nindex 4c27c2dc6..4520b9bf8 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java\n\n@@ -166,32 +166,32 @@ public abstract class EmailPasswordAuth {\n     }\n \n     /**\n-     * Calls the custom confirmation function on a user for a given email.\n+     * Retries the custom confirmation on a user for a given email.\n      *\n      * @param email the email of the user.\n      * @throws AppException if the server failed to confirm the user.\n      */\n-    public void callCustomConfirmationFunction(String email) throws AppException {\n+    public void retryCustomConfirmation(String email) throws AppException {\n         Util.checkEmpty(email, \"email\");\n         AtomicReference<AppException> error = new AtomicReference<>(null);\n-        call(TYPE_CALL_CUSTOM_CONFIRMATION_FUNCTION, new OsJNIVoidResultCallback(error), email);\n+        call(TYPE_RETRY_CUSTOM_CONFIRMATION, new OsJNIVoidResultCallback(error), email);\n         ResultHandler.handleResult(null, error);\n     }\n \n     /**\n-     * Calls the custom confirmation function on a user for a given email.\n+     * Retries the custom confirmation on a user for a given email.\n      *\n      * @param email the email of the user.\n-     * @param callback callback when calling the custom confirmation function has completed or failed. The callback will\n+     * @param callback callback when retrying the custom confirmation has completed or failed. The callback will\n      * always happen on the same thread as this method is called on.\n      * @throws IllegalStateException if called from a non-looper thread.\n      */\n-    public RealmAsyncTask callCustomConfirmationFunctionAsync(String email, App.Callback<Void> callback) {\n-        Util.checkLooperThread(\"Asynchronous calling custom confirmation function is only possible from looper threads.\");\n+    public RealmAsyncTask retryCustomConfirmationAsync(String email, App.Callback<Void> callback) {\n+        Util.checkLooperThread(\"Asynchronous retry custom confirmation is only possible from looper threads.\");\n         return new Request<Void>(NETWORK_POOL_EXECUTOR, callback) {\n             @Override\n             public Void run() throws AppException {\n-                callCustomConfirmationFunction(email);\n+                retryCustomConfirmation(email);\n                 return null;\n             }\n         }.start();\n"}}, {"oid": "149684697f2e8ab497661f8147cfbef4823df85a", "url": "https://github.com/realm/realm-java/commit/149684697f2e8ab497661f8147cfbef4823df85a", "message": "Rename custom confirmation method", "committedDate": "2020-09-10T13:33:57Z", "type": "commit"}, {"oid": "59bff0786cb04b453c8776176579ac985b79f1dc", "url": "https://github.com/realm/realm-java/commit/59bff0786cb04b453c8776176579ac985b79f1dc", "message": "Fix integration test cases, they were not calling the custom confirmation function", "committedDate": "2020-09-11T12:24:16Z", "type": "commit"}, {"oid": "83c05519a0e5c4dbbd86a971fd52262c0afa9623", "url": "https://github.com/realm/realm-java/commit/83c05519a0e5c4dbbd86a971fd52262c0afa9623", "message": "Update changelog file", "committedDate": "2020-09-12T03:38:06Z", "type": "commit"}, {"oid": "d7ec0fae24a2e6ab484170d3435d78f78f51df12", "url": "https://github.com/realm/realm-java/commit/d7ec0fae24a2e6ab484170d3435d78f78f51df12", "message": "Merge branch 'v10' into ct/custom-confirm-call\n\n# Conflicts:\n#\tCHANGELOG.md\n#\trealm/realm-library/src/main/cpp/object-store", "committedDate": "2020-09-16T09:58:17Z", "type": "commit"}, {"oid": "9552e55c7af9d32c9f3a9bc177325cdf7df4fbda", "url": "https://github.com/realm/realm-java/commit/9552e55c7af9d32c9f3a9bc177325cdf7df4fbda", "message": "Fix tests", "committedDate": "2020-09-16T11:13:04Z", "type": "commit"}]}