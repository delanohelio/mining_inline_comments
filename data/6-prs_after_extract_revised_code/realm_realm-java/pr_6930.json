{"pr_number": 6930, "pr_title": "Support for custom user data", "pr_createdAt": "2020-06-08T10:17:36Z", "pr_url": "https://github.com/realm/realm-java/pull/6930", "timeline": [{"oid": "5245f4f1c095b11176f8a7e9e5c5ade3c3dd911f", "url": "https://github.com/realm/realm-java/commit/5245f4f1c095b11176f8a7e9e5c5ade3c3dd911f", "message": "Support for custom user data", "committedDate": "2020-06-08T10:14:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMjUyMg==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r436612522", "bodyText": "Looks like we also need to expose refreshCustomData():  https://github.com/realm/realm-object-store/blob/v10/src/sync/app.hpp#L238 ... and since that is a network request, it should probably be:\npublic Document getCustomData()\npublic Document refreshCustomData()\npublic RealmAsyncTask refreshCustomData(Result<Document> callback)", "author": "cmelchior", "createdAt": "2020-06-08T10:55:33Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -280,6 +282,18 @@ public State getState() {\n         throw new IllegalStateException(\"Unknown state: \" + nativeState);\n     }\n \n+    /**\n+     * Return the custom user data associated with the user in the Realm App.\n+     * <p>\n+     * The data is only refreshed when the user's access token is refreshed.\n+     *\n+     * @return The custom user data associated with the user.\n+     */\n+    public Document getCustomData() {", "originalCommit": "5245f4f1c095b11176f8a7e9e5c5ade3c3dd911f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYyODM5MA==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r436628390", "bodyText": "Will do. Should the native part of all these methods actually be on OsUser instead and what are the rationale for doing one over the other?", "author": "rorbech", "createdAt": "2020-06-08T11:30:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMjUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMDI0OA==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r436630248", "bodyText": "So far we are using OsUser for all API's found on sync_user.hpp in ObjectStore.  refresh_custom_data is there as well, so should probably be there.\nThe primary reason for the split is that the Os<X> normally implements the NativeObject interface which we don't want in the public API, but it also allows us greater design flexibility in terms of how we expose the OS API.\nIt does have the downside there many methods are just \"pass-through\" though.", "author": "cmelchior", "createdAt": "2020-06-08T11:35:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMjUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzMwMA==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438707300", "bodyText": "Moved direct OS wrappers to OsSyncUser and kept the additional logic (returning user custom data after actual refresh) in User.", "author": "rorbech", "createdAt": "2020-06-11T11:04:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMjUyMg=="}], "type": "inlineReview", "revised_code": {"commit": "5da855052377e5a13575b98535b8018283a677a7", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\nindex 5f51d0568..3f0d369b7 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n\n@@ -285,15 +285,48 @@ public class User {\n     /**\n      * Return the custom user data associated with the user in the Realm App.\n      * <p>\n-     * The data is only refreshed when the user's access token is refreshed.\n+     * The data is only refreshed when the user's access token is refreshed or when explicitly\n+     * {@link #refreshCustomData() refreshed}.\n      *\n      * @return The custom user data associated with the user.\n      */\n     public Document getCustomData() {\n-        String encodedData = nativeCustomData(osUser.getNativePtr());\n-        return JniBsonProtocol.decode(encodedData, app.getConfiguration().getDefaultCodecRegistry().get(Document.class));\n+        return osUser.getCustomData();\n     }\n \n+    /**\n+     * Re-fetch custom user data from the Realm App.\n+     *\n+     * @return The updated custom user data associated with the user.\n+     *\n+     * @throws AppException if the request failed in some way.\n+     */\n+    public Document refreshCustomData() {\n+        osUser.refreshCustomData();\n+        return getCustomData();\n+    }\n+\n+    /**\n+     * Re-fetch custom user data from the Realm App asynchronously.\n+     * <p>\n+     * This is the asynchronous variant of {@link #refreshCustomData()}.\n+     *\n+     * @param callback The callback that will receive the result or any errors from the request.\n+     * @return The task representing the ongoing operation.\n+     *\n+     * @throws IllegalStateException if not called on a looper thread.\n+     */\n+    public RealmAsyncTask refreshCustomData(App.Callback<Document> callback) {\n+        Util.checkLooperThread(\"Asynchronous functions is only possible from looper threads.\");\n+        return new Request<Document>(App.NETWORK_POOL_EXECUTOR, callback) {\n+            @Override\n+            public Document run() throws AppException {\n+                return refreshCustomData();\n+            }\n+        }.start();\n+    }\n+\n+\n     /**\n      * Returns true if the user is currently logged in.\n      * Returns whether or not this user is still logged into the MongoDB Realm App.\n"}}, {"oid": "5da855052377e5a13575b98535b8018283a677a7", "url": "https://github.com/realm/realm-java/commit/5da855052377e5a13575b98535b8018283a677a7", "message": "Support for custom user data refresh", "committedDate": "2020-06-09T08:50:46Z", "type": "commit"}, {"oid": "0f4bb64f980e2990b7046eb8023b4b869576673b", "url": "https://github.com/realm/realm-java/commit/0f4bb64f980e2990b7046eb8023b4b869576673b", "message": "Trying to rework import to avoid stale service references", "committedDate": "2020-06-09T09:07:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMDU3MQ==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438100571", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * {@link #refreshCustomData() refreshed}.\n          \n          \n            \n                 * calling {@link #refreshCustomData()}.", "author": "cmelchior", "createdAt": "2020-06-10T12:58:02Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -280,6 +282,51 @@ public State getState() {\n         throw new IllegalStateException(\"Unknown state: \" + nativeState);\n     }\n \n+    /**\n+     * Return the custom user data associated with the user in the Realm App.\n+     * <p>\n+     * The data is only refreshed when the user's access token is refreshed or when explicitly\n+     * {@link #refreshCustomData() refreshed}.", "originalCommit": "0f4bb64f980e2990b7046eb8023b4b869576673b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59d840ebfac3782f3318cb2e7b002373120694d9", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\nindex 3f0d369b7..218a7f1d9 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n\n@@ -286,7 +295,7 @@ public class User {\n      * Return the custom user data associated with the user in the Realm App.\n      * <p>\n      * The data is only refreshed when the user's access token is refreshed or when explicitly\n-     * {@link #refreshCustomData() refreshed}.\n+     * calling {@link #refreshCustomData()}.\n      *\n      * @return The custom user data associated with the user.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMDc4Mg==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438100782", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *", "author": "cmelchior", "createdAt": "2020-06-10T12:58:21Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -280,6 +282,51 @@ public State getState() {\n         throw new IllegalStateException(\"Unknown state: \" + nativeState);\n     }\n \n+    /**\n+     * Return the custom user data associated with the user in the Realm App.\n+     * <p>\n+     * The data is only refreshed when the user's access token is refreshed or when explicitly\n+     * {@link #refreshCustomData() refreshed}.\n+     *\n+     * @return The custom user data associated with the user.\n+     */\n+    public Document getCustomData() {\n+        return osUser.getCustomData();\n+    }\n+\n+    /**\n+     * Re-fetch custom user data from the Realm App.\n+     *\n+     * @return The updated custom user data associated with the user.\n+     *", "originalCommit": "0f4bb64f980e2990b7046eb8023b4b869576673b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59d840ebfac3782f3318cb2e7b002373120694d9", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\nindex 3f0d369b7..218a7f1d9 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n\n@@ -286,7 +295,7 @@ public class User {\n      * Return the custom user data associated with the user in the Realm App.\n      * <p>\n      * The data is only refreshed when the user's access token is refreshed or when explicitly\n-     * {@link #refreshCustomData() refreshed}.\n+     * calling {@link #refreshCustomData()}.\n      *\n      * @return The custom user data associated with the user.\n      */\n"}}, {"oid": "65c102a46ead0c54b03387032964c2fee312dc29", "url": "https://github.com/realm/realm-java/commit/65c102a46ead0c54b03387032964c2fee312dc29", "message": "Revert \"Trying to rework import to avoid stale service references\"\n\nThis reverts commit 0f4bb64f980e2990b7046eb8023b4b869576673b.", "committedDate": "2020-06-11T09:27:42Z", "type": "commit"}, {"oid": "ed4e1ddffc04a2395e6ef9e8da117db4c31bd2f8", "url": "https://github.com/realm/realm-java/commit/ed4e1ddffc04a2395e6ef9e8da117db4c31bd2f8", "message": "Merge branch 'v10' into cr/custom-user-data", "committedDate": "2020-06-11T09:29:45Z", "type": "commit"}, {"oid": "f034892edeb3c486ff800a4d42ff9ab3c7e8d39b", "url": "https://github.com/realm/realm-java/commit/f034892edeb3c486ff800a4d42ff9ab3c7e8d39b", "message": "Updates according to code review", "committedDate": "2020-06-11T09:30:10Z", "type": "commit"}, {"oid": "24f5abaa9b86ef1b399ac19de6dfb57bc61d0163", "url": "https://github.com/realm/realm-java/commit/24f5abaa9b86ef1b399ac19de6dfb57bc61d0163", "message": "Ignore tests that was not possible to automate", "committedDate": "2020-06-11T09:38:01Z", "type": "commit"}, {"oid": "59d840ebfac3782f3318cb2e7b002373120694d9", "url": "https://github.com/realm/realm-java/commit/59d840ebfac3782f3318cb2e7b002373120694d9", "message": "Apply suggestions from code review\n\nCo-authored-by: Christian Melchior <christian@ilios.dk>", "committedDate": "2020-06-11T10:03:12Z", "type": "commit"}, {"oid": "f54fb26535b047eea031ac388304f4c990c3071f", "url": "https://github.com/realm/realm-java/commit/f54fb26535b047eea031ac388304f4c990c3071f", "message": "Apply comments from code review", "committedDate": "2020-06-11T10:26:23Z", "type": "commit"}]}