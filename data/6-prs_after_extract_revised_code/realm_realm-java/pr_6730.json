{"pr_number": 6730, "pr_title": "Add support for Embedded Objects", "pr_createdAt": "2020-01-29T22:34:04Z", "pr_url": "https://github.com/realm/realm-java/pull/6730", "timeline": [{"oid": "e531ba67c1de6a9372fef603619ec50ec2b6392c", "url": "https://github.com/realm/realm-java/commit/e531ba67c1de6a9372fef603619ec50ec2b6392c", "message": "Added preliminary annotation processor support", "committedDate": "2020-01-29T21:53:49Z", "type": "commit"}, {"oid": "fa85cd20de821b2d1873aee1d9fcc6b4c0f1aad4", "url": "https://github.com/realm/realm-java/commit/fa85cd20de821b2d1873aee1d9fcc6b4c0f1aad4", "message": "Add support for embedded classes on the Java side of schema generation", "committedDate": "2020-01-30T08:40:51Z", "type": "commit"}, {"oid": "6ec468323939e8b3eb91952c038d0f319fc31200", "url": "https://github.com/realm/realm-java/commit/6ec468323939e8b3eb91952c038d0f319fc31200", "message": "Add missing check for illegal use of single parent reference", "committedDate": "2020-01-30T12:22:15Z", "type": "commit"}, {"oid": "a5f2ce65f55a74fbf7da4c9fad9bc4ec1c8301da", "url": "https://github.com/realm/realm-java/commit/a5f2ce65f55a74fbf7da4c9fad9bc4ec1c8301da", "message": "Add preliminary public API's for queries and RealmObjectSchema", "committedDate": "2020-01-30T13:25:12Z", "type": "commit"}, {"oid": "b543110d5ef0d8dd469675fade2dd4cfb0ae3877", "url": "https://github.com/realm/realm-java/commit/b543110d5ef0d8dd469675fade2dd4cfb0ae3877", "message": "Add isEmbedded to mediators", "committedDate": "2020-01-30T22:51:32Z", "type": "commit"}, {"oid": "827ee786a6793d804617ecc0e6f19d2001d9a6b5", "url": "https://github.com/realm/realm-java/commit/827ee786a6793d804617ecc0e6f19d2001d9a6b5", "message": "Merge branch 'v10' into cm/embedded-objects\n\n# Conflicts:\n#\tCHANGELOG.md", "committedDate": "2020-02-25T09:05:32Z", "type": "commit"}, {"oid": "fd0745da3d799a76fc5ea5b3ac98af20882afae7", "url": "https://github.com/realm/realm-java/commit/fd0745da3d799a76fc5ea5b3ac98af20882afae7", "message": "Merge branch 'v10' into cm/embedded-objects", "committedDate": "2020-02-28T14:09:52Z", "type": "commit"}, {"oid": "283aff9768a7fdc3eccc5da8f2ce82aaf5eacc66", "url": "https://github.com/realm/realm-java/commit/283aff9768a7fdc3eccc5da8f2ce82aaf5eacc66", "message": "Merge branch 'v10' into cm/embedded-objects\n\n# Conflicts:\n#\trealm/build.gradle", "committedDate": "2020-03-08T21:08:00Z", "type": "commit"}, {"oid": "94f6b8023898f52cc4f168bc7b98190ba3a2f819", "url": "https://github.com/realm/realm-java/commit/94f6b8023898f52cc4f168bc7b98190ba3a2f819", "message": "Adding test stubs", "committedDate": "2020-03-08T21:10:23Z", "type": "commit"}, {"oid": "2c096f01ce7e57ecef25178d755d560e69268600", "url": "https://github.com/realm/realm-java/commit/2c096f01ce7e57ecef25178d755d560e69268600", "message": "Merge branch 'v10' into cm/embedded-objects\n\n# Conflicts:\n#\tCHANGELOG.md\n#\trealm/realm-annotations-processor/src/test/resources/io/realm/some_test_AllTypesRealmProxy.java\n#\trealm/realm-annotations-processor/src/test/resources/io/realm/some_test_NullTypesRealmProxy.java", "committedDate": "2020-05-06T12:42:19Z", "type": "commit"}, {"oid": "232fbb0e6852f0330be0b66636a368bf1c7f3c99", "url": "https://github.com/realm/realm-java/commit/232fbb0e6852f0330be0b66636a368bf1c7f3c99", "message": "Make test compile and convert to Kotlin", "committedDate": "2020-05-06T14:28:11Z", "type": "commit"}, {"oid": "747a210247161bf8e799ada0c7ac09d63134335c", "url": "https://github.com/realm/realm-java/commit/747a210247161bf8e799ada0c7ac09d63134335c", "message": "Move test classes to Kotlin", "committedDate": "2020-05-06T14:43:38Z", "type": "commit"}, {"oid": "320b8a4436cedf9b9befdce740d1fa0bd5dca451", "url": "https://github.com/realm/realm-java/commit/320b8a4436cedf9b9befdce740d1fa0bd5dca451", "message": "Add Javadoc. Add first copyToRealm test", "committedDate": "2020-05-08T05:56:14Z", "type": "commit"}, {"oid": "2365d770d7f827f51418edf351a0d6319f55943a", "url": "https://github.com/realm/realm-java/commit/2365d770d7f827f51418edf351a0d6319f55943a", "message": "Added support for CopyToRealm and ObjectSchema", "committedDate": "2020-05-18T16:07:29Z", "type": "commit"}, {"oid": "8a6c0daa800c8ea927db8a55dfb34b5fc9251b0e", "url": "https://github.com/realm/realm-java/commit/8a6c0daa800c8ea927db8a55dfb34b5fc9251b0e", "message": "Ad support for embedded objects in typed RealmLists.", "committedDate": "2020-05-26T07:00:50Z", "type": "commit"}, {"oid": "88d0a75a645fab5aa4961615064e217f2419fa4a", "url": "https://github.com/realm/realm-java/commit/88d0a75a645fab5aa4961615064e217f2419fa4a", "message": "Update annotation processor tests", "committedDate": "2020-05-26T09:02:47Z", "type": "commit"}, {"oid": "bfca1a62a626ade9a72769936fa9496ca4668a72", "url": "https://github.com/realm/realm-java/commit/bfca1a62a626ade9a72769936fa9496ca4668a72", "message": "Merge branch 'v10' into cm/embedded-objects\n\n# Conflicts:\n#\tCHANGELOG.md\n#\trealm/realm-library/src/androidTestObjectServer/java/io/realm/SyncedRealmMigrationTests.java", "committedDate": "2020-05-26T09:44:45Z", "type": "commit"}, {"oid": "a548cb8f7027e10d72b45331e1f415b867c85da1", "url": "https://github.com/realm/realm-java/commit/a548cb8f7027e10d72b45331e1f415b867c85da1", "message": "Fix Findbugs", "committedDate": "2020-05-26T10:39:23Z", "type": "commit"}, {"oid": "71f46522d5b2cd5a9e22944bf1ba6880fa50f300", "url": "https://github.com/realm/realm-java/commit/71f46522d5b2cd5a9e22944bf1ba6880fa50f300", "message": "Cleanup", "committedDate": "2020-05-26T12:23:21Z", "type": "commit"}, {"oid": "de129fc4106d870ca5a7e184d7b62e025d91b48d", "url": "https://github.com/realm/realm-java/commit/de129fc4106d870ca5a7e184d7b62e025d91b48d", "message": "Fix faulty cache during copyToRealm. Better autogenerated code.", "committedDate": "2020-05-27T14:09:11Z", "type": "commit"}, {"oid": "efd62ae0b94d70c4b750cbf883ceaa3221eda373", "url": "https://github.com/realm/realm-java/commit/efd62ae0b94d70c4b750cbf883ceaa3221eda373", "message": "Fix Java 7 support", "committedDate": "2020-05-27T17:12:34Z", "type": "commit"}, {"oid": "52d2e569482cba011c9aace3a439724a4849a83a", "url": "https://github.com/realm/realm-java/commit/52d2e569482cba011c9aace3a439724a4849a83a", "message": "Add support for insert/insertOrUpdate", "committedDate": "2020-05-28T11:15:31Z", "type": "commit"}, {"oid": "88bb423d6b56d0970383f8c19ea560f43b8ab58d", "url": "https://github.com/realm/realm-java/commit/88bb423d6b56d0970383f8c19ea560f43b8ab58d", "message": "Add missing methods", "committedDate": "2020-05-28T12:30:58Z", "type": "commit"}, {"oid": "fa80edbd0e7cd8be5e346b535835fef9dd4a2191", "url": "https://github.com/realm/realm-java/commit/fa80edbd0e7cd8be5e346b535835fef9dd4a2191", "message": "Fix ObjectServerTest", "committedDate": "2020-05-28T13:24:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2MTUzMA==", "url": "https://github.com/realm/realm-java/pull/6730#discussion_r432961530", "bodyText": "\ud83d\udc4d", "author": "rorbech", "createdAt": "2020-05-31T16:13:40Z", "path": "realm/realm-library/src/main/java/io/realm/Realm.java", "diffHunk": "@@ -153,9 +155,9 @@ private Realm(RealmCache cache, OsSharedRealm.VersionID version) {\n         schema = new ImmutableRealmSchema(this,\n                 new ColumnIndices(configuration.getSchemaMediator(), sharedRealm.getSchemaInfo()));\n         // FIXME: This is to work around the different behaviour between the read only Realms in the Object Store and\n-        // in current java implementation. Opening a read only Realm with some missing schemas is allowed by Object\n-        // Store and realm-cocoa. In that case, any query based on the missing schema should just return an empty\n-        // results. Fix this together with https://github.com/realm/realm-java/issues/2953\n+        //  in current java implementation. Opening a read only Realm with some missing schemas is allowed by Object", "originalCommit": "fa80edbd0e7cd8be5e346b535835fef9dd4a2191", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2MjMwNQ==", "url": "https://github.com/realm/realm-java/pull/6730#discussion_r432962305", "bodyText": "I assume that this also just works out of the box with obfuscation, due to looking up the field names in some meta data, right?", "author": "rorbech", "createdAt": "2020-05-31T16:22:59Z", "path": "realm/realm-library/src/main/java/io/realm/Realm.java", "diffHunk": "@@ -1006,9 +1012,63 @@ private Scanner getFullStringScanner(InputStream in) {\n      */\n     public <E extends RealmModel> E createObject(Class<E> clazz, @Nullable Object primaryKeyValue) {\n         checkIfValid();\n+        RealmProxyMediator mediator = configuration.getSchemaMediator();\n+        if (mediator.isEmbedded(clazz)) {\n+            throw new IllegalArgumentException(\"This class is marked embedded. Use `createEmbeddedObject(class, parent, property)` instead:  \" + mediator.getSimpleClassName(clazz));\n+        }\n         return createObjectInternal(clazz, primaryKeyValue, true, Collections.<String>emptyList());\n     }\n \n+    /**\n+     * Instantiates and adds a new embedded object to the Realm.\n+     * <p>\n+     * This method should only be used to created objects of types marked as embedded.\n+     *\n+     * @param clazz the Class of the object to create. It must be marked with {@code \\@RealmClass(embedded = true)}.\n+     * @param parent The parent object which should a reference to the embedded object. If the parent property is a list\n+     * the embedded object will be added to the end of that list.\n+     * @param parentProperty the property in the parent class which holds the reference.\n+     * @return the newly created embedded object.\n+     * @throws IllegalArgumentException if {@code clazz} is not an embedded class or if the property\n+     * in the parent class cannot hold objects of the appropriate type.\n+     * @see RealmClass#embedded()\n+     */\n+    public <E extends RealmModel> E createEmbeddedObject(Class<E> clazz, RealmModel parentObject, String parentProperty) {", "originalCommit": "fa80edbd0e7cd8be5e346b535835fef9dd4a2191", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5ODI4NA==", "url": "https://github.com/realm/realm-java/pull/6730#discussion_r433898284", "bodyText": "Yes", "author": "cmelchior", "createdAt": "2020-06-02T14:00:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2MjMwNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MjU3OA==", "url": "https://github.com/realm/realm-java/pull/6730#discussion_r432972578", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * \n          \n          \n            \n                 * <p>", "author": "rorbech", "createdAt": "2020-05-31T18:37:04Z", "path": "realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java", "diffHunk": "@@ -403,12 +404,28 @@ private void addEmptyList(long columnKey) {\n \n     /**\n      * Updates any existing object if it exists, otherwise creates a new one.\n+     * ", "originalCommit": "fa80edbd0e7cd8be5e346b535835fef9dd4a2191", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c600a7642b2517aefd5d532c510e1d900dba807", "chunk": "diff --git a/realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java b/realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java\nindex e52357d38..a2daace84 100644\n--- a/realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java\n+++ b/realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java\n\n@@ -404,9 +404,9 @@ public class OsObjectBuilder implements Closeable {\n \n     /**\n      * Updates any existing object if it exists, otherwise creates a new one.\n-     * \n+     * <p>\n      * Updating an existing object requires that the primary key is defined as one of the fields.\n-     *\n+     * <P>\n      * The builder is automatically closed after calling this method.\n      */\n     public void updateExistingTopLevelObject() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MjU5Nw==", "url": "https://github.com/realm/realm-java/pull/6730#discussion_r432972597", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *\n          \n          \n            \n                 * <P>", "author": "rorbech", "createdAt": "2020-05-31T18:37:20Z", "path": "realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java", "diffHunk": "@@ -403,12 +404,28 @@ private void addEmptyList(long columnKey) {\n \n     /**\n      * Updates any existing object if it exists, otherwise creates a new one.\n+     * \n+     * Updating an existing object requires that the primary key is defined as one of the fields.\n      *", "originalCommit": "fa80edbd0e7cd8be5e346b535835fef9dd4a2191", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c600a7642b2517aefd5d532c510e1d900dba807", "chunk": "diff --git a/realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java b/realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java\nindex e52357d38..a2daace84 100644\n--- a/realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java\n+++ b/realm/realm-library/src/main/java/io/realm/internal/objectstore/OsObjectBuilder.java\n\n@@ -404,9 +404,9 @@ public class OsObjectBuilder implements Closeable {\n \n     /**\n      * Updates any existing object if it exists, otherwise creates a new one.\n-     * \n+     * <p>\n      * Updating an existing object requires that the primary key is defined as one of the fields.\n-     *\n+     * <P>\n      * The builder is automatically closed after calling this method.\n      */\n     public void updateExistingTopLevelObject() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3ODc2Ng==", "url": "https://github.com/realm/realm-java/pull/6730#discussion_r432978766", "bodyText": "Wouldn't there be a way to not have to generate all these _ unsupported_ methods. Maybe somehow checking it in the mediator before dispatching to this class?", "author": "rorbech", "createdAt": "2020-05-31T19:56:34Z", "path": "realm/realm-annotations-processor/src/test/resources/io/realm/some_test_SimpleRealmProxy.java", "diffHunk": "@@ -384,6 +384,10 @@ public static void insertOrUpdate(Realm realm, Iterator<? extends RealmModel> ob\n         return unmanagedObject;\n     }\n \n+    public static void updateEmbeddedObject(Realm realm, some.test.Simple unmanagedObject, some.test.Simple managedObject, Map<RealmModel, RealmObjectProxy> cache, Set<ImportFlag> flags) {", "originalCommit": "fa80edbd0e7cd8be5e346b535835fef9dd4a2191", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA2Mjk3OA==", "url": "https://github.com/realm/realm-java/pull/6730#discussion_r434062978", "bodyText": "Yes, I moved the conditional to the mediator, so these are no longer being generated at all.", "author": "cmelchior", "createdAt": "2020-06-02T17:51:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3ODc2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a4d06b38e3a809edb1f31892d5c00a7e514fbab2", "chunk": "diff --git a/realm/realm-annotations-processor/src/test/resources/io/realm/some_test_SimpleRealmProxy.java b/realm/realm-annotations-processor/src/test/resources/io/realm/some_test_SimpleRealmProxy.java\nindex e6f87b374..8c5590e1e 100644\n--- a/realm/realm-annotations-processor/src/test/resources/io/realm/some_test_SimpleRealmProxy.java\n+++ b/realm/realm-annotations-processor/src/test/resources/io/realm/some_test_SimpleRealmProxy.java\n\n@@ -384,10 +384,6 @@ public class some_test_SimpleRealmProxy extends some.test.Simple\n         return unmanagedObject;\n     }\n \n-    public static void updateEmbeddedObject(Realm realm, some.test.Simple unmanagedObject, some.test.Simple managedObject, Map<RealmModel, RealmObjectProxy> cache, Set<ImportFlag> flags) {\n-        throw new IllegalStateException(\"This class is not marked embedded: some.test.Simple\");\n-    }\n-\n     @Override\n     public ProxyState<?> realmGet$proxyState() {\n         return proxyState;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDQxOA==", "url": "https://github.com/realm/realm-java/pull/6730#discussion_r432980418", "bodyText": "Maybe it would also make sense to have output for a mediator with embedded objects too? Not hard to verify that the processor generates right code for isEmbedded - but for completion. And if you could eliminate the always throwing updateEmbeddedObject for non-embedded classes it would start being nice to have to for reasoning about the output instead of the processor.", "author": "rorbech", "createdAt": "2020-05-31T20:18:27Z", "path": "realm/realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java", "diffHunk": "@@ -206,4 +206,25 @@ public void insertOrUpdate(Realm realm, Collection<? extends RealmModel> objects\n         throw getMissingProxyClassException(clazz);\n     }\n \n+    @Override", "originalCommit": "fa80edbd0e7cd8be5e346b535835fef9dd4a2191", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4d06b38e3a809edb1f31892d5c00a7e514fbab2", "chunk": "diff --git a/realm/realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java b/realm/realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java\nindex 9acbf79ea..082303afb 100644\n--- a/realm/realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java\n+++ b/realm/realm-annotations-processor/src/test/resources/io/realm/RealmDefaultModuleMediator.java\n\n@@ -221,10 +221,10 @@ class DefaultRealmModuleMediator extends RealmProxyMediator {\n         @SuppressWarnings(\"unchecked\") Class<E> clazz = (Class<E>) managedObject.getClass().getSuperclass();\n \n         if (clazz.equals(some.test.AllTypes.class)) {\n-            io.realm.some_test_AllTypesRealmProxy.updateEmbeddedObject(realm, (some.test.AllTypes) unmanagedObject, (some.test.AllTypes) managedObject, cache, flags);\n+            throw getNotEmbeddedClassException(\"some.test.AllTypes\");\n         } else {\n             throw getMissingProxyClassException(clazz);\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4Mjg0OA==", "url": "https://github.com/realm/realm-java/pull/6730#discussion_r432982848", "bodyText": "Maybe also add the generated proxy for the EmbeddedClass for reference.", "author": "rorbech", "createdAt": "2020-05-31T20:48:33Z", "path": "realm/realm-annotations-processor/src/test/resources/io/realm/some_test_EmbeddedClassSimpleParentRealmProxy.java", "diffHunk": "@@ -0,0 +1,871 @@\n+package io.realm;", "originalCommit": "fa80edbd0e7cd8be5e346b535835fef9dd4a2191", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4d06b38e3a809edb1f31892d5c00a7e514fbab2", "chunk": "diff --git a/realm/realm-annotations-processor/src/test/resources/io/realm/some_test_EmbeddedClassSimpleParentRealmProxy.java b/realm/realm-annotations-processor/src/test/resources/io/realm/some_test_EmbeddedClassSimpleParentRealmProxy.java\nindex 661ffcde8..44e2dc1f9 100644\n--- a/realm/realm-annotations-processor/src/test/resources/io/realm/some_test_EmbeddedClassSimpleParentRealmProxy.java\n+++ b/realm/realm-annotations-processor/src/test/resources/io/realm/some_test_EmbeddedClassSimpleParentRealmProxy.java\n\n@@ -800,10 +800,6 @@ public class some_test_EmbeddedClassSimpleParentRealmProxy extends some.test.Emb\n         return realmObject;\n     }\n \n-    public static void updateEmbeddedObject(Realm realm, some.test.EmbeddedClassSimpleParent unmanagedObject, some.test.EmbeddedClassSimpleParent managedObject, Map<RealmModel, RealmObjectProxy> cache, Set<ImportFlag> flags) {\n-        throw new IllegalStateException(\"This class is not marked embedded: some.test.EmbeddedClassSimpleParent\");\n-    }\n-\n     @Override\n     @SuppressWarnings(\"ArrayToString\")\n     public String toString() {\n"}}, {"oid": "8d2662d1a520f342e05f07fdcc89ab6cdffe03e0", "url": "https://github.com/realm/realm-java/commit/8d2662d1a520f342e05f07fdcc89ab6cdffe03e0", "message": "Merge branch 'v10' into cm/embedded-objects", "committedDate": "2020-06-02T10:36:41Z", "type": "commit"}, {"oid": "8c600a7642b2517aefd5d532c510e1d900dba807", "url": "https://github.com/realm/realm-java/commit/8c600a7642b2517aefd5d532c510e1d900dba807", "message": "Apply suggestions from code review\n\nCo-authored-by: Claus R\u00f8rbech <claus.rorbech@gmail.com>", "committedDate": "2020-06-02T12:08:22Z", "type": "commit"}, {"oid": "a4d06b38e3a809edb1f31892d5c00a7e514fbab2", "url": "https://github.com/realm/realm-java/commit/a4d06b38e3a809edb1f31892d5c00a7e514fbab2", "message": "PR feedback", "committedDate": "2020-06-02T18:37:45Z", "type": "commit"}, {"oid": "264867f3aec5ee9fea75dd41e90440d1dda1e180", "url": "https://github.com/realm/realm-java/commit/264867f3aec5ee9fea75dd41e90440d1dda1e180", "message": "Merge branch 'cm/embedded-objects' of https://github.com/realm/realm-java into cm/embedded-objects", "committedDate": "2020-06-02T18:37:57Z", "type": "commit"}, {"oid": "de5ac9f325ee99a153c5392cbc12079c16a455d5", "url": "https://github.com/realm/realm-java/commit/de5ac9f325ee99a153c5392cbc12079c16a455d5", "message": "Fix test", "committedDate": "2020-06-02T19:31:42Z", "type": "commit"}, {"oid": "0efd5fb1b2a8ceda24e54fe78140d0dd0548e14c", "url": "https://github.com/realm/realm-java/commit/0efd5fb1b2a8ceda24e54fe78140d0dd0548e14c", "message": "Add missing impl", "committedDate": "2020-06-02T19:57:10Z", "type": "commit"}, {"oid": "217f1d30c7a29cbd334431257957a847b695e2fd", "url": "https://github.com/realm/realm-java/commit/217f1d30c7a29cbd334431257957a847b695e2fd", "message": "Fix list tests", "committedDate": "2020-06-03T07:56:01Z", "type": "commit"}]}