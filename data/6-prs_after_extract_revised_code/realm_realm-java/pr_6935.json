{"pr_number": 6935, "pr_title": "Add support for push notifications", "pr_createdAt": "2020-06-09T11:30:07Z", "pr_url": "https://github.com/realm/realm-java/pull/6935", "timeline": [{"oid": "84b4ccfc4b165b5a88fd0a5e92774f6fdb947d66", "url": "https://github.com/realm/realm-java/commit/84b4ccfc4b165b5a88fd0a5e92774f6fdb947d66", "message": "Added support for push notifications", "committedDate": "2020-06-09T09:29:56Z", "type": "commit"}, {"oid": "3a0eda4779a45340444456b0f648967bdb181cc3", "url": "https://github.com/realm/realm-java/commit/3a0eda4779a45340444456b0f648967bdb181cc3", "message": "Added OsPushClient", "committedDate": "2020-06-09T09:44:52Z", "type": "commit"}, {"oid": "3bb26cfa70b80c549a269286fb8d509b6a185e8a", "url": "https://github.com/realm/realm-java/commit/3bb26cfa70b80c549a269286fb8d509b6a185e8a", "message": "Removed unused includes in native code", "committedDate": "2020-06-09T10:01:10Z", "type": "commit"}, {"oid": "77fb87e779149e523889986dc22856b21fa59b48", "url": "https://github.com/realm/realm-java/commit/77fb87e779149e523889986dc22856b21fa59b48", "message": "Added documentation", "committedDate": "2020-06-09T11:30:23Z", "type": "commit"}, {"oid": "98efe0e0b7625dfea3eb28899752141cf294f417", "url": "https://github.com/realm/realm-java/commit/98efe0e0b7625dfea3eb28899752141cf294f417", "message": "Restore Gradle build tools version", "committedDate": "2020-06-09T20:56:00Z", "type": "commit"}, {"oid": "7c3d98f6d1fe83898621e1dd254b0e2d67a7aaa9", "url": "https://github.com/realm/realm-java/commit/7c3d98f6d1fe83898621e1dd254b0e2d67a7aaa9", "message": "Merge branch 'v10' into el/push-notifications", "committedDate": "2020-06-09T20:58:15Z", "type": "commit"}, {"oid": "de16065b8c670c535758d54287e83abb852f097b", "url": "https://github.com/realm/realm-java/commit/de16065b8c670c535758d54287e83abb852f097b", "message": "Removed FCM config file", "committedDate": "2020-06-09T21:32:26Z", "type": "commit"}, {"oid": "8c866a6fea9383c5d1ca7721c5159b540bc45dd7", "url": "https://github.com/realm/realm-java/commit/8c866a6fea9383c5d1ca7721c5159b540bc45dd7", "message": "Moved FCM config params to script instead of having them in the config files", "committedDate": "2020-06-10T08:15:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg5ODQyNg==", "url": "https://github.com/realm/realm-java/pull/6935#discussion_r437898426", "bodyText": "Do not know if this is expensive, but you could just allocate it when needed. I image it to be quite common not always needing a PushClient or MongoClient.", "author": "rorbech", "createdAt": "2020-06-10T06:55:31Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -59,6 +60,8 @@\n     private ApiKeyAuth apiKeyAuthProvider = null;\n     private MongoClient mongoClient = null;\n     private Functions functions = null;\n+    private PushClient pushClient = null;\n+    private TaskDispatcher dispatcher = new TaskDispatcher();", "originalCommit": "de16065b8c670c535758d54287e83abb852f097b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2MTcyMg==", "url": "https://github.com/realm/realm-java/pull/6935#discussion_r437961722", "bodyText": "It only initialises an ExecutorService. But it makes sense to defer initialisation to when it's needed.", "author": "edualonso", "createdAt": "2020-06-10T08:45:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg5ODQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "236c0eff6e9872fb84d78aca2f84034c86503240", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\nindex 15e60a20d..db863e4b3 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n\n@@ -60,8 +60,8 @@ public class User {\n     private ApiKeyAuth apiKeyAuthProvider = null;\n     private MongoClient mongoClient = null;\n     private Functions functions = null;\n-    private PushClient pushClient = null;\n-    private TaskDispatcher dispatcher = new TaskDispatcher();\n+    private Push push = null;\n+    private TaskDispatcher dispatcher = null;\n \n     /**\n      * The different types of users.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg5OTg0Mw==", "url": "https://github.com/realm/realm-java/pull/6935#discussion_r437899843", "bodyText": "I guess it will probably not lead to incorrect behavior, but could consider synchronizing to avoid creating multiple instance on races.", "author": "rorbech", "createdAt": "2020-06-10T06:58:47Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -505,10 +514,14 @@ public Functions getFunctions(CodecRegistry codecRegistry) {\n     }\n \n     /**\n-     * FIXME Add support for push notifications.\n+     * Returns the {@link PushClient} instance for allowing support for push notifications.\n      */\n-    Push getPush() {\n-        return null;\n+    public PushClient getPushNotifications() {", "originalCommit": "de16065b8c670c535758d54287e83abb852f097b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "236c0eff6e9872fb84d78aca2f84034c86503240", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\nindex 15e60a20d..db863e4b3 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n\n@@ -514,14 +514,16 @@ public class User {\n     }\n \n     /**\n-     * Returns the {@link PushClient} instance for allowing support for push notifications.\n+     * Returns the {@link Push} instance for managing push notification registrations.\n      */\n-    public PushClient getPushNotifications() {\n-        if (pushClient == null) {\n-            OsPushClient osPushClient = new OsPushClient(app.nativePtr);\n-            pushClient = new PushClientImpl(osPushClient, dispatcher);\n+    public synchronized Push getPush() {\n+        if (push == null) {\n+            initDispatcher();\n+            Util.checkNull(dispatcher, \"dispatcher\");\n+            OsPush osPush = new OsPush(app.nativePtr);\n+            push = new PushImpl(osPush, dispatcher);\n         }\n-        return pushClient;\n+        return push;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkwMDM4MA==", "url": "https://github.com/realm/realm-java/pull/6935#discussion_r437900380", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns the {@link PushClient} instance for allowing support for push notifications.\n          \n          \n            \n                 * Returns the {@link PushClient} instance for managing push notification registrations.", "author": "rorbech", "createdAt": "2020-06-10T06:59:57Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -505,10 +514,14 @@ public Functions getFunctions(CodecRegistry codecRegistry) {\n     }\n \n     /**\n-     * FIXME Add support for push notifications.\n+     * Returns the {@link PushClient} instance for allowing support for push notifications.", "originalCommit": "de16065b8c670c535758d54287e83abb852f097b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "236c0eff6e9872fb84d78aca2f84034c86503240", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\nindex 15e60a20d..db863e4b3 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java\n\n@@ -514,14 +514,16 @@ public class User {\n     }\n \n     /**\n-     * Returns the {@link PushClient} instance for allowing support for push notifications.\n+     * Returns the {@link Push} instance for managing push notification registrations.\n      */\n-    public PushClient getPushNotifications() {\n-        if (pushClient == null) {\n-            OsPushClient osPushClient = new OsPushClient(app.nativePtr);\n-            pushClient = new PushClientImpl(osPushClient, dispatcher);\n+    public synchronized Push getPush() {\n+        if (push == null) {\n+            initDispatcher();\n+            Util.checkNull(dispatcher, \"dispatcher\");\n+            OsPush osPush = new OsPush(app.nativePtr);\n+            push = new PushImpl(osPush, dispatcher);\n         }\n-        return pushClient;\n+        return push;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkzODE2Nw==", "url": "https://github.com/realm/realm-java/pull/6935#discussion_r437938167", "bodyText": "According to the decision log this should be Push, so maybe check up on the naming.", "author": "rorbech", "createdAt": "2020-06-10T08:07:13Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/push/PushClient.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.realm.mongodb.push;\n+\n+import com.google.android.gms.tasks.Task;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import io.realm.annotations.Beta;\n+import io.realm.internal.common.TaskDispatcher;\n+import io.realm.internal.jni.OsJNIVoidResultCallback;\n+import io.realm.internal.network.ResultHandler;\n+import io.realm.internal.objectstore.OsPushClient;\n+import io.realm.mongodb.AppException;\n+\n+/**\n+ * The PushClient allows to register/deregister for push notifications from a client app.\n+ */\n+@Beta\n+public abstract class PushClient {", "originalCommit": "de16065b8c670c535758d54287e83abb852f097b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "236c0eff6e9872fb84d78aca2f84034c86503240", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/PushClient.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java\nsimilarity index 73%\nrename from realm/realm-library/src/objectServer/java/io/realm/mongodb/push/PushClient.java\nrename to realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java\nindex 24f298a27..64d1e474c 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/PushClient.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java\n\n@@ -18,29 +18,26 @@ package io.realm.mongodb.push;\n import com.google.android.gms.tasks.Task;\n \n import java.util.concurrent.Callable;\n-import java.util.concurrent.atomic.AtomicReference;\n \n import io.realm.annotations.Beta;\n import io.realm.internal.common.TaskDispatcher;\n-import io.realm.internal.jni.OsJNIVoidResultCallback;\n-import io.realm.internal.network.ResultHandler;\n-import io.realm.internal.objectstore.OsPushClient;\n-import io.realm.mongodb.AppException;\n+import io.realm.internal.objectstore.OsPush;\n \n /**\n- * The PushClient allows to register/deregister for push notifications from a client app.\n+ * The Push client allows to register/deregister for push notifications from a client app.\n  */\n @Beta\n-public abstract class PushClient {\n+public abstract class Push {\n \n     private final TaskDispatcher dispatcher;\n-    private final OsPushClient osPushClient;\n+    private final OsPush osPush;\n \n-    public PushClient(final OsPushClient osPushClient, TaskDispatcher dispatcher) {\n-        this.osPushClient = osPushClient;\n+    public Push(final OsPush osPush, TaskDispatcher dispatcher) {\n+        this.osPush = osPush;\n         this.dispatcher = dispatcher;\n     }\n \n+    // TODO: Task vs RealmAsyncTask - https://github.com/realm/realm-java/issues/6914\n     /**\n      * Registers the given FCM registration token with the currently logged in user's\n      * device on MongoDB Realm.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0MzE4Ng==", "url": "https://github.com/realm/realm-java/pull/6935#discussion_r437943186", "bodyText": "Since there is not results involved here, we could might as well go directly for RealmAsyncTask. But then we would probably need both a sync and async. Maybe just tag it with a TODO linking it to the task of aligning async API for now!?", "author": "rorbech", "createdAt": "2020-06-10T08:15:28Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/push/PushClient.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.realm.mongodb.push;\n+\n+import com.google.android.gms.tasks.Task;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import io.realm.annotations.Beta;\n+import io.realm.internal.common.TaskDispatcher;\n+import io.realm.internal.jni.OsJNIVoidResultCallback;\n+import io.realm.internal.network.ResultHandler;\n+import io.realm.internal.objectstore.OsPushClient;\n+import io.realm.mongodb.AppException;\n+\n+/**\n+ * The PushClient allows to register/deregister for push notifications from a client app.\n+ */\n+@Beta\n+public abstract class PushClient {\n+\n+    private final TaskDispatcher dispatcher;\n+    private final OsPushClient osPushClient;\n+\n+    public PushClient(final OsPushClient osPushClient, TaskDispatcher dispatcher) {\n+        this.osPushClient = osPushClient;\n+        this.dispatcher = dispatcher;\n+    }\n+\n+    /**\n+     * Registers the given FCM registration token with the currently logged in user's\n+     * device on MongoDB Realm.\n+     *\n+     * @param registrationToken the registration token to register.\n+     * @return A {@link Task} that completes when the registration is finished.\n+     */\n+    public Task<Void> registerDevice(String registrationToken, String serviceName) {", "originalCommit": "de16065b8c670c535758d54287e83abb852f097b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2NDQ2Ng==", "url": "https://github.com/realm/realm-java/pull/6935#discussion_r437964466", "bodyText": "I thought of that, but that would be a divergence between the Mongo client and this. I think it's best to stick to Task and once we have our framework ready, move all to use it. Until then, the API still respects the original Stitch contract. I will add a TODO pointing at the task for async rework in any case.", "author": "edualonso", "createdAt": "2020-06-10T08:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0MzE4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "236c0eff6e9872fb84d78aca2f84034c86503240", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/PushClient.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java\nsimilarity index 73%\nrename from realm/realm-library/src/objectServer/java/io/realm/mongodb/push/PushClient.java\nrename to realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java\nindex 24f298a27..64d1e474c 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/PushClient.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java\n\n@@ -18,29 +18,26 @@ package io.realm.mongodb.push;\n import com.google.android.gms.tasks.Task;\n \n import java.util.concurrent.Callable;\n-import java.util.concurrent.atomic.AtomicReference;\n \n import io.realm.annotations.Beta;\n import io.realm.internal.common.TaskDispatcher;\n-import io.realm.internal.jni.OsJNIVoidResultCallback;\n-import io.realm.internal.network.ResultHandler;\n-import io.realm.internal.objectstore.OsPushClient;\n-import io.realm.mongodb.AppException;\n+import io.realm.internal.objectstore.OsPush;\n \n /**\n- * The PushClient allows to register/deregister for push notifications from a client app.\n+ * The Push client allows to register/deregister for push notifications from a client app.\n  */\n @Beta\n-public abstract class PushClient {\n+public abstract class Push {\n \n     private final TaskDispatcher dispatcher;\n-    private final OsPushClient osPushClient;\n+    private final OsPush osPush;\n \n-    public PushClient(final OsPushClient osPushClient, TaskDispatcher dispatcher) {\n-        this.osPushClient = osPushClient;\n+    public Push(final OsPush osPush, TaskDispatcher dispatcher) {\n+        this.osPush = osPush;\n         this.dispatcher = dispatcher;\n     }\n \n+    // TODO: Task vs RealmAsyncTask - https://github.com/realm/realm-java/issues/6914\n     /**\n      * Registers the given FCM registration token with the currently logged in user's\n      * device on MongoDB Realm.\n"}}, {"oid": "4eea3d0c5313950258615a91e294540dd69e4ed3", "url": "https://github.com/realm/realm-java/commit/4eea3d0c5313950258615a91e294540dd69e4ed3", "message": "Removed rest of needed push test parameters from config files", "committedDate": "2020-06-10T09:34:17Z", "type": "commit"}, {"oid": "115f2668606eca7d65966e27523605ce22c815a9", "url": "https://github.com/realm/realm-java/commit/115f2668606eca7d65966e27523605ce22c815a9", "message": "Restored server config to not use FCM app keys but placeholder values instead", "committedDate": "2020-06-10T09:59:52Z", "type": "commit"}, {"oid": "236c0eff6e9872fb84d78aca2f84034c86503240", "url": "https://github.com/realm/realm-java/commit/236c0eff6e9872fb84d78aca2f84034c86503240", "message": "Addressed comments from PR review: renamed client to Push, corrected wrong operations in tests and a bit of cleanup", "committedDate": "2020-06-10T10:02:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA4OTk3NA==", "url": "https://github.com/realm/realm-java/pull/6935#discussion_r438089974", "bodyText": "IMO we should use the registerDevice/registerDeviceAsync pattern just like for Functions instead of the Task interface. Or is there a reason you opted for the Task here?\nUsing the Task pattern requires people to bring their own threading and we just kept it for the Mongo API's as we assumed people would already have infrastructure in place for those legacy API's, but IMO the sync/async pattern is easier to consume for new users.\nThoughts?", "author": "cmelchior", "createdAt": "2020-06-10T12:41:33Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java", "diffHunk": "@@ -15,11 +15,60 @@\n  */\n package io.realm.mongodb.push;\n \n+import com.google.android.gms.tasks.Task;\n+\n+import java.util.concurrent.Callable;\n+\n import io.realm.annotations.Beta;\n+import io.realm.internal.common.TaskDispatcher;\n+import io.realm.internal.objectstore.OsPush;\n \n /**\n- * FIXME: Add Javadoc and implementation\n+ * The Push client allows to register/deregister for push notifications from a client app.\n  */\n @Beta\n-public class Push {\n+public abstract class Push {\n+\n+    private final TaskDispatcher dispatcher;\n+    private final OsPush osPush;\n+\n+    public Push(final OsPush osPush, TaskDispatcher dispatcher) {\n+        this.osPush = osPush;\n+        this.dispatcher = dispatcher;\n+    }\n+\n+    // TODO: Task vs RealmAsyncTask - https://github.com/realm/realm-java/issues/6914\n+    /**\n+     * Registers the given FCM registration token with the currently logged in user's\n+     * device on MongoDB Realm.\n+     *\n+     * @param registrationToken the registration token to register.\n+     * @return A {@link Task} that completes when the registration is finished.\n+     */\n+    public Task<Void> registerDevice(String registrationToken, String serviceName) {", "originalCommit": "236c0eff6e9872fb84d78aca2f84034c86503240", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd1a807af030aafb609921690051678d2d300ef4", "chunk": "diff --git a/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java b/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java\nindex 64d1e474c..2efd5b7b9 100644\n--- a/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java\n+++ b/realm/realm-library/src/objectServer/java/io/realm/mongodb/push/Push.java\n\n@@ -15,13 +15,13 @@\n  */\n package io.realm.mongodb.push;\n \n-import com.google.android.gms.tasks.Task;\n-\n-import java.util.concurrent.Callable;\n-\n+import io.realm.RealmAsyncTask;\n import io.realm.annotations.Beta;\n-import io.realm.internal.common.TaskDispatcher;\n+import io.realm.internal.Util;\n+import io.realm.internal.mongodb.Request;\n import io.realm.internal.objectstore.OsPush;\n+import io.realm.mongodb.App;\n+import io.realm.mongodb.AppException;\n \n /**\n  * The Push client allows to register/deregister for push notifications from a client app.\n"}}, {"oid": "252168d1e47b418e334be74ea5a0f7033f34040b", "url": "https://github.com/realm/realm-java/commit/252168d1e47b418e334be74ea5a0f7033f34040b", "message": "Added synchronized to mongoclient as well", "committedDate": "2020-06-10T12:42:40Z", "type": "commit"}, {"oid": "cd1a807af030aafb609921690051678d2d300ef4", "url": "https://github.com/realm/realm-java/commit/cd1a807af030aafb609921690051678d2d300ef4", "message": "Removed Task and favour a sync/async implementation instead. Removed currentUser and use a pointer to a user instead. Fixed wrong initialisation of push client from the Java side, as I was unknowingly instantiating a native PushClient with every register/deregister call.", "committedDate": "2020-06-10T14:53:18Z", "type": "commit"}]}