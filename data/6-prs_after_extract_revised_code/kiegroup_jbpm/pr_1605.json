{"pr_number": 1605, "pr_title": "[BAQE-1323] DB scripts move to a new module along with refactoring work in jbpm-installer", "pr_createdAt": "2020-03-09T12:26:26Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1605", "timeline": [{"oid": "620939410b4d3cee68b8667ba45e50bb396a8e1f", "url": "https://github.com/kiegroup/jbpm/commit/620939410b4d3cee68b8667ba45e50bb396a8e1f", "message": "- Reuse and refactor of jbpm-installer classes and moved/refactored to jbpm-util-test module along with some dependency classes from jbpm-persistence module\n- Split of jbpm-installer into a new jbpm-db-script module to reuse and share DB sql scripts.\n- Adding jbpm-test-coverage to the Jenkins db matrix job.", "committedDate": "2020-03-10T09:11:14Z", "type": "forcePushed"}, {"oid": "8ac1b0ebe21120effc0eb0e5dbf60f820452c48e", "url": "https://github.com/kiegroup/jbpm/commit/8ac1b0ebe21120effc0eb0e5dbf60f820452c48e", "message": "- Reuse and refactor of jbpm-installer classes and moved/refactored to jbpm-util-test module along with some dependency classes from jbpm-persistence module\n- Split of jbpm-installer into a new jbpm-db-script module to reuse and share DB sql scripts.\n- Adding jbpm-test-coverage to the Jenkins db matrix job.", "committedDate": "2020-03-10T15:06:00Z", "type": "forcePushed"}, {"oid": "874e130e5475a274ef0e4e4a23c6b0f1c484db1d", "url": "https://github.com/kiegroup/jbpm/commit/874e130e5475a274ef0e4e4a23c6b0f1c484db1d", "message": "- Reuse and refactor of jbpm-installer classes and moved/refactored to jbpm-util-test module along with some dependency classes from jbpm-persistence module\n- Split of jbpm-installer into a new jbpm-db-script module to reuse and share DB sql scripts.\n- Adding jbpm-test-coverage to the Jenkins db matrix job.", "committedDate": "2020-03-10T15:19:12Z", "type": "forcePushed"}, {"oid": "edadf13bfa0a05054cbdeaccf624f6f76c084040", "url": "https://github.com/kiegroup/jbpm/commit/edadf13bfa0a05054cbdeaccf624f6f76c084040", "message": "- Reuse and refactor of jbpm-installer classes and moved/refactored to jbpm-util-test module along with some dependency classes from jbpm-persistence module\n- Split of jbpm-installer into a new jbpm-db-script module to reuse and share DB sql scripts.", "committedDate": "2020-03-11T08:57:13Z", "type": "forcePushed"}, {"oid": "623750dc8ccd70d93811085be3b2d56bc440cf07", "url": "https://github.com/kiegroup/jbpm/commit/623750dc8ccd70d93811085be3b2d56bc440cf07", "message": "- Reuse and refactor of jbpm-installer classes and moved/refactored to jbpm-util-test module along with some dependency classes from jbpm-persistence module\n- Split of jbpm-installer into a new jbpm-db-script module to reuse and share DB sql scripts.", "committedDate": "2020-03-11T16:40:22Z", "type": "forcePushed"}, {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149", "url": "https://github.com/kiegroup/jbpm/commit/03996a26e97d6187809adb8e43f4751a6d5bd149", "message": "- Reuse and refactor of jbpm-installer classes and moved/refactored to jbpm-util-test module along with some dependency classes from jbpm-persistence module\n- Split of jbpm-installer into a new jbpm-db-script module to reuse and share DB sql scripts.", "committedDate": "2020-03-12T14:08:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDkxOA==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393090918", "bodyText": "This is a good chance to remove star imports :) as we don't encourage people to use them.", "author": "MarianMacik", "createdAt": "2020-03-16T15:01:53Z", "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java", "diffHunk": "@@ -16,13 +16,13 @@\n \n package org.jbpm.bpmn2.concurrency.persistence;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4MjU4Mw==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393182583", "bodyText": "Sure, I will change them.", "author": "afalhambra", "createdAt": "2020-03-16T17:10:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDkxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNjczNg==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393636736", "bodyText": "Actually these star imports were already there, I only changed the package name. But anyway, removing these star imports from the classes.", "author": "afalhambra", "createdAt": "2020-03-17T12:18:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDkxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MTg5MQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393781891", "bodyText": "Done.", "author": "afalhambra", "createdAt": "2020-03-17T15:51:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDkxOA=="}], "type": "inlineReview", "revised_code": {"commit": "cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "chunk": "diff --git a/jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java b/jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java\nindex 9c2a94c73..9865457ed 100644\n--- a/jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java\n+++ b/jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java\n\n@@ -16,9 +16,6 @@\n \n package org.jbpm.bpmn2.concurrency.persistence;\n \n-import static org.jbpm.test.persistence.util.PersistenceUtil.*;\n-import static org.junit.Assert.*;\n-\n import java.util.HashMap;\n \n import org.jbpm.bpmn2.concurrency.OneProcessPerThreadTest;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwNDM5Nw==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393104397", "bodyText": "Again star imports.", "author": "MarianMacik", "createdAt": "2020-03-16T15:21:13Z", "path": "jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java", "diffHunk": "@@ -75,7 +75,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNjg0OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393636849", "bodyText": "Actually these star imports were already there, I only changed the package name. But anyway, removing these star imports from the classes.", "author": "afalhambra", "createdAt": "2020-03-17T12:18:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwNDM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2NzU4Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393667586", "bodyText": "Yes, I know :) Just thought that it might be a good time to eliminate them.", "author": "MarianMacik", "createdAt": "2020-03-17T13:12:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwNDM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MTk5Mg==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393781992", "bodyText": "Done.", "author": "afalhambra", "createdAt": "2020-03-17T15:51:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwNDM5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "chunk": "diff --git a/jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java b/jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java\nindex 931550077..fe315bd2b 100644\n--- a/jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java\n+++ b/jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java\n\n@@ -75,8 +75,14 @@ import org.kie.internal.persistence.jpa.JPAKnowledgeService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.test.persistence.util.PersistenceUtil.*;\n-import static org.junit.Assert.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.JBPM_PERSISTENCE_UNIT_NAME;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.cleanUp;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.createEnvironment;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.setupWithPoolingDataSource;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n import static org.kie.api.runtime.EnvironmentName.ENTITY_MANAGER_FACTORY;\n \n @RunWith(Parameterized.class)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393108329", "bodyText": "Why is this needed now?", "author": "MarianMacik", "createdAt": "2020-03-16T15:26:36Z", "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void setUp() {\n     }\n     \n     @After\n-    public void tearDown(){\n+    public void tearDown() throws IOException, SQLException {", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4NjA1Mw==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393186053", "bodyText": "Because I've already included a call to the reusable class in charge of creating the DB schemas: ScriptsBase.executeScriptRunner(DB_DDL_SCRIPTS_RESOURCE_PATH, false); from the parent class TimerBaseTest\nThough, I think for the time being I will comment it out as this piece of work is still in progress (works fine, but some tests are still failing due to many different reasons) and will be delivered in next PRs.\nWhat do you think? I mean, there is no harm of having this call here but I'm open to comment it out for the moment.", "author": "afalhambra", "createdAt": "2020-03-16T17:15:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyMzQ0NA==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393223444", "bodyText": "I see... Though now when you look at it, we call a method (tearDownOnce()) which has @BeforeClass annotation on it also in @before method. I think it would be good to make it more clear. But that is just cosmetics.\nHowever, I see that now the schema is created/scripts are run in GlobalQuartzRAMTimerServiceTest which stores timers in RAM rather than DB, but there are no such operations in GlobalQuartzDBTimerServiceTest. Shouldn't it be the other way round that we should create schema in DB tests and for RAM it is not needed?", "author": "MarianMacik", "createdAt": "2020-03-16T18:15:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUxNjY1Nw==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393516657", "bodyText": "I would say tearDownOnce() call in @before method is not needed there, since it will be called in the @after method. I think the tearDownOnce() call is needed in the @after method because it is supposed to be a RAM based database (i.e. database is created and destroy after every test method).\nBut yes, it shouldn't create/run any SQL script for this case.\nIn the other hand, GlobalQuartzDBTimerServiceTest, the SQL scripts are created/destroyed once in the @afterclass and @BeforeClass respectively in the class TimerBaseTest.\nHowever all of these changes are still in progress and will be delivered in the next upcoming PR.\nWhat do you think?", "author": "afalhambra", "createdAt": "2020-03-17T08:38:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3Nzc4NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393577785", "bodyText": "Understand. Then I guess it would be probably good to not alter these classes at all? So leave them as they were, do only necessary changes so we don't mix it?", "author": "MarianMacik", "createdAt": "2020-03-17T10:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwNTU0Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393705546", "bodyText": "Agree.\nWill revert unnecessary changes for now.", "author": "afalhambra", "createdAt": "2020-03-17T14:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MjE5Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393782196", "bodyText": "Done.", "author": "afalhambra", "createdAt": "2020-03-17T15:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "chunk": "diff --git a/jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java b/jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java\nindex fceb5518e..778dad3a9 100644\n--- a/jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java\n+++ b/jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java\n\n@@ -61,7 +59,7 @@ public class GlobalQuartzRAMTimerServiceTest extends GlobalTimerServiceBaseTest\n     }\n     \n     @After\n-    public void tearDown() throws IOException, SQLException {\n+    public void tearDown(){\n         try {\n             globalScheduler.shutdown();\n         } catch (Exception e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjI0NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393112245", "bodyText": "I think that here we can make an exception because this TestEventEmitter is afaik not used in two or more modules for testing. It should be only needed in the jbpm-persistence module tests. What do you think?", "author": "MarianMacik", "createdAt": "2020-03-16T15:32:01Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestEventEmitter.java", "diffHunk": "@@ -27,7 +27,6 @@\n import org.jbpm.persistence.api.integration.InstanceView;\n import org.jbpm.persistence.api.integration.base.BaseEventCollection;\n \n-\n public class TestEventEmitter implements EventEmitter {", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUxOTQ1Mg==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393519452", "bodyText": "It is used in the jbpm-test-coverage module - class org.jbpm.test.functional.task.ProcessHumanTaskTest.\nSo I would agree if there was no reference to this class but having more than 1 references, I would keep it in the jbpm-test-util module now.\nWould you agree?", "author": "afalhambra", "createdAt": "2020-03-17T08:43:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU4MjI2MA==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393582260", "bodyText": "True, sorry for a false alert :) Yes, we can leave it as is.", "author": "MarianMacik", "createdAt": "2020-03-17T10:33:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjI0NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjY3Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393112676", "bodyText": "Same for other related classes.", "author": "MarianMacik", "createdAt": "2020-03-16T15:32:39Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestTransactionalPersistenceEventManager.java", "diffHunk": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.jbpm.persistence.processinstance.objects;\n+package org.jbpm.test.persistence.processinstance.objects;", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyMzkwMQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393523901", "bodyText": "In this one, there is no reference outside jbpm-persistence-jpa module but IMO I would move all these classes to the jbpm-test-util module just for coherence along classes in the same package. What do you think?", "author": "afalhambra", "createdAt": "2020-03-17T08:51:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjY3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3OTQxMA==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393579410", "bodyText": "OK.", "author": "MarianMacik", "createdAt": "2020-03-17T10:28:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjY3Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNjYyOA==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393116628", "bodyText": "Maybe update the docs so we know what is the difference between TestPersistenceContext and TestPersistenceContextBase?", "author": "MarianMacik", "createdAt": "2020-03-16T15:38:15Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/TestPersistenceContextBase.java", "diffHunk": "@@ -14,89 +14,75 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.scripts;\n+package org.jbpm.test.persistence.scripts;\n \n import java.io.File;\n import java.io.IOException;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n-import java.text.DateFormat;\n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Properties;\n-import java.util.Set;\n+\n import javax.persistence.EntityManager;\n import javax.persistence.EntityManagerFactory;\n \n import org.drools.core.impl.KnowledgeBaseFactory;\n import org.drools.core.impl.KnowledgeBaseImpl;\n import org.drools.persistence.jta.JtaTransactionManager;\n-import org.jbpm.persistence.map.impl.ProcessCreatorForHelp;\n-import org.jbpm.persistence.scripts.oldentities.ProcessInstanceInfo;\n-import org.jbpm.persistence.scripts.oldentities.SessionInfo;\n-import org.jbpm.persistence.scripts.oldentities.TaskImpl;\n-import org.jbpm.persistence.scripts.util.SQLCommandUtil;\n-import org.jbpm.persistence.scripts.util.SQLScriptUtil;\n-import org.jbpm.persistence.scripts.util.TestsUtil;\n-import org.jbpm.persistence.util.PersistenceUtil;\n-import org.kie.test.util.db.PoolingDataSourceWrapper;\n+import org.jbpm.test.persistence.scripts.util.SQLCommandUtil;\n+import org.jbpm.test.persistence.scripts.util.SQLScriptUtil;\n+import org.jbpm.test.persistence.scripts.util.TestsUtil;\n+import org.jbpm.test.persistence.util.PersistenceUtil;\n+import org.jbpm.test.persistence.util.ProcessCreatorForHelp;\n import org.kie.api.KieBase;\n import org.kie.api.runtime.Environment;\n import org.kie.api.runtime.EnvironmentName;\n-import org.kie.api.task.model.I18NText;\n-import org.kie.api.task.model.OrganizationalEntity;\n import org.kie.internal.persistence.jpa.JPAKnowledgeService;\n import org.kie.internal.runtime.StatefulKnowledgeSession;\n-import org.kie.internal.task.api.TaskModelProvider;\n-import org.kie.internal.task.api.model.InternalI18NText;\n-import org.kie.internal.task.api.model.InternalOrganizationalEntity;\n-import org.kie.internal.task.api.model.InternalPeopleAssignments;\n-import org.kie.internal.task.api.model.InternalTaskData;\n+import org.kie.test.util.db.PoolingDataSourceWrapper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.persistence.scripts.DatabaseType.SQLSERVER;\n-import static org.jbpm.persistence.scripts.DatabaseType.SQLSERVER2008;\n-import static org.jbpm.persistence.scripts.DatabaseType.SYBASE;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SQLSERVER;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SQLSERVER2008;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SYBASE;\n \n /**\n  * Central context that hides persistence from tests, so there is no need to work with persistence in the tests\n  * (transactions etc).", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNDA5Mw==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393524093", "bodyText": "Agree. Will update the docs accordingly.", "author": "afalhambra", "createdAt": "2020-03-17T08:52:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNjYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MjY4OA==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393782688", "bodyText": "Done.", "author": "afalhambra", "createdAt": "2020-03-17T15:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNjYyOA=="}], "type": "inlineReview", "revised_code": {"commit": "cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "chunk": "diff --git a/jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/TestPersistenceContextBase.java b/jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/TestPersistenceContextBase.java\nindex b8d29ff15..352f4a4fc 100644\n--- a/jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/TestPersistenceContextBase.java\n+++ b/jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/TestPersistenceContextBase.java\n\n@@ -50,7 +50,7 @@ import static org.jbpm.test.persistence.scripts.DatabaseType.SQLSERVER2008;\n import static org.jbpm.test.persistence.scripts.DatabaseType.SYBASE;\n \n /**\n- * Central context that hides persistence from tests, so there is no need to work with persistence in the tests\n+ * Central context class that hides persistence from tests, so there is no need to work with persistence in the tests\n  * (transactions etc).\n  */\n public class TestPersistenceContextBase {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTQ3MQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393131471", "bodyText": "I think that these entities and also WorkItemHandlers are used specifically for jbpm-persistence tests, aren't they? In that case I think we can leave them in the jbpm-persistence module.", "author": "MarianMacik", "createdAt": "2020-03-16T15:58:46Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntity.java", "diffHunk": "@@ -14,7 +14,7 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.session.objects;\n+package org.jbpm.test.persistence.session.objects;", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNjcxMQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393526711", "bodyText": "I agree.\nWill revert these classes", "author": "afalhambra", "createdAt": "2020-03-17T08:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTQ3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4Mjk4NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393782985", "bodyText": "Done.", "author": "afalhambra", "createdAt": "2020-03-17T15:52:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTQ3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "chunk": "diff --git a/jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntity.java b/jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/objects/MyEntity.java\nsimilarity index 97%\nrename from jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntity.java\nrename to jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/objects/MyEntity.java\nindex b0f38898d..1f206ae27 100644\n--- a/jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntity.java\n+++ b/jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/objects/MyEntity.java\n\n@@ -14,7 +14,7 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.test.persistence.session.objects;\n+package org.jbpm.persistence.session.objects;\n \n import java.io.Serializable;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMjQxMw==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393132413", "bodyText": "Is this needed? My understanding by the name of the class is that no getters/setters should be present.", "author": "MarianMacik", "createdAt": "2020-03-16T16:00:07Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntityOnlyFields.java", "diffHunk": "@@ -68,5 +69,9 @@ public int hashCode() {\n         hash = 41 * hash + (this.test != null ? this.test.hashCode() : 0);\n         return hash;\n     }\n+\n+    public String getTest() {\n+        return test;\n+    }", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyOTQ0Mg==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393529442", "bodyText": "Can't recall now why this was added but as we agreed to keep these classes in the jbpm-persistence module I won't make any of these changes.\nReverting this back.", "author": "afalhambra", "createdAt": "2020-03-17T09:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMjQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MzEyNw==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393783127", "bodyText": "Done.", "author": "afalhambra", "createdAt": "2020-03-17T15:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMjQxMw=="}], "type": "inlineReview", "revised_code": {"commit": "cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "chunk": "diff --git a/jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntityOnlyFields.java b/jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/objects/MyEntityOnlyFields.java\nsimilarity index 93%\nrename from jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntityOnlyFields.java\nrename to jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/objects/MyEntityOnlyFields.java\nindex 611d4c4c1..f0a41138a 100644\n--- a/jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntityOnlyFields.java\n+++ b/jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/objects/MyEntityOnlyFields.java\n\n@@ -69,9 +68,5 @@ public class MyEntityOnlyFields implements Serializable {\n         hash = 41 * hash + (this.test != null ? this.test.hashCode() : 0);\n         return hash;\n     }\n-\n-    public String getTest() {\n-        return test;\n-    }\n     \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzU1OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393133559", "bodyText": "Probably again used just in jbpm-persistence tests?", "author": "MarianMacik", "createdAt": "2020-03-16T16:01:46Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/util/ProcessCreatorForHelp.java", "diffHunk": "@@ -14,21 +14,25 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.map.impl;\n+package org.jbpm.test.persistence.util;\n \n import java.util.ArrayList;\n import java.util.List;\n \n import org.jbpm.process.core.Work;\n-import org.jbpm.process.core.datatype.impl.type.ObjectDataType;\n-import org.jbpm.process.core.impl.WorkImpl;\n-import org.jbpm.persistence.session.objects.Person;\n import org.jbpm.process.core.context.variable.Variable;\n+import org.jbpm.process.core.datatype.impl.type.ObjectDataType;\n import org.jbpm.process.core.event.EventTypeFilter;\n+import org.jbpm.process.core.impl.WorkImpl;\n import org.jbpm.ruleflow.core.RuleFlowProcess;\n+import org.jbpm.test.persistence.session.objects.Person;\n import org.jbpm.workflow.core.Node;\n import org.jbpm.workflow.core.impl.ConnectionImpl;\n-import org.jbpm.workflow.core.node.*;\n+import org.jbpm.workflow.core.node.EndNode;\n+import org.jbpm.workflow.core.node.EventNode;\n+import org.jbpm.workflow.core.node.StartNode;\n+import org.jbpm.workflow.core.node.SubProcessNode;\n+import org.jbpm.workflow.core.node.WorkItemNode;\n \n public class ProcessCreatorForHelp {", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUzMzI1MQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393533251", "bodyText": "This class is used by TestPersistenceContextBase class (one of the class we want to reuse) and it was located in the jbpm-installer module originally (now in the jbpm-test-util).\nSo this ProcessCreatorForHelp class is used by two classes, one in the jbpm-persistence  and one in the jbpm-test-util module.\nI would keep it in jbpm-test-util. What do you think?", "author": "afalhambra", "createdAt": "2020-03-17T09:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzU1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3OTk4OA==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393579988", "bodyText": "Ah, then it's fine.", "author": "MarianMacik", "createdAt": "2020-03-17T10:29:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzU1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "chunk": "diff --git a/jbpm-test-util/src/main/java/org/jbpm/test/persistence/util/ProcessCreatorForHelp.java b/jbpm-test-util/src/main/java/org/jbpm/test/persistence/util/ProcessCreatorForHelp.java\nindex 44a6332c1..72d350858 100644\n--- a/jbpm-test-util/src/main/java/org/jbpm/test/persistence/util/ProcessCreatorForHelp.java\n+++ b/jbpm-test-util/src/main/java/org/jbpm/test/persistence/util/ProcessCreatorForHelp.java\n\n@@ -16,16 +16,10 @@\n \n package org.jbpm.test.persistence.util;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n import org.jbpm.process.core.Work;\n-import org.jbpm.process.core.context.variable.Variable;\n-import org.jbpm.process.core.datatype.impl.type.ObjectDataType;\n import org.jbpm.process.core.event.EventTypeFilter;\n import org.jbpm.process.core.impl.WorkImpl;\n import org.jbpm.ruleflow.core.RuleFlowProcess;\n-import org.jbpm.test.persistence.session.objects.Person;\n import org.jbpm.workflow.core.Node;\n import org.jbpm.workflow.core.impl.ConnectionImpl;\n import org.jbpm.workflow.core.node.EndNode;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNjY3Nw==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393136677", "bodyText": "I guess jbpm-xes module then doesn't need to depend on jbpm-persistence-jpa test-jar artifact?", "author": "MarianMacik", "createdAt": "2020-03-16T16:06:17Z", "path": "jbpm-xes/src/test/java/org/jbpm/xes/XESPersistenceBase.java", "diffHunk": "@@ -17,8 +17,9 @@\n package org.jbpm.xes;\n \n import java.util.Properties;\n-import org.jbpm.persistence.util.PersistenceUtil;\n+\n import org.jbpm.test.JbpmJUnitBaseTestCase;\n+import org.jbpm.test.persistence.util.PersistenceUtil;", "originalCommit": "03996a26e97d6187809adb8e43f4751a6d5bd149", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1MTUwMQ==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393551501", "bodyText": "Nice catch!\nRemoving jbpm-persistence-jpa dependencies from pom.xml (not needed)", "author": "afalhambra", "createdAt": "2020-03-17T09:40:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNjY3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MzQwMg==", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393783402", "bodyText": "Done.", "author": "afalhambra", "createdAt": "2020-03-17T15:53:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNjY3Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "url": "https://github.com/kiegroup/jbpm/commit/cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "message": "- Reuse and refactor of jbpm-installer classes and moved/refactored to jbpm-util-test module along with some dependency classes from jbpm-persistence module\n- Split of jbpm-installer into a new jbpm-db-script module to reuse and share DB sql scripts.", "committedDate": "2020-03-17T15:50:10Z", "type": "commit"}, {"oid": "cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "url": "https://github.com/kiegroup/jbpm/commit/cb574be5c5bb8d8bb5918a4215ac96df1ed42df6", "message": "- Reuse and refactor of jbpm-installer classes and moved/refactored to jbpm-util-test module along with some dependency classes from jbpm-persistence module\n- Split of jbpm-installer into a new jbpm-db-script module to reuse and share DB sql scripts.", "committedDate": "2020-03-17T15:50:10Z", "type": "forcePushed"}, {"oid": "662a46ab24355fc0a56fe7ee72e8f7b8df9cdd8c", "url": "https://github.com/kiegroup/jbpm/commit/662a46ab24355fc0a56fe7ee72e8f7b8df9cdd8c", "message": "Merge branch 'master' into adding_jbpm-test-coverage", "committedDate": "2020-03-17T15:55:08Z", "type": "commit"}]}