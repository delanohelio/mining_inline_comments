{"pr_number": 1794, "pr_title": "[JBPM-9457] Kafka Event Emitter should reuse the same Producer", "pr_createdAt": "2020-11-04T16:25:35Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1794", "timeline": [{"oid": "94aaf3b8b2ed4b126b48937957d96607751b48cf", "url": "https://github.com/kiegroup/jbpm/commit/94aaf3b8b2ed4b126b48937957d96607751b48cf", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-04T16:59:40Z", "type": "forcePushed"}, {"oid": "039afc9ac7f8386e1bcdd846e3986e61c1bde2f1", "url": "https://github.com/kiegroup/jbpm/commit/039afc9ac7f8386e1bcdd846e3986e61c1bde2f1", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-04T17:02:24Z", "type": "forcePushed"}, {"oid": "da3c114cf7b0c39d788a6678b674b356c11f8d55", "url": "https://github.com/kiegroup/jbpm/commit/da3c114cf7b0c39d788a6678b674b356c11f8d55", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-04T17:08:52Z", "type": "forcePushed"}, {"oid": "8d2b386d72823d5a94fd84ea1ffe6ea9c83dc478", "url": "https://github.com/kiegroup/jbpm/commit/8d2b386d72823d5a94fd84ea1ffe6ea9c83dc478", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-04T18:44:44Z", "type": "forcePushed"}, {"oid": "d30376732e44b7aae138e3c0e0435ed0344de5bc", "url": "https://github.com/kiegroup/jbpm/commit/d30376732e44b7aae138e3c0e0435ed0344de5bc", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-04T18:50:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA2ODM4OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1794#discussion_r518068389", "bodyText": "you need to add a callback here to know if the message was delivered or not.\nhttps://kafka.apache.org/10/javadoc/org/apache/kafka/clients/producer/KafkaProducer.html#send-org.apache.kafka.clients.producer.ProducerRecord-org.apache.kafka.clients.producer.Callback-\nin case the callback is a exception the data needs to be logged entirely", "author": "elguardian", "createdAt": "2020-11-05T13:56:11Z", "path": "jbpm-event-emitters/jbpm-event-emitters-kafka/src/main/java/org/jbpm/event/emitters/kafka/KafkaEventEmitter.java", "diffHunk": "@@ -110,55 +112,40 @@ public void deliver(Collection<InstanceView<?>> data) {\n                 producer.send(new ProducerRecord<>(getTopic(topic), mapper.writeValueAsBytes(", "originalCommit": "d30376732e44b7aae138e3c0e0435ed0344de5bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEwNDczMw==", "url": "https://github.com/kiegroup/jbpm/pull/1794#discussion_r518104733", "bodyText": "Thanks for pointing it out, done", "author": "fjtirado", "createdAt": "2020-11-05T14:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA2ODM4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "04dcd382ad6e77ac4344bb6b44990134166f7968", "chunk": "diff --git a/jbpm-event-emitters/jbpm-event-emitters-kafka/src/main/java/org/jbpm/event/emitters/kafka/KafkaEventEmitter.java b/jbpm-event-emitters/jbpm-event-emitters-kafka/src/main/java/org/jbpm/event/emitters/kafka/KafkaEventEmitter.java\nindex ea9e45d75..fb3f743b3 100644\n--- a/jbpm-event-emitters/jbpm-event-emitters-kafka/src/main/java/org/jbpm/event/emitters/kafka/KafkaEventEmitter.java\n+++ b/jbpm-event-emitters/jbpm-event-emitters-kafka/src/main/java/org/jbpm/event/emitters/kafka/KafkaEventEmitter.java\n\n@@ -111,14 +111,23 @@ public class KafkaEventEmitter implements EventEmitter {\n             try {\n                 producer.send(new ProducerRecord<>(getTopic(topic), mapper.writeValueAsBytes(\n                         new CloudEventSpec1(type, String.format(SOURCE_FORMATTER, processId, processInstanceId),\n-                                view))));\n-            } catch (Exception ex) {\n-                logger.error(\"Error publishing view \" + view, ex);\n+                                view))), (m, e) -> {\n+                                    if (e != null) {\n+                                        logError(view, e);\n+                                    }\n+                                });\n+            } catch (Exception e) {\n+                logError(view, e);\n             }\n         }\n         producer.flush();\n     }\n \n+    private void logError(InstanceView<?> view, Exception e) {\n+        logger.error(\"Error publishing view \" + view, e);\n+    }\n+\n+\n     public void drop(Collection<InstanceView<?>> data) {\n         // nothing to do\n     }\n"}}, {"oid": "04dcd382ad6e77ac4344bb6b44990134166f7968", "url": "https://github.com/kiegroup/jbpm/commit/04dcd382ad6e77ac4344bb6b44990134166f7968", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-05T14:44:21Z", "type": "forcePushed"}, {"oid": "68d8593ae37c4b9743a41fb29d0b32098f3b27b9", "url": "https://github.com/kiegroup/jbpm/commit/68d8593ae37c4b9743a41fb29d0b32098f3b27b9", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-06T08:06:13Z", "type": "forcePushed"}, {"oid": "446b7624c6e9ae639b7ff6eca067716b656e9d60", "url": "https://github.com/kiegroup/jbpm/commit/446b7624c6e9ae639b7ff6eca067716b656e9d60", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-06T08:54:13Z", "type": "forcePushed"}, {"oid": "ac27914cdf5e8e9e84094c5d60140dcccce5791b", "url": "https://github.com/kiegroup/jbpm/commit/ac27914cdf5e8e9e84094c5d60140dcccce5791b", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-06T18:31:55Z", "type": "forcePushed"}, {"oid": "87733c4596b6c4978d62f07500f7efb8d1d67345", "url": "https://github.com/kiegroup/jbpm/commit/87733c4596b6c4978d62f07500f7efb8d1d67345", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-06T18:34:35Z", "type": "commit"}, {"oid": "87733c4596b6c4978d62f07500f7efb8d1d67345", "url": "https://github.com/kiegroup/jbpm/commit/87733c4596b6c4978d62f07500f7efb8d1d67345", "message": "[JBPM-4957] Kafka Event Emitter should reuse the same Producer\n\nUsing one consumer to rule them all", "committedDate": "2020-11-06T18:34:35Z", "type": "forcePushed"}]}