{"pr_number": 1697, "pr_title": "[JBPM-9223] include case file details in case list.", "pr_createdAt": "2020-07-08T10:56:33Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1697", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1NjUyNA==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r451856524", "bodyText": "Is this really needed to be exposed in the model? Other setters are not part of the interface.\nMissing doc comment above.", "author": "gmunozfe", "createdAt": "2020-07-08T22:19:23Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "diffHunk": "@@ -66,6 +66,8 @@\n      */\n     CaseFileInstance getCaseFile();\n     \n+    void setCaseFile (CaseFileInstance  caseFileInstance);", "originalCommit": "00b9945a2df703d81b8d1b64f705678d293fece1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2NTA5MQ==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r452065091", "bodyText": "Either we add this or we have to cast when setting the case file in case \"withData\" is true, I will incorporate the java doc.", "author": "fjtirado", "createdAt": "2020-07-09T08:51:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1NjUyNA=="}], "type": "inlineReview", "revised_code": {"commit": "c9db0471ace2c42e1dbc71598c6828dd7d25a61c", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java\nindex 956d16e80..eb7cbde90 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java\n\n@@ -60,12 +58,16 @@ public interface CaseInstance {\n     /**\n      * Returns case file associated with this case.\n      * <p>\n-     *     Note: {@link CaseInstance#getCaseFile()} will always be empty.\n-     *     Refer to using {@link CaseService#getCaseFileInstance(String)} when access to case file information is needed.\n+     *     Note: {@link CaseInstance#getCaseFile()} will  be empty unless <code>withData</code> flag is specified \n      *  </p>\n      */\n     CaseFileInstance getCaseFile();\n     \n+    \n+    /**\n+     * Set case file information to this instance \n+     * @param caseFileInstance caseFileInstance information\n+     */\n     void setCaseFile (CaseFileInstance  caseFileInstance);\n     \n     /**\n"}}, {"oid": "c9db0471ace2c42e1dbc71598c6828dd7d25a61c", "url": "https://github.com/kiegroup/jbpm/commit/c9db0471ace2c42e1dbc71598c6828dd7d25a61c", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-09T09:02:47Z", "type": "forcePushed"}, {"oid": "563289c73dcb100cf2d4448d2f6bf284f9df4dfb", "url": "https://github.com/kiegroup/jbpm/commit/563289c73dcb100cf2d4448d2f6bf284f9df4dfb", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-14T09:54:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMwNjc0Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454306746", "bodyText": "Missing owner in the javadoc params", "author": "gmunozfe", "createdAt": "2020-07-14T12:05:05Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java", "diffHunk": "@@ -234,6 +251,14 @@\n      */\n     Collection<CaseInstance> getCaseInstancesOwnedBy(String owner, List<CaseStatus> statuses, QueryContext queryContext);\n     \n+    /**\n+     * Returns all case instances owned by given user\n+     * @param statuses list of statuses that case should be in to match", "originalCommit": "563289c73dcb100cf2d4448d2f6bf284f9df4dfb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ff2d94d992abda4305288917128bb0d29478971", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java\nindex 70bb8a3cd..5ef93107f 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java\n\n@@ -245,6 +245,7 @@ public interface CaseRuntimeDataService {\n     \n     /**\n      * Returns all case instances owned by given user\n+     * @param owner user owning task\n      * @param statuses list of statuses that case should be in to match\n      * @param queryContext control parameters for the result e.g. sorting, paging\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMwNzA3Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454307076", "bodyText": "Could you switch them to be in the same order than in the method definition?", "author": "gmunozfe", "createdAt": "2020-07-14T12:05:44Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java", "diffHunk": "@@ -249,6 +274,14 @@\n      */\n     Collection<CaseInstance> getCaseInstancesAnyRole(List<CaseStatus> statuses, QueryContext queryContext);\n     \n+    /**\n+     * Returns case instances that given user (via identity provider) is involved in in any role.\n+     * @param statuses statuses of the case instances\n+     * @param queryContext control parameters for the result e.g. sorting, paging\n+     * @param withData indicates if case file data should be included in the result", "originalCommit": "563289c73dcb100cf2d4448d2f6bf284f9df4dfb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ff2d94d992abda4305288917128bb0d29478971", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java\nindex 70bb8a3cd..5ef93107f 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java\n\n@@ -277,8 +279,8 @@ public interface CaseRuntimeDataService {\n     /**\n      * Returns case instances that given user (via identity provider) is involved in in any role.\n      * @param statuses statuses of the case instances\n-     * @param queryContext control parameters for the result e.g. sorting, paging\n      * @param withData indicates if case file data should be included in the result\n+     * @param queryContext control parameters for the result e.g. sorting, paging\n      */\n     Collection<CaseInstance> getCaseInstancesAnyRole(List<CaseStatus> statuses, boolean withData, QueryContext queryContext);\n     \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMDQ2NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454310465", "bodyText": "Could you add a test for coverage this method? I think it's the only one missing for complete coverage", "author": "gmunozfe", "createdAt": "2020-07-14T12:12:36Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImpl.java", "diffHunk": "@@ -494,17 +507,19 @@ private int compareMilestones(CaseMilestoneInstance o1, CaseMilestoneInstance o2\n         return processInstances;\n     }\n \n-\n     @Override\n     public Collection<CaseInstance> getCaseInstancesOwnedBy(String owner, List<CaseStatus> statuses, QueryContext queryContext) {\n+        return getCaseInstancesOwnedBy(owner,statuses, false, queryContext);", "originalCommit": "563289c73dcb100cf2d4448d2f6bf284f9df4dfb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91991e3e6ba5fd7a1c338db7536f38cf1e84af2f", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImpl.java b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImpl.java\nindex 7e7ae798b..3c8de5ed7 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImpl.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImpl.java\n\n@@ -482,29 +482,34 @@ public class CaseRuntimeDataServiceImpl implements CaseRuntimeDataService, Deplo\n \n     @Override\n     public Collection<CaseInstance> getCaseInstancesByDeployment(String deploymentId, List<CaseStatus> statuses, QueryContext queryContext) {\n+        return getCaseInstancesByDeployment(deploymentId, statuses, false, queryContext);\n+    }\n+\n+    @Override\n+    public Collection<CaseInstance> getCaseInstancesByDeployment(String deploymentId, List<CaseStatus> statuses, boolean withData, QueryContext queryContext) {\n         Map<String, Object> params = new HashMap<String, Object>();\n         params.put(\"deploymentId\", deploymentId);\n         params.put(\"statuses\", resolveCaseStatuses(statuses));\n         params.put(\"entities\", collectUserAuthInfo());\n         applyQueryContext(params, queryContext);\n         applyDeploymentFilter(params);\n-        List<CaseInstance> processInstances =  commandService.execute(new QueryNameCommand<List<CaseInstance>>(\"getCaseInstancesByDeployment\", params));\n-\n-        return processInstances;\n+        return fillCaseFiles(commandService.execute(new QueryNameCommand<List<CaseInstance>>(\"getCaseInstancesByDeployment\", params)),withData);\n     }\n \n-\n     @Override\n     public Collection<CaseInstance> getCaseInstancesByDefinition(String definitionId, List<CaseStatus> statuses, QueryContext queryContext) {\n+        return getCaseInstancesByDefinition(definitionId, statuses, false, queryContext);\n+    }\n+\n+    @Override\n+    public Collection<CaseInstance> getCaseInstancesByDefinition(String definitionId, List<CaseStatus> statuses, boolean withData, QueryContext queryContext) {\n         Map<String, Object> params = new HashMap<String, Object>();\n         params.put(\"definitionId\", definitionId);\n         params.put(\"statuses\", resolveCaseStatuses(statuses));\n         params.put(\"entities\", collectUserAuthInfo());\n         applyQueryContext(params, queryContext);\n         applyDeploymentFilter(params);\n-        List<CaseInstance> processInstances =  commandService.execute(new QueryNameCommand<List<CaseInstance>>(\"getCaseInstancesByDefinition\", params));\n-\n-        return processInstances;\n+        return fillCaseFiles(commandService.execute(new QueryNameCommand<List<CaseInstance>>(\"getCaseInstancesByDefinition\", params)),withData);\n     }\n \n     @Override\n"}}, {"oid": "7ff2d94d992abda4305288917128bb0d29478971", "url": "https://github.com/kiegroup/jbpm/commit/7ff2d94d992abda4305288917128bb0d29478971", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-14T14:15:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxNDkyNA==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454414924", "bodyText": "Just a small typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Set case file information to this instance \n          \n          \n            \n                 * Sets case file information to this instance", "author": "afalhambra", "createdAt": "2020-07-14T14:50:08Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "diffHunk": "@@ -60,12 +58,18 @@\n     /**\n      * Returns case file associated with this case.\n      * <p>\n-     *     Note: {@link CaseInstance#getCaseFile()} will always be empty.\n-     *     Refer to using {@link CaseService#getCaseFileInstance(String)} when access to case file information is needed.\n+     *     Note: {@link CaseInstance#getCaseFile()} will  be empty unless <code>withData</code> flag is specified \n      *  </p>\n      */\n     CaseFileInstance getCaseFile();\n     \n+    \n+    /**\n+     * Set case file information to this instance ", "originalCommit": "7ff2d94d992abda4305288917128bb0d29478971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzNzMzMA==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454537330", "bodyText": "Good catch", "author": "fjtirado", "createdAt": "2020-07-14T17:52:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxNDkyNA=="}], "type": "inlineReview", "revised_code": {"commit": "93e797fb98e8dc50fe2f08397a8ed6548a33371e", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java\nindex eb7cbde90..85bebd584 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java\n\n@@ -65,7 +65,7 @@ public interface CaseInstance {\n     \n     \n     /**\n-     * Set case file information to this instance \n+     * Sets case file information to this instance \n      * @param caseFileInstance caseFileInstance information\n      */\n     void setCaseFile (CaseFileInstance  caseFileInstance);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzNjM0OA==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454436348", "bodyText": "As there is only 1 single list as argument, it could be replaced with:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(Arrays.asList(CaseStatus.OPEN), true, new QueryContext());\n          \n          \n            \n                        Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(Collections.singletonList(CaseStatus.OPEN), true, new QueryContext());", "author": "afalhambra", "createdAt": "2020-07-14T15:18:37Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java", "diffHunk": "@@ -89,7 +89,7 @@ public void testStartEmptyCaseWithCaseFile() {\n             assertNotNull(cInstance.getCaseFile());\n             assertEquals(\"my first case\", cInstance.getCaseFile().getData(\"name\"));\n \n-            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n+            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(Arrays.asList(CaseStatus.OPEN), true, new QueryContext());", "originalCommit": "7ff2d94d992abda4305288917128bb0d29478971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzNzY2Nw==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454537667", "bodyText": "yes, thats better", "author": "fjtirado", "createdAt": "2020-07-14T17:53:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzNjM0OA=="}], "type": "inlineReview", "revised_code": {"commit": "93e797fb98e8dc50fe2f08397a8ed6548a33371e", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java\nindex 2629947a0..52e1aa1aa 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java\n\n@@ -89,7 +90,7 @@ public class CaseRuntimeDataServiceImplTest extends AbstractCaseServicesBaseTest\n             assertNotNull(cInstance.getCaseFile());\n             assertEquals(\"my first case\", cInstance.getCaseFile().getData(\"name\"));\n \n-            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(Arrays.asList(CaseStatus.OPEN), true, new QueryContext());\n+            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(Collections.singletonList(CaseStatus.OPEN), true, new QueryContext());\n             assertNotNull(instances);\n \n             assertEquals(1, instances.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ0NDg1OA==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454444858", "bodyText": "not sure about this change? why not use true instead? or if that's not the aim of this test, why don't we keep it as it was originally?", "author": "afalhambra", "createdAt": "2020-07-14T15:30:08Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/SubCaseServiceImplTest.java", "diffHunk": "@@ -513,7 +513,7 @@ public void testCaseWithSubCaseQuery() {\n \n             caseService.triggerAdHocFragment(MID_CASE_ID, \"Sub Case\", null);\n \n-            Collection<CaseInstance> caseInstances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n+            Collection<CaseInstance> caseInstances = caseRuntimeDataService.getCaseInstances(false,new QueryContext());", "originalCommit": "7ff2d94d992abda4305288917128bb0d29478971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzNDkwMA==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454534900", "bodyText": "you are right, this is unneeded, so keeping the original", "author": "fjtirado", "createdAt": "2020-07-14T17:48:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ0NDg1OA=="}], "type": "inlineReview", "revised_code": {"commit": "93e797fb98e8dc50fe2f08397a8ed6548a33371e", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/SubCaseServiceImplTest.java b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/SubCaseServiceImplTest.java\nindex 3fb254292..d55945892 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/SubCaseServiceImplTest.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/SubCaseServiceImplTest.java\n\n@@ -513,7 +513,7 @@ public class SubCaseServiceImplTest extends AbstractCaseServicesBaseTest {\n \n             caseService.triggerAdHocFragment(MID_CASE_ID, \"Sub Case\", null);\n \n-            Collection<CaseInstance> caseInstances = caseRuntimeDataService.getCaseInstances(false,new QueryContext());\n+            Collection<CaseInstance> caseInstances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n             assertNotNull(caseInstances);\n             assertEquals(3, caseInstances.size());\n \n"}}, {"oid": "93e797fb98e8dc50fe2f08397a8ed6548a33371e", "url": "https://github.com/kiegroup/jbpm/commit/93e797fb98e8dc50fe2f08397a8ed6548a33371e", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-14T17:54:01Z", "type": "forcePushed"}, {"oid": "91991e3e6ba5fd7a1c338db7536f38cf1e84af2f", "url": "https://github.com/kiegroup/jbpm/commit/91991e3e6ba5fd7a1c338db7536f38cf1e84af2f", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-16T17:27:09Z", "type": "forcePushed"}, {"oid": "347bd3867be57b8bb620275f2f20f6294600ed88", "url": "https://github.com/kiegroup/jbpm/commit/347bd3867be57b8bb620275f2f20f6294600ed88", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-17T07:58:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM2NTgxMw==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r456365813", "bodyText": "Add also a test for getCaseInstancesOwnedBy including withData=true", "author": "gmunozfe", "createdAt": "2020-07-17T10:43:08Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java", "diffHunk": "@@ -88,21 +89,12 @@ public void testStartEmptyCaseWithCaseFile() {\n             assertEquals(FIRST_CASE_ID, cInstance.getCaseId());\n             assertNotNull(cInstance.getCaseFile());\n             assertEquals(\"my first case\", cInstance.getCaseFile().getData(\"name\"));\n+            \n+            List<CaseStatus> statuses = Collections.singletonList(CaseStatus.OPEN);\n \n-            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n-            assertNotNull(instances);\n-\n-            assertEquals(1, instances.size());\n-            CaseInstance instance = instances.iterator().next();\n-            assertNotNull(instance);\n-\n-            assertEquals(FIRST_CASE_ID, instance.getCaseId());\n-            assertEquals(EMPTY_CASE_P_ID, instance.getCaseDefinitionId());\n-            assertEquals(\"my first case\", instance.getCaseDescription());\n-            assertEquals(USER, instance.getOwner());\n-            assertEquals(ProcessInstance.STATE_ACTIVE, instance.getStatus().intValue());\n-            assertEquals(deploymentUnit.getIdentifier(), instance.getDeploymentId());\n-            assertNotNull(instance.getStartedAt());\n+            assertCaseInstance(caseRuntimeDataService.getCaseInstances(statuses, true, new QueryContext()));\n+            assertCaseInstance(caseRuntimeDataService.getCaseInstancesByDefinition(EMPTY_CASE_P_ID, statuses, true, new QueryContext()));\n+            assertCaseInstance(caseRuntimeDataService.getCaseInstancesByDeployment(deploymentUnit.getIdentifier(), statuses, true, new QueryContext()));", "originalCommit": "347bd3867be57b8bb620275f2f20f6294600ed88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM3OTEwOQ==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r456379109", "bodyText": "Added in a different place", "author": "fjtirado", "createdAt": "2020-07-17T11:15:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM2NTgxMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "ba8d3c5cbe92fcd133a02885b74aa15784e12c3d", "url": "https://github.com/kiegroup/jbpm/commit/ba8d3c5cbe92fcd133a02885b74aa15784e12c3d", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-17T11:14:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzMTM1NA==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r458631354", "bodyText": "will  be empty - Unnecessary space between will and be :)", "author": "MarianMacik", "createdAt": "2020-07-22T08:39:52Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "diffHunk": "@@ -60,12 +58,18 @@\n     /**\n      * Returns case file associated with this case.\n      * <p>\n-     *     Note: {@link CaseInstance#getCaseFile()} will always be empty.\n-     *     Refer to using {@link CaseService#getCaseFileInstance(String)} when access to case file information is needed.\n+     *     Note: {@link CaseInstance#getCaseFile()} will  be empty unless <code>withData</code> flag is specified ", "originalCommit": "ba8d3c5cbe92fcd133a02885b74aa15784e12c3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "db71f9c7c8364b7ac8763a56f8d5e5a41710993a", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java\nindex 85bebd584..cae597b7f 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java\n\n@@ -58,8 +58,8 @@ public interface CaseInstance {\n     /**\n      * Returns case file associated with this case.\n      * <p>\n-     *     Note: {@link CaseInstance#getCaseFile()} will  be empty unless <code>withData</code> flag is specified \n-     *  </p>\n+     *     Note: {@link CaseInstance#getCaseFile()} will be empty unless <code>withData</code> flag is specified \n+     * </p>\n      */\n     CaseFileInstance getCaseFile();\n     \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0NjQwNg==", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r458646406", "bodyText": "As in the previous PR, I would specifically create a test for that to not mix the focus of the test. For example this one is called testCaseRolesWithQueries so I don't expect it to test CaseFile retrieval for case instances.", "author": "MarianMacik", "createdAt": "2020-07-22T09:04:34Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseServiceImplTest.java", "diffHunk": "@@ -1840,20 +1840,27 @@ public void testCaseRolesWithQueries() {\n             instances = caseRuntimeDataService.getCaseInstancesAnyRole(status, new QueryContext());\n             assertNotNull(instances);\n             assertFalse(\"Opened case was returned when searching for cancelled case instances.\", instances.stream().anyMatch(n -> n.getCaseId().equals(caseId)));\n-\n+            \n             status = Arrays.asList(CaseStatus.OPEN);\n+            \n+            instances = caseRuntimeDataService.getCaseInstancesOwnedBy(\"john\", status, true, new QueryContext());\n+            assertNotNull(instances);\n+            assertEquals(1, instances.size());\n+            assertNotNull(instances.iterator().next().getCaseFile());", "originalCommit": "ba8d3c5cbe92fcd133a02885b74aa15784e12c3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "db71f9c7c8364b7ac8763a56f8d5e5a41710993a", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseServiceImplTest.java b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseServiceImplTest.java\nindex af6827b90..6234c47d0 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseServiceImplTest.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseServiceImplTest.java\n\n@@ -1835,18 +1865,13 @@ public class CaseServiceImplTest extends AbstractCaseServicesBaseTest {\n             assertNotNull(instances);\n             assertEquals(0, instances.size());\n \n-            List<CaseStatus> status = Arrays.asList(CaseStatus.CANCELLED);\n+            List<CaseStatus> status = Collections.singletonList(CaseStatus.CANCELLED);\n \n             instances = caseRuntimeDataService.getCaseInstancesAnyRole(status, new QueryContext());\n             assertNotNull(instances);\n             assertFalse(\"Opened case was returned when searching for cancelled case instances.\", instances.stream().anyMatch(n -> n.getCaseId().equals(caseId)));\n-            \n-            status = Arrays.asList(CaseStatus.OPEN);\n-            \n-            instances = caseRuntimeDataService.getCaseInstancesOwnedBy(\"john\", status, true, new QueryContext());\n-            assertNotNull(instances);\n-            assertEquals(1, instances.size());\n-            assertNotNull(instances.iterator().next().getCaseFile());\n+\n+            status = Collections.singletonList(CaseStatus.OPEN);\n \n             instances = caseRuntimeDataService.getCaseInstancesAnyRole(status, new QueryContext());\n             assertNotNull(instances);\n"}}, {"oid": "db71f9c7c8364b7ac8763a56f8d5e5a41710993a", "url": "https://github.com/kiegroup/jbpm/commit/db71f9c7c8364b7ac8763a56f8d5e5a41710993a", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-22T10:10:43Z", "type": "forcePushed"}, {"oid": "12a6cf2353ac45208c94c4915b0565fb0c73042f", "url": "https://github.com/kiegroup/jbpm/commit/12a6cf2353ac45208c94c4915b0565fb0c73042f", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-22T10:12:36Z", "type": "forcePushed"}, {"oid": "7e0e72d9698eff90cf0f91683424d465c550d389", "url": "https://github.com/kiegroup/jbpm/commit/7e0e72d9698eff90cf0f91683424d465c550d389", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-22T12:09:22Z", "type": "forcePushed"}, {"oid": "1902645a3370a1339bc274e6724b724cf3c953a4", "url": "https://github.com/kiegroup/jbpm/commit/1902645a3370a1339bc274e6724b724cf3c953a4", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-22T12:19:23Z", "type": "commit"}, {"oid": "1902645a3370a1339bc274e6724b724cf3c953a4", "url": "https://github.com/kiegroup/jbpm/commit/1902645a3370a1339bc274e6724b724cf3c953a4", "message": "[JBPM-9223] include case file details in case list.\n\nAdding new overloaded getCaseInstances method to CaseRuntimeDataService\nthat allows\nthe possibility to include case file information if a flag is set", "committedDate": "2020-07-22T12:19:23Z", "type": "forcePushed"}]}