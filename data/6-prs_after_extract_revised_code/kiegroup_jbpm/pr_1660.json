{"pr_number": 1660, "pr_title": "[RHPAM-2960] Case instance update fails with java.io.NotSerializableE\u2026", "pr_createdAt": "2020-05-25T10:41:37Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1660", "timeline": [{"oid": "93f8576bb91963e9c82b4b1456fb23832b741875", "url": "https://github.com/kiegroup/jbpm/commit/93f8576bb91963e9c82b4b1456fb23832b741875", "message": "[RHPAM-2960] Case instance update fails with java.io.NotSerializableException: org.jbpm.services.task.persistence.JPATaskModelFactory for cases containing multiple SLAs", "committedDate": "2020-05-25T15:49:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAzMTI2OA==", "url": "https://github.com/kiegroup/jbpm/pull/1660#discussion_r431031268", "bodyText": "Current version is getting kruntime from pctx.getKnowledgeRuntime() method. So not really sure why we are now retrieving in a different way by using pctx.getWorkingMemory().getKnowledgeRuntime()?\nIf kruntime is not an instance of InternalWorkingMemory this will return a null and thus it might fail later on - this wasn't previous/current behavior.\nCan you please clarify?", "author": "afalhambra", "createdAt": "2020-05-27T10:56:44Z", "path": "jbpm-flow/src/main/java/org/jbpm/process/instance/timer/TimerManager.java", "diffHunk": "@@ -261,9 +261,10 @@ public void deserialize(MarshallerReaderContext inCtx, Timer timer) throws Class\n                     long now = pctx.getKnowledgeRuntime().getSessionClock().getCurrentTime();\n                     // overdue timer                    \n                     if (then < now) {\n-                        trigger = new OverdueTrigger(trigger, pctx.getKnowledgeRuntime());\n+                        trigger = new OverdueTrigger(trigger);\n                     }\n                 }\n+                trigger.initialize(pctx.getWorkingMemory().getKnowledgeRuntime());", "originalCommit": "93f8576bb91963e9c82b4b1456fb23832b741875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0de393b6edfa2b94228726fe8c2a4755de1d1d09", "chunk": "diff --git a/jbpm-flow/src/main/java/org/jbpm/process/instance/timer/TimerManager.java b/jbpm-flow/src/main/java/org/jbpm/process/instance/timer/TimerManager.java\nindex de9428d58..566ce2245 100644\n--- a/jbpm-flow/src/main/java/org/jbpm/process/instance/timer/TimerManager.java\n+++ b/jbpm-flow/src/main/java/org/jbpm/process/instance/timer/TimerManager.java\n\n@@ -264,7 +264,7 @@ public class TimerManager {\n                         trigger = new OverdueTrigger(trigger);\n                     }\n                 }\n-                trigger.initialize(pctx.getWorkingMemory().getKnowledgeRuntime());\n+                trigger.initialize(pctx.getKnowledgeRuntime());\n                 JobHandle jobHandle = ts.scheduleJob(processJob, pctx, trigger);\n                 timerInstance.setJobHandle(jobHandle);\n                 pctx.setJobHandle(jobHandle);\n"}}, {"oid": "0de393b6edfa2b94228726fe8c2a4755de1d1d09", "url": "https://github.com/kiegroup/jbpm/commit/0de393b6edfa2b94228726fe8c2a4755de1d1d09", "message": "[RHPAM-2960] Case instance update fails with java.io.NotSerializableException: org.jbpm.services.task.persistence.JPATaskModelFactory for cases containing multiple SLAs", "committedDate": "2020-05-27T13:25:39Z", "type": "forcePushed"}, {"oid": "a7157969b3fb1a702abc49fded1662c715723c1c", "url": "https://github.com/kiegroup/jbpm/commit/a7157969b3fb1a702abc49fded1662c715723c1c", "message": "[RHPAM-2960] Case instance update fails with java.io.NotSerializableException: org.jbpm.services.task.persistence.JPATaskModelFactory for cases containing multiple SLAs", "committedDate": "2020-05-27T13:27:54Z", "type": "commit"}, {"oid": "a7157969b3fb1a702abc49fded1662c715723c1c", "url": "https://github.com/kiegroup/jbpm/commit/a7157969b3fb1a702abc49fded1662c715723c1c", "message": "[RHPAM-2960] Case instance update fails with java.io.NotSerializableException: org.jbpm.services.task.persistence.JPATaskModelFactory for cases containing multiple SLAs", "committedDate": "2020-05-27T13:27:54Z", "type": "forcePushed"}]}