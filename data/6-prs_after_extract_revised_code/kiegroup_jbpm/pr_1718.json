{"pr_number": 1718, "pr_title": "[JBPM-9265] Empty Link Event name is a valid link name", "pr_createdAt": "2020-08-03T07:59:35Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1718", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMwMDAxMg==", "url": "https://github.com/kiegroup/jbpm/pull/1718#discussion_r464300012", "bodyText": "Check first that links is not null", "author": "gmunozfe", "createdAt": "2020-08-03T09:30:00Z", "path": "jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java", "diffHunk": "@@ -202,6 +204,15 @@ public Object end(final String uri, final String localName,\n \t public static void linkIntermediateLinks(NodeContainer process,\n \t            List<IntermediateLink> links) {\n \n+        List<IntermediateLink> errors = links.stream().filter(l -> l.getName() == null || l.getName().isEmpty()).collect(toList());", "originalCommit": "4c6e93c6b7c81fc15de798fc6192b5ac686a52bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3NTUwNA==", "url": "https://github.com/kiegroup/jbpm/pull/1718#discussion_r464475504", "bodyText": "done. Let's wait for CI", "author": "elguardian", "createdAt": "2020-08-03T15:08:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMwMDAxMg=="}], "type": "inlineReview", "revised_code": {"commit": "4f5bece0b721bd2a2186788e16dcd983b7fcc3a7", "chunk": "diff --git a/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java b/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java\nindex a94210a4c..4a1c85286 100644\n--- a/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java\n+++ b/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java\n\n@@ -204,17 +204,16 @@ public class ProcessHandler extends BaseAbstractHandler implements Handler {\n \t public static void linkIntermediateLinks(NodeContainer process,\n \t            List<IntermediateLink> links) {\n \n-        List<IntermediateLink> errors = links.stream().filter(l -> l.getName() == null || l.getName().isEmpty()).collect(toList());\n-        if (!errors.isEmpty()) {\n-            StringBuilder builder = new StringBuilder();\n-            for (IntermediateLink l : errors) {\n-                builder.append(\"\\tIntermediate Link: \" + l.getUniqueId() + \"\\n\");\n-            }\n-            throw new IllegalArgumentException(\"There are \" + errors.size() + \" links that does not have a name.\\n\" + builder.toString());\n-        }\n-\n-\t        if (null != links) {\n \n+        if (null != links) {\n+            List<IntermediateLink> errors = links.stream().filter(l -> l.getName() == null || l.getName().isEmpty()).collect(toList());\n+            if (!errors.isEmpty()) {\n+                StringBuilder builder = new StringBuilder();\n+                for (IntermediateLink l : errors) {\n+                    builder.append(\"\\tIntermediate Link: \" + l.getUniqueId() + \"\\n\");\n+                }\n+                throw new IllegalArgumentException(\"There are \" + errors.size() + \" links that does not have a name.\\n\" + builder.toString());\n+            }\n \t            // Search throw links\n \t            ArrayList<IntermediateLink> throwLinks = new ArrayList<IntermediateLink>();\n \t            for (IntermediateLink aLinks : links) {\n"}}, {"oid": "4f5bece0b721bd2a2186788e16dcd983b7fcc3a7", "url": "https://github.com/kiegroup/jbpm/commit/4f5bece0b721bd2a2186788e16dcd983b7fcc3a7", "message": "[JBPM-9265] Empty Link Event name is a valid link name", "committedDate": "2020-08-03T15:07:19Z", "type": "commit"}, {"oid": "4f5bece0b721bd2a2186788e16dcd983b7fcc3a7", "url": "https://github.com/kiegroup/jbpm/commit/4f5bece0b721bd2a2186788e16dcd983b7fcc3a7", "message": "[JBPM-9265] Empty Link Event name is a valid link name", "committedDate": "2020-08-03T15:07:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxNDA4OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1718#discussion_r464914089", "bodyText": "Minor thing: copyright for new file is set to 2017.", "author": "hasys", "createdAt": "2020-08-04T09:14:56Z", "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/EmptyLinkProcessTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "originalCommit": "4f5bece0b721bd2a2186788e16dcd983b7fcc3a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwNTAyMg==", "url": "https://github.com/kiegroup/jbpm/pull/1718#discussion_r466205022", "bodyText": "For Windows OS, better use System property \"line.separator\" than \"\\n\"", "author": "gmunozfe", "createdAt": "2020-08-06T07:37:15Z", "path": "jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java", "diffHunk": "@@ -202,8 +204,16 @@ public Object end(final String uri, final String localName,\n \t public static void linkIntermediateLinks(NodeContainer process,\n \t            List<IntermediateLink> links) {\n \n-\t        if (null != links) {\n \n+        if (null != links) {\n+            List<IntermediateLink> errors = links.stream().filter(l -> l.getName() == null || l.getName().isEmpty()).collect(toList());\n+            if (!errors.isEmpty()) {\n+                StringBuilder builder = new StringBuilder();\n+                for (IntermediateLink l : errors) {\n+                    builder.append(\"\\tIntermediate Link: \" + l.getUniqueId() + \"\\n\");\n+                }\n+                throw new IllegalArgumentException(\"There are \" + errors.size() + \" links that does not have a name.\\n\" + builder.toString());", "originalCommit": "4f5bece0b721bd2a2186788e16dcd983b7fcc3a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}