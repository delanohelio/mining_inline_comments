{"pr_number": 1581, "pr_title": "RHPAM-2556 - Case reopen capability", "pr_createdAt": "2020-01-16T17:48:50Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1581", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgzMTIxNQ==", "url": "https://github.com/kiegroup/jbpm/pull/1581#discussion_r367831215", "bodyText": "Hi @mswiderski\nThere are 3 tests failing in CaseServiceImplTest class:\ntestStartThenReopenEmptyCase\ntestStartThenReopenEmptyCaseUpdateData\ntestStartThenReopenEmptyCaseUpdateDescription\nexpected:<[my first case]> but was:<[#{name}]>\nIt seems like when starting the process, {name} variable has no value", "author": "gmunozfe", "createdAt": "2020-01-17T09:06:55Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java", "diffHunk": "@@ -79,20 +79,22 @@ public Void execute(Context context) {\n         \n         caseEventSupport.fireBeforeCaseReopened(caseId, caseFile, deploymentId, caseDefinitionId, data);\n         \n-        logger.debug(\"Updating case file in working memory\");\n+        logger.debug(\"Removing case file from working memory to allow refiring of rules\");\n         FactHandle factHandle = ksession.getFactHandle(caseFile);\n+        ksession.delete(factHandle);\n         ((CaseFileInstanceImpl)caseFile).setCaseReopenDate(new Date());\n         if (data != null && !data.isEmpty()) {\n             caseFile.addAll(data);\n         }\n-        ksession.update(factHandle, caseFile);\n+        \n         \n         logger.debug(\"Starting process instance for case {} and case definition {}\", caseId, caseDefinitionId);\n         CorrelationKey correlationKey = correlationKeyFactory.newCorrelationKey(caseId);\n         Map<String, Object> params = new HashMap<>();\n         // set case id to allow it to use CaseContext when creating runtime engine\n         params.put(EnvironmentName.CASE_ID, caseId);\n         long processInstanceId = processService.startProcess(deploymentId, caseDefinitionId, correlationKey, params);", "originalCommit": "4b7010f0b15373799bb59970b8fcf3faec54902b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3NDgyOA==", "url": "https://github.com/kiegroup/jbpm/pull/1581#discussion_r367874828", "bodyText": "working on a fix, thanks for checking on it", "author": "mswiderski", "createdAt": "2020-01-17T10:47:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgzMTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3NzkwOQ==", "url": "https://github.com/kiegroup/jbpm/pull/1581#discussion_r367877909", "bodyText": "pushed a fix so let's see how it goes in Jenkins now...", "author": "mswiderski", "createdAt": "2020-01-17T10:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgzMTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkwODg5OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1581#discussion_r367908899", "bodyText": "I've tested that approach, but some assertions are failing, because expecting 3 variables instead of 4 (because this time -inserting it like that- doesn't have caseId_ prefix):\nvariableId=caseFile_name  vs. variableId=name", "author": "gmunozfe", "createdAt": "2020-01-17T12:19:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgzMTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkwOTc3OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1581#discussion_r367909779", "bodyText": "And if add them with the prefix\nfor (Map.Entry<String, Object> entry : caseData.entrySet()) {\nparams.put(VariableScope.CASE_FILE_PREFIX + entry.getKey(), entry.getValue());\n}\nThen, getVariable at VariableScopeInstance class, don't transform it as\ncaseFiles.size() == 0", "author": "gmunozfe", "createdAt": "2020-01-17T12:21:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgzMTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkzMTA1NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1581#discussion_r367931055", "bodyText": "you're right, I refactored this to suit both needs, have a look again", "author": "mswiderski", "createdAt": "2020-01-17T13:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgzMTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkzODY3MA==", "url": "https://github.com/kiegroup/jbpm/pull/1581#discussion_r367938670", "bodyText": "thanks Maciej! It seems now it's working (though let Jenkins to finish)", "author": "gmunozfe", "createdAt": "2020-01-17T13:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgzMTIxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "96a6b0a275e5a655e3c88bc4521708ef0d660170", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java\nindex 3354051c2..409024998 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java\n\n@@ -93,6 +93,7 @@ public class ReopenCaseCommand extends CaseCommand<Void> {\n         Map<String, Object> params = new HashMap<>();\n         // set case id to allow it to use CaseContext when creating runtime engine\n         params.put(EnvironmentName.CASE_ID, caseId);\n+        params.putAll(caseFile.getData());\n         long processInstanceId = processService.startProcess(deploymentId, caseDefinitionId, correlationKey, params);\n         ksession.insert(caseFile);\n         final Map<String, Object> caseData = caseFile.getData();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3NDI5Mw==", "url": "https://github.com/kiegroup/jbpm/pull/1581#discussion_r367874293", "bodyText": "Shouldn't caseFile be inserted  before starting the process?", "author": "gmunozfe", "createdAt": "2020-01-17T10:46:14Z", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java", "diffHunk": "@@ -79,20 +79,22 @@ public Void execute(Context context) {\n         \n         caseEventSupport.fireBeforeCaseReopened(caseId, caseFile, deploymentId, caseDefinitionId, data);\n         \n-        logger.debug(\"Updating case file in working memory\");\n+        logger.debug(\"Removing case file from working memory to allow refiring of rules\");\n         FactHandle factHandle = ksession.getFactHandle(caseFile);\n+        ksession.delete(factHandle);\n         ((CaseFileInstanceImpl)caseFile).setCaseReopenDate(new Date());\n         if (data != null && !data.isEmpty()) {\n             caseFile.addAll(data);\n         }\n-        ksession.update(factHandle, caseFile);\n+        \n         \n         logger.debug(\"Starting process instance for case {} and case definition {}\", caseId, caseDefinitionId);\n         CorrelationKey correlationKey = correlationKeyFactory.newCorrelationKey(caseId);\n         Map<String, Object> params = new HashMap<>();\n         // set case id to allow it to use CaseContext when creating runtime engine\n         params.put(EnvironmentName.CASE_ID, caseId);\n         long processInstanceId = processService.startProcess(deploymentId, caseDefinitionId, correlationKey, params);\n+        ksession.insert(caseFile);", "originalCommit": "4b7010f0b15373799bb59970b8fcf3faec54902b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3NDc2MQ==", "url": "https://github.com/kiegroup/jbpm/pull/1581#discussion_r367874761", "bodyText": "no, that's the thing if it is then it will fire rules before any of the listeners is triggered", "author": "mswiderski", "createdAt": "2020-01-17T10:47:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3NDI5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "96a6b0a275e5a655e3c88bc4521708ef0d660170", "chunk": "diff --git a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java\nindex 3354051c2..409024998 100644\n--- a/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java\n+++ b/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java\n\n@@ -93,6 +93,7 @@ public class ReopenCaseCommand extends CaseCommand<Void> {\n         Map<String, Object> params = new HashMap<>();\n         // set case id to allow it to use CaseContext when creating runtime engine\n         params.put(EnvironmentName.CASE_ID, caseId);\n+        params.putAll(caseFile.getData());\n         long processInstanceId = processService.startProcess(deploymentId, caseDefinitionId, correlationKey, params);\n         ksession.insert(caseFile);\n         final Map<String, Object> caseData = caseFile.getData();\n"}}, {"oid": "96a6b0a275e5a655e3c88bc4521708ef0d660170", "url": "https://github.com/kiegroup/jbpm/commit/96a6b0a275e5a655e3c88bc4521708ef0d660170", "message": "RHPAM-2556 - Case reopen capability", "committedDate": "2020-01-17T10:53:55Z", "type": "forcePushed"}, {"oid": "087b5e97cf3a761ae143e3a2fa62f6657bd756b2", "url": "https://github.com/kiegroup/jbpm/commit/087b5e97cf3a761ae143e3a2fa62f6657bd756b2", "message": "RHPAM-2556 - Case reopen capability", "committedDate": "2020-01-17T13:17:00Z", "type": "commit"}, {"oid": "087b5e97cf3a761ae143e3a2fa62f6657bd756b2", "url": "https://github.com/kiegroup/jbpm/commit/087b5e97cf3a761ae143e3a2fa62f6657bd756b2", "message": "RHPAM-2556 - Case reopen capability", "committedDate": "2020-01-17T13:17:00Z", "type": "forcePushed"}, {"oid": "29f8a318128099c6a5f62c0addd4eab9d903f1a9", "url": "https://github.com/kiegroup/jbpm/commit/29f8a318128099c6a5f62c0addd4eab9d903f1a9", "message": "Added more tests for RHPAM-2556 (#12)\n\n* Test case reopening reevaluating after boundary timer fired\r\n\r\n* Add test for human task reopen with previous data", "committedDate": "2020-01-22T11:49:55Z", "type": "commit"}, {"oid": "43d9c5f5f9914fa0ac66da49afcbdb2c7d57e863", "url": "https://github.com/kiegroup/jbpm/commit/43d9c5f5f9914fa0ac66da49afcbdb2c7d57e863", "message": "RHPAM-2556: Test coverage: reopen after dynamic subprocess (#13)", "committedDate": "2020-01-24T11:52:59Z", "type": "commit"}, {"oid": "cf6477f7ef55094451285406e930ffd0b4fc329d", "url": "https://github.com/kiegroup/jbpm/commit/cf6477f7ef55094451285406e930ffd0b4fc329d", "message": "RHPAM-2566: fix test - clashing same completion condition (#14)", "committedDate": "2020-01-25T00:32:27Z", "type": "commit"}]}