{"pr_number": 1699, "pr_title": "[JBPM-9185] use BoundaryEvent name to compose timer name", "pr_createdAt": "2020-07-09T11:01:09Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1699", "timeline": [{"oid": "360163550a090b5be9bd0ce706a146a77fcaefef", "url": "https://github.com/kiegroup/jbpm/commit/360163550a090b5be9bd0ce706a146a77fcaefef", "message": "[JBPM-9185] use BoundaryEvent name to compose timer name\n\nAdd boundary event name to timer name", "committedDate": "2020-07-09T14:20:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1ODgzMQ==", "url": "https://github.com/kiegroup/jbpm/pull/1699#discussion_r452958831", "bodyText": "if human task has no name (compositeNode.getName() will return \"null\"):\nPerhaps, in this scenario, it's better to assign \"\" (as well as logging a WARN trace)", "author": "gmunozfe", "createdAt": "2020-07-10T16:50:48Z", "path": "jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java", "diffHunk": "@@ -461,7 +461,8 @@ private static void linkBoundaryTimerEvent(NodeContainer nodeContainer, Node nod\n         String timeCycle = (String) node.getMetaData().get(\"TimeCycle\");\n         String timeDate = (String) node.getMetaData().get(\"TimeDate\");\n         Timer timer = new Timer();\n-        timer.setName(node.getName());\n+        String boundaryEventName = node.getName();\n+        timer.setName(compositeNode.getName() +(boundaryEventName != null ? \"-\"+boundaryEventName : \"\"));", "originalCommit": "360163550a090b5be9bd0ce706a146a77fcaefef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3Njk1Nw==", "url": "https://github.com/kiegroup/jbpm/pull/1699#discussion_r453476957", "bodyText": "This scenario has been taken into account", "author": "fjtirado", "createdAt": "2020-07-13T08:23:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1ODgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f0aab3053476e985095f937dc7d24eac1b8f49b", "chunk": "diff --git a/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java b/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java\nindex b9ca7adc0..e62536534 100644\n--- a/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java\n+++ b/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java\n\n@@ -454,6 +454,16 @@ public class ProcessHandler extends BaseAbstractHandler implements Handler {\n         ((EventNode)node).setActions(EndNode.EVENT_NODE_EXIT, actions);\n     }\n     \n+    private static String concatName (String prefix, String suffix) {\n+        if (prefix == null) {\n+            return suffix;\n+        } else if (suffix == null) {\n+            return prefix;\n+        } else {\n+            return prefix.concat('-'+suffix);\n+        }\n+    }\n+    \n     private static void linkBoundaryTimerEvent(NodeContainer nodeContainer, Node node, String attachedTo, Node attachedNode) {\n         boolean cancelActivity = (Boolean) node.getMetaData().get(\"CancelActivity\");\n         StateBasedNode compositeNode = (StateBasedNode) attachedNode;\n"}}, {"oid": "4e28e324ec1f0b27e0fef7c812f0fd74fe93a0d4", "url": "https://github.com/kiegroup/jbpm/commit/4e28e324ec1f0b27e0fef7c812f0fd74fe93a0d4", "message": "[JBPM-9185] use BoundaryEvent name to compose timer name\n\nAdd boundary event name to timer name", "committedDate": "2020-07-13T08:19:08Z", "type": "forcePushed"}, {"oid": "3f0aab3053476e985095f937dc7d24eac1b8f49b", "url": "https://github.com/kiegroup/jbpm/commit/3f0aab3053476e985095f937dc7d24eac1b8f49b", "message": "[JBPM-9185] use BoundaryEvent name to compose timer name\n\nAdd boundary event name to timer name", "committedDate": "2020-07-13T08:31:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM2MjAyNQ==", "url": "https://github.com/kiegroup/jbpm/pull/1699#discussion_r454362025", "bodyText": "Here as well, assertEquals(\"usertask-timer\", timer.getTimerName());", "author": "MarianMacik", "createdAt": "2020-07-14T13:38:12Z", "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/impl/admin/ProcessInstanceAdminServiceImplTest.java", "diffHunk": "@@ -413,6 +414,21 @@ public void testListSLATimer() throws Exception {\n         assertNotNull(timer.getId());\n         assertNotNull(timer.getTimerName());\n     }\n+    \n+    @Test(timeout=10000)\n+    public void testTimerName() throws Exception {\n+        processInstanceId = processService.startProcess(deploymentUnit.getIdentifier(), \"org.jbpm.boundarytimer\");\n+        assertNotNull(processInstanceId);\n+        \n+        Collection<TimerInstance> timers = processAdminService.getTimerInstances(processInstanceId);\n+        assertNotNull(timers);\n+        assertEquals(1, timers.size());\n+        \n+        TimerInstance timer = timers.iterator().next();\n+        assertEquals(\"usertask-timer\",timer.getTimerName());", "originalCommit": "3f0aab3053476e985095f937dc7d24eac1b8f49b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3eafe63788d61c38da1a24fb20557616614ef70a", "chunk": "diff --git a/jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/impl/admin/ProcessInstanceAdminServiceImplTest.java b/jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/impl/admin/ProcessInstanceAdminServiceImplTest.java\nindex f68c6895b..ad69ca7f5 100644\n--- a/jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/impl/admin/ProcessInstanceAdminServiceImplTest.java\n+++ b/jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/impl/admin/ProcessInstanceAdminServiceImplTest.java\n\n@@ -415,17 +415,17 @@ public class ProcessInstanceAdminServiceImplTest extends AbstractKieServicesBase\n         assertNotNull(timer.getTimerName());\n     }\n     \n-    @Test(timeout=10000)\n+    @Test(timeout = 10000)\n     public void testTimerName() throws Exception {\n         processInstanceId = processService.startProcess(deploymentUnit.getIdentifier(), \"org.jbpm.boundarytimer\");\n         assertNotNull(processInstanceId);\n-        \n+\n         Collection<TimerInstance> timers = processAdminService.getTimerInstances(processInstanceId);\n         assertNotNull(timers);\n         assertEquals(1, timers.size());\n-        \n+\n         TimerInstance timer = timers.iterator().next();\n-        assertEquals(\"usertask-timer\",timer.getTimerName());\n+        assertEquals(\"usertask-timer\", timer.getTimerName());\n     }\n     \n     \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM2MjcwNg==", "url": "https://github.com/kiegroup/jbpm/pull/1699#discussion_r454362706", "bodyText": "Just a recommendation for the code style. It should be concatName(String prefix...) (no space) and return prefix.concat('-' + suffix); (space between operator and operands). If you use Eclipse or IntelliJ IDEA, you can find IDE configuration here: https://github.com/kiegroup/droolsjbpm-build-bootstrap/tree/master/ide-configuration", "author": "MarianMacik", "createdAt": "2020-07-14T13:39:15Z", "path": "jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java", "diffHunk": "@@ -454,14 +454,24 @@ private static void linkBoundaryErrorEvent(NodeContainer nodeContainer, Node nod\n         ((EventNode)node).setActions(EndNode.EVENT_NODE_EXIT, actions);\n     }\n     \n+    private static String concatName (String prefix, String suffix) {\n+        if (prefix == null) {\n+            return suffix;\n+        } else if (suffix == null) {\n+            return prefix;\n+        } else {\n+            return prefix.concat('-'+suffix);\n+        }\n+    }", "originalCommit": "3f0aab3053476e985095f937dc7d24eac1b8f49b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM3MjM5Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1699#discussion_r454372396", "bodyText": "Thanks for the advice. I have code style imported in eclipse but apply it manually because some old files do not follow the format and the result of automatic formatting is messy. In this particular case and the previous one, I forgot to format manually.", "author": "fjtirado", "createdAt": "2020-07-14T13:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM2MjcwNg=="}], "type": "inlineReview", "revised_code": {"commit": "3eafe63788d61c38da1a24fb20557616614ef70a", "chunk": "diff --git a/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java b/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java\nindex e62536534..44ab4c78b 100644\n--- a/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java\n+++ b/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java\n\n@@ -454,13 +454,13 @@ public class ProcessHandler extends BaseAbstractHandler implements Handler {\n         ((EventNode)node).setActions(EndNode.EVENT_NODE_EXIT, actions);\n     }\n     \n-    private static String concatName (String prefix, String suffix) {\n+    private static String concatName(String prefix, String suffix) {\n         if (prefix == null) {\n             return suffix;\n         } else if (suffix == null) {\n             return prefix;\n         } else {\n-            return prefix.concat('-'+suffix);\n+            return prefix.concat('-' + suffix);\n         }\n     }\n     \n"}}, {"oid": "3eafe63788d61c38da1a24fb20557616614ef70a", "url": "https://github.com/kiegroup/jbpm/commit/3eafe63788d61c38da1a24fb20557616614ef70a", "message": "[JBPM-9185] use BoundaryEvent name to compose timer name\n\nAdd boundary event name to timer name", "committedDate": "2020-07-14T13:51:02Z", "type": "commit"}, {"oid": "3eafe63788d61c38da1a24fb20557616614ef70a", "url": "https://github.com/kiegroup/jbpm/commit/3eafe63788d61c38da1a24fb20557616614ef70a", "message": "[JBPM-9185] use BoundaryEvent name to compose timer name\n\nAdd boundary event name to timer name", "committedDate": "2020-07-14T13:51:02Z", "type": "forcePushed"}]}