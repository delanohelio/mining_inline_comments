{"pr_number": 1868, "pr_title": "GH-1484 rdfstar api proposal", "pr_createdAt": "2020-01-22T17:05:07Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/1868", "timeline": [{"oid": "1184874dea9d91efdf4b299029798aaddd00e2d3", "url": "https://github.com/eclipse/rdf4j/commit/1184874dea9d91efdf4b299029798aaddd00e2d3", "message": "* #1484 Proposal for changes in Java API to accommodate RDF* and SPARQL*\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-01-22T17:08:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxNzUxOQ==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r369817519", "bodyText": "Bit of a nitpick but we discourage wildcard imports - I suspect your IDE's code cleanup is being over-eager. Could you tweak it to not use wildcards (or at least until you hit, say, 99 entries :))?", "author": "jeenbroekstra", "createdAt": "2020-01-22T21:38:15Z", "path": "compliance/elasticsearch/src/test/java/org/eclipse/rdf4j/sail/elasticsearch/ElasticsearchIndexTest.java", "diffHunk": "@@ -17,11 +17,7 @@\n import java.util.Properties;\n import java.util.Set;\n \n-import org.eclipse.rdf4j.model.IRI;\n-import org.eclipse.rdf4j.model.Literal;\n-import org.eclipse.rdf4j.model.Resource;\n-import org.eclipse.rdf4j.model.Statement;\n-import org.eclipse.rdf4j.model.ValueFactory;\n+import org.eclipse.rdf4j.model.*;", "originalCommit": "1184874dea9d91efdf4b299029798aaddd00e2d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA4MjgyNQ==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r370082825", "bodyText": "Ok, I'll see what I can do about that :)", "author": "avataar", "createdAt": "2020-01-23T12:12:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxNzUxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "6a207ec258090db6aded2d9c0226b88bc80fce6c", "chunk": "diff --git a/compliance/elasticsearch/src/test/java/org/eclipse/rdf4j/sail/elasticsearch/ElasticsearchIndexTest.java b/compliance/elasticsearch/src/test/java/org/eclipse/rdf4j/sail/elasticsearch/ElasticsearchIndexTest.java\nindex c794e40f2b..04e39f0bcf 100644\n--- a/compliance/elasticsearch/src/test/java/org/eclipse/rdf4j/sail/elasticsearch/ElasticsearchIndexTest.java\n+++ b/compliance/elasticsearch/src/test/java/org/eclipse/rdf4j/sail/elasticsearch/ElasticsearchIndexTest.java\n\n@@ -17,7 +17,11 @@ import java.util.Map;\n import java.util.Properties;\n import java.util.Set;\n \n-import org.eclipse.rdf4j.model.*;\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.Literal;\n+import org.eclipse.rdf4j.model.Resource;\n+import org.eclipse.rdf4j.model.Statement;\n+import org.eclipse.rdf4j.model.ValueFactory;\n import org.eclipse.rdf4j.model.impl.SimpleValueFactory;\n import org.eclipse.rdf4j.repository.sail.SailRepository;\n import org.eclipse.rdf4j.repository.sail.SailRepositoryConnection;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODQ3OQ==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r369818479", "bodyText": "This header doesn't look quite right, we use this format:\n/*******************************************************************************\n * Copyright (c) ${year} Eclipse RDF4J contributors.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Distribution License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/org/documents/edl-v10.php.\n *******************************************************************************/", "author": "jeenbroekstra", "createdAt": "2020-01-22T21:40:22Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/SubjectValue.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ */", "originalCommit": "1184874dea9d91efdf4b299029798aaddd00e2d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA4MzgyNg==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r370083826", "bodyText": "Again I guess my IDE was trying to be smarter.", "author": "avataar", "createdAt": "2020-01-23T12:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "6a207ec258090db6aded2d9c0226b88bc80fce6c", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/SubjectValue.java b/core/model/src/main/java/org/eclipse/rdf4j/model/SubjectValue.java\ndeleted file mode 100644\nindex a58684a37b..0000000000\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/SubjectValue.java\n+++ /dev/null\n\n@@ -1,32 +0,0 @@\n-/*\n- * Copyright (c) 2020 Eclipse RDF4J contributors.\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Distribution License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/org/documents/edl-v10.php.\n- */\n-package org.eclipse.rdf4j.model;\n-\n-/**\n- * A @{@link Value} that may be in the subject position in RDF*. RDF* extends RDF by allowing not only a\n- * {@link Resource} but also a @{@link Triple} in the subject position.\n- *\n- * @author Pavel Mihaylov\n- */\n-public interface SubjectValue extends Value {\n-\n-\t/**\n-\t * Casts a {@link SubjectValue} to a {@link Resource} in a null-safe way.\n-\t *\n-\t * @param subjectValue a {@link SubjectValue} to cast\n-\t * @return The provided value cast to @{@link Resource}.\n-\t * @throws IllegalStateException If the provided value is not\n-\t */\n-\tstatic Resource asResource(SubjectValue subjectValue) {\n-\t\tif (subjectValue == null || subjectValue instanceof Resource) {\n-\t\t\treturn (Resource) subjectValue;\n-\t\t} else {\n-\t\t\tthrow new IllegalStateException(\"Attempted to handle RDF* within an RDF context.\");\n-\t\t}\n-\t}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyOTEyNw==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r369829127", "bodyText": "This worries me from an end-user perspective. An awful lot of user code will rely on the result of getSubject() being a Resource. So this will require a lot of refactoring for anyone hoping to bump RDF4J to this version.\nWould an alternative be that we get rid of SubjectValue altogether, and just make Triple extend Resource?", "author": "jeenbroekstra", "createdAt": "2020-01-22T22:03:57Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java", "diffHunk": "@@ -511,7 +506,7 @@ private ModelIterator matchPattern(Resource subj, IRI pred, Value obj, Resource.\n \t}\n \n \tprivate Iterator<ModelStatement> find(Statement st) {\n-\t\tResource subj = st.getSubject();\n+\t\tSubjectValue subj = st.getSubject();", "originalCommit": "1184874dea9d91efdf4b299029798aaddd00e2d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA4NDk4MA==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r370084980", "bodyText": "Triple extends Resource sounds very tempting at first but it will break the model by allowing Triple in the context position, which isn't something RDF* allows. I do realise the proposed changes will break code for some users but the breaking changes are minimal.", "author": "avataar", "createdAt": "2020-01-23T12:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyOTEyNw=="}], "type": "inlineReview", "revised_code": {"commit": "6a207ec258090db6aded2d9c0226b88bc80fce6c", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java\nindex dc5d64e0f0..2914108c02 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/LinkedHashModel.java\n\n@@ -506,7 +511,7 @@ public class LinkedHashModel extends AbstractModel {\n \t}\n \n \tprivate Iterator<ModelStatement> find(Statement st) {\n-\t\tSubjectValue subj = st.getSubject();\n+\t\tResource subj = st.getSubject();\n \t\tIRI pred = st.getPredicate();\n \t\tValue obj = st.getObject();\n \t\tResource ctx = st.getContext();\n"}}, {"oid": "27aa0e5e3301557e310e4c0fe2b088c40269e876", "url": "https://github.com/eclipse/rdf4j/commit/27aa0e5e3301557e310e4c0fe2b088c40269e876", "message": "* #1484 Proposal for changes in Java API to accommodate RDF* and SPARQL*\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-01-23T10:57:10Z", "type": "forcePushed"}, {"oid": "6a207ec258090db6aded2d9c0226b88bc80fce6c", "url": "https://github.com/eclipse/rdf4j/commit/6a207ec258090db6aded2d9c0226b88bc80fce6c", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG*", "committedDate": "2020-01-30T12:51:53Z", "type": "forcePushed"}, {"oid": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46", "url": "https://github.com/eclipse/rdf4j/commit/7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG*\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-01-30T13:46:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MDkwOQ==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373250909", "bodyText": "Minor typo: the @ in front of {@link Statement}.", "author": "jeenbroekstra", "createdAt": "2020-01-30T23:36:15Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/Triple.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors, Aduna, and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model;\n+\n+/**\n+ * An RDF* triple. Triples have a subject, predicate and object. Unlike @{@link Statement}, a triple never has an", "originalCommit": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77d71ace7fd04db6d6cb05cad2a8a852d1ff95ca", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/Triple.java b/core/model/src/main/java/org/eclipse/rdf4j/model/Triple.java\nindex 4c04919306..0d66fe9dfb 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/Triple.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/Triple.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2020 Eclipse RDF4J contributors, Aduna, and others.\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Distribution License v1.0\n  * which accompanies this distribution, and is available at\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MTM1OA==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373251358", "bodyText": "Let's explicitly say that this is an RDF* triple here as well, just to make it as clear as possible that it's different from Statement.", "author": "jeenbroekstra", "createdAt": "2020-01-30T23:37:24Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java", "diffHunk": "@@ -258,4 +258,14 @@ public default Statement createStatement(Resource subject, URI predicate, Value\n \tpublic default Statement createStatement(Resource subject, URI predicate, Value object, Resource context) {\n \t\treturn createStatement(subject, (IRI) predicate, object, context);\n \t}\n+\n+\t/**\n+\t * Creates a new triple with the supplied subject, predicate and object.", "originalCommit": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77d71ace7fd04db6d6cb05cad2a8a852d1ff95ca", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java b/core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java\nindex fbc4f0992d..e15df1222e 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java\n\n@@ -260,7 +261,7 @@ public interface ValueFactory {\n \t}\n \n \t/**\n-\t * Creates a new triple with the supplied subject, predicate and object.\n+\t * Creates a new RDF* triple with the supplied subject, predicate and object.\n \t *\n \t * @param subject   The statement's subject.\n \t * @param predicate The statement's predicate.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MTkzNw==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373251937", "bodyText": "Let's make this a default method with the same impl as you currently have in AbstractValueFactory (I'd also leave that one in place, even though it doesn't do anything different) - that way this is backward compatible even for people who implement ValueFactory without using the abstract class.", "author": "jeenbroekstra", "createdAt": "2020-01-30T23:39:33Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java", "diffHunk": "@@ -258,4 +258,14 @@ public default Statement createStatement(Resource subject, URI predicate, Value\n \tpublic default Statement createStatement(Resource subject, URI predicate, Value object, Resource context) {\n \t\treturn createStatement(subject, (IRI) predicate, object, context);\n \t}\n+\n+\t/**\n+\t * Creates a new triple with the supplied subject, predicate and object.\n+\t *\n+\t * @param subject   The statement's subject.\n+\t * @param predicate The statement's predicate.\n+\t * @param object    The statement's object.\n+\t * @return The created triple.\n+\t */\n+\tTriple createTriple(Resource subject, IRI predicate, Value object);", "originalCommit": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwNzMyNw==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373607327", "bodyText": "Let's make this a default method with the same impl as you currently have in AbstractValueFactory (I'd also leave that one in place, even though it doesn't do anything different) - that way this is backward compatible even for people who implement ValueFactory without using the abstract class.\n\nThat change would make the only SimpleXXX class that has a public constructor because it's in a different package. If you are ok with that I'll do it.", "author": "avataar", "createdAt": "2020-01-31T17:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MTkzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MDk4Ng==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373690986", "bodyText": "Drat, forgot about that. Never mind then, leave as is.", "author": "jeenbroekstra", "createdAt": "2020-01-31T21:21:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MTkzNw=="}], "type": "inlineReview", "revised_code": {"commit": "77d71ace7fd04db6d6cb05cad2a8a852d1ff95ca", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java b/core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java\nindex fbc4f0992d..e15df1222e 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/ValueFactory.java\n\n@@ -260,7 +261,7 @@ public interface ValueFactory {\n \t}\n \n \t/**\n-\t * Creates a new triple with the supplied subject, predicate and object.\n+\t * Creates a new RDF* triple with the supplied subject, predicate and object.\n \t *\n \t * @param subject   The statement's subject.\n \t * @param predicate The statement's predicate.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MjIwMg==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373252202", "bodyText": "Editorial nitpick: we encourage always using curly braces for if statements, even if they're oneliners.", "author": "jeenbroekstra", "createdAt": "2020-01-30T23:40:38Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleTriple.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors, Aduna, and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.model.impl;\n+\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.Resource;\n+import org.eclipse.rdf4j.model.Triple;\n+import org.eclipse.rdf4j.model.Value;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A simple default implementation of the {@link Triple} interface.\n+ *\n+ * @author Pavel Mihaylov\n+ * @see SimpleValueFactory\n+ */\n+public class SimpleTriple implements Triple {\n+\n+\t/**\n+\t * The triple's subject.\n+\t */\n+\tprivate Resource subject;\n+\n+\t/**\n+\t * The triple's predicate.\n+\t */\n+\tprivate IRI predicate;\n+\n+\t/**\n+\t * The triple's object.\n+\t */\n+\tprivate Value object;\n+\n+\t/**\n+\t * Creates a new Triple with the supplied subject, predicate and object.\n+\t * <p>\n+\t * Note that creating SimpleStatement objects directly via this constructor is not the recommended approach.\n+\t * Instead, use an instance of {@link org.eclipse.rdf4j.model.ValueFactory} to create new Triple objects.\n+\t *\n+\t * @param subject   The triple's subject, must not be <tt>null</tt>.\n+\t * @param predicate The triple's predicate, must not be <tt>null</tt>.\n+\t * @param object    The triple's object, must not be <tt>null</tt>.\n+\t * @see {@link SimpleValueFactory#createTriple(Resource, IRI, Value)\n+\t */\n+\tprotected SimpleTriple(Resource subject, IRI predicate, Value object) {\n+\t\tthis.subject = Objects.requireNonNull(subject, \"subject must not be null\");\n+\t\tthis.predicate = Objects.requireNonNull(predicate, \"predicate must not be null\");\n+\t\tthis.object = Objects.requireNonNull(object, \"object must not be null\");\n+\t}\n+\n+\t@Override\n+\tpublic Resource getSubject() {\n+\t\treturn subject;\n+\t}\n+\n+\t@Override\n+\tpublic IRI getPredicate() {\n+\t\treturn predicate;\n+\t}\n+\n+\t@Override\n+\tpublic Value getObject() {\n+\t\treturn object;\n+\t}\n+\n+\t@Override\n+\tpublic String stringValue() {\n+\t\tStringBuilder sb = new StringBuilder(256);\n+\n+\t\tsb.append(\"<<\");\n+\t\tsb.append(getSubject());\n+\t\tsb.append(\" \");\n+\t\tsb.append(getPredicate());\n+\t\tsb.append(\" \");\n+\t\tsb.append(getObject());\n+\t\tsb.append(\">>\");\n+\n+\t\treturn sb.toString();\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn stringValue();\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object o) {\n+\t\tif (this == o)\n+\t\t\treturn true;", "originalCommit": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77d71ace7fd04db6d6cb05cad2a8a852d1ff95ca", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleTriple.java b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleTriple.java\nindex f10e9a9e3f..54b7df5684 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleTriple.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleTriple.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2020 Eclipse RDF4J contributors, Aduna, and others.\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Distribution License v1.0\n  * which accompanies this distribution, and is available at\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MzY2Mw==", "url": "https://github.com/eclipse/rdf4j/pull/1868#discussion_r373253663", "bodyText": "This is not the correct copyright header, I'm afraid.  This variant that mentions \"Aduna\" is one that is only used for legacy code that came from the Sesame project (so you may have inadvertently copied it from an old class). All new code should  just read Copyright (c) 2020 Eclipse RDF4J contributors. on the first line.\nYou've got this in a couple of new classes, unfortunately. See https://github.com/eclipse/rdf4j/blob/master/.github/CONTRIBUTING.md#code-formatting for details.", "author": "jeenbroekstra", "createdAt": "2020-01-30T23:45:49Z", "path": "core/rio/trigstar/src/main/java/org/eclipse/rdf4j/rio/trigstar/TriGStarParser.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors, Aduna, and others.", "originalCommit": "7ba782d1c23f6ba17f172b6c4d2fe86be4afaf46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77d71ace7fd04db6d6cb05cad2a8a852d1ff95ca", "chunk": "diff --git a/core/rio/trigstar/src/main/java/org/eclipse/rdf4j/rio/trigstar/TriGStarParser.java b/core/rio/trigstar/src/main/java/org/eclipse/rdf4j/rio/trigstar/TriGStarParser.java\nindex b33a848ab4..63e4440a04 100644\n--- a/core/rio/trigstar/src/main/java/org/eclipse/rdf4j/rio/trigstar/TriGStarParser.java\n+++ b/core/rio/trigstar/src/main/java/org/eclipse/rdf4j/rio/trigstar/TriGStarParser.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2020 Eclipse RDF4J contributors, Aduna, and others.\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Distribution License v1.0\n  * which accompanies this distribution, and is available at\n"}}, {"oid": "b7822a32f0d5215342bd9450fa15a76b84739634", "url": "https://github.com/eclipse/rdf4j/commit/b7822a32f0d5215342bd9450fa15a76b84739634", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG*\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:21:01Z", "type": "commit"}, {"oid": "77d71ace7fd04db6d6cb05cad2a8a852d1ff95ca", "url": "https://github.com/eclipse/rdf4j/commit/77d71ace7fd04db6d6cb05cad2a8a852d1ff95ca", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG* (addressed editorial comments)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:21:01Z", "type": "commit"}, {"oid": "c7c2967caa3c962bf35c2300121c6ecf67670988", "url": "https://github.com/eclipse/rdf4j/commit/c7c2967caa3c962bf35c2300121c6ecf67670988", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG* (handling of Triple in some classes that rely on Value not having more subinterfaces)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:21:01Z", "type": "commit"}, {"oid": "9696ec47afea082d09c49f7346daf63e186aaaaa", "url": "https://github.com/eclipse/rdf4j/commit/9696ec47afea082d09c49f7346daf63e186aaaaa", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG* (fixed parsing of language tags before closing >> and no space)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:21:01Z", "type": "commit"}, {"oid": "9696ec47afea082d09c49f7346daf63e186aaaaa", "url": "https://github.com/eclipse/rdf4j/commit/9696ec47afea082d09c49f7346daf63e186aaaaa", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG* (fixed parsing of language tags before closing >> and no space)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:21:01Z", "type": "forcePushed"}, {"oid": "21d9439c31794f582630f0a1cec497ef19b037ac", "url": "https://github.com/eclipse/rdf4j/commit/21d9439c31794f582630f0a1cec497ef19b037ac", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG* (updated version of trigstar and turtlestar after rebase to 3.2.0-SNAPSHOT)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:23:22Z", "type": "commit"}]}