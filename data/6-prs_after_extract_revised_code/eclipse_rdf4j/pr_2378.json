{"pr_number": 2378, "pr_title": "GH-2377: fix LuceneSail#reindex() to create document for last resource", "pr_createdAt": "2020-07-22T12:25:42Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2378", "timeline": [{"oid": "0e68ab8ad836e37050f6b2ebc3a2a72500ec70a0", "url": "https://github.com/eclipse/rdf4j/commit/0e68ab8ad836e37050f6b2ebc3a2a72500ec70a0", "message": "GH-2377: fix LuceneSail#reindex() to create document for last resource\n\nWith the current algorithm the document for the last resource was never\npersisted. This is now change to explicitly persist the last document\nafter loop completion.\n\nBehavior is covered with a unit test\n\nSigned-off-by: Andreas Schwarte <aschwarte10@gmail.com>", "committedDate": "2020-07-22T12:23:53Z", "type": "commit"}, {"oid": "76a6a30aff091de6fe548e34220c19348636cf37", "url": "https://github.com/eclipse/rdf4j/commit/76a6a30aff091de6fe548e34220c19348636cf37", "message": "GH-2377: move unit test to LuceneSailTest\n\nRe-indexing apparently does not work correctly for Solr Index, thus\nmoving it to LuceneSailTest\n\nSigned-off-by: Andreas Schwarte <aschwarte10@gmail.com>", "committedDate": "2020-07-22T19:39:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA5NDQ5Ng==", "url": "https://github.com/eclipse/rdf4j/pull/2378#discussion_r459094496", "bodyText": "Just a a general note, the whole code above should actually be using a peeking iterator. It's iterating over all the statements in the database and grouping by subject. It's doing it in a streaming fashion, which makes me assume that the iterator it has against the database is sorted by subject (which would take a massive amount of memory!). And it needs to check the next statement to see if it's got a different subject so it can add all the statements it's gathered for that subject to the lucene index as a document. Is that correct?\nI'm not proposing that we need to actually rewrite the code.\nCould you check that !statements.empty() as well, so we don't add the last document twice?", "author": "hmottestad", "createdAt": "2020-07-22T21:29:03Z", "path": "core/sail/lucene-api/src/main/java/org/eclipse/rdf4j/sail/lucene/LuceneSail.java", "diffHunk": "@@ -551,6 +551,15 @@ public void shutDown() {\n \t\t\t\t\t\t}\n \t\t\t\t\t\tstatements.add(vf.createStatement(r, p, o, c));\n \t\t\t\t\t}\n+\n+\t\t\t\t\t// make sure to index statements for last resource\n+\t\t\t\t\tif (current != null) {\n+\t\t\t\t\t\tif (logger.isDebugEnabled()) {\n+\t\t\t\t\t\t\tlogger.debug(\"reindexing resource \" + current);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\t// commit\n+\t\t\t\t\t\tluceneIndex.addDocuments(current, statements);", "originalCommit": "76a6a30aff091de6fe548e34220c19348636cf37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE3MjE0Mg==", "url": "https://github.com/eclipse/rdf4j/pull/2378#discussion_r459172142", "bodyText": "Just a a general note, the whole code above should actually be using a peeking iterator. It's iterating over all the statements in the database and grouping by subject. It's doing it in a streaming fashion, which makes me assume that the iterator it has against the database is sorted by subject (which would take a massive amount of memory!). And it needs to check the next statement to see if it's got a different subject so it can add all the statements it's gathered for that subject to the lucene index as a document. Is that correct?\n\nYeah I think that sums it up - and yes the result is sorted by subject (this is specified in the actual reindex query). This code is pretty old, and I agree that there are likely far more efficient ways to trigger a reindexing.\n\nI'm not proposing that we need to actually rewrite the code.\n\nWorth logging an issue for? The problem is that none of us have LuceneSail maintenance/improvements high on our priority list.\n\nCould you check that !statements.empty() as well, so we don't add the last document twice?\n\nGood point. I'll add a check for that.", "author": "jeenbroekstra", "createdAt": "2020-07-23T01:33:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA5NDQ5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a0808d0127940b8ac165410d1e5eb31dc22d3988", "chunk": "diff --git a/core/sail/lucene-api/src/main/java/org/eclipse/rdf4j/sail/lucene/LuceneSail.java b/core/sail/lucene-api/src/main/java/org/eclipse/rdf4j/sail/lucene/LuceneSail.java\nindex 506e436ac0..e8099a536c 100644\n--- a/core/sail/lucene-api/src/main/java/org/eclipse/rdf4j/sail/lucene/LuceneSail.java\n+++ b/core/sail/lucene-api/src/main/java/org/eclipse/rdf4j/sail/lucene/LuceneSail.java\n\n@@ -553,7 +553,7 @@ public class LuceneSail extends NotifyingSailWrapper {\n \t\t\t\t\t}\n \n \t\t\t\t\t// make sure to index statements for last resource\n-\t\t\t\t\tif (current != null) {\n+\t\t\t\t\tif (current != null && !statements.isEmpty()) {\n \t\t\t\t\t\tif (logger.isDebugEnabled()) {\n \t\t\t\t\t\t\tlogger.debug(\"reindexing resource \" + current);\n \t\t\t\t\t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA5NTYwMA==", "url": "https://github.com/eclipse/rdf4j/pull/2378#discussion_r459095600", "bodyText": "ps, explicit initialization is now optional", "author": "hmottestad", "createdAt": "2020-07-22T21:31:20Z", "path": "testsuites/lucene/src/main/java/org/eclipse/rdf4j/sail/lucene/AbstractLuceneSailTest.java", "diffHunk": "@@ -121,7 +121,7 @@ public void setUp() throws Exception {\n \n \t\t// create a Repository wrapping the LuceneSail\n \t\trepository = new SailRepository(sail);\n-\t\trepository.initialize();\n+\t\trepository.init();", "originalCommit": "76a6a30aff091de6fe548e34220c19348636cf37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0808d0127940b8ac165410d1e5eb31dc22d3988", "chunk": "diff --git a/testsuites/lucene/src/main/java/org/eclipse/rdf4j/sail/lucene/AbstractLuceneSailTest.java b/testsuites/lucene/src/main/java/org/eclipse/rdf4j/sail/lucene/AbstractLuceneSailTest.java\nindex ef9738b9b2..aca5c64eee 100644\n--- a/testsuites/lucene/src/main/java/org/eclipse/rdf4j/sail/lucene/AbstractLuceneSailTest.java\n+++ b/testsuites/lucene/src/main/java/org/eclipse/rdf4j/sail/lucene/AbstractLuceneSailTest.java\n\n@@ -121,7 +121,6 @@ public abstract class AbstractLuceneSailTest {\n \n \t\t// create a Repository wrapping the LuceneSail\n \t\trepository = new SailRepository(sail);\n-\t\trepository.init();\n \n \t\t// add some statements to it\n \t\ttry (RepositoryConnection connection = repository.getConnection()) {\n"}}, {"oid": "a0808d0127940b8ac165410d1e5eb31dc22d3988", "url": "https://github.com/eclipse/rdf4j/commit/a0808d0127940b8ac165410d1e5eb31dc22d3988", "message": "GH-2377 avoid duplicate add by checking statements is empty", "committedDate": "2020-07-23T01:36:43Z", "type": "commit"}]}