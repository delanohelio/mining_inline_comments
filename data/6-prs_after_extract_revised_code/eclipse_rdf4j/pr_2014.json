{"pr_number": 2014, "pr_title": "Fixes GH-2013 by traversing parents until sourceString is found", "pr_createdAt": "2020-03-18T11:53:09Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2014", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4MTI5NQ==", "url": "https://github.com/eclipse/rdf4j/pull/2014#discussion_r394781295", "bodyText": "Editorial: could you add open and close brackets here and in other places where you have if/else constructions?", "author": "jeenbroekstra", "createdAt": "2020-03-19T04:12:47Z", "path": "core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java", "diffHunk": "@@ -84,6 +81,24 @@ public String getPatternString() {\n \t\treturn patternString;\n \t}\n \n+\tprivate String getSourceString() {\n+\t\tNode theParent = getParentContainer(this);\n+\t\tString sourceString = null;\n+\t\tif (theParent instanceof ASTOperationContainer)\n+\t\t\tsourceString = ((ASTOperationContainer) theParent).getSourceString();", "originalCommit": "01204c00f18bdcd043293468726e83e641581edb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg0NzU5NA==", "url": "https://github.com/eclipse/rdf4j/pull/2014#discussion_r394847594", "bodyText": "done", "author": "damyan-ognyanov", "createdAt": "2020-03-19T08:04:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4MTI5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "4023a7a658cc39e8f7f7c74f89c77efb4d639883", "chunk": "diff --git a/core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java b/core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java\nindex 21d76f249b..1f7e38567d 100644\n--- a/core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java\n+++ b/core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java\n\n@@ -84,17 +84,20 @@ public class ASTServiceGraphPattern extends SimpleNode {\n \tprivate String getSourceString() {\n \t\tNode theParent = getParentContainer(this);\n \t\tString sourceString = null;\n-\t\tif (theParent instanceof ASTOperationContainer)\n+\t\tif (theParent instanceof ASTOperationContainer) {\n \t\t\tsourceString = ((ASTOperationContainer) theParent).getSourceString();\n-\t\telse if (theParent instanceof ASTUpdateSequence)\n+\t\t} else if (theParent instanceof ASTUpdateSequence) {\n \t\t\tsourceString = ((ASTUpdateSequence) theParent).getSourceString();\n+\t\t}\n \n \t\twhile (sourceString == null && theParent != null) {\n \t\t\ttheParent = theParent.jjtGetParent();\n-\t\t\tif (theParent == null)\n+\t\t\tif (theParent == null) {\n \t\t\t\tbreak;\n-\t\t\tif (theParent instanceof ASTUpdateSequence)\n+\t\t\t}\n+\t\t\tif (theParent instanceof ASTUpdateSequence) {\n \t\t\t\tsourceString = ((ASTUpdateSequence) theParent).getSourceString();\n+\t\t\t}\n \t\t}\n \t\treturn sourceString;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxMDA2OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2014#discussion_r394910069", "bodyText": "I was wondering if maybe there could be a null check here, so that any exception is thrown when looking for the source string instead of when using the resulting string. Maybe return Objects.requireNonNull(sourceString);\nUnless of course there is a case where returning null from getSourceString() is acceptable.", "author": "hmottestad", "createdAt": "2020-03-19T09:59:37Z", "path": "core/queryparser/sparql/src/main/java/org/eclipse/rdf4j/query/parser/sparql/ast/ASTServiceGraphPattern.java", "diffHunk": "@@ -84,6 +81,27 @@ public String getPatternString() {\n \t\treturn patternString;\n \t}\n \n+\tprivate String getSourceString() {\n+\t\tNode theParent = getParentContainer(this);\n+\t\tString sourceString = null;\n+\t\tif (theParent instanceof ASTOperationContainer) {\n+\t\t\tsourceString = ((ASTOperationContainer) theParent).getSourceString();\n+\t\t} else if (theParent instanceof ASTUpdateSequence) {\n+\t\t\tsourceString = ((ASTUpdateSequence) theParent).getSourceString();\n+\t\t}\n+\n+\t\twhile (sourceString == null && theParent != null) {\n+\t\t\ttheParent = theParent.jjtGetParent();\n+\t\t\tif (theParent == null) {\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\tif (theParent instanceof ASTUpdateSequence) {\n+\t\t\t\tsourceString = ((ASTUpdateSequence) theParent).getSourceString();\n+\t\t\t}\n+\t\t}\n+\t\treturn sourceString;", "originalCommit": "bb8c47520c3f37d5cc195961579018769f15fc06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk1MDQ1OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2014#discussion_r394950459", "bodyText": "Thought of that for a while, but decided that if we did not found the sourceString at this point, something else was really messed up, so throwing a custom exception early, would not help much here since we do not have a resonable alternative to continue processing update further - a NPE will still be thrown in the code that uses it ...", "author": "damyan-ognyanov", "createdAt": "2020-03-19T11:12:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxMDA2OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "4023a7a658cc39e8f7f7c74f89c77efb4d639883", "url": "https://github.com/eclipse/rdf4j/commit/4023a7a658cc39e8f7f7c74f89c77efb4d639883", "message": "Fixes GH-2013 by traversing parents until sourceString is found. Add test case\n\nSigned-off-by: damyan.ognyanov <damyan.ognyanov@ontotext.com>", "committedDate": "2020-03-20T05:38:09Z", "type": "commit"}, {"oid": "4023a7a658cc39e8f7f7c74f89c77efb4d639883", "url": "https://github.com/eclipse/rdf4j/commit/4023a7a658cc39e8f7f7c74f89c77efb4d639883", "message": "Fixes GH-2013 by traversing parents until sourceString is found. Add test case\n\nSigned-off-by: damyan.ognyanov <damyan.ognyanov@ontotext.com>", "committedDate": "2020-03-20T05:38:09Z", "type": "forcePushed"}]}