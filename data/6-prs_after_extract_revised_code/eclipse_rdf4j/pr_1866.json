{"pr_number": 1866, "pr_title": "GH-1535 NTriples and Turtle IRI escaping", "pr_createdAt": "2020-01-21T13:39:44Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/1866", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA==", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370399280", "bodyText": "I'm worried that using %-encoding is not the right way to go here. They effectively change the IRI. For example, http://a.example/%66oo-bar is not considered the same IRI as http://a.example/foo-bar (unless you specifically use IRI percent encoding normalization).", "author": "jeenbroekstra", "createdAt": "2020-01-23T22:57:32Z", "path": "core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java", "diffHunk": "@@ -72,8 +82,61 @@ public static String gsub(String olds, String news, String text) {\n \t\treturn buf.toString();\n \t}\n \n+\tprivate static String hex(int c) {\n+\t\treturn Integer.toHexString(c).toUpperCase(Locale.US);\n+\t}\n+\n+\t/**\n+\t * Escapes string to a (mostly) conforming IRI value and append it to the appendable. Most invalid characters are\n+\t * percent-encoded, non-ASCII values can optionally be numerically encoded.", "originalCommit": "4718a867f98c705683bfc12da6add9d7d7195c27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMTQ5OQ==", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370401499", "bodyText": "See also https://www.w3.org/TR/turtle/#numeric", "author": "jeenbroekstra", "createdAt": "2020-01-23T23:04:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMjc2MQ==", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370402761", "bodyText": "Given that both Turtle and N-Triples specs now specify UTF-8 rather than ASCII, and IRIs supercede URIs (see RFC 3987 vs 3986), I think we should, when serializing, consistently use numeric escapes. %-encodings should just not be touched.", "author": "jeenbroekstra", "createdAt": "2020-01-23T23:08:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwOTgwNw==", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370509807", "bodyText": "I was probably not clear enough in the javadoc :-)\nThe code does exactly what you suggested: using numeric escapes (IF escapeEncoding is set, which can be the case for NTriples since it still allows for ASCII served over legacy text/plain. Turtle is all UTF8 so it doesn't use this setting)\nFor invalid characters in IRIs (thus an invalid IRI to begin with...), like a space or a weird control character, % encoding is used (otherwise there is no way to make it parse, numeric encoding will still fail)", "author": "barthanssens", "createdAt": "2020-01-24T08:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMjI1Ng==", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r370912256", "bodyText": "Ah I see! Right that makes more sense, thanks for clarifying :)", "author": "jeenbroekstra", "createdAt": "2020-01-25T04:02:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5OTI4MA=="}], "type": "inlineReview", "revised_code": {"commit": "e1a5f0deb2abf1908dcd3a89a2014f40b7870342", "chunk": "diff --git a/core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java b/core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java\nindex 8252d1ff5a..5dbad751f9 100644\n--- a/core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java\n+++ b/core/util/src/main/java/org/eclipse/rdf4j/common/text/StringUtil.java\n\n@@ -87,11 +87,13 @@ public class StringUtil {\n \t}\n \n \t/**\n-\t * Escapes string to a (mostly) conforming IRI value and append it to the appendable. Most invalid characters are\n-\t * percent-encoded, non-ASCII values can optionally be numerically encoded.\n+\t * Escapes a string to a (mostly) conforming IRI value and append it to the appendable.\n+\t * \n+\t * Non-ASCII (valid) values can optionally be numerically encoded by setting escapeUnicode to true. Most characters\n+\t * that are invalid in an IRI - like a white space or control character - are percent-encoded.\n \t * \n \t * This is slightly faster than {@link org.eclipse.rdf4j.common.net.ParsedIRI#create(String)} for valid IRI (without\n-\t * percents) and much faster for IRI with invalid (percent-encoded) characters.\n+\t * percents) and much faster for IRI with invalid (percent-encoded) characters, though it is less accurate.\n \t * \n \t * @param str\n \t * @param appendable\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNjI5OA==", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r371516298", "bodyText": "This stringbuilder is no longer used.", "author": "jeenbroekstra", "createdAt": "2020-01-27T22:22:51Z", "path": "core/rio/ntriples/src/main/java/org/eclipse/rdf4j/rio/ntriples/NTriplesUtil.java", "diffHunk": "@@ -252,22 +276,45 @@ public static void append(Resource resource, Appendable appendable) throws IOExc\n \n \t/**\n \t * Creates an N-Triples string for the supplied URI.\n+\t * \n+\t * @param uri\n+\t * @return string\n \t */\n \tpublic static String toNTriplesString(IRI uri) {\n \t\treturn \"<\" + escapeString(uri.toString()) + \">\";\n \t}\n \n+\t/**\n+\t * Appends the N-Triples representation of the given {@link IRI} to the given {@link Appendable}.\n+\t * \n+\t * @param uri        The IRI to write.\n+\t * @param appendable The object to append to.\n+\t * @throws IOException\n+\t */\n \tpublic static void append(IRI uri, Appendable appendable) throws IOException {\n+\t\tappend(uri, appendable, true);\n+\t}\n+\n+\t/**\n+\t * Appends the N-Triples representation of the given {@link IRI} to the given {@link Appendable}.\n+\t * \n+\t * @param uri\n+\t * @param appendable\n+\t * @param escapeUnicode\n+\t * @throws java.io.IOException\n+\t */\n+\tpublic static void append(IRI uri, Appendable appendable, boolean escapeUnicode) throws IOException {\n \t\tStringBuilder sb = new StringBuilder();", "originalCommit": "59516c94612362e87c1468f96e42b40b1106ff79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3MDU2OQ==", "url": "https://github.com/eclipse/rdf4j/pull/1866#discussion_r371970569", "bodyText": "thanks, good catch", "author": "barthanssens", "createdAt": "2020-01-28T18:11:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNjI5OA=="}], "type": "inlineReview", "revised_code": {"commit": "e1a5f0deb2abf1908dcd3a89a2014f40b7870342", "chunk": "diff --git a/core/rio/ntriples/src/main/java/org/eclipse/rdf4j/rio/ntriples/NTriplesUtil.java b/core/rio/ntriples/src/main/java/org/eclipse/rdf4j/rio/ntriples/NTriplesUtil.java\nindex 90b947dd0b..cc140675fb 100644\n--- a/core/rio/ntriples/src/main/java/org/eclipse/rdf4j/rio/ntriples/NTriplesUtil.java\n+++ b/core/rio/ntriples/src/main/java/org/eclipse/rdf4j/rio/ntriples/NTriplesUtil.java\n\n@@ -304,7 +304,6 @@ public class NTriplesUtil {\n \t * @throws java.io.IOException\n \t */\n \tpublic static void append(IRI uri, Appendable appendable, boolean escapeUnicode) throws IOException {\n-\t\tStringBuilder sb = new StringBuilder();\n \t\tappendable.append('<');\n \t\tStringUtil.simpleEscapeIRI(uri.toString(), appendable, escapeUnicode);\n \t\tappendable.append('>');\n"}}, {"oid": "e1a5f0deb2abf1908dcd3a89a2014f40b7870342", "url": "https://github.com/eclipse/rdf4j/commit/e1a5f0deb2abf1908dcd3a89a2014f40b7870342", "message": "GH-1535 New escapeIRI method, javadoc corrections + added deprecated annotations\n\nSigned-off-by: Bart Hanssens <bart.hanssens@bosa.fgov.be>", "committedDate": "2020-01-28T18:28:43Z", "type": "commit"}, {"oid": "e1a5f0deb2abf1908dcd3a89a2014f40b7870342", "url": "https://github.com/eclipse/rdf4j/commit/e1a5f0deb2abf1908dcd3a89a2014f40b7870342", "message": "GH-1535 New escapeIRI method, javadoc corrections + added deprecated annotations\n\nSigned-off-by: Bart Hanssens <bart.hanssens@bosa.fgov.be>", "committedDate": "2020-01-28T18:28:43Z", "type": "forcePushed"}]}