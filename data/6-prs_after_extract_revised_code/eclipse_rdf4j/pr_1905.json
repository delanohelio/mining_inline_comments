{"pr_number": 1905, "pr_title": "GH-1904: fix ThredPool initialization in FedX", "pr_createdAt": "2020-02-04T15:20:34Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/1905", "timeline": [{"oid": "15d2c932f60db97fa543ac7bc7a636a4d9214859", "url": "https://github.com/eclipse/rdf4j/commit/15d2c932f60db97fa543ac7bc7a636a4d9214859", "message": "GH-1904: fix ThredPool initialization in FedX\n\nIn FedX we use configurable threadpools for executing join and union sub\nqueries, as well as other remote requests. Also the pool size is meant\nto be configurable via FedXConfig setters.\n\nHowever, due to a bug in the construction of the ThreadPoolExecutor the\nsize is always set to a most 10 threads. This is because we have an\nunbound queue and set the minimumCoreSize to 10. In such setting new\nthreads are only created if the core size of the pool is not reached.\n\nWe now explicitly set the core pool size to the configured number of\nworkers, and in addition configure the pool in such a way that idle\nthreads can get destroyed. The idle timeout is set to 60s.", "committedDate": "2020-02-04T15:19:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyOTgzMg==", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r374829832", "bodyText": "Btw. Unrelated to this particular PR. I noticed a lot of Protected variables in this class, do you need them to be available so broadly.\nAlso, I was wondering what happens if you call initWorkerThreads multiple times? Does it create a bunch of thread pools?", "author": "hmottestad", "createdAt": "2020-02-04T17:58:46Z", "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "diffHunk": "@@ -112,8 +112,10 @@ public int getNumberOfTasks() {\n \n \tprotected void initWorkerThreads() {\n \n-\t\texecutor = new ThreadPoolExecutor(Math.min(10, nWorkers / 2), nWorkers, 30L, TimeUnit.SECONDS, _taskQueue,\n+\t\tThreadPoolExecutor _executor = new ThreadPoolExecutor(nWorkers, nWorkers, 60L, TimeUnit.SECONDS, _taskQueue,\n \t\t\t\tnew NamingThreadFactory(name));\n+\t\t_executor.allowCoreThreadTimeOut(true);\n+\t\tthis.executor = _executor;", "originalCommit": "15d2c932f60db97fa543ac7bc7a636a4d9214859", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MjE0OA==", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375062148", "bodyText": "@hmottestad I agree that some of these variables should be made private, but this close to release I'd rather have confirmation from @aschwarte10 that that won't break dependent code.\nAs for your second remark: it looks as if the intent is that initWorkerThreads is only invoked from the constructor. So that would happen only once.", "author": "jeenbroekstra", "createdAt": "2020-02-05T05:12:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyOTgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3MDk3MA==", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375070970", "bodyText": "I agree that methods should be private for this scheduler (and also the initialization could be done in a better way). The current implementation structure is mostly for historical reasons (the initial code is almost 8 years old by now) and quite some versions ago the extension hierarchy for the schedulers looked different (e.g. for union and join) making it required to have certain things protected.\nAs suggested by Jeen we can have another push on this PR to make the methods private", "author": "aschwarte10", "createdAt": "2020-02-05T05:54:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyOTgzMg=="}], "type": "inlineReview", "revised_code": {"commit": "d60f082b73eaea5a19048e3a6f635a2801d36679", "chunk": "diff --git a/tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java b/tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java\nindex 1d7d757657..42b3f0bf00 100644\n--- a/tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java\n+++ b/tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java\n\n@@ -110,12 +110,12 @@ public class ControlledWorkerScheduler<T> implements Scheduler<T> {\n \t\treturn _taskQueue.size();\n \t}\n \n-\tprotected void initWorkerThreads() {\n+\tprivate ExecutorService createExecutorService() {\n \n-\t\tThreadPoolExecutor _executor = new ThreadPoolExecutor(nWorkers, nWorkers, 60L, TimeUnit.SECONDS, _taskQueue,\n+\t\tThreadPoolExecutor executor = new ThreadPoolExecutor(nWorkers, nWorkers, 60L, TimeUnit.SECONDS, _taskQueue,\n \t\t\t\tnew NamingThreadFactory(name));\n-\t\t_executor.allowCoreThreadTimeOut(true);\n-\t\tthis.executor = _executor;\n+\t\texecutor.allowCoreThreadTimeOut(true);\n+\t\treturn executor;\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3ODM4MQ==", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375078381", "bodyText": "could executor be final?", "author": "hmottestad", "createdAt": "2020-02-05T06:28:37Z", "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java", "diffHunk": "@@ -38,14 +38,14 @@\n  */\n public class ControlledWorkerScheduler<T> implements Scheduler<T> {\n \n-\tprotected static final Logger log = LoggerFactory.getLogger(ControlledWorkerScheduler.class);\n+\tprivate static final Logger log = LoggerFactory.getLogger(ControlledWorkerScheduler.class);\n \n-\tprotected ExecutorService executor;\n+\tprivate ExecutorService executor;", "originalCommit": "db10678087cabc1d7289725d0bb331ec30dc57d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA4OTk0Mw==", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375089943", "bodyText": "Sure, I'll add this to @jeenbroekstra's second commit. @hmottestad  Can you please approve once the PR is updated?", "author": "aschwarte10", "createdAt": "2020-02-05T07:13:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3ODM4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA5MDMzMQ==", "url": "https://github.com/eclipse/rdf4j/pull/1905#discussion_r375090331", "bodyText": "@hmottestad PR is updated, please have a second look", "author": "aschwarte10", "createdAt": "2020-02-05T07:14:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3ODM4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d60f082b73eaea5a19048e3a6f635a2801d36679", "chunk": "diff --git a/tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java b/tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java\nindex 3b7a5eb565..42b3f0bf00 100644\n--- a/tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java\n+++ b/tools/federation/src/main/java/org/eclipse/rdf4j/federated/evaluation/concurrent/ControlledWorkerScheduler.java\n\n@@ -40,12 +40,12 @@ public class ControlledWorkerScheduler<T> implements Scheduler<T> {\n \n \tprivate static final Logger log = LoggerFactory.getLogger(ControlledWorkerScheduler.class);\n \n-\tprivate ExecutorService executor;\n+\tprivate final ExecutorService executor;\n \n-\tprivate LinkedBlockingQueue<Runnable> _taskQueue = new LinkedBlockingQueue<>();\n+\tprivate final LinkedBlockingQueue<Runnable> _taskQueue = new LinkedBlockingQueue<>();\n \n-\tprivate int nWorkers;\n-\tprivate String name;\n+\tprivate final int nWorkers;\n+\tprivate final String name;\n \n \t/**\n \t * Construct a new instance with 20 workers.\n"}}, {"oid": "d60f082b73eaea5a19048e3a6f635a2801d36679", "url": "https://github.com/eclipse/rdf4j/commit/d60f082b73eaea5a19048e3a6f635a2801d36679", "message": "GH-1904 make fields and methods private", "committedDate": "2020-02-05T07:13:42Z", "type": "commit"}, {"oid": "d60f082b73eaea5a19048e3a6f635a2801d36679", "url": "https://github.com/eclipse/rdf4j/commit/d60f082b73eaea5a19048e3a6f635a2801d36679", "message": "GH-1904 make fields and methods private", "committedDate": "2020-02-05T07:13:42Z", "type": "forcePushed"}]}