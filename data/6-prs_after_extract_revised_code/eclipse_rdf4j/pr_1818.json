{"pr_number": 1818, "pr_title": "GH-1814: support to configure inference on federation queries", "pr_createdAt": "2020-01-09T07:49:44Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/1818", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU5NzczNQ==", "url": "https://github.com/eclipse/rdf4j/pull/1818#discussion_r364597735", "bodyText": "We really should get a possibility inside the SAIL to access information on the Query object (e.g. in this case the includeInferred), I am using nasty workarounds by passing it as a binding", "author": "aschwarte10", "createdAt": "2020-01-09T07:54:19Z", "path": "tools/federation/src/main/java/org/eclipse/rdf4j/federated/FedXConnection.java", "diffHunk": "@@ -388,6 +389,21 @@ private static int getOriginalMaxExecutionTime(BindingSet b) {\n \t\treturn 0;\n \t}\n \n+\t/**\n+\t * Return the original explicit includeInferred {@link Operation#getIncludeInferred()} value.\n+\t * \n+\t * @param b\n+\t * @return the supplied value or {@link FedXConfig#getIncludeInferredDefault()}\n+\t */\n+\tprivate boolean getOriginalIncludeInferred(BindingSet b) {", "originalCommit": "d223ca8ed0766fee7271c3c936c4ef1a0811f9c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYzNTU3Nw==", "url": "https://github.com/eclipse/rdf4j/pull/1818#discussion_r364635577", "bodyText": "I haven't looked at this long so perhaps I'm missing something obvious, but  I don't understand why you need this at all. The includeInferred parameter is an input for evaluateInternal. Why do you need this passing arround through a config object at all?", "author": "jeenbroekstra", "createdAt": "2020-01-09T09:30:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU5NzczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc3MjcxNw==", "url": "https://github.com/eclipse/rdf4j/pull/1818#discussion_r364772717", "bodyText": "@jeenbroekstra thanks for this. You are absolutetly right, includeInferred is available in evaluateInternal. Did not look properly or have missed it. This will make my change a bit simpler.\nI will provide a revised version later.\nStill for the query execution time there is no way to access it inside the sail.", "author": "aschwarte10", "createdAt": "2020-01-09T14:38:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU5NzczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc3Nzg3MQ==", "url": "https://github.com/eclipse/rdf4j/pull/1818#discussion_r364777871", "bodyText": "Done, I amended the change and could get rid of this piece of code", "author": "aschwarte10", "createdAt": "2020-01-09T14:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU5NzczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "192bd27d58741cd60dfd8355d60933e71ea6420b", "chunk": "diff --git a/tools/federation/src/main/java/org/eclipse/rdf4j/federated/FedXConnection.java b/tools/federation/src/main/java/org/eclipse/rdf4j/federated/FedXConnection.java\nindex 793e006cf3..2af5af5b4f 100644\n--- a/tools/federation/src/main/java/org/eclipse/rdf4j/federated/FedXConnection.java\n+++ b/tools/federation/src/main/java/org/eclipse/rdf4j/federated/FedXConnection.java\n\n@@ -389,21 +389,6 @@ public class FedXConnection extends AbstractSailConnection {\n \t\treturn 0;\n \t}\n \n-\t/**\n-\t * Return the original explicit includeInferred {@link Operation#getIncludeInferred()} value.\n-\t * \n-\t * @param b\n-\t * @return the supplied value or {@link FedXConfig#getIncludeInferredDefault()}\n-\t */\n-\tprivate boolean getOriginalIncludeInferred(BindingSet b) {\n-\t\tif (b == null)\n-\t\t\treturn federationContext.getConfig().getIncludeInferredDefault();\n-\t\tValue q = b.getValue(FedXRepositoryConnection.BINDING_ORIGINAL_INCLUDE_INFERRED);\n-\t\tif (q != null)\n-\t\t\treturn Boolean.parseBoolean(q.stringValue());\n-\t\treturn federationContext.getConfig().getIncludeInferredDefault();\n-\t}\n-\n \t/**\n \t * A default implementation for {@link AbstractSail}. This implementation has no further use, however it is needed\n \t * for the constructor call.\n"}}, {"oid": "192bd27d58741cd60dfd8355d60933e71ea6420b", "url": "https://github.com/eclipse/rdf4j/commit/192bd27d58741cd60dfd8355d60933e71ea6420b", "message": "GH-1814: support to configure inference on federation queries\n\nAs of this change it is possible to configure inference on federation\nqueries using Query#setIncludeInferred. By default the value is set to\n'true', similar to the SailQuery.\n\nThe corresponding value is now passed to the TripleSource and is thus\nconsidered for all sub-queries sent to the relevant endpoints.\n\nFunctionality for the query types is validated in a unit test.", "committedDate": "2020-01-09T14:44:46Z", "type": "commit"}, {"oid": "192bd27d58741cd60dfd8355d60933e71ea6420b", "url": "https://github.com/eclipse/rdf4j/commit/192bd27d58741cd60dfd8355d60933e71ea6420b", "message": "GH-1814: support to configure inference on federation queries\n\nAs of this change it is possible to configure inference on federation\nqueries using Query#setIncludeInferred. By default the value is set to\n'true', similar to the SailQuery.\n\nThe corresponding value is now passed to the TripleSource and is thus\nconsidered for all sub-queries sent to the relevant endpoints.\n\nFunctionality for the query types is validated in a unit test.", "committedDate": "2020-01-09T14:44:46Z", "type": "forcePushed"}]}