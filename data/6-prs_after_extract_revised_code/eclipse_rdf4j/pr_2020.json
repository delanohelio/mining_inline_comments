{"pr_number": 2020, "pr_title": "GH-1574 better target node support", "pr_createdAt": "2020-03-18T20:18:30Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2020", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYzOTIxMg==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r394639212", "bodyText": "Create a test that exemplifies this.", "author": "hmottestad", "createdAt": "2020-03-18T21:05:24Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/ShaclProperties.java", "diffHunk": "@@ -48,7 +50,7 @@\n \tString flags = \"\";\n \n \tSet<Resource> targetClass = new HashSet<>(0);\n-\tSet<Value> targetNode = new HashSet<>(0);\n+\tTreeSet<Value> targetNode = new TreeSet<>(new ValueComparator());", "originalCommit": "066988b122873d8455de00aa4e47f2403f6d2333", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2750f53ca64ba97c3b53a7eb848f129926cebdd5", "chunk": "diff --git a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/ShaclProperties.java b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/ShaclProperties.java\nindex cb87e7aca6..461bf61318 100644\n--- a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/ShaclProperties.java\n+++ b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/AST/ShaclProperties.java\n\n@@ -58,6 +58,9 @@ public class ShaclProperties {\n \n \tboolean uniqueLang = false;\n \n+\tpublic ShaclProperties() {\n+\t}\n+\n \tpublic ShaclProperties(Resource propertyShapeId, SailRepositoryConnection connection) {\n \n \t\ttry (Stream<Statement> stream = connection.getStatements(propertyShapeId, null, null).stream()) {\n"}}, {"oid": "2750f53ca64ba97c3b53a7eb848f129926cebdd5", "url": "https://github.com/eclipse/rdf4j/commit/2750f53ca64ba97c3b53a7eb848f129926cebdd5", "message": "#1574 fixed failing W3C tests and created test to force use of TreeSet\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-03-19T10:01:15Z", "type": "forcePushed"}, {"oid": "ebe9d6e7afb1b086172521030028d30cbddac08f", "url": "https://github.com/eclipse/rdf4j/commit/ebe9d6e7afb1b086172521030028d30cbddac08f", "message": "GH-1574 validate all target nodes for every transaction\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-03-19T10:06:06Z", "type": "commit"}, {"oid": "2663ff3ed5c15b61f5ccbdf49d8ec8d528d6ec2c", "url": "https://github.com/eclipse/rdf4j/commit/2663ff3ed5c15b61f5ccbdf49d8ec8d528d6ec2c", "message": "GH-1574 fixed some failing tests and added some edge case tests\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-03-19T10:06:07Z", "type": "commit"}, {"oid": "1d1b7d98cfd413abb8cd84d48c0fc36319ecc7b4", "url": "https://github.com/eclipse/rdf4j/commit/1d1b7d98cfd413abb8cd84d48c0fc36319ecc7b4", "message": "log the property shape and the identifier of the shape when GlobalValidationExecutionLogging is enabled as well as a fix where the wrong identity hash is used when printing plans\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-03-19T10:06:07Z", "type": "commit"}, {"oid": "0168b23d1ce54a515336628deb92e9582a561094", "url": "https://github.com/eclipse/rdf4j/commit/0168b23d1ce54a515336628deb92e9582a561094", "message": "GH-1574 fixed failing W3C tests and created test to force use of TreeSet\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-03-19T10:06:07Z", "type": "commit"}, {"oid": "0168b23d1ce54a515336628deb92e9582a561094", "url": "https://github.com/eclipse/rdf4j/commit/0168b23d1ce54a515336628deb92e9582a561094", "message": "GH-1574 fixed failing W3C tests and created test to force use of TreeSet\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-03-19T10:06:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxNTQzNw==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395415437", "bodyText": "That looks like the wrong year for a new file", "author": "jeenbroekstra", "createdAt": "2020-03-20T02:34:53Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/ValuesBackedNode.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018 Eclipse RDF4J contributors.", "originalCommit": "0168b23d1ce54a515336628deb92e9582a561094", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MTY0MQ==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395461641", "bodyText": "Will fix", "author": "hmottestad", "createdAt": "2020-03-20T06:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxNTQzNw=="}], "type": "inlineReview", "revised_code": {"commit": "56b302c5dd91843bb2f4bd72d832c2998f4f6bd8", "chunk": "diff --git a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/ValuesBackedNode.java b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/ValuesBackedNode.java\nindex 28fc6ea9ff..0a2513e1b4 100644\n--- a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/ValuesBackedNode.java\n+++ b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/ValuesBackedNode.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2018 Eclipse RDF4J contributors.\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Distribution License v1.0\n  * which accompanies this distribution, and is available at\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxNTUyNA==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395415524", "bodyText": "wrong year.", "author": "jeenbroekstra", "createdAt": "2020-03-20T02:35:22Z", "path": "core/sail/shacl/src/test/java/org/eclipse/rdf4j/sail/shacl/OrderingTest.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018 Eclipse RDF4J contributors.", "originalCommit": "0168b23d1ce54a515336628deb92e9582a561094", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MTU4OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395461589", "bodyText": "This is just a renamed file.", "author": "hmottestad", "createdAt": "2020-03-20T06:54:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxNTUyNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxNjQxMQ==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395416411", "bodyText": "Why are you wrapping this in an Arraylist?", "author": "jeenbroekstra", "createdAt": "2020-03-20T02:39:55Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/GroupByCount.java", "diffHunk": "@@ -74,7 +75,8 @@ private void calculateNext() {\n \n \t\t\t\t}\n \n-\t\t\t\tList<Value> line = Arrays.asList(subject, SimpleValueFactory.getInstance().createLiteral(count));\n+\t\t\t\tList<Value> line = new ArrayList<>(\n+\t\t\t\t\t\tArrays.asList(subject, SimpleValueFactory.getInstance().createLiteral(count)));", "originalCommit": "0168b23d1ce54a515336628deb92e9582a561094", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MTgyOA==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395461828", "bodyText": "Arrays.asList is immutable and I need mutability.", "author": "hmottestad", "createdAt": "2020-03-20T06:55:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxNjQxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU0ODA0Mg==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395548042", "bodyText": "I've added some comments.", "author": "hmottestad", "createdAt": "2020-03-20T10:26:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxNjQxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "56b302c5dd91843bb2f4bd72d832c2998f4f6bd8", "chunk": "diff --git a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/GroupByCount.java b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/GroupByCount.java\nindex 1c1f0b1439..d4ca277a21 100644\n--- a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/GroupByCount.java\n+++ b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/GroupByCount.java\n\n@@ -75,6 +75,7 @@ public class GroupByCount implements PlanNode {\n \n \t\t\t\t}\n \n+\t\t\t\t// Arrays.asList(...) is immutable, wrap in ArrayList to make it mutable\n \t\t\t\tList<Value> line = new ArrayList<>(\n \t\t\t\t\t\tArrays.asList(subject, SimpleValueFactory.getInstance().createLiteral(count)));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxNjU0OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395416549", "bodyText": "Same here - why is this needed? It looks redundant.", "author": "jeenbroekstra", "createdAt": "2020-03-20T02:40:46Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/Tuple.java", "diffHunk": "@@ -39,7 +39,7 @@ public Tuple(List<Value> list) {\n \t}\n \n \tpublic Tuple(Value... list) {\n-\t\tline = Arrays.asList(list);\n+\t\tline = new ArrayList<>(Arrays.asList(list));", "originalCommit": "0168b23d1ce54a515336628deb92e9582a561094", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56b302c5dd91843bb2f4bd72d832c2998f4f6bd8", "chunk": "diff --git a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/Tuple.java b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/Tuple.java\nindex 2660c5c308..84cfe01cb2 100644\n--- a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/Tuple.java\n+++ b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/planNodes/Tuple.java\n\n@@ -39,6 +39,7 @@ public class Tuple implements Comparable<Tuple> {\n \t}\n \n \tpublic Tuple(Value... list) {\n+\t\t// Arrays.asList(...) is immutable, wrap in ArrayList to make it mutable\n \t\tline = new ArrayList<>(Arrays.asList(list));\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxODI1OA==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395418258", "bodyText": "While these tests (after reading back and forth a bit) seem sensible, I'm a bit lost on what this has to do with issue GH-1574. Did the fix you added change ordering behavior somehow?", "author": "jeenbroekstra", "createdAt": "2020-03-20T02:50:08Z", "path": "core/sail/shacl/src/test/java/org/eclipse/rdf4j/sail/shacl/OrderingTest.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shacl;\n+\n+import org.eclipse.rdf4j.IsolationLevels;\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.Value;\n+import org.eclipse.rdf4j.model.ValueFactory;\n+import org.eclipse.rdf4j.model.impl.SimpleValueFactory;\n+import org.eclipse.rdf4j.model.vocabulary.FOAF;\n+import org.eclipse.rdf4j.model.vocabulary.RDF;\n+import org.eclipse.rdf4j.model.vocabulary.RDFS;\n+import org.eclipse.rdf4j.model.vocabulary.SHACL;\n+import org.eclipse.rdf4j.repository.sail.SailRepository;\n+import org.eclipse.rdf4j.repository.sail.SailRepositoryConnection;\n+import org.eclipse.rdf4j.sail.SailConnection;\n+import org.eclipse.rdf4j.sail.memory.MemoryStore;\n+import org.eclipse.rdf4j.sail.shacl.AST.ShaclProperties;\n+import org.eclipse.rdf4j.sail.shacl.mock.MockConsumePlanNode;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.InnerJoin;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.PlanNode;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.Select;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.Sort;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.TrimTuple;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.Tuple;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.UnBufferedPlanNode;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.ValuesBackedNode;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.stream.Collectors;\n+\n+import static junit.framework.TestCase.assertEquals;\n+import static junit.framework.TestCase.assertTrue;\n+\n+/**\n+ * @author H\u00e5vard Ottestad\n+ */\n+public class OrderingTest {\n+\n+\tprivate final static ValueFactory vf = SimpleValueFactory.getInstance();\n+\n+\t@Test\n+\tpublic void testSelect() {\n+\t\tMemoryStore repository = new MemoryStore();\n+\t\trepository.init();\n+\n+\t\ttry (SailConnection connection = repository.getConnection()) {\n+\t\t\tconnection.begin(IsolationLevels.NONE);\n+\t\t\tconnection.addStatement(RDFS.RESOURCE, RDF.TYPE, RDFS.RESOURCE);\n+\t\t\tconnection.addStatement(RDFS.CLASS, RDF.TYPE, RDFS.RESOURCE);\n+\t\t\tconnection.addStatement(RDFS.SUBCLASSOF, RDF.TYPE, RDFS.RESOURCE);\n+\t\t\tconnection.commit();\n+\n+\t\t\tSelect select = new Select(connection, \"?a <\" + RDF.TYPE + \"> []\", \"*\");\n+\t\t\tList<Tuple> tuples = new MockConsumePlanNode(select).asList();\n+\n+\t\t\tString actual = Arrays.toString(tuples.toArray());\n+\n+\t\t\tCollections.sort(tuples);\n+\n+\t\t\tString expected = Arrays.toString(tuples.toArray());\n+\n+\t\t\tassertEquals(expected, actual);", "originalCommit": "0168b23d1ce54a515336628deb92e9582a561094", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MjM2OA==", "url": "https://github.com/eclipse/rdf4j/pull/2020#discussion_r395462368", "bodyText": "Ordering test is a renamed file where I\u2019ve moved in some old tests and also added one that checks that the set used to store the target nodes is sorted. Which is an assumption used further down the line.", "author": "hmottestad", "createdAt": "2020-03-20T06:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxODI1OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "56b302c5dd91843bb2f4bd72d832c2998f4f6bd8", "url": "https://github.com/eclipse/rdf4j/commit/56b302c5dd91843bb2f4bd72d832c2998f4f6bd8", "message": "GH-1574 added comments to help next developer\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-03-20T10:25:58Z", "type": "commit"}]}