{"pr_number": 2334, "pr_title": "GH-2240 shacl limit validating results", "pr_createdAt": "2020-06-24T19:25:18Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2334", "timeline": [{"oid": "513b7762f1a48a8bc72404a2fb6ee335428ad4d7", "url": "https://github.com/eclipse/rdf4j/commit/513b7762f1a48a8bc72404a2fb6ee335428ad4d7", "message": "GH-2240 started to support truncated reports\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-06-22T21:45:40Z", "type": "commit"}, {"oid": "274e6b976d0be8c1dfe51bf0092e6537bd0b95ec", "url": "https://github.com/eclipse/rdf4j/commit/274e6b976d0be8c1dfe51bf0092e6537bd0b95ec", "message": "GH-2240 tests\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-06-24T19:23:56Z", "type": "commit"}, {"oid": "8ff4fcbf11ab7fae19482540cea62015c3e4751a", "url": "https://github.com/eclipse/rdf4j/commit/8ff4fcbf11ab7fae19482540cea62015c3e4751a", "message": "Merge branch 'develop' into GH-2240-shacl-limit-validatin-results", "committedDate": "2020-06-27T14:16:35Z", "type": "commit"}, {"oid": "ccdee81018716bb24f80e7053428edb2d0a6ca23", "url": "https://github.com/eclipse/rdf4j/commit/ccdee81018716bb24f80e7053428edb2d0a6ca23", "message": "GH-2240 added vocabulary\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-06-27T14:43:51Z", "type": "commit"}, {"oid": "79361bd210c963d7d9ee4584ebd23c92cd634477", "url": "https://github.com/eclipse/rdf4j/commit/79361bd210c963d7d9ee4584ebd23c92cd634477", "message": "fix test\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-06-27T15:18:59Z", "type": "commit"}, {"oid": "3da33208c4d48636a6d5aecfd210ce961902cfa9", "url": "https://github.com/eclipse/rdf4j/commit/3da33208c4d48636a6d5aecfd210ce961902cfa9", "message": "GH-2240 handle limits of zero\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-07-01T19:49:08Z", "type": "commit"}, {"oid": "01344c18b4e54f1b3c50bbe25c1dcfccf2fcdd8e", "url": "https://github.com/eclipse/rdf4j/commit/01344c18b4e54f1b3c50bbe25c1dcfccf2fcdd8e", "message": "GH-2240 test when limit is equal to size\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-07-01T19:54:31Z", "type": "commit"}, {"oid": "bd73f56f036912be126c9e989d72243cead3c784", "url": "https://github.com/eclipse/rdf4j/commit/bd73f56f036912be126c9e989d72243cead3c784", "message": "GH-2240 transactions should conform by default\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-07-05T12:35:10Z", "type": "commit"}, {"oid": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "url": "https://github.com/eclipse/rdf4j/commit/9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "message": "Merge branch 'develop' into GH-2240-shacl-limit-validatin-results\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-07-05T12:55:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMzMxNQ==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451233315", "bodyText": "This can just be one line. No big deal though.", "author": "jeenbroekstra", "createdAt": "2020-07-08T01:37:42Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ShaclSailValidationException.java", "diffHunk": "@@ -8,25 +8,20 @@\n \n package org.eclipse.rdf4j.sail.shacl;\n \n-import java.util.ArrayDeque;\n-import java.util.List;\n-\n import org.eclipse.rdf4j.exceptions.ValidationException;\n import org.eclipse.rdf4j.model.Model;\n import org.eclipse.rdf4j.model.vocabulary.SHACL;\n import org.eclipse.rdf4j.sail.SailException;\n-import org.eclipse.rdf4j.sail.shacl.AST.PropertyShape;\n-import org.eclipse.rdf4j.sail.shacl.planNodes.Tuple;\n import org.eclipse.rdf4j.sail.shacl.results.ValidationReport;\n-import org.eclipse.rdf4j.sail.shacl.results.ValidationResult;\n \n public class ShaclSailValidationException extends SailException implements ValidationException {\n \n-\tprivate List<Tuple> invalidTuples;\n+\tprivate final ValidationReport validationReport;\n \n-\tShaclSailValidationException(List<Tuple> invalidTuples) {\n-\t\tsuper(\"Failed SHACL validation\");\n-\t\tthis.invalidTuples = invalidTuples;\n+\tShaclSailValidationException(ValidationReport validationReport) {\n+\t\tsuper(\"Failed \" +\n+\t\t\t\t\"SHACL validation\");", "originalCommit": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwOTg2MA==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451309860", "bodyText": "The formatter split it at some point I guess.", "author": "hmottestad", "createdAt": "2020-07-08T06:24:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMzMxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "714dfb61ba6bdcad934c41732230a434b63af71a", "chunk": "diff --git a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ShaclSailValidationException.java b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ShaclSailValidationException.java\nindex 92fab4c298..4fbeb75681 100644\n--- a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ShaclSailValidationException.java\n+++ b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/ShaclSailValidationException.java\n\n@@ -19,8 +19,7 @@ public class ShaclSailValidationException extends SailException implements Valid\n \tprivate final ValidationReport validationReport;\n \n \tShaclSailValidationException(ValidationReport validationReport) {\n-\t\tsuper(\"Failed \" +\n-\t\t\t\t\"SHACL validation\");\n+\t\tsuper(\"Failed SHACL validation\");\n \t\tthis.validationReport = validationReport;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMzYyMA==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451233620", "bodyText": "A minor adjustment might be to only export these statements if the currently set value is not the default.", "author": "jeenbroekstra", "createdAt": "2020-07-08T01:39:03Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/config/ShaclSailConfig.java", "diffHunk": "@@ -204,6 +227,11 @@ public Resource export(Model m) {\n \t\tm.add(implNode, SERIALIZABLE_VALIDATION, BooleanLiteral.valueOf(isSerializableValidation()));\n \t\tm.add(implNode, ShaclSailSchema.SHACL_ADVANCED_FEATURES, BooleanLiteral.valueOf(isShaclAdvancedFeatures()));\n \t\tm.add(implNode, ShaclSailSchema.DASH_DATA_SHAPES, BooleanLiteral.valueOf(isDashDataShapes()));\n+\n+\t\tm.add(implNode, ShaclSailSchema.VALIDATION_RESULTS_LIMIT_TOTAL,\n+\t\t\t\tvf.createLiteral(getValidationResultsLimitTotal()));\n+\t\tm.add(implNode, ShaclSailSchema.VALIDATION_RESULTS_LIMIT_PER_CONSTRAINT,\n+\t\t\t\tvf.createLiteral(getValidationResultsLimitPerConstraint()));", "originalCommit": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxMDg2MQ==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451310861", "bodyText": "I like the discoverability of config files where the defaults are documented, unless it makes it too big (eg. hundreds of lines).", "author": "hmottestad", "createdAt": "2020-07-08T06:27:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMzYyMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2Nzc2OA==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451267768", "bodyText": "Any chance we can put things in a single package and make them package-protected? If we can't, we can't, but I'd rather use these annotations as a last resort only.", "author": "jeenbroekstra", "createdAt": "2020-07-08T03:54:48Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/LazyValidationReport.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shacl.results;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.eclipse.rdf4j.common.annotation.InternalUseOnly;\n+import org.eclipse.rdf4j.model.Model;\n+import org.eclipse.rdf4j.model.Resource;\n+import org.eclipse.rdf4j.model.impl.BooleanLiteral;\n+import org.eclipse.rdf4j.model.impl.DynamicModelFactory;\n+import org.eclipse.rdf4j.model.impl.SimpleValueFactory;\n+import org.eclipse.rdf4j.model.vocabulary.RDF;\n+import org.eclipse.rdf4j.model.vocabulary.RDF4J;\n+import org.eclipse.rdf4j.model.vocabulary.SHACL;\n+\n+/**\n+ * A ValidationReport that will defer calculating any ValidationResults until the user asks for them\n+ *\n+ */\n+@InternalUseOnly\n+@Deprecated\n+public class LazyValidationReport extends ValidationReport {", "originalCommit": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "714dfb61ba6bdcad934c41732230a434b63af71a", "chunk": "diff --git a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/LazyValidationReport.java b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/lazy/LazyValidationReport.java\nsimilarity index 94%\nrename from core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/LazyValidationReport.java\nrename to core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/lazy/LazyValidationReport.java\nindex d1d4258388..44e5e5671a 100644\n--- a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/LazyValidationReport.java\n+++ b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/lazy/LazyValidationReport.java\n\n@@ -6,7 +6,7 @@\n  * http://www.eclipse.org/org/documents/edl-v10.php.\n  *******************************************************************************/\n \n-package org.eclipse.rdf4j.sail.shacl.results;\n+package org.eclipse.rdf4j.sail.shacl.results.lazy;\n \n import java.util.Arrays;\n import java.util.List;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2ODAwNg==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451268006", "bodyText": "This could do with one or two lines of javadoc (possibly explaining the relation with the associated config settings).", "author": "jeenbroekstra", "createdAt": "2020-07-08T03:55:50Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationReport.java", "diffHunk": "@@ -86,4 +96,16 @@ public String toString() {\n \t\t\t\t\", validationResult=\" + Arrays.toString(validationResult.toArray()) +\n \t\t\t\t'}';\n \t}\n+\n+\tpublic boolean isTruncated() {", "originalCommit": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxMTE2NA==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451311164", "bodyText": "Yes. Absolutely agree.", "author": "hmottestad", "createdAt": "2020-07-08T06:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2ODAwNg=="}], "type": "inlineReview", "revised_code": {"commit": "714dfb61ba6bdcad934c41732230a434b63af71a", "chunk": "diff --git a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationReport.java b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationReport.java\nindex 5ba30f31db..7e12134043 100644\n--- a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationReport.java\n+++ b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationReport.java\n\n@@ -97,14 +97,16 @@ public class ValidationReport {\n \t\t\t\t'}';\n \t}\n \n+\t/**\n+\t * Users can enable a limit for the number of validation results they want to accept. If the limit is reached the\n+\t * report will be marked as truncated.\n+\t *\n+\t * @return true if this SHACL validation report has been truncated.\n+\t */\n \tpublic boolean isTruncated() {\n \t\treturn truncated;\n \t}\n \n-\tpublic void setTruncated(boolean truncated) {\n-\t\tthis.truncated = truncated;\n-\t}\n-\n \tpublic void setTuples(List<Tuple> collect) {\n \t\tthis.tuples = collect;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2ODE4MA==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451268180", "bodyText": "Single package, package-protected?", "author": "jeenbroekstra", "createdAt": "2020-07-08T03:56:33Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shacl.results;\n+\n+import java.util.ArrayDeque;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.eclipse.rdf4j.common.annotation.InternalUseOnly;\n+import org.eclipse.rdf4j.common.iteration.CloseableIteration;\n+import org.eclipse.rdf4j.common.iteration.IterationWrapper;\n+import org.eclipse.rdf4j.common.iteration.IteratorIteration;\n+import org.eclipse.rdf4j.sail.SailException;\n+import org.eclipse.rdf4j.sail.shacl.AST.PropertyShape;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.Tuple;\n+\n+@Deprecated\n+@InternalUseOnly\n+public class ValidationResultIterator implements Iterator<ValidationResult> {", "originalCommit": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI5NzUyMA==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r452297520", "bodyText": "I will consider it for the restructure I'm doing with the new SHACL Abstract Syntax Tree.", "author": "hmottestad", "createdAt": "2020-07-09T15:19:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2ODE4MA=="}], "type": "inlineReview", "revised_code": {"commit": "714dfb61ba6bdcad934c41732230a434b63af71a", "chunk": "diff --git a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/lazy/ValidationResultIterator.java\nsimilarity index 92%\nrename from core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java\nrename to core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/lazy/ValidationResultIterator.java\nindex 2f2b1ecebf..cf5ad8007e 100644\n--- a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java\n+++ b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/lazy/ValidationResultIterator.java\n\n@@ -6,7 +6,7 @@\n  * http://www.eclipse.org/org/documents/edl-v10.php.\n  *******************************************************************************/\n \n-package org.eclipse.rdf4j.sail.shacl.results;\n+package org.eclipse.rdf4j.sail.shacl.results.lazy;\n \n import java.util.ArrayDeque;\n import java.util.ArrayList;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI3MDc4MA==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451270780", "bodyText": "I think you could be using an IteratorCloseableIteration here:\n   tupleIterator = new IteratorCloseableIteration<>(actualList.iterator());\n\nalso saves you having to change the visibiity of the constructor in IterationWrapper.", "author": "jeenbroekstra", "createdAt": "2020-07-08T04:08:01Z", "path": "core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.shacl.results;\n+\n+import java.util.ArrayDeque;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.eclipse.rdf4j.common.annotation.InternalUseOnly;\n+import org.eclipse.rdf4j.common.iteration.CloseableIteration;\n+import org.eclipse.rdf4j.common.iteration.IterationWrapper;\n+import org.eclipse.rdf4j.common.iteration.IteratorIteration;\n+import org.eclipse.rdf4j.sail.SailException;\n+import org.eclipse.rdf4j.sail.shacl.AST.PropertyShape;\n+import org.eclipse.rdf4j.sail.shacl.planNodes.Tuple;\n+\n+@Deprecated\n+@InternalUseOnly\n+public class ValidationResultIterator implements Iterator<ValidationResult> {\n+\n+\tprivate final long limit;\n+\tprivate long counter = 0;\n+\tprivate boolean conforms = true;\n+\tprivate boolean truncated = false;\n+\n+\tprivate ValidationResult next = null;\n+\tprivate CloseableIteration<Tuple, SailException> tupleIterator;\n+\n+\tpublic ValidationResultIterator(CloseableIteration<Tuple, SailException> tupleIterator, long limit) {\n+\t\tthis.limit = limit;\n+\t\tthis.tupleIterator = tupleIterator;\n+\t\tgetTuples();\n+\n+\t}\n+\n+\tprivate void calculateNext() {\n+\t\tif (tupleIterator.hasNext()) {\n+\t\t\tconforms = false;\n+\t\t}\n+\t\tif (next == null && tupleIterator.hasNext()) {\n+\t\t\tif (limit < 0 || counter < limit) {\n+\t\t\t\tTuple invalidTuple = tupleIterator.next();\n+\n+\t\t\t\tValidationResult parent = null;\n+\t\t\t\tArrayDeque<PropertyShape> propertyShapes = new ArrayDeque<>(invalidTuple.getCausedByPropertyShapes());\n+\n+\t\t\t\twhile (!propertyShapes.isEmpty()) {\n+\n+\t\t\t\t\tValidationResult validationResult = new ValidationResult(\n+\t\t\t\t\t\t\tpropertyShapes.pop(),\n+\t\t\t\t\t\t\tinvalidTuple.getLine().get(0),\n+\t\t\t\t\t\t\tinvalidTuple.getLine().get(invalidTuple.getLine().size() - 1)\n+\t\t\t\t\t);\n+\n+\t\t\t\t\tif (parent == null) {\n+\t\t\t\t\t\tnext = validationResult;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tparent.setDetail(validationResult);\n+\t\t\t\t\t}\n+\t\t\t\t\tparent = validationResult;\n+\t\t\t\t}\n+\t\t\t\tcounter++;\n+\t\t\t}\n+\n+\t\t\tif (limit >= 0 && counter >= limit && tupleIterator.hasNext()) {\n+\t\t\t\ttruncated = true;\n+\t\t\t}\n+\n+\t\t}\n+\t}\n+\n+\tpublic List<Tuple> getTuples() {\n+\t\tList<Tuple> actualList = new ArrayList<>();\n+\t\tlong localCounter = 0;\n+\t\twhile (tupleIterator.hasNext() && (limit < 0 || localCounter++ < limit + 1)) {\n+\t\t\tactualList.add(tupleIterator.next());\n+\t\t}\n+\n+\t\ttupleIterator = new IterationWrapper<>(new IteratorIteration<>(actualList.iterator()));", "originalCommit": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxMTQ1NA==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451311454", "bodyText": "Nice. Will fix.", "author": "hmottestad", "createdAt": "2020-07-08T06:29:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI3MDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI5Njk5MQ==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r452296991", "bodyText": "I ended up moving IteratorCloseableIteration out of the lucene package and into the common.iteration package so I could use it.", "author": "hmottestad", "createdAt": "2020-07-09T15:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI3MDc4MA=="}], "type": "inlineReview", "revised_code": {"commit": "714dfb61ba6bdcad934c41732230a434b63af71a", "chunk": "diff --git a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/lazy/ValidationResultIterator.java\nsimilarity index 92%\nrename from core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java\nrename to core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/lazy/ValidationResultIterator.java\nindex 2f2b1ecebf..cf5ad8007e 100644\n--- a/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/ValidationResultIterator.java\n+++ b/core/sail/shacl/src/main/java/org/eclipse/rdf4j/sail/shacl/results/lazy/ValidationResultIterator.java\n\n@@ -6,7 +6,7 @@\n  * http://www.eclipse.org/org/documents/edl-v10.php.\n  *******************************************************************************/\n \n-package org.eclipse.rdf4j.sail.shacl.results;\n+package org.eclipse.rdf4j.sail.shacl.results.lazy;\n \n import java.util.ArrayDeque;\n import java.util.ArrayList;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI3MDg3Nw==", "url": "https://github.com/eclipse/rdf4j/pull/2334#discussion_r451270877", "bodyText": "If you use IteratorCloseableIteration instead, you don't have to change visibility here.", "author": "jeenbroekstra", "createdAt": "2020-07-08T04:08:36Z", "path": "core/util/src/main/java/org/eclipse/rdf4j/common/iteration/IterationWrapper.java", "diffHunk": "@@ -38,7 +38,7 @@\n \t *\n \t * @param iter The wrapped Iteration for this <tt>IterationWrapper</tt>, must not be <tt>null</tt>.\n \t */\n-\tprotected IterationWrapper(Iteration<? extends E, ? extends X> iter) {\n+\tpublic IterationWrapper(Iteration<? extends E, ? extends X> iter) {", "originalCommit": "9a6b9c7e1bc15bb461bba1a8915808a18c1254f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "714dfb61ba6bdcad934c41732230a434b63af71a", "chunk": "diff --git a/core/util/src/main/java/org/eclipse/rdf4j/common/iteration/IterationWrapper.java b/core/util/src/main/java/org/eclipse/rdf4j/common/iteration/IterationWrapper.java\nindex 6685b61163..8dbb30f7a5 100644\n--- a/core/util/src/main/java/org/eclipse/rdf4j/common/iteration/IterationWrapper.java\n+++ b/core/util/src/main/java/org/eclipse/rdf4j/common/iteration/IterationWrapper.java\n\n@@ -38,7 +38,7 @@ public class IterationWrapper<E, X extends Exception> extends AbstractCloseableI\n \t *\n \t * @param iter The wrapped Iteration for this <tt>IterationWrapper</tt>, must not be <tt>null</tt>.\n \t */\n-\tpublic IterationWrapper(Iteration<? extends E, ? extends X> iter) {\n+\tprotected IterationWrapper(Iteration<? extends E, ? extends X> iter) {\n \t\tassert iter != null;\n \t\twrappedIter = iter;\n \t}\n"}}, {"oid": "714dfb61ba6bdcad934c41732230a434b63af71a", "url": "https://github.com/eclipse/rdf4j/commit/714dfb61ba6bdcad934c41732230a434b63af71a", "message": "fixes from review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-07-09T15:28:45Z", "type": "commit"}, {"oid": "fa55f94cb491bb99cc7cf39f65415d5810c7d396", "url": "https://github.com/eclipse/rdf4j/commit/fa55f94cb491bb99cc7cf39f65415d5810c7d396", "message": "GH-2240 calculate the effective limit per constraint based on the user set value with upper bound of the total limit\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-07-09T15:57:49Z", "type": "commit"}]}