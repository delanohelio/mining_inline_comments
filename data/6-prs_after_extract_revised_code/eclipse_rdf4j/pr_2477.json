{"pr_number": 2477, "pr_title": "GH-2442 improve performance for sorting literals with datatype by introducing an enum for known types", "pr_createdAt": "2020-08-29T11:05:48Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2477", "timeline": [{"oid": "61b959a60cf9887efae4a503a2467ab62fa78fbb", "url": "https://github.com/eclipse/rdf4j/commit/61b959a60cf9887efae4a503a2467ab62fa78fbb", "message": "adjust benchmark\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-29T09:27:11Z", "type": "commit"}, {"oid": "f34e3f6f669936a5a760650429c423528ad660b0", "url": "https://github.com/eclipse/rdf4j/commit/f34e3f6f669936a5a760650429c423528ad660b0", "message": "GH-2442 introduce xsd enum\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-29T09:27:45Z", "type": "commit"}, {"oid": "63dea8500e74bb46a592fd28ffdf07b59cb40756", "url": "https://github.com/eclipse/rdf4j/commit/63dea8500e74bb46a592fd28ffdf07b59cb40756", "message": "create all literals with correct enum\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-29T10:59:51Z", "type": "commit"}, {"oid": "c40d70d84a878e4421cc70b90eb57fadbce07bec", "url": "https://github.com/eclipse/rdf4j/commit/c40d70d84a878e4421cc70b90eb57fadbce07bec", "message": "remove optional\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-08-29T11:01:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMzA1OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r479703059", "bodyText": "Is this separate boolean flag necessary? You could just do this with a simple null check, right?", "author": "jeenbroekstra", "createdAt": "2020-08-30T00:10:43Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java", "diffHunk": "@@ -130,11 +145,26 @@ protected void setDatatype(IRI datatype) {\n \t\tthis.datatype = datatype;\n \t}\n \n+\tprotected void setDatatype(XmlDatatypeEnum datatype) {\n+\t\tthis.datatype = datatype.getIri();\n+\t\tthis.xmlDatatypeCached = true;\n+\t\tthis.xmlDatatype = datatype;\n+\t}\n+\n \t@Override\n \tpublic IRI getDatatype() {\n \t\treturn datatype;\n \t}\n \n+\t@Override\n+\tpublic XmlDatatypeEnum getXmlDatatypeEnum() {\n+\t\tif (!xmlDatatypeCached) {", "originalCommit": "c40d70d84a878e4421cc70b90eb57fadbce07bec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4MjI0NA==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r496582244", "bodyText": "removed now that we've moved to optionals", "author": "hmottestad", "createdAt": "2020-09-29T09:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMzA1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e0aa4d4a04934859028c50aae355d2e123d9caa3", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java\nindex 6a9dcb5849..8defbe784e 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java\n\n@@ -145,7 +145,7 @@ public class SimpleLiteral implements Literal {\n \t\tthis.datatype = datatype;\n \t}\n \n-\tprotected void setDatatype(XmlDatatypeEnum datatype) {\n+\tprotected void setDatatype(XmlDatatype datatype) {\n \t\tthis.datatype = datatype.getIri();\n \t\tthis.xmlDatatypeCached = true;\n \t\tthis.xmlDatatype = datatype;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMzc4NA==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r479703784", "bodyText": "I agree with you that use of Optional is better here (especially if it makes no difference in performance) - it will also make some of your usage code a bit more fluent. Btw the public modifier is redundant here (and on everything else in this interface as well I guess).", "author": "jeenbroekstra", "createdAt": "2020-08-30T00:22:50Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/Literal.java", "diffHunk": "@@ -47,6 +48,10 @@\n \t */\n \tpublic IRI getDatatype();\n \n+\tdefault public XmlDatatypeEnum getXmlDatatypeEnum() {", "originalCommit": "c40d70d84a878e4421cc70b90eb57fadbce07bec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwNDM1Nw==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r479704357", "bodyText": "Naming: as with the class name, I dislike having the type in the method name. Can we call the method getXmlDatatype instead?", "author": "jeenbroekstra", "createdAt": "2020-08-30T00:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4MzExNA==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r496583114", "bodyText": "I've gone with getXsdDatatype() which aligns with having Datatype be an enum within the XSD class.", "author": "hmottestad", "createdAt": "2020-09-29T09:42:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4MzM4NQ==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r496583385", "bodyText": "I've also moved to using Optional.", "author": "hmottestad", "createdAt": "2020-09-29T09:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMzc4NA=="}], "type": "inlineReview", "revised_code": {"commit": "e0aa4d4a04934859028c50aae355d2e123d9caa3", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/Literal.java b/core/model/src/main/java/org/eclipse/rdf4j/model/Literal.java\nindex 9b56b3d266..7316c966e0 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/Literal.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/Literal.java\n\n@@ -48,7 +48,7 @@ public interface Literal extends Value {\n \t */\n \tpublic IRI getDatatype();\n \n-\tdefault public XmlDatatypeEnum getXmlDatatypeEnum() {\n+\tdefault public XmlDatatype getXmlDatatypeEnum() {\n \t\treturn null;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMzg1MQ==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r479703851", "bodyText": "You will need to remove this before merging.", "author": "jeenbroekstra", "createdAt": "2020-08-30T00:24:02Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/Temp.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.eclipse.rdf4j.model.datatypes;\n+\n+public class Temp {\n+\tpublic static void main(String[] args) {\n+\n+\t\tfor (XmlDatatypeEnum value : XmlDatatypeEnum.values()) {\n+\t\t\tSystem.out.println(value.name() + \"(XSD.\" + value.name() + \", \" +\n+\t\t\t\t\tXMLDatatypeUtil.isPrimitiveDatatype(value.iri) + \" ,\" +\n+\t\t\t\t\tXMLDatatypeUtil.isDurationDatatype(value.iri) + \" ,\" +\n+\t\t\t\t\tXMLDatatypeUtil.isIntegerDatatype(value.iri) + \" ,\" +\n+\t\t\t\t\tXMLDatatypeUtil.isDerivedDatatype(value.iri) + \" ,\" +\n+\t\t\t\t\tXMLDatatypeUtil.isDecimalDatatype(value.iri) + \" ,\" +\n+\t\t\t\t\tXMLDatatypeUtil.isFloatingPointDatatype(value.iri) + \" ,\" +\n+\t\t\t\t\tXMLDatatypeUtil.isCalendarDatatype(value.iri) + \" \" +\n+\t\t\t\t\t\") ,\"\n+\t\t\t);\n+\n+\t\t}\n+\t\t;\n+\n+\t}", "originalCommit": "c40d70d84a878e4421cc70b90eb57fadbce07bec", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e0aa4d4a04934859028c50aae355d2e123d9caa3", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/Temp.java b/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/Temp.java\ndeleted file mode 100644\nindex 5a64054620..0000000000\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/Temp.java\n+++ /dev/null\n\n@@ -1,23 +0,0 @@\n-package org.eclipse.rdf4j.model.datatypes;\n-\n-public class Temp {\n-\tpublic static void main(String[] args) {\n-\n-\t\tfor (XmlDatatypeEnum value : XmlDatatypeEnum.values()) {\n-\t\t\tSystem.out.println(value.name() + \"(XSD.\" + value.name() + \", \" +\n-\t\t\t\t\tXMLDatatypeUtil.isPrimitiveDatatype(value.iri) + \" ,\" +\n-\t\t\t\t\tXMLDatatypeUtil.isDurationDatatype(value.iri) + \" ,\" +\n-\t\t\t\t\tXMLDatatypeUtil.isIntegerDatatype(value.iri) + \" ,\" +\n-\t\t\t\t\tXMLDatatypeUtil.isDerivedDatatype(value.iri) + \" ,\" +\n-\t\t\t\t\tXMLDatatypeUtil.isDecimalDatatype(value.iri) + \" ,\" +\n-\t\t\t\t\tXMLDatatypeUtil.isFloatingPointDatatype(value.iri) + \" ,\" +\n-\t\t\t\t\tXMLDatatypeUtil.isCalendarDatatype(value.iri) + \" \" +\n-\t\t\t\t\t\") ,\"\n-\t\t\t);\n-\n-\t\t}\n-\t\t;\n-\n-\t}\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwNDE2Mw==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r479704163", "bodyText": "I really dislike having the Enum suffix on the class name. How about we move this enum to an inner type of XSD and call it Datatype instead? You'd refer to it as XSD.Datatype.DURATION etc.", "author": "jeenbroekstra", "createdAt": "2020-08-30T00:28:40Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatypeEnum.java", "diffHunk": "@@ -0,0 +1,213 @@\n+package org.eclipse.rdf4j.model.datatypes;\n+\n+import java.util.HashMap;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import javax.xml.datatype.Duration;\n+import javax.xml.datatype.XMLGregorianCalendar;\n+\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.vocabulary.XSD;\n+\n+import com.google.common.collect.Sets;\n+\n+public enum XmlDatatypeEnum {", "originalCommit": "c40d70d84a878e4421cc70b90eb57fadbce07bec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4MjU5Ng==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r496582596", "bodyText": "I followed your recommendation here and it looks pretty decent. Thanks!", "author": "hmottestad", "createdAt": "2020-09-29T09:42:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwNDE2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e0aa4d4a04934859028c50aae355d2e123d9caa3", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatypeEnum.java b/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatype.java\nsimilarity index 91%\nrename from core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatypeEnum.java\nrename to core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatype.java\nindex 9d4586c39a..e8f52bf53e 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatypeEnum.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatype.java\n\n@@ -1,8 +1,6 @@\n package org.eclipse.rdf4j.model.datatypes;\n \n import java.util.HashMap;\n-import java.util.Optional;\n-import java.util.Set;\n \n import javax.xml.datatype.Duration;\n import javax.xml.datatype.XMLGregorianCalendar;\n"}}, {"oid": "4659f61c09eaa252e1c58a1c4eac20d9d0ecd6f3", "url": "https://github.com/eclipse/rdf4j/commit/4659f61c09eaa252e1c58a1c4eac20d9d0ecd6f3", "message": "Merge branch 'develop' into GH-2442-xsd-enum", "committedDate": "2020-09-28T10:08:40Z", "type": "commit"}, {"oid": "e0aa4d4a04934859028c50aae355d2e123d9caa3", "url": "https://github.com/eclipse/rdf4j/commit/e0aa4d4a04934859028c50aae355d2e123d9caa3", "message": "cleanup\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T10:14:53Z", "type": "commit"}, {"oid": "f69e361e400d275fdb1eea81b5d359b8babf65fa", "url": "https://github.com/eclipse/rdf4j/commit/f69e361e400d275fdb1eea81b5d359b8babf65fa", "message": "update benchmark\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T10:54:42Z", "type": "commit"}, {"oid": "0da1a9bd94049efaa9c63dd10a235e6d5dc4faca", "url": "https://github.com/eclipse/rdf4j/commit/0da1a9bd94049efaa9c63dd10a235e6d5dc4faca", "message": "update benchmark\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T10:56:36Z", "type": "commit"}, {"oid": "fc2098c0cdbb17a8a186245f0915b6e40fa3fc43", "url": "https://github.com/eclipse/rdf4j/commit/fc2098c0cdbb17a8a186245f0915b6e40fa3fc43", "message": "skipping instanceof makes everything much faster\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T11:17:44Z", "type": "commit"}, {"oid": "c6da458a39b5388650b452f9ecc79c3a1949b84c", "url": "https://github.com/eclipse/rdf4j/commit/c6da458a39b5388650b452f9ecc79c3a1949b84c", "message": "revert benchmark\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T11:52:24Z", "type": "commit"}, {"oid": "3148734fc32b8067c1f86650a98b9fab7bd20361", "url": "https://github.com/eclipse/rdf4j/commit/3148734fc32b8067c1f86650a98b9fab7bd20361", "message": "more use of xsd enum\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T11:52:37Z", "type": "commit"}, {"oid": "aeb9fb9700ff4d0a0b987264dc89265ed477cbf2", "url": "https://github.com/eclipse/rdf4j/commit/aeb9fb9700ff4d0a0b987264dc89265ed477cbf2", "message": "code cleanup\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T12:19:55Z", "type": "commit"}, {"oid": "8f156d5b5749cc725e5f586e791bf99557dbd5d5", "url": "https://github.com/eclipse/rdf4j/commit/8f156d5b5749cc725e5f586e791bf99557dbd5d5", "message": "cleanup\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T12:21:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkwMjIwMg==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r495902202", "bodyText": "Pre-calculation of new ValueComparator().compare(d1, d2) for all datatype combinations.", "author": "hmottestad", "createdAt": "2020-09-28T12:32:15Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatype.java", "diffHunk": "@@ -0,0 +1,2470 @@\n+package org.eclipse.rdf4j.model.datatypes;\n+\n+import java.util.HashMap;\n+\n+import javax.xml.datatype.Duration;\n+import javax.xml.datatype.XMLGregorianCalendar;\n+\n+import org.eclipse.rdf4j.model.IRI;\n+import org.eclipse.rdf4j.model.vocabulary.XSD;\n+\n+public enum XmlDatatype {\n+\n+\tDURATION(XSD.DURATION, true, true, false, false, false, false, false),\n+\tDATETIME(XSD.DATETIME, true, false, false, false, false, false, true),\n+\tDATETIMESTAMP(XSD.DATETIMESTAMP, false, false, false, true, false, false, true),\n+\tDAYTIMEDURATION(XSD.DAYTIMEDURATION, false, true, false, true, false, false, false),\n+\tTIME(XSD.TIME, true, false, false, false, false, false, true),\n+\tDATE(XSD.DATE, true, false, false, false, false, false, true),\n+\tGYEARMONTH(XSD.GYEARMONTH, true, false, false, false, false, false, true),\n+\tGYEAR(XSD.GYEAR, true, false, false, false, false, false, true),\n+\tGMONTHDAY(XSD.GMONTHDAY, true, false, false, false, false, false, true),\n+\tGDAY(XSD.GDAY, true, false, false, false, false, false, true),\n+\tGMONTH(XSD.GMONTH, true, false, false, false, false, false, true),\n+\tSTRING(XSD.STRING, true, false, false, false, false, false, false),\n+\tBOOLEAN(XSD.BOOLEAN, true, false, false, false, false, false, false),\n+\tBASE64BINARY(XSD.BASE64BINARY, true, false, false, false, false, false, false),\n+\tHEXBINARY(XSD.HEXBINARY, true, false, false, false, false, false, false),\n+\tFLOAT(XSD.FLOAT, true, false, false, false, false, true, false),\n+\tDECIMAL(XSD.DECIMAL, true, false, false, false, true, false, false),\n+\tDOUBLE(XSD.DOUBLE, true, false, false, false, false, true, false),\n+\tANYURI(XSD.ANYURI, true, false, false, false, false, false, false),\n+\tQNAME(XSD.QNAME, true, false, false, false, false, false, false),\n+\tNOTATION(XSD.NOTATION, true, false, false, false, false, false, false),\n+\tNORMALIZEDSTRING(XSD.NORMALIZEDSTRING, false, false, false, true, false, false, false),\n+\tTOKEN(XSD.TOKEN, false, false, false, true, false, false, false),\n+\tLANGUAGE(XSD.LANGUAGE, false, false, false, true, false, false, false),\n+\tNMTOKEN(XSD.NMTOKEN, false, false, false, true, false, false, false),\n+\tNMTOKENS(XSD.NMTOKENS, false, false, false, true, false, false, false),\n+\tNAME(XSD.NAME, false, false, false, true, false, false, false),\n+\tNCNAME(XSD.NCNAME, false, false, false, true, false, false, false),\n+\tID(XSD.ID, false, false, false, true, false, false, false),\n+\tIDREF(XSD.IDREF, false, false, false, true, false, false, false),\n+\tIDREFS(XSD.IDREFS, false, false, false, true, false, false, false),\n+\tENTITY(XSD.ENTITY, false, false, false, true, false, false, false),\n+\tENTITIES(XSD.ENTITIES, false, false, false, true, false, false, false),\n+\tINTEGER(XSD.INTEGER, false, false, true, true, true, false, false),\n+\tLONG(XSD.LONG, false, false, true, true, true, false, false),\n+\tINT(XSD.INT, false, false, true, true, true, false, false),\n+\tSHORT(XSD.SHORT, false, false, true, true, true, false, false),\n+\tBYTE(XSD.BYTE, false, false, true, true, true, false, false),\n+\tNON_POSITIVE_INTEGER(XSD.NON_POSITIVE_INTEGER, false, false, true, true, true, false, false),\n+\tNEGATIVE_INTEGER(XSD.NEGATIVE_INTEGER, false, false, true, true, true, false, false),\n+\tNON_NEGATIVE_INTEGER(XSD.NON_NEGATIVE_INTEGER, false, false, true, true, true, false, false),\n+\tPOSITIVE_INTEGER(XSD.POSITIVE_INTEGER, false, false, true, true, true, false, false),\n+\tUNSIGNED_LONG(XSD.UNSIGNED_LONG, false, false, true, true, true, false, false),\n+\tUNSIGNED_INT(XSD.UNSIGNED_INT, false, false, true, true, true, false, false),\n+\tUNSIGNED_SHORT(XSD.UNSIGNED_SHORT, false, false, true, true, true, false, false),\n+\tUNSIGNED_BYTE(XSD.UNSIGNED_BYTE, false, false, true, true, true, false, false),\n+\tYEARMONTHDURATION(XSD.YEARMONTHDURATION, false, true, false, true, false, false, false);\n+\n+\tprivate final IRI iri;\n+\tprivate final boolean primitive;\n+\tprivate final boolean duration;\n+\tprivate final boolean integer;\n+\tprivate final boolean derived;\n+\tprivate final boolean decimal;\n+\tprivate final boolean floatingPoint;\n+\tprivate final boolean calendar;\n+\n+\t// a lookup table so we don't need to use IRI comparison when comparing two datatypes\n+\tprivate HashMap<XmlDatatype, Integer> valueComparatorLookup;\n+\n+\tXmlDatatype(IRI iri, boolean primitive, boolean duration, boolean integer, boolean derived, boolean decimal,\n+\t\t\tboolean floatingPoint, boolean calendar) {\n+\t\tthis.iri = iri;\n+\t\tthis.primitive = primitive;\n+\t\tthis.duration = duration;\n+\t\tthis.integer = integer;\n+\t\tthis.derived = derived;\n+\t\tthis.decimal = decimal;\n+\t\tthis.floatingPoint = floatingPoint;\n+\t\tthis.calendar = calendar;\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is a primitive XML Schema datatype.\n+\t *\n+\t * @return true if the datatype is a primitive type\n+\t */\n+\tpublic boolean isPrimitiveDatatype() {\n+\t\treturn primitive;\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is a derived XML Schema datatype.\n+\t *\n+\t * @return true if the datatype is a derived type\n+\t */\n+\tpublic boolean isDerivedDatatype() {\n+\t\treturn derived;\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is a built-in XML Schema datatype.\n+\t *\n+\t * @return true if it is a primitive or derived XML Schema type\n+\t */\n+\tpublic boolean isBuiltInDatatype() {\n+\t\treturn isPrimitiveDatatype() || isDerivedDatatype();\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is a numeric datatype, i.e.if it is equal to xsd:float, xsd:double,\n+\t * xsd:decimal or one of the datatypes derived from xsd:decimal.\n+\t *\n+\t * @return true of it is a decimal or floating point type\n+\t */\n+\tpublic boolean isNumericDatatype() {\n+\t\treturn isDecimalDatatype() || isFloatingPointDatatype();\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is equal to xsd:decimal or one of the built-in datatypes that is derived\n+\t * from xsd:decimal.\n+\t *\n+\t * @return true if it is a decimal datatype\n+\t */\n+\tpublic boolean isDecimalDatatype() {\n+\t\treturn decimal;\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is equal to xsd:integer or one of the built-in datatypes that is derived\n+\t * from xsd:integer.\n+\t *\n+\t * @return true if it is an integer type\n+\t */\n+\tpublic boolean isIntegerDatatype() {\n+\t\treturn integer;\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is equal to xsd:float or xsd:double.\n+\t *\n+\t * @return true if it is a floating point type\n+\t */\n+\tpublic boolean isFloatingPointDatatype() {\n+\t\treturn floatingPoint;\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is equal to xsd:dateTime, xsd:date, xsd:time, xsd:gYearMonth, xsd:gMonthDay,\n+\t * xsd:gYear, xsd:gMonth or xsd:gDay.These are the primitive datatypes that represent dates and/or times.\n+\t *\n+\t * @see XMLGregorianCalendar\n+\t * @return true if it is a calendar type\n+\t */\n+\tpublic boolean isCalendarDatatype() {\n+\t\treturn calendar;\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is equal to xsd:duration, xsd:dayTimeDuration, xsd:yearMonthDuration. These\n+\t * are the datatypes that represents durations.\n+\t *\n+\t * @see Duration\n+\t * @return true if it is a duration type\n+\t */\n+\tpublic boolean isDurationDatatype() {\n+\t\treturn duration;\n+\t}\n+\n+\t/**\n+\t * Checks whether the supplied datatype is ordered.The values of an ordered datatype can be compared to each other\n+\t * using operators like <tt>&lt;</tt> and <tt>&gt;</tt>.\n+\t *\n+\t * @return true if the datatype is ordered\n+\t */\n+\tpublic boolean isOrderedDatatype() {\n+\t\treturn isNumericDatatype() || isCalendarDatatype();\n+\t}\n+\n+\tstatic HashMap<IRI, XmlDatatype> reverseLookup = new HashMap<>();\n+\n+\tstatic {\n+\t\tfor (XmlDatatype value : XmlDatatype.values()) {\n+\t\t\treverseLookup.put(value.iri, value);\n+\t\t}\n+\t}\n+\n+\tpublic static XmlDatatype from(IRI datatype) {\n+\t\treturn reverseLookup.get(datatype);\n+\t}\n+\n+\tpublic IRI getIri() {\n+\t\treturn iri;\n+\t}\n+\n+\tpublic int valueComparatorTo(XmlDatatype compareTo) {\n+\t\tif (valueComparatorLookup == null) {\n+\t\t\tcreateLookupTable();\n+\t\t}\n+\n+\t\treturn valueComparatorLookup.get(compareTo);\n+\t}\n+\n+\tprivate void createLookupTable() {\n+\t\tHashMap<XmlDatatype, Integer> valueComparatorLookup = new HashMap<>();\n+\n+\t\tif (this == DURATION) {\n+\t\t\tvalueComparatorLookup.put(DURATION, 0);\n+\t\t\tvalueComparatorLookup.put(DATETIME, 20);\n+\t\t\tvalueComparatorLookup.put(DATETIMESTAMP, 20);\n+\t\t\tvalueComparatorLookup.put(DAYTIMEDURATION, 20);\n+\t\t\tvalueComparatorLookup.put(TIME, -16);\n+\t\t\tvalueComparatorLookup.put(DATE, 20);\n+\t\t\tvalueComparatorLookup.put(GYEARMONTH, -3);\n+\t\t\tvalueComparatorLookup.put(GYEAR, -3);\n+\t\t\tvalueComparatorLookup.put(GMONTHDAY, -3);\n+\t\t\tvalueComparatorLookup.put(GDAY, -3);\n+\t\t\tvalueComparatorLookup.put(GMONTH, -3);\n+\t\t\tvalueComparatorLookup.put(STRING, -15);\n+\t\t\tvalueComparatorLookup.put(BOOLEAN, 2);\n+\t\t\tvalueComparatorLookup.put(BASE64BINARY, 2);\n+\t\t\tvalueComparatorLookup.put(HEXBINARY, -4);\n+\t\t\tvalueComparatorLookup.put(FLOAT, -2);\n+\t\t\tvalueComparatorLookup.put(DECIMAL, 16);", "originalCommit": "8f156d5b5749cc725e5f586e791bf99557dbd5d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b9b893260636ef2f2cbf717df76e93e41377adf4", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatype.java b/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatype.java\nindex d12daf810e..0537961f6a 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatype.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/datatypes/XmlDatatype.java\n\n@@ -1,6 +1,8 @@\n package org.eclipse.rdf4j.model.datatypes;\n \n import java.util.HashMap;\n+import java.util.IdentityHashMap;\n+import java.util.Map;\n \n import javax.xml.datatype.Duration;\n import javax.xml.datatype.XMLGregorianCalendar;\n"}}, {"oid": "86dcbd6214c2dadb1ed3c7baa1898a50692b9734", "url": "https://github.com/eclipse/rdf4j/commit/86dcbd6214c2dadb1ed3c7baa1898a50692b9734", "message": "fix test and cleanup\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T12:39:55Z", "type": "commit"}, {"oid": "b9b893260636ef2f2cbf717df76e93e41377adf4", "url": "https://github.com/eclipse/rdf4j/commit/b9b893260636ef2f2cbf717df76e93e41377adf4", "message": "bug fix and optimisations\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T12:51:49Z", "type": "commit"}, {"oid": "17014dbdbc2e5b9f2ab873b8c3ebafb83f8dc61f", "url": "https://github.com/eclipse/rdf4j/commit/17014dbdbc2e5b9f2ab873b8c3ebafb83f8dc61f", "message": "code cleanup\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T12:55:27Z", "type": "commit"}, {"oid": "40daff66515b7ab45fd5d6809b5936597d4498fe", "url": "https://github.com/eclipse/rdf4j/commit/40daff66515b7ab45fd5d6809b5936597d4498fe", "message": "remove lookup table\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T13:14:29Z", "type": "commit"}, {"oid": "d72ca22ff09b517b3836fe63714fd71219d1b923", "url": "https://github.com/eclipse/rdf4j/commit/d72ca22ff09b517b3836fe63714fd71219d1b923", "message": "cleanup\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-28T15:27:17Z", "type": "commit"}, {"oid": "1f0863de5c39f42f4df689743a416409c38f2514", "url": "https://github.com/eclipse/rdf4j/commit/1f0863de5c39f42f4df689743a416409c38f2514", "message": "GH-2442 use optionals and some code cleanup and renaming", "committedDate": "2020-09-29T09:25:56Z", "type": "commit"}, {"oid": "d85a4a409b1c0afc8f512efc6933a637202933eb", "url": "https://github.com/eclipse/rdf4j/commit/d85a4a409b1c0afc8f512efc6933a637202933eb", "message": "refactorting and renaming", "committedDate": "2020-09-29T09:36:18Z", "type": "commit"}, {"oid": "57c41394373906d9d31ce99d820df0e151da222c", "url": "https://github.com/eclipse/rdf4j/commit/57c41394373906d9d31ce99d820df0e151da222c", "message": "docs", "committedDate": "2020-09-29T09:41:16Z", "type": "commit"}, {"oid": "cbb0d4767950e4a12c9c794574dd7c77ce106db0", "url": "https://github.com/eclipse/rdf4j/commit/cbb0d4767950e4a12c9c794574dd7c77ce106db0", "message": "bug fix", "committedDate": "2020-09-29T10:31:27Z", "type": "commit"}, {"oid": "a785950c4b25cdcfd4452a9b7d437b31786b5407", "url": "https://github.com/eclipse/rdf4j/commit/a785950c4b25cdcfd4452a9b7d437b31786b5407", "message": "added isResource() method", "committedDate": "2020-09-29T11:51:31Z", "type": "commit"}, {"oid": "0f7aa2365e2b9c180b6b357d4a3058ec8b1babac", "url": "https://github.com/eclipse/rdf4j/commit/0f7aa2365e2b9c180b6b357d4a3058ec8b1babac", "message": "added another benchmark\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-29T14:13:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEzMjIwMg==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r497132202", "bodyText": "Spelling: it should be isBNode (capital N)", "author": "jeenbroekstra", "createdAt": "2020-09-29T23:20:46Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/BNode.java", "diffHunk": "@@ -40,4 +40,24 @@\n \t */\n \t@Override\n \tpublic int hashCode();\n+\n+\t@Override\n+\tdefault boolean isBnode() {", "originalCommit": "0f7aa2365e2b9c180b6b357d4a3058ec8b1babac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "940b0f774c2a63287d07ce553c4d79ef39e5189a", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/BNode.java b/core/model/src/main/java/org/eclipse/rdf4j/model/BNode.java\nindex f6d8f97d9c..68f84ca83e 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/BNode.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/BNode.java\n\n@@ -42,7 +42,7 @@ public interface BNode extends Resource {\n \tpublic int hashCode();\n \n \t@Override\n-\tdefault boolean isBnode() {\n+\tdefault boolean isBNode() {\n \t\treturn true;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEzNDM3Mg==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r497134372", "bodyText": "I suggest we move these defaults to Value instead, and then have each sub-interface override only the one for which the result should be true.", "author": "jeenbroekstra", "createdAt": "2020-09-29T23:23:48Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/IRI.java", "diffHunk": "@@ -72,4 +72,24 @@\n \t */\n \t@Override\n \tpublic int hashCode();\n+\n+\t@Override\n+\tdefault boolean isBnode() {\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tdefault boolean isIRI() {\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\tdefault boolean isLiteral() {\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tdefault boolean isTriple() {\n+\t\treturn false;\n+\t}", "originalCommit": "0f7aa2365e2b9c180b6b357d4a3058ec8b1babac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2ODIzNw==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r497268237", "bodyText": "I prefer to have Value have functional defaults (eg. instanceof), but it wouldn't actually make a difference I think.", "author": "hmottestad", "createdAt": "2020-09-30T06:23:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEzNDM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "940b0f774c2a63287d07ce553c4d79ef39e5189a", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/IRI.java b/core/model/src/main/java/org/eclipse/rdf4j/model/IRI.java\nindex 0291052e76..b6acd222c5 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/IRI.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/IRI.java\n\n@@ -74,7 +74,7 @@ public interface IRI extends URI, Resource {\n \tpublic int hashCode();\n \n \t@Override\n-\tdefault boolean isBnode() {\n+\tdefault boolean isBNode() {\n \t\treturn false;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE0MDc1NA==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r497140754", "bodyText": "Missing curly braces.", "author": "jeenbroekstra", "createdAt": "2020-09-29T23:32:45Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java", "diffHunk": "@@ -159,11 +192,8 @@ public boolean equals(Object o) {\n \t\t\t\treturn getLanguage().get().equalsIgnoreCase(other.getLanguage().get());\n \t\t\t}\n \t\t\t// If only one has a language, then return false\n-\t\t\telse if (getLanguage().isPresent() || other.getLanguage().isPresent()) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\n-\t\t\treturn true;\n+\t\t\telse\n+\t\t\t\treturn !getLanguage().isPresent() && !other.getLanguage().isPresent();", "originalCommit": "0f7aa2365e2b9c180b6b357d4a3058ec8b1babac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "770aebd6110a882f8da2b813f95ea99f5c79d69a", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java\nindex 8ecc9a2cdb..542b1fcd11 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java\n\n@@ -192,8 +192,9 @@ public class SimpleLiteral implements Literal {\n \t\t\t\treturn getLanguage().get().equalsIgnoreCase(other.getLanguage().get());\n \t\t\t}\n \t\t\t// If only one has a language, then return false\n-\t\t\telse\n+\t\t\telse {\n \t\t\t\treturn !getLanguage().isPresent() && !other.getLanguage().isPresent();\n+\t\t\t}\n \t\t}\n \n \t\treturn false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE0Mjc1Nw==", "url": "https://github.com/eclipse/rdf4j/pull/2477#discussion_r497142757", "bodyText": "It's a little odd to be using an Optional value that can also be null. I understand why it's done (and the comment also explains it well), but to make it glaringly obvbious perhaps initialize the value as null here as well, explicitly.", "author": "jeenbroekstra", "createdAt": "2020-09-29T23:35:35Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java", "diffHunk": "@@ -54,6 +54,12 @@\n \t */\n \tprivate IRI datatype;\n \n+\t// The XSD.Datatype enum that matches the datatype IRI for this literal. This value is calculated on the fly and\n+\t// cached in this variable. `null` means we have not calculated and cached this value yet. We are not worried about\n+\t// race conditions, since calculating this value multiple times must lead to the same effective result. Transient is\n+\t// only used to stop this field from be serialised.\n+\ttransient private Optional<XSD.Datatype> xsdDatatype;", "originalCommit": "0f7aa2365e2b9c180b6b357d4a3058ec8b1babac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "940b0f774c2a63287d07ce553c4d79ef39e5189a", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java\nindex 8ecc9a2cdb..a1de33d80d 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/impl/SimpleLiteral.java\n\n@@ -58,7 +58,7 @@ public class SimpleLiteral implements Literal {\n \t// cached in this variable. `null` means we have not calculated and cached this value yet. We are not worried about\n \t// race conditions, since calculating this value multiple times must lead to the same effective result. Transient is\n \t// only used to stop this field from be serialised.\n-\ttransient private Optional<XSD.Datatype> xsdDatatype;\n+\ttransient private Optional<XSD.Datatype> xsdDatatype = null;\n \n \t/*--------------*\n \t * Constructors *\n"}}, {"oid": "d3617937e55bed03ad74c8537a0b26dcb13d2e13", "url": "https://github.com/eclipse/rdf4j/commit/d3617937e55bed03ad74c8537a0b26dcb13d2e13", "message": "Merge branch 'develop' into GH-2442-xsd-enum", "committedDate": "2020-09-30T06:13:34Z", "type": "commit"}, {"oid": "770aebd6110a882f8da2b813f95ea99f5c79d69a", "url": "https://github.com/eclipse/rdf4j/commit/770aebd6110a882f8da2b813f95ea99f5c79d69a", "message": "review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-30T06:17:43Z", "type": "commit"}, {"oid": "940b0f774c2a63287d07ce553c4d79ef39e5189a", "url": "https://github.com/eclipse/rdf4j/commit/940b0f774c2a63287d07ce553c4d79ef39e5189a", "message": "review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-30T06:25:40Z", "type": "commit"}, {"oid": "d8cc22b2aa599c75f71680bee218c3a81b1acc87", "url": "https://github.com/eclipse/rdf4j/commit/d8cc22b2aa599c75f71680bee218c3a81b1acc87", "message": "trigger CI\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-30T07:26:48Z", "type": "commit"}, {"oid": "5333e796c6ab6b54b7b2fd1f3bd3541cd7c50d93", "url": "https://github.com/eclipse/rdf4j/commit/5333e796c6ab6b54b7b2fd1f3bd3541cd7c50d93", "message": "Merge branch 'develop' into GH-2442-xsd-enum", "committedDate": "2020-09-30T07:27:18Z", "type": "commit"}, {"oid": "20898a2ad3d0e053980ed7f567f7d56a2fd3c879", "url": "https://github.com/eclipse/rdf4j/commit/20898a2ad3d0e053980ed7f567f7d56a2fd3c879", "message": "review\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-30T07:56:48Z", "type": "commit"}, {"oid": "5ccf7caed7f5a25aac6d23d622153538597877a1", "url": "https://github.com/eclipse/rdf4j/commit/5ccf7caed7f5a25aac6d23d622153538597877a1", "message": "GH-2442 add sorting benchmark to memory store\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-30T08:12:05Z", "type": "commit"}, {"oid": "2f9ffe7f60a996c0e8930adfe3b96f1d5b2c02a7", "url": "https://github.com/eclipse/rdf4j/commit/2f9ffe7f60a996c0e8930adfe3b96f1d5b2c02a7", "message": "Merge branch 'GH-2442-benchmark-for-sorting' into GH-2442-xsd-enum", "committedDate": "2020-09-30T08:12:32Z", "type": "commit"}, {"oid": "e831881c87a177fd5f1dbb67a2d499719705f231", "url": "https://github.com/eclipse/rdf4j/commit/e831881c87a177fd5f1dbb67a2d499719705f231", "message": "also use optimizations in LexicalValueComparator\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-30T09:24:33Z", "type": "commit"}, {"oid": "4181ccb85158947a358b8e2f6e11fc268a5193c0", "url": "https://github.com/eclipse/rdf4j/commit/4181ccb85158947a358b8e2f6e11fc268a5193c0", "message": "sort all data in query\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-30T10:29:30Z", "type": "commit"}, {"oid": "3ea7807fa6e6c5b9b27c9a7b9ddf256e982975c1", "url": "https://github.com/eclipse/rdf4j/commit/3ea7807fa6e6c5b9b27c9a7b9ddf256e982975c1", "message": "Merge branch 'GH-2442-benchmark-for-sorting' into GH-2442-xsd-enum", "committedDate": "2020-09-30T10:29:44Z", "type": "commit"}, {"oid": "f45dc4187106de258262571c03bfd455696e819f", "url": "https://github.com/eclipse/rdf4j/commit/f45dc4187106de258262571c03bfd455696e819f", "message": "javadocs\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-30T10:55:29Z", "type": "commit"}]}