{"pr_number": 1910, "pr_title": "GH-1484: RDF* <-> RDF reification conversion utility classes and RDF* -> RDF reification support in RDF serializers", "pr_createdAt": "2020-02-07T14:33:17Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/1910", "timeline": [{"oid": "b7822a32f0d5215342bd9450fa15a76b84739634", "url": "https://github.com/eclipse/rdf4j/commit/b7822a32f0d5215342bd9450fa15a76b84739634", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG*\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:21:01Z", "type": "commit"}, {"oid": "77d71ace7fd04db6d6cb05cad2a8a852d1ff95ca", "url": "https://github.com/eclipse/rdf4j/commit/77d71ace7fd04db6d6cb05cad2a8a852d1ff95ca", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG* (addressed editorial comments)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:21:01Z", "type": "commit"}, {"oid": "c7c2967caa3c962bf35c2300121c6ecf67670988", "url": "https://github.com/eclipse/rdf4j/commit/c7c2967caa3c962bf35c2300121c6ecf67670988", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG* (handling of Triple in some classes that rely on Value not having more subinterfaces)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:21:01Z", "type": "commit"}, {"oid": "9696ec47afea082d09c49f7346daf63e186aaaaa", "url": "https://github.com/eclipse/rdf4j/commit/9696ec47afea082d09c49f7346daf63e186aaaaa", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG* (fixed parsing of language tags before closing >> and no space)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:21:01Z", "type": "commit"}, {"oid": "21d9439c31794f582630f0a1cec497ef19b037ac", "url": "https://github.com/eclipse/rdf4j/commit/21d9439c31794f582630f0a1cec497ef19b037ac", "message": "GH-1484: Minimal RDF* model and parser/writers for Turtle* and TriG* (updated version of trigstar and turtlestar after rebase to 3.2.0-SNAPSHOT)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-06T14:23:22Z", "type": "commit"}, {"oid": "e7283219fddc2a2129d1ff84b56c688a684550bc", "url": "https://github.com/eclipse/rdf4j/commit/e7283219fddc2a2129d1ff84b56c688a684550bc", "message": "Merge pull request #1868 from avataar/issues/#1484-rdfstar-api-proposal\n\nGH-1484 rdfstar api proposal", "committedDate": "2020-02-07T12:51:24Z", "type": "commit"}, {"oid": "84afe7743cda3f37dffa2d4a8b0beb76764977a6", "url": "https://github.com/eclipse/rdf4j/commit/84afe7743cda3f37dffa2d4a8b0beb76764977a6", "message": "GH-1484: RDF* <-> RDF reification conversion utility classes and RDF* -> RDF reification support in RDF serializers\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-07T14:30:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY3MTY2Ng==", "url": "https://github.com/eclipse/rdf4j/pull/1910#discussion_r376671666", "bodyText": "Won't this result in different BNodes for the same triple? For example, when we have sth like this:\n <<ex:s1 ex:p1 ex:o1>> rdfs:label \"statement 1\"; \n                       rdfs:comment \"it's a statement!\" .", "author": "jeenbroekstra", "createdAt": "2020-02-08T01:00:24Z", "path": "core/model/src/main/java/org/eclipse/rdf4j/model/util/Statements.java", "diffHunk": "@@ -121,4 +124,92 @@ public static boolean isSameTriple(Statement st1, Statement st2) {\n \t\treturn st1.getPredicate().equals(st2.getPredicate()) && st1.getSubject().equals(st2.getSubject())\n \t\t\t\t&& st1.getObject().equals(st2.getObject());\n \t}\n+\n+\t/**\n+\t * Converts the supplied RDF* statement to RDF reification statements, and sends the resultant statements to the\n+\t * supplied consumer. If the supplied statement is not RDF* it will be sent to the consumer as is.\n+\t * <p>\n+\t * The statements needed to represent reification will use blank nodes.\n+\t *\n+\t * @param st       the {@link Statement} to convert.\n+\t * @param consumer the {@link Consumer} function for the produced statements.\n+\t */\n+\tpublic static void convertRDFStarToReification(Statement st, Consumer<Statement> consumer) {\n+\t\tconvertRDFStarToReification(SimpleValueFactory.getInstance(), st, consumer);\n+\t}\n+\n+\t/**\n+\t * Converts the supplied RDF* statement to RDF reification statements, and sends the resultant statements to the\n+\t * supplied consumer. If the supplied statement is not RDF* it will be sent to the consumer as is.\n+\t * <p>\n+\t * The statements needed to represent reification will use blank nodes.\n+\t * <p>\n+\t * The supplied value factory is used to create all new statements and blank nodes.\n+\t *\n+\t * @param vf       the {@link ValueFactory} to use for creating statements.\n+\t * @param st       the {@link Statement} to convert.\n+\t * @param consumer the {@link Consumer} function for the produced statements.\n+\t */\n+\tpublic static void convertRDFStarToReification(ValueFactory vf, Statement st, Consumer<Statement> consumer) {\n+\t\tconvertRDFStarToReification(vf, (t) -> vf.createBNode(), st, consumer);", "originalCommit": "84afe7743cda3f37dffa2d4a8b0beb76764977a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk1NTk0Ng==", "url": "https://github.com/eclipse/rdf4j/pull/1910#discussion_r376955946", "bodyText": "You are right. As I started from Statement I didn't really consider this in the context of e.g. Model. Even though the converted data will be OK (you can reach the subject/predicate/object of the rdf:Statement) I agree it would be best to have a consistent mapping for identical triples. I just committed a fix that uses the triple's stringValue() + base64 encoding to derive the BNode ID. It uses SimpleValueFactory (before it used the passed value factory) to ensure that you get the ID you want. I also extended the tests to cover this case.", "author": "avataar", "createdAt": "2020-02-10T09:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY3MTY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5861099b8e8e0f1239ba699590d9f6330e236587", "chunk": "diff --git a/core/model/src/main/java/org/eclipse/rdf4j/model/util/Statements.java b/core/model/src/main/java/org/eclipse/rdf4j/model/util/Statements.java\nindex bc452dd3a6..aa583cd7fe 100644\n--- a/core/model/src/main/java/org/eclipse/rdf4j/model/util/Statements.java\n+++ b/core/model/src/main/java/org/eclipse/rdf4j/model/util/Statements.java\n\n@@ -151,7 +163,7 @@ public class Statements {\n \t * @param consumer the {@link Consumer} function for the produced statements.\n \t */\n \tpublic static void convertRDFStarToReification(ValueFactory vf, Statement st, Consumer<Statement> consumer) {\n-\t\tconvertRDFStarToReification(vf, (t) -> vf.createBNode(), st, consumer);\n+\t\tconvertRDFStarToReification(vf, TRIPLE_BNODE_MAPPER, st, consumer);\n \t}\n \n \t/**\n"}}, {"oid": "5861099b8e8e0f1239ba699590d9f6330e236587", "url": "https://github.com/eclipse/rdf4j/commit/5861099b8e8e0f1239ba699590d9f6330e236587", "message": "GH-1484: RDF* <-> RDF reification conversion utility classes and RDF* -> RDF reification support in RDF serializers (changed default triple-to-bnode mapper to produce the same bnode for the same triple on every call)\n\nSigned-off-by: Pavel Mihaylov <pavel@ontotext.com>", "committedDate": "2020-02-10T09:42:19Z", "type": "commit"}]}