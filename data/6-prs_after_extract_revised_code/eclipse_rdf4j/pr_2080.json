{"pr_number": 2080, "pr_title": "GH-2078 property path negation and inversion", "pr_createdAt": "2020-04-08T09:09:36Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2080", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3NTUwMQ==", "url": "https://github.com/eclipse/rdf4j/pull/2080#discussion_r405375501", "bodyText": "@jeenbroekstra I'm wondering about these tests suites.....couldn't find that they were being run anywhere, created my own classes to run them, quite a few of them are failing.....do we run these somewhere else? Or have we abandoned them?", "author": "hmottestad", "createdAt": "2020-04-08T09:11:13Z", "path": "compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL11QueryTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.sail.memory;\n+\n+import junit.framework.Test;\n+import org.eclipse.rdf4j.query.Dataset;\n+import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQL11ManifestTest;\n+import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQLQueryTest;\n+import org.eclipse.rdf4j.repository.Repository;\n+import org.eclipse.rdf4j.repository.sail.SailRepository;\n+\n+import java.net.URL;\n+\n+public class MemorySPARQL11QueryTest extends SPARQLQueryTest {\n+\n+\tpublic static Test suite() throws Exception {\n+\n+\t\tURL manifestUrl = SPARQL11ManifestTest.class.getResource(\"/testcases-sparql-1.1/manifest-evaluation.ttl\");\n+", "originalCommit": "474c966a6de74469a9dc0d874e60a25e3fa1395f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2NTY4OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2080#discussion_r405865689", "bodyText": "We have not. They are executed by the classes in package org.eclipse.rdf4j.query.parser.sparql.manifest, part of the sparql-compliance module. I am not sure why they would be failing on your execution, they don't on mine (at least not on the master branch, I haven't looked at your parser changes yet).", "author": "jeenbroekstra", "createdAt": "2020-04-08T23:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3NTUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2OTA3OA==", "url": "https://github.com/eclipse/rdf4j/pull/2080#discussion_r405869078", "bodyText": "Ah, hang on, I see what you mean, you're talking specifically about the testcases-sparql-1.1 directory, as opposed to testcases-sparql-1.1-w3c.\nHm, yes, these look abandoned. From the top of my head these were tests I used while SPARQL was in working draft stage (so before there was a complete official W3C test suite), and I think we initially tried to use it to capture our own additional test cases, but it turned out to be difficult to maintain in parallel with the official W3C suite (and using manifests is cumbersome for running individual tests, as you know). So we switched to using only the official manifest test suite, and for our own additional test cases just adding test cases to the ComplexSPARQLQueryTest class (which to be frank also needs a cleanup - I'd like it split up in several test classes to sort of group similar issues together, see #2081).", "author": "jeenbroekstra", "createdAt": "2020-04-08T23:19:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3NTUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2OTkyNQ==", "url": "https://github.com/eclipse/rdf4j/pull/2080#discussion_r405869925", "bodyText": "I would not worry about these for now - this needs a cleanup and perhaps there are tests in there that we shouldn't abandon, but it's also likely that quite a few of these tests are based on a draft stage of SPARQL, where the later behavior in the standard changed (as a case in point a lot of the property path cases cover things like ex:prop{1,2} which was a draft proposal at one point, but never made it into the standard).", "author": "jeenbroekstra", "createdAt": "2020-04-08T23:22:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3NTUwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "de8f9d89dce861688bbf8a29611d2a8bed616134", "chunk": "diff --git a/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL11QueryTest.java b/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL11QueryTest.java\ndeleted file mode 100644\nindex ac3713a2ef..0000000000\n--- a/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL11QueryTest.java\n+++ /dev/null\n\n@@ -1,59 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Eclipse RDF4J contributors.\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Distribution License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/org/documents/edl-v10.php.\n- *******************************************************************************/\n-package org.eclipse.rdf4j.sail.memory;\n-\n-import junit.framework.Test;\n-import org.eclipse.rdf4j.query.Dataset;\n-import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQL11ManifestTest;\n-import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQLQueryTest;\n-import org.eclipse.rdf4j.repository.Repository;\n-import org.eclipse.rdf4j.repository.sail.SailRepository;\n-\n-import java.net.URL;\n-\n-public class MemorySPARQL11QueryTest extends SPARQLQueryTest {\n-\n-\tpublic static Test suite() throws Exception {\n-\n-\t\tURL manifestUrl = SPARQL11ManifestTest.class.getResource(\"/testcases-sparql-1.1/manifest-evaluation.ttl\");\n-\n-\t\treturn SPARQL11ManifestTest.suite(new Factory() {\n-\n-\t\t\t@Override\n-\t\t\tpublic SPARQLQueryTest createSPARQLQueryTest(String testURI, String name, String queryFileURL,\n-\t\t\t\t\tString resultFileURL, Dataset dataSet, boolean laxCardinality) {\n-\t\t\t\treturn new MemorySPARQL11QueryTest(testURI, name, queryFileURL, resultFileURL, dataSet,\n-\t\t\t\t\t\tlaxCardinality);\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic SPARQLQueryTest createSPARQLQueryTest(String testURI, String name, String queryFileURL,\n-\t\t\t\t\tString resultFileURL, Dataset dataSet, boolean laxCardinality, boolean checkOrder) {\n-\t\t\t\tString[] ignoredTests = {};\n-\n-\t\t\t\treturn new MemorySPARQL11QueryTest(testURI, name, queryFileURL, resultFileURL, dataSet,\n-\t\t\t\t\t\tlaxCardinality, checkOrder, ignoredTests);\n-\t\t\t}\n-\t\t}, manifestUrl.toString(), false);\n-\t}\n-\n-\tpublic MemorySPARQL11QueryTest(String testURI, String name, String queryFileURL, String resultFileURL,\n-\t\t\tDataset dataSet, boolean laxCardinality, String... ignoredTests) {\n-\t\tsuper(testURI, name, queryFileURL, resultFileURL, dataSet, laxCardinality, ignoredTests);\n-\t}\n-\n-\tpublic MemorySPARQL11QueryTest(String testURI, String name, String queryFileURL, String resultFileURL,\n-\t\t\tDataset dataSet, boolean laxCardinality, boolean checkOrder, String... ignoredTests) {\n-\t\tsuper(testURI, name, queryFileURL, resultFileURL, dataSet, laxCardinality, checkOrder, ignoredTests);\n-\t}\n-\n-\t@Override\n-\tprotected Repository newRepository() {\n-\t\treturn new SailRepository(new MemoryStore());\n-\t}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3NTk5OA==", "url": "https://github.com/eclipse/rdf4j/pull/2080#discussion_r405375998", "bodyText": "Going to need help with fixing the underlying issue for this test.", "author": "hmottestad", "createdAt": "2020-04-08T09:11:59Z", "path": "core/queryparser/sparql/src/test/java/org/eclipse/rdf4j/query/parser/sparql/SPARQLParserTest.java", "diffHunk": "@@ -283,4 +287,34 @@ public void testLongUnicode() throws Exception {\n \t\tassertEquals(\"\\uD83D\\uDE1F\", lines[lines.length - 1].replaceAll(\".*\\\"(.*)\\\".*\", \"$1\"));\n \t}\n \n+\t@Test\n+\tpublic void testWildCardPathFixedEnd() {\n+\n+\t\tString query = \"PREFIX : <http://example.org/>\\n ASK {:IBM ((:|!:)|(^:|!^:))* :Jane.} \";\n+\n+\t\tParsedQuery parsedQuery = parser.parseQuery(query, null);\n+\n+\t\t// parsing should not throw exception\n+\t\tTupleExpr tupleExpr = parsedQuery.getTupleExpr();\n+\n+\t}\n+\n+\t@Test\n+\tpublic void testWildCardPathOpenEnd() {\n+\n+\t\tString query = \"PREFIX : <http://example.org/>\\n ASK {:IBM ^(:|!:) ?jane.} \";\n+\n+\t\tParsedQuery parsedQuery = parser.parseQuery(query, null);\n+\t\tTupleExpr tupleExpr = parsedQuery.getTupleExpr();\n+\n+\t\tSlice slice = (Slice) tupleExpr;\n+\t\tUnion union = (Union) slice.getArg();\n+\n+\t\tVar leftSubjectVar = ((StatementPattern) union.getLeftArg()).getSubjectVar();\n+\t\tVar rightSubjectVar = ((StatementPattern) ((Filter) union.getRightArg()).getArg()).getSubjectVar();\n+\n+\t\tassertEquals(leftSubjectVar, rightSubjectVar);\n+", "originalCommit": "474c966a6de74469a9dc0d874e60a25e3fa1395f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5NzU5Ng==", "url": "https://github.com/eclipse/rdf4j/pull/2080#discussion_r405897596", "bodyText": "Yes, unfortunately this code is the worst kind of god-class. I think I see what needs to be fixed, but I'll need a bit of time.", "author": "jeenbroekstra", "createdAt": "2020-04-09T00:56:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3NTk5OA=="}], "type": "inlineReview", "revised_code": {"commit": "e3980577f68bbadbd831a917815dc27b25db685b", "chunk": "diff --git a/core/queryparser/sparql/src/test/java/org/eclipse/rdf4j/query/parser/sparql/SPARQLParserTest.java b/core/queryparser/sparql/src/test/java/org/eclipse/rdf4j/query/parser/sparql/SPARQLParserTest.java\nindex 46aca85b10..fce261e842 100644\n--- a/core/queryparser/sparql/src/test/java/org/eclipse/rdf4j/query/parser/sparql/SPARQLParserTest.java\n+++ b/core/queryparser/sparql/src/test/java/org/eclipse/rdf4j/query/parser/sparql/SPARQLParserTest.java\n\n@@ -300,7 +300,7 @@ public class SPARQLParserTest {\n \t}\n \n \t@Test\n-\tpublic void testWildCardPathOpenEnd() {\n+\tpublic void testWildCardPathPushNegation() {\n \n \t\tString query = \"PREFIX : <http://example.org/>\\n ASK {:IBM ^(:|!:) ?jane.} \";\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3MDM0NQ==", "url": "https://github.com/eclipse/rdf4j/pull/2080#discussion_r405870345", "bodyText": "This duplicates org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQL12QueryTest.", "author": "jeenbroekstra", "createdAt": "2020-04-08T23:23:32Z", "path": "compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL12QueryTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.sail.memory;\n+\n+import junit.framework.Test;\n+import org.eclipse.rdf4j.query.Dataset;\n+import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQL11ManifestTest;\n+import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQLQueryTest;\n+import org.eclipse.rdf4j.repository.Repository;\n+import org.eclipse.rdf4j.repository.sail.SailRepository;\n+\n+import java.net.URL;\n+\n+public class MemorySPARQL12QueryTest extends SPARQLQueryTest {", "originalCommit": "474c966a6de74469a9dc0d874e60a25e3fa1395f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "de8f9d89dce861688bbf8a29611d2a8bed616134", "chunk": "diff --git a/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL12QueryTest.java b/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL12QueryTest.java\ndeleted file mode 100644\nindex 14bd6ffba4..0000000000\n--- a/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL12QueryTest.java\n+++ /dev/null\n\n@@ -1,59 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Eclipse RDF4J contributors.\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Distribution License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/org/documents/edl-v10.php.\n- *******************************************************************************/\n-package org.eclipse.rdf4j.sail.memory;\n-\n-import junit.framework.Test;\n-import org.eclipse.rdf4j.query.Dataset;\n-import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQL11ManifestTest;\n-import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQLQueryTest;\n-import org.eclipse.rdf4j.repository.Repository;\n-import org.eclipse.rdf4j.repository.sail.SailRepository;\n-\n-import java.net.URL;\n-\n-public class MemorySPARQL12QueryTest extends SPARQLQueryTest {\n-\n-\tpublic static Test suite() throws Exception {\n-\n-\t\tURL manifestUrl = SPARQL11ManifestTest.class.getResource(\"/testcases-sparql-1.2/manifest-all.ttl\");\n-\n-\t\treturn SPARQL11ManifestTest.suite(new Factory() {\n-\n-\t\t\t@Override\n-\t\t\tpublic SPARQLQueryTest createSPARQLQueryTest(String testURI, String name, String queryFileURL,\n-\t\t\t\t\tString resultFileURL, Dataset dataSet, boolean laxCardinality) {\n-\t\t\t\treturn new MemorySPARQL12QueryTest(testURI, name, queryFileURL, resultFileURL, dataSet,\n-\t\t\t\t\t\tlaxCardinality);\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic SPARQLQueryTest createSPARQLQueryTest(String testURI, String name, String queryFileURL,\n-\t\t\t\t\tString resultFileURL, Dataset dataSet, boolean laxCardinality, boolean checkOrder) {\n-\t\t\t\tString[] ignoredTests = {};\n-\n-\t\t\t\treturn new MemorySPARQL12QueryTest(testURI, name, queryFileURL, resultFileURL, dataSet,\n-\t\t\t\t\t\tlaxCardinality, checkOrder, ignoredTests);\n-\t\t\t}\n-\t\t}, manifestUrl.toString(), false);\n-\t}\n-\n-\tpublic MemorySPARQL12QueryTest(String testURI, String name, String queryFileURL, String resultFileURL,\n-\t\t\tDataset dataSet, boolean laxCardinality, String... ignoredTests) {\n-\t\tsuper(testURI, name, queryFileURL, resultFileURL, dataSet, laxCardinality, ignoredTests);\n-\t}\n-\n-\tpublic MemorySPARQL12QueryTest(String testURI, String name, String queryFileURL, String resultFileURL,\n-\t\t\tDataset dataSet, boolean laxCardinality, boolean checkOrder, String... ignoredTests) {\n-\t\tsuper(testURI, name, queryFileURL, resultFileURL, dataSet, laxCardinality, checkOrder, ignoredTests);\n-\t}\n-\n-\t@Override\n-\tprotected Repository newRepository() {\n-\t\treturn new SailRepository(new MemoryStore());\n-\t}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3MDY1OA==", "url": "https://github.com/eclipse/rdf4j/pull/2080#discussion_r405870658", "bodyText": "This duplicates org.eclipse.rdf4j.query.parser.sparql.manifest.W3CApprovedSPARQL11QueryTest.", "author": "jeenbroekstra", "createdAt": "2020-04-08T23:24:24Z", "path": "compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL11W3CQueryTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.sail.memory;\n+\n+import junit.framework.Test;\n+import org.eclipse.rdf4j.query.Dataset;\n+import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQL11ManifestTest;\n+import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQLQueryTest;\n+import org.eclipse.rdf4j.repository.Repository;\n+import org.eclipse.rdf4j.repository.sail.SailRepository;\n+\n+import java.net.URL;\n+\n+public class MemorySPARQL11W3CQueryTest extends SPARQLQueryTest {", "originalCommit": "474c966a6de74469a9dc0d874e60a25e3fa1395f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "de8f9d89dce861688bbf8a29611d2a8bed616134", "chunk": "diff --git a/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL11W3CQueryTest.java b/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL11W3CQueryTest.java\ndeleted file mode 100644\nindex 431cf9c4f9..0000000000\n--- a/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL11W3CQueryTest.java\n+++ /dev/null\n\n@@ -1,60 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Eclipse RDF4J contributors.\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Distribution License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/org/documents/edl-v10.php.\n- *******************************************************************************/\n-package org.eclipse.rdf4j.sail.memory;\n-\n-import junit.framework.Test;\n-import org.eclipse.rdf4j.query.Dataset;\n-import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQL11ManifestTest;\n-import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQLQueryTest;\n-import org.eclipse.rdf4j.repository.Repository;\n-import org.eclipse.rdf4j.repository.sail.SailRepository;\n-\n-import java.net.URL;\n-\n-public class MemorySPARQL11W3CQueryTest extends SPARQLQueryTest {\n-\n-\tpublic static Test suite() throws Exception {\n-\n-\t\tURL manifestUrl = SPARQL11ManifestTest.class.getResource(\"/testcases-sparql-1.1-w3c/manifest-all.ttl\");\n-\n-\t\treturn SPARQL11ManifestTest.suite(new Factory() {\n-\n-\t\t\t@Override\n-\t\t\tpublic SPARQLQueryTest createSPARQLQueryTest(String testURI, String name, String queryFileURL,\n-\t\t\t\t\tString resultFileURL, Dataset dataSet, boolean laxCardinality) {\n-\t\t\t\treturn new MemorySPARQL11W3CQueryTest(testURI, name, queryFileURL, resultFileURL, dataSet,\n-\t\t\t\t\t\tlaxCardinality);\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic SPARQLQueryTest createSPARQLQueryTest(String testURI, String name, String queryFileURL,\n-\t\t\t\t\tString resultFileURL, Dataset dataSet, boolean laxCardinality, boolean checkOrder) {\n-\t\t\t\tString[] ignoredTests = {};\n-\n-\t\t\t\treturn new MemorySPARQL11W3CQueryTest(testURI, name, queryFileURL, resultFileURL, dataSet,\n-\t\t\t\t\t\tlaxCardinality, checkOrder, ignoredTests);\n-\t\t\t}\n-\t\t\t// skip 'service' tests for now since they require presence of remote sparql endpoints.\n-\t\t}, manifestUrl.toString(), false, \"service\");\n-\t}\n-\n-\tpublic MemorySPARQL11W3CQueryTest(String testURI, String name, String queryFileURL, String resultFileURL,\n-\t\t\tDataset dataSet, boolean laxCardinality, String... ignoredTests) {\n-\t\tsuper(testURI, name, queryFileURL, resultFileURL, dataSet, laxCardinality, ignoredTests);\n-\t}\n-\n-\tpublic MemorySPARQL11W3CQueryTest(String testURI, String name, String queryFileURL, String resultFileURL,\n-\t\t\tDataset dataSet, boolean laxCardinality, boolean checkOrder, String... ignoredTests) {\n-\t\tsuper(testURI, name, queryFileURL, resultFileURL, dataSet, laxCardinality, checkOrder, ignoredTests);\n-\t}\n-\n-\t@Override\n-\tprotected Repository newRepository() {\n-\t\treturn new SailRepository(new MemoryStore());\n-\t}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4NjE3Nw==", "url": "https://github.com/eclipse/rdf4j/pull/2080#discussion_r405886177", "bodyText": "This duplicates org.eclipse.rdf4j.query.parser.sparql.manifest.W3CApprovedSPARQL10QueryTest.", "author": "jeenbroekstra", "createdAt": "2020-04-09T00:13:53Z", "path": "compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL10W3CQueryTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package org.eclipse.rdf4j.sail.memory;\n+\n+import junit.framework.Test;\n+import org.eclipse.rdf4j.query.Dataset;\n+import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQL11ManifestTest;\n+import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQLQueryTest;\n+import org.eclipse.rdf4j.repository.Repository;\n+import org.eclipse.rdf4j.repository.sail.SailRepository;\n+\n+import java.net.URL;\n+\n+public class MemorySPARQL10W3CQueryTest extends SPARQLQueryTest {", "originalCommit": "474c966a6de74469a9dc0d874e60a25e3fa1395f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "de8f9d89dce861688bbf8a29611d2a8bed616134", "chunk": "diff --git a/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL10W3CQueryTest.java b/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL10W3CQueryTest.java\ndeleted file mode 100644\nindex 86d058018f..0000000000\n--- a/compliance/sparql/src/test/java/org/eclipse/rdf4j/sail/memory/MemorySPARQL10W3CQueryTest.java\n+++ /dev/null\n\n@@ -1,59 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Eclipse RDF4J contributors.\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Distribution License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/org/documents/edl-v10.php.\n- *******************************************************************************/\n-package org.eclipse.rdf4j.sail.memory;\n-\n-import junit.framework.Test;\n-import org.eclipse.rdf4j.query.Dataset;\n-import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQL11ManifestTest;\n-import org.eclipse.rdf4j.query.parser.sparql.manifest.SPARQLQueryTest;\n-import org.eclipse.rdf4j.repository.Repository;\n-import org.eclipse.rdf4j.repository.sail.SailRepository;\n-\n-import java.net.URL;\n-\n-public class MemorySPARQL10W3CQueryTest extends SPARQLQueryTest {\n-\n-\tpublic static Test suite() throws Exception {\n-\n-\t\tURL manifestUrl = SPARQL11ManifestTest.class\n-\t\t\t\t.getResource(\"/testcases-sparql-1.0-w3c/data-r2/manifest-evaluation.ttl\");\n-\t\treturn SPARQL11ManifestTest.suite(new Factory() {\n-\n-\t\t\t@Override\n-\t\t\tpublic SPARQLQueryTest createSPARQLQueryTest(String testURI, String name, String queryFileURL,\n-\t\t\t\t\tString resultFileURL, Dataset dataSet, boolean laxCardinality) {\n-\t\t\t\treturn new MemorySPARQL10W3CQueryTest(testURI, name, queryFileURL, resultFileURL, dataSet,\n-\t\t\t\t\t\tlaxCardinality);\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic SPARQLQueryTest createSPARQLQueryTest(String testURI, String name, String queryFileURL,\n-\t\t\t\t\tString resultFileURL, Dataset dataSet, boolean laxCardinality, boolean checkOrder) {\n-\t\t\t\tString[] ignoredTests = {};\n-\n-\t\t\t\treturn new MemorySPARQL10W3CQueryTest(testURI, name, queryFileURL, resultFileURL, dataSet,\n-\t\t\t\t\t\tlaxCardinality, checkOrder, ignoredTests);\n-\t\t\t}\n-\t\t}, manifestUrl.toString(), false);\n-\t}\n-\n-\tpublic MemorySPARQL10W3CQueryTest(String testURI, String name, String queryFileURL, String resultFileURL,\n-\t\t\tDataset dataSet, boolean laxCardinality, String... ignoredTests) {\n-\t\tsuper(testURI, name, queryFileURL, resultFileURL, dataSet, laxCardinality, ignoredTests);\n-\t}\n-\n-\tpublic MemorySPARQL10W3CQueryTest(String testURI, String name, String queryFileURL, String resultFileURL,\n-\t\t\tDataset dataSet, boolean laxCardinality, boolean checkOrder, String... ignoredTests) {\n-\t\tsuper(testURI, name, queryFileURL, resultFileURL, dataSet, laxCardinality, checkOrder, ignoredTests);\n-\t}\n-\n-\t@Override\n-\tprotected Repository newRepository() {\n-\t\treturn new SailRepository(new MemoryStore());\n-\t}\n-}\n"}}, {"oid": "de8f9d89dce861688bbf8a29611d2a8bed616134", "url": "https://github.com/eclipse/rdf4j/commit/de8f9d89dce861688bbf8a29611d2a8bed616134", "message": "GH-2078 fix handling of inverted negated property set\n\n- added test cases to ComplexSPARQLQueryTest\n- removed redundant manifest test executors", "committedDate": "2020-04-09T02:41:09Z", "type": "forcePushed"}, {"oid": "e3980577f68bbadbd831a917815dc27b25db685b", "url": "https://github.com/eclipse/rdf4j/commit/e3980577f68bbadbd831a917815dc27b25db685b", "message": "GH-2078 added more test cases\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-10T10:37:59Z", "type": "forcePushed"}, {"oid": "57d890755fcf968df4cd87e9d8b75fa8c70c291a", "url": "https://github.com/eclipse/rdf4j/commit/57d890755fcf968df4cd87e9d8b75fa8c70c291a", "message": "GH-2078 added more test cases\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-10T10:41:32Z", "type": "forcePushed"}, {"oid": "14cb209768c74b5fdcf1bd200d7e70b2020f9653", "url": "https://github.com/eclipse/rdf4j/commit/14cb209768c74b5fdcf1bd200d7e70b2020f9653", "message": "GH-2078 added more test cases\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-10T10:44:54Z", "type": "forcePushed"}, {"oid": "1d3947afc50973c69d61d7c1d45e3f380da00599", "url": "https://github.com/eclipse/rdf4j/commit/1d3947afc50973c69d61d7c1d45e3f380da00599", "message": "GH-2078 create specific tests for two bugs and fix one bug\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-10T10:52:17Z", "type": "commit"}, {"oid": "716168769e238bfd463b59b30f03cfcfa5d0f1ae", "url": "https://github.com/eclipse/rdf4j/commit/716168769e238bfd463b59b30f03cfcfa5d0f1ae", "message": "GH-2078 fix handling of inverted negated property set\n\n- added test cases to ComplexSPARQLQueryTest", "committedDate": "2020-04-10T10:56:11Z", "type": "commit"}, {"oid": "98b40d6e59c2c695cc5be8db20f632ccaaacad63", "url": "https://github.com/eclipse/rdf4j/commit/98b40d6e59c2c695cc5be8db20f632ccaaacad63", "message": "GH-2078 corner case where inverted path element is part of longer\nsequence", "committedDate": "2020-04-10T10:56:11Z", "type": "commit"}, {"oid": "44e63678beb9ebc901a333ef4de64feff45e144d", "url": "https://github.com/eclipse/rdf4j/commit/44e63678beb9ebc901a333ef4de64feff45e144d", "message": "GH-2078 added more test cases\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-10T10:56:11Z", "type": "commit"}, {"oid": "44e63678beb9ebc901a333ef4de64feff45e144d", "url": "https://github.com/eclipse/rdf4j/commit/44e63678beb9ebc901a333ef4de64feff45e144d", "message": "GH-2078 added more test cases\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-04-10T10:56:11Z", "type": "forcePushed"}]}