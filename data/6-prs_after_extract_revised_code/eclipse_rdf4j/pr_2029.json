{"pr_number": 2029, "pr_title": "GH-1873 fixing incorrect cardinality calculation", "pr_createdAt": "2020-03-21T15:17:13Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2029", "timeline": [{"oid": "6df8cf1400abd4d25c7d630236737032e4c980c8", "url": "https://github.com/eclipse/rdf4j/commit/6df8cf1400abd4d25c7d630236737032e4c980c8", "message": "#1873 re-assigned the vars list so that it contains distinct elements, added related tests\n\nSigned-off-by: Reeshabh Kumar Ranjan <reeshabhkumarranjan@gmail.com>", "committedDate": "2020-03-21T15:06:16Z", "type": "commit"}, {"oid": "4ddd4a999ce34deb1819469e19bf9081bb25ee22", "url": "https://github.com/eclipse/rdf4j/commit/4ddd4a999ce34deb1819469e19bf9081bb25ee22", "message": "#1873 added header comment in CardinalityTest.java\n\nSigned-off-by: Reeshabh Kumar Ranjan <reeshabhkumarranjan@gmail.com>", "committedDate": "2020-03-21T15:11:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MTgzMQ==", "url": "https://github.com/eclipse/rdf4j/pull/2029#discussion_r396041831", "bodyText": "Looks as if your editor forgot to replace ${year} with the actual year!", "author": "jeenbroekstra", "createdAt": "2020-03-22T00:27:28Z", "path": "core/sail/federation/src/test/java/org/eclipse/rdf4j/sail/federation/optimizers/CardinalityTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*******************************************************************************\n+ * Copyright (c) ${year} Eclipse RDF4J contributors.", "originalCommit": "4ddd4a999ce34deb1819469e19bf9081bb25ee22", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1NjkyOQ==", "url": "https://github.com/eclipse/rdf4j/pull/2029#discussion_r396056929", "bodyText": "I replaced it with 2020 in the latest commit.", "author": "reeshabhranjan", "createdAt": "2020-03-22T05:42:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MTgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "73d4d545c44c114793e32f4a4d03a994c0b67d7c", "chunk": "diff --git a/core/sail/federation/src/test/java/org/eclipse/rdf4j/sail/federation/optimizers/CardinalityTest.java b/core/sail/federation/src/test/java/org/eclipse/rdf4j/sail/federation/optimizers/CardinalityTest.java\nindex 831fac2dac..1b54257118 100644\n--- a/core/sail/federation/src/test/java/org/eclipse/rdf4j/sail/federation/optimizers/CardinalityTest.java\n+++ b/core/sail/federation/src/test/java/org/eclipse/rdf4j/sail/federation/optimizers/CardinalityTest.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) ${year} Eclipse RDF4J contributors.\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Distribution License v1.0\n  * which accompanies this distribution, and is available at\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MjE1Mg==", "url": "https://github.com/eclipse/rdf4j/pull/2029#discussion_r396042152", "bodyText": "I think you can also just do:\nSet<Var> vars = new HashSet<>(pattern.getVarList());\n\nI don't think the rest of the method requires that vars is an ArrayList (or even a list), so no need to create an arraylist back out of the set. Saves having to copy the elements over twice.", "author": "jeenbroekstra", "createdAt": "2020-03-22T00:33:34Z", "path": "core/sail/federation/src/main/java/org/eclipse/rdf4j/sail/federation/optimizers/EvaluationStatistics.java", "diffHunk": "@@ -82,6 +85,8 @@ public void meet(Slice slice) {\n \n \t\tprotected double getCardinality(StatementPattern pattern) {\n \t\t\tList<Var> vars = pattern.getVarList();\n+\t\t\tSet<Var> varSet = new HashSet<Var>(vars);\n+\t\t\tvars = new ArrayList<Var>(varSet);", "originalCommit": "4ddd4a999ce34deb1819469e19bf9081bb25ee22", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1NjM1Ng==", "url": "https://github.com/eclipse/rdf4j/pull/2029#discussion_r396056356", "bodyText": "Alright! I will make this change and update this pull request.", "author": "reeshabhranjan", "createdAt": "2020-03-22T05:32:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MjE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "73d4d545c44c114793e32f4a4d03a994c0b67d7c", "chunk": "diff --git a/core/sail/federation/src/main/java/org/eclipse/rdf4j/sail/federation/optimizers/EvaluationStatistics.java b/core/sail/federation/src/main/java/org/eclipse/rdf4j/sail/federation/optimizers/EvaluationStatistics.java\nindex e46e9a2fdc..36ee9592b7 100644\n--- a/core/sail/federation/src/main/java/org/eclipse/rdf4j/sail/federation/optimizers/EvaluationStatistics.java\n+++ b/core/sail/federation/src/main/java/org/eclipse/rdf4j/sail/federation/optimizers/EvaluationStatistics.java\n\n@@ -84,9 +84,7 @@ public class EvaluationStatistics {\n \t\t}\n \n \t\tprotected double getCardinality(StatementPattern pattern) {\n-\t\t\tList<Var> vars = pattern.getVarList();\n-\t\t\tSet<Var> varSet = new HashSet<Var>(vars);\n-\t\t\tvars = new ArrayList<Var>(varSet);\n+\t\t\tSet<Var> vars = new HashSet<>(pattern.getVarList());\n \t\t\tint constantVarCount = countConstantVars(vars);\n \t\t\tdouble unboundVarFactor = (double) (vars.size() - constantVarCount) / vars.size();\n \t\t\treturn Math.pow(1000.0, unboundVarFactor);\n"}}, {"oid": "73d4d545c44c114793e32f4a4d03a994c0b67d7c", "url": "https://github.com/eclipse/rdf4j/commit/73d4d545c44c114793e32f4a4d03a994c0b67d7c", "message": "#1873 a set is iterable, so passed the set directly to `countConstantVars()` method, as suggested by @jeenbroekstra; added the actual year in the header comment in CardinalityTest.java\n\nSigned-off-by: Reeshabh Kumar Ranjan <reeshabhkumarranjan@gmail.com>", "committedDate": "2020-03-22T05:40:57Z", "type": "commit"}]}