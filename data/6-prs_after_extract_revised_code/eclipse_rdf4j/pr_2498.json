{"pr_number": 2498, "pr_title": "GH-2497 fix RDF collection processing for malformed collection structures", "pr_createdAt": "2020-09-14T05:59:05Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2498", "timeline": [{"oid": "b74d2777dad6f5caeb15f3c74a55f3cd1e6ff097", "url": "https://github.com/eclipse/rdf4j/commit/b74d2777dad6f5caeb15f3c74a55f3cd1e6ff097", "message": "GH-2497 test to reproduce issue\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-14T05:57:45Z", "type": "commit"}, {"oid": "8348bd0076f62515e1f5d54db9f0482aa3430f4c", "url": "https://github.com/eclipse/rdf4j/commit/8348bd0076f62515e1f5d54db9f0482aa3430f4c", "message": "simplified test\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-14T06:25:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY3NzY0Mg==", "url": "https://github.com/eclipse/rdf4j/pull/2498#discussion_r487677642", "bodyText": "This seems to be a representative example.", "author": "hmottestad", "createdAt": "2020-09-14T06:27:48Z", "path": "core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java", "diffHunk": "@@ -194,4 +194,170 @@ public void testNoBuffering() throws Exception {\n \t\tModel actual = Rio.parse(new StringReader(stringWriter.toString()), \"\", RDFFormat.TURTLE);\n \t\tassertTrue(Models.isomorphic(expected, actual));\n \t}\n+\n+\t@Test\n+\tpublic void anotherBnodeTest() throws Exception {\n+\t\tString data = \"@prefix ex:    <http://example.com/ns#> .\\n\" +\n+\t\t\t\t\"@prefix sh:    <http://www.w3.org/ns/shacl#> .\\n\" +\n+\t\t\t\t\"@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n\" +\n+\t\t\t\t\"@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .\\n\" +\n+\t\t\t\t\"@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .\\n\" +\n+\t\t\t\t\"@prefix foaf:  <http://xmlns.com/foaf/0.1/> .\\n\" +\n+\t\t\t\t\"\\n\" +\n+\t\t\t\t\"_:b0    a        sh:PropertyShape ;\\n\" +\n+\t\t\t\t\"        sh:not   [ a       sh:NodeShape ;\\n\" +\n+\t\t\t\t\"                   sh:and  [ rdf:first  [ a       sh:NodeShape ;\\n\" +\n+\t\t\t\t\"                                          sh:in   ( ex:steve )\\n\" +\n+\t\t\t\t\"                                        ] ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        )\\n\" +\n+\t\t\t\t\"                           ]\\n\" +\n+\t\t\t\t\"                 ] ;\\n\" +\n+\t\t\t\t\"        sh:path  ex:knows .\\n\" +\n+\t\t\t\t\"\\n\" +\n+\t\t\t\t\"_:b1    a       sh:NodeShape ;\\n\" +\n+\t\t\t\t\"        sh:in   [ rdf:first  ex:pete ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve )\\n\" +\n+\t\t\t\t\"                ] .\\n\" +\n+\t\t\t\t\"\\n\" +\n+\t\t\t\t\"[ a            sh:ValidationReport ;\\n\" +\n+\t\t\t\t\"  <http://rdf4j.org/schema/rdf4j#truncated>\\n\" +\n+\t\t\t\t\"          false ;\\n\" +\n+\t\t\t\t\"  sh:conforms  false ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ]\\n\" +\n+\t\t\t\t\"] .\\n\";\n+\n+\t\tSystem.out.println(\"### EXPECTED ###\");\n+\t\tSystem.out.println(data);\n+\t\tSystem.out.println(\"#################\\n\");\n+\n+\t\tModel expected = Rio.parse(new StringReader(data), \"\", RDFFormat.TURTLE);\n+\n+\t\tStringWriter stringWriter = new StringWriter();\n+\t\tWriterConfig config = new WriterConfig();\n+\t\tconfig.set(BasicWriterSettings.INLINE_BLANK_NODES, true);\n+\t\tRio.write(expected, stringWriter, RDFFormat.TURTLE, config);\n+\n+\t\tSystem.out.println(\"### ACTUAL ###\");\n+\t\tSystem.out.println(stringWriter.toString());\n+\t\tSystem.out.println(\"#################\\n\");\n+\n+\t\tModel actual = Rio.parse(new StringReader(stringWriter.toString()), \"\", RDFFormat.TURTLE);\n+\t\tassertTrue(Models.isomorphic(expected, actual));\n+\t}\n+\n+\t@Test\n+\tpublic void anotherBnodeTestReduced() throws Exception {\n+\t\tString data = \"\" +\n+\t\t\t\t\"@prefix ex:    <http://example.com/ns#> .\\n\" +\n+\t\t\t\t\"@prefix sh:    <http://www.w3.org/ns/shacl#> .\\n\" +\n+\t\t\t\t\"@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n\" +\n+\t\t\t\t\"@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .\\n\" +\n+\t\t\t\t\"@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .\\n\" +\n+\t\t\t\t\"@prefix foaf:  <http://xmlns.com/foaf/0.1/> .\\n\" +\n+\t\t\t\t\"\\n\" +\n+\t\t\t\t\"ex:a  ex:list   (_:b0 _:b0) .\";\n+", "originalCommit": "8348bd0076f62515e1f5d54db9f0482aa3430f4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY3NzgzOQ==", "url": "https://github.com/eclipse/rdf4j/pull/2498#discussion_r487677839", "bodyText": "This is what RDF4J outputs:\n@prefix ex: <http://example.com/ns#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\nex:a ex:list ([] []) .", "author": "hmottestad", "createdAt": "2020-09-14T06:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY3NzY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY5MTA4MQ==", "url": "https://github.com/eclipse/rdf4j/pull/2498#discussion_r487691081", "bodyText": "...that is correct, as far as I can tell. In this case, the bug might actually be in the isomorphism detection, because as far as I can tell those two graphs should be isomorphic.", "author": "jeenbroekstra", "createdAt": "2020-09-14T07:00:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY3NzY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY5MTg0Mg==", "url": "https://github.com/eclipse/rdf4j/pull/2498#discussion_r487691842", "bodyText": "Then again, what we're actually after here is no loss of information of course. I'll take a closer look at the writer, see why this node gets inlined when it's referred to more than once.", "author": "jeenbroekstra", "createdAt": "2020-09-14T07:02:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY3NzY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9bfc790cfecd287472a7f30479fc3a992820864a", "chunk": "diff --git a/core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java b/core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java\nindex 50db5f71ee..03e6c90aef 100644\n--- a/core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java\n+++ b/core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java\n\n@@ -334,11 +334,6 @@ public class TurtleWriterTest extends RDFWriterTest {\n \tpublic void anotherBnodeTestReduced() throws Exception {\n \t\tString data = \"\" +\n \t\t\t\t\"@prefix ex:    <http://example.com/ns#> .\\n\" +\n-\t\t\t\t\"@prefix sh:    <http://www.w3.org/ns/shacl#> .\\n\" +\n-\t\t\t\t\"@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n\" +\n-\t\t\t\t\"@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .\\n\" +\n-\t\t\t\t\"@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .\\n\" +\n-\t\t\t\t\"@prefix foaf:  <http://xmlns.com/foaf/0.1/> .\\n\" +\n \t\t\t\t\"\\n\" +\n \t\t\t\t\"ex:a  ex:list   (_:b0 _:b0) .\";\n \n"}}, {"oid": "7d84ebb221f5f0a745c3baf8df6f5d5e86e53b54", "url": "https://github.com/eclipse/rdf4j/commit/7d84ebb221f5f0a745c3baf8df6f5d5e86e53b54", "message": "GH-2479 partial fix for bnode inlining in collections\n\n- fixes simple case but not the more complex one", "committedDate": "2020-09-14T07:24:51Z", "type": "commit"}, {"oid": "9bfc790cfecd287472a7f30479fc3a992820864a", "url": "https://github.com/eclipse/rdf4j/commit/9bfc790cfecd287472a7f30479fc3a992820864a", "message": "GH-2497 added another test case\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-14T19:23:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3MTUxNg==", "url": "https://github.com/eclipse/rdf4j/pull/2498#discussion_r488471516", "bodyText": "I am not sure this one really counts as a bug, to be honest - and even if it does it is a very exotic corner case.\nThis case is an invalid collection structure in the sense that it links a non-list related poperty (ex:abc) to a bnode that that is directly part of the list structure itself. We are not so much inlining that blank node as just removing it, because the list gets converted to a syntactical shortform where the blank nodes and (rdf:first/rest properties) are just erased.\nThe actual output for this is:\n@prefix ex: <http://example.com/ns#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n\nex:ex1 ex:list ([]) .\n[] ex:abc ex:def .\n\nIn other words, one list with a single item (a blank node), and a statement with a blank node subject. The fact that in the original file that blank node was the same blank node as the one used in the internal collection structure is lost, but that does not make the output incorrect. There's also a strong whiff of \"what the heck are you even doing using a collection blank node like this?!\"\nWe could potentially handle this with a separate test to check if the collection is well-formed before serializing it, but it's going to be costly.", "author": "jeenbroekstra", "createdAt": "2020-09-15T08:10:13Z", "path": "core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java", "diffHunk": "@@ -194,4 +194,196 @@ public void testNoBuffering() throws Exception {\n \t\tModel actual = Rio.parse(new StringReader(stringWriter.toString()), \"\", RDFFormat.TURTLE);\n \t\tassertTrue(Models.isomorphic(expected, actual));\n \t}\n+\n+\t@Test\n+\tpublic void anotherBnodeTest() throws Exception {\n+\t\tString data = \"@prefix ex:    <http://example.com/ns#> .\\n\" +\n+\t\t\t\t\"@prefix sh:    <http://www.w3.org/ns/shacl#> .\\n\" +\n+\t\t\t\t\"@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n\" +\n+\t\t\t\t\"@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .\\n\" +\n+\t\t\t\t\"@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .\\n\" +\n+\t\t\t\t\"@prefix foaf:  <http://xmlns.com/foaf/0.1/> .\\n\" +\n+\t\t\t\t\"\\n\" +\n+\t\t\t\t\"_:b0    a        sh:PropertyShape ;\\n\" +\n+\t\t\t\t\"        sh:not   [ a       sh:NodeShape ;\\n\" +\n+\t\t\t\t\"                   sh:and  [ rdf:first  [ a       sh:NodeShape ;\\n\" +\n+\t\t\t\t\"                                          sh:in   ( ex:steve )\\n\" +\n+\t\t\t\t\"                                        ] ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        ) ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   ( _:b1\\n\" +\n+\t\t\t\t\"                                        )\\n\" +\n+\t\t\t\t\"                           ]\\n\" +\n+\t\t\t\t\"                 ] ;\\n\" +\n+\t\t\t\t\"        sh:path  ex:knows .\\n\" +\n+\t\t\t\t\"\\n\" +\n+\t\t\t\t\"_:b1    a       sh:NodeShape ;\\n\" +\n+\t\t\t\t\"        sh:in   [ rdf:first  ex:pete ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve ) ;\\n\" +\n+\t\t\t\t\"                  rdf:rest   ( ex:steve )\\n\" +\n+\t\t\t\t\"                ] .\\n\" +\n+\t\t\t\t\"\\n\" +\n+\t\t\t\t\"[ a            sh:ValidationReport ;\\n\" +\n+\t\t\t\t\"  <http://rdf4j.org/schema/rdf4j#truncated>\\n\" +\n+\t\t\t\t\"          false ;\\n\" +\n+\t\t\t\t\"  sh:conforms  false ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ] ;\\n\" +\n+\t\t\t\t\"  sh:result    [ a                             sh:ValidationResult ;\\n\" +\n+\t\t\t\t\"                 sh:focusNode                  ex:validPerson1 ;\\n\" +\n+\t\t\t\t\"                 sh:resultPath                 ex:knows ;\\n\" +\n+\t\t\t\t\"                 sh:resultSeverity             sh:Violation ;\\n\" +\n+\t\t\t\t\"                 sh:sourceConstraintComponent  sh:NotConstraintComponent ;\\n\" +\n+\t\t\t\t\"                 sh:sourceShape                _:b0 ;\\n\" +\n+\t\t\t\t\"                 sh:value                      ex:steve\\n\" +\n+\t\t\t\t\"               ]\\n\" +\n+\t\t\t\t\"] .\\n\";\n+\n+\t\tSystem.out.println(\"### EXPECTED ###\");\n+\t\tSystem.out.println(data);\n+\t\tSystem.out.println(\"#################\\n\");\n+\n+\t\tModel expected = Rio.parse(new StringReader(data), \"\", RDFFormat.TURTLE);\n+\n+\t\tStringWriter stringWriter = new StringWriter();\n+\t\tWriterConfig config = new WriterConfig();\n+\t\tconfig.set(BasicWriterSettings.INLINE_BLANK_NODES, true);\n+\t\tRio.write(expected, stringWriter, RDFFormat.TURTLE, config);\n+\n+\t\tSystem.out.println(\"### ACTUAL ###\");\n+\t\tSystem.out.println(stringWriter.toString());\n+\t\tSystem.out.println(\"#################\\n\");\n+\n+\t\tModel actual = Rio.parse(new StringReader(stringWriter.toString()), \"\", RDFFormat.TURTLE);\n+\t\tassertTrue(Models.isomorphic(expected, actual));\n+\t}\n+\n+\t@Test\n+\tpublic void anotherBnodeTestReduced() throws Exception {\n+\t\tString data = \"\" +\n+\t\t\t\t\"@prefix ex:    <http://example.com/ns#> .\\n\" +\n+\t\t\t\t\"\\n\" +\n+\t\t\t\t\"ex:a  ex:list   (_:b0 _:b0) .\";\n+\n+\t\tSystem.out.println(\"### EXPECTED ###\");\n+\t\tSystem.out.println(data);\n+\t\tSystem.out.println(\"#################\\n\");\n+\n+\t\tModel expected = Rio.parse(new StringReader(data), \"\", RDFFormat.TURTLE);\n+\n+\t\tStringWriter stringWriter = new StringWriter();\n+\t\tWriterConfig config = new WriterConfig();\n+\t\tconfig.set(BasicWriterSettings.INLINE_BLANK_NODES, true);\n+\t\tRio.write(expected, stringWriter, RDFFormat.TURTLE, config);\n+\n+\t\tSystem.out.println(\"### ACTUAL ###\");\n+\t\tSystem.out.println(stringWriter.toString());\n+\t\tSystem.out.println(\"#################\\n\");\n+\n+\t\tModel actual = Rio.parse(new StringReader(stringWriter.toString()), \"\", RDFFormat.TURTLE);\n+\t\tassertTrue(Models.isomorphic(expected, actual));\n+\t}\n+\n+\t@Test\n+\tpublic void anotherBnodeTestReduced2() throws Exception {\n+\t\tString data = \"@prefix ex:    <http://example.com/ns#> .\\n\" +\n+\t\t\t\t\"@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n\" +\n+\t\t\t\t\"\\n\" +\n+\t\t\t\t\"ex:ex1    ex:list  [ rdf:first  [  ] ;\\n\" +\n+\t\t\t\t\"                             rdf:rest   rdf:nil ;\\n\" +\n+\t\t\t\t\"                             ex:abc   ex:def\\n\" +\n+\t\t\t\t\"                           ]\\n\" +", "originalCommit": "9bfc790cfecd287472a7f30479fc3a992820864a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY1OTk0NA==", "url": "https://github.com/eclipse/rdf4j/pull/2498#discussion_r488659944", "bodyText": "I know it's pretty funky. I have no idea how it got produced to be honest. I still think we should consider it a bug though.", "author": "hmottestad", "createdAt": "2020-09-15T13:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3MTUxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY2MjEyNQ==", "url": "https://github.com/eclipse/rdf4j/pull/2498#discussion_r488662125", "bodyText": "I think the output is incorrect. The pretty printer and bnode inliner should return the same data if you first output n-triples, then pretty print and inline it, then convert it to n-triples again.", "author": "hmottestad", "createdAt": "2020-09-15T13:22:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3MTUxNg=="}], "type": "inlineReview", "revised_code": {"commit": "74b0925c034c0fca59839e03941ea2a901bbce73", "chunk": "diff --git a/core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java b/core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java\nindex 03e6c90aef..cc80213ee4 100644\n--- a/core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java\n+++ b/core/rio/turtle/src/test/java/org/eclipse/rdf4j/rio/turtle/TurtleWriterTest.java\n\n@@ -196,6 +197,7 @@ public class TurtleWriterTest extends RDFWriterTest {\n \t}\n \n \t@Test\n+\t@Ignore\n \tpublic void anotherBnodeTest() throws Exception {\n \t\tString data = \"@prefix ex:    <http://example.com/ns#> .\\n\" +\n \t\t\t\t\"@prefix sh:    <http://www.w3.org/ns/shacl#> .\\n\" +\n"}}, {"oid": "10ee2afb51d85a81ef9efa9a89da28f74f96434b", "url": "https://github.com/eclipse/rdf4j/commit/10ee2afb51d85a81ef9efa9a89da28f74f96434b", "message": "Merge branch 'master' into GH-2497-bnode-inlining", "committedDate": "2020-09-15T14:54:44Z", "type": "commit"}, {"oid": "74b0925c034c0fca59839e03941ea2a901bbce73", "url": "https://github.com/eclipse/rdf4j/commit/74b0925c034c0fca59839e03941ea2a901bbce73", "message": "ignored failing tests\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-09-15T14:59:31Z", "type": "commit"}, {"oid": "cc242aeafbb4bd47ebe7fa58b46b94336277636d", "url": "https://github.com/eclipse/rdf4j/commit/cc242aeafbb4bd47ebe7fa58b46b94336277636d", "message": "Merge branch 'master' into GH-2497-bnode-inlining", "committedDate": "2020-09-15T15:00:34Z", "type": "commit"}, {"oid": "ae10d0eec3b0cde025b308db52250fb548e7252d", "url": "https://github.com/eclipse/rdf4j/commit/ae10d0eec3b0cde025b308db52250fb548e7252d", "message": "GH-2497 extensive check on rdf collections being wellformed\n\n- fixes all outstanding test cases", "committedDate": "2020-09-16T01:28:13Z", "type": "commit"}]}