{"pr_number": 1804, "pr_title": "GH-1555 Improve FedX Demo code and examples", "pr_createdAt": "2020-01-02T09:11:33Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/1804", "timeline": [{"oid": "6df7cbe8aea90fd3e3a04963e3ac3206d141d281", "url": "https://github.com/eclipse/rdf4j/commit/6df7cbe8aea90fd3e3a04963e3ac3206d141d281", "message": "Improve FedX Demo code and examples", "committedDate": "2020-01-02T09:09:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3MTEyNg==", "url": "https://github.com/eclipse/rdf4j/pull/1804#discussion_r362471126", "bodyText": "Btw. Counting is nicer with\ntry(.... stream = Iterations.stream(query.evaluate)){\n   .... count = stream.count();\n}", "author": "hmottestad", "createdAt": "2020-01-02T13:24:11Z", "path": "tools/federation/src/test/java/demos/MonitorRequestsDemo.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+package demos;\n+\n+import org.eclipse.rdf4j.federated.FedXConfig;\n+import org.eclipse.rdf4j.federated.FedXFactory;\n+import org.eclipse.rdf4j.federated.monitoring.MonitoringUtil;\n+import org.eclipse.rdf4j.federated.repository.FedXRepository;\n+import org.eclipse.rdf4j.query.QueryLanguage;\n+import org.eclipse.rdf4j.query.TupleQuery;\n+import org.eclipse.rdf4j.query.TupleQueryResult;\n+import org.eclipse.rdf4j.repository.RepositoryConnection;\n+\n+public class MonitorRequestsDemo {\n+\n+\tpublic static void main(String[] args) throws Exception {\n+\n+\t\tFedXConfig config = new FedXConfig().withEnableMonitoring(true).withLogQueries(true);\n+\t\tFedXRepository repo = FedXFactory.newFederation()\n+\t\t\t\t.withSparqlEndpoint(\"http://dbpedia.org/sparql\")\n+\t\t\t\t.withSparqlEndpoint(\"https://query.wikidata.org/sparql\")\n+\t\t\t\t.withConfig(config)\n+\t\t\t\t.create();\n+\n+\t\trepo.init();\n+\n+\t\tString q = \"PREFIX wd: <http://www.wikidata.org/entity/> \"\n+\t\t\t\t+ \"PREFIX wdt: <http://www.wikidata.org/prop/direct/> \"\n+\t\t\t\t+ \"SELECT * WHERE { \"\n+\t\t\t\t+ \" ?country a <http://dbpedia.org/class/yago/WikicatMemberStatesOfTheEuropeanUnion> .\"\n+\t\t\t\t+ \" ?country <http://www.w3.org/2002/07/owl#sameAs> ?countrySameAs . \"\n+\t\t\t\t+ \" ?countrySameAs wdt:P2131 ?gdp .\"\n+\t\t\t\t+ \"}\";\n+\n+\t\ttry (RepositoryConnection conn = repo.getConnection()) {\n+\t\t\tTupleQuery query = conn.prepareTupleQuery(QueryLanguage.SPARQL, q);\n+\t\t\ttry (TupleQueryResult res = query.evaluate()) {\n+\n+\t\t\t\tint count = 0;\n+\t\t\t\twhile (res.hasNext()) {\n+\t\t\t\t\tres.next();\n+\t\t\t\t\tcount++;\n+\t\t\t\t}\n+\n+\t\t\t\tSystem.out.println(\"# Done, \" + count + \" results\");\n+\t\t\t}", "originalCommit": "6df7cbe8aea90fd3e3a04963e3ac3206d141d281", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcwODEzNg==", "url": "https://github.com/eclipse/rdf4j/pull/1804#discussion_r362708136", "bodyText": "Or, even simpler:\n List<BindingSet> result = QueryResults.asList(query.evaluate());\n System.out.println(\"# Done, \" + result.size() + \" results\");\n\nBut it depends on what you're trying to illustrate of course.", "author": "jeenbroekstra", "createdAt": "2020-01-03T05:20:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3MTEyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMjA1MQ==", "url": "https://github.com/eclipse/rdf4j/pull/1804#discussion_r362732051", "bodyText": "That keeps all your results in memory.", "author": "hmottestad", "createdAt": "2020-01-03T08:26:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3MTEyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk5OTIzNw==", "url": "https://github.com/eclipse/rdf4j/pull/1804#discussion_r362999237", "bodyText": "Yes. Typically not a big deal unless you do monstrously big queries - but you're of course correct that streaming for this kind of thing is more efficient.\nI'm fine with either way, also fine if you keep the example as-is @aschwarte10 - the point of this doc is not really to explore the different ways to process RDF4J query results of course :)", "author": "jeenbroekstra", "createdAt": "2020-01-04T00:09:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3MTEyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAxOTM5MQ==", "url": "https://github.com/eclipse/rdf4j/pull/1804#discussion_r363019391", "bodyText": "Thanks for the comments, very useful patterns for the examples, will keep them in mind for future changes\nThe purpose of this demo is is not the evaluation and consumption of the query, but rather the federation setup and specific configuration options. The system.out.println or in this example the count is just the simplest example. In here we in any case have something like 10 results only.\nI would suggest to merge.", "author": "aschwarte10", "createdAt": "2020-01-04T06:29:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3MTEyNg=="}], "type": "inlineReview", "revised_code": null}]}