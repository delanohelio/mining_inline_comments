{"pr_number": 889, "pr_title": "feat(device): support batch messages for HTTPS", "pr_createdAt": "2020-08-10T03:36:31Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/889", "timeline": [{"oid": "4ccff1d7ef88795b885423d508c4dd72de10310f", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4ccff1d7ef88795b885423d508c4dd72de10310f", "message": "support batch messages for HTTPS", "committedDate": "2020-08-10T03:36:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3NDUxMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r467674513", "bodyText": "This constructor is internal to the iot.device package.", "author": "azabbasi", "createdAt": "2020-08-10T03:37:20Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -165,6 +175,30 @@ public Message()\n         initialize();\n     }\n \n+    /**\n+     * Internal constructor to initialize a bulk message instance.\n+     * @param messages List of nested messages\n+     */\n+    Message(Set<Message> messages)", "originalCommit": "4ccff1d7ef88795b885423d508c4dd72de10310f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\nindex 2232f6b19..58c9221a4 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\n\n@@ -179,7 +179,7 @@ public class Message\n      * Internal constructor to initialize a bulk message instance.\n      * @param messages List of nested messages\n      */\n-    Message(Set<Message> messages)\n+    Message(List<Message> messages)\n     {\n         if (messages == null)\n         {\n"}}, {"oid": "4e54363af268cef73f59c75e500afec42df79188", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4e54363af268cef73f59c75e500afec42df79188", "message": "Update InternalClient.java", "committedDate": "2020-08-10T03:38:21Z", "type": "commit"}, {"oid": "c079b945671aa1a40cca76366d7cd9a236c8f702", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/c079b945671aa1a40cca76366d7cd9a236c8f702", "message": "Update InternalClient.java", "committedDate": "2020-08-10T03:38:49Z", "type": "commit"}, {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/a58708a1f03a77ca9d90d44eabbc42185c490f79", "message": "Update InternalClient.java", "committedDate": "2020-08-10T03:39:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0NjEwMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468046100", "bodyText": "MQTT and AMQP messages will be sent individually - protocol library restriction?", "author": "abhipsaMisra", "createdAt": "2020-08-10T16:56:33Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwNTMyOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468105328", "bodyText": "yes, service does not support MQTT batch messages, and our current AMQP library (proton) doesn't have built in batch message capabilities so we have to implement our own. That will be done separately.", "author": "azabbasi", "createdAt": "2020-08-10T18:44:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0NjEwMA=="}], "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\nindex 46f07e081..c877c34c9 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n\n@@ -199,7 +200,7 @@ public class InternalClient\n      * @throws IllegalStateException if the client has not been opened yet or is\n      * already closed.\n      */\n-    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)\n+    public void sendEventBatchAsync(List<Message> messages, IotHubEventCallback callback, Object callbackContext)\n     {\n         for (Message message: messages)\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0OTQ3OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468049479", "bodyText": "The ordering of the messages needs to be preserved, so maybe we should use a List instead? Or add a comment that the customer should supply an ordered implementation of Set?", "author": "abhipsaMisra", "createdAt": "2020-08-10T17:02:27Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MTcyMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468061722", "bodyText": "Does the ordering need to be preserved? I thought the whole point was that they were all delivered simultaneously?", "author": "timtay-microsoft", "createdAt": "2020-08-10T17:25:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0OTQ3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2NzQ0MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468067441", "bodyText": "yes, they would be delivered simultaneously, but still as a batch containing the individual messages in some order -> if I add them as 1->2->3 into a batch; then on service send, once I receive a batch and iterate over it, the order should still be 1->2->3.", "author": "abhipsaMisra", "createdAt": "2020-08-10T17:35:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0OTQ3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwNTgyMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468105821", "bodyText": "I will make a note of that in the comments.", "author": "azabbasi", "createdAt": "2020-08-10T18:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0OTQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\nindex 46f07e081..c877c34c9 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n\n@@ -199,7 +200,7 @@ public class InternalClient\n      * @throws IllegalStateException if the client has not been opened yet or is\n      * already closed.\n      */\n-    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)\n+    public void sendEventBatchAsync(List<Message> messages, IotHubEventCallback callback, Object callbackContext)\n     {\n         for (Message message: messages)\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDMzMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468050332", "bodyText": "Does this have to be a set? What about a more generic type like Collection or Iterable?", "author": "timtay-microsoft", "createdAt": "2020-08-10T17:04:07Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwNjYxNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468106617", "bodyText": "That is an excellent question. I don't think it has to necessarily be a Set, I tried to follow the other APIs we have in the internal client and used Sets. is there a drawback in using Sets here?", "author": "azabbasi", "createdAt": "2020-08-10T18:46:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDMzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwOTg3OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468209879", "bodyText": "I made it into a List to maintain the orders in the collection as Abhipsa mentioned.", "author": "azabbasi", "createdAt": "2020-08-10T21:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDMzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2NzQ4OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468267489", "bodyText": "As long as they need to be ordered, then a List should be fine. In general, if the API can take a more generic collection type, then it should. That way users who like sets can pass in a set, and users who like lists can pass in a list. But that's all moot if we have to maintain order here.", "author": "timtay-microsoft", "createdAt": "2020-08-11T01:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDMzMg=="}], "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\nindex 46f07e081..c877c34c9 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n\n@@ -199,7 +200,7 @@ public class InternalClient\n      * @throws IllegalStateException if the client has not been opened yet or is\n      * already closed.\n      */\n-    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)\n+    public void sendEventBatchAsync(List<Message> messages, IotHubEventCallback callback, Object callbackContext)\n     {\n         for (Message message: messages)\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDQ2MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468050461", "bodyText": "nit: add a log statement here", "author": "abhipsaMisra", "createdAt": "2020-08-10T17:04:21Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "diffHunk": "@@ -401,6 +401,17 @@ public void addMessage(Message message, IotHubEventCallback callback, Object cal\n \n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n+\n+        if (message.isBulk() && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))\n+        {\n+            for (Message singleMessage : message.getNestedMessages())\n+            {\n+                waitingPacketsQueue.add(new IotHubTransportPacket(message, callback, callbackContext,null, System.currentTimeMillis()));\n+            }\n+\n+            return;", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\nindex db16f6a3d..68ee0738c 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\n\n@@ -406,7 +406,8 @@ public class IotHubTransport implements IotHubListener\n         {\n             for (Message singleMessage : message.getNestedMessages())\n             {\n-                waitingPacketsQueue.add(new IotHubTransportPacket(message, callback, callbackContext,null, System.currentTimeMillis()));\n+                this.addToWaitingQueue(new IotHubTransportPacket(singleMessage, callback, callbackContext,null, System.currentTimeMillis()));\n+                log.info(\"Messages were queued to be sent later ({})\", singleMessage);\n             }\n \n             return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468063447", "bodyText": "What about having a class BulkMessage that extends from this message class instead? That way in the lower layers, you can have code like\nif (message instanceof BulkMessage)\n{\n// bulk message logic\n}\nelse\n{\n//normal message logic\n}", "author": "timtay-microsoft", "createdAt": "2020-08-10T17:28:00Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -212,6 +246,15 @@ public Message(String body)\n     \n     // ----- Public Methods -----\n \n+    /**\n+     * Indicates whether or not this instance is a bulk message instance.\n+     * @return Boolean value to indicate whether or not this is a bulk message instance.\n+     */\n+    public boolean isBulk()\n+    {\n+        return this.isBulk;", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MzI5MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468073291", "bodyText": "That way getNestedMessages() can only be called on a bulk message", "author": "timtay-microsoft", "createdAt": "2020-08-10T17:46:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwODEwNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468108104", "bodyText": "that is the first approach I tried, If we decide to create a BulkMessage class (which I did initially) we have to expose it (which I am not a huge fan of doing).\nThe reason is that this class is used in other packages device.Transport for example. so we can't make it internal (not a public/private class). So I baked it into the same Message class.", "author": "azabbasi", "createdAt": "2020-08-10T18:49:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2Nzg5NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468267895", "bodyText": "I'm not sure I follow why making a hypothetical BulkMessage class public would be bad when it extends an already public class.", "author": "timtay-microsoft", "createdAt": "2020-08-11T01:04:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4Nzc1Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468687752", "bodyText": "I made a separate class and made the constructor internal.", "author": "azabbasi", "createdAt": "2020-08-11T15:54:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "16174508139324697b9db02bd15047bdddce0fdf", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\nindex 2232f6b19..8ccdcaad6 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\n\n@@ -245,16 +211,6 @@ public class Message\n \n     \n     // ----- Public Methods -----\n-\n-    /**\n-     * Indicates whether or not this instance is a bulk message instance.\n-     * @return Boolean value to indicate whether or not this is a bulk message instance.\n-     */\n-    public boolean isBulk()\n-    {\n-        return this.isBulk;\n-    }\n-\n     /**\n      * The stream content of the body.\n      * @return always returns null.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2NzI4MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468067281", "bodyText": "You can make this catch more specific since only a IotHubSizeExceededException exception is thrown here", "author": "timtay-microsoft", "createdAt": "2020-08-10T17:35:03Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java", "diffHunk": "@@ -80,7 +80,29 @@ public IotHubStatusCode sendMessage(Message message) throws TransportException\n     {\n         synchronized (HTTPS_CONNECTION_LOCK)\n         {\n-            HttpsMessage httpsMessage = HttpsSingleMessage.parseHttpsMessage(message);\n+            // Here we check if it's a bulk message and serialize it.\n+            HttpsMessage httpsMessage = null;\n+\n+            if (message.isBulk())\n+            {\n+                HttpsBatchMessage batchMessage = new HttpsBatchMessage();\n+                for (Message singleMessage : message.getNestedMessages())\n+                {\n+                    try\n+                    {\n+                        batchMessage.addMessage(HttpsSingleMessage.parseHttpsMessage(singleMessage));\n+                    }\n+                    catch (Exception e)", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java\nindex 34baf97cd..33cb01b57 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java\n\n@@ -92,9 +93,9 @@ public class HttpsIotHubConnection implements IotHubTransportConnection\n                     {\n                         batchMessage.addMessage(HttpsSingleMessage.parseHttpsMessage(singleMessage));\n                     }\n-                    catch (Exception e)\n+                    catch (IotHubSizeExceededException e)\n                     {\n-                        throw new TransportException(e);\n+                        throw new TransportException(\"Failed to create HTTPS batch message\", e);\n                     }\n                 }\n                 httpsMessage = batchMessage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2NzU5MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468067590", "bodyText": "throw new TransportException(\"Failed to create http batch message\", e); to add context", "author": "timtay-microsoft", "createdAt": "2020-08-10T17:35:38Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java", "diffHunk": "@@ -80,7 +80,29 @@ public IotHubStatusCode sendMessage(Message message) throws TransportException\n     {\n         synchronized (HTTPS_CONNECTION_LOCK)\n         {\n-            HttpsMessage httpsMessage = HttpsSingleMessage.parseHttpsMessage(message);\n+            // Here we check if it's a bulk message and serialize it.\n+            HttpsMessage httpsMessage = null;\n+\n+            if (message.isBulk())\n+            {\n+                HttpsBatchMessage batchMessage = new HttpsBatchMessage();\n+                for (Message singleMessage : message.getNestedMessages())\n+                {\n+                    try\n+                    {\n+                        batchMessage.addMessage(HttpsSingleMessage.parseHttpsMessage(singleMessage));\n+                    }\n+                    catch (Exception e)\n+                    {\n+                        throw new TransportException(e);", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwOTExNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468109117", "bodyText": "the inner exception already has this message. I will add this on top of it for more clarity", "author": "azabbasi", "createdAt": "2020-08-10T18:51:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2NzU5MA=="}], "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java\nindex 34baf97cd..33cb01b57 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java\n\n@@ -92,9 +93,9 @@ public class HttpsIotHubConnection implements IotHubTransportConnection\n                     {\n                         batchMessage.addMessage(HttpsSingleMessage.parseHttpsMessage(singleMessage));\n                     }\n-                    catch (Exception e)\n+                    catch (IotHubSizeExceededException e)\n                     {\n-                        throw new TransportException(e);\n+                        throw new TransportException(\"Failed to create HTTPS batch message\", e);\n                     }\n                 }\n                 httpsMessage = batchMessage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MjcxMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468072712", "bodyText": "I think a good CI-only test to complement the above test is to try a bulk message made up of a large number of small messages. What do you think?", "author": "timtay-microsoft", "createdAt": "2020-08-10T17:45:06Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java", "diffHunk": "@@ -67,6 +67,14 @@ public void sendMessages() throws Exception\n         IotHubServicesCommon.sendMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n     }\n \n+    @Test\n+    public void sendBulkMessages() throws Exception\n+    {\n+        this.testInstance.setup();\n+\n+        IotHubServicesCommon.sendBulkMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n+    }\n+", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwOTUzNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468109534", "bodyText": "I like that. I will add a negative test as well to make sure the correct exception is thrown if the size of the message is above 255k", "author": "azabbasi", "createdAt": "2020-08-10T18:52:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MjcxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIyMzYxOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468223618", "bodyText": "it turns out we already have unit tests for the BatchHTTPmessages class the failure scenario", "author": "azabbasi", "createdAt": "2020-08-10T22:36:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MjcxMg=="}], "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java\nindex 3bcfdf66e..56167eb99 100644\n--- a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java\n+++ b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java\n\n@@ -75,6 +77,20 @@ public class SendMessagesTests extends SendMessagesCommon\n         IotHubServicesCommon.sendBulkMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n     }\n \n+    @Test\n+    public void sendManySmallMessagesAsBatch() throws Exception\n+    {\n+        // Only send batch messages in large quantities when using HTTPS protocol.\n+        if (this.testInstance.protocol != HTTPS)\n+        {\n+            return;\n+        }\n+\n+        this.testInstance.setup();\n+\n+        IotHubServicesCommon.sendBulkMessages(testInstance.client, testInstance.protocol, MULTIPLE_SMALL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n+    }\n+\n     @Test\n     @ContinuousIntegrationTest\n     public void sendLargestMessages() throws Exception\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMTk3Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468111977", "bodyText": "Use singleMessage when constructing the iothubtransportpacket, not message", "author": "timtay-microsoft", "createdAt": "2020-08-10T18:56:49Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "diffHunk": "@@ -401,6 +401,17 @@ public void addMessage(Message message, IotHubEventCallback callback, Object cal\n \n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n+\n+        if (message.isBulk() && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))\n+        {\n+            for (Message singleMessage : message.getNestedMessages())\n+            {\n+                waitingPacketsQueue.add(new IotHubTransportPacket(message, callback, callbackContext,null, System.currentTimeMillis()));", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMjE5Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468112193", "bodyText": "Otherwise you'll just be sending the bulk message over and over, not its children.", "author": "timtay-microsoft", "createdAt": "2020-08-10T18:57:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMTk3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\nindex db16f6a3d..68ee0738c 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\n\n@@ -406,7 +406,8 @@ public class IotHubTransport implements IotHubListener\n         {\n             for (Message singleMessage : message.getNestedMessages())\n             {\n-                waitingPacketsQueue.add(new IotHubTransportPacket(message, callback, callbackContext,null, System.currentTimeMillis()));\n+                this.addToWaitingQueue(new IotHubTransportPacket(singleMessage, callback, callbackContext,null, System.currentTimeMillis()));\n+                log.info(\"Messages were queued to be sent later ({})\", singleMessage);\n             }\n \n             return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjY3Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468236677", "bodyText": "what do nested messages mean here?", "author": "bikamani", "createdAt": "2020-08-10T23:16:29Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -35,6 +35,16 @@\n      */\n     private String messageId;\n \n+    /**\n+     * Whether or not there is a list of nested messages included in this instance.\n+     */\n+    private boolean isBulk;\n+\n+    /**\n+     * List of nested messages.", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM0OTMyOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469349328", "bodyText": "I have moved it to batched messages. That makes the batch message a wrapper around the same object type of Message.", "author": "azabbasi", "createdAt": "2020-08-12T15:33:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjY3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\nindex 2232f6b19..58c9221a4 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\n\n@@ -43,7 +43,7 @@ public class Message\n     /**\n      * List of nested messages.\n      */\n-    private Set<Message> nestedMessages;\n+    private List<Message> nestedMessages;\n \n     /**\n      * Destination of the message\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNzYyMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468237623", "bodyText": "so you can use lombok getter here right instead of line 194?", "author": "bikamani", "createdAt": "2020-08-10T23:19:39Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -35,6 +35,16 @@\n      */\n     private String messageId;\n \n+    /**\n+     * Whether or not there is a list of nested messages included in this instance.\n+     */\n+    private boolean isBulk;\n+\n+    /**\n+     * List of nested messages.\n+     */\n+    private Set<Message> nestedMessages;\n+", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0MDg1Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468240856", "bodyText": "True, but then I will have to change all the getters in this class no?", "author": "azabbasi", "createdAt": "2020-08-10T23:29:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNzYyMw=="}], "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\nindex 2232f6b19..58c9221a4 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java\n\n@@ -43,7 +43,7 @@ public class Message\n     /**\n      * List of nested messages.\n      */\n-    private Set<Message> nestedMessages;\n+    private List<Message> nestedMessages;\n \n     /**\n      * Destination of the message\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzOTAyNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468239026", "bodyText": "may be add some logging here?", "author": "bikamani", "createdAt": "2020-08-10T23:24:03Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "diffHunk": "@@ -401,6 +401,17 @@ public void addMessage(Message message, IotHubEventCallback callback, Object cal\n \n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n+\n+        if (message.isBulk() && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))\n+        {\n+            for (Message singleMessage : message.getNestedMessages())\n+            {", "originalCommit": "a58708a1f03a77ca9d90d44eabbc42185c490f79", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\nindex db16f6a3d..68ee0738c 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\n\n@@ -406,7 +406,8 @@ public class IotHubTransport implements IotHubListener\n         {\n             for (Message singleMessage : message.getNestedMessages())\n             {\n-                waitingPacketsQueue.add(new IotHubTransportPacket(message, callback, callbackContext,null, System.currentTimeMillis()));\n+                this.addToWaitingQueue(new IotHubTransportPacket(singleMessage, callback, callbackContext,null, System.currentTimeMillis()));\n+                log.info(\"Messages were queued to be sent later ({})\", singleMessage);\n             }\n \n             return;\n"}}, {"oid": "0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/0d9adfc065ddc2e6360155f1151bc3528b4bcf5e", "message": "Address comments.", "committedDate": "2020-08-10T23:27:33Z", "type": "commit"}, {"oid": "16174508139324697b9db02bd15047bdddce0fdf", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/16174508139324697b9db02bd15047bdddce0fdf", "message": "Implement batch messages.", "committedDate": "2020-08-11T15:54:14Z", "type": "commit"}, {"oid": "d83efbc321b4b281526a053f55d62ceb79d0d90a", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d83efbc321b4b281526a053f55d62ceb79d0d90a", "message": "Update Message.java", "committedDate": "2020-08-11T15:55:24Z", "type": "commit"}, {"oid": "ff8f0cdfdace908c0c7f091946096a84295f6d90", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/ff8f0cdfdace908c0c7f091946096a84295f6d90", "message": "initial commit for samples", "committedDate": "2020-08-12T15:54:27Z", "type": "commit"}, {"oid": "5520d0fefa98989eb28de23d254f4921618fc6e1", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/5520d0fefa98989eb28de23d254f4921618fc6e1", "message": "Fix issues", "committedDate": "2020-08-12T17:03:54Z", "type": "commit"}, {"oid": "2e4c4523aabcf3d0682512b0a0c011bd2e59b146", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/2e4c4523aabcf3d0682512b0a0c011bd2e59b146", "message": "Update README.md", "committedDate": "2020-08-12T17:10:40Z", "type": "commit"}, {"oid": "99d39fbf6fc555f1d46c19b939dcc50d950b8daf", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/99d39fbf6fc555f1d46c19b939dcc50d950b8daf", "message": "Update README.md", "committedDate": "2020-08-12T17:11:05Z", "type": "commit"}, {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b", "message": "Merge branch 'master' into feature/iot/azabbasi/httpbatch", "committedDate": "2020-08-12T17:13:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNzUwNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469437504", "bodyText": "A javadoc at the class level would be helpful. It should explain what it is, and link it to the relevant device client method by using \"{@ link <classname>#<methodName>}\"", "author": "timtay-microsoft", "createdAt": "2020-08-12T17:52:35Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.microsoft.azure.sdk.iot.device;\n+\n+import java.util.List;\n+\n+public class BatchMessages extends Message", "originalCommit": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzODg3OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469438878", "bodyText": "I can't do the spacing right on that string above due to github, but autocomplete should help you out here", "author": "timtay-microsoft", "createdAt": "2020-08-12T17:54:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNzUwNA=="}], "type": "inlineReview", "revised_code": {"commit": "8319193859ca49cd1c40d318fbdb53be1fbde394", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessage.java\nsimilarity index 63%\nrename from device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java\nrename to device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessage.java\nindex 5884b19ed..e93107595 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessage.java\n\n@@ -2,7 +2,10 @@ package com.microsoft.azure.sdk.iot.device;\n \n import java.util.List;\n \n-public class BatchMessages extends Message\n+/**\n+ * Used to construct batch messages to be sent to the IoT Hub {@link com.microsoft.azure.sdk.iot.device.InternalClient#sendEventBatchAsync(List, IotHubEventCallback, Object)}\n+ */\n+public class BatchMessage extends Message\n {\n     /**\n      * List of nested messages.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzOTc4OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469439788", "bodyText": "\"@ param messages\" could use a description. Something like \"The messages that will be sent as a batch\"", "author": "timtay-microsoft", "createdAt": "2020-08-12T17:56:22Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.microsoft.azure.sdk.iot.device;\n+\n+import java.util.List;\n+\n+public class BatchMessages extends Message\n+{\n+    /**\n+     * List of nested messages.\n+     */\n+    private List<Message> nestedMessages;\n+\n+    /**\n+     * Creates a batch message\n+     * This constructor is internal and can only be called within the com.microsoft.azure.sdk.iot.device package.\n+     * @param messages", "originalCommit": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8319193859ca49cd1c40d318fbdb53be1fbde394", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessage.java\nsimilarity index 63%\nrename from device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java\nrename to device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessage.java\nindex 5884b19ed..e93107595 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessage.java\n\n@@ -2,7 +2,10 @@ package com.microsoft.azure.sdk.iot.device;\n \n import java.util.List;\n \n-public class BatchMessages extends Message\n+/**\n+ * Used to construct batch messages to be sent to the IoT Hub {@link com.microsoft.azure.sdk.iot.device.InternalClient#sendEventBatchAsync(List, IotHubEventCallback, Object)}\n+ */\n+public class BatchMessage extends Message\n {\n     /**\n      * List of nested messages.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MDE1OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469440158", "bodyText": "Clarify that this callback is all-or-nothing for each batch message, so it will only be fired once", "author": "timtay-microsoft", "createdAt": "2020-08-12T17:56:58Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +185,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.", "originalCommit": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8319193859ca49cd1c40d318fbdb53be1fbde394", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\nindex 14694cd52..39ed235f3 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n\n@@ -188,6 +188,7 @@ public class InternalClient\n     /**\n      * ASynchronously sends a batch of messages to the IoT Hub\n      * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * In case of HTTPS, This API call is an all-or-nothing single HTTPS message and the callback will be triggered only once.\n      * Maximum payload size for HTTPS is 255KB\n      *\n      * @param messages the list of message to be sent.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MDY4MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469440681", "bodyText": "If you want to allow amqp/mqtt to use this batch API, then at least add a comment here explaining why only https doesn't split the batch message here", "author": "timtay-microsoft", "createdAt": "2020-08-12T17:57:52Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "diffHunk": "@@ -401,6 +401,18 @@ public void addMessage(Message message, IotHubEventCallback callback, Object cal\n \n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n+\n+        if (message instanceof BatchMessages && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))", "originalCommit": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8319193859ca49cd1c40d318fbdb53be1fbde394", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\nindex cdff0dc0a..356740d65 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java\n\n@@ -402,9 +402,11 @@ public class IotHubTransport implements IotHubListener\n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n \n-        if (message instanceof BatchMessages && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))\n+        // We will get the nested messages and queue them normally if this is a batch message but the protocol is not HTTPS\n+        // Currently only HTTPS is supports batch message events.\n+        if (message instanceof BatchMessage && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))\n         {\n-            for (Message singleMessage : ((BatchMessages)message).getNestedMessages())\n+            for (Message singleMessage : ((BatchMessage)message).getNestedMessages())\n             {\n                 this.addToWaitingQueue(new IotHubTransportPacket(singleMessage, callback, callbackContext,null, System.currentTimeMillis()));\n                 log.info(\"Messages were queued to be sent later ({})\", singleMessage);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MzYxNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469443615", "bodyText": "By adding this to the InternalClient rather than device client, you are allowing ModuleClients to use this API, too. I don't think that is an issue, but I wanted to make sure you think about that.", "author": "timtay-microsoft", "createdAt": "2020-08-12T18:03:06Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +185,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(List<Message> messages, IotHubEventCallback callback, Object callbackContext)", "originalCommit": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NzI1OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469447258", "bodyText": "The tests you wrote in SendMessagesTests automatically run the scenarios for ModuleClients and DeviceClients, so don't worry about test coverage on this one", "author": "timtay-microsoft", "createdAt": "2020-08-12T18:09:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MzYxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "8319193859ca49cd1c40d318fbdb53be1fbde394", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\nindex 14694cd52..39ed235f3 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n\n@@ -188,6 +188,7 @@ public class InternalClient\n     /**\n      * ASynchronously sends a batch of messages to the IoT Hub\n      * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * In case of HTTPS, This API call is an all-or-nothing single HTTPS message and the callback will be triggered only once.\n      * Maximum payload size for HTTPS is 255KB\n      *\n      * @param messages the list of message to be sent.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NDExMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469444110", "bodyText": "nit: The class should be \"BatchMessage\" not \"BatchMessages\" since it is ultimately just one http request", "author": "timtay-microsoft", "createdAt": "2020-08-12T18:03:59Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +185,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(List<Message> messages, IotHubEventCallback callback, Object callbackContext)\n+    {\n+        for (Message message: messages)\n+        {\n+            message.setConnectionDeviceId(this.config.getDeviceId());\n+        }\n+\n+        Message message = new BatchMessages(messages);", "originalCommit": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8319193859ca49cd1c40d318fbdb53be1fbde394", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\nindex 14694cd52..39ed235f3 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n\n@@ -188,6 +188,7 @@ public class InternalClient\n     /**\n      * ASynchronously sends a batch of messages to the IoT Hub\n      * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * In case of HTTPS, This API call is an all-or-nothing single HTTPS message and the callback will be triggered only once.\n      * Maximum payload size for HTTPS is 255KB\n      *\n      * @param messages the list of message to be sent.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NTEzMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469445133", "bodyText": "I see this as a good CI test. If you'd like, you can tag it with @ContinuousIntegrationTest. That will make it only run during nightly builds and CI builds", "author": "timtay-microsoft", "createdAt": "2020-08-12T18:05:55Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java", "diffHunk": "@@ -67,6 +69,28 @@ public void sendMessages() throws Exception\n         IotHubServicesCommon.sendMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n     }\n \n+    @Test\n+    public void sendBulkMessages() throws Exception\n+    {\n+        this.testInstance.setup();\n+\n+        IotHubServicesCommon.sendBulkMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n+    }\n+\n+    @Test\n+    public void sendManySmallMessagesAsBatch() throws Exception", "originalCommit": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8319193859ca49cd1c40d318fbdb53be1fbde394", "chunk": "diff --git a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java\nindex 56167eb99..e86e72f4e 100644\n--- a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java\n+++ b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java\n\n@@ -78,6 +78,7 @@ public class SendMessagesTests extends SendMessagesCommon\n     }\n \n     @Test\n+    @ContinuousIntegrationTest\n     public void sendManySmallMessagesAsBatch() throws Exception\n     {\n         // Only send batch messages in large quantities when using HTTPS protocol.\n"}}, {"oid": "8319193859ca49cd1c40d318fbdb53be1fbde394", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/8319193859ca49cd1c40d318fbdb53be1fbde394", "message": "Address comments.", "committedDate": "2020-08-12T18:32:45Z", "type": "commit"}, {"oid": "cd5f915e1f00b9be10ebb4aab0e8f7ff1c5c9029", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/cd5f915e1f00b9be10ebb4aab0e8f7ff1c5c9029", "message": "Merge branch 'feature/iot/azabbasi/httpbatch' of https://github.com/Azure/azure-iot-sdk-java into feature/iot/azabbasi/httpbatch", "committedDate": "2020-08-12T18:32:47Z", "type": "commit"}, {"oid": "e74e7e6a6a9c868a4cd4302eeb5379ff494cc80e", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e74e7e6a6a9c868a4cd4302eeb5379ff494cc80e", "message": "Update README.md", "committedDate": "2020-08-12T18:34:17Z", "type": "commit"}, {"oid": "35f58b6665c4e9c641c9f7b22af40c6c2f13b6ff", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/35f58b6665c4e9c641c9f7b22af40c6c2f13b6ff", "message": "Update README.md", "committedDate": "2020-08-12T18:35:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1MTAyMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469551020", "bodyText": "Async not ASync", "author": "timtay-microsoft", "createdAt": "2020-08-12T21:14:46Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +185,34 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub", "originalCommit": "35f58b6665c4e9c641c9f7b22af40c6c2f13b6ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adac7bc87f7afd290e5d7a94fed396f12b3c25df", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\nindex 39ed235f3..2992dd811 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java\n\n@@ -186,7 +186,7 @@ public class InternalClient\n     }\n \n     /**\n-     * ASynchronously sends a batch of messages to the IoT Hub\n+     * Asynchronously sends a batch of messages to the IoT Hub\n      * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n      * In case of HTTPS, This API call is an all-or-nothing single HTTPS message and the callback will be triggered only once.\n      * Maximum payload size for HTTPS is 255KB\n"}}, {"oid": "adac7bc87f7afd290e5d7a94fed396f12b3c25df", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/adac7bc87f7afd290e5d7a94fed396f12b3c25df", "message": "Update InternalClient.java", "committedDate": "2020-08-12T21:17:10Z", "type": "commit"}, {"oid": "ae00f0fd4cfe04d54928370e323dcb18d87aa663", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/ae00f0fd4cfe04d54928370e323dcb18d87aa663", "message": "Merge branch 'master' into feature/iot/azabbasi/httpbatch", "committedDate": "2020-08-12T21:25:35Z", "type": "commit"}]}