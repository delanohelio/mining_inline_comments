{"pr_number": 891, "pr_title": "fix(iot-dev): Fix issue where errors encountered at http message level were handled twice", "pr_createdAt": "2020-08-12T21:11:17Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/891", "timeline": [{"oid": "a4bab570b6b89c5be8e9c44ff4b4a4f4464afc95", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/a4bab570b6b89c5be8e9c44ff4b4a4f4464afc95", "message": "fix(iot-dev): Fix issue where errors encountered at http message level were handled twice\n\nThis same logic took place at the IotHubTransport layer based on the result of this method call, so no need to include this logic in the HTTP layer", "committedDate": "2020-08-12T21:09:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1MTAzNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/891#discussion_r469551037", "bodyText": "Can you point to where it is handled?", "author": "vinagesh", "createdAt": "2020-08-12T21:14:49Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java", "diffHunk": "@@ -151,11 +151,6 @@ public IotHubStatusCode sendMessage(Message message) throws TransportException\n                 //Codes_SRS_HTTPSIOTHUBCONNECTION_34_067: [If the response from the service is OK or OK_EMPTY, this function shall notify its listener that a message was sent with no exception.]\n                 this.listener.onMessageSent(transportMessage, null);\n             }", "originalCommit": "a4bab570b6b89c5be8e9c44ff4b4a4f4464afc95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1MTMyNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/891#discussion_r469551326", "bodyText": "Never mind. Should have read description earlier :)", "author": "vinagesh", "createdAt": "2020-08-12T21:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1MTAzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1MjI1Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/891#discussion_r469552256", "bodyText": "Sure, I can add a note that non-200 codes have their exceptions handled in the transport layer", "author": "timtay-microsoft", "createdAt": "2020-08-12T21:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1MTAzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1Njk2Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/891#discussion_r469556962", "bodyText": "That would be good", "author": "vinagesh", "createdAt": "2020-08-12T21:27:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1MTAzNw=="}], "type": "inlineReview", "revised_code": {"commit": "036345c67a128241f8495a6dc2207de03b0216f3", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java\nindex 57c829042..39e21170c 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java\n\n@@ -152,6 +152,9 @@ public class HttpsIotHubConnection implements IotHubTransportConnection\n                 this.listener.onMessageSent(transportMessage, null);\n             }\n \n+            // Status codes other than 200 and 204 have their errors handled in the IotHubTransport layer once this method returns,\n+            // so there is no need to call \"this.listener.onMessageSent(transportMessage, someException)\" from this layer.\n+\n             return status;\n         }\n     }\n"}}, {"oid": "036345c67a128241f8495a6dc2207de03b0216f3", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/036345c67a128241f8495a6dc2207de03b0216f3", "message": "squash", "committedDate": "2020-08-12T21:18:47Z", "type": "commit"}, {"oid": "66c3061b1bae6b88895d8d60228a8390e8598deb", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/66c3061b1bae6b88895d8d60228a8390e8598deb", "message": "Merge branch 'master' into timtay/httpFix", "committedDate": "2020-08-12T23:22:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwNjk4OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/891#discussion_r469606989", "bodyText": "so is it throwing exception at both layers currently?", "author": "bikamani", "createdAt": "2020-08-12T23:42:54Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java", "diffHunk": "@@ -173,11 +173,9 @@ public IotHubStatusCode sendMessage(Message message) throws TransportException\n                 //Codes_SRS_HTTPSIOTHUBCONNECTION_34_067: [If the response from the service is OK or OK_EMPTY, this function shall notify its listener that a message was sent with no exception.]\n                 this.listener.onMessageSent(transportMessage, null);\n             }\n-            else\n-            {\n-                //Codes_SRS_HTTPSIOTHUBCONNECTION_34_068: [If the response from the service not OK or OK_EMPTY, this function shall notify its listener that a message was with the mapped IotHubServiceException.]\n-                this.listener.onMessageSent(transportMessage, IotHubStatusCode.getConnectionStatusException(status, \"\"));\n-            }\n+\n+            // Status codes other than 200 and 204 have their errors handled in the IotHubTransport layer once this method returns,\n+            // so there is no need to call \"this.listener.onMessageSent(transportMessage, someException)\" from this layer.", "originalCommit": "66c3061b1bae6b88895d8d60228a8390e8598deb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwOTI4MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/891#discussion_r469609280", "bodyText": "Currently, the transport layer basically gets notified that the sent message failed twice. The first handling of the failed message works as expected, but the second handling fails because the message is already removed from the expected list and has already had its callback executed.", "author": "timtay-microsoft", "createdAt": "2020-08-12T23:50:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwNjk4OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "9df9d7e78a494ab1b46b88587e7ebc5376deec0f", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/9df9d7e78a494ab1b46b88587e7ebc5376deec0f", "message": "squash", "committedDate": "2020-08-12T23:56:24Z", "type": "commit"}]}