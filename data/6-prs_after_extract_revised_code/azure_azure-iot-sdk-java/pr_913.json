{"pr_number": 913, "pr_title": "Add support for DPS for PnP samples", "pr_createdAt": "2020-09-11T16:55:51Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/913", "timeline": [{"oid": "c499c685f7376c90558ca84c35016a7c0084d45e", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/c499c685f7376c90558ca84c35016a7c0084d45e", "message": "provisioning samples", "committedDate": "2020-09-11T00:42:10Z", "type": "commit"}, {"oid": "c2d3b223db3066975ced6307c33ab870366baa60", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/c2d3b223db3066975ced6307c33ab870366baa60", "message": "add options", "committedDate": "2020-09-11T16:53:07Z", "type": "commit"}, {"oid": "074253ccb581947a5e9ffb364fad882f7f62b743", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/074253ccb581947a5e9ffb364fad882f7f62b743", "message": "Merge branch 'master' into bikamani/dpsSamples", "committedDate": "2020-09-12T00:57:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3MzcwNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/913#discussion_r488973707", "bodyText": "No need to sleep 10 seconds each time. 1 second should be fine. Also rename this to POLLING_PERIOD or something similar", "author": "timtay-microsoft", "createdAt": "2020-09-15T21:07:33Z", "path": "device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java", "diffHunk": "@@ -98,6 +168,60 @@ public void run() {\n         }).start();\n     }\n \n+    private static void initializeAndProvisionDevice() throws ProvisioningDeviceClientException, IOException, URISyntaxException, InterruptedException {\n+        SecurityProviderSymmetricKey securityClientSymmetricKey = new SecurityProviderSymmetricKey(deviceSymmetricKey.getBytes(), registrationId);\n+        ProvisioningDeviceClient provisioningDeviceClient = null;\n+        ProvisioningStatus provisioningStatus = new ProvisioningStatus();\n+\n+        provisioningDeviceClient = ProvisioningDeviceClient.create(globalEndpoint, scopeId, provisioningProtocol, securityClientSymmetricKey);\n+\n+        AdditionalData additionalData = new AdditionalData();\n+        additionalData.setProvisioningPayload(String.format(\"{\\\"modelId\\\": \\\"%s\\\"}\", MODEL_ID));\n+\n+        provisioningDeviceClient.registerDevice(new ProvisioningDeviceClientRegistrationCallbackImpl(), provisioningStatus, additionalData);\n+\n+        while (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() != ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ASSIGNED)\n+        {\n+            if (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ERROR ||\n+                    provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_DISABLED ||\n+                    provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_FAILED)\n+            {\n+                provisioningStatus.exception.printStackTrace();\n+                System.out.println(\"Registration error, bailing out\");\n+                break;\n+            }\n+            System.out.println(\"Waiting for Provisioning Service to register\");\n+            Thread.sleep(MAX_TIME_TO_WAIT_FOR_REGISTRATION);", "originalCommit": "074253ccb581947a5e9ffb364fad882f7f62b743", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "865790266b8d8d1a102f03903ef09c513de7211b", "chunk": "diff --git a/device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java b/device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java\nindex 43dcef361..1584a9e8f 100644\n--- a/device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java\n+++ b/device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java\n\n@@ -204,6 +205,7 @@ public class Thermostat {\n             String iotHubUri = provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getIothubUri();\n             String deviceId = provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getDeviceId();\n \n+            log.debug(\"Opening the device client.\");\n             deviceClient = DeviceClient.createFromSecurityProvider(iotHubUri, deviceId, securityClientSymmetricKey, IotHubClientProtocol.MQTT, options);\n             deviceClient.open();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3NDI0Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/913#discussion_r488974246", "bodyText": "Add a log statement to the effect of \"Opening device client...\"", "author": "timtay-microsoft", "createdAt": "2020-09-15T21:08:42Z", "path": "device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java", "diffHunk": "@@ -98,6 +168,60 @@ public void run() {\n         }).start();\n     }\n \n+    private static void initializeAndProvisionDevice() throws ProvisioningDeviceClientException, IOException, URISyntaxException, InterruptedException {\n+        SecurityProviderSymmetricKey securityClientSymmetricKey = new SecurityProviderSymmetricKey(deviceSymmetricKey.getBytes(), registrationId);\n+        ProvisioningDeviceClient provisioningDeviceClient = null;\n+        ProvisioningStatus provisioningStatus = new ProvisioningStatus();\n+\n+        provisioningDeviceClient = ProvisioningDeviceClient.create(globalEndpoint, scopeId, provisioningProtocol, securityClientSymmetricKey);\n+\n+        AdditionalData additionalData = new AdditionalData();\n+        additionalData.setProvisioningPayload(String.format(\"{\\\"modelId\\\": \\\"%s\\\"}\", MODEL_ID));\n+\n+        provisioningDeviceClient.registerDevice(new ProvisioningDeviceClientRegistrationCallbackImpl(), provisioningStatus, additionalData);\n+\n+        while (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() != ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ASSIGNED)\n+        {\n+            if (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ERROR ||\n+                    provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_DISABLED ||\n+                    provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_FAILED)\n+            {\n+                provisioningStatus.exception.printStackTrace();\n+                System.out.println(\"Registration error, bailing out\");\n+                break;\n+            }\n+            System.out.println(\"Waiting for Provisioning Service to register\");\n+            Thread.sleep(MAX_TIME_TO_WAIT_FOR_REGISTRATION);\n+        }\n+\n+        ClientOptions options = new ClientOptions();\n+        options.setModelId(MODEL_ID);\n+\n+        if (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ASSIGNED) {\n+            System.out.println(\"IotHUb Uri : \" + provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getIothubUri());\n+            System.out.println(\"Device ID : \" + provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getDeviceId());\n+\n+            String iotHubUri = provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getIothubUri();\n+            String deviceId = provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getDeviceId();\n+", "originalCommit": "074253ccb581947a5e9ffb364fad882f7f62b743", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "865790266b8d8d1a102f03903ef09c513de7211b", "chunk": "diff --git a/device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java b/device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java\nindex 43dcef361..1584a9e8f 100644\n--- a/device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java\n+++ b/device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java\n\n@@ -204,6 +205,7 @@ public class Thermostat {\n             String iotHubUri = provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getIothubUri();\n             String deviceId = provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getDeviceId();\n \n+            log.debug(\"Opening the device client.\");\n             deviceClient = DeviceClient.createFromSecurityProvider(iotHubUri, deviceId, securityClientSymmetricKey, IotHubClientProtocol.MQTT, options);\n             deviceClient.open();\n         }\n"}}, {"oid": "0d9d6a20f5102c45c6a3579f9b4e28461b8fe416", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/0d9d6a20f5102c45c6a3579f9b4e28461b8fe416", "message": "Merge branch 'master' into bikamani/dpsSamples", "committedDate": "2020-09-16T17:01:41Z", "type": "commit"}, {"oid": "865790266b8d8d1a102f03903ef09c513de7211b", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/865790266b8d8d1a102f03903ef09c513de7211b", "message": "solve formatting", "committedDate": "2020-09-17T00:16:27Z", "type": "commit"}, {"oid": "b56ace02f595994371aaf7224649a4d407a45223", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/b56ace02f595994371aaf7224649a4d407a45223", "message": "Merge branch 'bikamani/dpsSamples' of https://github.com/Azure/azure-iot-sdk-java into bikamani/dpsSamples", "committedDate": "2020-09-17T00:17:16Z", "type": "commit"}]}