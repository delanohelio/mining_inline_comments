{"pr_number": 825, "pr_title": "Fix a few flakey tests, add more context when logging transport messages", "pr_createdAt": "2020-06-26T00:30:59Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/825", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwODcxOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r445908719", "bodyText": "This information has been useful to me when debugging these flakey tests, and I suspect customer's will appreciate this too", "author": "timtay-microsoft", "createdAt": "2020-06-26T00:31:36Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportMessage.java", "diffHunk": "@@ -293,6 +293,11 @@ public String toString()\n             base.append(\"Request Id [\").append(this.requestId).append(\"] \");\n         }\n \n+        if (this.getDeviceOperationType() != null && this.getDeviceOperationType() != DeviceOperations.DEVICE_OPERATION_UNKNOWN)\n+        {\n+            base.append(\"Device Operation Type [\").append(this.getDeviceOperationType()).append(\"] \");", "originalCommit": "60d6a8d40bb6ad5df32a76b2e5666f92c6a87d1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNTU3OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r446325578", "bodyText": "This will log if a message is a twin subscription message, method subscription message, etc.", "author": "timtay-microsoft", "createdAt": "2020-06-26T17:47:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwODcxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "4a90d926084ed5c1dae0846ac9c6924f5baa65c2", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportMessage.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportMessage.java\nindex 64d0b0a13..ae400322d 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportMessage.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportMessage.java\n\n@@ -293,11 +293,6 @@ public class IotHubTransportMessage extends Message\n             base.append(\"Request Id [\").append(this.requestId).append(\"] \");\n         }\n \n-        if (this.getDeviceOperationType() != null && this.getDeviceOperationType() != DeviceOperations.DEVICE_OPERATION_UNKNOWN)\n-        {\n-            base.append(\"Device Operation Type [\").append(this.getDeviceOperationType()).append(\"] \");\n-        }\n-\n         return base.toString();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwODk2MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r445908961", "bodyText": "The commit message explains this further, but Android SDKs return -1 when inputStream.read(...) reads no bytes. JDKs return 0 though. For consistency between JDK and android SDK, we shouldn't use this return value", "author": "timtay-microsoft", "createdAt": "2020-06-26T00:32:32Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/FileUploadTests.java", "diffHunk": "@@ -304,7 +304,8 @@ private void verifyNotification(FileUploadNotification fileUploadNotification, F\n         try (InputStream inputStream = u.openStream())\n         {\n             byte[] testBuf = new byte[(int)fileUploadState.fileLength];\n-            int testLen = inputStream.read(testBuf,  0, (int)fileUploadState.fileLength);\n+            inputStream.read(testBuf,  0, (int)fileUploadState.fileLength);\n+            int testLen = (int)fileUploadState.fileLength;", "originalCommit": "60d6a8d40bb6ad5df32a76b2e5666f92c6a87d1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNjE4Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r446326187", "bodyText": "that is unfortunate ... good thinking.", "author": "azabbasi", "createdAt": "2020-06-26T17:49:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwODk2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4a90d926084ed5c1dae0846ac9c6924f5baa65c2", "chunk": "diff --git a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/FileUploadTests.java b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/FileUploadTests.java\nindex c0575cd14..1046c95b9 100644\n--- a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/FileUploadTests.java\n+++ b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/FileUploadTests.java\n\n@@ -304,8 +304,7 @@ public class FileUploadTests extends IntegrationTest\n         try (InputStream inputStream = u.openStream())\n         {\n             byte[] testBuf = new byte[(int)fileUploadState.fileLength];\n-            inputStream.read(testBuf,  0, (int)fileUploadState.fileLength);\n-            int testLen = (int)fileUploadState.fileLength;\n+            int testLen = inputStream.read(testBuf,  0, (int)fileUploadState.fileLength);\n             byte[] actualBuf = new byte[(int)fileUploadState.fileLength];\n             fileUploadState.fileInputStream.reset();\n             int actualLen = (fileUploadState.fileLength == 0) ? (int) fileUploadState.fileLength : fileUploadState.fileInputStream.read(actualBuf, 0, (int) fileUploadState.fileLength);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwOTUxNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r445909515", "bodyText": "This status class was used to simplify twin callbacks, but it hid useful information for failure cases. Knowing why a callback fired back with an unsuccessful state is important to log when the test fails", "author": "timtay-microsoft", "createdAt": "2020-06-26T00:34:40Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/setup/DeviceTwinCommon.java", "diffHunk": "@@ -159,25 +160,20 @@ public static Collection inputs() throws Exception\n     // How much to wait until a message makes it to the server, in milliseconds\n     protected static final Integer SEND_TIMEOUT_MILLISECONDS = 60000;\n \n-    public enum STATUS", "originalCommit": "60d6a8d40bb6ad5df32a76b2e5666f92c6a87d1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwOTY1OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r445909658", "bodyText": "only return the newly created property", "author": "timtay-microsoft", "createdAt": "2020-06-26T00:35:17Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/setup/DeviceTwinCommon.java", "diffHunk": "@@ -230,13 +226,18 @@ public void PropertyCall(String propertyKey, Object propertyValue, Object contex\n             }\n         }\n \n-        public synchronized void createNewReportedProperties(int maximumPropertiesToCreate)\n+        public synchronized Set<Property> createNewReportedProperties(int maximumPropertiesToCreate)\n         {\n+            Set<Property> newProperties = new HashSet<>();", "originalCommit": "60d6a8d40bb6ad5df32a76b2e5666f92c6a87d1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMDc4OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r445910788", "bodyText": "It's important to only send this thread's new reported property. If it sends the device's full reported property set, then iothub will receive two twin messages. one with:\n{\n  \"key1\":\"oldValue1\",\n  \"key2\":\"someUpdatedValue2\"\n}\n\nand another with\n{\n  \"key1\":\"someUpdatedValue1\",\n  \"key2\":\"someUpdatedValue2\"\n}\n\nbut iothub may process them out of order, and the resulting twin representation on the service side could be either\n{\n  \"key1\":\"someUpdatedValue1\",\n  \"key2\":\"someUpdatedValue2\"\n}\n\nor the incorrect representation\n{\n  \"key1\":\"oldValue1\",\n  \"key2\":\"someUpdatedValue2\"\n}", "author": "timtay-microsoft", "createdAt": "2020-06-26T00:39:59Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/twin/ReportedPropertiesTests.java", "diffHunk": "@@ -81,14 +85,14 @@ public void run()\n                 {\n                     try\n                     {\n-                        deviceUnderTest.dCDeviceForTwin.createNewReportedProperties(1);\n-                        internalClient.sendReportedProperties(deviceUnderTest.dCDeviceForTwin.getReportedProp());\n+                        Set<Property> newReportedProperties = deviceUnderTest.dCDeviceForTwin.createNewReportedProperties(1);\n+                        internalClient.sendReportedProperties(newReportedProperties);", "originalCommit": "60d6a8d40bb6ad5df32a76b2e5666f92c6a87d1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMDkwMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r445910902", "bodyText": "The test would fail in the latter case because it was expecting a final state of\n{\n  \"key1\":\"someUpdatedValue1\",\n  \"key2\":\"someUpdatedValue2\"\n}", "author": "timtay-microsoft", "createdAt": "2020-06-26T00:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMDc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMjk0Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r445912943", "bodyText": "So the fix here is to just send one property at a time, as it gets updated.\n{\n  \"key1\":\"someUpdatedValue1\"\n}\n\nand\n{\n  \"key2\":\"someUpdatedValue2\"\n}\n\nso that iothub's representation of this twin will always be\n{\n  \"key1\":\"someUpdatedValue1\",\n  \"key2\":\"someUpdatedValue2\"\n}", "author": "timtay-microsoft", "createdAt": "2020-06-26T00:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMDc4OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMTA4MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r445911081", "bodyText": "Again, only send the reported properties that belong to this thread. See above for why", "author": "timtay-microsoft", "createdAt": "2020-06-26T00:41:07Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/twin/ReportedPropertiesTests.java", "diffHunk": "@@ -153,31 +157,31 @@ public void testUpdateReportedPropertiesMultiThreaded() throws IOException, Inte\n         // send max_prop RP all at once\n         deviceUnderTest.dCDeviceForTwin.createNewReportedProperties(MAX_PROPERTIES_TO_TEST);\n         internalClient.sendReportedProperties(deviceUnderTest.dCDeviceForTwin.getReportedProp());\n-        Thread.sleep(DELAY_BETWEEN_OPERATIONS);\n+        Thread.sleep(REPORTED_PROPERTIES_PROPAGATION_DELAY_MILLISECONDS);\n \n         // act\n         // Update RP\n         for (int i = 0; i < MAX_PROPERTIES_TO_TEST; i++)\n         {\n-        final int index = i;\n-        executor.submit(new Runnable()\n-        {\n-            @Override\n-            public void run()\n+            final int index = i;\n+            executor.submit(new Runnable()\n             {\n-                try\n-                {\n-                    deviceUnderTest.dCDeviceForTwin.updateExistingReportedProperty(index);\n-                    internalClient.sendReportedProperties(deviceUnderTest.dCDeviceForTwin.getReportedProp());\n-                    waitAndVerifyTwinStatusBecomesSuccess();\n-                }\n-                catch (IOException | InterruptedException e)\n+                @Override\n+                public void run()\n                 {\n-                    fail(CorrelationDetailsLoggingAssert.buildExceptionMessage(\"Unexpected exception occurred during sending reported properties: \" + Tools.getStackTraceFromThrowable(e), internalClient));\n+                    try\n+                    {\n+                        Set<Property> updatedProperties = deviceUnderTest.dCDeviceForTwin.updateExistingReportedProperty(index);\n+                        internalClient.sendReportedProperties(updatedProperties);", "originalCommit": "60d6a8d40bb6ad5df32a76b2e5666f92c6a87d1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "4a90d926084ed5c1dae0846ac9c6924f5baa65c2", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4a90d926084ed5c1dae0846ac9c6924f5baa65c2", "message": "fix(e2e): fix flakey reported properties tests\n\nMany reported property tests made the mistake of sending reported property updates with updated properties and properties that were not yet updated. As a result, the ordering that IoT Hub handled these messages determined if the test would pass or not. In effect, we would lose reported property updates because one update would accidentally overwrite another sometimes", "committedDate": "2020-06-26T00:46:31Z", "type": "commit"}, {"oid": "41072126f2570219c56995a204bdbbd3e74b1b57", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/41072126f2570219c56995a204bdbbd3e74b1b57", "message": "refactor(iot-dev): Add additional logging context for transport messages\n\nLogs should include the type of transport message (subscribe to twin request, subscribe to twin response, etc.) since that makes logs easier to read", "committedDate": "2020-06-26T00:46:31Z", "type": "commit"}, {"oid": "1d6294ffef2494ff287b7876dd1ef7ee9ce249d5", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/1d6294ffef2494ff287b7876dd1ef7ee9ce249d5", "message": "fix(e2e): Fix android file upload test failures\n\nandroid SDK returns -1 when inputStream.read(...) reads no bytes, but JDKs return 0. As a result, android would fail the file upload tests where the file had 0 bytes.", "committedDate": "2020-06-26T00:46:31Z", "type": "commit"}, {"oid": "1d6294ffef2494ff287b7876dd1ef7ee9ce249d5", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/1d6294ffef2494ff287b7876dd1ef7ee9ce249d5", "message": "fix(e2e): Fix android file upload test failures\n\nandroid SDK returns -1 when inputStream.read(...) reads no bytes, but JDKs return 0. As a result, android would fail the file upload tests where the file had 0 bytes.", "committedDate": "2020-06-26T00:46:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNjkxOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r446326919", "bodyText": "how is this going to affect the callback? is this considered a breaking change?", "author": "azabbasi", "createdAt": "2020-06-26T17:50:45Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/setup/DeviceTwinCommon.java", "diffHunk": "@@ -159,25 +160,20 @@ public static Collection inputs() throws Exception\n     // How much to wait until a message makes it to the server, in milliseconds\n     protected static final Integer SEND_TIMEOUT_MILLISECONDS = 60000;\n \n-    public enum STATUS\n-    {\n-        SUCCESS, FAILURE, UNKNOWN\n-    }\n-\n     public class DeviceTwinStatusCallBack implements IotHubEventCallback\n     {\n         public void execute(IotHubStatusCode status, Object context)\n         {\n             DeviceState state = (DeviceState) context;\n \n-            //On failure, Don't update status any further", "originalCommit": "1d6294ffef2494ff287b7876dd1ef7ee9ce249d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMzMDA0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r446330040", "bodyText": "This is in the test code, so it isn't a breaking change, no", "author": "timtay-microsoft", "createdAt": "2020-06-26T17:57:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNjkxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMzMzIyOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r446333229", "bodyText": "ah, the file path threw me off", "author": "azabbasi", "createdAt": "2020-06-26T18:04:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNjkxOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNzc1Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r446327753", "bodyText": "this method is no longer doing what its name implies does it? it's creating and returning a new set", "author": "azabbasi", "createdAt": "2020-06-26T17:52:32Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/setup/DeviceTwinCommon.java", "diffHunk": "@@ -259,8 +260,9 @@ public synchronized void updateAllExistingReportedProperties()\n             }\n         }\n \n-        public synchronized void updateExistingReportedProperty(int index)\n+        public synchronized Set<Property> updateExistingReportedProperty(int index)", "originalCommit": "1d6294ffef2494ff287b7876dd1ef7ee9ce249d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMzMDU0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r446330540", "bodyText": "It still does what it says. It only returns the property that was updated, but that returned property did already exist", "author": "timtay-microsoft", "createdAt": "2020-06-26T17:58:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNzc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMzMTE5MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r446331191", "bodyText": "By the way, this and other methods always return Set even when only one property is in the set. The reason for this is so that the test method can use this returned value directly when calling \"sendReportedProperties(Set)\" instead of building the set after calling this method", "author": "timtay-microsoft", "createdAt": "2020-06-26T17:59:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNzc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMzMzc5NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/825#discussion_r446333795", "bodyText": "I see, so it updates the existing and also returns a new set as a return value. fair.", "author": "azabbasi", "createdAt": "2020-06-26T18:05:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNzc1Mw=="}], "type": "inlineReview", "revised_code": null}]}