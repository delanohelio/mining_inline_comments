{"pr_number": 775, "pr_title": "fix(iot-dev): Fix issue where MQTT didn't url encode application properties correctly", "pr_createdAt": "2020-05-12T18:26:59Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/775", "timeline": [{"oid": "a87041b1fa98d6aec7fad66e3e7a05a6e40f81e3", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/a87041b1fa98d6aec7fad66e3e7a05a6e40f81e3", "message": "fix(iot-dev): Fix issue where MQTT didn't url encode application properties correctly\n\nURLEncoder.Encode fails to encode the character '+', so I've added a manual replace step for this character.\n\nAlso removing all character validation for application property keys and values now that this MQTT bug is fixed. There is no longer a device-side reason to validate these values as all protocols are encoding them correctly now such that the protocol doesn't throw an exception. Iot Hub will be the validator, not the client", "committedDate": "2020-05-12T18:23:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0Njk5MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423946990", "bodyText": "whoa, who added hindi in here!", "author": "abhipsaMisra", "createdAt": "2020-05-12T18:30:54Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/MessagePropertyTest.java", "diffHunk": "@@ -131,20 +111,6 @@ public void isValidAppPropertyReturnsTrueForValidAppProperty()\n         assertThat(testIsValidAppProperty, is(expectedIsValidAppProperty));\n     }\n \n-    // Tests_SRS_MESSAGEPROPERTY_11_007: [The function shall return true if and only if the name and value only use characters in: US-ASCII and the name is not a reserved property name.]\n-    @Test\n-    public void isValidAppPropertyReturnsFalseForInvalidAppProperty()\n-    {\n-        final String name = \"test-name\";\n-        final String illegalValue = \"\u092a\u0930\u0940\u0915\u094d\u0937\u0923\"; // Unicode is not supported in MessageProperty value", "originalCommit": "a87041b1fa98d6aec7fad66e3e7a05a6e40f81e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDAyMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423950020", "bodyText": "Haha, I'm not sure! @prmathur-microsoft perhaps?", "author": "timtay-microsoft", "createdAt": "2020-05-12T18:36:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0Njk5MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1NjM0Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423956342", "bodyText": "Do we need to validate even this?", "author": "abhipsaMisra", "createdAt": "2020-05-12T18:47:04Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/MessageProperty.java", "diffHunk": "@@ -163,17 +144,9 @@ public boolean hasSameName(String name) {\n      *\n      * @return whether the property is a valid application property.\n      */\n-    public static boolean isValidAppProperty(String name, String value) {\n-        boolean propertyIsValid = false;\n-\n-        // Codes_SRS_MESSAGEPROPERTY_11_007: [The function shall return true if and only if the name and value only use characters in US-ASCII and the name is not a reserved property name.]\n-        if (!RESERVED_PROPERTY_NAMES.contains(name)\n-                && usesValidChars(name)\n-                && usesValidChars(value)) {\n-            propertyIsValid = true;\n-        }\n-\n-        return propertyIsValid;\n+    public static boolean isValidAppProperty(String name, String value)\n+    {\n+        return !RESERVED_PROPERTY_NAMES.contains(name);", "originalCommit": "a87041b1fa98d6aec7fad66e3e7a05a6e40f81e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1ODQ1OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423958459", "bodyText": "Maybe not, but that kind of change is a bit out of scope for the customer issue I'm working to solve. Maybe if a customer complains later, we can re-evaluate", "author": "timtay-microsoft", "createdAt": "2020-05-12T18:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1NjM0Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjA0Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423962043", "bodyText": "What's the limitation with URLEncoder being unable to encode +?", "author": "abhipsaMisra", "createdAt": "2020-05-12T18:56:26Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java", "diffHunk": "@@ -154,15 +154,15 @@ private boolean appendPropertyIfPresent(StringBuilder stringBuilder, boolean sep\n \n                 if (isApplicationProperty)\n                 {\n-                    stringBuilder.append(URLEncoder.encode(propertyKey, StandardCharsets.UTF_8.name()));\n+                    stringBuilder.append(URLEncoder.encode(propertyKey, StandardCharsets.UTF_8.name()).replaceAll(\"\\\\+\", \"%20\"));", "originalCommit": "a87041b1fa98d6aec7fad66e3e7a05a6e40f81e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjgxNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423962815", "bodyText": "https://www.urlencoder.io/java/", "author": "timtay-microsoft", "createdAt": "2020-05-12T18:57:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MzA0MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423963041", "bodyText": "\"Note that Java\u2019s URLEncoder class encodes space character(\" \") into a + sign. This is contrary to other languages like Javascript that encode space character into %20.\"", "author": "timtay-microsoft", "createdAt": "2020-05-12T18:58:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2NDE2Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423964163", "bodyText": "Just updated my explanation above, the problem is actually that URLEncoder.Encode(...) encodes spaces as '+' which is unusual for url encoding. For MQTT in particular, you can't have '+' characters in the topic string, but you can have '%20'", "author": "timtay-microsoft", "createdAt": "2020-05-12T19:00:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2NDYwOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423964608", "bodyText": "So are we encoding space or \"+\"?", "author": "abhipsaMisra", "createdAt": "2020-05-12T19:00:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2NzM4MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423967381", "bodyText": "We are fixing how ' ' gets encoded by replacing the incorrect '+' with the correct '%20'\nFor example:\nString urlEncoded = URLEncoder.encode(\"This string has spaces\", StandardCharsets.UTF_8.displayName());\nString actuallyUrlEncoded = urlEncoded.replaceAll(\"\\\\+\", \"%20\");\n\nurlEncoded = \"This+string+has+spaces\"\nactuallyUrlEncoded = \"This%20string%20has%20spaces\"", "author": "timtay-microsoft", "createdAt": "2020-05-12T19:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2Nzc4MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423967780", "bodyText": "C# does this correctly when using UrlPathEncode: https://docs.microsoft.com/en-us/dotnet/api/system.web.httputility.urlencode?view=netcore-3.1", "author": "timtay-microsoft", "createdAt": "2020-05-12T19:06:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2OTYwOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423969609", "bodyText": "yes, this is what I was looking for: We are fixing how ' ' gets encoded by replacing the incorrect '+' with the correct '%20'\nThe initial wording of the PR confused me.\nI would suggest adding this as a comment where the manual replace is done.", "author": "abhipsaMisra", "createdAt": "2020-05-12T19:09:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MTQyOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/775#discussion_r423971429", "bodyText": "Sure thing, I can add some comments to clarify this .replaceAll call", "author": "timtay-microsoft", "createdAt": "2020-05-12T19:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MjA0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "44ceb855866d8977c131033a77b7484ceff98ef3", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java\nindex dd6a4cd60..9686e25ef 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java\n\n@@ -154,6 +154,7 @@ public class MqttMessaging extends Mqtt\n \n                 if (isApplicationProperty)\n                 {\n+                    // URLEncoder.Encode incorrectly encodes space characters as '+'. For MQTT to work, we need to replace those '+' with \"%20\"\n                     stringBuilder.append(URLEncoder.encode(propertyKey, StandardCharsets.UTF_8.name()).replaceAll(\"\\\\+\", \"%20\"));\n                 }\n                 else\n"}}, {"oid": "44ceb855866d8977c131033a77b7484ceff98ef3", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/44ceb855866d8977c131033a77b7484ceff98ef3", "message": "cr comments", "committedDate": "2020-05-12T19:14:10Z", "type": "commit"}]}