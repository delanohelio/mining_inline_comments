{"pr_number": 909, "pr_title": "refactor(sample): Make file upload samples use the granular APIs instead of the deprecated APIs", "pr_createdAt": "2020-09-04T21:59:01Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/909", "timeline": [{"oid": "694b3e65357a0636cee9a0c26af753660c920d06", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/694b3e65357a0636cee9a0c26af753660c920d06", "message": "refactor(sample): Make file upload samples use the granular APIs instead of the deprecated APIs", "committedDate": "2020-09-04T21:58:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2NDA4Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/909#discussion_r483864083", "bodyText": "nit: the \"Successfully\" word in the console will be misleading,\nMaybe:\n\"Failed to upload the file. IoT Hub was notified that the SAS URI can be freed\"", "author": "azabbasi", "createdAt": "2020-09-04T22:10:43Z", "path": "device/iot-device-samples/file-upload-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/FileUploadSimpleSample.java", "diffHunk": "@@ -58,29 +62,64 @@ public static void main(String[] args)\n         IotHubClientProtocol protocol = IotHubClientProtocol.MQTT;\n \n         System.out.println(\"Successfully read input parameters.\");\n-        System.out.format(\"Using communication protocol %s.\\n\",\n-                protocol.name());\n \n         DeviceClient client = new DeviceClient(connString, protocol);\n \n         System.out.println(\"Successfully created an IoT Hub client.\");\n \n         try\n         {\n-\n             File file = new File(fullFileName);\n-            if(file.isDirectory())\n+            if (file.isDirectory())\n             {\n                 throw new IllegalArgumentException(fullFileName + \" is a directory, please provide a single file name, or use the FileUploadSample to upload directories.\");\n             }\n-            else\n+\n+            System.out.println(\"Retrieving SAS URI from IoT Hub...\");\n+            FileUploadSasUriResponse sasUriResponse = client.getFileUploadSasUri(new FileUploadSasUriRequest(file.getName()));\n+\n+            System.out.println(\"Successfully got SAS URI from IoT Hub\");\n+            System.out.println(\"Correlation Id: \" + sasUriResponse.getCorrelationId());\n+            System.out.println(\"Container name: \" + sasUriResponse.getContainerName());\n+            System.out.println(\"Blob name: \" + sasUriResponse.getBlobName());\n+            System.out.println(\"Blob Uri: \" + sasUriResponse.getBlobUri());\n+\n+            System.out.println(\"Using the Azure Storage SDK to upload file to Azure Storage...\");\n+\n+            try (FileInputStream fileInputStream = new FileInputStream(file))\n             {\n-                client.uploadToBlobAsync(file.getName(), new FileInputStream(file), file.length(), new FileUploadStatusCallBack(), null);\n+                // Note that other versions of the Azure Storage SDK can be used here instead. The latest can be found here:\n+                // https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/storage#azure-storage-sdk-client-library-for-java\n+                CloudBlockBlob blob = new CloudBlockBlob(sasUriResponse.getBlobUri());\n+                blob.upload(fileInputStream, file.length());\n             }\n+            catch (Exception e)\n+            {\n+                System.out.println(\"Exception encountered while uploading file to blob: \" + e.getMessage());\n+\n+                System.out.println(\"Failed to upload file to Azure Storage.\");\n+\n+                System.out.println(\"Notifying IoT Hub that the SAS URI can be freed and that the file upload failed.\");\n+\n+                // Note that this is done even when the file upload fails. IoT Hub has a fixed number of SAS URIs allowed active\n+                // at any given time. Once you are done with the file upload, you should free your SAS URI so that other\n+                // SAS URIs can be generated. If a SAS URI is not freed through this API, then it will free itself eventually\n+                // based on how long SAS URIs are configured to live on your IoT Hub.\n+                FileUploadCompletionNotification completionNotification = new FileUploadCompletionNotification(sasUriResponse.getCorrelationId(), false);\n+                client.completeFileUploadAsync(completionNotification);\n \n-            System.out.println(\"File upload started with success\");\n+                System.out.println(\"Successfully notified IoT Hub that the SAS URI can be freed, and that the file upload was a failure.\");", "originalCommit": "694b3e65357a0636cee9a0c26af753660c920d06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe5fe10d77b151e21f87da862ad53045a57157bb", "chunk": "diff --git a/device/iot-device-samples/file-upload-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/FileUploadSimpleSample.java b/device/iot-device-samples/file-upload-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/FileUploadSimpleSample.java\nindex 1902bff30..b4fc13b2f 100644\n--- a/device/iot-device-samples/file-upload-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/FileUploadSimpleSample.java\n+++ b/device/iot-device-samples/file-upload-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/FileUploadSimpleSample.java\n\n@@ -108,7 +108,7 @@ public class FileUploadSimpleSample\n                 FileUploadCompletionNotification completionNotification = new FileUploadCompletionNotification(sasUriResponse.getCorrelationId(), false);\n                 client.completeFileUploadAsync(completionNotification);\n \n-                System.out.println(\"Successfully notified IoT Hub that the SAS URI can be freed, and that the file upload was a failure.\");\n+                System.out.println(\"Notified IoT Hub that the SAS URI can be freed and that the file upload was a failure.\");\n \n                 client.closeNow();\n                 return;\n"}}, {"oid": "fe5fe10d77b151e21f87da862ad53045a57157bb", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/fe5fe10d77b151e21f87da862ad53045a57157bb", "message": "fixup", "committedDate": "2020-09-04T22:13:25Z", "type": "commit"}]}