{"pr_number": 773, "pr_title": "feat(iot-service): Add proxy support for service client operations", "pr_createdAt": "2020-05-08T22:03:19Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/773", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM5Njg1Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422396857", "bodyText": "Note that this would be a breaking change, but this getter/setter hasn't been in a released jar file yet, so it is still safe to change", "author": "timtay-microsoft", "createdAt": "2020-05-08T22:04:06Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +41,7 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;", "originalCommit": "0fbc69964974f742b36e7e75a91f10d356f49d34", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\nindex f8c448bc7..ac4a18117 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\n\n@@ -41,7 +41,7 @@ public class RegistryManager\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    private ProxyOptions proxyOptions;\n+    private RegistryManagerOptions options;\n \n     /**\n      * Static constructor to create instance from connection string\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMDAxMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422400011", "bodyText": "I am not sure what this means:\nOnly HTTP Proxies are supported. Authentication with the HTTP proxy is not supported.", "author": "abhipsaMisra", "createdAt": "2020-05-08T22:14:41Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. Only HTTP Proxies are supported.\n+ * Authentication with the HTTP proxy is not supported.", "originalCommit": "0fbc69964974f742b36e7e75a91f10d356f49d34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMDM4OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422400389", "bodyText": "It means you can use HTTP proxies, but only if that HTTP proxy doesn't require authentication. I can reword this", "author": "timtay-microsoft", "createdAt": "2020-05-08T22:16:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMDAxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\nindex 4948a49b1..7541f588f 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n\n@@ -6,8 +6,8 @@ import java.net.InetSocketAddress;\n import java.net.Proxy;\n \n /**\n- * The settings supported by this SDK when communicating to IoT Hub through a proxy. Only HTTP Proxies are supported.\n- * Authentication with the HTTP proxy is not supported.\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n  */\n public class ProxyOptions\n {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMTM1NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422401354", "bodyText": "text needs to be: Could not get port hostname from saved proxy", "author": "abhipsaMisra", "createdAt": "2020-05-08T22:19:20Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()\n+    {\n+        if (this.proxy.address() instanceof InetSocketAddress)\n+        {\n+            InetSocketAddress addr = (InetSocketAddress) this.proxy.address();\n+            return addr.getHostName();\n+        }\n+        else\n+        {\n+            //Should only happen if proxy is of type DIRECT, which isn't supported\n+            throw new UnsupportedOperationException(\"Could not get port from saved proxy\");", "originalCommit": "1de1c38973ac0f049af5e722d2ef1d26d12eb577", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\nindex d73ce81a7..7541f588f 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n\n@@ -36,7 +36,7 @@ public class ProxyOptions\n     /**\n      * @return the saved proxy hostname\n      */\n-    public String getHostname()\n+    public String getHostName()\n     {\n         if (this.proxy.address() instanceof InetSocketAddress)\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMDM3MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422430370", "bodyText": "Is this.proxyOptions.getProxy() check required? There is only 1 public constructor for initializing the ProxyOptions class, and that takes in a Proxy object.", "author": "abhipsaMisra", "createdAt": "2020-05-09T00:31:02Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -76,9 +102,15 @@ protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubSer\n         this.userName = iotHubConnectionString.getUserString();\n         this.sasToken = iotHubServiceSasToken.toString();\n         this.iotHubServiceClientProtocol = iotHubServiceClientProtocol;\n+        this.proxyOptions = proxyOptions;\n+\n+        if (this.proxyOptions != null && this.proxyOptions.getProxy() != null && this.iotHubServiceClientProtocol != IotHubServiceClientProtocol.AMQPS_WS)", "originalCommit": "3da19df66822fc4859528347c3a3218237e3ef21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE4NzE4Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423187187", "bodyText": "Good point, just checking if proxyoptions is null should be sufficient here and everywhere else", "author": "timtay-microsoft", "createdAt": "2020-05-11T17:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMDM3MA=="}], "type": "inlineReview", "revised_code": {"commit": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\nindex 8b6b08f0c..b8650a427 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n\n@@ -102,15 +102,15 @@ public class ServiceClient\n         this.userName = iotHubConnectionString.getUserString();\n         this.sasToken = iotHubServiceSasToken.toString();\n         this.iotHubServiceClientProtocol = iotHubServiceClientProtocol;\n-        this.proxyOptions = proxyOptions;\n+        this.options = options;\n \n-        if (this.proxyOptions != null && this.proxyOptions.getProxy() != null && this.iotHubServiceClientProtocol != IotHubServiceClientProtocol.AMQPS_WS)\n+        if (this.options != null && this.options.getProxyOptions() != null && this.iotHubServiceClientProtocol != IotHubServiceClientProtocol.AMQPS_WS)\n         {\n             throw new UnsupportedOperationException(\"Proxies are only supported over AMQPS_WS\");\n         }\n \n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_007: [The constructor shall create a new instance of AmqpSend object]\n-        this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol, proxyOptions);\n+        this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol, options != null ? options.getProxyOptions() : null);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423179855", "bodyText": "What is the preferable way to set transport configurations for this SDK? Do we take in any transport settings? How do we set the keep-alive time etc?", "author": "abhipsaMisra", "createdAt": "2020-05-11T16:53:15Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "originalCommit": "3da19df66822fc4859528347c3a3218237e3ef21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxMjY4MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423212681", "bodyText": "We currently don't have any other options beyond proxy settings. I don't see us extending other options like the C# SDK does right now. I see that as something we can address when this SDK goes track 2 instead.", "author": "timtay-microsoft", "createdAt": "2020-05-11T17:47:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTU4MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423215581", "bodyText": "No one has asked for any settings beyond proxy support, for reference", "author": "timtay-microsoft", "createdAt": "2020-05-11T17:53:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzMzI5Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423233293", "bodyText": "I see, it's better to start off with a config file, rather than placing them in the client initializer; but I agree, now that we are this close to going track 2, we should do it there directly.", "author": "abhipsaMisra", "createdAt": "2020-05-11T18:24:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MDkxOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423250919", "bodyText": "Well now I am building RegistryManagerOptions and ServiceClientOptions classes as per Priyanka, in case you are still interested in this point", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:56:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\nindex 8b6b08f0c..b8650a427 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n\n@@ -48,11 +48,11 @@ public class ServiceClient\n      * Create ServiceClient from the specified connection string\n      * @param iotHubServiceClientProtocol  protocol to use\n      * @param connectionString The connection string for the IotHub\n-     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @param options The connection options to use when connecting to the service. May be null if no custom options will be used.\n      * @return The created ServiceClient object\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n-    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options) throws IOException\n     {\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_001: [The constructor shall throw IllegalArgumentException if the input string is empty or null]\n         if (Tools.isNullOrEmpty(connectionString))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDMwMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423214301", "bodyText": "are 8 spaces of indentation normal for Java?", "author": "drwill-ms", "createdAt": "2020-05-11T17:50:43Z", "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                .withPort(testProxyPort)", "originalCommit": "06c99b755b4f3540ef3f182aa0fa5b808f32b813", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDY2NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423214664", "bodyText": "Not quite, I can fix this", "author": "timtay-microsoft", "createdAt": "2020-05-11T17:51:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDMwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTQ0MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423221441", "bodyText": "What is normal?", "author": "drwill-ms", "createdAt": "2020-05-11T18:03:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDMwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyODE4Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423228183", "bodyText": "One tab over from the method that started the fluent chain:\nAlthough github won't let me demonstrate exactly how this looks, the latest view of this file should show you.", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:15:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java b/iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java\nindex 323dd68e2..ebe0793b5 100644\n--- a/iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java\n+++ b/iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java\n\n@@ -89,8 +89,8 @@ public class ServiceClientTests extends IotHubIntegrationTest\n     public static void startProxy()\n     {\n         proxyServer = DefaultHttpProxyServer.bootstrap()\n-                .withPort(testProxyPort)\n-                .start();\n+                        .withPort(testProxyPort)\n+                        .start();\n     }\n \n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTQ4NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423215485", "bodyText": "InetSocketAddress uses a capital N in getHostName. Not sure if that is the preferred casing to stick with and match for this method.", "author": "drwill-ms", "createdAt": "2020-05-11T17:52:56Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()", "originalCommit": "06c99b755b4f3540ef3f182aa0fa5b808f32b813", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNjQxNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423216416", "bodyText": "Ah, good catch. We do use HostName and Hostname very interchangeably in this SDK. HostName seems more appropriate considering it is a pair of words", "author": "timtay-microsoft", "createdAt": "2020-05-11T17:54:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTQ4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\nindex 12cc2043a..7541f588f 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n\n@@ -36,7 +36,7 @@ public class ProxyOptions\n     /**\n      * @return the saved proxy hostname\n      */\n-    public String getHostname()\n+    public String getHostName()\n     {\n         if (this.proxy.address() instanceof InetSocketAddress)\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNjQ3NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423216475", "bodyText": "Perhaps message should be \"Unsupported proxy type\" then", "author": "drwill-ms", "createdAt": "2020-05-11T17:54:44Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()\n+    {\n+        if (this.proxy.address() instanceof InetSocketAddress)\n+        {\n+            InetSocketAddress addr = (InetSocketAddress) this.proxy.address();\n+            return addr.getHostName();\n+        }\n+        else\n+        {\n+            //Should only happen if proxy is of type DIRECT, which isn't supported\n+            throw new UnsupportedOperationException(\"Could not get hostname from saved proxy\");\n+        }\n+    }\n+\n+    public int getPort()\n+    {\n+        if (this.proxy.address() instanceof InetSocketAddress)\n+        {\n+            InetSocketAddress addr = (InetSocketAddress) this.proxy.address();\n+            return addr.getPort();\n+        }\n+        else\n+        {\n+            //Should only happen if proxy is of type DIRECT, which isn't supported\n+            throw new UnsupportedOperationException(\"Could not get port from saved proxy\");", "originalCommit": "06c99b755b4f3540ef3f182aa0fa5b808f32b813", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\nindex 12cc2043a..7541f588f 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n\n@@ -36,7 +36,7 @@ public class ProxyOptions\n     /**\n      * @return the saved proxy hostname\n      */\n-    public String getHostname()\n+    public String getHostName()\n     {\n         if (this.proxy.address() instanceof InetSocketAddress)\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNjk1Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423216953", "bodyText": "space before : ?", "author": "drwill-ms", "createdAt": "2020-05-11T17:55:32Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -1604,7 +1612,7 @@ private JobProperties ProcessJobResponse(HttpResponse response) throws IotHubExc\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, proxy);\n+        HttpRequest request = new HttpRequest(url, method, payload, this.proxyOptions != null ? this.proxyOptions.getProxy(): null);", "originalCommit": "06c99b755b4f3540ef3f182aa0fa5b808f32b813", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\nindex f8c448bc7..a0ae18c4f 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\n\n@@ -1612,7 +1612,7 @@ public class RegistryManager\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, this.proxyOptions != null ? this.proxyOptions.getProxy(): null);\n+        HttpRequest request = new HttpRequest(url, method, payload, this.proxyOptions != null ? this.proxyOptions.getProxy() : null);\n         request.setReadTimeoutMillis(DEFAULT_HTTP_TIMEOUT_MS);\n         request.setHeaderField(\"authorization\", sasToken);\n         request.setHeaderField(\"Request-Id\", \"1001\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423218768", "bodyText": "More of a question than PR comments: Does java support only setting proxies explicitly via the application, or does it also automatically tunnel traffic through a proxy set on the OS directly?", "author": "abhipsaMisra", "createdAt": "2020-05-11T17:58:30Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)", "originalCommit": "549f36a773bec137188d4dcf0c75143dd9bb348c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTE5OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219198", "bodyText": "What I mean is, if I have both set, who wins?", "author": "abhipsaMisra", "createdAt": "2020-05-11T17:59:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMDAwNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423220006", "bodyText": "Java doesn't allow you to force a proxy like that at the OS level as far as I know. Since we use transport libraries for HTTP and AMQP, we have to set the proxy at the http/amqp client level", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:00:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzNDM3MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423234370", "bodyText": "So if I understand correctly, if my OS would have some default proxy configured, that would never be honored?", "author": "abhipsaMisra", "createdAt": "2020-05-11T18:26:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzODkzMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423238930", "bodyText": "Yes, hence why customer's want proxy support on this SDK, instead of just setting it on their own devices", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:35:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1NTU5OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423255598", "bodyText": "Interesting!", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:04:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}], "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\nindex dfc15b3fe..7541f588f 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java\n\n@@ -46,7 +46,7 @@ public class ProxyOptions\n         else\n         {\n             //Should only happen if proxy is of type DIRECT, which isn't supported\n-            throw new UnsupportedOperationException(\"Unsupported proxy type, could not get host name\");\n+            throw new UnsupportedOperationException(\"Unsupported proxy type, could not get host name. Proxy address was not an instance of java.net.InetSocketAddress.\");\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODg5OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423218898", "bodyText": "What are the hurdles with AMQP?", "author": "prmathur-microsoft", "createdAt": "2020-05-11T17:58:42Z", "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                        .withPort(testProxyPort)\n+                        .start();\n+    }\n+\n+\n+    @AfterClass\n+    public static void stopProxy()\n+    {\n+        proxyServer.stop();\n+    }\n+\n     @Test (timeout=MAX_TEST_MILLISECONDS)\n     @ConditionalIgnoreRule.ConditionalIgnore(condition = StandardTierOnlyRule.class)\n     public void cloudToDeviceTelemetry() throws Exception\n+    {\n+        cloudToDeviceTelemetry(false);\n+    }\n+\n+    @Test (timeout=MAX_TEST_MILLISECONDS)\n+    @ConditionalIgnoreRule.ConditionalIgnore(condition = StandardTierOnlyRule.class)\n+    public void cloudToDeviceTelemetryWithProxy() throws Exception\n+    {\n+        if (testInstance.protocol != IotHubServiceClientProtocol.AMQPS_WS)\n+        {\n+            //Proxy support only exists for AMQPS_WS currently\n+            return;", "originalCommit": "0e496b19725b28eb58c07d7cad223280f961fcdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMDM5Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423220396", "bodyText": "It may be possible, but no one has asked for this yet. The customer I'm writing this for just wants AMQPS_WS to support tunneling through HTTP proxies", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:01:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODg5OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTQ0Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219446", "bodyText": "Why are we adding support to deprecated API?", "author": "prmathur-microsoft", "createdAt": "2020-05-11T17:59:39Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "diffHunk": "@@ -36,7 +36,7 @@\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      * @param deviceId The device id\n      */\n-    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)\n+    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId, ProxyOptions proxyOptions)", "originalCommit": "0e496b19725b28eb58c07d7cad223280f961fcdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMDcwOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423220708", "bodyText": "Good question, give me a sec to check", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:01:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMzE5OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423223198", "bodyText": "I can roll back this change actually. I'll just need to throw an unsupportedOperationException if the user tries to make proxy support work with these deprecated APIs", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTQ0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java\nindex c103ff191..7728243f5 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java\n\n@@ -36,7 +36,7 @@ public class FeedbackReceiver extends Receiver\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      * @param deviceId The device id\n      */\n-    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId, ProxyOptions proxyOptions)\n+    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)\n     {\n         // Codes_SRS_SERVICE_SDK_JAVA_FEEDBACKRECEIVER_12_001: [The constructor shall throw IllegalArgumentException if any the input string is null or empty]\n         if (Tools.isNullOrEmpty(hostName))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTYwMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219601", "bodyText": "Breaking change?", "author": "prmathur-microsoft", "createdAt": "2020-05-11T17:59:56Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "diffHunk": "@@ -74,7 +72,7 @@\n      * @param iotHubServiceClientProtocol protocol to be used\n      * \n      */\n-    public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)", "originalCommit": "0e496b19725b28eb58c07d7cad223280f961fcdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMzc0OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423223748", "bodyText": "Good catch, here and on the other sub-service client classes. I'll add an overload constructor that takes the proxy options instead", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:07:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTYwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java\nindex c103ff191..7728243f5 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java\n\n@@ -70,11 +70,26 @@ public class FeedbackReceiver extends Receiver\n      * @param userName The iot hub user name\n      * @param sasToken The iot hub SAS token for the given device\n      * @param iotHubServiceClientProtocol protocol to be used\n+     *\n+     */\n+    public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    {\n+        this(hostName, userName, sasToken, iotHubServiceClientProtocol, (ProxyOptions) null);\n+    }\n+\n+    /**\n+     * Constructor to verify initialization parameters\n+     * Create instance of AmqpReceive\n+     *\n+     * @param hostName The iot hub host name\n+     * @param userName The iot hub user name\n+     * @param sasToken The iot hub SAS token for the given device\n+     * @param iotHubServiceClientProtocol protocol to be used\n+     * @param proxyOptions the proxy options to tunnel through, if a proxy should be used.\n      * \n      */\n     public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)\n     {\n-        // Codes_SRS_SERVICE_SDK_JAVA_FEEDBACKRECEIVER_12_001: [The constructor shall throw IllegalArgumentException if any the input string is null or empty]\n         if (Tools.isNullOrEmpty(hostName))\n         {\n             throw new IllegalArgumentException(\"hostName cannot be null or empty\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTgzNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219837", "bodyText": "Isn't this a breaking change?", "author": "prmathur-microsoft", "createdAt": "2020-05-11T18:00:18Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java", "diffHunk": "@@ -28,7 +28,7 @@\n      * @param sasToken The iot hub SAS token for the given device\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      */\n-    FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)\n     {", "originalCommit": "0e496b19725b28eb58c07d7cad223280f961fcdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyNDU5Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423224596", "bodyText": "As per above, I'll add an overload to take the proxy instead", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:08:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTgzNw=="}], "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java\nindex 1f627dabc..476913b94 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java\n\n@@ -28,9 +28,22 @@ public class FileUploadNotificationReceiver extends Receiver\n      * @param sasToken The iot hub SAS token for the given device\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      */\n+    FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    {\n+        this(hostName, userName, sasToken, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Constructor to verify initialization parameters\n+     * Create instance of AmqpReceive\n+     * @param hostName The iot hub host name\n+     * @param userName The iot hub user name\n+     * @param sasToken The iot hub SAS token for the given device\n+     * @param iotHubServiceClientProtocol The iot hub protocol name\n+     * @param proxyOptions the proxy options to tunnel through, if a proxy should be used.\n+     */\n     FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)\n     {\n-        // Codes_SRS_SERVICE_SDK_JAVA_FILEUPLOADNOTIFICATIONRECEIVER_25_001: [** The constructor shall throw IllegalArgumentException if any the input string is null or empty **]**\n         if (Tools.isNullOrEmpty(hostName))\n         {\n             throw new IllegalArgumentException(\"hostName cannot be null or empty\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTIxNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423221215", "bodyText": "If you have to pass null as an additional parameter, is that a breaking change?", "author": "drwill-ms", "createdAt": "2020-05-11T18:02:46Z", "path": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/FeedbackReceiverTest.java", "diffHunk": "@@ -36,7 +37,7 @@ public void constructor_input_hostName_null() throws Exception\n         String deviceId = \"xxx\";\n         IotHubServiceClientProtocol iotHubServiceClientProtocol = IotHubServiceClientProtocol.AMQPS;\n         // Act\n-        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId);\n+        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId, null);", "originalCommit": "0b1563932a40bce5f9a76c53baf0368e53bbe822", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyNDgwOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423224809", "bodyText": "Looks like it, yeah. I've added an overloaded constructor so that it won't break now", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTIxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b8927ba06cfe1c2282eb788a3c230426133871a", "chunk": "diff --git a/service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/FeedbackReceiverTest.java b/service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/FeedbackReceiverTest.java\nindex 775a207f4..038f45041 100644\n--- a/service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/FeedbackReceiverTest.java\n+++ b/service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/FeedbackReceiverTest.java\n\n@@ -37,7 +36,7 @@ public class FeedbackReceiverTest\n         String deviceId = \"xxx\";\n         IotHubServiceClientProtocol iotHubServiceClientProtocol = IotHubServiceClientProtocol.AMQPS;\n         // Act\n-        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId, null);\n+        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId);\n     }\n     \n     // Tests_SRS_SERVICE_SDK_JAVA_FEEDBACKRECEIVER_12_001: [The constructor shall throw IllegalArgumentException if any the input string is null or empty]\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423221271", "bodyText": "Why not group this under connection options which has protocol, proxyOptions etc and lets you add future connection options without adding extra API's", "author": "prmathur-microsoft", "createdAt": "2020-05-11T18:02:52Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "originalCommit": "0e496b19725b28eb58c07d7cad223280f961fcdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyNTE5Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423225193", "bodyText": "That depends on how long we plan on supporting this particular SDK. I didn't envision bringing any other options here since we will be track 2 soon. But what do you think?", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:09:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0MjQwMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423242402", "bodyText": "I don't forsee either (As it is hard to see for 10 years down the line). I would still prefer to group because we have to support this for 10 years even after we move to track-2 ;just to be on safer side.", "author": "prmathur-microsoft", "createdAt": "2020-05-11T18:41:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0NTE5Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423245196", "bodyText": "Do you picture a class \"ConnectionOptions\" being reused from AMQP to HTTP, though? Or do you picture an HttpConnectionOptions class for registry manager, and an AmqpConnectionOptions class for service client, where each class has just the proxy to set?", "author": "timtay-microsoft", "createdAt": "2020-05-11T18:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MzQwOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423253408", "bodyText": "I pushed a commit that shows one way to have a more general \"RegistryManagerOptions\" and \"ServiceClientOptions\" class structure. Can you take a look?", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:00:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\nindex 8b6b08f0c..b8650a427 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n\n@@ -48,11 +48,11 @@ public class ServiceClient\n      * Create ServiceClient from the specified connection string\n      * @param iotHubServiceClientProtocol  protocol to use\n      * @param connectionString The connection string for the IotHub\n-     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @param options The connection options to use when connecting to the service. May be null if no custom options will be used.\n      * @return The created ServiceClient object\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n-    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options) throws IOException\n     {\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_001: [The constructor shall throw IllegalArgumentException if the input string is empty or null]\n         if (Tools.isNullOrEmpty(connectionString))\n"}}, {"oid": "9b8927ba06cfe1c2282eb788a3c230426133871a", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/9b8927ba06cfe1c2282eb788a3c230426133871a", "message": "feat(iot-service): Add proxy support for service client\n\nrefactor the way the registry manager consumes the proxy option as well, in case we need to add authentication support later as well. The proxyOptions object will allow us to add username and password if necessary", "committedDate": "2020-05-11T18:34:14Z", "type": "commit"}, {"oid": "9b8927ba06cfe1c2282eb788a3c230426133871a", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/9b8927ba06cfe1c2282eb788a3c230426133871a", "message": "feat(iot-service): Add proxy support for service client\n\nrefactor the way the registry manager consumes the proxy option as well, in case we need to add authentication support later as well. The proxyOptions object will allow us to add username and password if necessary", "committedDate": "2020-05-11T18:34:14Z", "type": "forcePushed"}, {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "message": "RegistryManagerOptions and ServiceClientOptions instead of ProxyOptions at top level", "committedDate": "2020-05-11T19:00:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1OTE0OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423259148", "bodyText": "Q - this is for proxy support over Amqp_ws, then why don't we use socks proxy? Is that a proton-j requirement?", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:11:14Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)", "originalCommit": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MzM4Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423263387", "bodyText": "The customer who prompted all this only needs support for HTTP proxies. I don't know offhand if amqps or amqps_ws work with socks proxies, or if proton-j has support for them", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1OTE0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwNTgzNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423305835", "bodyText": "I see, what does our device client currently use?", "author": "abhipsaMisra", "createdAt": "2020-05-11T20:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1OTE0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MDg4Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423340887", "bodyText": "HTTP proxies work for device clients using MQTT_WS, AMQPS_WS, and HTTP. In theory, SOCKs proxies work for device clients using MQTT", "author": "timtay-microsoft", "createdAt": "2020-05-11T21:51:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1OTE0OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MDQ2MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423260461", "bodyText": "there is a whole lot happening here, can we move this to the line above:\nthis.options != null && this.options.getProxyOptions() != null ? this.options.getProxyOptions().getProxy() : null", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:13:45Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -1604,7 +1612,7 @@ private JobProperties ProcessJobResponse(HttpResponse response) throws IotHubExc\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, proxy);\n+        HttpRequest request = new HttpRequest(url, method, payload, this.options != null && this.options.getProxyOptions() != null ? this.options.getProxyOptions().getProxy() : null);", "originalCommit": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MTAwNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423261006", "bodyText": "The way I see, registry manager options should never be null, but have some default initial value (proxy = null)", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:14:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MDQ2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MzUyMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423263520", "bodyText": "Yeah, good call. This is pretty busy", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MDQ2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ed8405e22275bb4c3f010e8d004e3ed2787f947", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\nindex ac4a18117..93a49954b 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\n\n@@ -1612,7 +1613,13 @@ public class RegistryManager\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, this.options != null && this.options.getProxyOptions() != null ? this.options.getProxyOptions().getProxy() : null);\n+        Proxy proxy = null;\n+        if (this.options != null && this.options.getProxyOptions() != null)\n+        {\n+            proxy = this.options.getProxyOptions().getProxy();\n+        }\n+\n+        HttpRequest request = new HttpRequest(url, method, payload, proxy);\n         request.setReadTimeoutMillis(DEFAULT_HTTP_TIMEOUT_MS);\n         request.setHeaderField(\"authorization\", sasToken);\n         request.setHeaderField(\"Request-Id\", \"1001\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423262698", "bodyText": "Why not add @AllArgsConstructor for 1 line initialization.", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:17:48Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "originalCommit": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NDc0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423264740", "bodyText": "I don't want this to be construed as an essential option. As such, there should be a constructor that doesn't take this", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:21:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NTAyMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423265023", "bodyText": "For instance, if we ever add something like HTTP readTimeout/connectTimeout, I wouldn't want customers to need a proxy here", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:22:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NjY4Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423266686", "bodyText": "yeah, good point.", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:25:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2ODc2Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423268762", "bodyText": "But I still feel the options object in itself should not be null, but have a default value", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:29:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2OTc2NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423269764", "bodyText": "That way, it signifies that it is a container for client configurations, and if we add a param that has a default non-null value, we don't have to remove the null checks from everywhere.", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:31:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MDg0Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423270847", "bodyText": "I'm not sure I see the value in holding a non-null default proxyOptions class. Each of those null checks would just turn into checks on if the proxy is of type DIRECT (no proxy) or type HTTP.", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:33:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MTI2OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423271269", "bodyText": "For AMQP in particular, it isn't just a straight pass through. We have to add a transport layer manually if there is a proxy to go through", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:34:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MzA2Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423273062", "bodyText": "What about a builder pattern here instead? Since all of the hypothetical fields in this class are optional, and we don't know how many options there may be in the future, a builder could fit in well here", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:37:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NDAxMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423274013", "bodyText": "Suppose tomorrow we add a parameter for Http connect timeout, which has a default value of 1min, but settable. So now, the RegistryManagerOptions class is always non-null (irrespective of proxy).\nSo something like this, which we have below:\noptions != null ? options.getProxyOptions() : null\nwould want to get proxy options, even though we did not set it/ want to use it.", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NTQwMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423275401", "bodyText": "Yeah, a builder would work here. We can set @nonnull for required params", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:42:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NzcyNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423277724", "bodyText": "Okay, I pushed a commit that makes these two options classes builder based", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3ODMxNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423278314", "bodyText": "I can make the RegistryManagerOptions and ServiceClientOptions always non-null, for simplicity, sure. The default proxyOptions will still be null, though", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:48:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3OTY2Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423279662", "bodyText": "Yes, of course, we don't want to force/ have a default for proxy", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}], "type": "inlineReview", "revised_code": {"commit": "d5aa6d7af245b2b8cf63c3c5fd331075448113e2", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java\nindex c0d057494..f59e18e6b 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java\n\n@@ -1,17 +1,18 @@\n package com.microsoft.azure.sdk.iot.service;\n \n+import lombok.Builder;\n import lombok.Getter;\n import lombok.Setter;\n \n /**\n  * Configurable options for all registry manager operations\n  */\n+@Builder\n public class RegistryManagerOptions\n {\n     /**\n      * The options that specify what proxy to tunnel through. If null, no proxy will be used\n      */\n     @Getter\n-    @Setter\n     private ProxyOptions proxyOptions;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NTE3NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423265174", "bodyText": "same, here as well", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:22:35Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -76,9 +102,15 @@ protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubSer\n         this.userName = iotHubConnectionString.getUserString();\n         this.sasToken = iotHubServiceSasToken.toString();\n         this.iotHubServiceClientProtocol = iotHubServiceClientProtocol;\n+        this.options = options;\n+\n+        if (this.options != null && this.options.getProxyOptions() != null && this.iotHubServiceClientProtocol != IotHubServiceClientProtocol.AMQPS_WS)\n+        {\n+            throw new UnsupportedOperationException(\"Proxies are only supported over AMQPS_WS\");\n+        }\n \n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_007: [The constructor shall create a new instance of AmqpSend object]\n-        this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol);\n+        this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol, options != null ? options.getProxyOptions() : null);", "originalCommit": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4ed8405e22275bb4c3f010e8d004e3ed2787f947", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\nindex b8650a427..61984c8d0 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n\n@@ -110,7 +110,14 @@ public class ServiceClient\n         }\n \n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_007: [The constructor shall create a new instance of AmqpSend object]\n-        this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol, options != null ? options.getProxyOptions() : null);\n+        if (options != null)\n+        {\n+            this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol, options.getProxyOptions());\n+        }\n+        else\n+        {\n+            this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol);\n+        }\n     }\n \n     /**\n"}}, {"oid": "4ed8405e22275bb4c3f010e8d004e3ed2787f947", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4ed8405e22275bb4c3f010e8d004e3ed2787f947", "message": "cr comments", "committedDate": "2020-05-11T19:29:15Z", "type": "commit"}, {"oid": "d5aa6d7af245b2b8cf63c3c5fd331075448113e2", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d5aa6d7af245b2b8cf63c3c5fd331075448113e2", "message": "builder pattern for options objects", "committedDate": "2020-05-11T19:43:15Z", "type": "commit"}, {"oid": "7982977ee7fcbb8714a398a69c2efe66116a245e", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/7982977ee7fcbb8714a398a69c2efe66116a245e", "message": "clientOptions objects are now never null", "committedDate": "2020-05-11T19:51:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MTc2Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423281767", "bodyText": "this now needs to be options.getProxyOptions() != null", "author": "abhipsaMisra", "createdAt": "2020-05-11T19:54:15Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -229,6 +261,11 @@ public void send(String deviceId, String moduleId, Message message) throws IOExc\n      */\n     @Deprecated public FeedbackReceiver getFeedbackReceiver(String deviceId)\n     {\n+        if (options != null)", "originalCommit": "7982977ee7fcbb8714a398a69c2efe66116a245e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4Mzk3Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423283973", "bodyText": "Good catch, you are right", "author": "timtay-microsoft", "createdAt": "2020-05-11T19:58:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MTc2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "fb637df5877fdc16c6bec442e6ce3d3ba1f704e4", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\nindex 271231d74..674a770e4 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java\n\n@@ -261,7 +261,7 @@ public class ServiceClient\n      */\n     @Deprecated public FeedbackReceiver getFeedbackReceiver(String deviceId)\n     {\n-        if (options != null)\n+        if (options.getProxyOptions() != null)\n         {\n             throw new UnsupportedOperationException(\"This deprecated API does not support proxies. Use the non-deprecated version of this API for proxy enabled feedback receiving\");\n         }\n"}}, {"oid": "fb637df5877fdc16c6bec442e6ce3d3ba1f704e4", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/fb637df5877fdc16c6bec442e6ce3d3ba1f704e4", "message": "cr comment", "committedDate": "2020-05-11T19:59:23Z", "type": "commit"}, {"oid": "4902559e370cf739ef6d0e40b5d1af7f4a25c5ac", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4902559e370cf739ef6d0e40b5d1af7f4a25c5ac", "message": "more fixes", "committedDate": "2020-05-11T20:01:27Z", "type": "commit"}, {"oid": "275b49e410482d5c2c4a047e04e107e2a72dd213", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/275b49e410482d5c2c4a047e04e107e2a72dd213", "message": "This once hidden constructor needs to set options to the default value, too", "committedDate": "2020-05-11T20:10:22Z", "type": "commit"}, {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/32add1d2970c47cda4ba1b99a1237b24674e66d6", "message": "deprecate this once hidden constructor", "committedDate": "2020-05-11T20:14:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423295845", "bodyText": "what is this for? did we allow creation of registry manager without having to pass in even a connection string?", "author": "abhipsaMisra", "createdAt": "2020-05-11T20:21:26Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +42,16 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;\n+    private RegistryManagerOptions options;\n+\n+    /**\n+     * As of release 1.22.0, replaced by {@link #createFromConnectionString()}\n+     */\n+    @Deprecated\n+    public RegistryManager()", "originalCommit": "32add1d2970c47cda4ba1b99a1237b24674e66d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NzQ0Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423297446", "bodyText": "Java has a funny quirk where a class with no public constuctor automatically has a public constructor. This commit just makes that constuctor visible. I believe it was an accident that we didn't make the only constuctor protected", "author": "timtay-microsoft", "createdAt": "2020-05-11T20:24:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMjEyNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423302125", "bodyText": "Ah, the default constructor, yeah. Can we not make it private now? Also, can we modify the comment to say that this is simply the default java constructor. The replaced text makes it seem that we did allow a no args initialization of registry manager.", "author": "abhipsaMisra", "createdAt": "2020-05-11T20:33:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxMTUyNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423311524", "bodyText": "Since it was a public constructor, we can't just make it private now. That would be a breaking change. We did technically allow users to build a registry manager through that constructor. I'll add to the header here that it was once the default constructor, though", "author": "timtay-microsoft", "createdAt": "2020-05-11T20:50:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxNDM3NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423314375", "bodyText": "Oh, I am confused, if this worked, why are we deprecating this now? It is because it doesn't really do anything useful?", "author": "abhipsaMisra", "createdAt": "2020-05-11T20:55:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "8376adc0fc4a1f382b598c883dbee9d5a106018c", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\nindex 820adc368..a2b1a94ca 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java\n\n@@ -45,11 +45,15 @@ public class RegistryManager\n     private RegistryManagerOptions options;\n \n     /**\n-     * As of release 1.22.0, replaced by {@link #createFromConnectionString()}\n+     * Previously was the java default constructor, should not be used.\n+     *\n+     * @deprecated As of release 1.22.0, replaced by {@link #createFromConnectionString(String)}\n      */\n     @Deprecated\n     public RegistryManager()\n     {\n+        // This constructor was previously a default constructor that users could use because there was no other constructor declared.\n+        // However, we still prefer users use the createFromConnectionString method to build their clients.\n         options = RegistryManagerOptions.builder().build();\n     }\n \n"}}, {"oid": "8d73bf84abf96e45ef4e60992a8a6013957079be", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/8d73bf84abf96e45ef4e60992a8a6013957079be", "message": "fix test", "committedDate": "2020-05-11T20:33:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMzYzOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423303638", "bodyText": "nit: no longer required: ctrl+shift+o :)", "author": "abhipsaMisra", "createdAt": "2020-05-11T20:35:52Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.Setter;", "originalCommit": "32add1d2970c47cda4ba1b99a1237b24674e66d6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "36a937dcb392939ce4bf98a159d7830b91c8e833", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java\nindex f59e18e6b..9f518bc49 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java\n\n@@ -2,7 +2,6 @@ package com.microsoft.azure.sdk.iot.service;\n \n import lombok.Builder;\n import lombok.Getter;\n-import lombok.Setter;\n \n /**\n  * Configurable options for all registry manager operations\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMzg1Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423303853", "bodyText": "same, no longer required", "author": "abhipsaMisra", "createdAt": "2020-05-11T20:36:18Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClientOptions.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.Setter;", "originalCommit": "32add1d2970c47cda4ba1b99a1237b24674e66d6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "36a937dcb392939ce4bf98a159d7830b91c8e833", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClientOptions.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClientOptions.java\nindex 057ec01dc..a49624b93 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClientOptions.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClientOptions.java\n\n@@ -2,7 +2,6 @@ package com.microsoft.azure.sdk.iot.service;\n \n import lombok.Builder;\n import lombok.Getter;\n-import lombok.Setter;\n \n /**\n  * Configurable options for all service client operations\n"}}, {"oid": "36a937dcb392939ce4bf98a159d7830b91c8e833", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/36a937dcb392939ce4bf98a159d7830b91c8e833", "message": "cleanup imports", "committedDate": "2020-05-11T20:36:44Z", "type": "commit"}, {"oid": "8376adc0fc4a1f382b598c883dbee9d5a106018c", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/8376adc0fc4a1f382b598c883dbee9d5a106018c", "message": "more cr comments", "committedDate": "2020-05-11T20:52:21Z", "type": "commit"}, {"oid": "6b88e890f8b9585ec13c4b599015f34d9d4914b6", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/6b88e890f8b9585ec13c4b599015f34d9d4914b6", "message": "fix constructors taking options directly not checking for null options", "committedDate": "2020-05-11T21:46:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MzM3Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423343377", "bodyText": "Does service client works on anything other than AMQP ? If I re-call it doesn't. Then what purpose does iotHubServiceClientProtocol serve?", "author": "prmathur-microsoft", "createdAt": "2020-05-11T21:56:57Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,18 +40,36 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, ServiceClientOptions.builder().build());\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param options The connection options to use when connecting to the service. May be null if no custom options will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options) throws IOException\n     {\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_001: [The constructor shall throw IllegalArgumentException if the input string is empty or null]\n         if (Tools.isNullOrEmpty(connectionString))\n         {\n             throw new IllegalArgumentException(connectionString);\n         }\n \n+        if (options == null)\n+        {\n+            throw new IllegalArgumentException(\"ServiceClientOptions cannot be null for this constructor\");\n+        }\n+\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_002: [The constructor shall create IotHubConnectionString object using the IotHubConnectionStringBuilder]\n         IotHubConnectionString iotHubConnectionString = IotHubConnectionStringBuilder.createConnectionString(connectionString);\n \n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_003: [The constructor shall create a new instance of ServiceClient using the created IotHubConnectionString object and return with it]\n-        ServiceClient iotServiceClient = new ServiceClient(iotHubConnectionString, iotHubServiceClientProtocol);\n+        ServiceClient iotServiceClient = new ServiceClient(iotHubConnectionString, iotHubServiceClientProtocol, options);", "originalCommit": "6b88e890f8b9585ec13c4b599015f34d9d4914b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MzkyNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423343927", "bodyText": "It can be either AMQPS or AMQPS_WS", "author": "timtay-microsoft", "createdAt": "2020-05-11T21:58:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MzM3Nw=="}], "type": "inlineReview", "revised_code": null}]}