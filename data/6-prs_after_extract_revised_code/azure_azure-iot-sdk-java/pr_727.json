{"pr_number": 727, "pr_title": "feat(iot-dev): Add support for CA signed X509 over MQTT_WS, and HTTPS", "pr_createdAt": "2020-03-11T20:18:34Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/727", "timeline": [{"oid": "15522a89e4fa80b0fe4ba079c13a805ee808705f", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/15522a89e4fa80b0fe4ba079c13a805ee808705f", "message": "feat(iot-dev): Add support for CA signed X509 over MQTT_WS, and HTTPS\n\nHTTP required no code changes because it already worked, strangely. Mqtt only needed to stop sending the query string \"?iothub-no-client-cert=true\" when connecting. This didn't use to work, but something from service side seems to have changed", "committedDate": "2020-03-11T21:33:27Z", "type": "commit"}, {"oid": "15522a89e4fa80b0fe4ba079c13a805ee808705f", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/15522a89e4fa80b0fe4ba079c13a805ee808705f", "message": "feat(iot-dev): Add support for CA signed X509 over MQTT_WS, and HTTPS\n\nHTTP required no code changes because it already worked, strangely. Mqtt only needed to stop sending the query string \"?iothub-no-client-cert=true\" when connecting. This didn't use to work, but something from service side seems to have changed", "committedDate": "2020-03-11T21:33:27Z", "type": "forcePushed"}, {"oid": "d36affdf07c0e68d8734995977f876cd49de7029", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d36affdf07c0e68d8734995977f876cd49de7029", "message": "squash fix", "committedDate": "2020-03-12T00:59:00Z", "type": "commit"}, {"oid": "163db4d6bccfe8579c7a622a200f40236413806b", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/163db4d6bccfe8579c7a622a200f40236413806b", "message": "Merge branch 'master' into timtay/x509CA", "committedDate": "2020-03-16T17:50:37Z", "type": "commit"}, {"oid": "0d894232d6527bd60fa505fa34e7567581c0e4a7", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/0d894232d6527bd60fa505fa34e7567581c0e4a7", "message": "to squash", "committedDate": "2020-03-16T18:03:08Z", "type": "commit"}, {"oid": "763088b79b07015995f9764af6622f266ff34ea5", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/763088b79b07015995f9764af6622f266ff34ea5", "message": "Merge branch 'master' into timtay/x509CA", "committedDate": "2020-03-20T17:24:36Z", "type": "commit"}, {"oid": "13c6fd93ba9b9ff989d1736fe00e7019d322ee2e", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/13c6fd93ba9b9ff989d1736fe00e7019d322ee2e", "message": "Merge branch 'master' into timtay/x509CA", "committedDate": "2020-03-20T21:12:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5NTcwNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395895706", "bodyText": "isn't this \"else\" case basically or part of the if {} at line 129?", "author": "bikamani", "createdAt": "2020-03-20T21:22:06Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -132,17 +133,21 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n                     this.iotHubUserPassword = null;\n                 }\n \n+                if (this.config.getAuthenticationType() != DeviceClientConfig.AuthType.X509_CERTIFICATE)", "originalCommit": "13c6fd93ba9b9ff989d1736fe00e7019d322ee2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5NzkzMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395897930", "bodyText": "Yeah, I can simplify this, sure", "author": "timtay-microsoft", "createdAt": "2020-03-20T21:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5NTcwNg=="}], "type": "inlineReview", "revised_code": {"commit": "ba9e9728d30749391f9cd7e92d0c999b68d15a2c", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\nindex d07c46be4..4c19ca443 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\n\n@@ -130,22 +130,16 @@ public class MqttIotHubConnection implements IotHubTransportConnection, MqttMess\n                 {\n                     this.log.trace(\"MQTT connection will use sas token based auth\");\n                     this.iotHubUserPassword = this.config.getSasTokenAuthentication().getRenewedSasToken(false, false);\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n-                    this.iotHubUserPassword = null;\n-                }\n-\n-                if (this.config.getAuthenticationType() != DeviceClientConfig.AuthType.X509_CERTIFICATE)\n-                {\n-                    //X509 auth websocket should not include the iothub-no-client-cert flag\n-                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n-                }\n-                else\n-                {\n                     this.webSocketQueryString = \"\";\n+\n+                    //X509 auth over websocket should not include the iothub-no-client-cert flag\n+                    this.iotHubUserPassword = null;\n                 }\n \n                 //URLEncoder follows HTML spec for encoding urls, which includes substituting space characters with '+'\n"}}, {"oid": "ba9e9728d30749391f9cd7e92d0c999b68d15a2c", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/ba9e9728d30749391f9cd7e92d0c999b68d15a2c", "message": "cr comment", "committedDate": "2020-03-20T21:29:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5ODg2NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395898865", "bodyText": "Do we need \"this\" any more? I know it is there in legacy code but this going forward if we don't need it why use?", "author": "bikamani", "createdAt": "2020-03-20T21:30:46Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -132,17 +133,21 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n                     this.iotHubUserPassword = null;\n                 }\n \n+                if (this.config.getAuthenticationType() != DeviceClientConfig.AuthType.X509_CERTIFICATE)\n+                {\n+                    //X509 auth websocket should not include the iothub-no-client-cert flag\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;", "originalCommit": "13c6fd93ba9b9ff989d1736fe00e7019d322ee2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMDk1NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395900955", "bodyText": "C# guidelines suggest avoiding \"this.\" when possible, but Java guidelines do not", "author": "timtay-microsoft", "createdAt": "2020-03-20T21:37:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5ODg2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMTUxNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395901514", "bodyText": "Sorry about that, I added this comment thinking about C#", "author": "bikamani", "createdAt": "2020-03-20T21:38:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5ODg2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3d05d62feaecd187187640b051b36b4f11ad518", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\nindex d07c46be4..29a7998af 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\n\n@@ -130,24 +130,14 @@ public class MqttIotHubConnection implements IotHubTransportConnection, MqttMess\n                 {\n                     this.log.trace(\"MQTT connection will use sas token based auth\");\n                     this.iotHubUserPassword = this.config.getSasTokenAuthentication().getRenewedSasToken(false, false);\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n-\n                     this.iotHubUserPassword = null;\n                 }\n \n-                if (this.config.getAuthenticationType() != DeviceClientConfig.AuthType.X509_CERTIFICATE)\n-                {\n-                    //X509 auth websocket should not include the iothub-no-client-cert flag\n-                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n-                }\n-                else\n-                {\n-                    this.webSocketQueryString = \"\";\n-                }\n-\n                 //URLEncoder follows HTML spec for encoding urls, which includes substituting space characters with '+'\n                 // We want \"%20\" for spaces, not '+', however, so replace them manually after utf-8 encoding\n                 String userAgentString = this.config.getProductInfo().getUserAgentString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5OTM1OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395899359", "bodyText": "So this needs to be set to empty string? Or should there be conditional check when appending this?", "author": "bikamani", "createdAt": "2020-03-20T21:32:09Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -129,17 +130,15 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     this.log.trace(\"MQTT connection will use sas token based auth\");\n                     this.iotHubUserPassword = this.config.getSasTokenAuthentication().getRenewedSasToken(false, false);\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n+                    this.webSocketQueryString = \"\";", "originalCommit": "ba9e9728d30749391f9cd7e92d0c999b68d15a2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMDYxMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395900610", "bodyText": "Sure, I can leave it null for SAS cases, and just check when building the string later", "author": "timtay-microsoft", "createdAt": "2020-03-20T21:35:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5OTM1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3d05d62feaecd187187640b051b36b4f11ad518", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\nindex 4c19ca443..29a7998af 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\n\n@@ -135,10 +135,6 @@ public class MqttIotHubConnection implements IotHubTransportConnection, MqttMess\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n-\n-                    this.webSocketQueryString = \"\";\n-\n-                    //X509 auth over websocket should not include the iothub-no-client-cert flag\n                     this.iotHubUserPassword = null;\n                 }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5OTU2MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395899561", "bodyText": "Did you want to move this before line 139?", "author": "bikamani", "createdAt": "2020-03-20T21:32:42Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -129,17 +130,15 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     this.log.trace(\"MQTT connection will use sas token based auth\");\n                     this.iotHubUserPassword = this.config.getSasTokenAuthentication().getRenewedSasToken(false, false);\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n+                    this.webSocketQueryString = \"\";\n+\n+                    //X509 auth over websocket should not include the iothub-no-client-cert flag", "originalCommit": "ba9e9728d30749391f9cd7e92d0c999b68d15a2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMDAxMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395900011", "bodyText": "Whoops, yes I do", "author": "timtay-microsoft", "createdAt": "2020-03-20T21:34:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5OTU2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3d05d62feaecd187187640b051b36b4f11ad518", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\nindex 4c19ca443..29a7998af 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java\n\n@@ -135,10 +135,6 @@ public class MqttIotHubConnection implements IotHubTransportConnection, MqttMess\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n-\n-                    this.webSocketQueryString = \"\";\n-\n-                    //X509 auth over websocket should not include the iothub-no-client-cert flag\n                     this.iotHubUserPassword = null;\n                 }\n \n"}}, {"oid": "f3d05d62feaecd187187640b051b36b4f11ad518", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/f3d05d62feaecd187187640b051b36b4f11ad518", "message": "more comments", "committedDate": "2020-03-20T21:36:20Z", "type": "commit"}, {"oid": "0c3b9001cbdcd8fdcd71b25ec4f11904c650ae27", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/0c3b9001cbdcd8fdcd71b25ec4f11904c650ae27", "message": "unit test for open flow with x509 auth and websocket", "committedDate": "2020-03-20T21:51:35Z", "type": "commit"}, {"oid": "9b444ff9a9903c6a92002f391416d11b751ee6ff", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/9b444ff9a9903c6a92002f391416d11b751ee6ff", "message": "fix unit test", "committedDate": "2020-03-20T21:56:11Z", "type": "commit"}, {"oid": "897464b1cc700567228d1f2e3abbae103b44bab5", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/897464b1cc700567228d1f2e3abbae103b44bab5", "message": "fix unit test", "committedDate": "2020-03-20T22:01:57Z", "type": "commit"}]}