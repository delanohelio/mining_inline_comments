{"pr_number": 770, "pr_title": "feat(device;service): Support Twin Array properties", "pr_createdAt": "2020-05-04T21:48:01Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/770", "timeline": [{"oid": "29b99790a1faed843c1808f56218e0f9361bf1c1", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/29b99790a1faed843c1808f56218e0f9361bf1c1", "message": "Fix test typeo", "committedDate": "2020-05-12T05:40:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4OTg1OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423889858", "bodyText": "Does this resend the device method subscription as well?", "author": "abhipsaMisra", "createdAt": "2020-05-12T16:57:54Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -235,6 +237,10 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     closeConnectionWithException(\"Timed out waiting for worker links to open\", true);\n                 }\n+\n+                // In case this is a recovery from a prematurely closed connection, we will re-queue subscribe messages that were sent within this connection.\n+                requeueSubscribeMessages();", "originalCommit": "29b99790a1faed843c1808f56218e0f9361bf1c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg5MTU2Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423891567", "bodyText": "no, only Device twin at this point.", "author": "azabbasi", "createdAt": "2020-05-12T17:00:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4OTg1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg5MjI0Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423892247", "bodyText": "from what I understand device methods do not require a message to be sent to subscribe to properties, they just need the link to be opened. but if in the future they require messages to be sent, we will ad them to the subscribe list and send those along with twin subscriptions", "author": "azabbasi", "createdAt": "2020-05-12T17:01:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4OTg1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MzYwMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423943602", "bodyText": "Right, that's true!", "author": "abhipsaMisra", "createdAt": "2020-05-12T18:25:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4OTg1OA=="}], "type": "inlineReview", "revised_code": {"commit": "ffadb35e42b2a08cdf88269378c94d2d703b981c", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java\nindex dee12ae86..82bfc8dba 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java\n\n@@ -237,10 +235,6 @@ public final class AmqpsIotHubConnection extends ErrorLoggingBaseHandler impleme\n                 {\n                     closeConnectionWithException(\"Timed out waiting for worker links to open\", true);\n                 }\n-\n-                // In case this is a recovery from a prematurely closed connection, we will re-queue subscribe messages that were sent within this connection.\n-                requeueSubscribeMessages();\n-\n             }\n             catch (InterruptedException e)\n             {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1NjA1NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423956055", "bodyText": "Is there any reason why we need to save the message, instead of just creating a new one each time? I'm worried about these two queues getting out of sync. I'd feel safer if we always added a new subscribe message to the messagesToSend queue instead of relying on subscribeMessages being in the right state", "author": "timtay-microsoft", "createdAt": "2020-05-12T18:46:35Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -251,6 +257,12 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n         this.log.debug(\"AMQP connection opened successfully\");\n     }\n \n+    private void requeueSubscribeMessages()\n+    {\n+        messagesToSend.addAll(subscribeMessages);\n+        subscribeMessages.clear();", "originalCommit": "4eb536b77f2f8fb3aa0791821d457829e2a6703d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1NjI1Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423956256", "bodyText": "This layer should know how to build the message, after all", "author": "timtay-microsoft", "createdAt": "2020-05-12T18:46:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1NjA1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ffadb35e42b2a08cdf88269378c94d2d703b981c", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java\nindex dee12ae86..82bfc8dba 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java\n\n@@ -257,12 +251,6 @@ public final class AmqpsIotHubConnection extends ErrorLoggingBaseHandler impleme\n         this.log.debug(\"AMQP connection opened successfully\");\n     }\n \n-    private void requeueSubscribeMessages()\n-    {\n-        messagesToSend.addAll(subscribeMessages);\n-        subscribeMessages.clear();\n-    }\n-\n     /**\n      * @param deviceCount The number of devices involved in this connection. For Multiplexed scenarios, this should be greater than 1.\n      *                    For non-multiplexed scenarios, this should be exactly 1.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTA3Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081072", "bodyText": "Since this is a twin only concept, you don't need an abstract method for this", "author": "timtay-microsoft", "createdAt": "2020-05-12T22:59:17Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java", "diffHunk": "@@ -427,6 +427,11 @@ protected boolean onLinkRemoteOpen(String linkName)\n      */\n     abstract protected AmqpsConvertToProtonReturnValue convertToProton(Message message) throws TransportException;\n \n+    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()", "originalCommit": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTY4OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081688", "bodyText": "amqpsDeviceOperationMap value is an AmqpDeviceOperation, so I think I need to have it in there right?", "author": "azabbasi", "createdAt": "2020-05-12T23:00:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Mjg3MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424082871", "bodyText": "That map has a mix of classes that extend AmqpDeviceOperation. You can cast the twin one as a AmqpsDeviceTwin instance so that you can access the method that is twin specific", "author": "timtay-microsoft", "createdAt": "2020-05-12T23:04:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Mjk2Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424082963", "bodyText": "FINE ! I will cast it :)", "author": "azabbasi", "createdAt": "2020-05-12T23:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTA3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ffadb35e42b2a08cdf88269378c94d2d703b981c", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java\nindex d3273ac4d..f25914626 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java\n\n@@ -427,11 +427,6 @@ public abstract class AmqpsDeviceOperations\n      */\n     abstract protected AmqpsConvertToProtonReturnValue convertToProton(Message message) throws TransportException;\n \n-    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()\n-    {\n-        return null;\n-    }\n-\n     /**\n      * Convert a proton message to an IotHub transport message\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTM3MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081370", "bodyText": "Nice, I like this method. Can you reference this method in the iotHubMessageToProtonMessage method in the same class since it uses this logic, too?", "author": "timtay-microsoft", "createdAt": "2020-05-12T23:00:04Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceTwin.java", "diffHunk": "@@ -191,6 +192,30 @@ protected AmqpsConvertToProtonReturnValue convertToProton(Message message) throw\n         }\n     }\n \n+    @Override\n+    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()\n+    {", "originalCommit": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MjI3MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424082270", "bodyText": "sure", "author": "azabbasi", "createdAt": "2020-05-12T23:02:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTM3MA=="}], "type": "inlineReview", "revised_code": {"commit": "ffadb35e42b2a08cdf88269378c94d2d703b981c", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceTwin.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceTwin.java\nindex b891bd05a..4f771e3f1 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceTwin.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceTwin.java\n\n@@ -192,30 +191,6 @@ public final class AmqpsDeviceTwin extends AmqpsDeviceOperations\n         }\n     }\n \n-    @Override\n-    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()\n-    {\n-        MessageImpl protonMessage = (MessageImpl) Proton.message();\n-\n-        Properties properties = new Properties();\n-\n-        properties.setMessageId(UUID.randomUUID());\n-        properties.setCorrelationId(UUID.randomUUID());\n-\n-        protonMessage.setProperties(properties);\n-\n-        Map<Symbol, Object> messageAnnotationsMap = new HashMap<>();\n-\n-        messageAnnotationsMap.put(Symbol.valueOf(MESSAGE_ANNOTATION_FIELD_KEY_OPERATION), MESSAGE_ANNOTATION_FIELD_VALUE_PUT);\n-        messageAnnotationsMap.put(Symbol.valueOf(MESSAGE_ANNOTATION_FIELD_KEY_RESOURCE), MESSAGE_ANNOTATION_FIELD_VALUE_NOTIFICATIONS_TWIN_PROPERTIES_DESIRED);\n-\n-        MessageAnnotations messageAnnotations = new MessageAnnotations(messageAnnotationsMap);\n-\n-        protonMessage.setMessageAnnotations(messageAnnotations);\n-\n-        return protonMessage;\n-    }\n-\n     /**\n      * Converts an AMQPS message to a corresponding IoT Hub message.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTU0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081540", "bodyText": "\"ctrl + shift + o\"  can cleanup unused imports", "author": "timtay-microsoft", "createdAt": "2020-05-12T23:00:36Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -33,6 +33,7 @@\n import java.util.Queue;\n import java.util.UUID;\n import java.util.concurrent.*;\n+import java.util.ArrayList;", "originalCommit": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ffadb35e42b2a08cdf88269378c94d2d703b981c", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java\nindex 03304cac0..82bfc8dba 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java\n\n@@ -33,7 +33,6 @@ import java.util.Map;\n import java.util.Queue;\n import java.util.UUID;\n import java.util.concurrent.*;\n-import java.util.ArrayList;\n \n import static com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceOperations.*;\n import static com.microsoft.azure.sdk.iot.device.MessageType.DEVICE_METHODS;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTg0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081840", "bodyText": "If you make the '''buildSubscribeToDesiredPropertiesProtonMessage''' method concrete only on the twin class, you can safely cast entry.getValue() as a AmqpsDeviceTwin class to access it here", "author": "timtay-microsoft", "createdAt": "2020-05-12T23:01:30Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java", "diffHunk": "@@ -337,6 +337,11 @@ boolean onLinkRemoteOpen(String linkName)\n             {\n                 if (entry.getValue().onLinkRemoteOpen(linkName))\n                 {\n+                    if (entry.getKey() == MessageType.DEVICE_TWIN)\n+                    {\n+                        sendMessage(entry.getValue().buildSubscribeToDesiredPropertiesProtonMessage(), entry.getKey(), deviceClientConfig.getDeviceId());", "originalCommit": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ffadb35e42b2a08cdf88269378c94d2d703b981c", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java\nindex e3640f147..715151375 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java\n\n@@ -337,11 +337,6 @@ public class AmqpsSessionDeviceOperation\n             {\n                 if (entry.getValue().onLinkRemoteOpen(linkName))\n                 {\n-                    if (entry.getKey() == MessageType.DEVICE_TWIN)\n-                    {\n-                        sendMessage(entry.getValue().buildSubscribeToDesiredPropertiesProtonMessage(), entry.getKey(), deviceClientConfig.getDeviceId());\n-                    }\n-\n                     return true;\n                 }\n             }\n"}}, {"oid": "ffadb35e42b2a08cdf88269378c94d2d703b981c", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/ffadb35e42b2a08cdf88269378c94d2d703b981c", "message": "Support Arrays", "committedDate": "2020-05-12T23:35:41Z", "type": "commit"}, {"oid": "ef165eaaace0ab1d0930f69d84320d010354e47b", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/ef165eaaace0ab1d0930f69d84320d010354e47b", "message": "format file", "committedDate": "2020-05-12T23:35:42Z", "type": "commit"}, {"oid": "f394d8b47b23735fb5ec2dd364e9b35f98012dcd", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/f394d8b47b23735fb5ec2dd364e9b35f98012dcd", "message": "Make sure we send the message after openning the amqps link", "committedDate": "2020-05-12T23:35:42Z", "type": "commit"}, {"oid": "d80311e74081e4f097ab5602b661d393068914d9", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d80311e74081e4f097ab5602b661d393068914d9", "message": "Fix message requeu issue.", "committedDate": "2020-05-12T23:35:42Z", "type": "commit"}, {"oid": "a59236ad0daaeda2eb0d1e870ae72e1992ff8d92", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/a59236ad0daaeda2eb0d1e870ae72e1992ff8d92", "message": "Update all tests", "committedDate": "2020-05-12T23:35:42Z", "type": "commit"}, {"oid": "55551bfbdbf76e41b4483a16793de404b64d749e", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/55551bfbdbf76e41b4483a16793de404b64d749e", "message": "Fix test typeo", "committedDate": "2020-05-12T23:35:42Z", "type": "commit"}, {"oid": "6bed247f94819aed94dd77d2261a3ed387eae522", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/6bed247f94819aed94dd77d2261a3ed387eae522", "message": "Add a single test to Testing reported properties with array support.", "committedDate": "2020-05-12T23:35:42Z", "type": "commit"}, {"oid": "2babd31872ae1e16c9fee37c3acb8987e0b21a81", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/2babd31872ae1e16c9fee37c3acb8987e0b21a81", "message": "Send proton message upon subscription", "committedDate": "2020-05-12T23:35:42Z", "type": "commit"}, {"oid": "b0ed4b2adcdf6ef593c5408cd5a5f33ec90b2d7c", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/b0ed4b2adcdf6ef593c5408cd5a5f33ec90b2d7c", "message": "Addreess comments and code cleanup", "committedDate": "2020-05-12T23:35:42Z", "type": "commit"}, {"oid": "b0ed4b2adcdf6ef593c5408cd5a5f33ec90b2d7c", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/b0ed4b2adcdf6ef593c5408cd5a5f33ec90b2d7c", "message": "Addreess comments and code cleanup", "committedDate": "2020-05-12T23:35:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5Mzc1OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424093758", "bodyText": "actually, you do need a check here that the opened link was a sender link. If you try to send this message when only the receiver link is open, an exception will get thrown. Plus you don't want to send this subscribe message once when the sender link opens, and again once the receiver link opens", "author": "timtay-microsoft", "createdAt": "2020-05-12T23:38:56Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java", "diffHunk": "@@ -337,6 +337,13 @@ boolean onLinkRemoteOpen(String linkName)\n             {\n                 if (entry.getValue().onLinkRemoteOpen(linkName))\n                 {\n+                    if (entry.getKey() == MessageType.DEVICE_TWIN)", "originalCommit": "b0ed4b2adcdf6ef593c5408cd5a5f33ec90b2d7c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3d3be06eb226a88917ebd866dfa2fc24b881bb5d", "chunk": "diff --git a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java\nindex f1d26f980..0300c47b5 100644\n--- a/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java\n+++ b/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java\n\n@@ -337,7 +337,8 @@ public class AmqpsSessionDeviceOperation\n             {\n                 if (entry.getValue().onLinkRemoteOpen(linkName))\n                 {\n-                    if (entry.getKey() == MessageType.DEVICE_TWIN)\n+                    // If the link that is being opened is a sender link and the operation is a DeviceTwin operation, we will send a subscribe message on the opened link\n+                    if (entry.getKey() == MessageType.DEVICE_TWIN && linkName.equals(entry.getValue().getSenderLinkTag()))\n                     {\n                         // since we have already checked the message type, we can safely cast it\n                         AmqpsDeviceTwin deviceTwinOperations = (AmqpsDeviceTwin)entry.getValue();\n"}}, {"oid": "3d3be06eb226a88917ebd866dfa2fc24b881bb5d", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/3d3be06eb226a88917ebd866dfa2fc24b881bb5d", "message": "Make sure we only send the message when the sender link is being opened.", "committedDate": "2020-05-12T23:59:42Z", "type": "commit"}, {"oid": "3915fa185e437df2ce7a48416394a0ddc49d2f76", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/3915fa185e437df2ce7a48416394a0ddc49d2f76", "message": "fix docs", "committedDate": "2020-05-13T00:11:08Z", "type": "commit"}]}