{"pr_number": 832, "pr_title": "fix(e2e): Fix fault injection message tests", "pr_createdAt": "2020-07-01T18:44:46Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/832", "timeline": [{"oid": "eb2966e70c629430c6c30f7ed8d122632023c2a8", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/eb2966e70c629430c6c30f7ed8d122632023c2a8", "message": "refactor(e2e): Add retry logic to sending fault injection messages\n\nFault injection messages are never guaranteed to be delivered since we attach a very short expiry time to each message. Often times, our fault injection tests will fail because a fault never occurs because the fault injection message is never delivered.\n\nNow, the fault injection logic has some retry logic to send the fault injection message again if the previous attempt never resulted in a fault on the connection", "committedDate": "2020-07-01T18:18:39Z", "type": "commit"}, {"oid": "7e9dedf779ddc6324d114857676b94345427ed3f", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/7e9dedf779ddc6324d114857676b94345427ed3f", "message": "Merge branch 'master' into timtay/faultInjection", "committedDate": "2020-07-01T18:54:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NjQwOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r448566409", "bodyText": "We set a short expiry time on these fault injection messages because they often fail to be acknowledged by the service before the connection is lost. With this expiry time, our retry logic wont send this message more than a few times. At the same time though, we risk them never being sent. That's why I added some retry logic to prevent that", "author": "timtay-microsoft", "createdAt": "2020-07-01T19:16:06Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "diffHunk": "@@ -23,6 +23,11 @@\n  */\n public class IotHubServicesCommon\n {\n+    protected static final Integer RETRY_MILLISECONDS = 100;\n+    protected static final Integer SEND_TIMEOUT_MILLISECONDS = 60000;\n+\n+    public static final int ERROR_INJECTION_MESSAGE_TIMEOUT_MILLISECONDS = 200;", "originalCommit": "7e9dedf779ddc6324d114857676b94345427ed3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2ODQ4Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r448568483", "bodyText": "What would cause the service to drop the connection before ack'ing the receipt of this fault injection request? Afaik, service will drop the connection on the next message that they receive (after the FI request message). So this should mean that the FI request message would always be ack'ed.\nIn java, do we not wait until message 1 is ack'ed, before sending message 2? Is that because of the way the send message queue works?", "author": "abhipsaMisra", "createdAt": "2020-07-01T19:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NjQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyNDgzNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r448624837", "bodyText": "Afaik, service will drop the connection on the next message that they receive (after the FI request message)\n\nThat hasn't been my experience. The Java tests don't even send another message until after the connection is dropped. From my experience, the service may or may not ack the fault injection message before dropping the connection.", "author": "timtay-microsoft", "createdAt": "2020-07-01T21:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NjQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MTk5OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r448641998", "bodyText": "I'll spend some time investigating if we can rely on the service ack'ing these fault injection messages before merging this in", "author": "timtay-microsoft", "createdAt": "2020-07-01T22:09:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NjQwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "5b571f966b2a348a4c176fc5fb17044b0090f4f1", "chunk": "diff --git a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java\nindex 225135254..f4da0f46c 100644\n--- a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java\n+++ b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java\n\n@@ -23,11 +23,6 @@ import static tests.integration.com.microsoft.azure.sdk.iot.helpers.CorrelationD\n  */\n public class IotHubServicesCommon\n {\n-    protected static final Integer RETRY_MILLISECONDS = 100;\n-    protected static final Integer SEND_TIMEOUT_MILLISECONDS = 60000;\n-\n-    public static final int ERROR_INJECTION_MESSAGE_TIMEOUT_MILLISECONDS = 200;\n-\n     //if error injection message has not taken effect after 1 minute, the test will timeout\n     private final static long ERROR_INJECTION_MESSAGE_EFFECT_TIMEOUT_MILLISECONDS = 1 * 60 * 1000;\n     private final static String TEST_ASC_SECURITY_MESSAGE = \"{ \\\"AgentVersion\\\": \\\"0.0.1\\\", \"\n"}}, {"oid": "5b571f966b2a348a4c176fc5fb17044b0090f4f1", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/5b571f966b2a348a4c176fc5fb17044b0090f4f1", "message": "Revert \"refactor(e2e): Add retry logic to sending fault injection messages\"\n\nThis reverts commit eb2966e70c629430c6c30f7ed8d122632023c2a8.", "committedDate": "2020-07-01T22:36:20Z", "type": "commit"}, {"oid": "867b4b78c4888f177dc50209647e24fc44d981f0", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/867b4b78c4888f177dc50209647e24fc44d981f0", "message": "fix(e2e): Fix issue where fault injection message wasn't always sent\n\nThis approach follows the model that the C# SDK does. Give the FI message a 1 second timeout so it doesn't get resent too many times for MQTT, and expect a normal ack from the service for AMQP", "committedDate": "2020-07-01T22:49:18Z", "type": "commit"}, {"oid": "ce386bb7a4121b358739e0e9da013378671f8cf2", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/ce386bb7a4121b358739e0e9da013378671f8cf2", "message": "Merge branch 'master' into timtay/faultInjection", "committedDate": "2020-07-01T22:50:12Z", "type": "commit"}, {"oid": "647f229f7b1ba8490331741202ecfe096f1b0285", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/647f229f7b1ba8490331741202ecfe096f1b0285", "message": "fixup", "committedDate": "2020-07-01T23:11:15Z", "type": "commit"}, {"oid": "d1cc3dbe8fe85b08e01c41ec42e22466718c6a46", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d1cc3dbe8fe85b08e01c41ec42e22466718c6a46", "message": "Merge branch 'timtay/faultInjection' of https://github.com/Azure/azure-iot-sdk-java into timtay/faultInjection", "committedDate": "2020-07-01T23:11:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NTg1Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r449165856", "bodyText": "C# SDK uses 5 here, but the service doesn't appear to respect this value. Just in case though, I want to unify with the C# SDK", "author": "timtay-microsoft", "createdAt": "2020-07-02T17:24:21Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/ErrorInjectionHelper.java", "diffHunk": "@@ -31,7 +31,7 @@\n     public static final String FaultCloseReason_Boom = \"Boom\";\n     public static final String FaultCloseReason_Bye = \"byebye\";\n \n-    public static final int DefaultDelayInSec = 1;", "originalCommit": "d1cc3dbe8fe85b08e01c41ec42e22466718c6a46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "bedb5a0f1dc4725aa7a6a83c2719b356d4c2a5a8", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/bedb5a0f1dc4725aa7a6a83c2719b356d4c2a5a8", "message": "Merge branch 'master' into timtay/faultInjection", "committedDate": "2020-07-06T17:13:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NDE5MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r450374191", "bodyText": "Q - why do we need these changes here, and in sendErrorInjectionMessageAndWaitForResponse both?", "author": "abhipsaMisra", "createdAt": "2020-07-06T17:28:51Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "diffHunk": "@@ -55,12 +55,16 @@ public static void sendMessages(InternalClient client,\n \n             for (int i = 0; i < messagesToSend.size(); ++i)\n             {\n-                if (isErrorInjectionMessage(messagesToSend.get(i)))\n+                if ((protocol == IotHubClientProtocol.MQTT || protocol == IotHubClientProtocol.MQTT_WS) && isErrorInjectionMessage(messagesToSend.get(i)))", "originalCommit": "bedb5a0f1dc4725aa7a6a83c2719b356d4c2a5a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NzE2MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r450377161", "bodyText": "I don't think there is a good reason. There's some logic here that could certainly be centralized. I'll take that in a separate PR though", "author": "timtay-microsoft", "createdAt": "2020-07-06T17:34:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NDE5MQ=="}], "type": "inlineReview", "revised_code": null}]}