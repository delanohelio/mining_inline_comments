{"pr_number": 949, "pr_title": "Refactor Get and update headers for digital Twin", "pr_createdAt": "2020-09-29T23:09:21Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/949", "timeline": [{"oid": "c87b89794b5d62bec397d9bbc680a18ce327163a", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/c87b89794b5d62bec397d9bbc680a18ce327163a", "message": "update and get headers", "committedDate": "2020-09-29T23:07:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNjU4Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497126583", "bodyText": "Copyright", "author": "vinagesh", "createdAt": "2020-09-29T23:13:03Z", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/digitaltwin/DigitalTwinClientTests.java", "diffHunk": "@@ -1,33 +1,24 @@\n package tests.integration.com.microsoft.azure.sdk.iot.digitaltwin;", "originalCommit": "c87b89794b5d62bec397d9bbc680a18ce327163a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNzA5OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497127099", "bodyText": "Might be needed for the other test file too.", "author": "vinagesh", "createdAt": "2020-09-29T23:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNjU4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "chunk": "diff --git a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/digitaltwin/DigitalTwinClientTests.java b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/digitaltwin/DigitalTwinClientTests.java\nindex ff6fbdaa5..d20bdfe63 100644\n--- a/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/digitaltwin/DigitalTwinClientTests.java\n+++ b/iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/digitaltwin/DigitalTwinClientTests.java\n\n@@ -1,3 +1,6 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n package tests.integration.com.microsoft.azure.sdk.iot.digitaltwin;\n \n import com.microsoft.azure.sdk.iot.device.*;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNzYwMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497127602", "bodyText": "fix return type header", "author": "vinagesh", "createdAt": "2020-09-29T23:14:24Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java", "diffHunk": "@@ -85,7 +82,7 @@ public static DigitalTwinAsyncClient createFromConnectionString(String connectio\n      * @param digitalTwinId The Id of the digital twin.\n      * @param clazz The class to deserialize the application/json into.\n      * @param <T> The generic type to deserialize the application/json into.\n-     * @return A {@link ServiceResponseWithHeaders} representing deserialized application/json of the digital twin with {@link DigitalTwinGetHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} representing deserialized application/json of the digital twin with {@link DigitalTwinGetDigitalTwinHeaders}.", "originalCommit": "c87b89794b5d62bec397d9bbc680a18ce327163a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEzMzE1Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497133152", "bodyText": "Good catch", "author": "bikamani", "createdAt": "2020-09-29T23:22:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNzYwMg=="}], "type": "inlineReview", "revised_code": {"commit": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java\nindex 3573a2442..6bf6378c8 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java\n\n@@ -82,7 +82,7 @@ public class DigitalTwinAsyncClient {\n      * @param digitalTwinId The Id of the digital twin.\n      * @param clazz The class to deserialize the application/json into.\n      * @param <T> The generic type to deserialize the application/json into.\n-     * @return A {@link ServiceResponseWithHeaders} representing deserialized application/json of the digital twin with {@link DigitalTwinGetDigitalTwinHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} representing deserialized application/json of the digital twin with {@link DigitalTwinGetHeaders}.\n      */\n     public <T> Observable<ServiceResponseWithHeaders<T, DigitalTwinGetHeaders>> getDigitalTwinWithResponse (String digitalTwinId, Class<T> clazz)\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNzY3Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497127673", "bodyText": "same", "author": "vinagesh", "createdAt": "2020-09-29T23:14:31Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java", "diffHunk": "@@ -123,7 +121,7 @@ public static DigitalTwinAsyncClient createFromConnectionString(String connectio\n      * Updates a digital twin.\n      * @param digitalTwinId The Id of the digital twin.\n      * @param digitalTwinUpdateOperations The JSON patch to apply to the specified digital twin. This argument can be created using {@link UpdateOperationUtility}.\n-     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateDigitalTwinHeaders}.", "originalCommit": "c87b89794b5d62bec397d9bbc680a18ce327163a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java\nindex 3573a2442..6bf6378c8 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java\n\n@@ -121,7 +121,7 @@ public class DigitalTwinAsyncClient {\n      * Updates a digital twin.\n      * @param digitalTwinId The Id of the digital twin.\n      * @param digitalTwinUpdateOperations The JSON patch to apply to the specified digital twin. This argument can be created using {@link UpdateOperationUtility}.\n-     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateDigitalTwinHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateHeaders}.\n      */\n     public Observable<ServiceResponseWithHeaders<Void, DigitalTwinUpdateHeaders>> updateDigitalTwinWithResponse (String digitalTwinId, List<Object> digitalTwinUpdateOperations)\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNzc2Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497127762", "bodyText": "same", "author": "vinagesh", "createdAt": "2020-09-29T23:14:39Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java", "diffHunk": "@@ -135,12 +133,13 @@ public static DigitalTwinAsyncClient createFromConnectionString(String connectio\n      * @param digitalTwinId The Id of the digital twin.\n      * @param digitalTwinUpdateOperations The JSON patch to apply to the specified digital twin. This argument can be created using {@link UpdateOperationUtility}.\n      * @param options The optional settings for this request.\n-     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateDigitalTwinHeaders}.", "originalCommit": "c87b89794b5d62bec397d9bbc680a18ce327163a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java\nindex 3573a2442..6bf6378c8 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinAsyncClient.java\n\n@@ -133,7 +133,7 @@ public class DigitalTwinAsyncClient {\n      * @param digitalTwinId The Id of the digital twin.\n      * @param digitalTwinUpdateOperations The JSON patch to apply to the specified digital twin. This argument can be created using {@link UpdateOperationUtility}.\n      * @param options The optional settings for this request.\n-     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateDigitalTwinHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateHeaders}.\n      */\n     public Observable<ServiceResponseWithHeaders<Void, DigitalTwinUpdateHeaders>> updateDigitalTwinWithResponse (String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNzg5NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497127894", "bodyText": "same", "author": "vinagesh", "createdAt": "2020-09-29T23:14:50Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java", "diffHunk": "@@ -50,7 +47,7 @@ public static DigitalTwinClient createFromConnectionString(String connectionStri\n      * @param digitalTwinId The Id of the digital twin.\n      * @param clazz The class to deserialize the application/json into.\n      * @param <T> The generic type to deserialize the application/json into.\n-     * @return A {@link ServiceResponseWithHeaders} representing deserialized application/json of the digital twin with {@link DigitalTwinGetHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} representing deserialized application/json of the digital twin with {@link DigitalTwinGetDigitalTwinHeaders}.", "originalCommit": "c87b89794b5d62bec397d9bbc680a18ce327163a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java\nindex 76e42669b..3c32a6b9e 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java\n\n@@ -47,7 +47,7 @@ public class DigitalTwinClient {\n      * @param digitalTwinId The Id of the digital twin.\n      * @param clazz The class to deserialize the application/json into.\n      * @param <T> The generic type to deserialize the application/json into.\n-     * @return A {@link ServiceResponseWithHeaders} representing deserialized application/json of the digital twin with {@link DigitalTwinGetDigitalTwinHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} representing deserialized application/json of the digital twin with {@link DigitalTwinGetHeaders}.\n      */\n     public <T> ServiceResponseWithHeaders<T, DigitalTwinGetHeaders> getDigitalTwinWithResponse (String digitalTwinId, Class<T> clazz)\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNzk1OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497127958", "bodyText": "same", "author": "vinagesh", "createdAt": "2020-09-29T23:14:55Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java", "diffHunk": "@@ -74,7 +71,7 @@ public Void updateDigitalTwin (String digitalTwinId, List<Object> digitalTwinUpd\n      * Updates a digital twin.\n      * @param digitalTwinId The Id of the digital twin.\n      * @param digitalTwinUpdateOperations The JSON patch to apply to the specified digital twin. This argument can be created using {@link UpdateOperationUtility}.\n-     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateDigitalTwinHeaders}.", "originalCommit": "c87b89794b5d62bec397d9bbc680a18ce327163a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java\nindex 76e42669b..3c32a6b9e 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java\n\n@@ -71,7 +71,7 @@ public class DigitalTwinClient {\n      * Updates a digital twin.\n      * @param digitalTwinId The Id of the digital twin.\n      * @param digitalTwinUpdateOperations The JSON patch to apply to the specified digital twin. This argument can be created using {@link UpdateOperationUtility}.\n-     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateDigitalTwinHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateHeaders}.\n      */\n     public ServiceResponseWithHeaders<Void, DigitalTwinUpdateHeaders> updateDigitalTwinWithResponse (String digitalTwinId, List<Object> digitalTwinUpdateOperations)\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyODAxNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497128015", "bodyText": "same", "author": "vinagesh", "createdAt": "2020-09-29T23:15:00Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java", "diffHunk": "@@ -86,7 +83,7 @@ public Void updateDigitalTwin (String digitalTwinId, List<Object> digitalTwinUpd\n      * @param digitalTwinId The Id of the digital twin.\n      * @param digitalTwinUpdateOperations The JSON patch to apply to the specified digital twin. This argument can be created using {@link UpdateOperationUtility}.\n      * @param options The optional settings for this request.\n-     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateDigitalTwinHeaders}.", "originalCommit": "c87b89794b5d62bec397d9bbc680a18ce327163a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java\nindex 76e42669b..3c32a6b9e 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/DigitalTwinClient.java\n\n@@ -83,7 +83,7 @@ public class DigitalTwinClient {\n      * @param digitalTwinId The Id of the digital twin.\n      * @param digitalTwinUpdateOperations The JSON patch to apply to the specified digital twin. This argument can be created using {@link UpdateOperationUtility}.\n      * @param options The optional settings for this request.\n-     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateDigitalTwinHeaders}.\n+     * @return A {@link ServiceResponseWithHeaders} with {@link DigitalTwinUpdateHeaders}.\n      */\n     public ServiceResponseWithHeaders<Void, DigitalTwinUpdateHeaders> updateDigitalTwinWithResponse (String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyOTYxNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497129616", "bodyText": "Add Copyright - no longer generated", "author": "vinagesh", "createdAt": "2020-09-29T23:17:14Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinGetHeaders.java", "diffHunk": "@@ -4,7 +4,7 @@\n  * regenerated.\n  */\n ", "originalCommit": "c87b89794b5d62bec397d9bbc680a18ce327163a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEzNDYxOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497134619", "bodyText": "done", "author": "bikamani", "createdAt": "2020-09-29T23:24:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyOTYxNg=="}], "type": "inlineReview", "revised_code": {"commit": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinGetHeaders.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinGetHeaders.java\nindex 3e22b9db0..5fb75605d 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinGetHeaders.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinGetHeaders.java\n\n@@ -1,8 +1,5 @@\n-/**\n- * Code generated by Microsoft (R) AutoRest Code Generator.\n- * Changes may cause incorrect behavior and will be lost if the code is\n- * regenerated.\n- */\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n \n package com.microsoft.azure.sdk.iot.service.digitaltwin.models;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyOTY4Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/949#discussion_r497129683", "bodyText": "Add Copyright - no longer generated", "author": "vinagesh", "createdAt": "2020-09-29T23:17:18Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinUpdateHeaders.java", "diffHunk": "@@ -4,7 +4,7 @@\n  * regenerated.", "originalCommit": "c87b89794b5d62bec397d9bbc680a18ce327163a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "chunk": "diff --git a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinUpdateHeaders.java b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinUpdateHeaders.java\nindex 33710de11..e472f494e 100644\n--- a/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinUpdateHeaders.java\n+++ b/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/models/DigitalTwinUpdateHeaders.java\n\n@@ -1,8 +1,5 @@\n-/**\n- * Code generated by Microsoft (R) AutoRest Code Generator.\n- * Changes may cause incorrect behavior and will be lost if the code is\n- * regenerated.\n- */\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n \n package com.microsoft.azure.sdk.iot.service.digitaltwin.models;\n \n"}}, {"oid": "5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/5f1e40aeb3b908e9207e4ae1af71c6496051f64b", "message": "Address code review comments", "committedDate": "2020-09-29T23:31:07Z", "type": "commit"}]}