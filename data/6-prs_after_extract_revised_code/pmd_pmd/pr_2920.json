{"pr_number": 2920, "pr_title": "[java] Fix memory-leak in type resolution", "pr_createdAt": "2020-11-14T17:15:23Z", "pr_url": "https://github.com/pmd/pmd/pull/2920", "timeline": [{"oid": "4fe3874824f3736547d808ad37db2e1bbc47d5cd", "url": "https://github.com/pmd/pmd/commit/4fe3874824f3736547d808ad37db2e1bbc47d5cd", "message": "Simplify constructor of JavaTypeDefinitionSimple", "committedDate": "2020-11-14T13:57:25Z", "type": "commit"}, {"oid": "00d76b03ab1bfd7b6eb517be1f565464d26dcf72", "url": "https://github.com/pmd/pmd/commit/00d76b03ab1bfd7b6eb517be1f565464d26dcf72", "message": "Restrict caching to classes loaded by the bootstrap loader", "committedDate": "2020-11-14T14:02:15Z", "type": "commit"}, {"oid": "307eacd20aecd7cabda70e3df27f78b5bd9d91a5", "url": "https://github.com/pmd/pmd/commit/307eacd20aecd7cabda70e3df27f78b5bd9d91a5", "message": "Fix errors", "committedDate": "2020-11-14T14:37:04Z", "type": "commit"}, {"oid": "4ee7b7ae027fee6755fd4c6375fbfb37cd22149b", "url": "https://github.com/pmd/pmd/commit/4ee7b7ae027fee6755fd4c6375fbfb37cd22149b", "message": "Load fewer class names", "committedDate": "2020-11-14T15:44:27Z", "type": "commit"}, {"oid": "30124fef118e215d04cd7f67f186155bd6213088", "url": "https://github.com/pmd/pmd/commit/30124fef118e215d04cd7f67f186155bd6213088", "message": "Don't cache enclosing class (pretty rare to hit it)", "committedDate": "2020-11-14T15:54:11Z", "type": "commit"}, {"oid": "3ccdb5597a751d055b67f2501f05413e359b8b92", "url": "https://github.com/pmd/pmd/commit/3ccdb5597a751d055b67f2501f05413e359b8b92", "message": "Make overload without varargs", "committedDate": "2020-11-14T16:15:42Z", "type": "commit"}, {"oid": "51c0df8770e4aa22f9d50212be675f022c16b011", "url": "https://github.com/pmd/pmd/commit/51c0df8770e4aa22f9d50212be675f022c16b011", "message": "Remove cache entirely", "committedDate": "2020-11-14T16:48:14Z", "type": "commit"}, {"oid": "b70462b79a5595c6921dc13a4c66517964ee52bb", "url": "https://github.com/pmd/pmd/commit/b70462b79a5595c6921dc13a4c66517964ee52bb", "message": "Update release notes, refs #2920", "committedDate": "2020-11-14T17:16:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3MDM5Nw==", "url": "https://github.com/pmd/pmd/pull/2920#discussion_r528570397", "bodyText": "I think, we should also catch here TypeNotPresentException, see also #2940", "author": "adangel", "createdAt": "2020-11-23T09:36:03Z", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinition.java", "diffHunk": "@@ -52,33 +51,22 @@ public static JavaTypeDefinition forClass(TypeDefinitionType type, JavaTypeDefin\n         }\n     }\n \n+    public static JavaTypeDefinition forClass(final Class<?> clazz) {\n+        return clazz == Object.class ? JavaTypeDefinitionSimple.OBJECT_DEFINITION\n+                                     : forClass(clazz, NO_GENERICS); // very common\n+\n+    }\n+\n     public static JavaTypeDefinition forClass(final Class<?> clazz, JavaTypeDefinition... boundGenerics) {\n         if (clazz == null) {\n             return null;\n         }\n \n-        // deal with generic types\n-        if (boundGenerics.length != 0) {\n-            // With generics there is no cache\n-            return new JavaTypeDefinitionSimple(clazz, boundGenerics);\n-        }\n-\n-        final JavaTypeDefinition typeDef = CLASS_EXACT_TYPE_DEF_CACHE.get(clazz);\n-\n-        if (typeDef != null) {\n-            return typeDef;\n-        }\n-\n-        final JavaTypeDefinition newDef;\n         try {\n-            newDef = new JavaTypeDefinitionSimple(clazz);\n-        } catch (final NoClassDefFoundError e) {\n+            return new JavaTypeDefinitionSimple(clazz, boundGenerics);\n+        } catch (final LinkageError e) {", "originalCommit": "b70462b79a5595c6921dc13a4c66517964ee52bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MDY2Nw==", "url": "https://github.com/pmd/pmd/pull/2920#discussion_r528580667", "bodyText": "Hm... maybe not - we don't seem to load anything here anymore. So I think, not even LinkageError would occur here... but somewhere else....", "author": "adangel", "createdAt": "2020-11-23T09:52:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU3MDM5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9aaae814c482e9261b64545670df0e81b5dd5020", "chunk": "diff --git a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinition.java b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinition.java\nindex 09ce29655d..ad6af12386 100644\n--- a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinition.java\n+++ b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinition.java\n\n@@ -61,12 +61,7 @@ public abstract class JavaTypeDefinition implements TypeDefinition {\n         if (clazz == null) {\n             return null;\n         }\n-\n-        try {\n-            return new JavaTypeDefinitionSimple(clazz, boundGenerics);\n-        } catch (final LinkageError e) {\n-            return null; // Can happen if a parent class references a class not in classpath\n-        }\n+        return new JavaTypeDefinitionSimple(clazz, boundGenerics);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MTA2Ng==", "url": "https://github.com/pmd/pmd/pull/2920#discussion_r528581066", "bodyText": "I think, this method might throw LinkageError when loading the interfaces or superclass.", "author": "adangel", "createdAt": "2020-11-23T09:53:19Z", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinitionSimple.java", "diffHunk": "@@ -26,21 +26,38 @@\n \n \n /* default */ class JavaTypeDefinitionSimple extends JavaTypeDefinition {\n+\n+    static final JavaTypeDefinitionSimple OBJECT_DEFINITION = new JavaTypeDefinitionSimple(Object.class);\n     private final Class<?> clazz;\n-    private final JavaTypeDefinition[] genericArgs;\n+    private JavaTypeDefinition[] genericArgs;\n     // cached because calling clazz.getTypeParameters().length create a new array every time\n-    private final int typeParameterCount;\n-    private final boolean isGeneric;\n-    private final boolean isRawType;\n-    private final JavaTypeDefinition enclosingClass;\n+    private int typeParameterCount = -1;\n+    private final int typeArgumentCount;\n \n     private static final Logger LOG = Logger.getLogger(JavaTypeDefinitionSimple.class.getName());\n-    private static final JavaTypeDefinition[] NO_GENERICS = {};\n \n     protected JavaTypeDefinitionSimple(Class<?> clazz, JavaTypeDefinition... boundGenerics) {\n         super(EXACT);\n         this.clazz = clazz;\n \n+        typeArgumentCount = boundGenerics.length;\n+        if (boundGenerics.length > 0) {\n+            genericArgs = Arrays.copyOf(boundGenerics, boundGenerics.length);\n+        } // otherwise stays null\n+    }\n+\n+    private Class<?> loadEnclosing(Class<?> clazz) {\n+        try {\n+            return clazz.getEnclosingClass();\n+        } catch (LinkageError e) {\n+            if (LOG.isLoggable(Level.WARNING)) {\n+                LOG.log(Level.WARNING, \"Could not load enclosing class of \" + clazz.getName() + \", due to: \" + e);\n+            }\n+            return null;\n+        }\n+    }\n+\n+    private TypeVariable<?>[] getTypeParameters(Class<?> clazz) {", "originalCommit": "b70462b79a5595c6921dc13a4c66517964ee52bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MjE2MQ==", "url": "https://github.com/pmd/pmd/pull/2920#discussion_r528582161", "bodyText": "I think, we should add here a try-catch for LinkageError. In case, we couldn't determine the type parameters, can we then set typeParametersCount=0 ?", "author": "adangel", "createdAt": "2020-11-23T09:54:57Z", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinitionSimple.java", "diffHunk": "@@ -83,12 +80,25 @@ protected JavaTypeDefinitionSimple(Class<?> clazz, JavaTypeDefinition... boundGe\n \n     @Override\n     public JavaTypeDefinition getEnclosingClass() {\n-        return enclosingClass;\n+        return JavaTypeDefinition.forClass(loadEnclosing(clazz));\n+    }\n+\n+    @Override\n+    public boolean isRawType() {\n+        return isGeneric() && typeArgumentCount == 0;\n     }\n \n     @Override\n     public boolean isGeneric() {\n-        return isGeneric;\n+        return getTypeParameterCount() != 0;\n+    }\n+\n+    @Override\n+    public int getTypeParameterCount() {\n+        if (typeParameterCount == -1) {\n+            typeParameterCount = getTypeParameters(clazz).length;", "originalCommit": "b70462b79a5595c6921dc13a4c66517964ee52bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwNjY3Mw==", "url": "https://github.com/pmd/pmd/pull/2920#discussion_r528706673", "bodyText": "I think you're right, will do", "author": "oowekyala", "createdAt": "2020-11-23T13:35:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MjE2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9aaae814c482e9261b64545670df0e81b5dd5020", "chunk": "diff --git a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinitionSimple.java b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinitionSimple.java\nindex 5ced2ec288..37fdab51bd 100644\n--- a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinitionSimple.java\n+++ b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinitionSimple.java\n\n@@ -96,7 +96,11 @@ import java.util.logging.Logger;\n     @Override\n     public int getTypeParameterCount() {\n         if (typeParameterCount == -1) {\n-            typeParameterCount = getTypeParameters(clazz).length;\n+            try {\n+                typeParameterCount = getTypeParameters(clazz).length;\n+            } catch (LinkageError | TypeNotPresentException ignored) {\n+                typeParameterCount = 0; // don't stay stuck on -1\n+            }\n         }\n         return typeParameterCount;\n     }\n"}}, {"oid": "a5bcdb328a46ea253005f7ea15150f06f82ce715", "url": "https://github.com/pmd/pmd/commit/a5bcdb328a46ea253005f7ea15150f06f82ce715", "message": "Merge branch 'master' into issue-2911-class-leak", "committedDate": "2020-11-23T13:37:17Z", "type": "commit"}, {"oid": "9aaae814c482e9261b64545670df0e81b5dd5020", "url": "https://github.com/pmd/pmd/commit/9aaae814c482e9261b64545670df0e81b5dd5020", "message": "Handle TNPE and LinkageE when loading type params", "committedDate": "2020-11-23T13:40:32Z", "type": "commit"}]}