{"pr_number": 2672, "pr_title": "[core] Remove deprecated things", "pr_createdAt": "2020-07-28T11:19:24Z", "pr_url": "https://github.com/pmd/pmd/pull/2672", "timeline": [{"oid": "77a8d7268e648712dcc2835137e93c827ea29830", "url": "https://github.com/pmd/pmd/commit/77a8d7268e648712dcc2835137e93c827ea29830", "message": "Remove benchmarker", "committedDate": "2020-07-28T10:07:53Z", "type": "commit"}, {"oid": "7db6f3809c07c93729a8183cf80c19a9643d0837", "url": "https://github.com/pmd/pmd/commit/7db6f3809c07c93729a8183cf80c19a9643d0837", "message": "Remove violation tree", "committedDate": "2020-07-28T10:13:37Z", "type": "commit"}, {"oid": "942493051eb3deb429b7c4a755807b5a366f2bdf", "url": "https://github.com/pmd/pmd/commit/942493051eb3deb429b7c4a755807b5a366f2bdf", "message": "Remove some utils", "committedDate": "2020-07-28T10:31:59Z", "type": "commit"}, {"oid": "d650c87d8d4a60d4ad6fe2a514524d952a50bd94", "url": "https://github.com/pmd/pmd/commit/d650c87d8d4a60d4ad6fe2a514524d952a50bd94", "message": "Remove more utils", "committedDate": "2020-07-28T10:51:55Z", "type": "commit"}, {"oid": "e0de46652b00bc95378e8fbb3ff8913edb1673e6", "url": "https://github.com/pmd/pmd/commit/e0de46652b00bc95378e8fbb3ff8913edb1673e6", "message": "Fix tests", "committedDate": "2020-07-28T11:08:47Z", "type": "commit"}, {"oid": "ae9e416095b8926fcf91037a0c75e715a85fe452", "url": "https://github.com/pmd/pmd/commit/ae9e416095b8926fcf91037a0c75e715a85fe452", "message": "Checkstyle", "committedDate": "2020-07-28T22:08:46Z", "type": "commit"}, {"oid": "da3573a25abe29f4c7524e886970549d9b37ebbb", "url": "https://github.com/pmd/pmd/commit/da3573a25abe29f4c7524e886970549d9b37ebbb", "message": "Merge branch '7.0.x' into remove-old-stuff", "committedDate": "2020-07-29T15:24:20Z", "type": "commit"}, {"oid": "4c110825748a020d08eb1c5c0326736f3f7f6b0a", "url": "https://github.com/pmd/pmd/commit/4c110825748a020d08eb1c5c0326736f3f7f6b0a", "message": "Cleanup report", "committedDate": "2020-07-29T16:04:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ3MjA4OQ==", "url": "https://github.com/pmd/pmd/pull/2672#discussion_r463472089", "bodyText": "Do we first need to deprecate that method before removing it? It has of course no replacement in PMD6. We use in summary html renderer though....", "author": "adangel", "createdAt": "2020-07-31T08:19:30Z", "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "diffHunk": "@@ -177,30 +184,6 @@ public Throwable getError() {\n     }\n \n \n-    private static String keyFor(RuleViolation rv) {\n-\n-        return StringUtils.isNotBlank(rv.getPackageName()) ? rv.getPackageName() + '.' + rv.getClassName() : \"\";\n-    }\n-\n-    /**\n-     * Calculate a summary of violation counts per fully classified class name.\n-     *\n-     * @return violations per class name\n-     */\n-    public Map<String, Integer> getCountSummary() {", "originalCommit": "da3573a25abe29f4c7524e886970549d9b37ebbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ3MzUwMA==", "url": "https://github.com/pmd/pmd/pull/2672#discussion_r463473500", "bodyText": "Ok, just seen #2680 - I'll continue review there and come back...", "author": "adangel", "createdAt": "2020-07-31T08:22:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ3MjA4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3d4f70900973fd3e4ed0ed51fdb5474b8d8f70ad", "chunk": "diff --git a/pmd-core/src/main/java/net/sourceforge/pmd/Report.java b/pmd-core/src/main/java/net/sourceforge/pmd/Report.java\nindex 9f98fc680d..339df0f5e8 100644\n--- a/pmd-core/src/main/java/net/sourceforge/pmd/Report.java\n+++ b/pmd-core/src/main/java/net/sourceforge/pmd/Report.java\n\n@@ -183,43 +131,8 @@ public class Report implements Iterable<RuleViolation> {\n         }\n     }\n \n-\n-    /**\n-     * Calculate a summary of violations per rule.\n-     *\n-     * @return a Map summarizing the Report: String (rule name) -&gt; Integer (count\n-     *         of violations)\n-     */\n-    public Map<String, Integer> getSummary() {\n-        Map<String, Integer> summary = new HashMap<>();\n-        for (RuleViolation rv : violations) {\n-            String name = rv.getRule().getName();\n-            if (!summary.containsKey(name)) {\n-                summary.put(name, 0);\n-            }\n-            Integer count = summary.get(name);\n-            summary.put(name, count + 1);\n-        }\n-        return summary;\n-    }\n-\n-    /**\n-     * Registers a report listener\n-     *\n-     * @param listener\n-     *            the listener\n-     */\n-    public void addListener(ThreadSafeReportListener listener) {\n-        listeners.add(listener);\n-    }\n-\n-    public List<SuppressedViolation> getSuppressedRuleViolations() {\n-        return suppressedRuleViolations;\n-    }\n-\n     /**\n      * Represents a violation, that has been suppressed.\n-     * TODO this should implement RuleViolation\n      */\n     public static class SuppressedViolation {\n         private final RuleViolation rv;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ3MjM1Mw==", "url": "https://github.com/pmd/pmd/pull/2672#discussion_r463472353", "bodyText": "same here, although ReportTree is already deprecated", "author": "adangel", "createdAt": "2020-07-31T08:19:56Z", "path": "pmd-core/src/main/java/net/sourceforge/pmd/Report.java", "diffHunk": "@@ -177,30 +184,6 @@ public Throwable getError() {\n     }\n \n \n-    private static String keyFor(RuleViolation rv) {\n-\n-        return StringUtils.isNotBlank(rv.getPackageName()) ? rv.getPackageName() + '.' + rv.getClassName() : \"\";\n-    }\n-\n-    /**\n-     * Calculate a summary of violation counts per fully classified class name.\n-     *\n-     * @return violations per class name\n-     */\n-    public Map<String, Integer> getCountSummary() {\n-        Map<String, Integer> summary = new HashMap<>();\n-        for (RuleViolation rv : violationTree) {\n-            String key = keyFor(rv);\n-            Integer o = summary.get(key);\n-            summary.put(key, o == null ? NumericConstants.ONE : o + 1);\n-        }\n-        return summary;\n-    }\n-\n-    public ReportTree getViolationTree() {", "originalCommit": "da3573a25abe29f4c7524e886970549d9b37ebbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3d4f70900973fd3e4ed0ed51fdb5474b8d8f70ad", "chunk": "diff --git a/pmd-core/src/main/java/net/sourceforge/pmd/Report.java b/pmd-core/src/main/java/net/sourceforge/pmd/Report.java\nindex 9f98fc680d..339df0f5e8 100644\n--- a/pmd-core/src/main/java/net/sourceforge/pmd/Report.java\n+++ b/pmd-core/src/main/java/net/sourceforge/pmd/Report.java\n\n@@ -183,43 +131,8 @@ public class Report implements Iterable<RuleViolation> {\n         }\n     }\n \n-\n-    /**\n-     * Calculate a summary of violations per rule.\n-     *\n-     * @return a Map summarizing the Report: String (rule name) -&gt; Integer (count\n-     *         of violations)\n-     */\n-    public Map<String, Integer> getSummary() {\n-        Map<String, Integer> summary = new HashMap<>();\n-        for (RuleViolation rv : violations) {\n-            String name = rv.getRule().getName();\n-            if (!summary.containsKey(name)) {\n-                summary.put(name, 0);\n-            }\n-            Integer count = summary.get(name);\n-            summary.put(name, count + 1);\n-        }\n-        return summary;\n-    }\n-\n-    /**\n-     * Registers a report listener\n-     *\n-     * @param listener\n-     *            the listener\n-     */\n-    public void addListener(ThreadSafeReportListener listener) {\n-        listeners.add(listener);\n-    }\n-\n-    public List<SuppressedViolation> getSuppressedRuleViolations() {\n-        return suppressedRuleViolations;\n-    }\n-\n     /**\n      * Represents a violation, that has been suppressed.\n-     * TODO this should implement RuleViolation\n      */\n     public static class SuppressedViolation {\n         private final RuleViolation rv;\n"}}, {"oid": "3d4f70900973fd3e4ed0ed51fdb5474b8d8f70ad", "url": "https://github.com/pmd/pmd/commit/3d4f70900973fd3e4ed0ed51fdb5474b8d8f70ad", "message": "Merge branch '7.0.x' into remove-old-stuff", "committedDate": "2020-07-31T14:02:34Z", "type": "commit"}, {"oid": "ad1a02b032b94a7c8cfd0f5b1c9c8082757d3f80", "url": "https://github.com/pmd/pmd/commit/ad1a02b032b94a7c8cfd0f5b1c9c8082757d3f80", "message": "Merge branch '7.0.x' into remove-old-stuff", "committedDate": "2020-07-31T14:03:57Z", "type": "commit"}, {"oid": "cbef6a8b7ece1309bcac65fc916d9674ebde98e0", "url": "https://github.com/pmd/pmd/commit/cbef6a8b7ece1309bcac65fc916d9674ebde98e0", "message": "Merge branch '7.0.x' into remove-old-stuff", "committedDate": "2020-08-03T21:25:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5OTg3MQ==", "url": "https://github.com/pmd/pmd/pull/2672#discussion_r475099871", "bodyText": "That's actually a change in the behavior, see the corresponding PapariTextRendererTest.\nThe test is actually not really good, as it has no test where violations with package+class names are reported so that the summary would show something useful.\nOk, let's simply change it - improving the textcolorrenderer and its tests is another task.", "author": "adangel", "createdAt": "2020-08-22T15:09:52Z", "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/TextColorRenderer.java", "diffHunk": "@@ -187,13 +187,38 @@ public void end() throws IOException {\n                 + this.colorReset + PMD.EOL);\n     }\n \n+\n+    /**\n+     * Calculate a summary of violation counts per fully classified class name.\n+     *\n+     * @return violations per class name\n+     */\n+    private static Map<String, Integer> getCountSummary(Report report) {\n+        Map<String, Integer> summary = new HashMap<>();\n+        for (RuleViolation rv : report.getViolations()) {\n+            String key = keyFor(rv);\n+            if (key.isEmpty()) {", "originalCommit": "cbef6a8b7ece1309bcac65fc916d9674ebde98e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}