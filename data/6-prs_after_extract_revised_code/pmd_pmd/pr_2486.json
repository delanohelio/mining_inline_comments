{"pr_number": 2486, "pr_title": "[core] Revamp the language version alias APIs", "pr_createdAt": "2020-05-14T19:30:28Z", "pr_url": "https://github.com/pmd/pmd/pull/2486", "timeline": [{"oid": "8c7a49eb6950011e04c213ece83e8a3a0f2c0248", "url": "https://github.com/pmd/pmd/commit/8c7a49eb6950011e04c213ece83e8a3a0f2c0248", "message": "[core] Revamp the language version alias APIs\n\n - The old experimental API allowed calls such as\n`addVersions(langHandler, false)` which were not only invalid, but would\nthrow an `ArrayIndexOutOfBoundsException`, so we split the name\n(required) and the aliases (varargs, and therefore optional)\n - In doing so, I was bothered by parameter order. The version name is\nthe most significant change when setting 2 versions for a language, so I\nliked it being first as the old `addVersion` method did, so I moved\nthat ahead.\n - With that, I now had 2 methods that where equivalent, except one\nallowed for varargs and the other didn't\u2026 so I merged them. This is not\n100% binary compatible, but it is source compatible (that is, unless you\nused reflection, all valid calls to the old non-experimental method\nstill work).", "committedDate": "2020-05-14T19:03:45Z", "type": "commit"}, {"oid": "d1e0f8c5faa4690beeea629f88e9aa6d6ebeb8eb", "url": "https://github.com/pmd/pmd/commit/d1e0f8c5faa4690beeea629f88e9aa6d6ebeb8eb", "message": "Bring back binary compatibility", "committedDate": "2020-05-14T19:30:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MTc3Mw==", "url": "https://github.com/pmd/pmd/pull/2486#discussion_r425381773", "bodyText": "this change is unrelated, but the language attribute is not required in rule definition (may be provided by the rule implementation directly), so this may produce NPEs for definitions such as:\n<!-- AccessorClassGenerationRule is an AbstractJavaRule, which sets language to Java, \nmaximumLanguageVersion is invalid, but the builder is never explicitly told the language -->\n<rule name=\"AccessorClassGeneration\"\n          since=\"1.04\"\n          maximumLanguageVersion=\"16\"\n          message=\"Avoid instantiation through private constructors from outside of the constructor's class.\"\n          class=\"net.sourceforge.pmd.lang.java.rule.bestpractices.AccessorClassGenerationRule\"\n          externalInfoUrl=\"${pmd.website.baseurl}/pmd_rules_java_bestpractices.html#accessorclassgeneration\">\nthis bug just happened to bit me during my refactors :D", "author": "jsotuyod", "createdAt": "2020-05-14T19:33:32Z", "path": "pmd-core/src/main/java/net/sourceforge/pmd/rules/RuleBuilder.java", "diffHunk": "@@ -184,12 +184,12 @@ private void loadLanguageMinMaxVersions(Rule rule) {\n         checkLanguageVersionsAreOrdered(rule);\n     }\n \n-    private void throwUnknownLanguageVersionException(String minOrMax, String unknownVersion) {\n+    private void throwUnknownLanguageVersionException(String minOrMax, String unknownVersion, Language lang) {", "originalCommit": "d1e0f8c5faa4690beeea629f88e9aa6d6ebeb8eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MDc0Ng==", "url": "https://github.com/pmd/pmd/pull/2486#discussion_r426170746", "bodyText": "I think this needs a test case. I'll add one when merging", "author": "oowekyala", "createdAt": "2020-05-16T16:56:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MTc3Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MjM3NA==", "url": "https://github.com/pmd/pmd/pull/2486#discussion_r425382374", "bodyText": "shall we deprecate it and promote the experimental version?", "author": "jsotuyod", "createdAt": "2020-05-14T19:34:39Z", "path": "pmd-core/src/main/java/net/sourceforge/pmd/lang/BaseLanguageModule.java", "diffHunk": "@@ -56,9 +57,9 @@ protected void addVersions(LanguageVersionHandler languageVersionHandler, boolea\n             defaultVersion = languageVersion;\n         }\n     }\n-\n+    \n     protected void addVersion(String version, LanguageVersionHandler languageVersionHandler, boolean isDefault) {", "originalCommit": "d1e0f8c5faa4690beeea629f88e9aa6d6ebeb8eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNzA3NA==", "url": "https://github.com/pmd/pmd/pull/2486#discussion_r425817074", "bodyText": "I think, we shouldn't remove the redundant overload on master, but deprecating it and removing it later is appropriate. Removing it abruptly would at least break the designer, though I don't know about other dependent projects", "author": "oowekyala", "createdAt": "2020-05-15T13:53:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MjM3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgyNDQ5Nw==", "url": "https://github.com/pmd/pmd/pull/2486#discussion_r425824497", "bodyText": "true, we are compiling the designer against older pmd-core for release, and get a bumped pmd-core in runtime. I completely forgot about that one.", "author": "jsotuyod", "createdAt": "2020-05-15T14:04:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MjM3NA=="}], "type": "inlineReview", "revised_code": {"commit": "0f552ee6207a59b84e3efcd7695a7043229fe7d3", "chunk": "diff --git a/pmd-core/src/main/java/net/sourceforge/pmd/lang/BaseLanguageModule.java b/pmd-core/src/main/java/net/sourceforge/pmd/lang/BaseLanguageModule.java\nindex 3307f8e564..b2ecd8fb25 100644\n--- a/pmd-core/src/main/java/net/sourceforge/pmd/lang/BaseLanguageModule.java\n+++ b/pmd-core/src/main/java/net/sourceforge/pmd/lang/BaseLanguageModule.java\n\n@@ -57,7 +58,19 @@ public abstract class BaseLanguageModule implements Language {\n             defaultVersion = languageVersion;\n         }\n     }\n+\n+    protected void addVersion(String version, LanguageVersionHandler languageVersionHandler, String... versionAliases) {\n+        addVersion(version, languageVersionHandler, false, versionAliases);\n+    }\n     \n+    protected void addDefaultVersion(String version, LanguageVersionHandler languageVersionHandler, String... versionAliases) {\n+        addVersion(version, languageVersionHandler, true, versionAliases);\n+    }\n+\n+    /**\n+     * @deprecated use {@link #addVersion(String, LanguageVersionHandler, String...)} or {@link #addDefaultVersion(String, LanguageVersionHandler, String...)}\n+     */\n+    @Deprecated\n     protected void addVersion(String version, LanguageVersionHandler languageVersionHandler, boolean isDefault) {\n         addVersion(version, languageVersionHandler, isDefault, new String[0]);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNDY0NA==", "url": "https://github.com/pmd/pmd/pull/2486#discussion_r425814644", "bodyText": "I think we could improve further by hiding the isDefault parameter. There's only one default version, but all those calls have to mention this false argument, which is obscure unless you know what it is, or are in an IDE. We could just have addVersion for non-default versions, and a separate addDefaultVersion method", "author": "oowekyala", "createdAt": "2020-05-15T13:49:29Z", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaLanguageModule.java", "diffHunk": "@@ -19,12 +19,12 @@ public JavaLanguageModule() {\n         super(NAME, null, TERSE_NAME, JavaRuleChainVisitor.class, \"java\");\n         addVersion(\"1.3\", new JavaLanguageHandler(3), false);\n         addVersion(\"1.4\", new JavaLanguageHandler(4), false);\n-        addVersions(new JavaLanguageHandler(5), false, \"1.5\", \"5\");\n-        addVersions(new JavaLanguageHandler(6), false, \"1.6\", \"6\");\n-        addVersions(new JavaLanguageHandler(7), false, \"1.7\", \"7\");\n-        addVersions(new JavaLanguageHandler(8), false, \"1.8\", \"8\");\n-        addVersions(new JavaLanguageHandler(9), false, \"9\", \"1.9\");\n-        addVersions(new JavaLanguageHandler(10), false, \"10\", \"1.10\");\n+        addVersion(\"1.5\", new JavaLanguageHandler(5), false, \"5\");", "originalCommit": "d1e0f8c5faa4690beeea629f88e9aa6d6ebeb8eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg1MDA1Nw==", "url": "https://github.com/pmd/pmd/pull/2486#discussion_r425850057", "bodyText": "done", "author": "jsotuyod", "createdAt": "2020-05-15T14:43:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNDY0NA=="}], "type": "inlineReview", "revised_code": {"commit": "0f552ee6207a59b84e3efcd7695a7043229fe7d3", "chunk": "diff --git a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaLanguageModule.java b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaLanguageModule.java\nindex dba053bfb7..9a9bbf2d82 100644\n--- a/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaLanguageModule.java\n+++ b/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaLanguageModule.java\n\n@@ -17,20 +17,20 @@ public class JavaLanguageModule extends BaseLanguageModule {\n \n     public JavaLanguageModule() {\n         super(NAME, null, TERSE_NAME, JavaRuleChainVisitor.class, \"java\");\n-        addVersion(\"1.3\", new JavaLanguageHandler(3), false);\n-        addVersion(\"1.4\", new JavaLanguageHandler(4), false);\n-        addVersion(\"1.5\", new JavaLanguageHandler(5), false, \"5\");\n-        addVersion(\"1.6\", new JavaLanguageHandler(6), false, \"6\");\n-        addVersion(\"1.7\", new JavaLanguageHandler(7), false, \"7\");\n-        addVersion(\"1.8\", new JavaLanguageHandler(8), false, \"8\");\n-        addVersion(\"9\", new JavaLanguageHandler(9), false, \"1.9\");\n-        addVersion(\"10\", new JavaLanguageHandler(10), false, \"1.10\");\n-        addVersion(\"11\", new JavaLanguageHandler(11), false);\n-        addVersion(\"12\", new JavaLanguageHandler(12), false);\n-        addVersion(\"13\", new JavaLanguageHandler(13), false);\n-        addVersion(\"13-preview\", new JavaLanguageHandler(13, true), false);\n-        addVersion(\"14\", new JavaLanguageHandler(14), true); // 14 is the default\n-        addVersion(\"14-preview\", new JavaLanguageHandler(14, true), false);\n+        addVersion(\"1.3\", new JavaLanguageHandler(3));\n+        addVersion(\"1.4\", new JavaLanguageHandler(4));\n+        addVersion(\"1.5\", new JavaLanguageHandler(5), \"5\");\n+        addVersion(\"1.6\", new JavaLanguageHandler(6), \"6\");\n+        addVersion(\"1.7\", new JavaLanguageHandler(7), \"7\");\n+        addVersion(\"1.8\", new JavaLanguageHandler(8), \"8\");\n+        addVersion(\"9\", new JavaLanguageHandler(9), \"1.9\");\n+        addVersion(\"10\", new JavaLanguageHandler(10), \"1.10\");\n+        addVersion(\"11\", new JavaLanguageHandler(11));\n+        addVersion(\"12\", new JavaLanguageHandler(12));\n+        addVersion(\"13\", new JavaLanguageHandler(13));\n+        addVersion(\"13-preview\", new JavaLanguageHandler(13, true));\n+        addDefaultVersion(\"14\", new JavaLanguageHandler(14)); // 14 is the default\n+        addVersion(\"14-preview\", new JavaLanguageHandler(14, true));\n     }\n \n }\n"}}, {"oid": "0f552ee6207a59b84e3efcd7695a7043229fe7d3", "url": "https://github.com/pmd/pmd/commit/0f552ee6207a59b84e3efcd7695a7043229fe7d3", "message": "Further refine the addVersion API", "committedDate": "2020-05-15T14:42:28Z", "type": "commit"}, {"oid": "465dead81c32ef609a1e2448334a62936657c210", "url": "https://github.com/pmd/pmd/commit/465dead81c32ef609a1e2448334a62936657c210", "message": "Optimize imports", "committedDate": "2020-05-15T14:44:09Z", "type": "commit"}]}