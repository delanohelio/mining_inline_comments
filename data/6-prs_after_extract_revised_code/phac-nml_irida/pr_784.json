{"pr_number": 784, "pr_title": "Admin create client", "pr_createdAt": "2020-08-21T20:13:50Z", "pr_url": "https://github.com/phac-nml/irida/pull/784", "timeline": [{"oid": "bd201c4f0ae98ecfec04d637e5a15773fe22c668", "url": "https://github.com/phac-nml/irida/commit/bd201c4f0ae98ecfec04d637e5a15773fe22c668", "message": ":construction: Created new AddClientButton component", "committedDate": "2020-08-21T12:01:26Z", "type": "commit"}, {"oid": "1acd827591437b3d9398aff79d36048060c3eaf5", "url": "https://github.com/phac-nml/irida/commit/1acd827591437b3d9398aff79d36048060c3eaf5", "message": "Merge branch 'admin-list-clients' into admin-add-client\n\n# Conflicts:\n#\tsrc/main/resources/i18n/messages.properties\n#\tsrc/main/webapp/resources/js/pages/admin/components/clients/listing/ClientListingPage.jsx", "committedDate": "2020-08-21T12:06:18Z", "type": "commit"}, {"oid": "1917ecf93f377835f60d9db70bcdc9fec3d9cf43", "url": "https://github.com/phac-nml/irida/commit/1917ecf93f377835f60d9db70bcdc9fec3d9cf43", "message": ":construction: fields hooked up, reset on close modal", "committedDate": "2020-08-21T16:16:20Z", "type": "commit"}, {"oid": "19296aa2f737669abd337b5719363eeeb13a4c2a", "url": "https://github.com/phac-nml/irida/commit/19296aa2f737669abd337b5719363eeeb13a4c2a", "message": ":construction: Working server side create.", "committedDate": "2020-08-21T20:12:57Z", "type": "commit"}, {"oid": "b1080eb65dd1e61b997d9bbd6643a8d6afead481", "url": "https://github.com/phac-nml/irida/commit/b1080eb65dd1e61b997d9bbd6643a8d6afead481", "message": ":construction: Server validation with client warnings", "committedDate": "2020-08-24T16:32:49Z", "type": "commit"}, {"oid": "7e3d24a815c7828d272ca7578fc272064da3b8bc", "url": "https://github.com/phac-nml/irida/commit/7e3d24a815c7828d272ca7578fc272064da3b8bc", "message": ":construction: Cleaned up server calls.", "committedDate": "2020-08-24T16:35:39Z", "type": "commit"}, {"oid": "d334fc60877fff300525c9c426e27986234af6de", "url": "https://github.com/phac-nml/irida/commit/d334fc60877fff300525c9c426e27986234af6de", "message": ":globe_with_meridians: Updated internationalization", "committedDate": "2020-08-24T18:58:54Z", "type": "commit"}, {"oid": "750fbbf86e30e14dfeb66351684d7a855156b38b", "url": "https://github.com/phac-nml/irida/commit/750fbbf86e30e14dfeb66351684d7a855156b38b", "message": ":construction: Code cleanup", "committedDate": "2020-08-24T19:12:03Z", "type": "commit"}, {"oid": "09ae4fee5c05e894ea48b6a57c3c4e8ca10e4059", "url": "https://github.com/phac-nml/irida/commit/09ae4fee5c05e894ea48b6a57c3c4e8ca10e4059", "message": ":bulb: Updated JavaDoc", "committedDate": "2020-08-24T19:26:30Z", "type": "commit"}, {"oid": "c2af0b5abb6ab298c3740264f6545df4cdea4c25", "url": "https://github.com/phac-nml/irida/commit/c2af0b5abb6ab298c3740264f6545df4cdea4c25", "message": ":bulb: Updated JavaDoc", "committedDate": "2020-08-24T19:42:53Z", "type": "commit"}, {"oid": "497afa61672143db165c71cb58a97c54bca6a216", "url": "https://github.com/phac-nml/irida/commit/497afa61672143db165c71cb58a97c54bca6a216", "message": ":bulb: Updated JSDoc", "committedDate": "2020-08-24T19:44:43Z", "type": "commit"}, {"oid": "ed4143ad9a872f17eea16b86a2b8d919377a6dad", "url": "https://github.com/phac-nml/irida/commit/ed4143ad9a872f17eea16b86a2b8d919377a6dad", "message": ":bulb: Updated JSDoc", "committedDate": "2020-08-24T19:46:03Z", "type": "commit"}, {"oid": "5c6bec335f7bbe75fb163df73db4b1735a8048d3", "url": "https://github.com/phac-nml/irida/commit/5c6bec335f7bbe75fb163df73db4b1735a8048d3", "message": "\ud83d\udcc4 Updated JSDoc", "committedDate": "2020-08-25T01:44:50Z", "type": "commit"}, {"oid": "58e0628732f1593135b118c51ea0cd753e0eab9b", "url": "https://github.com/phac-nml/irida/commit/58e0628732f1593135b118c51ea0cd753e0eab9b", "message": "Merge branch 'admin-base' into admin-add-client", "committedDate": "2020-08-25T13:35:42Z", "type": "commit"}, {"oid": "01e10c33ba8c0821e0ea85f9791378407fdfa548", "url": "https://github.com/phac-nml/irida/commit/01e10c33ba8c0821e0ea85f9791378407fdfa548", "message": "\ud83d\udea7 Working on help popovers and documentation", "committedDate": "2020-08-25T15:36:29Z", "type": "commit"}, {"oid": "4f5452e5e6154c1fc20ac14b6bd68526d083e4b1", "url": "https://github.com/phac-nml/irida/commit/4f5452e5e6154c1fc20ac14b6bd68526d083e4b1", "message": ":construction: Added help popovers for difficult areas of the form", "committedDate": "2020-08-25T16:14:08Z", "type": "commit"}, {"oid": "4b8e025d86c46dfe94ba455ee50846edcb5557f1", "url": "https://github.com/phac-nml/irida/commit/4b8e025d86c46dfe94ba455ee50846edcb5557f1", "message": ":memo: Updated image for creating a client.", "committedDate": "2020-08-25T16:15:34Z", "type": "commit"}, {"oid": "a465cceb54f4a4fe47876de12dcb546e814a6218", "url": "https://github.com/phac-nml/irida/commit/a465cceb54f4a4fe47876de12dcb546e814a6218", "message": ":construction: Removed unused import", "committedDate": "2020-08-25T19:25:06Z", "type": "commit"}, {"oid": "f8d964b3d83af89ee69253b91ed5cd9e0fbe242d", "url": "https://github.com/phac-nml/irida/commit/f8d964b3d83af89ee69253b91ed5cd9e0fbe242d", "message": "\ud83d\udea7 Reverted files that should not have been modified.", "committedDate": "2020-08-26T02:54:36Z", "type": "commit"}, {"oid": "5791e68e9ae58ff089fc4100e6c2a8bbbd7dedd8", "url": "https://github.com/phac-nml/irida/commit/5791e68e9ae58ff089fc4100e6c2a8bbbd7dedd8", "message": "Merge remote-tracking branch 'origin/admin-add-client' into admin-add-client", "committedDate": "2020-08-26T02:58:50Z", "type": "commit"}, {"oid": "345938123724c3984271ff9c85c535cd117b623f", "url": "https://github.com/phac-nml/irida/commit/345938123724c3984271ff9c85c535cd117b623f", "message": "\ud83d\udea7 File format", "committedDate": "2020-08-26T02:59:11Z", "type": "commit"}, {"oid": "c506af34fcd73b83e8ef4a941c2ae7a7eed95218", "url": "https://github.com/phac-nml/irida/commit/c506af34fcd73b83e8ef4a941c2ae7a7eed95218", "message": "\ud83d\udea7 Fixing formatting issues with git?", "committedDate": "2020-08-26T03:09:59Z", "type": "commit"}, {"oid": "e7c09fcd06f28605b5ffbf41f0172c47948f8d46", "url": "https://github.com/phac-nml/irida/commit/e7c09fcd06f28605b5ffbf41f0172c47948f8d46", "message": "\ud83d\udea7 fixed issue with column names", "committedDate": "2020-08-26T03:13:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM4Njk3Nw==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477386977", "bodyText": "I think this should be catching a different type of exception. I think a NoSuchClientException would be more appropriate as that is what us actually thrown in the IridaClientDetailsServiceImpl.java > loadClientByClientId method. This method signature will also need to be updated to include throws NoSuchClientException. What do you think?", "author": "deepsidhu85", "createdAt": "2020-08-26T15:23:51Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/ClientsAjaxController.java", "diffHunk": "@@ -37,4 +46,52 @@ public ClientsAjaxController(UIClientService service) {\n \t\treturn ResponseEntity.ok(service.getClientList(request));\n \t}\n \n+\t/**\n+\t * Revoke all tokens for a client given its identifier\n+\t *\n+\t * @param id Identifier for a specific client\n+\t */\n+\t@DeleteMapping(\"/revoke\")\n+\t@PreAuthorize(\"hasRole('ROLE_ADMIN')\")\n+\tpublic void deleteClientTokens(@RequestParam Long id) {\n+\t\tservice.deleteClientTokens(id);\n+\t}\n+\n+\t/**\n+\t * Check to see if the client identifier that a user wants to use for a new client is not already used\n+\t *\n+\t * @param clientId Name to check if exists\n+\t * @param locale   Users current locale\n+\t * @return Http response indicating if the client id is valid.\n+\t */\n+\t@RequestMapping(\"/validate\")\n+\t@PreAuthorize(\"hasRole('ROLE_ADMIN')\")\n+\tpublic ResponseEntity<String> validateClientName(@RequestParam String clientId, Locale locale) {\n+\t\ttry {\n+\t\t\tservice.validateClientId(clientId);\n+\t\t\treturn ResponseEntity.status(HttpStatus.CONFLICT)\n+\t\t\t\t\t.body(messageSource.getMessage(\"server.AddClientForm.error\", new Object[] { clientId }, locale));\n+\t\t} catch (ClientRegistrationException e) {\n+\t\t\treturn ResponseEntity.ok(\"\");", "originalCommit": "e7c09fcd06f28605b5ffbf41f0172c47948f8d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyNjk1Nw==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477426957", "bodyText": "Makes sense to me, updated in d643207", "author": "joshsadam", "createdAt": "2020-08-26T16:21:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM4Njk3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "d643207da2d426a4b915a7a1026c10ef6fd7c329", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/ClientsAjaxController.java b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/ClientsAjaxController.java\nindex 1c43b3aa70..952696ede0 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/ClientsAjaxController.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/ClientsAjaxController.java\n\n@@ -71,7 +71,7 @@ public class ClientsAjaxController {\n \t\t\tservice.validateClientId(clientId);\n \t\t\treturn ResponseEntity.status(HttpStatus.CONFLICT)\n \t\t\t\t\t.body(messageSource.getMessage(\"server.AddClientForm.error\", new Object[] { clientId }, locale));\n-\t\t} catch (ClientRegistrationException e) {\n+\t\t} catch (NoSuchClientException e) {\n \t\t\treturn ResponseEntity.ok(\"\");\n \t\t}\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NzExOQ==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477397119", "bodyText": "Typo and should be an", "author": "deepsidhu85", "createdAt": "2020-08-26T15:37:45Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxCreateItemResponse.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax;\n+\n+/**\n+ * UI Response for successfully creating an item.  Since all items in IRIDA require and id,", "originalCommit": "e7c09fcd06f28605b5ffbf41f0172c47948f8d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyNzQ5OA==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477427498", "bodyText": "Fixed in 14a6fee", "author": "joshsadam", "createdAt": "2020-08-26T16:22:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NzExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "14a6feee6677dcc58e64760d91abb7305b1a9dd7", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxCreateItemResponse.java b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxCreateItemResponse.java\nindex d267d2d486..152cd988ab 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxCreateItemResponse.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxCreateItemResponse.java\n\n@@ -1,7 +1,7 @@\n package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax;\n \n /**\n- * UI Response for successfully creating an item.  Since all items in IRIDA require and id,\n+ * UI Response for successfully creating an item.  Since all items in IRIDA require an id,\n  * the identifier is returned to the client on successful creation.\n  */\n public class AjaxCreateItemResponse extends AjaxResponse {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NzY2OQ==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477397669", "bodyText": "there instead of their", "author": "deepsidhu85", "createdAt": "2020-08-26T15:38:30Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxErrorResponse.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax;\n+\n+/**\n+ * Response returned if their is an error creating a new item in IRIDA.", "originalCommit": "e7c09fcd06f28605b5ffbf41f0172c47948f8d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyNzgxOA==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477427818", "bodyText": "Fixed in 4085773", "author": "joshsadam", "createdAt": "2020-08-26T16:22:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NzY2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4085773fa78f4e4d68bd062b10c694ecd3c97137", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxErrorResponse.java b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxErrorResponse.java\nindex a0e35274d0..3f8d675d45 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxErrorResponse.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxErrorResponse.java\n\n@@ -1,7 +1,7 @@\n package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax;\n \n /**\n- * Response returned if their is an error creating a new item in IRIDA.\n+ * Response returned if there is an error creating a new item in IRIDA.\n  * Will return the internationalized explanation for the error.\n  */\n public class AjaxErrorResponse extends AjaxResponse {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5ODE1MA==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477398150", "bodyText": "be should be by", "author": "deepsidhu85", "createdAt": "2020-08-26T15:39:11Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/clients/CreateClientRequest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.clients;\n+\n+/**\n+ * Used be the UI to send details for a new client.", "originalCommit": "e7c09fcd06f28605b5ffbf41f0172c47948f8d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyODE2OA==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477428168", "bodyText": "Fixed in 369293f", "author": "joshsadam", "createdAt": "2020-08-26T16:23:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5ODE1MA=="}], "type": "inlineReview", "revised_code": {"commit": "369293fa372da5a6fba15859cfbf639973690ea9", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/clients/CreateClientRequest.java b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/clients/CreateClientRequest.java\nindex fe2ab6a71c..65eca99be0 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/clients/CreateClientRequest.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/clients/CreateClientRequest.java\n\n@@ -1,7 +1,7 @@\n package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.clients;\n \n /**\n- * Used be the UI to send details for a new client.\n+ * Used by the UI to send details for a new client.\n  */\n public class CreateClientRequest {\n \tprivate String clientId;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5OTY5OQ==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477399699", "bodyText": "As noted above. If it is updated to throw a NoSuchClientException then this method signature will also need to be updated", "author": "deepsidhu85", "createdAt": "2020-08-26T15:41:14Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java", "diffHunk": "@@ -1,48 +1,136 @@\n package ca.corefacility.bioinformatics.irida.ria.web.services;\n \n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n+import ca.corefacility.bioinformatics.irida.exceptions.EntityExistsException;\n+import ca.corefacility.bioinformatics.irida.model.IridaClientDetails;\n+import ca.corefacility.bioinformatics.irida.repositories.specification.IridaClientDetailsSpecification;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.clients.ClientTableModel;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.clients.ClientTableRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.clients.CreateClientRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableResponse;\n+import ca.corefacility.bioinformatics.irida.service.IridaClientDetailsService;\n+import com.google.common.collect.Sets;\n+import org.apache.commons.lang3.RandomStringUtils;\n import org.springframework.data.domain.Page;\n import org.springframework.data.domain.PageRequest;\n import org.springframework.data.jpa.domain.Specification;\n+import org.springframework.security.oauth2.provider.ClientRegistrationException;\n import org.springframework.stereotype.Component;\n \n-import ca.corefacility.bioinformatics.irida.model.IridaClientDetails;\n-import ca.corefacility.bioinformatics.irida.repositories.specification.IridaClientDetailsSpecification;\n-import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ClientTableModel;\n-import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ClientTableRequest;\n-import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableResponse;\n-import ca.corefacility.bioinformatics.irida.service.IridaClientDetailsService;\n+import javax.validation.ConstraintViolationException;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n \n /**\n  * UI Service to handle IRIDA Clients\n  */\n @Component\n public class UIClientService {\n-\tprivate final IridaClientDetailsService clientDetailsService;\n-\n-\tpublic UIClientService(IridaClientDetailsService clientDetailsService) {\n-\t\tthis.clientDetailsService = clientDetailsService;\n-\t}\n-\n-\t/**\n-\t * Get a listing of clients based on the table request.\n-\t *\n-\t * @param tableRequest Information about the sort and page of the table.\n-\t * @return Current status of the table\n-\t */\n-\tpublic TableResponse<ClientTableModel> getClientList(ClientTableRequest tableRequest) {\n-\t\tSpecification<IridaClientDetails> specification = IridaClientDetailsSpecification.searchClient(\n-\t\t\t\ttableRequest.getSearch());\n-\n-\t\tPage<IridaClientDetails> page = clientDetailsService.search(specification,\n-\t\t\t\tPageRequest.of(tableRequest.getCurrent(), tableRequest.getPageSize(), tableRequest.getSort()));\n-\t\tList<ClientTableModel> models = page.getContent()\n-\t\t\t\t.stream()\n-\t\t\t\t.map(client -> new ClientTableModel(client, clientDetailsService.countActiveTokensForClient(client)))\n-\t\t\t\t.collect(Collectors.toList());\n-\n-\t\treturn new TableResponse<>(models, page.getTotalElements());\n-\t}\n+    private final IridaClientDetailsService clientDetailsService;\n+\n+    public UIClientService(IridaClientDetailsService clientDetailsService) {\n+        this.clientDetailsService = clientDetailsService;\n+    }\n+\n+    /**\n+     * Get a listing of clients based on the table request.\n+     *\n+     * @param tableRequest Information about the sort and page of the table.\n+     * @return Current status of the table\n+     */\n+    public TableResponse<ClientTableModel> getClientList(ClientTableRequest tableRequest) {\n+        Specification<IridaClientDetails> specification = IridaClientDetailsSpecification.searchClient(\n+                tableRequest.getSearch());\n+\n+        Page<IridaClientDetails> page = clientDetailsService.search(specification,\n+                PageRequest.of(tableRequest.getCurrent(), tableRequest.getPageSize(), tableRequest.getSort()));\n+        List<ClientTableModel> models = page.getContent()\n+                .stream()\n+                .map(client -> new ClientTableModel(client, clientDetailsService.countActiveTokensForClient(client)))\n+                .collect(Collectors.toList());\n+\n+        return new TableResponse<>(models, page.getTotalElements());\n+    }\n+\n+    /**\n+     * Revoke all tokens for a specific client\n+     *\n+     * @param id Identifier for a client\n+     */\n+    public void deleteClientTokens(Long id) {\n+        IridaClientDetails details = clientDetailsService.read(id);\n+        clientDetailsService.revokeTokensForClient(details);\n+    }\n+\n+    /**\n+     * Validate a client identifier for a new client\n+     *\n+     * @param clientId Identifier to check to see if it exists\n+     * @throws ClientRegistrationException thrown if a client does not exist with the given client id.\n+     */\n+    public void validateClientId(String clientId) throws ClientRegistrationException {", "originalCommit": "e7c09fcd06f28605b5ffbf41f0172c47948f8d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQzMTIyOQ==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r477431229", "bodyText": "Updated in ecc4624", "author": "joshsadam", "createdAt": "2020-08-26T16:28:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5OTY5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ecc462455dccf53d76e4304633e33287344c3817", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java\nindex ccf1fc5dfc..a080a6be47 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java\n\n@@ -1,5 +1,20 @@\n package ca.corefacility.bioinformatics.irida.ria.web.services;\n \n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import javax.validation.ConstraintViolationException;\n+\n+import org.apache.commons.lang3.RandomStringUtils;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.PageRequest;\n+import org.springframework.data.jpa.domain.Specification;\n+import org.springframework.security.oauth2.provider.ClientRegistrationException;\n+import org.springframework.security.oauth2.provider.NoSuchClientException;\n+import org.springframework.stereotype.Component;\n+\n import ca.corefacility.bioinformatics.irida.exceptions.EntityExistsException;\n import ca.corefacility.bioinformatics.irida.model.IridaClientDetails;\n import ca.corefacility.bioinformatics.irida.repositories.specification.IridaClientDetailsSpecification;\n"}}, {"oid": "d643207da2d426a4b915a7a1026c10ef6fd7c329", "url": "https://github.com/phac-nml/irida/commit/d643207da2d426a4b915a7a1026c10ef6fd7c329", "message": ":construction: Fixed error caught when checking to see if client name exists.", "committedDate": "2020-08-26T16:21:08Z", "type": "commit"}, {"oid": "14a6feee6677dcc58e64760d91abb7305b1a9dd7", "url": "https://github.com/phac-nml/irida/commit/14a6feee6677dcc58e64760d91abb7305b1a9dd7", "message": ":bulb: Fixed typo in JavaDoc", "committedDate": "2020-08-26T16:22:16Z", "type": "commit"}, {"oid": "4085773fa78f4e4d68bd062b10c694ecd3c97137", "url": "https://github.com/phac-nml/irida/commit/4085773fa78f4e4d68bd062b10c694ecd3c97137", "message": ":bulb: Fixed typo in JavaDoc", "committedDate": "2020-08-26T16:22:50Z", "type": "commit"}, {"oid": "369293fa372da5a6fba15859cfbf639973690ea9", "url": "https://github.com/phac-nml/irida/commit/369293fa372da5a6fba15859cfbf639973690ea9", "message": ":bulb: Fixed typo in JavaDoc", "committedDate": "2020-08-26T16:23:23Z", "type": "commit"}, {"oid": "ecc462455dccf53d76e4304633e33287344c3817", "url": "https://github.com/phac-nml/irida/commit/ecc462455dccf53d76e4304633e33287344c3817", "message": ":construction: Fixed error thrown if the client name is valid", "committedDate": "2020-08-26T16:28:25Z", "type": "commit"}, {"oid": "2e4eb651a455987b5537f67024952c7909706903", "url": "https://github.com/phac-nml/irida/commit/2e4eb651a455987b5537f67024952c7909706903", "message": ":construction: Updated to exceptions thrown", "committedDate": "2020-08-26T17:38:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0NTIwNg==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r478445206", "bodyText": "Typo in client", "author": "deepsidhu85", "createdAt": "2020-08-27T14:05:31Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java", "diffHunk": "@@ -96,7 +95,7 @@ public Long createClient(CreateClientRequest request) throws EntityExistsExcepti\n         client.setClientId(request.getClientId());\n         client.setAccessTokenValiditySeconds(request.getTokenValidity());\n \n-        // Let's set up the scopes for this client\n+        // Let's set up the scopes for this cliente", "originalCommit": "2e4eb651a455987b5537f67024952c7909706903", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d7541a84f4e1ec5bd026a76bd9215f190c3f8a8", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java\nindex aea43d94b4..4c7c9ebdd7 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIClientService.java\n\n@@ -95,7 +92,7 @@ public class UIClientService {\n         client.setClientId(request.getClientId());\n         client.setAccessTokenValiditySeconds(request.getTokenValidity());\n \n-        // Let's set up the scopes for this cliente\n+        // Let's set up the scopes for this client\n         Set<String> scopes = new HashSet<>();\n         Set<String> autoScopes = new HashSet<>();\n         // 1. Read scope\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0NjMyNA==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r478446324", "bodyText": "Why was \"public\" removed from the method signatures?", "author": "deepsidhu85", "createdAt": "2020-08-27T14:07:00Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/service/IridaClientDetailsService.java", "diffHunk": "@@ -16,7 +16,7 @@\n \t/**\n \t * {@inheritDoc}\n \t */\n-\tpublic ClientDetails loadClientByClientId(String clientId) throws ClientRegistrationException;", "originalCommit": "2e4eb651a455987b5537f67024952c7909706903", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MTE5Ng==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r478451196", "bodyText": "Because Intellij on my Mac does crazy things.", "author": "joshsadam", "createdAt": "2020-08-27T14:13:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0NjMyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MzcxNw==", "url": "https://github.com/phac-nml/irida/pull/784#discussion_r478453717", "bodyText": "Fixed", "author": "joshsadam", "createdAt": "2020-08-27T14:17:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0NjMyNA=="}], "type": "inlineReview", "revised_code": {"commit": "af3ee77070c8b10885d20a9e317820d1cc41abfd", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/service/IridaClientDetailsService.java b/src/main/java/ca/corefacility/bioinformatics/irida/service/IridaClientDetailsService.java\nindex 66240aeef4..c462caeddf 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/service/IridaClientDetailsService.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/service/IridaClientDetailsService.java\n\n@@ -16,7 +15,7 @@ public interface IridaClientDetailsService extends ClientDetailsService, CRUDSer\n \t/**\n \t * {@inheritDoc}\n \t */\n-\tClientDetails loadClientByClientId(String clientId) throws NoSuchClientException;\n+\tpublic ClientDetails loadClientByClientId(String clientId) throws NoSuchClientException;\n \n \t/**\n \t * Get the number of tokens issued for a given {@link IridaClientDetails}\n"}}, {"oid": "8d7541a84f4e1ec5bd026a76bd9215f190c3f8a8", "url": "https://github.com/phac-nml/irida/commit/8d7541a84f4e1ec5bd026a76bd9215f190c3f8a8", "message": "\ud83d\udcc3Fixed typo", "committedDate": "2020-08-27T14:10:00Z", "type": "commit"}, {"oid": "af3ee77070c8b10885d20a9e317820d1cc41abfd", "url": "https://github.com/phac-nml/irida/commit/af3ee77070c8b10885d20a9e317820d1cc41abfd", "message": ":construction: Re-added public modifiers\n\nIntelliJ considers these redundant", "committedDate": "2020-08-27T14:16:54Z", "type": "commit"}]}