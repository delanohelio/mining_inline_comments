{"pr_number": 614, "pr_title": "Hotfix single end analyises", "pr_createdAt": "2020-03-03T21:19:56Z", "pr_url": "https://github.com/phac-nml/irida/pull/614", "timeline": [{"oid": "fa89c44a08c94d8efafd508ad3e225d909a28152", "url": "https://github.com/phac-nml/irida/commit/fa89c44a08c94d8efafd508ad3e225d909a28152", "message": "added UI fixes to show single end analysis input files", "committedDate": "2020-03-03T21:15:32Z", "type": "commit"}, {"oid": "005bfd97cde873aafff9153b8eace882a9f65068", "url": "https://github.com/phac-nml/irida/commit/005bfd97cde873aafff9153b8eace882a9f65068", "message": "added changelog and pom version bump to 20.01.2", "committedDate": "2020-03-03T21:17:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDA0Mg==", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r387804042", "bodyText": "The sorter function is exactly the same as what is on line 265.  Want to make that it's own method?", "author": "joshsadam", "createdAt": "2020-03-04T17:00:48Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java", "diffHunk": "@@ -277,6 +275,22 @@ public String getDetailsPage(@PathVariable Long submissionId, Model model, Local\n \t\t}).collect(Collectors.toList());\n \t\tmodel.addAttribute(\"paired_end\", sampleFiles);\n \n+\t\t// - Single\n+\t\tSet<SingleEndSequenceFile> inputFilesSingle = sequencingObjectService.getSequencingObjectsOfTypeForAnalysisSubmission(\n+\t\t\t\tsubmission, SingleEndSequenceFile.class);\n+\t\tList<SampleSingleFiles> singleFiles = inputFilesSingle.stream().map(SampleSingleFiles::new).sorted((a, b) -> {\n+\t\t\tif (a.sample == null && b.sample == null) {", "originalCommit": "005bfd97cde873aafff9153b8eace882a9f65068", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyMzcwMA==", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r387823700", "bodyText": "Took this sort away by making the class comparable in 2da4fa3", "author": "tom114", "createdAt": "2020-03-04T17:35:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDA0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM2MjE2NQ==", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r388362165", "bodyText": "I really like how you re-wrote this, thanks :)", "author": "joshsadam", "createdAt": "2020-03-05T15:19:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDA0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2da4fa3cddfe77b8ccd69b147fd1823c61cda1eb", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java\nindex 4d1b69774b..22c599d6e8 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java\n\n@@ -262,33 +263,19 @@ public class AnalysisController {\n \t\t// - Paired\n \t\tSet<SequenceFilePair> inputFilePairs = sequencingObjectService.getSequencingObjectsOfTypeForAnalysisSubmission(\n \t\t\t\tsubmission, SequenceFilePair.class);\n-\t\tList<SampleFiles> sampleFiles = inputFilePairs.stream().map(SampleFiles::new).sorted((a, b) -> {\n-\t\t\tif (a.sample == null && b.sample == null) {\n-\t\t\t\treturn 0;\n-\t\t\t} else if (a.sample == null) {\n-\t\t\t\treturn -1;\n-\t\t\t} else if (b.sample == null) {\n-\t\t\t\treturn 1;\n-\t\t\t}\n-\t\t\treturn a.sample.getLabel()\n-\t\t\t\t\t.compareTo(b.sample.getLabel());\n-\t\t}).collect(Collectors.toList());\n+\t\tList<SampleSequencingObject> sampleFiles = inputFilePairs.stream()\n+\t\t\t\t.map(SampleSequencingObject::new)\n+\t\t\t\t.sorted()\n+\t\t\t\t.collect(Collectors.toList());\n \t\tmodel.addAttribute(\"paired_end\", sampleFiles);\n \n \t\t// - Single\n \t\tSet<SingleEndSequenceFile> inputFilesSingle = sequencingObjectService.getSequencingObjectsOfTypeForAnalysisSubmission(\n \t\t\t\tsubmission, SingleEndSequenceFile.class);\n-\t\tList<SampleSingleFiles> singleFiles = inputFilesSingle.stream().map(SampleSingleFiles::new).sorted((a, b) -> {\n-\t\t\tif (a.sample == null && b.sample == null) {\n-\t\t\t\treturn 0;\n-\t\t\t} else if (a.sample == null) {\n-\t\t\t\treturn -1;\n-\t\t\t} else if (b.sample == null) {\n-\t\t\t\treturn 1;\n-\t\t\t}\n-\t\t\treturn a.sample.getLabel()\n-\t\t\t\t\t.compareTo(b.sample.getLabel());\n-\t\t}).collect(Collectors.toList());\n+\t\tList<SampleSequencingObject> singleFiles = inputFilesSingle.stream()\n+\t\t\t\t.map(SampleSequencingObject::new)\n+\t\t\t\t.sorted()\n+\t\t\t\t.collect(Collectors.toList());\n \t\tmodel.addAttribute(\"single_end\", singleFiles);\n \n \t\t// Check if user can update analysis\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDU5Mg==", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r387804592", "bodyText": "Why did you make this a private class when we have been keeping all our UI models in dto packages?", "author": "joshsadam", "createdAt": "2020-03-04T17:01:46Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java", "diffHunk": "@@ -1114,4 +1128,37 @@ public SequenceFilePair getSequenceFilePair() {\n \t\t\treturn sequenceFilePair;\n \t\t}\n \t}\n+\n+\t/**\n+\t * UI Model to return a single end sequence file with its sample", "originalCommit": "005bfd97cde873aafff9153b8eace882a9f65068", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyMTM5NA==", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r387821394", "bodyText": "I was just duplicating what was done above in the paired version of the class.  I refactored this down to a single private class now in 2da4fa3.  I didn't put it into a separate dto class because the constructor is using some service calls to pick up the associated sample.\nNote this will all get removed anyway when the new analysis pages are done.", "author": "tom114", "createdAt": "2020-03-04T17:31:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDU5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2da4fa3cddfe77b8ccd69b147fd1823c61cda1eb", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java\nindex 4d1b69774b..22c599d6e8 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java\n\n@@ -1097,68 +1084,48 @@ public class AnalysisController {\n \t}\n \n \t/**\n-\t * UI Model to return a pair aof Sequence files with its accompanying sample.\n+\t * UI Model to return Sequence files with its accompanying sample.\n \t */\n-\tprivate class SampleFiles {\n+\tprivate class SampleSequencingObject implements Comparable<SampleSequencingObject>{\n \t\tprivate Sample sample;\n-\t\tprivate SequenceFilePair sequenceFilePair;\n+\t\tprivate SequencingObject sequencingObject;\n \n-\t\tSampleFiles(SequenceFilePair sequenceFilePair) {\n-\t\t\tthis.sequenceFilePair = sequenceFilePair;\n+\t\tSampleSequencingObject(SequencingObject sequencingObject) {\n+\t\t\tthis.sequencingObject = sequencingObject;\n \t\t\ttry {\n \t\t\t\tSampleSequencingObjectJoin sampleSequencingObjectJoin = sampleService.getSampleForSequencingObject(\n-\t\t\t\t\t\tsequenceFilePair);\n+\t\t\t\t\t\tsequencingObject);\n \t\t\t\tthis.sample = sampleSequencingObjectJoin.getSubject();\n \t\t\t} catch (Exception e) {\n-\t\t\t\tlogger.debug(\n-\t\t\t\t\t\t\"Sequence file pair [\" + sequenceFilePair.getIdentifier() + \"] does not have a parent sample\", e);\n+\t\t\t\tlogger.debug(\"Sequence file [\" + sequencingObject.getIdentifier() + \"] does not have a parent sample\",\n+\t\t\t\t\t\te);\n \t\t\t\tsample = null;\n \t\t\t}\n \t\t}\n \n \t\tpublic Long getId() {\n-\t\t\treturn sequenceFilePair.getId();\n+\t\t\treturn sequencingObject.getId();\n \t\t}\n \n \t\tpublic Sample getSample() {\n \t\t\treturn sample;\n \t\t}\n \n-\t\tpublic SequenceFilePair getSequenceFilePair() {\n-\t\t\treturn sequenceFilePair;\n+\t\tpublic SequencingObject getSequencingObject() {\n+\t\t\treturn sequencingObject;\n \t\t}\n-\t}\n-\n-\t/**\n-\t * UI Model to return a single end sequence file with its sample\n-\t */\n-\tprivate class SampleSingleFiles {\n-\t\tprivate Sample sample;\n-\t\tprivate SingleEndSequenceFile singleEndFile;\n \n-\t\tSampleSingleFiles(SingleEndSequenceFile singleEndFile) {\n-\t\t\tthis.singleEndFile = singleEndFile;\n-\t\t\ttry {\n-\t\t\t\tSampleSequencingObjectJoin sampleSequencingObjectJoin = sampleService.getSampleForSequencingObject(\n-\t\t\t\t\t\tsingleEndFile);\n-\t\t\t\tthis.sample = sampleSequencingObjectJoin.getSubject();\n-\t\t\t} catch (Exception e) {\n-\t\t\t\tlogger.debug(\n-\t\t\t\t\t\t\"Sequence file [\" + singleEndFile.getIdentifier() + \"] does not have a parent sample\", e);\n-\t\t\t\tsample = null;\n+\t\t@Override\n+\t\tpublic int compareTo(SampleSequencingObject b) {\n+\t\t\tif (this.sample == null && b.sample == null) {\n+\t\t\t\treturn 0;\n+\t\t\t} else if (this.sample == null) {\n+\t\t\t\treturn -1;\n+\t\t\t} else if (b.sample == null) {\n+\t\t\t\treturn 1;\n \t\t\t}\n-\t\t}\n-\n-\t\tpublic Long getId() {\n-\t\t\treturn singleEndFile.getId();\n-\t\t}\n-\n-\t\tpublic Sample getSample() {\n-\t\t\treturn sample;\n-\t\t}\n-\n-\t\tpublic SingleEndSequenceFile getSequenceFile() {\n-\t\t\treturn singleEndFile;\n+\t\t\treturn this.sample.getLabel()\n+\t\t\t\t\t.compareTo(b.sample.getLabel());\n \t\t}\n \t}\n }\n"}}, {"oid": "2da4fa3cddfe77b8ccd69b147fd1823c61cda1eb", "url": "https://github.com/phac-nml/irida/commit/2da4fa3cddfe77b8ccd69b147fd1823c61cda1eb", "message": "refactored the single/paired file ui classes into a single class and removed the big sort method", "committedDate": "2020-03-04T17:28:07Z", "type": "commit"}]}