{"pr_number": 764, "pr_title": "Hotfix sample metadata fields ", "pr_createdAt": "2020-07-27T19:15:31Z", "pr_url": "https://github.com/phac-nml/irida/pull/764", "timeline": [{"oid": "61abd64a0cabb1a78a3aba3de4c775c097197331", "url": "https://github.com/phac-nml/irida/commit/61abd64a0cabb1a78a3aba3de4c775c097197331", "message": ":ambulance: Fixed issues with formatting on the sample details page.", "committedDate": "2020-07-27T16:34:42Z", "type": "commit"}, {"oid": "68081c2382124056a5a4ec1c2c6502bc69f1def5", "url": "https://github.com/phac-nml/irida/commit/68081c2382124056a5a4ec1c2c6502bc69f1def5", "message": ":construction: Fix cell format during upload.", "committedDate": "2020-07-27T18:47:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg3NjcxNQ==", "url": "https://github.com/phac-nml/irida/pull/764#discussion_r461876715", "bodyText": "This seems to work for me, glad it was that straightforwad.  Even rounding seems to happen the same as expected.  Can you add a comment about why it's being added?", "author": "tom114", "createdAt": "2020-07-28T21:01:45Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/projects/metadata/ProjectSampleMetadataController.java", "diffHunk": "@@ -132,14 +132,22 @@ public SampleMetadataStorage createProjectSampleMetadata(HttpSession session, @P\n \t\t\t\tIterator<Cell> cellIterator = row.cellIterator();\n \t\t\t\twhile (cellIterator.hasNext()) {\n \t\t\t\t\tCell cell = cellIterator.next();\n+\n \t\t\t\t\tint columnIndex = cell.getColumnIndex();\n \t\t\t\t\tif (columnIndex < headers.size()) {\n \t\t\t\t\t\tString header = headers.get(columnIndex);\n \n \t\t\t\t\t\tif (!Strings.isNullOrEmpty(header)) {\n \t\t\t\t\t\t\t// Need to ignore empty headers.\n-\t\t\t\t\t\t\tcell.setCellType(CellType.STRING);\n-\t\t\t\t\t\t\trowMap.put(header, cell.getStringCellValue());\n+\t\t\t\t\t\t\tif(cell.getCellTypeEnum().equals(CellType.NUMERIC)) {\n+\t\t\t\t\t\t\t\tDataFormatter formatter = new DataFormatter();\n+\t\t\t\t\t\t\t\tString value = formatter.formatCellValue(cell);", "originalCommit": "68081c2382124056a5a4ec1c2c6502bc69f1def5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8225710892b864fec5f931b454e69addbe6ad003", "chunk": "diff --git a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/projects/metadata/ProjectSampleMetadataController.java b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/projects/metadata/ProjectSampleMetadataController.java\nindex 06ff40a6f1..4e54f7632f 100644\n--- a/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/projects/metadata/ProjectSampleMetadataController.java\n+++ b/src/main/java/ca/corefacility/bioinformatics/irida/ria/web/projects/metadata/ProjectSampleMetadataController.java\n\n@@ -140,6 +140,11 @@ public class ProjectSampleMetadataController {\n \t\t\t\t\t\tif (!Strings.isNullOrEmpty(header)) {\n \t\t\t\t\t\t\t// Need to ignore empty headers.\n \t\t\t\t\t\t\tif(cell.getCellTypeEnum().equals(CellType.NUMERIC)) {\n+\t\t\t\t\t\t\t\t/*\n+\t\t\t\t\t\t\t\tThis is a special handler for number cells.  It was requested that numbers\n+\t\t\t\t\t\t\t\tkeep their formatting from their excel files.  E.g. 2.222222 with formatting\n+\t\t\t\t\t\t\t\tfor 2 decimal places will be saved as 2.22.\n+\t\t\t\t\t\t\t\t */\n \t\t\t\t\t\t\t\tDataFormatter formatter = new DataFormatter();\n \t\t\t\t\t\t\t\tString value = formatter.formatCellValue(cell);\n \t\t\t\t\t\t\t\trowMap.put(header, value);\n"}}, {"oid": "8225710892b864fec5f931b454e69addbe6ad003", "url": "https://github.com/phac-nml/irida/commit/8225710892b864fec5f931b454e69addbe6ad003", "message": ":white_check_mark: Added test to ensure numbers are formatted properly.", "committedDate": "2020-07-29T15:31:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUwNjg1MA==", "url": "https://github.com/phac-nml/irida/pull/764#discussion_r462506850", "bodyText": "This method is a bit too specific to the test data being used in ProjectSampleMetadataImportPageIT.java.  Can you change it to accept the header name as a string so it can be passed in by the test?  That way we can better reuse this page object if we wanted different input data.", "author": "tom114", "createdAt": "2020-07-29T18:36:59Z", "path": "src/test/java/ca/corefacility/bioinformatics/irida/ria/integration/pages/projects/ProjectSampleMetadataImportPage.java", "diffHunk": "@@ -55,4 +58,15 @@ public int getFoundCount() {\n \tpublic int getMissingCount() {\n \t\treturn Integer.parseInt(missingPill.findElement(By.className(\"badge\")).getText());\n \t}\n+\n+\tpublic List<String> getNumberColumnValues() {", "originalCommit": "8225710892b864fec5f931b454e69addbe6ad003", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxMTA2MA==", "url": "https://github.com/phac-nml/irida/pull/764#discussion_r462511060", "bodyText": "Updated", "author": "joshsadam", "createdAt": "2020-07-29T18:44:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUwNjg1MA=="}], "type": "inlineReview", "revised_code": {"commit": "74d225cd77e406427fb637a1f07c90a0c5870dd0", "chunk": "diff --git a/src/test/java/ca/corefacility/bioinformatics/irida/ria/integration/pages/projects/ProjectSampleMetadataImportPage.java b/src/test/java/ca/corefacility/bioinformatics/irida/ria/integration/pages/projects/ProjectSampleMetadataImportPage.java\nindex 82a34733fd..4fbc0df9f7 100644\n--- a/src/test/java/ca/corefacility/bioinformatics/irida/ria/integration/pages/projects/ProjectSampleMetadataImportPage.java\n+++ b/src/test/java/ca/corefacility/bioinformatics/irida/ria/integration/pages/projects/ProjectSampleMetadataImportPage.java\n\n@@ -52,21 +52,26 @@ public class ProjectSampleMetadataImportPage extends AbstractPage {\n \t}\n \n \tpublic int getFoundCount() {\n-\t\treturn Integer.parseInt(foundPill.findElement(By.className(\"badge\")).getText());\n+\t\treturn Integer.parseInt(foundPill.findElement(By.className(\"badge\"))\n+\t\t\t\t.getText());\n \t}\n \n \tpublic int getMissingCount() {\n-\t\treturn Integer.parseInt(missingPill.findElement(By.className(\"badge\")).getText());\n+\t\treturn Integer.parseInt(missingPill.findElement(By.className(\"badge\"))\n+\t\t\t\t.getText());\n \t}\n \n-\tpublic List<String> getNumberColumnValues() {\n+\tpublic List<String> getValuesForColumnByName(String column) {\n \t\t// Get the text from the headers\n \t\tList<String> headerText = headers.stream()\n-\t\t\t\t.map(WebElement::getText).collect(Collectors.toList());\n+\t\t\t\t.map(WebElement::getText)\n+\t\t\t\t.collect(Collectors.toList());\n \t\t// Find which columns is the numbers\n-\t\tint index = headerText.indexOf(\"Numbers\");\n-\t\tList<String> numbers = rows.stream().map(row -> row.findElements(By.tagName(\"td\")).get(index).getText()).collect(\n-\t\t\t\tCollectors.toList());\n-\t\treturn numbers;\n+\t\tint index = headerText.indexOf(column);\n+\t\treturn rows.stream()\n+\t\t\t\t.map(row -> row.findElements(By.tagName(\"td\"))\n+\t\t\t\t\t\t.get(index)\n+\t\t\t\t\t\t.getText())\n+\t\t\t\t.collect(Collectors.toList());\n \t}\n }\n"}}, {"oid": "74d225cd77e406427fb637a1f07c90a0c5870dd0", "url": "https://github.com/phac-nml/irida/commit/74d225cd77e406427fb637a1f07c90a0c5870dd0", "message": ":white_check_mark: Updated method call to get the values for a column", "committedDate": "2020-07-29T18:44:08Z", "type": "commit"}]}