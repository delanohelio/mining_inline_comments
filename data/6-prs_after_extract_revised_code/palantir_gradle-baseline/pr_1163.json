{"pr_number": 1163, "pr_title": "fix #1161: Add error prone LoggerEnclosingClass", "pr_createdAt": "2020-01-10T21:09:13Z", "pr_url": "https://github.com/palantir/gradle-baseline/pull/1163", "timeline": [{"oid": "654981d9bdcfa6a80ebabfd95ba962e47717ebdf", "url": "https://github.com/palantir/gradle-baseline/commit/654981d9bdcfa6a80ebabfd95ba962e47717ebdf", "message": "fix #1161: Add error prone LoggerEnclosingClass\n\nLoggers created using getLogger(Class<?>) must reference their enclosing\nclass.", "committedDate": "2020-01-10T21:06:51Z", "type": "commit"}, {"oid": "2acdfcc27933f590969830de1260c6941e3df44c", "url": "https://github.com/palantir/gradle-baseline/commit/2acdfcc27933f590969830de1260c6941e3df44c", "message": "Add generated changelog entries", "committedDate": "2020-01-10T21:06:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMjYzNg==", "url": "https://github.com/palantir/gradle-baseline/pull/1163#discussion_r365432636", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Matcher<ExpressionTree> getLoggerMatcher = MethodMatchers.staticMethod()\n          \n          \n            \n                private static final Matcher<VariableTree> LOGGER = Matchers.allOf(\n          \n          \n            \n                        Matchers.isField(),\n          \n          \n            \n                        Matchers.isSameType(Logger.class),\n          \n          \n            \n                        Matchers.variableInitializer(MethodMatchers.staticMethod()\n          \n          \n            \n                                .onClass(LoggerFactory.class.getName())\n          \n          \n            \n                                .named(\"getLogger\")\n          \n          \n            \n                                .withParameters(Class.class.getName())));", "author": "ferozco", "createdAt": "2020-01-10T21:14:06Z", "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/LoggerEnclosingClass.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.fixes.SuggestedFixes;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.matchers.Matcher;\n+import com.google.errorprone.matchers.Matchers;\n+import com.google.errorprone.matchers.method.MethodMatchers;\n+import com.google.errorprone.util.ASTHelpers;\n+import com.sun.source.tree.ExpressionTree;\n+import com.sun.source.tree.MemberSelectTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.source.tree.VariableTree;\n+import com.sun.tools.javac.code.Symbol;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"LoggerEnclosingClass\",\n+        link = \"https://github.com/palantir/gradle-baseline#baseline-error-prone-checks\",\n+        linkType = BugPattern.LinkType.CUSTOM,\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.WARNING,\n+        summary = \"Loggers created using getLogger(Class<?>) must reference their enclosing class.\")\n+public final class LoggerEnclosingClass extends BugChecker implements BugChecker.VariableTreeMatcher {\n+\n+    private static final Matcher<ExpressionTree> getLoggerMatcher = MethodMatchers.staticMethod()", "originalCommit": "2acdfcc27933f590969830de1260c6941e3df44c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjExMg==", "url": "https://github.com/palantir/gradle-baseline/pull/1163#discussion_r365436112", "bodyText": "Snazzy, I hadn't seen `Matchers.variableInitializer!", "author": "carterkozak", "createdAt": "2020-01-10T21:24:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMjYzNg=="}], "type": "inlineReview", "revised_code": {"commit": "853f48f284d77105aeb880d767cd1bfec6eb7498", "chunk": "diff --git a/baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/LoggerEnclosingClass.java b/baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/LoggerEnclosingClass.java\nindex d8b215aa..86934338 100644\n--- a/baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/LoggerEnclosingClass.java\n+++ b/baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/LoggerEnclosingClass.java\n\n@@ -44,28 +44,22 @@ import com.sun.tools.javac.code.Symbol;\n         summary = \"Loggers created using getLogger(Class<?>) must reference their enclosing class.\")\n public final class LoggerEnclosingClass extends BugChecker implements BugChecker.VariableTreeMatcher {\n \n-    private static final Matcher<ExpressionTree> getLoggerMatcher = MethodMatchers.staticMethod()\n-            .onClass(\"org.slf4j.LoggerFactory\")\n-            .named(\"getLogger\")\n-            // Only match the 'class' constructor\n-            .withParameters(Class.class.getName());\n-\n-    private static final Matcher<VariableTree> fieldMatcher = Matchers.isField();\n+    private static final Matcher<VariableTree> matcher = Matchers.allOf(\n+            Matchers.isField(),\n+            Matchers.isSubtypeOf(\"org.slf4j.Logger\"),\n+            Matchers.variableInitializer(MethodMatchers.staticMethod()\n+                    .onClass(\"org.slf4j.LoggerFactory\")\n+                    .named(\"getLogger\")\n+                    // Only match the 'class' constructor\n+                    .withParameters(Class.class.getName())));\n \n     @Override\n     public Description matchVariable(VariableTree tree, VisitorState state) {\n-        if (!fieldMatcher.matches(tree, state)) {\n-            return Description.NO_MATCH;\n-        }\n-        ExpressionTree initializer = tree.getInitializer();\n-        if (initializer == null) {\n-            return Description.NO_MATCH;\n-        }\n-        if (!getLoggerMatcher.matches(initializer, state)) {\n+        if (!matcher.matches(tree, state)) {\n             return Description.NO_MATCH;\n         }\n \n-        MethodInvocationTree getLoggerInvocation = (MethodInvocationTree) initializer;\n+        MethodInvocationTree getLoggerInvocation = (MethodInvocationTree) tree.getInitializer();\n         ExpressionTree classArgument = getLoggerInvocation.getArguments().get(0);\n \n         if (!(classArgument instanceof MemberSelectTree)) {\n"}}, {"oid": "853f48f284d77105aeb880d767cd1bfec6eb7498", "url": "https://github.com/palantir/gradle-baseline/commit/853f48f284d77105aeb880d767cd1bfec6eb7498", "message": "cr", "committedDate": "2020-01-10T21:27:09Z", "type": "commit"}, {"oid": "5b54e9220930f4ffda1d676289bd811bff40e8b8", "url": "https://github.com/palantir/gradle-baseline/commit/5b54e9220930f4ffda1d676289bd811bff40e8b8", "message": "Merge branch 'develop' into ckozak/LoggerEnclosingClass", "committedDate": "2020-01-10T21:34:21Z", "type": "commit"}]}