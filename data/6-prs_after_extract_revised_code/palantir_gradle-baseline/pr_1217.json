{"pr_number": 1217, "pr_title": "License derived from .baseline/copyright", "pr_createdAt": "2020-02-06T15:19:21Z", "pr_url": "https://github.com/palantir/gradle-baseline/pull/1217", "timeline": [{"oid": "212009ff5a9a2c24a5eb50d98792085e9290e8ef", "url": "https://github.com/palantir/gradle-baseline/commit/212009ff5a9a2c24a5eb50d98792085e9290e8ef", "message": "separate out spotless application from java-specific config", "committedDate": "2020-02-06T11:59:53Z", "type": "commit"}, {"oid": "dd40a7c74f4c2d6688897a608ddb61eca21dd483", "url": "https://github.com/palantir/gradle-baseline/commit/dd40a7c74f4c2d6688897a608ddb61eca21dd483", "message": "move PJF stuff inside configureSpotlessJava", "committedDate": "2020-02-06T12:00:55Z", "type": "commit"}, {"oid": "14b209f06e1d34812f83a4118509c469725c453d", "url": "https://github.com/palantir/gradle-baseline/commit/14b209f06e1d34812f83a4118509c469725c453d", "message": "Handle copyright via BaselineFormat and not checkstyle", "committedDate": "2020-02-06T13:12:36Z", "type": "commit"}, {"oid": "c916b3a0ba07f49953e7ef76fbeb26dd6a8eb8a4", "url": "https://github.com/palantir/gradle-baseline/commit/c916b3a0ba07f49953e7ef76fbeb26dd6a8eb8a4", "message": "test groovy files as well", "committedDate": "2020-02-06T13:21:53Z", "type": "commit"}, {"oid": "ccf044c735c92a7b32addcc51f6c4f8bf7b23abf", "url": "https://github.com/palantir/gradle-baseline/commit/ccf044c735c92a7b32addcc51f6c4f8bf7b23abf", "message": "unnecessary eager task get", "committedDate": "2020-02-06T13:30:17Z", "type": "commit"}, {"oid": "891ce66c920a77693ee8058ba29c1946dbb5d7a1", "url": "https://github.com/palantir/gradle-baseline/commit/891ce66c920a77693ee8058ba29c1946dbb5d7a1", "message": "lazy", "committedDate": "2020-02-06T13:54:05Z", "type": "commit"}, {"oid": "7934080409d22e7c4a8fe7710bff7d5dcc339431", "url": "https://github.com/palantir/gradle-baseline/commit/7934080409d22e7c4a8fe7710bff7d5dcc339431", "message": "trim rhs of copyright lines", "committedDate": "2020-02-06T15:14:46Z", "type": "commit"}, {"oid": "a4fcb7ea8c22a5b7e7856a066b2e9e842a70c71d", "url": "https://github.com/palantir/gradle-baseline/commit/a4fcb7ea8c22a5b7e7856a066b2e9e842a70c71d", "message": "ensure that empty lines are tested as well", "committedDate": "2020-02-06T15:16:50Z", "type": "commit"}, {"oid": "8ddbbb10b04885d275b0c17f54298ca595dbb0c0", "url": "https://github.com/palantir/gradle-baseline/commit/8ddbbb10b04885d275b0c17f54298ca595dbb0c0", "message": "Add generated changelog entries", "committedDate": "2020-02-06T15:16:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkwNDA2MQ==", "url": "https://github.com/palantir/gradle-baseline/pull/1217#discussion_r375904061", "bodyText": "can we use a LazyInitializedFormatterStep containing a memozied suppleire instead pls?", "author": "iamdanfox", "createdAt": "2020-02-06T15:31:13Z", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineFormat.java", "diffHunk": "@@ -41,6 +55,104 @@\n     public void apply(Project project) {\n         this.project = project;\n \n+        project.getPluginManager().apply(\"com.diffplug.gradle.spotless\");\n+\n+        SpotlessExtension spotlessExtension = project.getExtensions().getByType(SpotlessExtension.class);\n+        // Keep spotless from eagerly configuring all other tasks.  We do the same thing as the enforceCheck\n+        // property below by making the check task depend on spotlessCheck.\n+        // See  https://github.com/diffplug/spotless/issues/444\n+        spotlessExtension.setEnforceCheck(false);\n+\n+        // Allow disabling copyright for tests\n+        if (!\"false\".equals(project.findProperty(\"com.palantir.baseline-format.copyright\"))) {\n+            configureCopyrightStep(project, spotlessExtension);\n+        }\n+\n+        // necessary because SpotlessPlugin creates tasks in an afterEvaluate block\n+        TaskProvider<Task> formatTask = project.getTasks().register(\"format\", task -> {\n+            task.setGroup(\"Formatting\");\n+        });\n+        project.afterEvaluate(p -> {\n+            formatTask.configure(t -> {\n+                t.dependsOn(\"spotlessApply\");\n+            });\n+\n+            // re-enable spotless checking, but lazily so it doesn't eagerly configure everything else\n+            project.getTasks().named(JavaBasePlugin.CHECK_TASK_NAME).configure(t -> {\n+                t.dependsOn(project.getTasks().named(\"spotlessCheck\"));\n+            });\n+\n+            // The copyright step configures itself lazily to allow for baselineUpdateConfig to potentially create the\n+            // right files. Therefore, also make sure that these will run in the right order.\n+            project.getPluginManager().withPlugin(\"com.palantir.baseline-config\", baselineConfig -> {\n+                project.getTasks()\n+                        .matching(t -> t.getName().startsWith(\"spotless\"))\n+                        .configureEach(t -> t.mustRunAfter(\"baselineUpdateConfig\"));\n+            });\n+        });\n+\n+        project.getPluginManager().withPlugin(\"java\", plugin -> {\n+            configureSpotlessJava(project, spotlessExtension);\n+        });\n+    }\n+\n+    /**\n+     * Necessary in order to not fail right away if the copyright folder doesn't exist yet, because it would be created\n+     * by {@code baselineUpdateConfig}.\n+     */\n+    private FormatterStep createLazyLicenseHeaderStep(Project project) {\n+        // Spotless will consider the license header to be the file prefix up to the first line starting with delimiter\n+        String delimiter = \"(?! \\\\*|/\\\\*| \\\\*/)\";\n+\n+        // Compute the copyright lazily\n+        Supplier<FormatterStep> realStep = Suppliers.memoize(() -> {\n+            String header = computeCopyrightHeader(project);\n+            return LicenseHeaderStep.createFromHeader(header, delimiter);\n+        });\n+\n+        return (FormatterStep) Proxy.newProxyInstance(\n+                Thread.currentThread().getContextClassLoader(),\n+                new Class[] {FormatterStep.class},\n+                (_proxy, method, args) -> method.invoke(realStep.get(), args));", "originalCommit": "8ddbbb10b04885d275b0c17f54298ca595dbb0c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkxNTcwNA==", "url": "https://github.com/palantir/gradle-baseline/pull/1217#discussion_r375915704", "bodyText": "yep, and turns out doing so now showcased that this thing was trivially serializable which is not quite what you want.", "author": "dansanduleac", "createdAt": "2020-02-06T15:48:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkwNDA2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7b58418cd069cf4b636b7bcd29a0007cdaa7b913", "chunk": "diff --git a/gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineFormat.java b/gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineFormat.java\nindex 75b87ba1..f11d4bd0 100644\n--- a/gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineFormat.java\n+++ b/gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineFormat.java\n\n@@ -104,16 +101,10 @@ class BaselineFormat extends AbstractBaselinePlugin {\n         // Spotless will consider the license header to be the file prefix up to the first line starting with delimiter\n         String delimiter = \"(?! \\\\*|/\\\\*| \\\\*/)\";\n \n-        // Compute the copyright lazily\n-        Supplier<FormatterStep> realStep = Suppliers.memoize(() -> {\n+        return new LazyFormatterStep(() -> {\n             String header = computeCopyrightHeader(project);\n             return LicenseHeaderStep.createFromHeader(header, delimiter);\n         });\n-\n-        return (FormatterStep) Proxy.newProxyInstance(\n-                Thread.currentThread().getContextClassLoader(),\n-                new Class[] {FormatterStep.class},\n-                (_proxy, method, args) -> method.invoke(realStep.get(), args));\n     }\n \n     private void configureCopyrightStep(Project project, SpotlessExtension spotlessExtension) {\n"}}, {"oid": "2f09ddc4021c7152c777b1b7c51108f64f6e0540", "url": "https://github.com/palantir/gradle-baseline/commit/2f09ddc4021c7152c777b1b7c51108f64f6e0540", "message": "goodcorp", "committedDate": "2020-02-06T15:33:24Z", "type": "commit"}, {"oid": "7b58418cd069cf4b636b7bcd29a0007cdaa7b913", "url": "https://github.com/palantir/gradle-baseline/commit/7b58418cd069cf4b636b7bcd29a0007cdaa7b913", "message": "LazyFormatterStep", "committedDate": "2020-02-06T15:39:19Z", "type": "commit"}, {"oid": "5e4d111beefbf36b7d5d3d0071975d8ac9e0519b", "url": "https://github.com/palantir/gradle-baseline/commit/5e4d111beefbf36b7d5d3d0071975d8ac9e0519b", "message": "need to serde properly", "committedDate": "2020-02-06T15:47:23Z", "type": "commit"}, {"oid": "41ea218945a5b7ef5f4a5360169360f4705ce552", "url": "https://github.com/palantir/gradle-baseline/commit/41ea218945a5b7ef5f4a5360169360f4705ce552", "message": "need to not instantiate this thing just to get the name..", "committedDate": "2020-02-06T16:46:02Z", "type": "commit"}, {"oid": "a11f26cb8e808ff8a25c37031551684e2872a082", "url": "https://github.com/palantir/gradle-baseline/commit/a11f26cb8e808ff8a25c37031551684e2872a082", "message": "Merge remote-tracking branch 'origin/develop' into ds/copyright-spotless\n\n# Conflicts:\n#\tgradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineFormat.java", "committedDate": "2020-02-10T14:31:56Z", "type": "commit"}, {"oid": "63b570202205197928015361f9e854a02f5cca0c", "url": "https://github.com/palantir/gradle-baseline/commit/63b570202205197928015361f9e854a02f5cca0c", "message": "fix spotless java configuration without plugin", "committedDate": "2020-02-10T14:34:12Z", "type": "commit"}, {"oid": "fb50d4bd326806b5699484f0aeceaf2443980d7f", "url": "https://github.com/palantir/gradle-baseline/commit/fb50d4bd326806b5699484f0aeceaf2443980d7f", "message": "fix up readme", "committedDate": "2020-02-10T14:44:27Z", "type": "commit"}, {"oid": "57f423c85339edc2dc552085247e970925407baa", "url": "https://github.com/palantir/gradle-baseline/commit/57f423c85339edc2dc552085247e970925407baa", "message": "fork LicenseHeaderStep", "committedDate": "2020-02-10T15:06:13Z", "type": "commit"}, {"oid": "8bff97c70aa75df10748cce0d91b08a11d78ec02", "url": "https://github.com/palantir/gradle-baseline/commit/8bff97c70aa75df10748cce0d91b08a11d78ec02", "message": "rewrite to support multiple header files", "committedDate": "2020-02-10T16:47:01Z", "type": "commit"}, {"oid": "1c33af5330751fc0b870cd18111d1c2033139546", "url": "https://github.com/palantir/gradle-baseline/commit/1c33af5330751fc0b870cd18111d1c2033139546", "message": "proper tests, test other copyright is supported too", "committedDate": "2020-02-10T16:59:37Z", "type": "commit"}]}