{"pr_number": 3090, "pr_title": "Two Factor Authentication feature backend", "pr_createdAt": "2020-10-01T07:56:18Z", "pr_url": "https://github.com/eclipse/kapua/pull/3090", "timeline": [{"oid": "2530378e11e9d94346367efa27eb9ccc5180701a", "url": "https://github.com/eclipse/kapua/commit/2530378e11e9d94346367efa27eb9ccc5180701a", "message": "Modified authentication classes to handle MfaCredentialOption\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-01T14:39:18Z", "type": "forcePushed"}, {"oid": "2d3673d87ca8b6de73fa26ade1c9f732c7d2adc4", "url": "https://github.com/eclipse/kapua/commit/2d3673d87ca8b6de73fa26ade1c9f732c7d2adc4", "message": "Modified authentication classes to handle MfaCredentialOption\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-02T13:46:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk0NTA5NQ==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r503945095", "bodyText": "Would QRCodeServlet be a more specific name for this class ?", "author": "stefanomorson", "createdAt": "2020-10-13T13:20:33Z", "path": "console/core/src/main/java/org/eclipse/kapua/app/console/core/servlet/ImageServlet.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.app.console.core.servlet;\n+\n+import com.google.zxing.BarcodeFormat;\n+import com.google.zxing.client.j2se.MatrixToImageWriter;\n+import com.google.zxing.common.BitMatrix;\n+import com.google.zxing.qrcode.QRCodeWriter;\n+import org.apache.commons.fileupload.disk.DiskFileItemFactory;\n+import org.apache.commons.fileupload.servlet.FileCleanerCleanup;\n+import org.apache.commons.io.FileCleaningTracker;\n+import org.eclipse.kapua.DeviceMenagementException;\n+import org.eclipse.kapua.KapuaEntityNotFoundException;\n+import org.eclipse.kapua.KapuaIllegalAccessException;\n+import org.eclipse.kapua.KapuaUnauthenticatedException;\n+import org.eclipse.kapua.app.console.module.api.setting.ConsoleSetting;\n+import org.eclipse.kapua.app.console.module.api.setting.ConsoleSettingKeys;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.service.account.Account;\n+import org.eclipse.kapua.service.account.AccountService;\n+import org.eclipse.kapua.service.authentication.shiro.utils.AuthenticationUtils;\n+import org.eclipse.kapua.service.user.User;\n+import org.eclipse.kapua.service.user.UserService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.imageio.ImageIO;\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServlet;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.concurrent.Callable;\n+\n+public class ImageServlet extends HttpServlet {", "originalCommit": "2d3673d87ca8b6de73fa26ade1c9f732c7d2adc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUzMjYzNw==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r506532637", "bodyText": "Yes, I agree, this will be done in PR #3115 .", "author": "gbarbon", "createdAt": "2020-10-16T15:14:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk0NTA5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "8ecd0324e189cdbbc409d137b52ed22f66918b75", "chunk": "diff --git a/console/core/src/main/java/org/eclipse/kapua/app/console/core/servlet/ImageServlet.java b/console/core/src/main/java/org/eclipse/kapua/app/console/core/servlet/ImageServlet.java\nindex fa33cf85d9..6064bcd2cf 100644\n--- a/console/core/src/main/java/org/eclipse/kapua/app/console/core/servlet/ImageServlet.java\n+++ b/console/core/src/main/java/org/eclipse/kapua/app/console/core/servlet/ImageServlet.java\n\n@@ -18,7 +18,6 @@ import com.google.zxing.qrcode.QRCodeWriter;\n import org.apache.commons.fileupload.disk.DiskFileItemFactory;\n import org.apache.commons.fileupload.servlet.FileCleanerCleanup;\n import org.apache.commons.io.FileCleaningTracker;\n-import org.eclipse.kapua.DeviceMenagementException;\n import org.eclipse.kapua.KapuaEntityNotFoundException;\n import org.eclipse.kapua.KapuaIllegalAccessException;\n import org.eclipse.kapua.KapuaUnauthenticatedException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk1OTM0MA==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r503959340", "bodyText": "Since MFA make sense only if there is a credential check at the first step and at the time being there's no use cases for a MFA/scratch-code to exist without a related credential, does it make sense to use CredentialsDomain permissions to authorize Credentials, MFACredentials and ScratchCodes all together?", "author": "stefanomorson", "createdAt": "2020-10-13T13:38:59Z", "path": "service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/AuthenticationDomains.java", "diffHunk": "@@ -21,4 +23,8 @@ private AuthenticationDomains() { }\n     public static final CredentialDomain CREDENTIAL_DOMAIN = new CredentialDomain();\n \n     public static final AccessTokenDomain ACCESS_TOKEN_DOMAIN = new AccessTokenDomain();\n+", "originalCommit": "2d3673d87ca8b6de73fa26ade1c9f732c7d2adc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE2NzA3Nw==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r506167077", "bodyText": "Yes, I agree. Please refer to PR #3112 for this fix.", "author": "gbarbon", "createdAt": "2020-10-16T08:27:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk1OTM0MA=="}], "type": "inlineReview", "revised_code": {"commit": "6345c93af03294dd62563c9957d28bcf72cce1c4", "chunk": "diff --git a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/AuthenticationDomains.java b/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/AuthenticationDomains.java\nindex bdc710f5d7..352c69d2ed 100644\n--- a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/AuthenticationDomains.java\n+++ b/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/AuthenticationDomains.java\n\n@@ -23,8 +21,4 @@ public class AuthenticationDomains {\n     public static final CredentialDomain CREDENTIAL_DOMAIN = new CredentialDomain();\n \n     public static final AccessTokenDomain ACCESS_TOKEN_DOMAIN = new AccessTokenDomain();\n-\n-    public static final MfaCredentialOptionDomain MFA_CREDENTIAL_OPTION_DOMAIN = new MfaCredentialOptionDomain();\n-\n-    public static final ScratchCodeDomain SCRATCH_CODE_DOMAIN = new ScratchCodeDomain();\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2NzgyOA==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r503967828", "bodyText": "Looks like this entity contains options regarding how the MFA should work, would MfaOption (in place of MfaCredentialOptions) be a more appropriate and compact name ?", "author": "stefanomorson", "createdAt": "2020-10-13T13:49:42Z", "path": "service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/credential/mfa/MfaCredentialOption.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.authentication.credential.mfa;\n+\n+import org.eclipse.kapua.model.KapuaUpdatableEntity;\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdAdapter;\n+import org.eclipse.kapua.model.xml.DateXmlAdapter;\n+import org.eclipse.kapua.service.authentication.credential.CredentialXmlRegistry;\n+import org.eclipse.kapua.service.user.User;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+import java.util.Date;\n+\n+/**\n+ * MfaCredentialOption definition.<br>\n+ * Used to handle MfaCredentialOption needed by the various authentication algorithms.\n+ */\n+@XmlRootElement(name = \"mfaCredentialOption\")\n+@XmlAccessorType(XmlAccessType.PROPERTY)\n+@XmlType(propOrder = {\n+        \"userId\",\n+        \"mfaCredentialKey\",\n+        \"trustKey\",\n+        \"trustExpirationDate\"}, //\n+        factoryClass = CredentialXmlRegistry.class, //\n+        factoryMethod = \"newMfaCredentialOption\") //\n+public interface MfaCredentialOption extends KapuaUpdatableEntity {", "originalCommit": "2d3673d87ca8b6de73fa26ade1c9f732c7d2adc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUzMjc0NA==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r506532744", "bodyText": "Yes, I agree, this will be done in PR #3115 .", "author": "gbarbon", "createdAt": "2020-10-16T15:14:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2NzgyOA=="}], "type": "inlineReview", "revised_code": {"commit": "6345c93af03294dd62563c9957d28bcf72cce1c4", "chunk": "diff --git a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/credential/mfa/MfaCredentialOption.java b/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/credential/mfa/MfaCredentialOption.java\ndeleted file mode 100644\nindex 0c7305d005..0000000000\n--- a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/credential/mfa/MfaCredentialOption.java\n+++ /dev/null\n\n@@ -1,112 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Eurotech and/or its affiliates and others\n- *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n- *\n- * Contributors:\n- *     Eurotech - initial API and implementation\n- *******************************************************************************/\n-package org.eclipse.kapua.service.authentication.credential.mfa;\n-\n-import org.eclipse.kapua.model.KapuaUpdatableEntity;\n-import org.eclipse.kapua.model.id.KapuaId;\n-import org.eclipse.kapua.model.id.KapuaIdAdapter;\n-import org.eclipse.kapua.model.xml.DateXmlAdapter;\n-import org.eclipse.kapua.service.authentication.credential.CredentialXmlRegistry;\n-import org.eclipse.kapua.service.user.User;\n-\n-import javax.xml.bind.annotation.XmlAccessType;\n-import javax.xml.bind.annotation.XmlAccessorType;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import java.util.Date;\n-\n-/**\n- * MfaCredentialOption definition.<br>\n- * Used to handle MfaCredentialOption needed by the various authentication algorithms.\n- */\n-@XmlRootElement(name = \"mfaCredentialOption\")\n-@XmlAccessorType(XmlAccessType.PROPERTY)\n-@XmlType(propOrder = {\n-        \"userId\",\n-        \"mfaCredentialKey\",\n-        \"trustKey\",\n-        \"trustExpirationDate\"}, //\n-        factoryClass = CredentialXmlRegistry.class, //\n-        factoryMethod = \"newMfaCredentialOption\") //\n-public interface MfaCredentialOption extends KapuaUpdatableEntity {\n-\n-    String TYPE = \"mfaCredentialOption\";\n-\n-    @Override\n-    default String getType() {\n-        return TYPE;\n-    }\n-\n-    /**\n-     * Return the user identifier\n-     *\n-     * @return The user identifier.\n-     */\n-    @XmlElement(name = \"userId\")\n-    @XmlJavaTypeAdapter(KapuaIdAdapter.class)\n-    KapuaId getUserId();\n-\n-    /**\n-     * Sets the {@link User} id of this {@link MfaCredentialOption}\n-     *\n-     * @param userId The {@link User} id to set.\n-     */\n-    void setUserId(KapuaId userId);\n-\n-    /**\n-     * Return the MfaCredentialOption key\n-     *\n-     * @return\n-     */\n-    @XmlElement(name = \"mfaCredentialKey\")\n-    String getMfaCredentialKey();\n-\n-    /**\n-     * Sets the MfaCredentialOption key\n-     *\n-     * @param mfaCredentialKey\n-     */\n-    void setMfaCredentialKey(String mfaCredentialKey);\n-\n-    /**\n-     * Return the trust key\n-     *\n-     * @return\n-     */\n-    @XmlElement(name = \"trustKey\")\n-    String getTrustKey();\n-\n-    /**\n-     * Sets the trust key\n-     *\n-     * @param trustKey\n-     */\n-    void setTrustKey(String trustKey);\n-\n-    /**\n-     * Gets the current trust key expiration date\n-     *\n-     * @return the current trust key expiration date\n-     */\n-    @XmlElement(name = \"trustExpirationDate\")\n-    @XmlJavaTypeAdapter(DateXmlAdapter.class)\n-    Date getTrustExpirationDate();\n-\n-    /**\n-     * Sets the current trust expiration date\n-     *\n-     * @param trustExpirationDate the current trust expiration date\n-     */\n-    void setTrustExpirationDate(Date trustExpirationDate);\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2ODg4OA==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r503968888", "bodyText": "Following the name of the class would replace mfaCredentialKey with mfaKey (or mfaSecret or mfaSecretKey).", "author": "stefanomorson", "createdAt": "2020-10-13T13:51:07Z", "path": "service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/credential/mfa/MfaCredentialOption.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.authentication.credential.mfa;\n+\n+import org.eclipse.kapua.model.KapuaUpdatableEntity;\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdAdapter;\n+import org.eclipse.kapua.model.xml.DateXmlAdapter;\n+import org.eclipse.kapua.service.authentication.credential.CredentialXmlRegistry;\n+import org.eclipse.kapua.service.user.User;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+import java.util.Date;\n+\n+/**\n+ * MfaCredentialOption definition.<br>\n+ * Used to handle MfaCredentialOption needed by the various authentication algorithms.\n+ */\n+@XmlRootElement(name = \"mfaCredentialOption\")\n+@XmlAccessorType(XmlAccessType.PROPERTY)\n+@XmlType(propOrder = {\n+        \"userId\",\n+        \"mfaCredentialKey\",", "originalCommit": "2d3673d87ca8b6de73fa26ade1c9f732c7d2adc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUzMjkzNQ==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r506532935", "bodyText": "Ok, this will be done in PR #3115 .", "author": "gbarbon", "createdAt": "2020-10-16T15:14:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2ODg4OA=="}], "type": "inlineReview", "revised_code": {"commit": "6345c93af03294dd62563c9957d28bcf72cce1c4", "chunk": "diff --git a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/credential/mfa/MfaCredentialOption.java b/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/credential/mfa/MfaCredentialOption.java\ndeleted file mode 100644\nindex 0c7305d005..0000000000\n--- a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/credential/mfa/MfaCredentialOption.java\n+++ /dev/null\n\n@@ -1,112 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Eurotech and/or its affiliates and others\n- *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n- *\n- * Contributors:\n- *     Eurotech - initial API and implementation\n- *******************************************************************************/\n-package org.eclipse.kapua.service.authentication.credential.mfa;\n-\n-import org.eclipse.kapua.model.KapuaUpdatableEntity;\n-import org.eclipse.kapua.model.id.KapuaId;\n-import org.eclipse.kapua.model.id.KapuaIdAdapter;\n-import org.eclipse.kapua.model.xml.DateXmlAdapter;\n-import org.eclipse.kapua.service.authentication.credential.CredentialXmlRegistry;\n-import org.eclipse.kapua.service.user.User;\n-\n-import javax.xml.bind.annotation.XmlAccessType;\n-import javax.xml.bind.annotation.XmlAccessorType;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import java.util.Date;\n-\n-/**\n- * MfaCredentialOption definition.<br>\n- * Used to handle MfaCredentialOption needed by the various authentication algorithms.\n- */\n-@XmlRootElement(name = \"mfaCredentialOption\")\n-@XmlAccessorType(XmlAccessType.PROPERTY)\n-@XmlType(propOrder = {\n-        \"userId\",\n-        \"mfaCredentialKey\",\n-        \"trustKey\",\n-        \"trustExpirationDate\"}, //\n-        factoryClass = CredentialXmlRegistry.class, //\n-        factoryMethod = \"newMfaCredentialOption\") //\n-public interface MfaCredentialOption extends KapuaUpdatableEntity {\n-\n-    String TYPE = \"mfaCredentialOption\";\n-\n-    @Override\n-    default String getType() {\n-        return TYPE;\n-    }\n-\n-    /**\n-     * Return the user identifier\n-     *\n-     * @return The user identifier.\n-     */\n-    @XmlElement(name = \"userId\")\n-    @XmlJavaTypeAdapter(KapuaIdAdapter.class)\n-    KapuaId getUserId();\n-\n-    /**\n-     * Sets the {@link User} id of this {@link MfaCredentialOption}\n-     *\n-     * @param userId The {@link User} id to set.\n-     */\n-    void setUserId(KapuaId userId);\n-\n-    /**\n-     * Return the MfaCredentialOption key\n-     *\n-     * @return\n-     */\n-    @XmlElement(name = \"mfaCredentialKey\")\n-    String getMfaCredentialKey();\n-\n-    /**\n-     * Sets the MfaCredentialOption key\n-     *\n-     * @param mfaCredentialKey\n-     */\n-    void setMfaCredentialKey(String mfaCredentialKey);\n-\n-    /**\n-     * Return the trust key\n-     *\n-     * @return\n-     */\n-    @XmlElement(name = \"trustKey\")\n-    String getTrustKey();\n-\n-    /**\n-     * Sets the trust key\n-     *\n-     * @param trustKey\n-     */\n-    void setTrustKey(String trustKey);\n-\n-    /**\n-     * Gets the current trust key expiration date\n-     *\n-     * @return the current trust key expiration date\n-     */\n-    @XmlElement(name = \"trustExpirationDate\")\n-    @XmlJavaTypeAdapter(DateXmlAdapter.class)\n-    Date getTrustExpirationDate();\n-\n-    /**\n-     * Sets the current trust expiration date\n-     *\n-     * @param trustExpirationDate the current trust expiration date\n-     */\n-    void setTrustExpirationDate(Date trustExpirationDate);\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3NzM4Nw==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r503977387", "bodyText": "Remove Google Authenticator from the Java doc", "author": "stefanomorson", "createdAt": "2020-10-13T14:01:26Z", "path": "service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/mfa/MfaAuthenticationService.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.authentication.mfa;\n+\n+import org.eclipse.kapua.service.KapuaService;\n+\n+import java.util.List;\n+\n+/**\n+ * MfaAuthenticationService interface\n+ */\n+public interface MfaAuthenticationService extends KapuaService {\n+\n+    /**\n+     * @return true if the MfaAuthenticationService is enabled, false otherwise\n+     */\n+    boolean isEnabled();\n+\n+    /**\n+     * Validates a code generated with the Google Authenticator app", "originalCommit": "2d3673d87ca8b6de73fa26ade1c9f732c7d2adc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUzMzAxNA==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r506533014", "bodyText": "Ok, this will be done in PR #3115 .", "author": "gbarbon", "createdAt": "2020-10-16T15:15:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3NzM4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "6345c93af03294dd62563c9957d28bcf72cce1c4", "chunk": "diff --git a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/mfa/MfaAuthenticationService.java b/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/mfa/MfaAuthenticationService.java\ndeleted file mode 100644\nindex 10462af989..0000000000\n--- a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/mfa/MfaAuthenticationService.java\n+++ /dev/null\n\n@@ -1,60 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Eurotech and/or its affiliates and others\n- *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n- *\n- * Contributors:\n- *     Eurotech - initial API and implementation\n- *******************************************************************************/\n-package org.eclipse.kapua.service.authentication.mfa;\n-\n-import org.eclipse.kapua.service.KapuaService;\n-\n-import java.util.List;\n-\n-/**\n- * MfaAuthenticationService interface\n- */\n-public interface MfaAuthenticationService extends KapuaService {\n-\n-    /**\n-     * @return true if the MfaAuthenticationService is enabled, false otherwise\n-     */\n-    boolean isEnabled();\n-\n-    /**\n-     * Validates a code generated with the Google Authenticator app\n-     *\n-     * @param encryptedSecret  the encoded secret key\n-     * @param verificationCode the verification code\n-     * @return true if the verficationCode is valid, false otherwise\n-     */\n-    boolean authorize(String encryptedSecret, int verificationCode);\n-\n-    /**\n-     * Validates a scratch code\n-     *\n-     * @param hasedScratchCode the hashed scratch code\n-     * @param authCode    the plaintext authentication code\n-     * @return true if the code match, false otherwise\n-     */\n-    boolean authorize(String hasedScratchCode, String authCode);\n-\n-    /**\n-     * Generates the secret key\n-     *\n-     * @return the secret key in the form of a String\n-     */\n-    String generateKey();\n-\n-    /**\n-     * Generates the scratch codes\n-     *\n-     * @return the list of scratch codes in the form of Strings\n-     */\n-    List<String> generateCodes();\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk4NTA3Ng==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r503985076", "bodyText": "Do not inherit from KapuaService and get implementations with a dedicated locator class. Would MfaAuthenticator be a name that distiguish this class from a true KapuaService ?", "author": "stefanomorson", "createdAt": "2020-10-13T14:11:15Z", "path": "service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/mfa/MfaAuthenticationService.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.authentication.mfa;\n+\n+import org.eclipse.kapua.service.KapuaService;\n+\n+import java.util.List;\n+\n+/**\n+ * MfaAuthenticationService interface\n+ */\n+public interface MfaAuthenticationService extends KapuaService {", "originalCommit": "2d3673d87ca8b6de73fa26ade1c9f732c7d2adc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE2Nzg3OQ==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r506167879", "bodyText": "Yes, I agree. Please refer to PR #3113 for this fix (only concerning the service part, the renaming part is taking into account in a dedicated PR).", "author": "gbarbon", "createdAt": "2020-10-16T08:28:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk4NTA3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUzMzQ5Mw==", "url": "https://github.com/eclipse/kapua/pull/3090#discussion_r506533493", "bodyText": "As for the renaming of the service it will be done in PR #3115 .", "author": "gbarbon", "createdAt": "2020-10-16T15:15:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk4NTA3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "6345c93af03294dd62563c9957d28bcf72cce1c4", "chunk": "diff --git a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/mfa/MfaAuthenticationService.java b/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/mfa/MfaAuthenticationService.java\ndeleted file mode 100644\nindex 10462af989..0000000000\n--- a/service/security/authentication/api/src/main/java/org/eclipse/kapua/service/authentication/mfa/MfaAuthenticationService.java\n+++ /dev/null\n\n@@ -1,60 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Eurotech and/or its affiliates and others\n- *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the Eclipse Public License v1.0\n- * which accompanies this distribution, and is available at\n- * http://www.eclipse.org/legal/epl-v10.html\n- *\n- * Contributors:\n- *     Eurotech - initial API and implementation\n- *******************************************************************************/\n-package org.eclipse.kapua.service.authentication.mfa;\n-\n-import org.eclipse.kapua.service.KapuaService;\n-\n-import java.util.List;\n-\n-/**\n- * MfaAuthenticationService interface\n- */\n-public interface MfaAuthenticationService extends KapuaService {\n-\n-    /**\n-     * @return true if the MfaAuthenticationService is enabled, false otherwise\n-     */\n-    boolean isEnabled();\n-\n-    /**\n-     * Validates a code generated with the Google Authenticator app\n-     *\n-     * @param encryptedSecret  the encoded secret key\n-     * @param verificationCode the verification code\n-     * @return true if the verficationCode is valid, false otherwise\n-     */\n-    boolean authorize(String encryptedSecret, int verificationCode);\n-\n-    /**\n-     * Validates a scratch code\n-     *\n-     * @param hasedScratchCode the hashed scratch code\n-     * @param authCode    the plaintext authentication code\n-     * @return true if the code match, false otherwise\n-     */\n-    boolean authorize(String hasedScratchCode, String authCode);\n-\n-    /**\n-     * Generates the secret key\n-     *\n-     * @return the secret key in the form of a String\n-     */\n-    String generateKey();\n-\n-    /**\n-     * Generates the scratch codes\n-     *\n-     * @return the list of scratch codes in the form of Strings\n-     */\n-    List<String> generateCodes();\n-\n-}\n"}}, {"oid": "aa5c89bd5bf8df20db824bf32c4db0c7f1b489ad", "url": "https://github.com/eclipse/kapua/commit/aa5c89bd5bf8df20db824bf32c4db0c7f1b489ad", "message": "Modified authentication classes to handle MfaCredentialOption\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-13T16:01:44Z", "type": "forcePushed"}, {"oid": "8ecd0324e189cdbbc409d137b52ed22f66918b75", "url": "https://github.com/eclipse/kapua/commit/8ecd0324e189cdbbc409d137b52ed22f66918b75", "message": "Modified authentication classes to handle MfaCredentialOption\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-13T16:25:29Z", "type": "forcePushed"}, {"oid": "da9ff84f1a8448d31b54f0810c5b6b401963239e", "url": "https://github.com/eclipse/kapua/commit/da9ff84f1a8448d31b54f0810c5b6b401963239e", "message": "Modified authentication classes to handle MfaCredentialOption\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-16T07:57:35Z", "type": "forcePushed"}, {"oid": "367d55a3af08a339b90278a5582e9ce56c86fb13", "url": "https://github.com/eclipse/kapua/commit/367d55a3af08a339b90278a5582e9ce56c86fb13", "message": "Modified authentication classes to handle MfaCredentialOption\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-19T07:54:46Z", "type": "forcePushed"}, {"oid": "b039bfda28693ce990d6ae3a1b50636a8110069b", "url": "https://github.com/eclipse/kapua/commit/b039bfda28693ce990d6ae3a1b50636a8110069b", "message": "Modified authentication classes to handle MfaCredentialOption\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-20T14:12:59Z", "type": "forcePushed"}, {"oid": "6345c93af03294dd62563c9957d28bcf72cce1c4", "url": "https://github.com/eclipse/kapua/commit/6345c93af03294dd62563c9957d28bcf72cce1c4", "message": "Adding AES algorithm to AuthenticationUtils for Two Factor Authentication\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-27T10:05:21Z", "type": "commit"}, {"oid": "f75d47af323a2b322f45db1918599b21004ad174", "url": "https://github.com/eclipse/kapua/commit/f75d47af323a2b322f45db1918599b21004ad174", "message": "Adding MfaCredentialOption and ScratchCode entities and services for Two Factor Authentication\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-27T10:05:21Z", "type": "commit"}, {"oid": "52344d5334bf953a5640d3156d0ffd05278faeb9", "url": "https://github.com/eclipse/kapua/commit/52344d5334bf953a5640d3156d0ffd05278faeb9", "message": "Adding MfaAuthenticationService for Two Factor Authentication\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-27T10:05:21Z", "type": "commit"}, {"oid": "3ef6b148ee3a25a8c0b8ef0fe664448c53813537", "url": "https://github.com/eclipse/kapua/commit/3ef6b148ee3a25a8c0b8ef0fe664448c53813537", "message": "Adding ImageServlet (QR code generation) for Two Factor Authentication\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-27T10:05:21Z", "type": "commit"}, {"oid": "86216687729d2be2e2448a96cc3b28e4f7e4b691", "url": "https://github.com/eclipse/kapua/commit/86216687729d2be2e2448a96cc3b28e4f7e4b691", "message": "Modified authentication classes to handle MfaCredentialOption\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-27T10:05:21Z", "type": "commit"}, {"oid": "86216687729d2be2e2448a96cc3b28e4f7e4b691", "url": "https://github.com/eclipse/kapua/commit/86216687729d2be2e2448a96cc3b28e4f7e4b691", "message": "Modified authentication classes to handle MfaCredentialOption\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-10-27T10:05:21Z", "type": "forcePushed"}]}