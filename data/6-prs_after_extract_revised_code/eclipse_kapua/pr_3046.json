{"pr_number": 3046, "pr_title": "Added check on OpenId idToken on the AuthenticationServiceShiroImpl", "pr_createdAt": "2020-08-03T12:20:11Z", "pr_url": "https://github.com/eclipse/kapua/pull/3046", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2MTUzNg==", "url": "https://github.com/eclipse/kapua/pull/3046#discussion_r466261536", "bodyText": "When checking Strings emptyness please use Strings.isNullOrEmpty(...) :)", "author": "Coduz", "createdAt": "2020-08-06T09:14:18Z", "path": "service/security/shiro/src/main/java/org/eclipse/kapua/service/authentication/shiro/AuthenticationServiceShiroImpl.java", "diffHunk": "@@ -131,9 +131,11 @@ public AccessToken login(LoginCredentials loginCredentials) throws KapuaExceptio\n         } else if (loginCredentials instanceof ApiKeyCredentialsImpl) {\n             shiroAuthenticationToken = new ApiKeyCredentialsImpl(((ApiKeyCredentialsImpl) loginCredentials).getApiKey());\n         } else if (loginCredentials instanceof JwtCredentialsImpl) {\n-            shiroAuthenticationToken = new JwtCredentialsImpl(((JwtCredentialsImpl) loginCredentials).getJwt(),\n-                    ((JwtCredentialsImpl) loginCredentials).getIdToken());\n             openIDidToken = ((JwtCredentialsImpl) loginCredentials).getIdToken();\n+            if (openIDidToken == null || openIDidToken.isEmpty()) {", "originalCommit": "6c99abd9970a2e23f64fb1cae018243586a4c636", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMDIzNg==", "url": "https://github.com/eclipse/kapua/pull/3046#discussion_r466320236", "bodyText": "Done!", "author": "gbarbon", "createdAt": "2020-08-06T10:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2MTUzNg=="}], "type": "inlineReview", "revised_code": {"commit": "fcfd96c6e0a803f6fbf8d89dceea1d3eb6879f47", "chunk": "diff --git a/service/security/shiro/src/main/java/org/eclipse/kapua/service/authentication/shiro/AuthenticationServiceShiroImpl.java b/service/security/shiro/src/main/java/org/eclipse/kapua/service/authentication/shiro/AuthenticationServiceShiroImpl.java\nindex 6bfdeaac72..6d7bac1dc7 100644\n--- a/service/security/shiro/src/main/java/org/eclipse/kapua/service/authentication/shiro/AuthenticationServiceShiroImpl.java\n+++ b/service/security/shiro/src/main/java/org/eclipse/kapua/service/authentication/shiro/AuthenticationServiceShiroImpl.java\n\n@@ -132,7 +133,7 @@ public class AuthenticationServiceShiroImpl implements AuthenticationService {\n             shiroAuthenticationToken = new ApiKeyCredentialsImpl(((ApiKeyCredentialsImpl) loginCredentials).getApiKey());\n         } else if (loginCredentials instanceof JwtCredentialsImpl) {\n             openIDidToken = ((JwtCredentialsImpl) loginCredentials).getIdToken();\n-            if (openIDidToken == null || openIDidToken.isEmpty()) {\n+            if (Strings.isNullOrEmpty(openIDidToken)) {\n                 throw new KapuaAuthenticationException(KapuaAuthenticationErrorCodes.INVALID_LOGIN_CREDENTIALS);\n             }\n             shiroAuthenticationToken = new JwtCredentialsImpl(((JwtCredentialsImpl) loginCredentials).getJwt(), openIDidToken);\n"}}, {"oid": "fcfd96c6e0a803f6fbf8d89dceea1d3eb6879f47", "url": "https://github.com/eclipse/kapua/commit/fcfd96c6e0a803f6fbf8d89dceea1d3eb6879f47", "message": "Added check on OpenId idToken on the AuthenticationServiceShiroImpl\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-08-06T10:32:15Z", "type": "commit"}, {"oid": "fcfd96c6e0a803f6fbf8d89dceea1d3eb6879f47", "url": "https://github.com/eclipse/kapua/commit/fcfd96c6e0a803f6fbf8d89dceea1d3eb6879f47", "message": "Added check on OpenId idToken on the AuthenticationServiceShiroImpl\n\nSigned-off-by: Gianluca Barbon <gianluca.barbon@eurotech.com>", "committedDate": "2020-08-06T10:32:15Z", "type": "forcePushed"}]}