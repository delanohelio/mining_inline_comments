{"pr_number": 2977, "pr_title": "Added JUnit tests for Commons package", "pr_createdAt": "2020-05-15T10:14:27Z", "pr_url": "https://github.com/eclipse/kapua/pull/2977", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5MTAyNg==", "url": "https://github.com/eclipse/kapua/pull/2977#discussion_r426491026", "bodyText": "assertEquals has an overload method that accepts a message as a first argument. So fail invoked in the catch exception is not the correct usage of Assert stuff.\nPlease change this and also other similar usages.", "author": "Coduz", "createdAt": "2020-05-18T09:28:20Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.util;\n+\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.Constructor;\n+import java.net.URL;\n+\n+@Category(JUnitTests.class)\n+public class KapuaFileUtilsTest extends Assert {\n+\n+    @Test\n+    public void constructorTest() throws Exception {\n+        Constructor<KapuaFileUtils> fileUtilsConstructor = KapuaFileUtils.class.getDeclaredConstructor();\n+        fileUtilsConstructor.setAccessible(true);\n+        fileUtilsConstructor.newInstance();\n+    }\n+\n+    @Test\n+    public void getAsUrlPositiveAndNegativeTest() throws Exception {\n+        String[] permittedFormats = new String[] {\"https://www.example3345.com/\", \"http://www.example.com:1080/docs/resource1.html\",\n+                \"https://www.example.com:1080/docs/resource2.html\", \"file:///c:/EXAMPLE/clock.example\"};\n+        String [] invalidFormats = new String [] {\"www.example.com:1080/docs/resource1.html\", \"/c:/WINDOWS/clock.example\",\n+                \"http://www.example.com:10800000000000/docs/resource1.html\", \"htp://www.example.com:1080/docs/resource1.html\"};\n+\n+        URL[] expectedUrl = new URL[] {new URL(\"https://www.example3345.com/\"), new URL(\"http://www.example.com:1080/docs/resource1.html\"),\n+                                       new URL(\"https://www.example.com:1080/docs/resource2.html\"), new URL(\"file:///c:/EXAMPLE/clock.example\")};\n+        for (int i = 0; i < permittedFormats.length; i++) {\n+            try {\n+                assertEquals(expectedUrl[i], KapuaFileUtils.getAsURL(permittedFormats[i]));", "originalCommit": "a166127978c73bae21374958cfe0ce149855c9c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4ea2536b4f6d043b14028868293d4515345b3bb9", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java b/commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java\nindex adf0c17ea9..25f247e5cf 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java\n\n@@ -11,6 +11,7 @@\n  *******************************************************************************/\n package org.eclipse.kapua.commons.util;\n \n+import org.eclipse.kapua.commons.setting.KapuaSettingException;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n import org.junit.Assert;\n import org.junit.Test;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMTkyMg==", "url": "https://github.com/eclipse/kapua/pull/2977#discussion_r426501922", "bodyText": "If they are not intended to match please use assertNotEquals.\nIf KapuaFileUtils.getAsURL(...) is meant to throw an Exception catch the Exception and do asserts on the type of Exception expected.", "author": "Coduz", "createdAt": "2020-05-18T09:46:17Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.util;\n+\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.Constructor;\n+import java.net.URL;\n+\n+@Category(JUnitTests.class)\n+public class KapuaFileUtilsTest extends Assert {\n+\n+    @Test\n+    public void constructorTest() throws Exception {\n+        Constructor<KapuaFileUtils> fileUtilsConstructor = KapuaFileUtils.class.getDeclaredConstructor();\n+        fileUtilsConstructor.setAccessible(true);\n+        fileUtilsConstructor.newInstance();\n+    }\n+\n+    @Test\n+    public void getAsUrlPositiveAndNegativeTest() throws Exception {\n+        String[] permittedFormats = new String[] {\"https://www.example3345.com/\", \"http://www.example.com:1080/docs/resource1.html\",\n+                \"https://www.example.com:1080/docs/resource2.html\", \"file:///c:/EXAMPLE/clock.example\"};\n+        String [] invalidFormats = new String [] {\"www.example.com:1080/docs/resource1.html\", \"/c:/WINDOWS/clock.example\",\n+                \"http://www.example.com:10800000000000/docs/resource1.html\", \"htp://www.example.com:1080/docs/resource1.html\"};\n+\n+        URL[] expectedUrl = new URL[] {new URL(\"https://www.example3345.com/\"), new URL(\"http://www.example.com:1080/docs/resource1.html\"),\n+                                       new URL(\"https://www.example.com:1080/docs/resource2.html\"), new URL(\"file:///c:/EXAMPLE/clock.example\")};\n+        for (int i = 0; i < permittedFormats.length; i++) {\n+            try {\n+                assertEquals(expectedUrl[i], KapuaFileUtils.getAsURL(permittedFormats[i]));\n+            } catch (Exception ex) {\n+                fail(\"Inappropriate http scheme.\");\n+            }\n+            try {\n+                assertEquals(invalidFormats[i], KapuaFileUtils.getAsURL(invalidFormats[i]));", "originalCommit": "a166127978c73bae21374958cfe0ce149855c9c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4ea2536b4f6d043b14028868293d4515345b3bb9", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java b/commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java\nindex adf0c17ea9..25f247e5cf 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/util/KapuaFileUtilsTest.java\n\n@@ -11,6 +11,7 @@\n  *******************************************************************************/\n package org.eclipse.kapua.commons.util;\n \n+import org.eclipse.kapua.commons.setting.KapuaSettingException;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n import org.junit.Assert;\n import org.junit.Test;\n"}}, {"oid": "4ea2536b4f6d043b14028868293d4515345b3bb9", "url": "https://github.com/eclipse/kapua/commit/4ea2536b4f6d043b14028868293d4515345b3bb9", "message": "Added JUnit tests for Commons package\n\nSigned-off-by: code-incubus <nemanja.milutinovic@comtrade.com>", "committedDate": "2020-05-19T06:07:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1NzMzOA==", "url": "https://github.com/eclipse/kapua/pull/2977#discussion_r427157338", "bodyText": "Which is the issue with this method?", "author": "Coduz", "createdAt": "2020-05-19T09:22:15Z", "path": "commons/src/main/java/org/eclipse/kapua/commons/util/KapuaFileUtils.java", "diffHunk": "@@ -79,6 +79,7 @@ public static File getAsFile(String filePath) throws KapuaSettingException {\n \n             if (hasHttpScheme(filePath)) {\n                 // FIXME:\n+                // After fixing this method, needs to adjust/fix the tests", "originalCommit": "4ea2536b4f6d043b14028868293d4515345b3bb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2NTA2MQ==", "url": "https://github.com/eclipse/kapua/pull/2977#discussion_r427165061", "bodyText": "@Coduz\nThat\u2019s the comment I found in that class. So if that method ever changes or whatever ... it is necessary to adjust the test. That's all.", "author": "code-incubus", "createdAt": "2020-05-19T09:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1NzMzOA=="}], "type": "inlineReview", "revised_code": {"commit": "c1c7b86d7f8a3b3416867d26c7d06add9d41f7fc", "chunk": "diff --git a/commons/src/main/java/org/eclipse/kapua/commons/util/KapuaFileUtils.java b/commons/src/main/java/org/eclipse/kapua/commons/util/KapuaFileUtils.java\nindex a8f876cde6..2c6aa1e7f3 100644\n--- a/commons/src/main/java/org/eclipse/kapua/commons/util/KapuaFileUtils.java\n+++ b/commons/src/main/java/org/eclipse/kapua/commons/util/KapuaFileUtils.java\n\n@@ -78,8 +78,6 @@ public class KapuaFileUtils {\n             URL url = getAsURL(filePath);\n \n             if (hasHttpScheme(filePath)) {\n-                // FIXME:\n-                // After fixing this method, needs to adjust/fix the tests\n                 file = File.createTempFile(\"file-\" + System.currentTimeMillis(), \".tmp\");\n                 FileUtils.copyURLToFile(url, file);\n             } else {\n"}}, {"oid": "c1c7b86d7f8a3b3416867d26c7d06add9d41f7fc", "url": "https://github.com/eclipse/kapua/commit/c1c7b86d7f8a3b3416867d26c7d06add9d41f7fc", "message": "Added JUnit test for Commons package\n\nSigned-off-by: code-incubus <nemanja.milutinovic@comtrade.com>", "committedDate": "2020-05-19T10:32:26Z", "type": "commit"}, {"oid": "c1c7b86d7f8a3b3416867d26c7d06add9d41f7fc", "url": "https://github.com/eclipse/kapua/commit/c1c7b86d7f8a3b3416867d26c7d06add9d41f7fc", "message": "Added JUnit test for Commons package\n\nSigned-off-by: code-incubus <nemanja.milutinovic@comtrade.com>", "committedDate": "2020-05-19T10:32:26Z", "type": "forcePushed"}]}