{"pr_number": 3083, "pr_title": "Added Junit tests in commons/util and commons/setting packages", "pr_createdAt": "2020-09-29T10:11:38Z", "pr_url": "https://github.com/eclipse/kapua/pull/3083", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxODgyNQ==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496618825", "bodyText": "Please delete this empty line.", "author": "LeoNerdoG", "createdAt": "2020-09-29T10:44:29Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -67,5 +79,4 @@ protected TestSetting() {\n         }\n ", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\nindex 2e72a56d7a..aef7fef9b7 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n\n@@ -77,6 +68,5 @@ public class AbstractKapuaSettingTest extends Assertions {\n         protected TestSetting() {\n             super(\"test.properties\");\n         }\n-\n     }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTcwNw==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619707", "bodyText": "Please delete all these annotations since I think they are not needed.", "author": "LeoNerdoG", "createdAt": "2020-09-29T10:46:06Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then\n-        Assertions.assertThat(path).isNotEmpty();\n+        assertThat(path).isNotEmpty();\n     }\n \n     @Test\n-    public void shouldReadEnvUsingDotNotation() {\n+    public void shouldReadEnvUsingDotNotationTest() {\n         // Given", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\nindex 2e72a56d7a..aef7fef9b7 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n\n@@ -49,27 +47,20 @@ public class AbstractKapuaSettingTest extends Assertions {\n \n     @Test\n     public void shouldReadPathFromEnvTest() {\n-        // When\n         String path = new TestSetting().property(\"PATH\");\n \n-        // Then\n         assertThat(path).isNotEmpty();\n     }\n \n     @Test\n     public void shouldReadEnvUsingDotNotationTest() {\n-        // Given\n         System.setProperty(\"FOO_BAR_BAZ\", \"qux\");\n-\n-        // When\n         String path = new TestSetting().property(\"foo.bar.baz\");\n \n-        // Then\n         assertThat(path).isEqualTo(\"qux\");\n     }\n \n     static class TestSetting extends AbstractKapuaSetting<TestSettingKey> {\n-\n         String property(String key) {\n             return config.getString(key);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTczNg==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619736", "bodyText": "Please delete all these annotations since I think they are not needed.", "author": "LeoNerdoG", "createdAt": "2020-09-29T10:46:09Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\nindex 2e72a56d7a..aef7fef9b7 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n\n@@ -49,27 +47,20 @@ public class AbstractKapuaSettingTest extends Assertions {\n \n     @Test\n     public void shouldReadPathFromEnvTest() {\n-        // When\n         String path = new TestSetting().property(\"PATH\");\n \n-        // Then\n         assertThat(path).isNotEmpty();\n     }\n \n     @Test\n     public void shouldReadEnvUsingDotNotationTest() {\n-        // Given\n         System.setProperty(\"FOO_BAR_BAZ\", \"qux\");\n-\n-        // When\n         String path = new TestSetting().property(\"foo.bar.baz\");\n \n-        // Then\n         assertThat(path).isEqualTo(\"qux\");\n     }\n \n     static class TestSetting extends AbstractKapuaSetting<TestSettingKey> {\n-\n         String property(String key) {\n             return config.getString(key);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTc3OA==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619778", "bodyText": "Please delete all these annotations since I think they are not needed.", "author": "LeoNerdoG", "createdAt": "2020-09-29T10:46:13Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then\n-        Assertions.assertThat(path).isNotEmpty();\n+        assertThat(path).isNotEmpty();\n     }\n \n     @Test\n-    public void shouldReadEnvUsingDotNotation() {\n+    public void shouldReadEnvUsingDotNotationTest() {\n         // Given", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\nindex 2e72a56d7a..aef7fef9b7 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n\n@@ -49,27 +47,20 @@ public class AbstractKapuaSettingTest extends Assertions {\n \n     @Test\n     public void shouldReadPathFromEnvTest() {\n-        // When\n         String path = new TestSetting().property(\"PATH\");\n \n-        // Then\n         assertThat(path).isNotEmpty();\n     }\n \n     @Test\n     public void shouldReadEnvUsingDotNotationTest() {\n-        // Given\n         System.setProperty(\"FOO_BAR_BAZ\", \"qux\");\n-\n-        // When\n         String path = new TestSetting().property(\"foo.bar.baz\");\n \n-        // Then\n         assertThat(path).isEqualTo(\"qux\");\n     }\n \n     static class TestSetting extends AbstractKapuaSetting<TestSettingKey> {\n-\n         String property(String key) {\n             return config.getString(key);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTgxMQ==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619811", "bodyText": "Please delete all these annotations since I think they are not needed.", "author": "LeoNerdoG", "createdAt": "2020-09-29T10:46:18Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then\n-        Assertions.assertThat(path).isNotEmpty();\n+        assertThat(path).isNotEmpty();\n     }\n \n     @Test\n-    public void shouldReadEnvUsingDotNotation() {\n+    public void shouldReadEnvUsingDotNotationTest() {\n         // Given\n         System.setProperty(\"FOO_BAR_BAZ\", \"qux\");\n \n         // When", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\nindex 2e72a56d7a..aef7fef9b7 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n\n@@ -49,27 +47,20 @@ public class AbstractKapuaSettingTest extends Assertions {\n \n     @Test\n     public void shouldReadPathFromEnvTest() {\n-        // When\n         String path = new TestSetting().property(\"PATH\");\n \n-        // Then\n         assertThat(path).isNotEmpty();\n     }\n \n     @Test\n     public void shouldReadEnvUsingDotNotationTest() {\n-        // Given\n         System.setProperty(\"FOO_BAR_BAZ\", \"qux\");\n-\n-        // When\n         String path = new TestSetting().property(\"foo.bar.baz\");\n \n-        // Then\n         assertThat(path).isEqualTo(\"qux\");\n     }\n \n     static class TestSetting extends AbstractKapuaSetting<TestSettingKey> {\n-\n         String property(String key) {\n             return config.getString(key);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTg0NA==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619844", "bodyText": "Please delete all these annotations since I think they are not needed.", "author": "LeoNerdoG", "createdAt": "2020-09-29T10:46:21Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then\n-        Assertions.assertThat(path).isNotEmpty();\n+        assertThat(path).isNotEmpty();\n     }\n \n     @Test\n-    public void shouldReadEnvUsingDotNotation() {\n+    public void shouldReadEnvUsingDotNotationTest() {\n         // Given\n         System.setProperty(\"FOO_BAR_BAZ\", \"qux\");\n \n         // When\n         String path = new TestSetting().property(\"foo.bar.baz\");\n \n         // Then", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\nindex 2e72a56d7a..aef7fef9b7 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java\n\n@@ -49,27 +47,20 @@ public class AbstractKapuaSettingTest extends Assertions {\n \n     @Test\n     public void shouldReadPathFromEnvTest() {\n-        // When\n         String path = new TestSetting().property(\"PATH\");\n \n-        // Then\n         assertThat(path).isNotEmpty();\n     }\n \n     @Test\n     public void shouldReadEnvUsingDotNotationTest() {\n-        // Given\n         System.setProperty(\"FOO_BAR_BAZ\", \"qux\");\n-\n-        // When\n         String path = new TestSetting().property(\"foo.bar.baz\");\n \n-        // Then\n         assertThat(path).isEqualTo(\"qux\");\n     }\n \n     static class TestSetting extends AbstractKapuaSetting<TestSettingKey> {\n-\n         String property(String key) {\n             return config.getString(key);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMDcyNg==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496630726", "bodyText": "Please change message from \"The key is not contained\" to \"There is no key!\"", "author": "LeoNerdoG", "createdAt": "2020-09-29T11:06:41Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java", "diffHunk": "@@ -33,25 +33,39 @@ public void createInstanceOfClasses() {\n     @Test\n     public void getKeysTest() {\n         assertFalse(\"The next item exists!\", envFriendlyConfiguration.getKeys().hasNext());\n+        envFriendlyConfiguration.setProperty(\"Key1\", \"value1\");\n+        assertTrue(\"The next item does not exist!\", envFriendlyConfiguration.getKeys().hasNext());\n     }\n \n     @Test\n     public void getPropertyTest() {\n         assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(\"property\"));\n+        envFriendlyConfiguration.setProperty(\"key\", \"value\");\n+        envFriendlyConfiguration.setProperty(\"KEY_PROPERTY\", 10);\n+        assertEquals(\"Expected and actual values should be the same!\", \"value\", envFriendlyConfiguration.getProperty(\"key\"));\n+        assertEquals(\"Expected and actual values should be the same!\", 10, envFriendlyConfiguration.getProperty(\"key.property\"));\n     }\n \n     @Test\n     public void getPropertyEmptyTest() {\n         assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(\"\"));\n+        envFriendlyConfiguration.setProperty(\"\", \"value\");\n+        assertEquals(\"Expected and actual values should be the same!\", \"value\", envFriendlyConfiguration.getProperty(\"\"));\n     }\n \n     @Test(expected = NullPointerException.class)\n     public void getPropertyNullTest() {\n-        assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(null));\n+        envFriendlyConfiguration.getProperty(null);\n     }\n \n     @Test\n     public void containsKeyTest() {\n-        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"key\"));\n+        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"Key\"));\n+        envFriendlyConfiguration.setProperty(\"Key\", \"value\");\n+        assertTrue(\"The key is not contained!\", envFriendlyConfiguration.containsKey(\"Key\"));", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java\nindex a82eb84659..f803c4af7e 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java\n\n@@ -21,15 +21,15 @@ import org.junit.experimental.categories.Category;\n @Category(JUnitTests.class)\n public class EnvFriendlyConfigurationTest extends Assert {\n \n+    CompositeConfiguration compositeConfiguration;\n+    EnvFriendlyConfiguration envFriendlyConfiguration;\n+\n     @Before\n     public void createInstanceOfClass() {\n         envFriendlyConfiguration = new EnvFriendlyConfiguration();\n         compositeConfiguration = new CompositeConfiguration();\n     }\n \n-    CompositeConfiguration compositeConfiguration;\n-    EnvFriendlyConfiguration envFriendlyConfiguration;\n-\n     @Test\n     public void getKeysTest() {\n         assertFalse(\"The next item exists!\", envFriendlyConfiguration.getKeys().hasNext());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMDgxMQ==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496630811", "bodyText": "Please change message from \"The key is not contained\" to \"There is no key!\"", "author": "LeoNerdoG", "createdAt": "2020-09-29T11:06:50Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java", "diffHunk": "@@ -33,25 +33,39 @@ public void createInstanceOfClasses() {\n     @Test\n     public void getKeysTest() {\n         assertFalse(\"The next item exists!\", envFriendlyConfiguration.getKeys().hasNext());\n+        envFriendlyConfiguration.setProperty(\"Key1\", \"value1\");\n+        assertTrue(\"The next item does not exist!\", envFriendlyConfiguration.getKeys().hasNext());\n     }\n \n     @Test\n     public void getPropertyTest() {\n         assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(\"property\"));\n+        envFriendlyConfiguration.setProperty(\"key\", \"value\");\n+        envFriendlyConfiguration.setProperty(\"KEY_PROPERTY\", 10);\n+        assertEquals(\"Expected and actual values should be the same!\", \"value\", envFriendlyConfiguration.getProperty(\"key\"));\n+        assertEquals(\"Expected and actual values should be the same!\", 10, envFriendlyConfiguration.getProperty(\"key.property\"));\n     }\n \n     @Test\n     public void getPropertyEmptyTest() {\n         assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(\"\"));\n+        envFriendlyConfiguration.setProperty(\"\", \"value\");\n+        assertEquals(\"Expected and actual values should be the same!\", \"value\", envFriendlyConfiguration.getProperty(\"\"));\n     }\n \n     @Test(expected = NullPointerException.class)\n     public void getPropertyNullTest() {\n-        assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(null));\n+        envFriendlyConfiguration.getProperty(null);\n     }\n \n     @Test\n     public void containsKeyTest() {\n-        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"key\"));\n+        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"Key\"));\n+        envFriendlyConfiguration.setProperty(\"Key\", \"value\");\n+        assertTrue(\"The key is not contained!\", envFriendlyConfiguration.containsKey(\"Key\"));\n+        envFriendlyConfiguration.clearProperty(\"Key\");\n+        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"Key\"));\n+        envFriendlyConfiguration.setProperty(\"KEY_PROPERTY\", 10);\n+        assertTrue(\"The key is not contained!\", envFriendlyConfiguration.containsKey(\"key.property\"));", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java\nindex a82eb84659..f803c4af7e 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java\n\n@@ -21,15 +21,15 @@ import org.junit.experimental.categories.Category;\n @Category(JUnitTests.class)\n public class EnvFriendlyConfigurationTest extends Assert {\n \n+    CompositeConfiguration compositeConfiguration;\n+    EnvFriendlyConfiguration envFriendlyConfiguration;\n+\n     @Before\n     public void createInstanceOfClass() {\n         envFriendlyConfiguration = new EnvFriendlyConfiguration();\n         compositeConfiguration = new CompositeConfiguration();\n     }\n \n-    CompositeConfiguration compositeConfiguration;\n-    EnvFriendlyConfiguration envFriendlyConfiguration;\n-\n     @Test\n     public void getKeysTest() {\n         assertFalse(\"The next item exists!\", envFriendlyConfiguration.getKeys().hasNext());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMjQwNA==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496632404", "bodyText": "Please rename this test to: \"throwingKapuaSettingErrorCodes\"", "author": "LeoNerdoG", "createdAt": "2020-09-29T11:09:55Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java", "diffHunk": "@@ -20,72 +20,114 @@\n public class KapuaSettingExceptionTest extends Assert {\n \n     Throwable throwable = new Throwable(\"throwable_error_message\");\n+    String kapuaErrorMessage = \"kapua-setting-service-error-messages\";\n+    KapuaSettingErrorCodes[] kapuaSettingErrorCodes = {KapuaSettingErrorCodes.INVALID_RESOURCE_FILE, KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, KapuaSettingErrorCodes.RESOURCE_NOT_FOUND};\n \n     @Test\n-    public void constructorNullTest() {\n+    public void kapuaSettingExceptionNullTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(null);\n         assertNull(\"Null expected!\", kapuaSettingException.getCode());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceNameTest() {\n+    public void kapuaSettingExceptionInvalidResourceNameTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceFileTest() {\n+    public void kapuaSettingExceptionInvalidResourceFileTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_FILE);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_FILE\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorResourceNotFoundTest() {\n+    public void kapuaSettingExceptionResourceNotFoundTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.RESOURCE_NOT_FOUND);\n         assertEquals(\"Expected and actual values should be the same!\", \"RESOURCE_NOT_FOUND\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithObjectArgTest() {\n+    public void kapuaSettingExceptionWithObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+            assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + value, kapuaSettingException.getMessage());\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n         }\n     }\n \n     @Test\n-    public void extendedConstructorWithNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertEquals(\"Expected and actual values should be the same!\", throwable, kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithNullThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, null, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertNull(\"Expected and actual values should be the same!\", kapuaSettingException.getCause());\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndObjectArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertEquals(\"Null expected!\", throwable, kapuaSettingException.getCause());\n             assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesTest() throws KapuaSettingException {", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java\nindex 9c63619d15..a6d9e631b1 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java\n\n@@ -111,21 +111,21 @@ public class KapuaSettingExceptionTest extends Assert {\n     }\n \n     @Test(expected = KapuaSettingException.class)\n-    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesTest() throws KapuaSettingException {\n+    public void throwingKapuaSettingErrorCodesTest() throws KapuaSettingException {\n         for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n             throw new KapuaSettingException(code);\n         }\n     }\n \n     @Test(expected = KapuaSettingException.class)\n-    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesArgumentsTest() throws KapuaSettingException {\n+    public void throwingKapuaSettingErrorCodesWithArgumentsTest() throws KapuaSettingException {\n         for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n             throw new KapuaSettingException(code, \"String\", true, 1, 10L);\n         }\n     }\n \n     @Test(expected = KapuaSettingException.class)\n-    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesCauseArgumentsTest() throws KapuaSettingException {\n+    public void throwingKapuaSettingErrorCodesWithCauseAndArgumentsTest() throws KapuaSettingException {\n         for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n             throw new KapuaSettingException(code, new Throwable(), \"String\", true, 1, 10L);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMjUxOA==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496632518", "bodyText": "Please rename this test to: \"throwingKapuaSettingErrorCodesWithArguments\"", "author": "LeoNerdoG", "createdAt": "2020-09-29T11:10:07Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java", "diffHunk": "@@ -20,72 +20,114 @@\n public class KapuaSettingExceptionTest extends Assert {\n \n     Throwable throwable = new Throwable(\"throwable_error_message\");\n+    String kapuaErrorMessage = \"kapua-setting-service-error-messages\";\n+    KapuaSettingErrorCodes[] kapuaSettingErrorCodes = {KapuaSettingErrorCodes.INVALID_RESOURCE_FILE, KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, KapuaSettingErrorCodes.RESOURCE_NOT_FOUND};\n \n     @Test\n-    public void constructorNullTest() {\n+    public void kapuaSettingExceptionNullTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(null);\n         assertNull(\"Null expected!\", kapuaSettingException.getCode());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceNameTest() {\n+    public void kapuaSettingExceptionInvalidResourceNameTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceFileTest() {\n+    public void kapuaSettingExceptionInvalidResourceFileTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_FILE);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_FILE\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorResourceNotFoundTest() {\n+    public void kapuaSettingExceptionResourceNotFoundTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.RESOURCE_NOT_FOUND);\n         assertEquals(\"Expected and actual values should be the same!\", \"RESOURCE_NOT_FOUND\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithObjectArgTest() {\n+    public void kapuaSettingExceptionWithObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+            assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + value, kapuaSettingException.getMessage());\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n         }\n     }\n \n     @Test\n-    public void extendedConstructorWithNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertEquals(\"Expected and actual values should be the same!\", throwable, kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithNullThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, null, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertNull(\"Expected and actual values should be the same!\", kapuaSettingException.getCause());\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndObjectArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertEquals(\"Null expected!\", throwable, kapuaSettingException.getCause());\n             assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesTest() throws KapuaSettingException {\n+        for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n+            throw new KapuaSettingException(code);\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesArgumentsTest() throws KapuaSettingException {", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java\nindex 9c63619d15..a6d9e631b1 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java\n\n@@ -111,21 +111,21 @@ public class KapuaSettingExceptionTest extends Assert {\n     }\n \n     @Test(expected = KapuaSettingException.class)\n-    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesTest() throws KapuaSettingException {\n+    public void throwingKapuaSettingErrorCodesTest() throws KapuaSettingException {\n         for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n             throw new KapuaSettingException(code);\n         }\n     }\n \n     @Test(expected = KapuaSettingException.class)\n-    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesArgumentsTest() throws KapuaSettingException {\n+    public void throwingKapuaSettingErrorCodesWithArgumentsTest() throws KapuaSettingException {\n         for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n             throw new KapuaSettingException(code, \"String\", true, 1, 10L);\n         }\n     }\n \n     @Test(expected = KapuaSettingException.class)\n-    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesCauseArgumentsTest() throws KapuaSettingException {\n+    public void throwingKapuaSettingErrorCodesWithCauseAndArgumentsTest() throws KapuaSettingException {\n         for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n             throw new KapuaSettingException(code, new Throwable(), \"String\", true, 1, 10L);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMjcyMA==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496632720", "bodyText": "Please rename this test to: \"throwingKapuaSettingErrorCodesWithCauseAndArguments\"", "author": "LeoNerdoG", "createdAt": "2020-09-29T11:10:28Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java", "diffHunk": "@@ -20,72 +20,114 @@\n public class KapuaSettingExceptionTest extends Assert {\n \n     Throwable throwable = new Throwable(\"throwable_error_message\");\n+    String kapuaErrorMessage = \"kapua-setting-service-error-messages\";\n+    KapuaSettingErrorCodes[] kapuaSettingErrorCodes = {KapuaSettingErrorCodes.INVALID_RESOURCE_FILE, KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, KapuaSettingErrorCodes.RESOURCE_NOT_FOUND};\n \n     @Test\n-    public void constructorNullTest() {\n+    public void kapuaSettingExceptionNullTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(null);\n         assertNull(\"Null expected!\", kapuaSettingException.getCode());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceNameTest() {\n+    public void kapuaSettingExceptionInvalidResourceNameTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceFileTest() {\n+    public void kapuaSettingExceptionInvalidResourceFileTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_FILE);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_FILE\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorResourceNotFoundTest() {\n+    public void kapuaSettingExceptionResourceNotFoundTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.RESOURCE_NOT_FOUND);\n         assertEquals(\"Expected and actual values should be the same!\", \"RESOURCE_NOT_FOUND\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithObjectArgTest() {\n+    public void kapuaSettingExceptionWithObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+            assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + value, kapuaSettingException.getMessage());\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n         }\n     }\n \n     @Test\n-    public void extendedConstructorWithNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertEquals(\"Expected and actual values should be the same!\", throwable, kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithNullThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, null, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertNull(\"Expected and actual values should be the same!\", kapuaSettingException.getCause());\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndObjectArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertEquals(\"Null expected!\", throwable, kapuaSettingException.getCause());\n             assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesTest() throws KapuaSettingException {\n+        for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n+            throw new KapuaSettingException(code);\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesArgumentsTest() throws KapuaSettingException {\n+        for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n+            throw new KapuaSettingException(code, \"String\", true, 1, 10L);\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesCauseArgumentsTest() throws KapuaSettingException {", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java b/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java\nindex 9c63619d15..a6d9e631b1 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java\n\n@@ -111,21 +111,21 @@ public class KapuaSettingExceptionTest extends Assert {\n     }\n \n     @Test(expected = KapuaSettingException.class)\n-    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesTest() throws KapuaSettingException {\n+    public void throwingKapuaSettingErrorCodesTest() throws KapuaSettingException {\n         for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n             throw new KapuaSettingException(code);\n         }\n     }\n \n     @Test(expected = KapuaSettingException.class)\n-    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesArgumentsTest() throws KapuaSettingException {\n+    public void throwingKapuaSettingErrorCodesWithArgumentsTest() throws KapuaSettingException {\n         for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n             throw new KapuaSettingException(code, \"String\", true, 1, 10L);\n         }\n     }\n \n     @Test(expected = KapuaSettingException.class)\n-    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesCauseArgumentsTest() throws KapuaSettingException {\n+    public void throwingKapuaSettingErrorCodesWithCauseAndArgumentsTest() throws KapuaSettingException {\n         for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n             throw new KapuaSettingException(code, new Throwable(), \"String\", true, 1, 10L);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzNjc2Mw==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496636763", "bodyText": "Please delete this line.", "author": "LeoNerdoG", "createdAt": "2020-09-29T11:17:54Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java", "diffHunk": "@@ -16,9 +16,61 @@\n \n public class SemanticVersionTest extends Assert {\n \n+    @Test(expected = NullPointerException.class)\n+    public void semanticVersionNullTest() {\n+        SemanticVersion semanticVersion = new SemanticVersion(null);\n+    }\n+\n     @Test\n-    public void semanticVersionAfterTest() {\n+    //(expected = NullPointerException.class)", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java b/commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java\nindex 227bf3ea18..423aa72ed5 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java\n\n@@ -22,7 +22,6 @@ public class SemanticVersionTest extends Assert {\n     }\n \n     @Test\n-    //(expected = NullPointerException.class)\n     public void semanticVersionEmptyTest() {\n         SemanticVersion semanticVersion = new SemanticVersion(\"\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0NDE1Ng==", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496644156", "bodyText": "Please delete empty line.", "author": "LeoNerdoG", "createdAt": "2020-09-29T11:32:32Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java", "diffHunk": "@@ -260,16 +330,178 @@ public void semanticVersionBeforeTest() {\n         for (int i = 0; i < semanticVersionLettersBeforeFalse.length; i++) {\n             try {\n                 assertTrue(new SemanticVersion(semanticVersionLettersBeforeFalse[i]).before(new SemanticVersion(semanticVersionLettersToCompareFalse[i])));\n+                fail(\"AssertionError expected\");\n             } catch (AssertionError e) {\n                 //Expected\n             }\n         }\n+\n+        try {\n+            assertTrue(new SemanticVersion(semanticMajorVersionToCompare).before(new SemanticVersion(semanticMajorVersion)));\n+            fail(\"NullPointerException expected\");\n+        } catch (Exception e) {\n+            //Expected\n+        }\n     }\n \n     @Test\n     public void semanticVersionToStringTest() {\n-\n         assertEquals(\"1.2.3\", new SemanticVersion(\"1.2.3\").toString());\n         assertEquals(\"1.2.3\", new SemanticVersion.VersionToken(\"1.2.3\").toString());\n     }\n+\n+    @Test\n+    public void versionTokenNullTest() {\n+        SemanticVersion.VersionToken versionToken = new SemanticVersion.VersionToken(null);\n+        assertNull(\"Null expected.\", versionToken.getVersionInteger());\n+        assertFalse(\"False expected.\", versionToken.isIntegerComparison());\n+        assertNull(\"Null expected.\", versionToken.getVersionString());\n+", "originalCommit": "49394930a4511f1d382259501d455a4cd8520a66", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java b/commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java\nindex 227bf3ea18..423aa72ed5 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java\n\n@@ -356,7 +354,6 @@ public class SemanticVersionTest extends Assert {\n         assertNull(\"Null expected.\", versionToken.getVersionInteger());\n         assertFalse(\"False expected.\", versionToken.isIntegerComparison());\n         assertNull(\"Null expected.\", versionToken.getVersionString());\n-\n     }\n \n     @Test\n"}}, {"oid": "7273743125810bd0f2d7df8e4cdfb5aae42cc771", "url": "https://github.com/eclipse/kapua/commit/7273743125810bd0f2d7df8e4cdfb5aae42cc771", "message": "Added Junit tests in commons/util and commons/setting packages\n\nAdded Junit tests in commons module:\n\nutil package:\nClassUtil class\nKapuaFileUtils class\nSemanticVersion class\nStringUtil class\n\nsetting package:\nAbstractKapuaSetting class\nEnvFriendlyConfiguration class\nKapuaSettingException class\nSimpleSettingKey class\nSystemSettingKey class\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>", "committedDate": "2020-09-29T12:52:14Z", "type": "forcePushed"}, {"oid": "09f1eb74164133bc350036760424d06f44371f9a", "url": "https://github.com/eclipse/kapua/commit/09f1eb74164133bc350036760424d06f44371f9a", "message": "Added Junit tests in commons/util and commons/setting packages\n\nAdded Junit tests in commons module:\n\nutil package:\nClassUtil class\nKapuaFileUtils class\nSemanticVersion class\nStringUtil class\n\nsetting package:\nAbstractKapuaSetting class\nEnvFriendlyConfiguration class\nKapuaSettingException class\nSimpleSettingKey class\nSystemSettingKey class\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>", "committedDate": "2020-09-30T10:15:03Z", "type": "commit"}, {"oid": "09f1eb74164133bc350036760424d06f44371f9a", "url": "https://github.com/eclipse/kapua/commit/09f1eb74164133bc350036760424d06f44371f9a", "message": "Added Junit tests in commons/util and commons/setting packages\n\nAdded Junit tests in commons module:\n\nutil package:\nClassUtil class\nKapuaFileUtils class\nSemanticVersion class\nStringUtil class\n\nsetting package:\nAbstractKapuaSetting class\nEnvFriendlyConfiguration class\nKapuaSettingException class\nSimpleSettingKey class\nSystemSettingKey class\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>", "committedDate": "2020-09-30T10:15:03Z", "type": "forcePushed"}]}