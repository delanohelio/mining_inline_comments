{"pr_number": 3015, "pr_title": "Added Junit Tests", "pr_createdAt": "2020-07-06T10:02:27Z", "pr_url": "https://github.com/eclipse/kapua/pull/3015", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyMzc3Nw==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459923777", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:38:32Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.about;\n+\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+\n+@Category(JUnitTests.class)\n+public class AboutEntryTest extends Assert {\n+\n+    private String[] names;\n+    private String[] texts;\n+    private URL[] urls;\n+    private ArrayList<AboutEntry.License> licenseList;\n+\n+    @Before\n+    public void initialize() throws MalformedURLException {\n+        names = new String[]{\"Name\", null};\n+        texts = new String[]{\"Text\", null};\n+        String validSpec = \"https://www.google.com\";\n+        urls = new URL[]{new URL(validSpec), null};\n+        licenseList = new ArrayList<>();\n+    }\n+\n+    @Test\n+    public void aboutEntryLicenseTest() {\n+        for (String name : names) {\n+            for (String text : texts) {\n+                for (URL url : urls) {\n+                    AboutEntry.License license = new AboutEntry.License(name, text, url);\n+                    assertEquals(\"Expected and actual values should be the same.\", name, license.getName());\n+                    assertEquals(\"Expected and actual values should be the same.\", text, license.getText());\n+                    assertEquals(\"Expected and actual values should be the same.\", url, license.getUrl());\n+                    assertNotNull(\"Null not expected.\", license);", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java b/commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java\nindex da920ba78a..804e239981 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java\n\n@@ -12,7 +12,6 @@\n package org.eclipse.kapua.commons.about;\n \n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyMzgzOA==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459923838", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:38:41Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.about;\n+\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+\n+@Category(JUnitTests.class)\n+public class AboutEntryTest extends Assert {\n+\n+    private String[] names;\n+    private String[] texts;\n+    private URL[] urls;\n+    private ArrayList<AboutEntry.License> licenseList;\n+\n+    @Before\n+    public void initialize() throws MalformedURLException {\n+        names = new String[]{\"Name\", null};\n+        texts = new String[]{\"Text\", null};\n+        String validSpec = \"https://www.google.com\";\n+        urls = new URL[]{new URL(validSpec), null};\n+        licenseList = new ArrayList<>();\n+    }\n+\n+    @Test\n+    public void aboutEntryLicenseTest() {\n+        for (String name : names) {\n+            for (String text : texts) {\n+                for (URL url : urls) {\n+                    AboutEntry.License license = new AboutEntry.License(name, text, url);\n+                    assertEquals(\"Expected and actual values should be the same.\", name, license.getName());\n+                    assertEquals(\"Expected and actual values should be the same.\", text, license.getText());\n+                    assertEquals(\"Expected and actual values should be the same.\", url, license.getUrl());\n+                    assertNotNull(\"Null not expected.\", license);\n+                    assertThat(\"AboutEntry.License object expected.\", license, IsInstanceOf.instanceOf(AboutEntry.License.class));", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java b/commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java\nindex da920ba78a..804e239981 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/about/AboutEntryTest.java\n\n@@ -12,7 +12,6 @@\n package org.eclipse.kapua.commons.about;\n \n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNTA2MA==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459925060", "bodyText": "For example in this case this makes sense.\nThere is no new and AboutScanner.scan() can return null even if is not designed to, if someone changes the implementation of scan()", "author": "Coduz", "createdAt": "2020-07-24T08:41:20Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/about/AboutScannerTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.about;\n+\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.reflections.util.ClasspathHelper;\n+\n+import java.lang.reflect.Field;\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+@Category(JUnitTests.class)\n+public class AboutScannerTest extends Assert {\n+\n+    @Test\n+    public void scanTest() {\n+        final AboutScanner scanner = AboutScanner.scan();\n+        assertNotNull(\"Null not expected\", scanner);", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNTc2MQ==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459925761", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:42:57Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.event.store.internal;\n+\n+import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EventStoreQueryImplTest extends Assert {\n+\n+    @Test\n+    public void eventStoreQueryImplTest1() {\n+        EventStoreQueryImpl eventStoreQueryImpl = new EventStoreQueryImpl();\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl);", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\nindex cc9b854271..c1d8968bc5 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n\n@@ -11,11 +11,9 @@\n  *******************************************************************************/\n package org.eclipse.kapua.commons.service.event.store.internal;\n \n-import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNTg2NQ==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459925865", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:43:11Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.event.store.internal;\n+\n+import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EventStoreQueryImplTest extends Assert {\n+\n+    @Test\n+    public void eventStoreQueryImplTest1() {\n+        EventStoreQueryImpl eventStoreQueryImpl = new EventStoreQueryImpl();\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl);\n+        assertThat(\"EventStoreQueryImpl object expected.\", eventStoreQueryImpl, IsInstanceOf.instanceOf(EventStoreQueryImpl.class));", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\nindex cc9b854271..c1d8968bc5 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n\n@@ -11,11 +11,9 @@\n  *******************************************************************************/\n package org.eclipse.kapua.commons.service.event.store.internal;\n \n-import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNTk1OA==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459925958", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:43:24Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.event.store.internal;\n+\n+import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EventStoreQueryImplTest extends Assert {\n+\n+    @Test\n+    public void eventStoreQueryImplTest1() {\n+        EventStoreQueryImpl eventStoreQueryImpl = new EventStoreQueryImpl();\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl);\n+        assertThat(\"EventStoreQueryImpl object expected.\", eventStoreQueryImpl, IsInstanceOf.instanceOf(EventStoreQueryImpl.class));\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl.getSortCriteria());\n+        assertThat(\"FieldSortCriteriaImpl object expected.\", eventStoreQueryImpl.getSortCriteria(), IsInstanceOf.instanceOf(FieldSortCriteriaImpl.class));\n+    }\n+\n+    @Test\n+    public void eventStoreQueryImplTest2() {\n+        KapuaId[] scopeIdList = {new KapuaIdStatic(BigInteger.ONE), new KapuaIdStatic(BigInteger.TEN), new KapuaIdStatic(BigInteger.ZERO)};\n+\n+        EventStoreQueryImpl eventStoreQueryImpl1 = new EventStoreQueryImpl(null);\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl1);", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\nindex cc9b854271..c1d8968bc5 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n\n@@ -11,11 +11,9 @@\n  *******************************************************************************/\n package org.eclipse.kapua.commons.service.event.store.internal;\n \n-import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNjAwNQ==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459926005", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:43:32Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.event.store.internal;\n+\n+import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EventStoreQueryImplTest extends Assert {\n+\n+    @Test\n+    public void eventStoreQueryImplTest1() {\n+        EventStoreQueryImpl eventStoreQueryImpl = new EventStoreQueryImpl();\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl);\n+        assertThat(\"EventStoreQueryImpl object expected.\", eventStoreQueryImpl, IsInstanceOf.instanceOf(EventStoreQueryImpl.class));\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl.getSortCriteria());\n+        assertThat(\"FieldSortCriteriaImpl object expected.\", eventStoreQueryImpl.getSortCriteria(), IsInstanceOf.instanceOf(FieldSortCriteriaImpl.class));\n+    }\n+\n+    @Test\n+    public void eventStoreQueryImplTest2() {\n+        KapuaId[] scopeIdList = {new KapuaIdStatic(BigInteger.ONE), new KapuaIdStatic(BigInteger.TEN), new KapuaIdStatic(BigInteger.ZERO)};\n+\n+        EventStoreQueryImpl eventStoreQueryImpl1 = new EventStoreQueryImpl(null);\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl1);\n+        assertThat(\"EventStoreQueryImpl object expected.\", eventStoreQueryImpl1, IsInstanceOf.instanceOf(EventStoreQueryImpl.class));", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\nindex cc9b854271..c1d8968bc5 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n\n@@ -11,11 +11,9 @@\n  *******************************************************************************/\n package org.eclipse.kapua.commons.service.event.store.internal;\n \n-import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNjA3Nw==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459926077", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:43:40Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.event.store.internal;\n+\n+import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EventStoreQueryImplTest extends Assert {\n+\n+    @Test\n+    public void eventStoreQueryImplTest1() {\n+        EventStoreQueryImpl eventStoreQueryImpl = new EventStoreQueryImpl();\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl);\n+        assertThat(\"EventStoreQueryImpl object expected.\", eventStoreQueryImpl, IsInstanceOf.instanceOf(EventStoreQueryImpl.class));\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl.getSortCriteria());\n+        assertThat(\"FieldSortCriteriaImpl object expected.\", eventStoreQueryImpl.getSortCriteria(), IsInstanceOf.instanceOf(FieldSortCriteriaImpl.class));\n+    }\n+\n+    @Test\n+    public void eventStoreQueryImplTest2() {\n+        KapuaId[] scopeIdList = {new KapuaIdStatic(BigInteger.ONE), new KapuaIdStatic(BigInteger.TEN), new KapuaIdStatic(BigInteger.ZERO)};\n+\n+        EventStoreQueryImpl eventStoreQueryImpl1 = new EventStoreQueryImpl(null);\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl1);\n+        assertThat(\"EventStoreQueryImpl object expected.\", eventStoreQueryImpl1, IsInstanceOf.instanceOf(EventStoreQueryImpl.class));\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl1.getSortCriteria());\n+        assertThat(\"FieldSortCriteriaImpl object expected.\", eventStoreQueryImpl1.getSortCriteria(), IsInstanceOf.instanceOf(FieldSortCriteriaImpl.class));\n+        assertNull(\"Null expected.\", eventStoreQueryImpl1.getScopeId());\n+\n+        for (KapuaId scopeId : scopeIdList) {\n+            EventStoreQueryImpl eventStoreQueryImpl2 = new EventStoreQueryImpl(scopeId);\n+            assertNotNull(\"Null not expected.\", eventStoreQueryImpl2);", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\nindex cc9b854271..c1d8968bc5 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n\n@@ -11,11 +11,9 @@\n  *******************************************************************************/\n package org.eclipse.kapua.commons.service.event.store.internal;\n \n-import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNjEyNg==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459926126", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:43:49Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.event.store.internal;\n+\n+import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EventStoreQueryImplTest extends Assert {\n+\n+    @Test\n+    public void eventStoreQueryImplTest1() {\n+        EventStoreQueryImpl eventStoreQueryImpl = new EventStoreQueryImpl();\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl);\n+        assertThat(\"EventStoreQueryImpl object expected.\", eventStoreQueryImpl, IsInstanceOf.instanceOf(EventStoreQueryImpl.class));\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl.getSortCriteria());\n+        assertThat(\"FieldSortCriteriaImpl object expected.\", eventStoreQueryImpl.getSortCriteria(), IsInstanceOf.instanceOf(FieldSortCriteriaImpl.class));\n+    }\n+\n+    @Test\n+    public void eventStoreQueryImplTest2() {\n+        KapuaId[] scopeIdList = {new KapuaIdStatic(BigInteger.ONE), new KapuaIdStatic(BigInteger.TEN), new KapuaIdStatic(BigInteger.ZERO)};\n+\n+        EventStoreQueryImpl eventStoreQueryImpl1 = new EventStoreQueryImpl(null);\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl1);\n+        assertThat(\"EventStoreQueryImpl object expected.\", eventStoreQueryImpl1, IsInstanceOf.instanceOf(EventStoreQueryImpl.class));\n+        assertNotNull(\"Null not expected.\", eventStoreQueryImpl1.getSortCriteria());\n+        assertThat(\"FieldSortCriteriaImpl object expected.\", eventStoreQueryImpl1.getSortCriteria(), IsInstanceOf.instanceOf(FieldSortCriteriaImpl.class));\n+        assertNull(\"Null expected.\", eventStoreQueryImpl1.getScopeId());\n+\n+        for (KapuaId scopeId : scopeIdList) {\n+            EventStoreQueryImpl eventStoreQueryImpl2 = new EventStoreQueryImpl(scopeId);\n+            assertNotNull(\"Null not expected.\", eventStoreQueryImpl2);\n+            assertThat(\"EventStoreQueryImpl object expected.\", eventStoreQueryImpl2, IsInstanceOf.instanceOf(EventStoreQueryImpl.class));", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\nindex cc9b854271..c1d8968bc5 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreQueryImplTest.java\n\n@@ -11,11 +11,9 @@\n  *******************************************************************************/\n package org.eclipse.kapua.commons.service.event.store.internal;\n \n-import org.eclipse.kapua.commons.model.query.FieldSortCriteriaImpl;\n import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNjM5MQ==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459926391", "bodyText": "Same as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R103", "author": "Coduz", "createdAt": "2020-07-24T08:44:24Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.event.store.internal;\n+\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EventStoreRecordCreatorImplTest extends Assert {\n+    @Test\n+    public void eventStoreRecordCreatorImplTest() {\n+        KapuaId[] scopeIdList = {null, new KapuaIdStatic(BigInteger.ONE), new KapuaIdStatic(BigInteger.TEN), new KapuaIdStatic(BigInteger.ZERO)};", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java\nindex 73da7ebb61..0c088d4c65 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java\n\n@@ -14,7 +14,6 @@ package org.eclipse.kapua.commons.service.event.store.internal;\n import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNjQ0Ng==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459926446", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:44:34Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.event.store.internal;\n+\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EventStoreRecordCreatorImplTest extends Assert {\n+    @Test\n+    public void eventStoreRecordCreatorImplTest() {\n+        KapuaId[] scopeIdList = {null, new KapuaIdStatic(BigInteger.ONE), new KapuaIdStatic(BigInteger.TEN), new KapuaIdStatic(BigInteger.ZERO)};\n+\n+        for (KapuaId scopeId : scopeIdList) {\n+            EventStoreRecordCreatorImpl eventStoreRecordCreatorImpl = new EventStoreRecordCreatorImpl(scopeId);\n+            assertNotNull(\"Null not expected.\", eventStoreRecordCreatorImpl);", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java\nindex 73da7ebb61..0c088d4c65 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java\n\n@@ -14,7 +14,6 @@ package org.eclipse.kapua.commons.service.event.store.internal;\n import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNjY3OA==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459926678", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:45:06Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.event.store.internal;\n+\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EventStoreRecordCreatorImplTest extends Assert {\n+    @Test\n+    public void eventStoreRecordCreatorImplTest() {\n+        KapuaId[] scopeIdList = {null, new KapuaIdStatic(BigInteger.ONE), new KapuaIdStatic(BigInteger.TEN), new KapuaIdStatic(BigInteger.ZERO)};\n+\n+        for (KapuaId scopeId : scopeIdList) {\n+            EventStoreRecordCreatorImpl eventStoreRecordCreatorImpl = new EventStoreRecordCreatorImpl(scopeId);\n+            assertNotNull(\"Null not expected.\", eventStoreRecordCreatorImpl);\n+            assertEquals(\"Expected and actual values should be the same.\", scopeId, eventStoreRecordCreatorImpl.getScopeId());\n+            assertThat(\"EventStoreRecordCreatorImpl object expected.\", eventStoreRecordCreatorImpl, IsInstanceOf.instanceOf(EventStoreRecordCreatorImpl.class));", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java\nindex 73da7ebb61..0c088d4c65 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/event/store/internal/EventStoreRecordCreatorImplTest.java\n\n@@ -14,7 +14,6 @@ package org.eclipse.kapua.commons.service.event.store.internal;\n import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNjgxOA==", "url": "https://github.com/eclipse/kapua/pull/3015#discussion_r459926818", "bodyText": "Same things as #3008 - https://github.com/eclipse/kapua/pull/3008/files#diff-031d59073d14c177c331d7ce9d2a83d8R67", "author": "Coduz", "createdAt": "2020-07-24T08:45:19Z", "path": "commons/src/test/java/org/eclipse/kapua/commons/service/internal/cache/EntityCacheTest.java", "diffHunk": "@@ -0,0 +1,285 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.service.internal.cache;\n+\n+import com.codahale.metrics.Counter;\n+import org.eclipse.kapua.commons.metric.MetricServiceFactory;\n+import org.eclipse.kapua.commons.model.query.KapuaListResultImpl;\n+import org.eclipse.kapua.model.KapuaEntity;\n+import org.eclipse.kapua.model.id.KapuaId;\n+import org.eclipse.kapua.model.id.KapuaIdStatic;\n+import org.eclipse.kapua.model.query.KapuaListResult;\n+import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n+import org.hamcrest.core.IsInstanceOf;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import javax.cache.Cache;\n+import java.io.Serializable;\n+import java.math.BigInteger;\n+\n+@Category(JUnitTests.class)\n+public class EntityCacheTest extends Assert {\n+\n+    @Test\n+    public void entityCacheTest() {\n+        String idCacheName = \"idCacheName\";\n+        Cache<Serializable, Serializable> expectedIdCache = KapuaCacheManager.getCache(idCacheName);\n+        Cache<Serializable, Serializable> expectedListsCache = KapuaCacheManager.getCache(idCacheName + \"_list\");\n+        Counter expectedCacheMiss = MetricServiceFactory.getInstance().getCounter(\"commons\", \"cache\", \"entity\", \"miss\", \"count\");\n+        Counter expectedCacheHit = MetricServiceFactory.getInstance().getCounter(\"commons\", \"cache\", \"entity\", \"hit\", \"count\");\n+        Counter expectedCacheRemoval = MetricServiceFactory.getInstance().getCounter(\"commons\", \"cache\", \"entity\", \"removal\", \"count\");\n+        NullPointerException nullPointerException = new NullPointerException();\n+\n+        EntityCache entityCache = new EntityCache(idCacheName);\n+        assertNotNull(entityCache);", "originalCommit": "d8fd91d377ae7c7722979977e94f83b57a5b07e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "chunk": "diff --git a/commons/src/test/java/org/eclipse/kapua/commons/service/internal/cache/EntityCacheTest.java b/commons/src/test/java/org/eclipse/kapua/commons/service/internal/cache/EntityCacheTest.java\nindex fd53afa055..c617099e67 100644\n--- a/commons/src/test/java/org/eclipse/kapua/commons/service/internal/cache/EntityCacheTest.java\n+++ b/commons/src/test/java/org/eclipse/kapua/commons/service/internal/cache/EntityCacheTest.java\n\n@@ -19,7 +19,6 @@ import org.eclipse.kapua.model.id.KapuaId;\n import org.eclipse.kapua.model.id.KapuaIdStatic;\n import org.eclipse.kapua.model.query.KapuaListResult;\n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n-import org.hamcrest.core.IsInstanceOf;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"oid": "ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "url": "https://github.com/eclipse/kapua/commit/ee9c8e1481d5658639dacfaf1c5bfa9ff8a562d0", "message": "Added Junit Tests\n\nAdded Junit tests for AboutEntry class\nAdded Junit tests for AboutScanner class\nAdded Junit tests for EventStoreQueryImpl class\nAdded Junit tests for EventStoreRecordCreatorImpl class\nAdded Junit Tests for EntityCache class\nAdded Junit Tests for KapuaCacheManager class\nAdded Junit Tests for NamedEntityCache class\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>", "committedDate": "2020-07-29T06:56:44Z", "type": "forcePushed"}, {"oid": "f04ac5233aea1dca5a0e6f965ae56a2f2a3fa9e4", "url": "https://github.com/eclipse/kapua/commit/f04ac5233aea1dca5a0e6f965ae56a2f2a3fa9e4", "message": "Added Junit Tests\n\nAdded Junit tests for AboutEntry class\nAdded Junit tests for AboutScanner class\nAdded Junit tests for EventStoreQueryImpl class\nAdded Junit tests for EventStoreRecordCreatorImpl class\nAdded Junit Tests for EntityCache class\nAdded Junit Tests for KapuaCacheManager class\nAdded Junit Tests for NamedEntityCache class\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>", "committedDate": "2020-08-31T08:12:41Z", "type": "forcePushed"}, {"oid": "97c9aac1089835cea5b89563f261838939a94685", "url": "https://github.com/eclipse/kapua/commit/97c9aac1089835cea5b89563f261838939a94685", "message": "Added Junit Tests\n\nAdded Junit tests for AboutEntry class\nAdded Junit tests for AboutScanner class\nAdded Junit tests for EventStoreQueryImpl class\nAdded Junit tests for EventStoreRecordCreatorImpl class\nAdded Junit Tests for EntityCache class\nAdded Junit Tests for KapuaCacheManager class\nAdded Junit Tests for NamedEntityCache class\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>", "committedDate": "2020-09-02T10:13:44Z", "type": "forcePushed"}, {"oid": "8aa54ce097481df3a1e4d5c3c3e266b626b28112", "url": "https://github.com/eclipse/kapua/commit/8aa54ce097481df3a1e4d5c3c3e266b626b28112", "message": "Added Junit Tests\n\nAdded Junit tests for AboutEntry class\nAdded Junit tests for AboutScanner class\nAdded Junit tests for EventStoreQueryImpl class\nAdded Junit tests for EventStoreRecordCreatorImpl class\nAdded Junit Tests for EntityCache class\nAdded Junit Tests for KapuaCacheManager class\nAdded Junit Tests for NamedEntityCache class\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>", "committedDate": "2020-09-03T06:13:19Z", "type": "commit"}, {"oid": "8aa54ce097481df3a1e4d5c3c3e266b626b28112", "url": "https://github.com/eclipse/kapua/commit/8aa54ce097481df3a1e4d5c3c3e266b626b28112", "message": "Added Junit Tests\n\nAdded Junit tests for AboutEntry class\nAdded Junit tests for AboutScanner class\nAdded Junit tests for EventStoreQueryImpl class\nAdded Junit tests for EventStoreRecordCreatorImpl class\nAdded Junit Tests for EntityCache class\nAdded Junit Tests for KapuaCacheManager class\nAdded Junit Tests for NamedEntityCache class\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>", "committedDate": "2020-09-03T06:13:19Z", "type": "forcePushed"}]}