{"pr_number": 3218, "pr_title": "Expr max minecart speed", "pr_createdAt": "2020-07-26T10:50:35Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3218", "timeline": [{"oid": "8c4077da7e19bef79a8c28ce4a32bdcccbd06195", "url": "https://github.com/SkriptLang/Skript/commit/8c4077da7e19bef79a8c28ce4a32bdcccbd06195", "message": "Created ExprMaxMinecartSpeed", "committedDate": "2020-07-26T10:43:52Z", "type": "commit"}, {"oid": "52fcbd04ecea8aea0fc9c16d4d496384ad2d5c01", "url": "https://github.com/SkriptLang/Skript/commit/52fcbd04ecea8aea0fc9c16d4d496384ad2d5c01", "message": "Added the skript doc annotations", "committedDate": "2020-07-26T10:49:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxNDg5MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r460514891", "bodyText": "As stated before on Discord, the condition and void method should not be on the same line.", "author": "ShaneBeee", "createdAt": "2020-07-26T11:26:15Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null) {\n+\t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {\n+\t\t\t\tif (m instanceof Minecart) ((Minecart) m).setMaxSpeed(0.4);\n+\t\t\t});\n+\t\t\treturn;\n+\t\t}\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tgetExpr().stream(e).forEach(m -> {\n+\t\t\t\t\tif (m instanceof Minecart) ((Minecart) m).setMaxSpeed(((Number) delta[0]).doubleValue());", "originalCommit": "52fcbd04ecea8aea0fc9c16d4d496384ad2d5c01", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4cd31f5e092a75a86287bec699fc9631955b64eb", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\nindex ace4c1c0..1b19ec3f 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n\n@@ -59,14 +59,16 @@ public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Numbe\n \tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n \t\tif (delta == null) {\n \t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {\n-\t\t\t\tif (m instanceof Minecart) ((Minecart) m).setMaxSpeed(0.4);\n+\t\t\t\tif (m instanceof Minecart)\n+\t\t\t\t\t((Minecart) m).setMaxSpeed(0.4);\n \t\t\t});\n \t\t\treturn;\n \t\t}\n \t\tswitch (mode) {\n \t\t\tcase SET:\n \t\t\t\tgetExpr().stream(e).forEach(m -> {\n-\t\t\t\t\tif (m instanceof Minecart) ((Minecart) m).setMaxSpeed(((Number) delta[0]).doubleValue());\n+\t\t\t\t\tif (m instanceof Minecart)\n+\t\t\t\t\t\t((Minecart) m).setMaxSpeed(((Number) delta[0]).doubleValue());\n \t\t\t\t});\n \t\t\t\tbreak;\n \t\t\tcase ADD:\n"}}, {"oid": "4cd31f5e092a75a86287bec699fc9631955b64eb", "url": "https://github.com/SkriptLang/Skript/commit/4cd31f5e092a75a86287bec699fc9631955b64eb", "message": "Put the conditions and methods on separate lines", "committedDate": "2020-07-26T11:31:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0NDE1NA==", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r463244154", "bodyText": "the IF statement should be on it's own line", "author": "APickledWalrus", "createdAt": "2020-07-30T20:12:04Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null) {\n+\t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {", "originalCommit": "4cd31f5e092a75a86287bec699fc9631955b64eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c77e184afa2314219e0bcc52dac0239c678d6b9", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\nindex 1b19ec3f..62a3d308 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n\n@@ -52,18 +52,28 @@ public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Numbe\n \t@Nullable\n \t@Override\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\n-\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n \t}\n \t\n \t@Override\n \tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n \t\tif (delta == null) {\n-\t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {\n-\t\t\t\tif (m instanceof Minecart)\n-\t\t\t\t\t((Minecart) m).setMaxSpeed(0.4);\n-\t\t\t});\n+\t\t\tif (mode == ChangeMode.RESET)\n+\t\t\t\tgetExpr().stream(e).forEach(m -> {\n+\t\t\t\t\tif (m instanceof Minecart)\n+\t\t\t\t\t\t((Minecart) m).setMaxSpeed(0.4);\n+\t\t\t\t});\n \t\t\treturn;\n \t\t}\n+\t\tint mod = 1;\n \t\tswitch (mode) {\n \t\t\tcase SET:\n \t\t\t\tgetExpr().stream(e).forEach(m -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0NDQ1OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r463244459", "bodyText": "Can you put this statement into a switch?", "author": "APickledWalrus", "createdAt": "2020-07-30T20:12:41Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;", "originalCommit": "4cd31f5e092a75a86287bec699fc9631955b64eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c77e184afa2314219e0bcc52dac0239c678d6b9", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\nindex 1b19ec3f..62a3d308 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n\n@@ -52,18 +52,28 @@ public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Numbe\n \t@Nullable\n \t@Override\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\n-\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n \t}\n \t\n \t@Override\n \tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n \t\tif (delta == null) {\n-\t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {\n-\t\t\t\tif (m instanceof Minecart)\n-\t\t\t\t\t((Minecart) m).setMaxSpeed(0.4);\n-\t\t\t});\n+\t\t\tif (mode == ChangeMode.RESET)\n+\t\t\t\tgetExpr().stream(e).forEach(m -> {\n+\t\t\t\t\tif (m instanceof Minecart)\n+\t\t\t\t\t\t((Minecart) m).setMaxSpeed(0.4);\n+\t\t\t\t});\n \t\t\treturn;\n \t\t}\n+\t\tint mod = 1;\n \t\tswitch (mode) {\n \t\t\tcase SET:\n \t\t\t\tgetExpr().stream(e).forEach(m -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0NjM4OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r463246389", "bodyText": "Oh, also, can you switch these to for loops (based on other PRs / feedback to stay consistent)?", "author": "APickledWalrus", "createdAt": "2020-07-30T20:16:29Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null) {\n+\t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {\n+\t\t\t\tif (m instanceof Minecart)\n+\t\t\t\t\t((Minecart) m).setMaxSpeed(0.4);\n+\t\t\t});\n+\t\t\treturn;\n+\t\t}\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tgetExpr().stream(e).forEach(m -> {", "originalCommit": "4cd31f5e092a75a86287bec699fc9631955b64eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c77e184afa2314219e0bcc52dac0239c678d6b9", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\nindex 1b19ec3f..62a3d308 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n\n@@ -52,18 +52,28 @@ public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Numbe\n \t@Nullable\n \t@Override\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\n-\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n \t}\n \t\n \t@Override\n \tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n \t\tif (delta == null) {\n-\t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {\n-\t\t\t\tif (m instanceof Minecart)\n-\t\t\t\t\t((Minecart) m).setMaxSpeed(0.4);\n-\t\t\t});\n+\t\t\tif (mode == ChangeMode.RESET)\n+\t\t\t\tgetExpr().stream(e).forEach(m -> {\n+\t\t\t\t\tif (m instanceof Minecart)\n+\t\t\t\t\t\t((Minecart) m).setMaxSpeed(0.4);\n+\t\t\t\t});\n \t\t\treturn;\n \t\t}\n+\t\tint mod = 1;\n \t\tswitch (mode) {\n \t\t\tcase SET:\n \t\t\t\tgetExpr().stream(e).forEach(m -> {\n"}}, {"oid": "c27bb6d6f9494aff33ebcbf8f9546d0dda4eaf79", "url": "https://github.com/SkriptLang/Skript/commit/c27bb6d6f9494aff33ebcbf8f9546d0dda4eaf79", "message": "Merge branch 'master' into ExprMaxMinecartSpeed", "committedDate": "2020-07-31T11:01:00Z", "type": "commit"}, {"oid": "8c77e184afa2314219e0bcc52dac0239c678d6b9", "url": "https://github.com/SkriptLang/Skript/commit/8c77e184afa2314219e0bcc52dac0239c678d6b9", "message": "Updated everything (thanks apickledwalrus)", "committedDate": "2020-07-31T11:04:13Z", "type": "commit"}, {"oid": "edbaed329b0098094a2283e444532ad6aab4ae1f", "url": "https://github.com/SkriptLang/Skript/commit/edbaed329b0098094a2283e444532ad6aab4ae1f", "message": "Merge remote-tracking branch 'origin/ExprMaxMinecartSpeed' into ExprMaxMinecartSpeed", "committedDate": "2020-07-31T11:04:27Z", "type": "commit"}, {"oid": "3b2d9b989118088447a1f3560b7d6b99b92f9c67", "url": "https://github.com/SkriptLang/Skript/commit/3b2d9b989118088447a1f3560b7d6b99b92f9c67", "message": "Merge branch 'master' into ExprMaxMinecartSpeed", "committedDate": "2020-08-02T16:22:55Z", "type": "commit"}, {"oid": "b923798749dd19e57c4640b625b1308be5d0a474", "url": "https://github.com/SkriptLang/Skript/commit/b923798749dd19e57c4640b625b1308be5d0a474", "message": "Merge branch 'master' into ExprMaxMinecartSpeed", "committedDate": "2020-09-08T18:25:31Z", "type": "commit"}, {"oid": "549369bbc15bfb74c5c70f76f6b27a659a705414", "url": "https://github.com/SkriptLang/Skript/commit/549369bbc15bfb74c5c70f76f6b27a659a705414", "message": "Replaced streams with loops", "committedDate": "2020-09-26T09:47:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjQzMg==", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r495482432", "bodyText": "The switch statement should have a default case that asserts false", "author": "APickledWalrus", "createdAt": "2020-09-26T18:25:04Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {", "originalCommit": "549369bbc15bfb74c5c70f76f6b27a659a705414", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe70eda87639d30db9b0f1cc1cb7b710f9eb30b7", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\nindex 65d6296a..e274d223 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java\n\n@@ -91,6 +91,8 @@ public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Numbe\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tassert false;\n \t\t}\n \t}\n \t\n"}}, {"oid": "05f9c0ee8c4cd50e960bd5604f213690fa318693", "url": "https://github.com/SkriptLang/Skript/commit/05f9c0ee8c4cd50e960bd5604f213690fa318693", "message": "Merge branch 'master' into ExprMaxMinecartSpeed", "committedDate": "2020-09-26T18:31:34Z", "type": "commit"}, {"oid": "fe70eda87639d30db9b0f1cc1cb7b710f9eb30b7", "url": "https://github.com/SkriptLang/Skript/commit/fe70eda87639d30db9b0f1cc1cb7b710f9eb30b7", "message": "Added a default case", "committedDate": "2020-09-26T18:59:48Z", "type": "commit"}, {"oid": "23d98821ebedeedacf3eb225f802f866e2376f3b", "url": "https://github.com/SkriptLang/Skript/commit/23d98821ebedeedacf3eb225f802f866e2376f3b", "message": "Merge branch 'dev-2.5' into ExprMaxMinecartSpeed", "committedDate": "2020-10-04T19:47:10Z", "type": "commit"}, {"oid": "5bf876eab2618540c32e6f47bf65c0dbc9af3ad8", "url": "https://github.com/SkriptLang/Skript/commit/5bf876eab2618540c32e6f47bf65c0dbc9af3ad8", "message": "Merge branch 'dev-2.5' into ExprMaxMinecartSpeed", "committedDate": "2020-10-04T22:34:35Z", "type": "commit"}, {"oid": "92e06df22b6b48602a5f9b6a730fcb192dd4b1f6", "url": "https://github.com/SkriptLang/Skript/commit/92e06df22b6b48602a5f9b6a730fcb192dd4b1f6", "message": "Merge branch 'dev-2.5' into ExprMaxMinecartSpeed", "committedDate": "2020-10-05T12:09:27Z", "type": "commit"}, {"oid": "bc9258da3b04acf91eccfe1d08ba67fbd8fe5674", "url": "https://github.com/SkriptLang/Skript/commit/bc9258da3b04acf91eccfe1d08ba67fbd8fe5674", "message": "License changes", "committedDate": "2020-10-05T15:57:35Z", "type": "commit"}, {"oid": "d5c109ef768b79febbaeaf29872bb5efa122a8e1", "url": "https://github.com/SkriptLang/Skript/commit/d5c109ef768b79febbaeaf29872bb5efa122a8e1", "message": "Merge branch 'dev-2.5' into ExprMaxMinecartSpeed", "committedDate": "2020-10-06T21:55:55Z", "type": "commit"}]}