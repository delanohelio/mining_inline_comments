{"pr_number": 3223, "pr_title": "Added ExprWhitelist and CondServerIsWhitelisted", "pr_createdAt": "2020-07-26T14:22:40Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3223", "timeline": [{"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "url": "https://github.com/SkriptLang/Skript/commit/e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "message": "Added ExprWhitelist and CondServerIsWhitelisted", "committedDate": "2020-07-26T14:22:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTYzNg==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565636", "bodyText": "To keep with the continuity of other conditions, this should be Is Server Whitelisted", "author": "ShaneBeee", "createdAt": "2020-07-26T19:43:36Z", "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")", "originalCommit": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nsimilarity index 84%\nrename from src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java\nrename to src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nindex 6bd56c26..0bb2a031 100644\n--- a/src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n\n@@ -33,14 +33,14 @@ import ch.njol.skript.lang.Expression;\n import ch.njol.skript.lang.SkriptParser.ParseResult;\n import ch.njol.util.Kleenean;\n \n-@Name(\"Server Is Whitelisted\")\n-@Description(\"Whether or not the server is whitelisted\")\n-@Examples(\"if server is whitelisted\")\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n @Since(\"INSERT VERSION\")\n-public class CondServerIsWhitelisted extends Condition {\n+public class IsServerWhitelisted extends Condition {\n \t\n \tstatic {\n-\t\tSkript.registerCondition(CondServerIsWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n \t}\n \t\n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTY2Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565662", "bodyText": "This sentence should end with a period.", "author": "ShaneBeee", "createdAt": "2020-07-26T19:43:48Z", "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")", "originalCommit": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nsimilarity index 84%\nrename from src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java\nrename to src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nindex 6bd56c26..0bb2a031 100644\n--- a/src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n\n@@ -33,14 +33,14 @@ import ch.njol.skript.lang.Expression;\n import ch.njol.skript.lang.SkriptParser.ParseResult;\n import ch.njol.util.Kleenean;\n \n-@Name(\"Server Is Whitelisted\")\n-@Description(\"Whether or not the server is whitelisted\")\n-@Examples(\"if server is whitelisted\")\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n @Since(\"INSERT VERSION\")\n-public class CondServerIsWhitelisted extends Condition {\n+public class IsServerWhitelisted extends Condition {\n \t\n \tstatic {\n-\t\tSkript.registerCondition(CondServerIsWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n \t}\n \t\n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTg3OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565879", "bodyText": "This technically is not correct syntax, it should end with a colon : ... while I understand this is an example, an example should be able to be copy/pasted without issue.", "author": "ShaneBeee", "createdAt": "2020-07-26T19:45:58Z", "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")\n+@Examples(\"if server is whitelisted\")", "originalCommit": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nsimilarity index 84%\nrename from src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java\nrename to src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nindex 6bd56c26..0bb2a031 100644\n--- a/src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n\n@@ -33,14 +33,14 @@ import ch.njol.skript.lang.Expression;\n import ch.njol.skript.lang.SkriptParser.ParseResult;\n import ch.njol.util.Kleenean;\n \n-@Name(\"Server Is Whitelisted\")\n-@Description(\"Whether or not the server is whitelisted\")\n-@Examples(\"if server is whitelisted\")\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n @Since(\"INSERT VERSION\")\n-public class CondServerIsWhitelisted extends Condition {\n+public class IsServerWhitelisted extends Condition {\n \t\n \tstatic {\n-\t\tSkript.registerCondition(CondServerIsWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n \t}\n \t\n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTk5MA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565990", "bodyText": "Could probably use a property condition for this.\nSee CondIsSneaking as an example.", "author": "ShaneBeee", "createdAt": "2020-07-26T19:47:19Z", "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")\n+@Examples(\"if server is whitelisted\")\n+@Since(\"INSERT VERSION\")\n+public class CondServerIsWhitelisted extends Condition {\n+\t\n+\tstatic {", "originalCommit": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2OTM0Ng==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460569346", "bodyText": "As discussed on discord, lets just ignore what I said here.", "author": "ShaneBeee", "createdAt": "2020-07-26T20:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTk5MA=="}], "type": "inlineReview", "revised_code": {"commit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nsimilarity index 84%\nrename from src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java\nrename to src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nindex 6bd56c26..0bb2a031 100644\n--- a/src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n\n@@ -33,14 +33,14 @@ import ch.njol.skript.lang.Expression;\n import ch.njol.skript.lang.SkriptParser.ParseResult;\n import ch.njol.util.Kleenean;\n \n-@Name(\"Server Is Whitelisted\")\n-@Description(\"Whether or not the server is whitelisted\")\n-@Examples(\"if server is whitelisted\")\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n @Since(\"INSERT VERSION\")\n-public class CondServerIsWhitelisted extends Condition {\n+public class IsServerWhitelisted extends Condition {\n \t\n \tstatic {\n-\t\tSkript.registerCondition(CondServerIsWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n \t}\n \t\n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjA3MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460566071", "bodyText": "This sentence should end with a period.\nI also feel like the description should be expanded on, as its pretty vague and does not detail what the expression is used for.", "author": "ShaneBeee", "createdAt": "2020-07-26T19:48:11Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist\")", "originalCommit": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 0e127041..08607666 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -38,7 +38,7 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Whitelist\")\n-@Description(\"A server's whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n @Examples({\"set whitelist to false\",\n \t\"add all players to whitelist\",\n \t\"reset the whitelist\"})\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjE0OA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460566148", "bodyText": "As stated many times already, conditions and void methods should not be on the same line.", "author": "ShaneBeee", "createdAt": "2020-07-26T19:49:01Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null) Bukkit.setWhitelist((Boolean) delta[0]);", "originalCommit": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 0e127041..08607666 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -38,7 +38,7 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Whitelist\")\n-@Description(\"A server's whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n @Examples({\"set whitelist to false\",\n \t\"add all players to whitelist\",\n \t\"reset the whitelist\"})\n"}}, {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72", "url": "https://github.com/SkriptLang/Skript/commit/c78074d3751603e70f91eb98d2bc6365edab2e72", "message": "Expanded on the ExprWhitelist description, renamed ServerIsWhitelisted to IsServerWhitelisted", "committedDate": "2020-07-26T20:22:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NjkzOA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460886938", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Name(\"Is Server Whitelisted\")\n          \n          \n            \n            @Name(\"Is Whitelisted\")", "author": "FranKusmiruk", "createdAt": "2020-07-27T13:25:03Z", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "originalCommit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5NDI0MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460894241", "bodyText": "People might confuse it for whether or not a player is whitelisted", "author": "DeltaRays", "createdAt": "2020-07-27T13:36:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NjkzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5NDk0Ng==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460894946", "bodyText": "Fair enough", "author": "FranKusmiruk", "createdAt": "2020-07-27T13:37:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NjkzOA=="}], "type": "inlineReview", "revised_code": {"commit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nindex 0bb2a031..8afbe631 100644\n--- a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n\n@@ -59,4 +59,4 @@ public class IsServerWhitelisted extends Condition {\n \t\treturn \"server is whitelisted\";\n \t}\n \t\n-}\n\\ No newline at end of file\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MDkzMg==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460890932", "bodyText": "ParseResult should be imported directly", "author": "FranKusmiruk", "createdAt": "2020-07-27T13:31:13Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "originalCommit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ecac1bd83d30e33a575b19f43686d150d68ff52", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 08607666..546be867 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -57,7 +57,7 @@ public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n \t@Nullable\n \t@Override\n \tprotected OfflinePlayer[] get(Event e) {\n-\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n \t}\n \t\n \t@Nullable\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MTMzOQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460891339", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n          \n          \n            \n            \t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);", "author": "FranKusmiruk", "createdAt": "2020-07-27T13:31:50Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});", "originalCommit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ecac1bd83d30e33a575b19f43686d150d68ff52", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 08607666..546be867 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -57,7 +57,7 @@ public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n \t@Nullable\n \t@Override\n \tprotected OfflinePlayer[] get(Event e) {\n-\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n \t}\n \t\n \t@Nullable\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MjYxNA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460892614", "bodyText": "delta is nullable, you've got to check whether it is null here", "author": "FranKusmiruk", "createdAt": "2020-07-27T13:33:52Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);", "originalCommit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5Njg3Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460896873", "bodyText": "I am checking that", "author": "DeltaRays", "createdAt": "2020-07-27T13:40:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MjYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5Nzk2MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460897961", "bodyText": "Ah yeah, I am clearly blind", "author": "FranKusmiruk", "createdAt": "2020-07-27T13:42:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MjYxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODY1Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460898653", "bodyText": "It happens to the best of us", "author": "DeltaRays", "createdAt": "2020-07-27T13:43:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MjYxNA=="}], "type": "inlineReview", "revised_code": {"commit": "9ecac1bd83d30e33a575b19f43686d150d68ff52", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 08607666..546be867 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -57,7 +57,7 @@ public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n \t@Nullable\n \t@Override\n \tprotected OfflinePlayer[] get(Event e) {\n-\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n \t}\n \t\n \t@Nullable\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MzA0OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460893049", "bodyText": "missing new line at the end of the file", "author": "FranKusmiruk", "createdAt": "2020-07-27T13:34:31Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:\n+\t\t\tcase RESET:\n+\t\t\t\tfor (OfflinePlayer p : Bukkit.getWhitelistedPlayers())\n+\t\t\t\t\tp.setWhitelisted(false);\n+\t\t\t\tbreak;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn false;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends OfflinePlayer> getReturnType() {\n+\t\treturn OfflinePlayer.class;\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"whitelist\";\n+\t}\n+\t\n+}", "originalCommit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ecac1bd83d30e33a575b19f43686d150d68ff52", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 08607666..546be867 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -57,7 +57,7 @@ public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n \t@Nullable\n \t@Override\n \tprotected OfflinePlayer[] get(Event e) {\n-\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n \t}\n \t\n \t@Nullable\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MzEyNg==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460893126", "bodyText": "missing new line at the end of the file", "author": "FranKusmiruk", "createdAt": "2020-07-27T13:34:38Z", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tsetNegated(parseResult.mark != 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\treturn Bukkit.hasWhitelist() == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"server is whitelisted\";\n+\t}\n+\t\n+}", "originalCommit": "c78074d3751603e70f91eb98d2bc6365edab2e72", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nindex 0bb2a031..8afbe631 100644\n--- a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n\n@@ -59,4 +59,4 @@ public class IsServerWhitelisted extends Condition {\n \t\treturn \"server is whitelisted\";\n \t}\n \t\n-}\n\\ No newline at end of file\n+}\n"}}, {"oid": "9ecac1bd83d30e33a575b19f43686d150d68ff52", "url": "https://github.com/SkriptLang/Skript/commit/9ecac1bd83d30e33a575b19f43686d150d68ff52", "message": "replaced new OfflinePlayer[]{} with new OfflinePlayer[0]\n\nCo-authored-by: Frank Kusmiruk <48283695+FranKusmiruk@users.noreply.github.com>", "committedDate": "2020-07-27T13:36:57Z", "type": "commit"}, {"oid": "3b0e87bb15a3babe8cd387a746b60d83deede01d", "url": "https://github.com/SkriptLang/Skript/commit/3b0e87bb15a3babe8cd387a746b60d83deede01d", "message": "Merge branch 'master' into ExprWhitelist", "committedDate": "2020-07-27T13:39:47Z", "type": "commit"}, {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "url": "https://github.com/SkriptLang/Skript/commit/0571df11d5867111b9d5ef40d0d5e73ffb462af5", "message": "Imported ParseResult directly and added new line at the end of the file", "committedDate": "2020-07-27T13:41:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0MjU4OA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461042588", "bodyText": "The file name should start with Cond", "author": "APickledWalrus", "createdAt": "2020-07-27T17:12:34Z", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**", "originalCommit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5cdb142ba8f66526b6565abb217f786da706f655", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\nsimilarity index 87%\nrename from src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nrename to src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\nindex 8afbe631..f2055cfd 100644\n--- a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\n\n@@ -37,10 +37,10 @@ import ch.njol.util.Kleenean;\n @Description(\"Whether or not the server is whitelisted.\")\n @Examples(\"if server is whitelisted:\")\n @Since(\"INSERT VERSION\")\n-public class IsServerWhitelisted extends Condition {\n+public class CondIsServerWhitelisted extends Condition {\n \t\n \tstatic {\n-\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t\tSkript.registerCondition(CondIsServerWhitelisted.class, \"[the] server (is|1\u00a6is(n't| not)) white[ ]listed\");\n \t}\n \t\n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0Mjk3OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461042979", "bodyText": "might be useful to prefix this with \"[the]\"\nI don\u2019t think that\u2019s done automatically", "author": "APickledWalrus", "createdAt": "2020-07-27T17:13:15Z", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");", "originalCommit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTEwNQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461065105", "bodyText": "You're right", "author": "DeltaRays", "createdAt": "2020-07-27T17:51:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0Mjk3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5cdb142ba8f66526b6565abb217f786da706f655", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\nsimilarity index 87%\nrename from src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nrename to src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\nindex 8afbe631..f2055cfd 100644\n--- a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\n\n@@ -37,10 +37,10 @@ import ch.njol.util.Kleenean;\n @Description(\"Whether or not the server is whitelisted.\")\n @Examples(\"if server is whitelisted:\")\n @Since(\"INSERT VERSION\")\n-public class IsServerWhitelisted extends Condition {\n+public class CondIsServerWhitelisted extends Condition {\n \t\n \tstatic {\n-\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t\tSkript.registerCondition(CondIsServerWhitelisted.class, \"[the] server (is|1\u00a6is(n't| not)) white[ ]listed\");\n \t}\n \t\n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0MzQyMA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461043420", "bodyText": "You should check if the condition is negated here, so if it is negated, you can return \"server is not whitelisted\"", "author": "APickledWalrus", "createdAt": "2020-07-27T17:14:04Z", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tsetNegated(parseResult.mark != 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\treturn Bukkit.hasWhitelist() == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"server is whitelisted\";", "originalCommit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5cdb142ba8f66526b6565abb217f786da706f655", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\nsimilarity index 87%\nrename from src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\nrename to src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\nindex 8afbe631..f2055cfd 100644\n--- a/src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\n\n@@ -37,10 +37,10 @@ import ch.njol.util.Kleenean;\n @Description(\"Whether or not the server is whitelisted.\")\n @Examples(\"if server is whitelisted:\")\n @Since(\"INSERT VERSION\")\n-public class IsServerWhitelisted extends Condition {\n+public class CondIsServerWhitelisted extends Condition {\n \t\n \tstatic {\n-\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t\tSkript.registerCondition(CondIsServerWhitelisted.class, \"[the] server (is|1\u00a6is(n't| not)) white[ ]listed\");\n \t}\n \t\n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDI2OA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461044268", "bodyText": "What happens if you call this method and there are no whitelisted players? Does it return an empty list or null?", "author": "APickledWalrus", "createdAt": "2020-07-27T17:15:19Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);", "originalCommit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTQ5MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461065491", "bodyText": "It returns an empty list", "author": "DeltaRays", "createdAt": "2020-07-27T17:51:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDI2OA=="}], "type": "inlineReview", "revised_code": {"commit": "5cdb142ba8f66526b6565abb217f786da706f655", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 0a8fc5d2..f1757cf5 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -38,7 +38,10 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Whitelist\")\n-@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Description(\"A server's whitelist.\" +\n+\t\"This expression can be used to add/remove players to/from the whitelist,\" +\n+\t\" to enable it and disable it (set whitelist to true / set whitelist to false),\" +\n+\t\" and to empty it (reset whitelist)\")\n @Examples({\"set whitelist to false\",\n \t\"add all players to whitelist\",\n \t\"reset the whitelist\"})\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDc5Ng==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461044796", "bodyText": "IMO you should use curly brackets when you have an it / else if / else, but I\u2019m not sure what the conventions say about that actually", "author": "APickledWalrus", "createdAt": "2020-07-27T17:16:16Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)", "originalCommit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NjY0Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461066647", "bodyText": "I checked and doing that is fine", "author": "DeltaRays", "createdAt": "2020-07-27T17:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDc5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5cdb142ba8f66526b6565abb217f786da706f655", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 0a8fc5d2..f1757cf5 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -38,7 +38,10 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Whitelist\")\n-@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Description(\"A server's whitelist.\" +\n+\t\"This expression can be used to add/remove players to/from the whitelist,\" +\n+\t\" to enable it and disable it (set whitelist to true / set whitelist to false),\" +\n+\t\" and to empty it (reset whitelist)\")\n @Examples({\"set whitelist to false\",\n \t\"add all players to whitelist\",\n \t\"reset the whitelist\"})\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461046372", "bodyText": "This isn\u2019t proper usage of REMOVE_ALL, since really your just clearing it, not removing a specific type from the list", "author": "APickledWalrus", "createdAt": "2020-07-27T17:19:02Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:", "originalCommit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NjQ2Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461066467", "bodyText": "Well removing all players from the list = resetting it", "author": "DeltaRays", "createdAt": "2020-07-27T17:53:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4ODM3Ng==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461088376", "bodyText": "Yes, but you\u2019re not always removing players. REMOVE_ALL is used like:\nremove all <something> from <something>\nremove all creepers from the whitelist doesn\u2019t really make sense.", "author": "APickledWalrus", "createdAt": "2020-07-27T18:32:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5Mzc4NQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461093785", "bodyText": "You're right, I'll remove it", "author": "DeltaRays", "createdAt": "2020-07-27T18:42:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0NTU2MA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461245560", "bodyText": "For the record, REMOVE_ALL has a somewhat specific usage and it is being able to remove all duplicates of a list, considering REMOVE just removes the first one that it encounters. You can't have duplicates in a whitelist so it's rather useless here.", "author": "FranKusmiruk", "createdAt": "2020-07-28T00:24:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5cdb142ba8f66526b6565abb217f786da706f655", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 0a8fc5d2..f1757cf5 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -38,7 +38,10 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Whitelist\")\n-@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Description(\"A server's whitelist.\" +\n+\t\"This expression can be used to add/remove players to/from the whitelist,\" +\n+\t\" to enable it and disable it (set whitelist to true / set whitelist to false),\" +\n+\t\" and to empty it (reset whitelist)\")\n @Examples({\"set whitelist to false\",\n \t\"add all players to whitelist\",\n \t\"reset the whitelist\"})\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0Njc2Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461046767", "bodyText": "I recommend splitting this up over several lines (to avoid having one long line)", "author": "APickledWalrus", "createdAt": "2020-07-27T17:19:43Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")", "originalCommit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5cdb142ba8f66526b6565abb217f786da706f655", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 0a8fc5d2..f1757cf5 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -38,7 +38,10 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Whitelist\")\n-@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Description(\"A server's whitelist.\" +\n+\t\"This expression can be used to add/remove players to/from the whitelist,\" +\n+\t\" to enable it and disable it (set whitelist to true / set whitelist to false),\" +\n+\t\" and to empty it (reset whitelist)\")\n @Examples({\"set whitelist to false\",\n \t\"add all players to whitelist\",\n \t\"reset the whitelist\"})\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NzI5Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461047292", "bodyText": "If you do remove the REMOVE_ALL changer, I recommend removing the delta checks and just adding one at the top of the file. You can also check the change mode for RESET\nif (delta == null && mode != ChangeMode.RESET)\n    return;", "author": "APickledWalrus", "createdAt": "2020-07-27T17:20:35Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {", "originalCommit": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzODkwMA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r463238900", "bodyText": "I would make this change to avoid repetitive code.", "author": "APickledWalrus", "createdAt": "2020-07-30T20:01:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NzI5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5cdb142ba8f66526b6565abb217f786da706f655", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex 0a8fc5d2..f1757cf5 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -38,7 +38,10 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Whitelist\")\n-@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Description(\"A server's whitelist.\" +\n+\t\"This expression can be used to add/remove players to/from the whitelist,\" +\n+\t\" to enable it and disable it (set whitelist to true / set whitelist to false),\" +\n+\t\" and to empty it (reset whitelist)\")\n @Examples({\"set whitelist to false\",\n \t\"add all players to whitelist\",\n \t\"reset the whitelist\"})\n"}}, {"oid": "5cdb142ba8f66526b6565abb217f786da706f655", "url": "https://github.com/SkriptLang/Skript/commit/5cdb142ba8f66526b6565abb217f786da706f655", "message": "renamed the condition and added isNegated to the toString return, and split the description over multiple times", "committedDate": "2020-07-27T17:56:04Z", "type": "commit"}, {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363", "url": "https://github.com/SkriptLang/Skript/commit/1d9aa87f06cef0a02b6d0c83134bb7e645931363", "message": "removed the REMOVE_ALL change mode", "committedDate": "2020-07-27T18:43:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461191812", "bodyText": "Snow mentioned the \"server\" part here.\nMaybe this condition can be changed to check for server and players?!?!", "author": "ShaneBeee", "createdAt": "2020-07-27T21:51:59Z", "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "originalCommit": "1d9aa87f06cef0a02b6d0c83134bb7e645931363", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzNTU5NQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461235595", "bodyText": "Considering you can just do:\nif the whitelist contains some offline player:\n\nI didn't really pay attention to that detail but it could make it less confusing for users so, why not.", "author": "FranKusmiruk", "createdAt": "2020-07-27T23:53:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQyNDI4OA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461424288", "bodyText": "How about not adding that but stating that they can use 'whitelist contains ...' to the description", "author": "DeltaRays", "createdAt": "2020-07-28T08:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNjYyNQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r463236625", "bodyText": "IMO you should be able to check if players are whitelisted too.\nif the player is whitelisted:", "author": "APickledWalrus", "createdAt": "2020-07-30T19:57:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg=="}], "type": "inlineReview", "revised_code": {"commit": "7a839f2c7ef42af731053a40b5b5b658e5291f18", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\nindex f2055cfd..43147e2e 100644\n--- a/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\n\n@@ -56,7 +56,6 @@ public class CondIsServerWhitelisted extends Condition {\n \t\n \t@Override\n \tpublic String toString(@Nullable Event e, boolean debug) {\n-\t\t\n \t\treturn \"server is \" + (isNegated() ? \"not\" : \"\") + \"  whitelisted\";\n \t}\n \t\n"}}, {"oid": "30f0b91afab20d254f641a4d9608a2d1699e97e9", "url": "https://github.com/SkriptLang/Skript/commit/30f0b91afab20d254f641a4d9608a2d1699e97e9", "message": "Merge branch 'master' into ExprWhitelist", "committedDate": "2020-07-28T08:53:09Z", "type": "commit"}, {"oid": "a2cdc1fcb499f67ab8517df58f045a855729f866", "url": "https://github.com/SkriptLang/Skript/commit/a2cdc1fcb499f67ab8517df58f045a855729f866", "message": "Merge branch 'master' into ExprWhitelist", "committedDate": "2020-07-30T22:17:41Z", "type": "commit"}, {"oid": "fc1494f7f261d5d37d1596935012b9a0f6f8ee37", "url": "https://github.com/SkriptLang/Skript/commit/fc1494f7f261d5d37d1596935012b9a0f6f8ee37", "message": "Merge branch 'master' into ExprWhitelist", "committedDate": "2020-08-02T16:21:12Z", "type": "commit"}, {"oid": "382424d7b1ffbefd12a21ca883c90b645ad40cd6", "url": "https://github.com/SkriptLang/Skript/commit/382424d7b1ffbefd12a21ca883c90b645ad40cd6", "message": "Merge branch 'master' into ExprWhitelist", "committedDate": "2020-09-08T18:20:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjE1NQ==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r495482155", "bodyText": "Suggested change", "author": "APickledWalrus", "createdAt": "2020-09-26T18:21:44Z", "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class CondIsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondIsServerWhitelisted.class, \"[the] server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tsetNegated(parseResult.mark != 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\treturn Bukkit.hasWhitelist() == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\t", "originalCommit": "382424d7b1ffbefd12a21ca883c90b645ad40cd6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a839f2c7ef42af731053a40b5b5b658e5291f18", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\nindex f2055cfd..43147e2e 100644\n--- a/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\n\n@@ -56,7 +56,6 @@ public class CondIsServerWhitelisted extends Condition {\n \t\n \t@Override\n \tpublic String toString(@Nullable Event e, boolean debug) {\n-\t\t\n \t\treturn \"server is \" + (isNegated() ? \"not\" : \"\") + \"  whitelisted\";\n \t}\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjIzNA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r495482234", "bodyText": "You should add a default case here that asserts false", "author": "APickledWalrus", "createdAt": "2020-09-26T18:22:44Z", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist.\" +\n+\t\"This expression can be used to add/remove players to/from the whitelist,\" +\n+\t\" to enable it and disable it (set whitelist to true / set whitelist to false),\" +\n+\t\" and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\t\tfor (OfflinePlayer p : Bukkit.getWhitelistedPlayers())\n+\t\t\t\t\tp.setWhitelisted(false);\n+\t\t\t\tbreak;\n+\t\t}", "originalCommit": "382424d7b1ffbefd12a21ca883c90b645ad40cd6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63d82c3f7087da6adbc527ef87767ad8a05c87ec", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\nindex ce304399..372e17b1 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprWhitelist.java\n\n@@ -97,6 +97,8 @@ public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n \t\t\t\tfor (OfflinePlayer p : Bukkit.getWhitelistedPlayers())\n \t\t\t\t\tp.setWhitelisted(false);\n \t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tassert false;\n \t\t}\n \t}\n \t\n"}}, {"oid": "51e2209f483db6117ee181307074c87312c5d5b4", "url": "https://github.com/SkriptLang/Skript/commit/51e2209f483db6117ee181307074c87312c5d5b4", "message": "Merge branch 'master' into ExprWhitelist", "committedDate": "2020-09-26T18:31:37Z", "type": "commit"}, {"oid": "7a839f2c7ef42af731053a40b5b5b658e5291f18", "url": "https://github.com/SkriptLang/Skript/commit/7a839f2c7ef42af731053a40b5b5b658e5291f18", "message": "Update src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>", "committedDate": "2020-09-26T18:56:16Z", "type": "commit"}, {"oid": "63d82c3f7087da6adbc527ef87767ad8a05c87ec", "url": "https://github.com/SkriptLang/Skript/commit/63d82c3f7087da6adbc527ef87767ad8a05c87ec", "message": "Added a default case", "committedDate": "2020-09-26T18:57:14Z", "type": "commit"}, {"oid": "1c455dda333d4e39b6f77dabf3bef92526e73ce4", "url": "https://github.com/SkriptLang/Skript/commit/1c455dda333d4e39b6f77dabf3bef92526e73ce4", "message": "Merge remote-tracking branch 'origin/ExprWhitelist' into ExprWhitelist", "committedDate": "2020-09-26T18:57:27Z", "type": "commit"}, {"oid": "f053eeceae8553842a7e73fa387932e9f2ef4926", "url": "https://github.com/SkriptLang/Skript/commit/f053eeceae8553842a7e73fa387932e9f2ef4926", "message": "Merge branch 'dev-2.5' into ExprWhitelist", "committedDate": "2020-10-04T20:19:53Z", "type": "commit"}, {"oid": "5642d5d8cf993a916817335611a306169cab96f3", "url": "https://github.com/SkriptLang/Skript/commit/5642d5d8cf993a916817335611a306169cab96f3", "message": "Merge branch 'dev-2.5' into ExprWhitelist", "committedDate": "2020-10-04T23:02:19Z", "type": "commit"}, {"oid": "fd0f44d366d30bbc66adafeff8c8b572795cf28d", "url": "https://github.com/SkriptLang/Skript/commit/fd0f44d366d30bbc66adafeff8c8b572795cf28d", "message": "Another broken files commit", "committedDate": "2020-10-05T15:54:39Z", "type": "commit"}, {"oid": "3b668ea4103efbf5c980dc3ce7ee3fe0deed03dd", "url": "https://github.com/SkriptLang/Skript/commit/3b668ea4103efbf5c980dc3ce7ee3fe0deed03dd", "message": "Merge branch 'dev-2.5' into ExprWhitelist", "committedDate": "2020-10-05T15:54:49Z", "type": "commit"}, {"oid": "ae5d1517b7ab5931b286526da8f404420c52b902", "url": "https://github.com/SkriptLang/Skript/commit/ae5d1517b7ab5931b286526da8f404420c52b902", "message": "Merge remote-tracking branch 'origin/ExprWhitelist' into ExprWhitelist", "committedDate": "2020-10-05T15:54:55Z", "type": "commit"}, {"oid": "beb29f8c0c7075bbc5422aa2ab1e3b898d3468ec", "url": "https://github.com/SkriptLang/Skript/commit/beb29f8c0c7075bbc5422aa2ab1e3b898d3468ec", "message": "License changes", "committedDate": "2020-10-05T15:55:21Z", "type": "commit"}, {"oid": "420622965323a2e1771472c8ffff3efe579679b7", "url": "https://github.com/SkriptLang/Skript/commit/420622965323a2e1771472c8ffff3efe579679b7", "message": "Merge branch 'dev-2.5' into ExprWhitelist", "committedDate": "2020-10-10T10:57:25Z", "type": "commit"}, {"oid": "0a4d44099b1e9e527a75eba8ac356437d863999f", "url": "https://github.com/SkriptLang/Skript/commit/0a4d44099b1e9e527a75eba8ac356437d863999f", "message": "Updated CondIsServerWhitelisted.java to check whether or not a player is whitelisted", "committedDate": "2020-10-13T16:22:14Z", "type": "commit"}, {"oid": "eb03323e7821f8d1ed907c4a5fd8a7f750d0611b", "url": "https://github.com/SkriptLang/Skript/commit/eb03323e7821f8d1ed907c4a5fd8a7f750d0611b", "message": "Merge remote-tracking branch 'origin/ExprWhitelist' into ExprWhitelist", "committedDate": "2020-10-13T16:22:32Z", "type": "commit"}, {"oid": "e8c2bbfbf24654a7cad554ca67eeb80b9590f950", "url": "https://github.com/SkriptLang/Skript/commit/e8c2bbfbf24654a7cad554ca67eeb80b9590f950", "message": "Merge branch 'dev-2.5' into ExprWhitelist", "committedDate": "2020-10-21T05:25:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2OTA1MA==", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r510469050", "bodyText": "Ideally this would support multiple players\nalso, you should put the pattern on separate lines (one line per pattern) ;D", "author": "APickledWalrus", "createdAt": "2020-10-22T21:29:49Z", "path": "src/main/java/ch/njol/skript/conditions/CondIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Whitelisted\")\n+@Description(\"Whether or not the server or a player is whitelisted.\")\n+@Examples({\"if server is whitelisted:\", \"if player is whitelisted\"})\n+@Since(\"INSERT VERSION\")\n+public class CondIsWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondIsWhitelisted.class, \"[the] server (is|1\u00a6is(n't| not)) white[ ]listed\", \"%player% (is|1\u00a6is(n't| not)) white[ ]listed\");", "originalCommit": "e8c2bbfbf24654a7cad554ca67eeb80b9590f950", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b63a3b78c987da3af693c20f0b5cf366fd96cb2c", "chunk": "diff --git a/src/main/java/ch/njol/skript/conditions/CondIsWhitelisted.java b/src/main/java/ch/njol/skript/conditions/CondIsWhitelisted.java\nindex e25b2afb..e2d3d8d6 100644\n--- a/src/main/java/ch/njol/skript/conditions/CondIsWhitelisted.java\n+++ b/src/main/java/ch/njol/skript/conditions/CondIsWhitelisted.java\n\n@@ -1,19 +1,18 @@\n /**\n- * This file is part of Skript.\n+ *   This file is part of Skript.\n  *\n- * Skript is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU General Public License as published by\n- * the Free Software Foundation, either version 3 of the License, or\n- * (at your option) any later version.\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n  *\n- * Skript is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU General Public License for more details.\n- *\n- * You should have received a copy of the GNU General Public License\n- * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n  *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n  *\n  * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n  */\n"}}, {"oid": "47bc7bb6c33cc209e9450efec67e4c16ef63ac76", "url": "https://github.com/SkriptLang/Skript/commit/47bc7bb6c33cc209e9450efec67e4c16ef63ac76", "message": "Merge branch 'dev-2.5' into ExprWhitelist", "committedDate": "2020-11-05T19:18:29Z", "type": "commit"}, {"oid": "3c61f746984944c05720de80bcb48ba52f59c712", "url": "https://github.com/SkriptLang/Skript/commit/3c61f746984944c05720de80bcb48ba52f59c712", "message": "e", "committedDate": "2020-11-05T19:22:52Z", "type": "commit"}, {"oid": "b47b4927b12f92e10c86270b8d1c4e40f620bd4d", "url": "https://github.com/SkriptLang/Skript/commit/b47b4927b12f92e10c86270b8d1c4e40f620bd4d", "message": "Revert \"e\"\n\nThis reverts commit 3c61f746984944c05720de80bcb48ba52f59c712.", "committedDate": "2020-11-05T19:23:08Z", "type": "commit"}, {"oid": "eb7e4191e2579338eabf54e1e7831e80349d01dd", "url": "https://github.com/SkriptLang/Skript/commit/eb7e4191e2579338eabf54e1e7831e80349d01dd", "message": "Tested something", "committedDate": "2020-11-05T19:23:16Z", "type": "commit"}, {"oid": "e69044282ae31fb20d1a55ba08a49fcf14bc2de7", "url": "https://github.com/SkriptLang/Skript/commit/e69044282ae31fb20d1a55ba08a49fcf14bc2de7", "message": "Revert \"Tested something\"\n\nThis reverts commit eb7e4191e2579338eabf54e1e7831e80349d01dd.", "committedDate": "2020-11-05T19:23:42Z", "type": "commit"}, {"oid": "b63a3b78c987da3af693c20f0b5cf366fd96cb2c", "url": "https://github.com/SkriptLang/Skript/commit/b63a3b78c987da3af693c20f0b5cf366fd96cb2c", "message": "Reverted license header changes and added support to multiple players", "committedDate": "2020-11-05T20:11:02Z", "type": "commit"}, {"oid": "dd62ee2534759ee302eeba3bf67d928f2e3b52ea", "url": "https://github.com/SkriptLang/Skript/commit/dd62ee2534759ee302eeba3bf67d928f2e3b52ea", "message": "Merge branch 'dev-2.5' into ExprWhitelist", "committedDate": "2020-11-08T23:46:19Z", "type": "commit"}, {"oid": "406108239e2ed9595843154332135a303a6b6f4a", "url": "https://github.com/SkriptLang/Skript/commit/406108239e2ed9595843154332135a303a6b6f4a", "message": "Merge branch 'dev-2.5' into ExprWhitelist", "committedDate": "2020-11-12T00:03:49Z", "type": "commit"}]}