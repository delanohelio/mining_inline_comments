{"pr_number": 3205, "pr_title": "Added ExprArrowKnockbackStrength", "pr_createdAt": "2020-07-24T18:18:30Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3205", "timeline": [{"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762", "url": "https://github.com/SkriptLang/Skript/commit/b1bb6d0d9530c7339a4b70d9aa2d1746d851e762", "message": "Added ExprArrowKnockbackStrength", "committedDate": "2020-07-24T18:17:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460224430", "bodyText": "((Long) delta[0]).intValue()\nJust cast the object to an integer ?", "author": "Matocolotoe", "createdAt": "2020-07-24T18:38:12Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "originalCommit": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNTc3Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460225777", "bodyText": "You want to cast it to a Number, not a Long\nAlso, what if I set the strength to -10? Does that work? Sometimes IllegalArgumentExceptions will be thrown for numbers out of range, so please check that if you can \ud83d\ude42", "author": "APickledWalrus", "createdAt": "2020-07-24T18:41:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMTMzNQ==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460231335", "bodyText": "It told me it couldn't cast a Long to an Integer", "author": "DeltaRays", "createdAt": "2020-07-24T18:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMTM5OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460231399", "bodyText": "(to Matocolotoe)", "author": "DeltaRays", "createdAt": "2020-07-24T18:53:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0ODU5Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460248597", "bodyText": "@DeltaRays I was talking about delta[0]", "author": "Matocolotoe", "createdAt": "2020-07-24T19:31:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0OTIzMw==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460249233", "bodyText": "Yeah, so was I", "author": "DeltaRays", "createdAt": "2020-07-24T19:32:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI5NjIwMA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460296200", "bodyText": "?????", "author": "Matocolotoe", "createdAt": "2020-07-24T21:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3NTk3NA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460375974", "bodyText": "When I casted delta[0] to an integer it told me it couldn\u2019t cast a long to an integer. Don\u2019t worry, I\u2019ve fixed it", "author": "DeltaRays", "createdAt": "2020-07-25T07:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM4OTkwMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460389901", "bodyText": "Of course but I'm talking about the original object... Nevermind.", "author": "Matocolotoe", "createdAt": "2020-07-25T10:13:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}], "type": "inlineReview", "revised_code": {"commit": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java\nsimilarity index 61%\nrename from src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nrename to src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java\nindex 08d14bb9..dc4af644 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java\n\n@@ -19,11 +19,13 @@\n  */\n package ch.njol.skript.expressions;\n \n+import org.bukkit.entity.AbstractArrow;\n import org.bukkit.entity.Arrow;\n import org.bukkit.entity.Projectile;\n import org.bukkit.event.Event;\n import org.eclipse.jdt.annotation.Nullable;\n \n+import ch.njol.skript.Skript;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n import ch.njol.skript.doc.Examples;\n"}}, {"oid": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8", "url": "https://github.com/SkriptLang/Skript/commit/0772e87504b2f4f529bb67eca2bc111ceb9a1fd8", "message": "Updated a few names and added trident support", "committedDate": "2020-07-24T18:51:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNDE1Ng==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460234156", "bodyText": "random white space? \ud83d\ude33", "author": "APickledWalrus", "createdAt": "2020-07-24T18:59:42Z", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Knockback Strength\")\n+@Description(\"A projectile's knockback strength. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (projectile|arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\t", "originalCommit": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f08356ad8d8519bd136a5c462b607c558444085a", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java\nindex dc4af644..200bf683 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java\n\n@@ -34,16 +34,16 @@ import ch.njol.skript.doc.Since;\n import ch.njol.skript.expressions.base.SimplePropertyExpression;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Projectile Knockback Strength\")\n-@Description(\"A projectile's knockback strength. The only currently accepted projectiles are arrows and tridents.\")\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n @Examples({\"on shoot:\",\n \t\"\\tevent-projectile is an arrow\",\n-\t\"\\tset projectile knockback strength of event-projectile to 10\"})\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n @Since(\"INSERT VERSION\")\n public class ExprProjectileKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n \t\n \tstatic {\n-\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (projectile|arrow) knockback strength\", \"projectiles\");\n+\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n \t}\n \t\n \tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNDgwNA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460234804", "bodyText": "You should cast to Number, not Long \ud83d\ude42\nAlso, how are values < 0 handled? Do they work?", "author": "APickledWalrus", "createdAt": "2020-07-24T19:00:56Z", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Knockback Strength\")\n+@Description(\"A projectile's knockback strength. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (projectile|arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\t\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? ((Long) delta[0]).intValue() : 1;", "originalCommit": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f08356ad8d8519bd136a5c462b607c558444085a", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java\nindex dc4af644..200bf683 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java\n\n@@ -34,16 +34,16 @@ import ch.njol.skript.doc.Since;\n import ch.njol.skript.expressions.base.SimplePropertyExpression;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Projectile Knockback Strength\")\n-@Description(\"A projectile's knockback strength. The only currently accepted projectiles are arrows and tridents.\")\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n @Examples({\"on shoot:\",\n \t\"\\tevent-projectile is an arrow\",\n-\t\"\\tset projectile knockback strength of event-projectile to 10\"})\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n @Since(\"INSERT VERSION\")\n public class ExprProjectileKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n \t\n \tstatic {\n-\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (projectile|arrow) knockback strength\", \"projectiles\");\n+\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n \t}\n \t\n \tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n"}}, {"oid": "f08356ad8d8519bd136a5c462b607c558444085a", "url": "https://github.com/SkriptLang/Skript/commit/f08356ad8d8519bd136a5c462b607c558444085a", "message": "Knockback strength doesn't work for tridents :-/\nYou're right, values < 0 return errors so I used Math.max", "committedDate": "2020-07-24T19:03:17Z", "type": "commit"}, {"oid": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09", "url": "https://github.com/SkriptLang/Skript/commit/e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09", "message": "Changed the file name, too", "committedDate": "2020-07-24T19:04:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDY5NA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460244694", "bodyText": "You might be better off checking if strength < 0 and just not doing anything, but that\u2019s up for debate: should setting it to a negative value set it to no strength? Personally I don\u2019t think it should do anything, but others may disagree.", "author": "APickledWalrus", "createdAt": "2020-07-24T19:22:58Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;", "originalCommit": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex ecdb9822..059b1795 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -67,7 +67,6 @@ public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Project\n \t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;\n \t\tfor (Projectile entity : getExpr().getAll(e)) {\n \t\t\tif (abstractArrowExists) {\n-\t\t\t\tSystem.out.println(entity.getType().name());\n \t\t\t\tif (entity instanceof AbstractArrow) ((AbstractArrow) entity).setKnockbackStrength(strength);\n \t\t\t} else if (entity instanceof Arrow)\n \t\t\t\t((Arrow) entity).setKnockbackStrength(strength);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDg4NA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460244884", "bodyText": "Accidental debug line left in \ud83d\ude0e", "author": "APickledWalrus", "createdAt": "2020-07-24T19:23:22Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {\n+\t\t\tif (abstractArrowExists) {\n+\t\t\t\tSystem.out.println(entity.getType().name());", "originalCommit": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NjQwMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460246401", "bodyText": "oop", "author": "DeltaRays", "createdAt": "2020-07-24T19:26:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDg4NA=="}], "type": "inlineReview", "revised_code": {"commit": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex ecdb9822..059b1795 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -67,7 +67,6 @@ public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Project\n \t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;\n \t\tfor (Projectile entity : getExpr().getAll(e)) {\n \t\t\tif (abstractArrowExists) {\n-\t\t\t\tSystem.out.println(entity.getType().name());\n \t\t\t\tif (entity instanceof AbstractArrow) ((AbstractArrow) entity).setKnockbackStrength(strength);\n \t\t\t} else if (entity instanceof Arrow)\n \t\t\t\t((Arrow) entity).setKnockbackStrength(strength);\n"}}, {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "url": "https://github.com/SkriptLang/Skript/commit/c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "message": "removed the debug line", "committedDate": "2020-07-24T19:35:02Z", "type": "commit"}, {"oid": "4b8c8459bfec2952b53bcbdce20f7776376a1729", "url": "https://github.com/SkriptLang/Skript/commit/4b8c8459bfec2952b53bcbdce20f7776376a1729", "message": "Formatted the lines", "committedDate": "2020-07-24T20:32:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwODc3Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460308772", "bodyText": "This should be a constant", "author": "FranKusmiruk", "createdAt": "2020-07-24T22:09:06Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");", "originalCommit": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "34063dba93a92aa8c395e2445be6ee355f651b43", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex 059b1795..afd5b51e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -1,30 +1,24 @@\n /**\n  * This file is part of Skript.\n- *\n+ * <p>\n  * Skript is free software: you can redistribute it and/or modify\n  * it under the terms of the GNU General Public License as published by\n  * the Free Software Foundation, either version 3 of the License, or\n  * (at your option) any later version.\n- *\n+ * <p>\n  * Skript is distributed in the hope that it will be useful,\n  * but WITHOUT ANY WARRANTY; without even the implied warranty of\n  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  * GNU General Public License for more details.\n- *\n+ * <p>\n  * You should have received a copy of the GNU General Public License\n  * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n- *\n- *\n+ * <p>\n+ * <p>\n  * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n  */\n package ch.njol.skript.expressions;\n \n-import org.bukkit.entity.AbstractArrow;\n-import org.bukkit.entity.Arrow;\n-import org.bukkit.entity.Projectile;\n-import org.bukkit.event.Event;\n-import org.eclipse.jdt.annotation.Nullable;\n-\n import ch.njol.skript.Skript;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMjY5OA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460312698", "bodyText": "Always use Expression#getArray over getAll", "author": "FranKusmiruk", "createdAt": "2020-07-24T22:22:47Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {", "originalCommit": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "34063dba93a92aa8c395e2445be6ee355f651b43", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex 059b1795..afd5b51e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -1,30 +1,24 @@\n /**\n  * This file is part of Skript.\n- *\n+ * <p>\n  * Skript is free software: you can redistribute it and/or modify\n  * it under the terms of the GNU General Public License as published by\n  * the Free Software Foundation, either version 3 of the License, or\n  * (at your option) any later version.\n- *\n+ * <p>\n  * Skript is distributed in the hope that it will be useful,\n  * but WITHOUT ANY WARRANTY; without even the implied warranty of\n  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  * GNU General Public License for more details.\n- *\n+ * <p>\n  * You should have received a copy of the GNU General Public License\n  * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n- *\n- *\n+ * <p>\n+ * <p>\n  * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n  */\n package ch.njol.skript.expressions;\n \n-import org.bukkit.entity.AbstractArrow;\n-import org.bukkit.entity.Arrow;\n-import org.bukkit.entity.Projectile;\n-import org.bukkit.event.Event;\n-import org.eclipse.jdt.annotation.Nullable;\n-\n import ch.njol.skript.Skript;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzU4Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460313587", "bodyText": "Why is arrow between parenthesis?", "author": "FranKusmiruk", "createdAt": "2020-07-24T22:26:02Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");", "originalCommit": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "34063dba93a92aa8c395e2445be6ee355f651b43", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex 059b1795..afd5b51e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -1,30 +1,24 @@\n /**\n  * This file is part of Skript.\n- *\n+ * <p>\n  * Skript is free software: you can redistribute it and/or modify\n  * it under the terms of the GNU General Public License as published by\n  * the Free Software Foundation, either version 3 of the License, or\n  * (at your option) any later version.\n- *\n+ * <p>\n  * Skript is distributed in the hope that it will be useful,\n  * but WITHOUT ANY WARRANTY; without even the implied warranty of\n  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  * GNU General Public License for more details.\n- *\n+ * <p>\n  * You should have received a copy of the GNU General Public License\n  * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n- *\n- *\n+ * <p>\n+ * <p>\n  * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n  */\n package ch.njol.skript.expressions;\n \n-import org.bukkit.entity.AbstractArrow;\n-import org.bukkit.entity.Arrow;\n-import org.bukkit.entity.Projectile;\n-import org.bukkit.event.Event;\n-import org.eclipse.jdt.annotation.Nullable;\n-\n import ch.njol.skript.Skript;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzc2Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460313763", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Name(\"Arrow Knockback Strength\")\n          \n          \n            \n            @Name(\"Projectile Knockback Strength\")", "author": "FranKusmiruk", "createdAt": "2020-07-24T22:26:40Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")", "originalCommit": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3NjA1Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460376053", "bodyText": "", "author": "DeltaRays", "createdAt": "2020-07-25T07:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzc2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "34063dba93a92aa8c395e2445be6ee355f651b43", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex 059b1795..afd5b51e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -1,30 +1,24 @@\n /**\n  * This file is part of Skript.\n- *\n+ * <p>\n  * Skript is free software: you can redistribute it and/or modify\n  * it under the terms of the GNU General Public License as published by\n  * the Free Software Foundation, either version 3 of the License, or\n  * (at your option) any later version.\n- *\n+ * <p>\n  * Skript is distributed in the hope that it will be useful,\n  * but WITHOUT ANY WARRANTY; without even the implied warranty of\n  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  * GNU General Public License for more details.\n- *\n+ * <p>\n  * You should have received a copy of the GNU General Public License\n  * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n- *\n- *\n+ * <p>\n+ * <p>\n  * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n  */\n package ch.njol.skript.expressions;\n \n-import org.bukkit.entity.AbstractArrow;\n-import org.bukkit.entity.Arrow;\n-import org.bukkit.entity.Projectile;\n-import org.bukkit.event.Event;\n-import org.eclipse.jdt.annotation.Nullable;\n-\n import ch.njol.skript.Skript;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNTkxMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460315911", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Description(\"An arrow's knockback strength.\")\n          \n          \n            \n            @Description(\"The knockback strength of projectiles considered arrows (i.e.: tridents as well).\")", "author": "FranKusmiruk", "createdAt": "2020-07-24T22:34:38Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")", "originalCommit": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3NjA3NA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460376074", "bodyText": "", "author": "DeltaRays", "createdAt": "2020-07-25T07:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNTkxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "34063dba93a92aa8c395e2445be6ee355f651b43", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex 059b1795..afd5b51e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -1,30 +1,24 @@\n /**\n  * This file is part of Skript.\n- *\n+ * <p>\n  * Skript is free software: you can redistribute it and/or modify\n  * it under the terms of the GNU General Public License as published by\n  * the Free Software Foundation, either version 3 of the License, or\n  * (at your option) any later version.\n- *\n+ * <p>\n  * Skript is distributed in the hope that it will be useful,\n  * but WITHOUT ANY WARRANTY; without even the implied warranty of\n  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  * GNU General Public License for more details.\n- *\n+ * <p>\n  * You should have received a copy of the GNU General Public License\n  * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n- *\n- *\n+ * <p>\n+ * <p>\n  * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n  */\n package ch.njol.skript.expressions;\n \n-import org.bukkit.entity.AbstractArrow;\n-import org.bukkit.entity.Arrow;\n-import org.bukkit.entity.Projectile;\n-import org.bukkit.event.Event;\n-import org.eclipse.jdt.annotation.Nullable;\n-\n import ch.njol.skript.Skript;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n"}}, {"oid": "1df0f1a0ea934833b9cbabe46cf22210b836a856", "url": "https://github.com/SkriptLang/Skript/commit/1df0f1a0ea934833b9cbabe46cf22210b836a856", "message": "Merge branch 'master' into ArrowKnockbackStrength", "committedDate": "2020-07-25T07:18:58Z", "type": "commit"}, {"oid": "34063dba93a92aa8c395e2445be6ee355f651b43", "url": "https://github.com/SkriptLang/Skript/commit/34063dba93a92aa8c395e2445be6ee355f651b43", "message": "Merge remote-tracking branch 'origin/ArrowKnockbackStrength' into ArrowKnockbackStrength", "committedDate": "2020-07-25T18:16:03Z", "type": "commit"}, {"oid": "1cf60dd9305e27f96921deb3780391e599ce1bf0", "url": "https://github.com/SkriptLang/Skript/commit/1cf60dd9305e27f96921deb3780391e599ce1bf0", "message": "Fixed copyright issues and added REMOVE and ADD to ExprArrowKnockbackStrength", "committedDate": "2020-07-25T18:19:20Z", "type": "commit"}, {"oid": "7b6bc44db1ec0220ccb70606fbf299e3f0932cc9", "url": "https://github.com/SkriptLang/Skript/commit/7b6bc44db1ec0220ccb70606fbf299e3f0932cc9", "message": "Merge branch 'master' into ArrowKnockbackStrength", "committedDate": "2020-07-26T09:49:35Z", "type": "commit"}, {"oid": "6663814472504e1158bc49cdc38731fd23191c6e", "url": "https://github.com/SkriptLang/Skript/commit/6663814472504e1158bc49cdc38731fd23191c6e", "message": "Merge branch 'master' into ArrowKnockbackStrength", "committedDate": "2020-08-02T16:24:09Z", "type": "commit"}, {"oid": "cff79bc5b126b9699c92687e77bb9fb3d3825338", "url": "https://github.com/SkriptLang/Skript/commit/cff79bc5b126b9699c92687e77bb9fb3d3825338", "message": "Merge branch 'master' into ArrowKnockbackStrength", "committedDate": "2020-09-08T18:42:40Z", "type": "commit"}, {"oid": "eb092a704a7d58366d1e552754a68e67423d9986", "url": "https://github.com/SkriptLang/Skript/commit/eb092a704a7d58366d1e552754a68e67423d9986", "message": "Removed Math.max to allow removing negative values and made setting the damage to a negative value not do anything", "committedDate": "2020-09-08T18:45:31Z", "type": "commit"}, {"oid": "c281d9770574fc0cc208c02e20ab7b4506fd5afe", "url": "https://github.com/SkriptLang/Skript/commit/c281d9770574fc0cc208c02e20ab7b4506fd5afe", "message": "Merge branch 'master' into ArrowKnockbackStrength", "committedDate": "2020-09-26T09:55:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NDI1OA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r495484258", "bodyText": "Default case \ud83d\ude0e", "author": "APickledWalrus", "createdAt": "2020-09-26T18:47:38Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? ((Number) delta[0]).intValue() : 0;\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (abstractArrowExists)\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n+\t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n+\t\t\t\t\t\t\tint dmg = abstractArrow.getKnockbackStrength() - strength;\n+\t\t\t\t\t\t\tif (dmg < 0) dmg = 0;\n+\t\t\t\t\t\t\tabstractArrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof Arrow) {\n+\t\t\t\t\t\t\tArrow arrow = (Arrow) entity;\n+\t\t\t\t\t\t\tint dmg = arrow.getKnockbackStrength() - strength;\n+\t\t\t\t\t\t\tif (dmg < 0) return;\n+\t\t\t\t\t\t\tarrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (abstractArrowExists)\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n+\t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n+\t\t\t\t\t\t\tint dmg = abstractArrow.getKnockbackStrength() + strength;\n+\t\t\t\t\t\t\tif (dmg < 0) return;\n+\t\t\t\t\t\t\tabstractArrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof Arrow) {\n+\t\t\t\t\t\t\tArrow arrow = (Arrow) entity;\n+\t\t\t\t\t\t\tint dmg = arrow.getKnockbackStrength() + strength;\n+\t\t\t\t\t\t\tif (dmg < 0) return;\n+\t\t\t\t\t\t\tarrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\tif (abstractArrowExists) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) ((AbstractArrow) entity).setKnockbackStrength(strength);\n+\t\t\t\t\t} else if (entity instanceof Arrow) {\n+\t\t\t\t\t\t((Arrow) entity).setKnockbackStrength(strength);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbreak;", "originalCommit": "c281d9770574fc0cc208c02e20ab7b4506fd5afe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f7f69588d8d76f7e39b708b62853d6d218c038ad", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex 6215d2f9..6765078a 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -59,7 +59,15 @@ public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Project\n \t@Nullable\n \t@Override\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\n-\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase RESET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n \t}\n \t\n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NDMwNw==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r495484307", "bodyText": "Maybe use a switch statement here?", "author": "APickledWalrus", "createdAt": "2020-09-26T18:48:22Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);", "originalCommit": "c281d9770574fc0cc208c02e20ab7b4506fd5afe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f7f69588d8d76f7e39b708b62853d6d218c038ad", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex 6215d2f9..6765078a 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -59,7 +59,15 @@ public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Project\n \t@Nullable\n \t@Override\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\n-\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase RESET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n \t}\n \t\n \t@Override\n"}}, {"oid": "f7f69588d8d76f7e39b708b62853d6d218c038ad", "url": "https://github.com/SkriptLang/Skript/commit/f7f69588d8d76f7e39b708b62853d6d218c038ad", "message": "Default case :sunglasses:", "committedDate": "2020-09-26T19:05:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwMzE4OA==", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r495503188", "bodyText": "Maybe not the last thing after all haha. These if and else statements should have curly braces.", "author": "APickledWalrus", "createdAt": "2020-09-26T22:49:42Z", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase RESET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? ((Number) delta[0]).intValue() : 0;\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (abstractArrowExists)", "originalCommit": "f7f69588d8d76f7e39b708b62853d6d218c038ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "78def1cd82009137c40fb8399dd46ab8b024d699", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\nindex 6765078a..ae900934 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java\n\n@@ -75,7 +75,7 @@ public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Project\n \t\tint strength = delta != null ? ((Number) delta[0]).intValue() : 0;\n \t\tswitch (mode) {\n \t\t\tcase REMOVE:\n-\t\t\t\tif (abstractArrowExists)\n+\t\t\t\tif (abstractArrowExists) {\n \t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n \t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n \t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n"}}, {"oid": "78def1cd82009137c40fb8399dd46ab8b024d699", "url": "https://github.com/SkriptLang/Skript/commit/78def1cd82009137c40fb8399dd46ab8b024d699", "message": "Update ExprArrowKnockbackStrength.java", "committedDate": "2020-09-27T04:37:48Z", "type": "commit"}, {"oid": "19f1bd9a9ea0e020e187baa7b54060a956ea72fe", "url": "https://github.com/SkriptLang/Skript/commit/19f1bd9a9ea0e020e187baa7b54060a956ea72fe", "message": "Update copyright header", "committedDate": "2020-09-29T22:08:41Z", "type": "commit"}, {"oid": "108064ebc6f620c23cd5533756dd75b6bab94c81", "url": "https://github.com/SkriptLang/Skript/commit/108064ebc6f620c23cd5533756dd75b6bab94c81", "message": "Merge branch 'dev-2.5' into ArrowKnockbackStrength", "committedDate": "2020-09-29T22:09:54Z", "type": "commit"}, {"oid": "938f6237f3d184b570a9e5493d1154c3a9aeefc8", "url": "https://github.com/SkriptLang/Skript/commit/938f6237f3d184b570a9e5493d1154c3a9aeefc8", "message": "Merge branch 'dev-2.5' into ArrowKnockbackStrength", "committedDate": "2020-09-29T22:14:56Z", "type": "commit"}]}