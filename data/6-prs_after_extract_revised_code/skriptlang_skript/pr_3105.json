{"pr_number": 3105, "pr_title": "Rewrite ExprName", "pr_createdAt": "2020-07-06T00:26:33Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3105", "timeline": [{"oid": "ebb5c033f02151bb5c19f88bf7296058738ca53d", "url": "https://github.com/SkriptLang/Skript/commit/ebb5c033f02151bb5c19f88bf7296058738ca53d", "message": "Rewrite ExprName", "committedDate": "2020-07-06T00:09:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0MzE2MA==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449943160", "bodyText": "Slots are convertible to itemtypes, you may test whether removing slots from the accepted types causes any issues (changers primarily).", "author": "FranKusmiruk", "createdAt": "2020-07-06T01:18:40Z", "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -97,336 +96,151 @@\n \tstatic final MethodHandle TITLE_METHOD;\r\n \r\n \tstatic {\r\n+\t\tregister(ExprName.class, String.class, \"(1\u00a6name[s]|2\u00a6(display|nick|chat|custom)[ ]name[s])\", \"players/entities/itemtypes/inventories/slots\");\r", "originalCommit": "ebb5c033f02151bb5c19f88bf7296058738ca53d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU1MjM0NA==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r450552344", "bodyText": "Tested this. Works with the getter but not the changer, presumably because you have to update the slot's item(?).", "author": "APickledWalrus", "createdAt": "2020-07-07T00:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0MzE2MA=="}], "type": "inlineReview", "revised_code": {"commit": "b04240116122996f78bfe1439ed4959380e721cd", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprName.java b/src/main/java/ch/njol/skript/expressions/ExprName.java\nindex 62b9faa1..845b7d83 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprName.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprName.java\n\n@@ -108,7 +108,7 @@ public class ExprName extends SimplePropertyExpression<Object, String> {\n \t\tTITLE_METHOD = _METHOD;\n \t}\n \n-\t/**\n+\t/*\n \t * 1 = \"name\",\n \t * 2 = \"display name\",\n \t * 3 = \"tablist name\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NDg3NQ==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449944875", "bodyText": "They are different patterns. I'd argue this is a misuse of parser marks considering you should be doing a pattern check here but parser marks are in some way a tool to avoid pattern-checking code as well. What do the rest think about this? Should the \"misuse\" if I can even call that be overlooked for sake of code cleanliness?", "author": "FranKusmiruk", "createdAt": "2020-07-06T01:29:26Z", "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -97,336 +96,151 @@\n \tstatic final MethodHandle TITLE_METHOD;\r\n \r\n \tstatic {\r\n+\t\tregister(ExprName.class, String.class, \"(1\u00a6name[s]|2\u00a6(display|nick|chat|custom)[ ]name[s])\", \"players/entities/itemtypes/inventories/slots\");\r\n+\t\tregister(ExprName.class, String.class, \"(3\u00a6(player|tab)[ ]list name[s])\", \"players\");\r", "originalCommit": "ebb5c033f02151bb5c19f88bf7296058738ca53d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0OTkzMA==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449949930", "bodyText": "I wasn\u2019t sure how a pattern check here would work since I\u2019m calling register twice. Would the tablist pattern return \"2\" for matched patterns? I\u2019m not opposed to doing a pattern check at all, I\u2019m just not should if/how it would work since I\u2019m calling register twice.", "author": "APickledWalrus", "createdAt": "2020-07-06T01:57:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NDg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUzMzMzMw==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r450533333", "bodyText": "Talked about it in Discord; since Skript doesn't treat the second registration as an additional pattern but rather, a new expression info and this being unhandled behaviour, it's better to leave it as is for now.", "author": "FranKusmiruk", "createdAt": "2020-07-06T23:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NDg3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b04240116122996f78bfe1439ed4959380e721cd", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprName.java b/src/main/java/ch/njol/skript/expressions/ExprName.java\nindex 62b9faa1..845b7d83 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprName.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprName.java\n\n@@ -108,7 +108,7 @@ public class ExprName extends SimplePropertyExpression<Object, String> {\n \t\tTITLE_METHOD = _METHOD;\n \t}\n \n-\t/**\n+\t/*\n \t * 1 = \"name\",\n \t * 2 = \"display name\",\n \t * 3 = \"tablist name\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NTIwMA==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449945200", "bodyText": "This implementation detail might be better as a normal multi-line comment rather than a javadoc.", "author": "FranKusmiruk", "createdAt": "2020-07-06T01:31:21Z", "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -97,336 +96,151 @@\n \tstatic final MethodHandle TITLE_METHOD;\r\n \r\n \tstatic {\r\n+\t\tregister(ExprName.class, String.class, \"(1\u00a6name[s]|2\u00a6(display|nick|chat|custom)[ ]name[s])\", \"players/entities/itemtypes/inventories/slots\");\r\n+\t\tregister(ExprName.class, String.class, \"(3\u00a6(player|tab)[ ]list name[s])\", \"players\");\r\n+\r\n+\t\t// Get the old method for getting the name of an inventory.\r\n+\r\n \t\tMethodHandle _METHOD = null;\r\n \t\ttry {\r\n \t\t\t_METHOD = MethodHandles.lookup().findVirtual(Inventory.class, \"getTitle\", MethodType.methodType(String.class));\r\n \t\t} catch (IllegalAccessException | NoSuchMethodException ignored) {}\r\n \t\tTITLE_METHOD = _METHOD;\r\n \t}\r\n \r\n-\tprivate final static int ITEM = 1, ENTITY = 2, PLAYER = 4, INVENTORY = 8;\r\n-\tfinal static String[] types = {\"itemstacks/slots\", \"entities\", \"players\", \"inventories\"};\r\n-\r\n-\tprivate enum NameType {\r\n-\t\tNAME(\"name\", \"name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t((ItemType) o).setItemMeta(m);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\treturn !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tDISPLAY_NAME(\"display name\", \"(display|nick|chat)[ ]name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, PLAYER | ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\t((Player) o).setDisplayName(name == null ? ((Player) o).getName() : name + ChatColor.RESET);\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\t((Entity) o).setCustomNameVisible(name != null);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tTABLIST_NAME(\"player list name\", \"(player|tab)[ ]list name[s]\", PLAYER, PLAYER) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t((Player) o).setPlayerListName(name == null ? \"\" : name);\r\n-\t\t\t\t\t} catch (IllegalArgumentException ignored) {}\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getPlayerListName();\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t};\r\n-\r\n-\t\tfinal String name;\r\n-\t\tfinal String pattern;\r\n-\t\tfinal int from;\r\n-\t\tfinal int acceptChange;\r\n-\r\n-\t\tNameType(String name, String pattern, int from, int change) {\r\n-\t\t\tthis.name = name;\r\n-\t\t\tthis.pattern = \"(\" + ordinal() + \"\u00a6)\" + pattern;\r\n-\t\t\tthis.from = from;\r\n-\t\t\tacceptChange = change;\r\n-\t\t}\r\n-\r\n-\t\tabstract void set(@Nullable Object o, @Nullable String s);\r\n-\r\n-\t\t@Nullable\r\n-\t\tabstract String get(@Nullable Object o);\r\n-\r\n-\t\tString getFrom() {\r\n-\t\t\tStringBuilder b = new StringBuilder();\r\n-\t\t\tfor (int i = 0; i < types.length; i++) {\r\n-\t\t\t\tif ((from & (1 << i)) == 0)\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ITEM && !Skript.isRunningMinecraft(1, 4, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ENTITY && !Skript.isRunningMinecraft(1, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif (b.length() != 0)\r\n-\t\t\t\t\tb.append(\"/\");\r\n-\t\t\t\tb.append(types[i]);\r\n-\t\t\t}\r\n-\t\t\treturn \"\" + b;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tstatic {\r\n-\t\tfor (NameType n : NameType.values())\r\n-\t\t\tregister(ExprName.class, String.class, n.pattern, n.getFrom());\r\n-\t}\r\n-\r\n-\t@SuppressWarnings(\"null\")\r\n-\tprivate NameType type;\r\n+\t/**\r\n+\t * 1 = \"name\",\r", "originalCommit": "ebb5c033f02151bb5c19f88bf7296058738ca53d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b04240116122996f78bfe1439ed4959380e721cd", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprName.java b/src/main/java/ch/njol/skript/expressions/ExprName.java\nindex 62b9faa1..845b7d83 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprName.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprName.java\n\n@@ -108,7 +108,7 @@ public class ExprName extends SimplePropertyExpression<Object, String> {\n \t\tTITLE_METHOD = _METHOD;\n \t}\n \n-\t/**\n+\t/*\n \t * 1 = \"name\",\n \t * 2 = \"display name\",\n \t * 3 = \"tablist name\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NTQ2Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449945467", "bodyText": "missing break statement (even if the following code is unreachable, the compiler throws a warning for it so)", "author": "FranKusmiruk", "createdAt": "2020-07-06T01:32:56Z", "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -97,336 +96,151 @@\n \tstatic final MethodHandle TITLE_METHOD;\r\n \r\n \tstatic {\r\n+\t\tregister(ExprName.class, String.class, \"(1\u00a6name[s]|2\u00a6(display|nick|chat|custom)[ ]name[s])\", \"players/entities/itemtypes/inventories/slots\");\r\n+\t\tregister(ExprName.class, String.class, \"(3\u00a6(player|tab)[ ]list name[s])\", \"players\");\r\n+\r\n+\t\t// Get the old method for getting the name of an inventory.\r\n+\r\n \t\tMethodHandle _METHOD = null;\r\n \t\ttry {\r\n \t\t\t_METHOD = MethodHandles.lookup().findVirtual(Inventory.class, \"getTitle\", MethodType.methodType(String.class));\r\n \t\t} catch (IllegalAccessException | NoSuchMethodException ignored) {}\r\n \t\tTITLE_METHOD = _METHOD;\r\n \t}\r\n \r\n-\tprivate final static int ITEM = 1, ENTITY = 2, PLAYER = 4, INVENTORY = 8;\r\n-\tfinal static String[] types = {\"itemstacks/slots\", \"entities\", \"players\", \"inventories\"};\r\n-\r\n-\tprivate enum NameType {\r\n-\t\tNAME(\"name\", \"name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t((ItemType) o).setItemMeta(m);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\treturn !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tDISPLAY_NAME(\"display name\", \"(display|nick|chat)[ ]name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, PLAYER | ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\t((Player) o).setDisplayName(name == null ? ((Player) o).getName() : name + ChatColor.RESET);\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\t((Entity) o).setCustomNameVisible(name != null);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tTABLIST_NAME(\"player list name\", \"(player|tab)[ ]list name[s]\", PLAYER, PLAYER) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t((Player) o).setPlayerListName(name == null ? \"\" : name);\r\n-\t\t\t\t\t} catch (IllegalArgumentException ignored) {}\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getPlayerListName();\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t};\r\n-\r\n-\t\tfinal String name;\r\n-\t\tfinal String pattern;\r\n-\t\tfinal int from;\r\n-\t\tfinal int acceptChange;\r\n-\r\n-\t\tNameType(String name, String pattern, int from, int change) {\r\n-\t\t\tthis.name = name;\r\n-\t\t\tthis.pattern = \"(\" + ordinal() + \"\u00a6)\" + pattern;\r\n-\t\t\tthis.from = from;\r\n-\t\t\tacceptChange = change;\r\n-\t\t}\r\n-\r\n-\t\tabstract void set(@Nullable Object o, @Nullable String s);\r\n-\r\n-\t\t@Nullable\r\n-\t\tabstract String get(@Nullable Object o);\r\n-\r\n-\t\tString getFrom() {\r\n-\t\t\tStringBuilder b = new StringBuilder();\r\n-\t\t\tfor (int i = 0; i < types.length; i++) {\r\n-\t\t\t\tif ((from & (1 << i)) == 0)\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ITEM && !Skript.isRunningMinecraft(1, 4, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ENTITY && !Skript.isRunningMinecraft(1, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif (b.length() != 0)\r\n-\t\t\t\t\tb.append(\"/\");\r\n-\t\t\t\tb.append(types[i]);\r\n-\t\t\t}\r\n-\t\t\treturn \"\" + b;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tstatic {\r\n-\t\tfor (NameType n : NameType.values())\r\n-\t\t\tregister(ExprName.class, String.class, n.pattern, n.getFrom());\r\n-\t}\r\n-\r\n-\t@SuppressWarnings(\"null\")\r\n-\tprivate NameType type;\r\n+\t/**\r\n+\t * 1 = \"name\",\r\n+\t * 2 = \"display name\",\r\n+\t * 3 = \"tablist name\"\r\n+\t */\r\n+\tprivate int mark;\r\n \r\n \t@SuppressWarnings({\"null\", \"unchecked\"})\r\n \t@Override\r\n \tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\r\n-\t\ttype = NameType.values()[parseResult.mark];\r\n-\t\tif (exprs[0] instanceof Variable)\r\n-\t\t\tsetExpr(exprs[0].getConvertedExpression(Object.class));\r\n-\t\telse\r\n-\t\t\tsetExpr(exprs[0]);\r\n+\t\tmark = parseResult.mark;\r\n+\t\tsetExpr(exprs[0] instanceof Variable ? exprs[0].getConvertedExpression(Object.class) : exprs[0]);\r\n \t\treturn true;\r\n \t}\r\n \r\n \t@Override\r\n \t@Nullable\r\n \tpublic String convert(Object o) {\r\n-\t\treturn type.get(o instanceof Slot ? ((Slot) o).getItem() : o);\r\n+\t\tif (o instanceof Player) {\r\n+\t\t\tswitch (mark) {\r\n+\t\t\t\tcase 1: return ((Player) o).getName();\r\n+\t\t\t\tcase 2: return ((Player) o).getDisplayName();\r\n+\t\t\t\tcase 3: return ((Player) o).getPlayerListName();\r\n+\t\t\t}\r\n+\t\t} else if (o instanceof Entity) {\r\n+\t\t\treturn ((Entity) o).getCustomName();\r\n+\t\t} else if (o instanceof ItemType) {\r\n+\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n+\t\t\treturn m.hasDisplayName() ? m.getDisplayName() : null;\r\n+\t\t} else if (o instanceof Inventory) {\r\n+\t\t\tif (TITLE_METHOD != null) {\r\n+\t\t\t\ttry {\r\n+\t\t\t\t\treturn (String) TITLE_METHOD.invoke(o);\r\n+\t\t\t\t} catch (Throwable e) {\r\n+\t\t\t\t\tSkript.exception(e);\r\n+\t\t\t\t\treturn null;\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tif (!((Inventory) o).getViewers().isEmpty())\r\n+\t\t\t\t\treturn ((Inventory) o).getViewers().get(0).getOpenInventory().getTitle();\r\n+\t\t\t\treturn null;\r\n+\t\t\t}\r\n+\t\t} else if (o instanceof Slot) {\r\n+\t\t\tItemStack is = ((Slot) o).getItem();\r\n+\t\t\tif (is != null && is.hasItemMeta()) {\r\n+\t\t\t\tItemMeta m = is.getItemMeta();\r\n+\t\t\t\treturn m.hasDisplayName() ? m.getDisplayName() : null;\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\treturn null;\r\n \t}\r\n \r\n-\tprivate int changeType = 0;\r\n-\r\n-\t// TODO find a better method for handling changes (in general)\r\n-\t// e.g. a Changer that takes an object and returns another which should then be saved if applicable (the Changer includes the ChangeMode)\r\n \t@Override\r\n \t@Nullable\r\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\r\n-\t\tif (mode == ChangeMode.DELETE && (type.acceptChange & ~PLAYER) != 0 || mode == ChangeMode.RESET)\r\n-\t\t\treturn new Class[0];\r\n-\t\tif (mode != ChangeMode.SET)\r\n-\t\t\treturn null;\r\n-\t\tif ((type.acceptChange & PLAYER) != 0 && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = PLAYER;\r\n-\t\t} else if ((type.acceptChange & INVENTORY) != 0 && Inventory.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = INVENTORY;\r\n-\t\t} else if ((type.acceptChange & ITEM) != 0 && (getExpr().isSingle() && ChangerUtils.acceptsChange(getExpr(), ChangeMode.SET, ItemStack.class, ItemType.class) || Slot.class.isAssignableFrom(getExpr().getReturnType()))) {\r\n-\t\t\tchangeType = ITEM;\r\n-\t\t} else if ((type.acceptChange & ENTITY) != 0 && Entity.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tif (type == NameType.NAME && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n+\t\tif (mode == ChangeMode.SET || mode == ChangeMode.RESET) {\r\n+\t\t\tif (mark == 1 && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n \t\t\t\tSkript.error(\"Can't change the Minecraft name of a player. Change the 'display name' or 'tab list name' instead.\");\r\n \t\t\t\treturn null;\r\n \t\t\t}\r\n-\t\t\tchangeType = ENTITY;\r\n+\t\t\treturn CollectionUtils.array(String.class);\r\n \t\t}\r\n-\t\treturn changeType == 0 ? null : CollectionUtils.array(String.class);\r\n+\t\treturn null;\t\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\r\n-\t\tString name = delta == null ? null : (String) delta[0];\r\n-\t\tif (changeType == ITEM) {\r\n-\t\t\tif (Slot.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\t\tfor (Slot s : (Slot[]) getExpr().getArray(e)) {\r\n-\t\t\t\t\tItemStack i = s.getItem();\r\n-\t\t\t\t\ttype.set(i, name);\r\n-\t\t\t\t\ts.setItem(i);\r\n+\t\tString name = delta != null ? (String) delta[0] : null;\r\n+\t\tfor (Object o : getExpr().getArray(e)) {\r\n+\t\t\tif (o instanceof Player) {\r\n+\t\t\t\tswitch (mark) {\r\n+\t\t\t\t\tcase 2: ((Player) o).setDisplayName(name != null ? name + ChatColor.RESET : ((Player) o).getName());\r", "originalCommit": "ebb5c033f02151bb5c19f88bf7296058738ca53d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b04240116122996f78bfe1439ed4959380e721cd", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprName.java b/src/main/java/ch/njol/skript/expressions/ExprName.java\nindex 62b9faa1..845b7d83 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprName.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprName.java\n\n@@ -108,7 +108,7 @@ public class ExprName extends SimplePropertyExpression<Object, String> {\n \t\tTITLE_METHOD = _METHOD;\n \t}\n \n-\t/**\n+\t/*\n \t * 1 = \"name\",\n \t * 2 = \"display name\",\n \t * 3 = \"tablist name\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NjQzOQ==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449946439", "bodyText": "space before ending parenthesis", "author": "FranKusmiruk", "createdAt": "2020-07-06T01:38:42Z", "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -97,336 +96,151 @@\n \tstatic final MethodHandle TITLE_METHOD;\r\n \r\n \tstatic {\r\n+\t\tregister(ExprName.class, String.class, \"(1\u00a6name[s]|2\u00a6(display|nick|chat|custom)[ ]name[s])\", \"players/entities/itemtypes/inventories/slots\");\r\n+\t\tregister(ExprName.class, String.class, \"(3\u00a6(player|tab)[ ]list name[s])\", \"players\");\r\n+\r\n+\t\t// Get the old method for getting the name of an inventory.\r\n+\r\n \t\tMethodHandle _METHOD = null;\r\n \t\ttry {\r\n \t\t\t_METHOD = MethodHandles.lookup().findVirtual(Inventory.class, \"getTitle\", MethodType.methodType(String.class));\r\n \t\t} catch (IllegalAccessException | NoSuchMethodException ignored) {}\r\n \t\tTITLE_METHOD = _METHOD;\r\n \t}\r\n \r\n-\tprivate final static int ITEM = 1, ENTITY = 2, PLAYER = 4, INVENTORY = 8;\r\n-\tfinal static String[] types = {\"itemstacks/slots\", \"entities\", \"players\", \"inventories\"};\r\n-\r\n-\tprivate enum NameType {\r\n-\t\tNAME(\"name\", \"name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t((ItemType) o).setItemMeta(m);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\treturn !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tDISPLAY_NAME(\"display name\", \"(display|nick|chat)[ ]name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, PLAYER | ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\t((Player) o).setDisplayName(name == null ? ((Player) o).getName() : name + ChatColor.RESET);\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\t((Entity) o).setCustomNameVisible(name != null);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tTABLIST_NAME(\"player list name\", \"(player|tab)[ ]list name[s]\", PLAYER, PLAYER) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t((Player) o).setPlayerListName(name == null ? \"\" : name);\r\n-\t\t\t\t\t} catch (IllegalArgumentException ignored) {}\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getPlayerListName();\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t};\r\n-\r\n-\t\tfinal String name;\r\n-\t\tfinal String pattern;\r\n-\t\tfinal int from;\r\n-\t\tfinal int acceptChange;\r\n-\r\n-\t\tNameType(String name, String pattern, int from, int change) {\r\n-\t\t\tthis.name = name;\r\n-\t\t\tthis.pattern = \"(\" + ordinal() + \"\u00a6)\" + pattern;\r\n-\t\t\tthis.from = from;\r\n-\t\t\tacceptChange = change;\r\n-\t\t}\r\n-\r\n-\t\tabstract void set(@Nullable Object o, @Nullable String s);\r\n-\r\n-\t\t@Nullable\r\n-\t\tabstract String get(@Nullable Object o);\r\n-\r\n-\t\tString getFrom() {\r\n-\t\t\tStringBuilder b = new StringBuilder();\r\n-\t\t\tfor (int i = 0; i < types.length; i++) {\r\n-\t\t\t\tif ((from & (1 << i)) == 0)\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ITEM && !Skript.isRunningMinecraft(1, 4, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ENTITY && !Skript.isRunningMinecraft(1, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif (b.length() != 0)\r\n-\t\t\t\t\tb.append(\"/\");\r\n-\t\t\t\tb.append(types[i]);\r\n-\t\t\t}\r\n-\t\t\treturn \"\" + b;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tstatic {\r\n-\t\tfor (NameType n : NameType.values())\r\n-\t\t\tregister(ExprName.class, String.class, n.pattern, n.getFrom());\r\n-\t}\r\n-\r\n-\t@SuppressWarnings(\"null\")\r\n-\tprivate NameType type;\r\n+\t/**\r\n+\t * 1 = \"name\",\r\n+\t * 2 = \"display name\",\r\n+\t * 3 = \"tablist name\"\r\n+\t */\r\n+\tprivate int mark;\r\n \r\n \t@SuppressWarnings({\"null\", \"unchecked\"})\r\n \t@Override\r\n \tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\r\n-\t\ttype = NameType.values()[parseResult.mark];\r\n-\t\tif (exprs[0] instanceof Variable)\r\n-\t\t\tsetExpr(exprs[0].getConvertedExpression(Object.class));\r\n-\t\telse\r\n-\t\t\tsetExpr(exprs[0]);\r\n+\t\tmark = parseResult.mark;\r\n+\t\tsetExpr(exprs[0] instanceof Variable ? exprs[0].getConvertedExpression(Object.class) : exprs[0]);\r\n \t\treturn true;\r\n \t}\r\n \r\n \t@Override\r\n \t@Nullable\r\n \tpublic String convert(Object o) {\r\n-\t\treturn type.get(o instanceof Slot ? ((Slot) o).getItem() : o);\r\n+\t\tif (o instanceof Player) {\r\n+\t\t\tswitch (mark) {\r\n+\t\t\t\tcase 1: return ((Player) o).getName();\r\n+\t\t\t\tcase 2: return ((Player) o).getDisplayName();\r\n+\t\t\t\tcase 3: return ((Player) o).getPlayerListName();\r\n+\t\t\t}\r\n+\t\t} else if (o instanceof Entity) {\r\n+\t\t\treturn ((Entity) o).getCustomName();\r\n+\t\t} else if (o instanceof ItemType) {\r\n+\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n+\t\t\treturn m.hasDisplayName() ? m.getDisplayName() : null;\r\n+\t\t} else if (o instanceof Inventory) {\r\n+\t\t\tif (TITLE_METHOD != null) {\r\n+\t\t\t\ttry {\r\n+\t\t\t\t\treturn (String) TITLE_METHOD.invoke(o);\r\n+\t\t\t\t} catch (Throwable e) {\r\n+\t\t\t\t\tSkript.exception(e);\r\n+\t\t\t\t\treturn null;\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tif (!((Inventory) o).getViewers().isEmpty())\r\n+\t\t\t\t\treturn ((Inventory) o).getViewers().get(0).getOpenInventory().getTitle();\r\n+\t\t\t\treturn null;\r\n+\t\t\t}\r\n+\t\t} else if (o instanceof Slot) {\r\n+\t\t\tItemStack is = ((Slot) o).getItem();\r\n+\t\t\tif (is != null && is.hasItemMeta()) {\r\n+\t\t\t\tItemMeta m = is.getItemMeta();\r\n+\t\t\t\treturn m.hasDisplayName() ? m.getDisplayName() : null;\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\treturn null;\r\n \t}\r\n \r\n-\tprivate int changeType = 0;\r\n-\r\n-\t// TODO find a better method for handling changes (in general)\r\n-\t// e.g. a Changer that takes an object and returns another which should then be saved if applicable (the Changer includes the ChangeMode)\r\n \t@Override\r\n \t@Nullable\r\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\r\n-\t\tif (mode == ChangeMode.DELETE && (type.acceptChange & ~PLAYER) != 0 || mode == ChangeMode.RESET)\r\n-\t\t\treturn new Class[0];\r\n-\t\tif (mode != ChangeMode.SET)\r\n-\t\t\treturn null;\r\n-\t\tif ((type.acceptChange & PLAYER) != 0 && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = PLAYER;\r\n-\t\t} else if ((type.acceptChange & INVENTORY) != 0 && Inventory.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = INVENTORY;\r\n-\t\t} else if ((type.acceptChange & ITEM) != 0 && (getExpr().isSingle() && ChangerUtils.acceptsChange(getExpr(), ChangeMode.SET, ItemStack.class, ItemType.class) || Slot.class.isAssignableFrom(getExpr().getReturnType()))) {\r\n-\t\t\tchangeType = ITEM;\r\n-\t\t} else if ((type.acceptChange & ENTITY) != 0 && Entity.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tif (type == NameType.NAME && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n+\t\tif (mode == ChangeMode.SET || mode == ChangeMode.RESET) {\r\n+\t\t\tif (mark == 1 && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n \t\t\t\tSkript.error(\"Can't change the Minecraft name of a player. Change the 'display name' or 'tab list name' instead.\");\r\n \t\t\t\treturn null;\r\n \t\t\t}\r\n-\t\t\tchangeType = ENTITY;\r\n+\t\t\treturn CollectionUtils.array(String.class);\r\n \t\t}\r\n-\t\treturn changeType == 0 ? null : CollectionUtils.array(String.class);\r\n+\t\treturn null;\t\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\r\n-\t\tString name = delta == null ? null : (String) delta[0];\r\n-\t\tif (changeType == ITEM) {\r\n-\t\t\tif (Slot.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\t\tfor (Slot s : (Slot[]) getExpr().getArray(e)) {\r\n-\t\t\t\t\tItemStack i = s.getItem();\r\n-\t\t\t\t\ttype.set(i, name);\r\n-\t\t\t\t\ts.setItem(i);\r\n+\t\tString name = delta != null ? (String) delta[0] : null;\r\n+\t\tfor (Object o : getExpr().getArray(e)) {\r\n+\t\t\tif (o instanceof Player) {\r\n+\t\t\t\tswitch (mark) {\r\n+\t\t\t\t\tcase 2: ((Player) o).setDisplayName(name != null ? name + ChatColor.RESET : ((Player) o).getName());\r\n+\t\t\t\t\tcase 3: ((Player) o).setPlayerListName(name); // If name is null, then the player's name will be used.\r\n \t\t\t\t}\r\n-\t\t\t} else {\r\n-\t\t\t\tObject i = getExpr().getSingle(e);\r\n-\t\t\t\tif (i instanceof ItemType) {\r\n-\t\t\t\t\ttype.set(i, name);\r\n-\t\t\t\t\tgetExpr().change(e, new ItemType[] {(ItemType) i}, ChangeMode.SET);\r\n+\t\t\t} else if (o instanceof Entity) {\r\n+\t\t\t\t((Entity) o).setCustomName(name);\r\n+\t\t\t\tif (mark == 2 || mode == ChangeMode.RESET) // Using \"display name\"\r\n+\t\t\t\t\t((Entity) o).setCustomNameVisible(name != null);\r\n+\t\t\t\tif (o instanceof LivingEntity)\r\n+\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n+\t\t\t} else if (o instanceof ItemType) {\r\n+\t\t\t\tItemType i = (ItemType) o;\r\n+\t\t\t\tItemMeta m = i.getItemMeta();\r\n+\t\t\t\tm.setDisplayName(name);\r\n+\t\t\t\ti.setItemMeta(m);\r\n+\t\t\t} else if (o instanceof Inventory ) {\r", "originalCommit": "ebb5c033f02151bb5c19f88bf7296058738ca53d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b04240116122996f78bfe1439ed4959380e721cd", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprName.java b/src/main/java/ch/njol/skript/expressions/ExprName.java\nindex 62b9faa1..845b7d83 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprName.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprName.java\n\n@@ -108,7 +108,7 @@ public class ExprName extends SimplePropertyExpression<Object, String> {\n \t\tTITLE_METHOD = _METHOD;\n \t}\n \n-\t/**\n+\t/*\n \t * 1 = \"name\",\n \t * 2 = \"display name\",\n \t * 3 = \"tablist name\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NjYyNg==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449946626", "bodyText": "Don't create a clone, use its iterator instead. Or are you even modifying the list to generate a CME? I don't see any code that could do it.", "author": "FranKusmiruk", "createdAt": "2020-07-06T01:39:35Z", "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -97,336 +96,151 @@\n \tstatic final MethodHandle TITLE_METHOD;\r\n \r\n \tstatic {\r\n+\t\tregister(ExprName.class, String.class, \"(1\u00a6name[s]|2\u00a6(display|nick|chat|custom)[ ]name[s])\", \"players/entities/itemtypes/inventories/slots\");\r\n+\t\tregister(ExprName.class, String.class, \"(3\u00a6(player|tab)[ ]list name[s])\", \"players\");\r\n+\r\n+\t\t// Get the old method for getting the name of an inventory.\r\n+\r\n \t\tMethodHandle _METHOD = null;\r\n \t\ttry {\r\n \t\t\t_METHOD = MethodHandles.lookup().findVirtual(Inventory.class, \"getTitle\", MethodType.methodType(String.class));\r\n \t\t} catch (IllegalAccessException | NoSuchMethodException ignored) {}\r\n \t\tTITLE_METHOD = _METHOD;\r\n \t}\r\n \r\n-\tprivate final static int ITEM = 1, ENTITY = 2, PLAYER = 4, INVENTORY = 8;\r\n-\tfinal static String[] types = {\"itemstacks/slots\", \"entities\", \"players\", \"inventories\"};\r\n-\r\n-\tprivate enum NameType {\r\n-\t\tNAME(\"name\", \"name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t((ItemType) o).setItemMeta(m);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\treturn !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tDISPLAY_NAME(\"display name\", \"(display|nick|chat)[ ]name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, PLAYER | ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\t((Player) o).setDisplayName(name == null ? ((Player) o).getName() : name + ChatColor.RESET);\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\t((Entity) o).setCustomNameVisible(name != null);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tTABLIST_NAME(\"player list name\", \"(player|tab)[ ]list name[s]\", PLAYER, PLAYER) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t((Player) o).setPlayerListName(name == null ? \"\" : name);\r\n-\t\t\t\t\t} catch (IllegalArgumentException ignored) {}\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getPlayerListName();\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t};\r\n-\r\n-\t\tfinal String name;\r\n-\t\tfinal String pattern;\r\n-\t\tfinal int from;\r\n-\t\tfinal int acceptChange;\r\n-\r\n-\t\tNameType(String name, String pattern, int from, int change) {\r\n-\t\t\tthis.name = name;\r\n-\t\t\tthis.pattern = \"(\" + ordinal() + \"\u00a6)\" + pattern;\r\n-\t\t\tthis.from = from;\r\n-\t\t\tacceptChange = change;\r\n-\t\t}\r\n-\r\n-\t\tabstract void set(@Nullable Object o, @Nullable String s);\r\n-\r\n-\t\t@Nullable\r\n-\t\tabstract String get(@Nullable Object o);\r\n-\r\n-\t\tString getFrom() {\r\n-\t\t\tStringBuilder b = new StringBuilder();\r\n-\t\t\tfor (int i = 0; i < types.length; i++) {\r\n-\t\t\t\tif ((from & (1 << i)) == 0)\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ITEM && !Skript.isRunningMinecraft(1, 4, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ENTITY && !Skript.isRunningMinecraft(1, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif (b.length() != 0)\r\n-\t\t\t\t\tb.append(\"/\");\r\n-\t\t\t\tb.append(types[i]);\r\n-\t\t\t}\r\n-\t\t\treturn \"\" + b;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tstatic {\r\n-\t\tfor (NameType n : NameType.values())\r\n-\t\t\tregister(ExprName.class, String.class, n.pattern, n.getFrom());\r\n-\t}\r\n-\r\n-\t@SuppressWarnings(\"null\")\r\n-\tprivate NameType type;\r\n+\t/**\r\n+\t * 1 = \"name\",\r\n+\t * 2 = \"display name\",\r\n+\t * 3 = \"tablist name\"\r\n+\t */\r\n+\tprivate int mark;\r\n \r\n \t@SuppressWarnings({\"null\", \"unchecked\"})\r\n \t@Override\r\n \tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\r\n-\t\ttype = NameType.values()[parseResult.mark];\r\n-\t\tif (exprs[0] instanceof Variable)\r\n-\t\t\tsetExpr(exprs[0].getConvertedExpression(Object.class));\r\n-\t\telse\r\n-\t\t\tsetExpr(exprs[0]);\r\n+\t\tmark = parseResult.mark;\r\n+\t\tsetExpr(exprs[0] instanceof Variable ? exprs[0].getConvertedExpression(Object.class) : exprs[0]);\r\n \t\treturn true;\r\n \t}\r\n \r\n \t@Override\r\n \t@Nullable\r\n \tpublic String convert(Object o) {\r\n-\t\treturn type.get(o instanceof Slot ? ((Slot) o).getItem() : o);\r\n+\t\tif (o instanceof Player) {\r\n+\t\t\tswitch (mark) {\r\n+\t\t\t\tcase 1: return ((Player) o).getName();\r\n+\t\t\t\tcase 2: return ((Player) o).getDisplayName();\r\n+\t\t\t\tcase 3: return ((Player) o).getPlayerListName();\r\n+\t\t\t}\r\n+\t\t} else if (o instanceof Entity) {\r\n+\t\t\treturn ((Entity) o).getCustomName();\r\n+\t\t} else if (o instanceof ItemType) {\r\n+\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n+\t\t\treturn m.hasDisplayName() ? m.getDisplayName() : null;\r\n+\t\t} else if (o instanceof Inventory) {\r\n+\t\t\tif (TITLE_METHOD != null) {\r\n+\t\t\t\ttry {\r\n+\t\t\t\t\treturn (String) TITLE_METHOD.invoke(o);\r\n+\t\t\t\t} catch (Throwable e) {\r\n+\t\t\t\t\tSkript.exception(e);\r\n+\t\t\t\t\treturn null;\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tif (!((Inventory) o).getViewers().isEmpty())\r\n+\t\t\t\t\treturn ((Inventory) o).getViewers().get(0).getOpenInventory().getTitle();\r\n+\t\t\t\treturn null;\r\n+\t\t\t}\r\n+\t\t} else if (o instanceof Slot) {\r\n+\t\t\tItemStack is = ((Slot) o).getItem();\r\n+\t\t\tif (is != null && is.hasItemMeta()) {\r\n+\t\t\t\tItemMeta m = is.getItemMeta();\r\n+\t\t\t\treturn m.hasDisplayName() ? m.getDisplayName() : null;\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\treturn null;\r\n \t}\r\n \r\n-\tprivate int changeType = 0;\r\n-\r\n-\t// TODO find a better method for handling changes (in general)\r\n-\t// e.g. a Changer that takes an object and returns another which should then be saved if applicable (the Changer includes the ChangeMode)\r\n \t@Override\r\n \t@Nullable\r\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\r\n-\t\tif (mode == ChangeMode.DELETE && (type.acceptChange & ~PLAYER) != 0 || mode == ChangeMode.RESET)\r\n-\t\t\treturn new Class[0];\r\n-\t\tif (mode != ChangeMode.SET)\r\n-\t\t\treturn null;\r\n-\t\tif ((type.acceptChange & PLAYER) != 0 && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = PLAYER;\r\n-\t\t} else if ((type.acceptChange & INVENTORY) != 0 && Inventory.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = INVENTORY;\r\n-\t\t} else if ((type.acceptChange & ITEM) != 0 && (getExpr().isSingle() && ChangerUtils.acceptsChange(getExpr(), ChangeMode.SET, ItemStack.class, ItemType.class) || Slot.class.isAssignableFrom(getExpr().getReturnType()))) {\r\n-\t\t\tchangeType = ITEM;\r\n-\t\t} else if ((type.acceptChange & ENTITY) != 0 && Entity.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tif (type == NameType.NAME && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n+\t\tif (mode == ChangeMode.SET || mode == ChangeMode.RESET) {\r\n+\t\t\tif (mark == 1 && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n \t\t\t\tSkript.error(\"Can't change the Minecraft name of a player. Change the 'display name' or 'tab list name' instead.\");\r\n \t\t\t\treturn null;\r\n \t\t\t}\r\n-\t\t\tchangeType = ENTITY;\r\n+\t\t\treturn CollectionUtils.array(String.class);\r\n \t\t}\r\n-\t\treturn changeType == 0 ? null : CollectionUtils.array(String.class);\r\n+\t\treturn null;\t\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\r\n-\t\tString name = delta == null ? null : (String) delta[0];\r\n-\t\tif (changeType == ITEM) {\r\n-\t\t\tif (Slot.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\t\tfor (Slot s : (Slot[]) getExpr().getArray(e)) {\r\n-\t\t\t\t\tItemStack i = s.getItem();\r\n-\t\t\t\t\ttype.set(i, name);\r\n-\t\t\t\t\ts.setItem(i);\r\n+\t\tString name = delta != null ? (String) delta[0] : null;\r\n+\t\tfor (Object o : getExpr().getArray(e)) {\r\n+\t\t\tif (o instanceof Player) {\r\n+\t\t\t\tswitch (mark) {\r\n+\t\t\t\t\tcase 2: ((Player) o).setDisplayName(name != null ? name + ChatColor.RESET : ((Player) o).getName());\r\n+\t\t\t\t\tcase 3: ((Player) o).setPlayerListName(name); // If name is null, then the player's name will be used.\r\n \t\t\t\t}\r\n-\t\t\t} else {\r\n-\t\t\t\tObject i = getExpr().getSingle(e);\r\n-\t\t\t\tif (i instanceof ItemType) {\r\n-\t\t\t\t\ttype.set(i, name);\r\n-\t\t\t\t\tgetExpr().change(e, new ItemType[] {(ItemType) i}, ChangeMode.SET);\r\n+\t\t\t} else if (o instanceof Entity) {\r\n+\t\t\t\t((Entity) o).setCustomName(name);\r\n+\t\t\t\tif (mark == 2 || mode == ChangeMode.RESET) // Using \"display name\"\r\n+\t\t\t\t\t((Entity) o).setCustomNameVisible(name != null);\r\n+\t\t\t\tif (o instanceof LivingEntity)\r\n+\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n+\t\t\t} else if (o instanceof ItemType) {\r\n+\t\t\t\tItemType i = (ItemType) o;\r\n+\t\t\t\tItemMeta m = i.getItemMeta();\r\n+\t\t\t\tm.setDisplayName(name);\r\n+\t\t\t\ti.setItemMeta(m);\r\n+\t\t\t} else if (o instanceof Inventory ) {\r\n+\t\t\t\tInventory inv = (Inventory) o;\r\n+\r\n+\t\t\t\tif (inv.getViewers().isEmpty())\r\n \t\t\t\t\treturn;\r\n-\t\t\t\t}\r\n+\t\t\t\t// Create a clone to avoid a ConcurrentModificationException\r\n+\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inv.getViewers());\r", "originalCommit": "ebb5c033f02151bb5c19f88bf7296058738ca53d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0ODY5NA==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449948694", "bodyText": "A CME can be encountered when opening the inventory later on, at least that\u2019s what I encountered.", "author": "APickledWalrus", "createdAt": "2020-07-06T01:51:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NjYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUzMjU1MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r450532551", "bodyText": "Ah, yeah, this is alright then.", "author": "FranKusmiruk", "createdAt": "2020-07-06T23:36:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NjYyNg=="}], "type": "inlineReview", "revised_code": {"commit": "b04240116122996f78bfe1439ed4959380e721cd", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprName.java b/src/main/java/ch/njol/skript/expressions/ExprName.java\nindex 62b9faa1..845b7d83 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprName.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprName.java\n\n@@ -108,7 +108,7 @@ public class ExprName extends SimplePropertyExpression<Object, String> {\n \t\tTITLE_METHOD = _METHOD;\n \t}\n \n-\t/**\n+\t/*\n \t * 1 = \"name\",\n \t * 2 = \"display name\",\n \t * 3 = \"tablist name\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NzEzMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449947131", "bodyText": "Why did you change this?", "author": "FranKusmiruk", "createdAt": "2020-07-06T01:42:13Z", "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -97,336 +96,151 @@\n \tstatic final MethodHandle TITLE_METHOD;\r\n \r\n \tstatic {\r\n+\t\tregister(ExprName.class, String.class, \"(1\u00a6name[s]|2\u00a6(display|nick|chat|custom)[ ]name[s])\", \"players/entities/itemtypes/inventories/slots\");\r\n+\t\tregister(ExprName.class, String.class, \"(3\u00a6(player|tab)[ ]list name[s])\", \"players\");\r\n+\r\n+\t\t// Get the old method for getting the name of an inventory.\r\n+\r\n \t\tMethodHandle _METHOD = null;\r\n \t\ttry {\r\n \t\t\t_METHOD = MethodHandles.lookup().findVirtual(Inventory.class, \"getTitle\", MethodType.methodType(String.class));\r\n \t\t} catch (IllegalAccessException | NoSuchMethodException ignored) {}\r\n \t\tTITLE_METHOD = _METHOD;\r\n \t}\r\n \r\n-\tprivate final static int ITEM = 1, ENTITY = 2, PLAYER = 4, INVENTORY = 8;\r\n-\tfinal static String[] types = {\"itemstacks/slots\", \"entities\", \"players\", \"inventories\"};\r\n-\r\n-\tprivate enum NameType {\r\n-\t\tNAME(\"name\", \"name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t((ItemType) o).setItemMeta(m);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\treturn !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tDISPLAY_NAME(\"display name\", \"(display|nick|chat)[ ]name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, PLAYER | ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\t((Player) o).setDisplayName(name == null ? ((Player) o).getName() : name + ChatColor.RESET);\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\t((Entity) o).setCustomNameVisible(name != null);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tTABLIST_NAME(\"player list name\", \"(player|tab)[ ]list name[s]\", PLAYER, PLAYER) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t((Player) o).setPlayerListName(name == null ? \"\" : name);\r\n-\t\t\t\t\t} catch (IllegalArgumentException ignored) {}\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getPlayerListName();\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t};\r\n-\r\n-\t\tfinal String name;\r\n-\t\tfinal String pattern;\r\n-\t\tfinal int from;\r\n-\t\tfinal int acceptChange;\r\n-\r\n-\t\tNameType(String name, String pattern, int from, int change) {\r\n-\t\t\tthis.name = name;\r\n-\t\t\tthis.pattern = \"(\" + ordinal() + \"\u00a6)\" + pattern;\r\n-\t\t\tthis.from = from;\r\n-\t\t\tacceptChange = change;\r\n-\t\t}\r\n-\r\n-\t\tabstract void set(@Nullable Object o, @Nullable String s);\r\n-\r\n-\t\t@Nullable\r\n-\t\tabstract String get(@Nullable Object o);\r\n-\r\n-\t\tString getFrom() {\r\n-\t\t\tStringBuilder b = new StringBuilder();\r\n-\t\t\tfor (int i = 0; i < types.length; i++) {\r\n-\t\t\t\tif ((from & (1 << i)) == 0)\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ITEM && !Skript.isRunningMinecraft(1, 4, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ENTITY && !Skript.isRunningMinecraft(1, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif (b.length() != 0)\r\n-\t\t\t\t\tb.append(\"/\");\r\n-\t\t\t\tb.append(types[i]);\r\n-\t\t\t}\r\n-\t\t\treturn \"\" + b;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tstatic {\r\n-\t\tfor (NameType n : NameType.values())\r\n-\t\t\tregister(ExprName.class, String.class, n.pattern, n.getFrom());\r\n-\t}\r\n-\r\n-\t@SuppressWarnings(\"null\")\r\n-\tprivate NameType type;\r\n+\t/**\r\n+\t * 1 = \"name\",\r\n+\t * 2 = \"display name\",\r\n+\t * 3 = \"tablist name\"\r\n+\t */\r\n+\tprivate int mark;\r\n \r\n \t@SuppressWarnings({\"null\", \"unchecked\"})\r\n \t@Override\r\n \tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\r\n-\t\ttype = NameType.values()[parseResult.mark];\r\n-\t\tif (exprs[0] instanceof Variable)\r\n-\t\t\tsetExpr(exprs[0].getConvertedExpression(Object.class));\r\n-\t\telse\r\n-\t\t\tsetExpr(exprs[0]);\r\n+\t\tmark = parseResult.mark;\r\n+\t\tsetExpr(exprs[0] instanceof Variable ? exprs[0].getConvertedExpression(Object.class) : exprs[0]);\r\n \t\treturn true;\r\n \t}\r\n \r\n \t@Override\r\n \t@Nullable\r\n \tpublic String convert(Object o) {\r\n-\t\treturn type.get(o instanceof Slot ? ((Slot) o).getItem() : o);\r\n+\t\tif (o instanceof Player) {\r\n+\t\t\tswitch (mark) {\r\n+\t\t\t\tcase 1: return ((Player) o).getName();\r\n+\t\t\t\tcase 2: return ((Player) o).getDisplayName();\r\n+\t\t\t\tcase 3: return ((Player) o).getPlayerListName();\r\n+\t\t\t}\r\n+\t\t} else if (o instanceof Entity) {\r\n+\t\t\treturn ((Entity) o).getCustomName();\r\n+\t\t} else if (o instanceof ItemType) {\r\n+\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n+\t\t\treturn m.hasDisplayName() ? m.getDisplayName() : null;\r\n+\t\t} else if (o instanceof Inventory) {\r\n+\t\t\tif (TITLE_METHOD != null) {\r\n+\t\t\t\ttry {\r\n+\t\t\t\t\treturn (String) TITLE_METHOD.invoke(o);\r\n+\t\t\t\t} catch (Throwable e) {\r\n+\t\t\t\t\tSkript.exception(e);\r\n+\t\t\t\t\treturn null;\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tif (!((Inventory) o).getViewers().isEmpty())\r\n+\t\t\t\t\treturn ((Inventory) o).getViewers().get(0).getOpenInventory().getTitle();\r\n+\t\t\t\treturn null;\r\n+\t\t\t}\r\n+\t\t} else if (o instanceof Slot) {\r\n+\t\t\tItemStack is = ((Slot) o).getItem();\r\n+\t\t\tif (is != null && is.hasItemMeta()) {\r\n+\t\t\t\tItemMeta m = is.getItemMeta();\r\n+\t\t\t\treturn m.hasDisplayName() ? m.getDisplayName() : null;\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\treturn null;\r\n \t}\r\n \r\n-\tprivate int changeType = 0;\r\n-\r\n-\t// TODO find a better method for handling changes (in general)\r\n-\t// e.g. a Changer that takes an object and returns another which should then be saved if applicable (the Changer includes the ChangeMode)\r\n \t@Override\r\n \t@Nullable\r\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\r\n-\t\tif (mode == ChangeMode.DELETE && (type.acceptChange & ~PLAYER) != 0 || mode == ChangeMode.RESET)\r\n-\t\t\treturn new Class[0];\r\n-\t\tif (mode != ChangeMode.SET)\r\n-\t\t\treturn null;\r\n-\t\tif ((type.acceptChange & PLAYER) != 0 && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = PLAYER;\r\n-\t\t} else if ((type.acceptChange & INVENTORY) != 0 && Inventory.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = INVENTORY;\r\n-\t\t} else if ((type.acceptChange & ITEM) != 0 && (getExpr().isSingle() && ChangerUtils.acceptsChange(getExpr(), ChangeMode.SET, ItemStack.class, ItemType.class) || Slot.class.isAssignableFrom(getExpr().getReturnType()))) {\r\n-\t\t\tchangeType = ITEM;\r\n-\t\t} else if ((type.acceptChange & ENTITY) != 0 && Entity.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tif (type == NameType.NAME && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n+\t\tif (mode == ChangeMode.SET || mode == ChangeMode.RESET) {\r\n+\t\t\tif (mark == 1 && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n \t\t\t\tSkript.error(\"Can't change the Minecraft name of a player. Change the 'display name' or 'tab list name' instead.\");\r\n \t\t\t\treturn null;\r\n \t\t\t}\r\n-\t\t\tchangeType = ENTITY;\r\n+\t\t\treturn CollectionUtils.array(String.class);\r\n \t\t}\r\n-\t\treturn changeType == 0 ? null : CollectionUtils.array(String.class);\r\n+\t\treturn null;\t\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\r\n-\t\tString name = delta == null ? null : (String) delta[0];\r\n-\t\tif (changeType == ITEM) {\r\n-\t\t\tif (Slot.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\t\tfor (Slot s : (Slot[]) getExpr().getArray(e)) {\r\n-\t\t\t\t\tItemStack i = s.getItem();\r\n-\t\t\t\t\ttype.set(i, name);\r\n-\t\t\t\t\ts.setItem(i);\r\n+\t\tString name = delta != null ? (String) delta[0] : null;\r\n+\t\tfor (Object o : getExpr().getArray(e)) {\r\n+\t\t\tif (o instanceof Player) {\r\n+\t\t\t\tswitch (mark) {\r\n+\t\t\t\t\tcase 2: ((Player) o).setDisplayName(name != null ? name + ChatColor.RESET : ((Player) o).getName());\r\n+\t\t\t\t\tcase 3: ((Player) o).setPlayerListName(name); // If name is null, then the player's name will be used.\r\n \t\t\t\t}\r\n-\t\t\t} else {\r\n-\t\t\t\tObject i = getExpr().getSingle(e);\r\n-\t\t\t\tif (i instanceof ItemType) {\r\n-\t\t\t\t\ttype.set(i, name);\r\n-\t\t\t\t\tgetExpr().change(e, new ItemType[] {(ItemType) i}, ChangeMode.SET);\r\n+\t\t\t} else if (o instanceof Entity) {\r\n+\t\t\t\t((Entity) o).setCustomName(name);\r\n+\t\t\t\tif (mark == 2 || mode == ChangeMode.RESET) // Using \"display name\"\r\n+\t\t\t\t\t((Entity) o).setCustomNameVisible(name != null);\r\n+\t\t\t\tif (o instanceof LivingEntity)\r\n+\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n+\t\t\t} else if (o instanceof ItemType) {\r\n+\t\t\t\tItemType i = (ItemType) o;\r\n+\t\t\t\tItemMeta m = i.getItemMeta();\r\n+\t\t\t\tm.setDisplayName(name);\r\n+\t\t\t\ti.setItemMeta(m);\r\n+\t\t\t} else if (o instanceof Inventory ) {\r\n+\t\t\t\tInventory inv = (Inventory) o;\r\n+\r\n+\t\t\t\tif (inv.getViewers().isEmpty())\r\n \t\t\t\t\treturn;\r\n-\t\t\t\t}\r\n+\t\t\t\t// Create a clone to avoid a ConcurrentModificationException\r\n+\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inv.getViewers());\r\n \r\n-\t\t\t\tif (!(i instanceof ItemStack) && !(i instanceof Slot))\r\n+\t\t\t\tInventoryType type = inv.getType();\r\n+\t\t\t\tif (!type.isCreatable())\r\n \t\t\t\t\treturn;\r\n-\t\t\t\tItemStack is = i instanceof Slot ? ((Slot) i).getItem() : (ItemStack) i;\r\n-\t\t\t\ttype.set(is, name);\r\n-\t\t\t\tif (i instanceof Slot)\r\n-\t\t\t\t\t((Slot) i).setItem(is);\r\n-\t\t\t\telse if (ChangerUtils.acceptsChange(getExpr(), ChangeMode.SET, ItemStack.class))\r\n-\t\t\t\t\tgetExpr().change(e, new Object[] {i}, ChangeMode.SET);\r\n-\t\t\t\telse\r\n-\t\t\t\t\tgetExpr().change(e, new ItemType[] {new ItemType((ItemStack) i)}, ChangeMode.SET);\r\n-\t\t\t}\r\n-\t\t} else {\r\n-\t\t\tfor (Object o : getExpr().getArray(e)) {\r\n-\t\t\t\tif (o instanceof Entity || o instanceof Inventory)\r\n-\t\t\t\t\ttype.set(o, name);\r\n+\t\t\t\tif (name == null)\r\n+\t\t\t\t\tname = type.getDefaultTitle();\r\n+\r\n+\t\t\t\tInventory copy;\r\n+\t\t\t\tif (type == InventoryType.CHEST) {\r\n+\t\t\t\t\tcopy = Bukkit.createInventory(inv.getHolder(), inv.getSize(), name);\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\tcopy = Bukkit.createInventory(inv.getHolder(), type, name);\r\n+\t\t\t\t}\r\n+\t\t\t\tcopy.setContents(inv.getContents());\r\n+\t\t\t\tviewers.forEach(viewer -> viewer.openInventory(copy));\r\n+\t\t\t} else if (o instanceof Slot) {\r\n+\t\t\t\tSlot s = (Slot) o;\r\n+\t\t\t\tItemStack is = s.getItem();\r\n+\t\t\t\tif (is != null && is.hasItemMeta()) {\r\n+\t\t\t\t\tItemMeta m = is.getItemMeta();\r\n+\t\t\t\t\tm.setDisplayName(name);\r\n+\t\t\t\t\tis.setItemMeta(m);\r\n+\t\t\t\t\ts.setItem(is);\r\n+\t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t}\r\n \r\n \t@Override\r\n-\tpublic Class<String> getReturnType() {\r\n+\tpublic Class<? extends String> getReturnType() {\r", "originalCommit": "ebb5c033f02151bb5c19f88bf7296058738ca53d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0ODgxNw==", "url": "https://github.com/SkriptLang/Skript/pull/3105#discussion_r449948817", "bodyText": "I kind of worked from the ground up, so this was unintentional.", "author": "APickledWalrus", "createdAt": "2020-07-06T01:51:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NzEzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "b04240116122996f78bfe1439ed4959380e721cd", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprName.java b/src/main/java/ch/njol/skript/expressions/ExprName.java\nindex 62b9faa1..845b7d83 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprName.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprName.java\n\n@@ -108,7 +108,7 @@ public class ExprName extends SimplePropertyExpression<Object, String> {\n \t\tTITLE_METHOD = _METHOD;\n \t}\n \n-\t/**\n+\t/*\n \t * 1 = \"name\",\n \t * 2 = \"display name\",\n \t * 3 = \"tablist name\"\n"}}, {"oid": "b04240116122996f78bfe1439ed4959380e721cd", "url": "https://github.com/SkriptLang/Skript/commit/b04240116122996f78bfe1439ed4959380e721cd", "message": "Requested Changes", "committedDate": "2020-07-07T00:49:30Z", "type": "commit"}]}