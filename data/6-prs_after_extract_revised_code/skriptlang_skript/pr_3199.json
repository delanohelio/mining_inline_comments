{"pr_number": 3199, "pr_title": "Introducing BlockData to Skript", "pr_createdAt": "2020-07-23T22:56:54Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3199", "timeline": [{"oid": "5e80dbf8d92b04dfd222327d73336ac7b565f8ac", "url": "https://github.com/SkriptLang/Skript/commit/5e80dbf8d92b04dfd222327d73336ac7b565f8ac", "message": "BlockData - introduce block data to Skript", "committedDate": "2020-07-23T11:41:50Z", "type": "commit"}, {"oid": "490846e106ec55ccafea0a57eef79d186d7c8d92", "url": "https://github.com/SkriptLang/Skript/commit/490846e106ec55ccafea0a57eef79d186d7c8d92", "message": "BlockUtils - add the ability to return null rather than setting blocks to air", "committedDate": "2020-07-23T22:28:57Z", "type": "commit"}, {"oid": "2fb2c0236cf66932da015a22d5c90b50c4142558", "url": "https://github.com/SkriptLang/Skript/commit/2fb2c0236cf66932da015a22d5c90b50c4142558", "message": "BukkitClasses(BlockData) - add serializer", "committedDate": "2020-07-23T22:30:04Z", "type": "commit"}, {"oid": "23c17cb275f73e759baaf48444cfb0e9402f36fb", "url": "https://github.com/SkriptLang/Skript/commit/23c17cb275f73e759baaf48444cfb0e9402f36fb", "message": "Add block data test script", "committedDate": "2020-07-23T22:38:43Z", "type": "commit"}, {"oid": "afbb7cfac2a21c4205963fb818b2b7ee2347cb90", "url": "https://github.com/SkriptLang/Skript/commit/afbb7cfac2a21c4205963fb818b2b7ee2347cb90", "message": "BukkitClasses - allow for space in block data", "committedDate": "2020-07-23T23:12:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4ODYwOQ==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r459788609", "bodyText": "Maybe add a comment for the rationale behind the first replace", "author": "Wealthyturtle", "createdAt": "2020-07-23T23:48:33Z", "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,21 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\tString data = dataString.replace(\";\", \",\");", "originalCommit": "afbb7cfac2a21c4205963fb818b2b7ee2347cb90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MDE1Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r459790153", "bodyText": "Will do \ud83d\udc4d", "author": "ShaneBeee", "createdAt": "2020-07-23T23:54:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4ODYwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "bc20d81fe6b8c3574cec7f71c2a719330262b9c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/util/BlockUtils.java b/src/main/java/ch/njol/skript/util/BlockUtils.java\nindex 70e5c3e9..e6ed7880 100644\n--- a/src/main/java/ch/njol/skript/util/BlockUtils.java\n+++ b/src/main/java/ch/njol/skript/util/BlockUtils.java\n\n@@ -103,6 +103,8 @@ public abstract class BlockUtils {\n \t\n \t@Nullable\n \tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n \t\tString data = dataString.replace(\";\", \",\");\n \t\t// remove white space within square brackets ([ lit = false] -> [lit=false])\n \t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n"}}, {"oid": "bc20d81fe6b8c3574cec7f71c2a719330262b9c5", "url": "https://github.com/SkriptLang/Skript/commit/bc20d81fe6b8c3574cec7f71c2a719330262b9c5", "message": "BlockUtils - add a note regarding delimiter use in block data", "committedDate": "2020-07-23T23:55:52Z", "type": "commit"}, {"oid": "72b47a36d654f109bde2cbdcd843653988c48ace", "url": "https://github.com/SkriptLang/Skript/commit/72b47a36d654f109bde2cbdcd843653988c48ace", "message": "DefaultComparators - added default comparator for block -> BlockData and included a test", "committedDate": "2020-07-24T05:19:07Z", "type": "commit"}, {"oid": "ff7547c708a565ecf2f1033142c6284ebf45f5e3", "url": "https://github.com/SkriptLang/Skript/commit/ff7547c708a565ecf2f1033142c6284ebf45f5e3", "message": "DefaultChangers - use classExists method", "committedDate": "2020-07-24T05:20:23Z", "type": "commit"}, {"oid": "3bbc1458c7b9d15f26daadbc2a5b865036baec52", "url": "https://github.com/SkriptLang/Skript/commit/3bbc1458c7b9d15f26daadbc2a5b865036baec52", "message": "Merge branch 'master' into feature/block-data", "committedDate": "2020-07-25T20:31:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTIyMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r460511221", "bodyText": "Minor nitpick, but the first and second comment lines are properly capitalized, but then the subsequent ones aren't", "author": "Wealthyturtle", "createdAt": "2020-07-26T10:48:28Z", "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,23 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n+\t\tString data = dataString.replace(\";\", \",\");\n+\t\t// remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n+\t\t// if there are spaces before the square bracket we remove that\n+\t\tdata = data.replace(\" [\", \"[\");\n+\t\t// and replace white space between namespace with underscores", "originalCommit": "3bbc1458c7b9d15f26daadbc2a5b865036baec52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTMxNg==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r460511316", "bodyText": "wHaT iS wRoNg WiTh ThAt?\nIm joking haha! Yeah, ill fix it up :)", "author": "ShaneBeee", "createdAt": "2020-07-26T10:49:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTIyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMjEzNg==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r460512136", "bodyText": "Ok, the casings have been fixed \ud83d\udc4d", "author": "ShaneBeee", "createdAt": "2020-07-26T10:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTIyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "eed7b14a51ce39641c3ec166933ab49e3e6fcdf5", "chunk": "diff --git a/src/main/java/ch/njol/skript/util/BlockUtils.java b/src/main/java/ch/njol/skript/util/BlockUtils.java\nindex e6ed7880..e38586d8 100644\n--- a/src/main/java/ch/njol/skript/util/BlockUtils.java\n+++ b/src/main/java/ch/njol/skript/util/BlockUtils.java\n\n@@ -106,11 +106,11 @@ public abstract class BlockUtils {\n \t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n \t\t// Here we are just replacing it back to a comma to create a new block data\n \t\tString data = dataString.replace(\";\", \",\");\n-\t\t// remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\t// Remove white space within square brackets ([ lit = false] -> [lit=false])\n \t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n-\t\t// if there are spaces before the square bracket we remove that\n+\t\t// If there are spaces before the square bracket we remove that\n \t\tdata = data.replace(\" [\", \"[\");\n-\t\t// and replace white space between namespace with underscores\n+\t\t// And replace white space between namespace with underscores\n \t\tdata = data.replace(\" \", \"_\");\n \t\t\n \t\ttry {\n"}}, {"oid": "eed7b14a51ce39641c3ec166933ab49e3e6fcdf5", "url": "https://github.com/SkriptLang/Skript/commit/eed7b14a51ce39641c3ec166933ab49e3e6fcdf5", "message": "BlockUtils - fix casing of notes", "committedDate": "2020-07-26T10:56:17Z", "type": "commit"}, {"oid": "f1c346530ba6031d9aff9947480533e406c6103a", "url": "https://github.com/SkriptLang/Skript/commit/f1c346530ba6031d9aff9947480533e406c6103a", "message": "Merge branch 'master' of https://github.com/SkriptLang/Skript into feature/block-data", "committedDate": "2020-07-26T10:56:54Z", "type": "commit"}, {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3", "url": "https://github.com/SkriptLang/Skript/commit/83d86f42f27429200e1cc02bf059cb71f8c076d3", "message": "Merge remote-tracking branch 'origin/feature/block-data' into feature/block-data", "committedDate": "2020-07-26T10:57:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODY3Ng==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463258676", "bodyText": "Nitpick, but could you remove the space here? ;)", "author": "APickledWalrus", "createdAt": "2020-07-30T20:41:14Z", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -292,6 +294,84 @@ public Block deserialize(final String s) {\n \t\t\t\t\t}\n \t\t\t\t}));\n \t\t\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(BlockData.class, \"blockdata\")\n+\t\t\t\t.user(\"block ?datas?\")\n+\t\t\t\t.name(\"Block Data\")\n+\t\t\t\t.description(\"Block data is the detailed information about a block, referred to in Minecraft as BlockStates, \" +\n+\t\t\t\t\t\"allowing for the manipulation of different aspects of the block, including shape, waterlogging, direction the block is facing, \" +\n+\t\t\t\t\t\"and so much more. Information regarding each block's optional data can be found on Minecraft's Wiki. Find the block you're \" +\n+\t\t\t\t\t\"looking for and scroll down to 'Block States'. Different states must be separated by a semicolon (see examples). \" +\n+\t\t\t\t\t\"The 'minecraft:' namespace is optional, as well as are underscores.\")\n+\t\t\t\t.examples(\"set block at player to campfire[lit=false]\",\n+\t\t\t\t\t\"set target block of player to oak stairs[facing=north;waterlogged=true]\",\n+\t\t\t\t\t\"set block at player to grass_block[snowy=true]\",\n+\t\t\t\t\t\"set loop-block to minecraft:chest[facing=north]\",\n+\t\t\t\t\t\"set block above player to oak_log[axis=y]\",\n+\t\t\t\t\t\"set target block of player to minecraft:oak_leaves[distance=2;persistent=false]\")\n+\t\t\t\t.after(\"itemtype\")\n+\t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<BlockData>() {\n+\t\t\t\t\t", "originalCommit": "83d86f42f27429200e1cc02bf059cb71f8c076d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2NzA2MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463267061", "bodyText": "Ok space being removed, will see in next commit!", "author": "ShaneBeee", "createdAt": "2020-07-30T20:57:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODY3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e0766080646cd10d19dac43e68a5bb3deb85e7f5", "chunk": "diff --git a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\nindex 16746d5d..0471cdbc 100644\n--- a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n+++ b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n\n@@ -313,7 +313,6 @@ public class BukkitClasses {\n \t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n \t\t\t\t.since(\"INSERT VERSION\")\n \t\t\t\t.parser(new Parser<BlockData>() {\n-\t\t\t\t\t\n \t\t\t\t\t@Nullable\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic BlockData parse(String s, ParseContext context) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODgxNA==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463258814", "bodyText": "Same here with the space >:)", "author": "APickledWalrus", "createdAt": "2020-07-30T20:41:30Z", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -292,6 +294,84 @@ public Block deserialize(final String s) {\n \t\t\t\t\t}\n \t\t\t\t}));\n \t\t\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(BlockData.class, \"blockdata\")\n+\t\t\t\t.user(\"block ?datas?\")\n+\t\t\t\t.name(\"Block Data\")\n+\t\t\t\t.description(\"Block data is the detailed information about a block, referred to in Minecraft as BlockStates, \" +\n+\t\t\t\t\t\"allowing for the manipulation of different aspects of the block, including shape, waterlogging, direction the block is facing, \" +\n+\t\t\t\t\t\"and so much more. Information regarding each block's optional data can be found on Minecraft's Wiki. Find the block you're \" +\n+\t\t\t\t\t\"looking for and scroll down to 'Block States'. Different states must be separated by a semicolon (see examples). \" +\n+\t\t\t\t\t\"The 'minecraft:' namespace is optional, as well as are underscores.\")\n+\t\t\t\t.examples(\"set block at player to campfire[lit=false]\",\n+\t\t\t\t\t\"set target block of player to oak stairs[facing=north;waterlogged=true]\",\n+\t\t\t\t\t\"set block at player to grass_block[snowy=true]\",\n+\t\t\t\t\t\"set loop-block to minecraft:chest[facing=north]\",\n+\t\t\t\t\t\"set block above player to oak_log[axis=y]\",\n+\t\t\t\t\t\"set target block of player to minecraft:oak_leaves[distance=2;persistent=false]\")\n+\t\t\t\t.after(\"itemtype\")\n+\t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<BlockData>() {\n+\t\t\t\t\t\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic BlockData parse(String s, ParseContext context) {\n+\t\t\t\t\t\treturn BlockUtils.createBlockData(s);\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(BlockData o, int flags) {\n+\t\t\t\t\t\treturn o.getAsString().replace(\",\", \";\");\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(BlockData o) {\n+\t\t\t\t\t\treturn \"blockdata:\" + o.getAsString();\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String getVariableNamePattern() {\n+\t\t\t\t\t\treturn \"blockdata:.+\";\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.serializer(new Serializer<BlockData>() {\n+\t\t\t\t\t", "originalCommit": "83d86f42f27429200e1cc02bf059cb71f8c076d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2NzExNw==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463267117", "bodyText": "Ok space being removed, will see in next commit!", "author": "ShaneBeee", "createdAt": "2020-07-30T20:57:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODgxNA=="}], "type": "inlineReview", "revised_code": {"commit": "e0766080646cd10d19dac43e68a5bb3deb85e7f5", "chunk": "diff --git a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\nindex 16746d5d..0471cdbc 100644\n--- a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n+++ b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n\n@@ -313,7 +313,6 @@ public class BukkitClasses {\n \t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n \t\t\t\t.since(\"INSERT VERSION\")\n \t\t\t\t.parser(new Parser<BlockData>() {\n-\t\t\t\t\t\n \t\t\t\t\t@Nullable\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic BlockData parse(String s, ParseContext context) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1OTU0Ng==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463259546", "bodyText": "Another nitpick, but you don't need the curly brackets here \ud83d\ude42", "author": "APickledWalrus", "createdAt": "2020-07-30T20:43:01Z", "path": "src/main/java/ch/njol/skript/expressions/ExprBlockData.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.block.Block;\n+import org.bukkit.block.data.BlockData;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Block Data\")\n+@Description(\"Get the <a href='types.html#blockdata'>block data</a> associated with a block. This data can also be used to set blocks.\")\n+@Examples({\"set {data} to block data of target block\",\n+\t\"set block at player to {data}\"})\n+@RequiredPlugins(\"Minecraft 1.13+\")\n+@Since(\"INSERT VERSION\")\n+public class ExprBlockData extends SimplePropertyExpression<Block, BlockData> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {", "originalCommit": "83d86f42f27429200e1cc02bf059cb71f8c076d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2Nzg0NQ==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463267845", "bodyText": "Yeah sure, but I also dont see why it should be removed, but ill remove it anyways.", "author": "ShaneBeee", "createdAt": "2020-07-30T20:59:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1OTU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2OTk2NA==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463269964", "bodyText": "Well, you don't have to if you think it's better with them there. Mainly made this suggestion since most expressions omit them :)", "author": "APickledWalrus", "createdAt": "2020-07-30T21:03:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1OTU0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "362db3f9a8eba1c9bf0499dfd3c7ac15e592979c", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprBlockData.java b/src/main/java/ch/njol/skript/expressions/ExprBlockData.java\nindex 801676d1..51353f93 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprBlockData.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprBlockData.java\n\n@@ -40,9 +40,8 @@ import ch.njol.skript.expressions.base.SimplePropertyExpression;\n public class ExprBlockData extends SimplePropertyExpression<Block, BlockData> {\n \t\n \tstatic {\n-\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\"))\n \t\t\tregister(ExprBlockData.class, BlockData.class, \"block[ ]data\", \"blocks\");\n-\t\t}\n \t}\n \t\n \t@Nullable\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MDgwNQ==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463260805", "bodyText": "I might be wrong, but wouldn't there still be white space if there were multiple spaces before the bracket?", "author": "APickledWalrus", "createdAt": "2020-07-30T20:45:34Z", "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,23 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n+\t\tString data = dataString.replace(\";\", \",\");\n+\t\t// Remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n+\t\t// If there are spaces before the square bracket we remove that\n+\t\tdata = data.replace(\" [\", \"[\");", "originalCommit": "83d86f42f27429200e1cc02bf059cb71f8c076d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3NzIzMg==", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463277232", "bodyText": "Fixed via all the dudes on discord:)", "author": "ShaneBeee", "createdAt": "2020-07-30T21:19:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MDgwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "07164bd24aa1915a255ef974e518b4842a2de72c", "chunk": "diff --git a/src/main/java/ch/njol/skript/util/BlockUtils.java b/src/main/java/ch/njol/skript/util/BlockUtils.java\nindex e38586d8..870a58f0 100644\n--- a/src/main/java/ch/njol/skript/util/BlockUtils.java\n+++ b/src/main/java/ch/njol/skript/util/BlockUtils.java\n\n@@ -108,8 +108,8 @@ public abstract class BlockUtils {\n \t\tString data = dataString.replace(\";\", \",\");\n \t\t// Remove white space within square brackets ([ lit = false] -> [lit=false])\n \t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n-\t\t// If there are spaces before the square bracket we remove that\n-\t\tdata = data.replace(\" [\", \"[\");\n+\t\t// Remove white space between last word and square bracket\n+\t\tdata = data.replaceAll(\"\\\\s+\\\\[\", \"[\");\n \t\t// And replace white space between namespace with underscores\n \t\tdata = data.replace(\" \", \"_\");\n \t\t\n"}}, {"oid": "7608aafbe4a954b868495439b42258dabae7b5c3", "url": "https://github.com/SkriptLang/Skript/commit/7608aafbe4a954b868495439b42258dabae7b5c3", "message": "Merge branch 'master' into feature/block-data", "committedDate": "2020-07-30T20:56:19Z", "type": "commit"}, {"oid": "e0766080646cd10d19dac43e68a5bb3deb85e7f5", "url": "https://github.com/SkriptLang/Skript/commit/e0766080646cd10d19dac43e68a5bb3deb85e7f5", "message": "BukkitClasses - removed whitespace", "committedDate": "2020-07-30T20:58:27Z", "type": "commit"}, {"oid": "362db3f9a8eba1c9bf0499dfd3c7ac15e592979c", "url": "https://github.com/SkriptLang/Skript/commit/362db3f9a8eba1c9bf0499dfd3c7ac15e592979c", "message": "ExprBlockData - removed braces", "committedDate": "2020-07-30T21:01:39Z", "type": "commit"}, {"oid": "07164bd24aa1915a255ef974e518b4842a2de72c", "url": "https://github.com/SkriptLang/Skript/commit/07164bd24aa1915a255ef974e518b4842a2de72c", "message": "BlockUtils - better regex for removing white space before \"[\"", "committedDate": "2020-07-30T21:18:51Z", "type": "commit"}]}