{"pr_number": 2741, "pr_title": "EffBan - add an optional time span to temp ban a player", "pr_createdAt": "2020-01-03T10:43:14Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/2741", "timeline": [{"oid": "a5c65fd4cbc3b6fed03fa049820ba699fe73ffd0", "url": "https://github.com/SkriptLang/Skript/commit/a5c65fd4cbc3b6fed03fa049820ba699fe73ffd0", "message": "EffBan - add an optional time span to temp ban a player", "committedDate": "2020-01-03T10:41:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkxMDg4NQ==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r362910885", "bodyText": "getSingle may be null, so it's not safe to call getMS right away", "author": "Pikachu920", "createdAt": "2020-01-03T18:24:23Z", "path": "src/main/java/ch/njol/skript/effects/EffBan.java", "diffHunk": "@@ -73,15 +76,17 @@\n \tpublic boolean init(final Expression<?>[] exprs, final int matchedPattern, final Kleenean isDelayed, final ParseResult parseResult) {\r\n \t\tplayers = exprs[0];\r\n \t\treason = exprs.length > 1 ? (Expression<String>) exprs[1] : null;\r\n+\t\texpires = exprs.length > 1 ? (Expression<Timespan>) exprs[2] : null;\r\n \t\tban = matchedPattern % 2 == 0;\r\n \t\tipBan = matchedPattern >= 2;\r\n \t\treturn true;\r\n \t}\r\n \t\r\n+\t@SuppressWarnings(\"null\")\r\n \t@Override\r\n \tprotected void execute(final Event e) {\r\n \t\tfinal String reason = this.reason != null ? this.reason.getSingle(e) : null; // don't check for null, just ignore an invalid reason\r\n-\t\tfinal Date expires = null;\r\n+\t\tfinal Date expires = this.expires != null ? new Date(System.currentTimeMillis() + this.expires.getSingle(e).getMilliSeconds()) : null;\r", "originalCommit": "a5c65fd4cbc3b6fed03fa049820ba699fe73ffd0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkzMjQ5NA==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r362932494", "bodyText": "Arg Skript ... I tell ya! haha! I was trying to keep this as neat and tidy as possible, but nope. Ill do a quick little fix for this, hope it doesn't get too messy.\nEDIT:\nFixed.", "author": "ShaneBeee", "createdAt": "2020-01-03T19:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkxMDg4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "13f94e693bfb3b160f7501fb0d5d01a4887795bf", "chunk": "diff --git a/src/main/java/ch/njol/skript/effects/EffBan.java b/src/main/java/ch/njol/skript/effects/EffBan.java\nindex dc379c59..30e1f4c2 100644\n--- a/src/main/java/ch/njol/skript/effects/EffBan.java\n+++ b/src/main/java/ch/njol/skript/effects/EffBan.java\n\n@@ -1,137 +1,138 @@\n-/**\n- *   This file is part of Skript.\n- *\n- *  Skript is free software: you can redistribute it and/or modify\n- *  it under the terms of the GNU General Public License as published by\n- *  the Free Software Foundation, either version 3 of the License, or\n- *  (at your option) any later version.\n- *\n- *  Skript is distributed in the hope that it will be useful,\n- *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- *  GNU General Public License for more details.\n- *\n- *  You should have received a copy of the GNU General Public License\n- *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n- *\n- *\n- * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n- */\n-package ch.njol.skript.effects;\n-\n-import java.net.InetAddress;\n-import java.net.InetSocketAddress;\n-import java.util.Date;\n-\n-import org.bukkit.BanList;\n-import org.bukkit.Bukkit;\n-import org.bukkit.OfflinePlayer;\n-import org.bukkit.entity.Player;\n-import org.bukkit.event.Event;\n-import org.eclipse.jdt.annotation.Nullable;\n-\n-import ch.njol.skript.Skript;\n-import ch.njol.skript.doc.Description;\n-import ch.njol.skript.doc.Examples;\n-import ch.njol.skript.doc.Name;\n-import ch.njol.skript.doc.Since;\n-import ch.njol.skript.lang.Effect;\n-import ch.njol.skript.lang.Expression;\n-import ch.njol.skript.lang.SkriptParser.ParseResult;\n-import ch.njol.skript.util.Timespan;\n-import ch.njol.util.Kleenean;\n-\n-/**\n- * @author Peter G\u00fcttinger\n- */\n-@Name(\"Ban\")\n-@Description({\"Bans/unbans a player or an IP address. Option values for ban reason and temp ban time span.\",\n-\t\"Note that banning a player will not kick them from the server. You may use the <a href='effects.html#EffKick'>kick effect</a> if you wish so.\"})\n-@Examples({\"unban player\",\n-\t\"ban \\\"127.0.0.1\\\"\",\n-\t\"IP-ban the player because \\\"he is an idiot\\\"\",\n-\t\"ban player due to \\\"inappropriate language\\\" for 2 days\"})\n-@Since(\"1.4, 2.1.1 (ban reason), INSERT VERSION (timespan)\")\n-public class EffBan extends Effect {\n-\t\n-\tstatic {\n-\t\tSkript.registerEffect(EffBan.class,\n-\t\t\t\"ban %strings/offlineplayers% [(by reason of|because [of]|on account of|due to) %-string%] [for %-timespan%]\", \"unban %strings/offlineplayers%\",\n-\t\t\t\"ban %players% by IP [(by reason of|because [of]|on account of|due to) %-string%] [for %-timespan%]\", \"unban %players% by IP\",\n-\t\t\t\"IP(-| )ban %players% [(by reason of|because [of]|on account of|due to) %-string%] [for %-timespan%]\", \"(IP(-| )unban|un[-]IP[-]ban) %players%\");\n-\t}\n-\t\n-\t@SuppressWarnings(\"null\")\n-\tprivate Expression<?> players;\n-\t@Nullable\n-\tprivate Expression<String> reason;\n-\t@Nullable\n-\tprivate Expression<Timespan> expires;\n-\t\n-\tprivate boolean ban;\n-\tprivate boolean ipBan;\n-\t\n-\t@SuppressWarnings({\"null\", \"unchecked\"})\n-\t@Override\n-\tpublic boolean init(final Expression<?>[] exprs, final int matchedPattern, final Kleenean isDelayed, final ParseResult parseResult) {\n-\t\tplayers = exprs[0];\n-\t\treason = exprs.length > 1 ? (Expression<String>) exprs[1] : null;\n-\t\texpires = exprs.length > 1 ? (Expression<Timespan>) exprs[2] : null;\n-\t\tban = matchedPattern % 2 == 0;\n-\t\tipBan = matchedPattern >= 2;\n-\t\treturn true;\n-\t}\n-\t\n-\t@SuppressWarnings(\"null\")\n-\t@Override\n-\tprotected void execute(final Event e) {\n-\t\tfinal String reason = this.reason != null ? this.reason.getSingle(e) : null; // don't check for null, just ignore an invalid reason\n-\t\tfinal Date expires = this.expires != null ? new Date(System.currentTimeMillis() + this.expires.getSingle(e).getMilliSeconds()) : null;\n-\t\tfinal String source = \"Skript ban effect\";\n-\t\tfor (final Object o : players.getArray(e)) {\n-\t\t\tif (o instanceof Player) {\n-\t\t\t\tif (ipBan) {\n-\t\t\t\t\tInetSocketAddress addr = ((Player) o).getAddress();\n-\t\t\t\t\tif (addr == null)\n-\t\t\t\t\t\treturn; // Can't ban unknown IP\n-\t\t\t\t\tfinal String ip = addr.getAddress().getHostAddress();\n-\t\t\t\t\tif (ban)\n-\t\t\t\t\t\tBukkit.getBanList(BanList.Type.IP).addBan(ip, reason, expires, source);\n-\t\t\t\t\telse\n-\t\t\t\t\t\tBukkit.getBanList(BanList.Type.IP).pardon(ip);\n-\t\t\t\t} else {\n-\t\t\t\t\tif (ban)\n-\t\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).addBan(((Player) o).getName(), reason, expires, source); // FIXME [UUID] ban UUID\n-\t\t\t\t\telse\n-\t\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).pardon(((Player) o).getName());\n-\t\t\t\t}\n-\t\t\t} else if (o instanceof OfflinePlayer) {\n-\t\t\t\tString name = ((OfflinePlayer) o).getName();\n-\t\t\t\tif (name == null)\n-\t\t\t\t\treturn; // Can't ban, name unknown\n-\t\t\t\tif (ban)\n-\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).addBan(name, reason, expires, source);\n-\t\t\t\telse\n-\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).pardon(name);\n-\t\t\t} else if (o instanceof String) {\n-\t\t\t\tfinal String s = (String) o;\n-\t\t\t\tif (ban) {\n-\t\t\t\t\tBukkit.getBanList(BanList.Type.IP).addBan(s, reason, expires, source);\n-\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).addBan(s, reason, expires, source);\n-\t\t\t\t} else {\n-\t\t\t\t\tBukkit.getBanList(BanList.Type.IP).pardon(s);\n-\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).pardon(s);\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\tassert false;\n-\t\t\t}\n-\t\t}\n-\t}\n-\t\n-\t@Override\n-\tpublic String toString(final @Nullable Event e, final boolean debug) {\n-\t\treturn (ipBan ? \"IP-\" : \"\") + (ban ? \"\" : \"un\") + \"ban \" + players.toString(e, debug) +\n-\t\t\t(reason != null ? \" on account of \" + reason.toString(e, debug) : \"\") + (expires != null ? \" for \" + expires.toString(e, debug) : \"\");\n-\t}\n-\t\n-}\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.effects;\n+\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.util.Date;\n+\n+import org.bukkit.BanList;\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Effect;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.util.Timespan;\n+import ch.njol.util.Kleenean;\n+\n+/**\n+ * @author Peter G\u00fcttinger\n+ */\n+@Name(\"Ban\")\n+@Description({\"Bans/unbans a player or an IP address. Option values for ban reason and temp ban time span.\",\n+\t\"Note that banning a player will not kick them from the server. You may use the <a href='effects.html#EffKick'>kick effect</a> if you wish so.\"})\n+@Examples({\"unban player\",\n+\t\"ban \\\"127.0.0.1\\\"\",\n+\t\"IP-ban the player because \\\"he is an idiot\\\"\",\n+\t\"ban player due to \\\"inappropriate language\\\" for 2 days\"})\n+@Since(\"1.4, 2.1.1 (ban reason), INSERT VERSION (timespan)\")\n+public class EffBan extends Effect {\n+\t\n+\tstatic {\n+\t\tSkript.registerEffect(EffBan.class,\n+\t\t\t\"ban %strings/offlineplayers% [(by reason of|because [of]|on account of|due to) %-string%] [for %-timespan%]\", \"unban %strings/offlineplayers%\",\n+\t\t\t\"ban %players% by IP [(by reason of|because [of]|on account of|due to) %-string%] [for %-timespan%]\", \"unban %players% by IP\",\n+\t\t\t\"IP(-| )ban %players% [(by reason of|because [of]|on account of|due to) %-string%] [for %-timespan%]\", \"(IP(-| )unban|un[-]IP[-]ban) %players%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<?> players;\n+\t@Nullable\n+\tprivate Expression<String> reason;\n+\t@Nullable\n+\tprivate Expression<Timespan> expires;\n+\t\n+\tprivate boolean ban;\n+\tprivate boolean ipBan;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(final Expression<?>[] exprs, final int matchedPattern, final Kleenean isDelayed, final ParseResult parseResult) {\n+\t\tplayers = exprs[0];\n+\t\treason = exprs.length > 1 ? (Expression<String>) exprs[1] : null;\n+\t\texpires = exprs.length > 1 ? (Expression<Timespan>) exprs[2] : null;\n+\t\tban = matchedPattern % 2 == 0;\n+\t\tipBan = matchedPattern >= 2;\n+\t\treturn true;\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tprotected void execute(final Event e) {\n+\t\tfinal String reason = this.reason != null ? this.reason.getSingle(e) : null; // don't check for null, just ignore an invalid reason\n+\t\tTimespan ts = this.expires != null ? this.expires.getSingle(e) : null;\n+\t\tfinal Date expires = ts != null ? new Date(System.currentTimeMillis() + ts.getMilliSeconds()) : null;\n+\t\tfinal String source = \"Skript ban effect\";\n+\t\tfor (final Object o : players.getArray(e)) {\n+\t\t\tif (o instanceof Player) {\n+\t\t\t\tif (ipBan) {\n+\t\t\t\t\tInetSocketAddress addr = ((Player) o).getAddress();\n+\t\t\t\t\tif (addr == null)\n+\t\t\t\t\t\treturn; // Can't ban unknown IP\n+\t\t\t\t\tfinal String ip = addr.getAddress().getHostAddress();\n+\t\t\t\t\tif (ban)\n+\t\t\t\t\t\tBukkit.getBanList(BanList.Type.IP).addBan(ip, reason, expires, source);\n+\t\t\t\t\telse\n+\t\t\t\t\t\tBukkit.getBanList(BanList.Type.IP).pardon(ip);\n+\t\t\t\t} else {\n+\t\t\t\t\tif (ban)\n+\t\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).addBan(((Player) o).getName(), reason, expires, source); // FIXME [UUID] ban UUID\n+\t\t\t\t\telse\n+\t\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).pardon(((Player) o).getName());\n+\t\t\t\t}\n+\t\t\t} else if (o instanceof OfflinePlayer) {\n+\t\t\t\tString name = ((OfflinePlayer) o).getName();\n+\t\t\t\tif (name == null)\n+\t\t\t\t\treturn; // Can't ban, name unknown\n+\t\t\t\tif (ban)\n+\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).addBan(name, reason, expires, source);\n+\t\t\t\telse\n+\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).pardon(name);\n+\t\t\t} else if (o instanceof String) {\n+\t\t\t\tfinal String s = (String) o;\n+\t\t\t\tif (ban) {\n+\t\t\t\t\tBukkit.getBanList(BanList.Type.IP).addBan(s, reason, expires, source);\n+\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).addBan(s, reason, expires, source);\n+\t\t\t\t} else {\n+\t\t\t\t\tBukkit.getBanList(BanList.Type.IP).pardon(s);\n+\t\t\t\t\tBukkit.getBanList(BanList.Type.NAME).pardon(s);\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tassert false;\n+\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(final @Nullable Event e, final boolean debug) {\n+\t\treturn (ipBan ? \"IP-\" : \"\") + (ban ? \"\" : \"un\") + \"ban \" + players.toString(e, debug) +\n+\t\t\t(reason != null ? \" on account of \" + reason.toString(e, debug) : \"\") + (expires != null ? \" for \" + expires.toString(e, debug) : \"\");\n+\t}\n+\t\n+}\n"}}, {"oid": "13f94e693bfb3b160f7501fb0d5d01a4887795bf", "url": "https://github.com/SkriptLang/Skript/commit/13f94e693bfb3b160f7501fb0d5d01a4887795bf", "message": "EffBan - Prevent null from timespan", "committedDate": "2020-01-03T19:37:24Z", "type": "commit"}, {"oid": "22f1b688a34e58cd935997c9b06bc6fefb447083", "url": "https://github.com/SkriptLang/Skript/commit/22f1b688a34e58cd935997c9b06bc6fefb447083", "message": "Revert \"EffBan - Prevent null from timespan\"\n\nThis reverts commit 13f94e69", "committedDate": "2020-01-03T19:38:45Z", "type": "commit"}, {"oid": "7545b4f071bf62eeb0af5f363a8ed3a66914132c", "url": "https://github.com/SkriptLang/Skript/commit/7545b4f071bf62eeb0af5f363a8ed3a66914132c", "message": "EffBan - Prevent null from timespan", "committedDate": "2020-01-03T19:39:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r364442694", "bodyText": "is it really a good idea to permaban people if the timespan happened to be not set?", "author": "Pikachu920", "createdAt": "2020-01-08T21:05:35Z", "path": "src/main/java/ch/njol/skript/effects/EffBan.java", "diffHunk": "@@ -73,15 +76,18 @@\n \tpublic boolean init(final Expression<?>[] exprs, final int matchedPattern, final Kleenean isDelayed, final ParseResult parseResult) {\r\n \t\tplayers = exprs[0];\r\n \t\treason = exprs.length > 1 ? (Expression<String>) exprs[1] : null;\r\n+\t\texpires = exprs.length > 1 ? (Expression<Timespan>) exprs[2] : null;\r\n \t\tban = matchedPattern % 2 == 0;\r\n \t\tipBan = matchedPattern >= 2;\r\n \t\treturn true;\r\n \t}\r\n \t\r\n+\t@SuppressWarnings(\"null\")\r\n \t@Override\r\n \tprotected void execute(final Event e) {\r\n \t\tfinal String reason = this.reason != null ? this.reason.getSingle(e) : null; // don't check for null, just ignore an invalid reason\r\n-\t\tfinal Date expires = null;\r\n+\t\tTimespan ts = this.expires != null ? this.expires.getSingle(e) : null;\r\n+\t\tfinal Date expires = ts != null ? new Date(System.currentTimeMillis() + ts.getMilliSeconds()) : null;\r", "originalCommit": "7545b4f071bf62eeb0af5f363a8ed3a66914132c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0NjAyMQ==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r364446021", "bodyText": "I mean, in all fairness that is up to the Skripter to decide how they want to ban. If they don't choose a timespan then they know its going to be permanent.", "author": "ShaneBeee", "createdAt": "2020-01-08T21:14:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1NTY2NQ==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r364455665", "bodyText": "yeah but with this ban player for {_null var} is a permaban", "author": "Pikachu920", "createdAt": "2020-01-08T21:38:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ4MzA3MQ==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r364483071", "bodyText": "Ah good point. Do you have a suggestion for a better way around this?", "author": "ShaneBeee", "createdAt": "2020-01-08T22:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc3MTExMA==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r364771110", "bodyText": "just return like other effects do? i feel like it's slightly better to not ban them rather than perma them but i'm not sure... at least it'd be consistent", "author": "Pikachu920", "createdAt": "2020-01-09T14:35:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc3MTQxMw==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r364771413", "bodyText": "alternatively we can implement dice using armor stands and force the banned players to roll them in order to determine how long they get banned for.\ni like that idea", "author": "Pikachu920", "createdAt": "2020-01-09T14:36:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2MDY5MA==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r364860690", "bodyText": "alternatively we can implement dice using armor stands and force the banned players to roll them in order to determine how long they get banned for.\ni like that idea\n\nhahahahaha, OMG.\n\njust return like other effects do? i feel like it's slightly better to not ban them rather than perma them but i'm not sure... at least it'd be consistent\n\nsounds good. Ill start working on that.\nMy only fear here though is what if said var is null, and you THINK You are banning a player, then you aren't actually banning them. Do you think people will complain \"But I banned them and they aren't banned?!?\"\nMaybe send a console warning/error?", "author": "ShaneBeee", "createdAt": "2020-01-09T17:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA2MDE0MA==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r365060140", "bodyText": "Ok I added a check for the time span equaling null. Im also throwing a small error to the console to let them know they were not successfully banned.\nIm 50/50 on the error, due to the fact that many server owners/staff don't actually look at the console and this message may be useless.\nWhat is your input on that? If you think I should remove it, I can remove it.", "author": "ShaneBeee", "createdAt": "2020-01-10T03:31:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDU3Nw==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r365454577", "bodyText": "Generally, errors written to console are not very useful. We should instead update the documentation to indicate what happens if ban length is not given. That, or permaban the players; I assume that most server owners have some way for players to appeal bans.", "author": "bensku", "createdAt": "2020-01-10T22:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NTMwMA==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r365455300", "bodyText": "Ok, I will definitely remove the message.\nIm more in favour of perma banning the player vs no ban at all, so I will revery back to that.", "author": "ShaneBeee", "createdAt": "2020-01-10T22:27:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NjQyMQ==", "url": "https://github.com/SkriptLang/Skript/pull/2741#discussion_r365456421", "bodyText": "Ok, I have applied said changes.", "author": "ShaneBeee", "createdAt": "2020-01-10T22:31:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0MjY5NA=="}], "type": "inlineReview", "revised_code": {"commit": "3911d0e79874b913681be8afad3d902fa260efae", "chunk": "diff --git a/src/main/java/ch/njol/skript/effects/EffBan.java b/src/main/java/ch/njol/skript/effects/EffBan.java\nindex 9be22dee..ec2ba978 100644\n--- a/src/main/java/ch/njol/skript/effects/EffBan.java\n+++ b/src/main/java/ch/njol/skript/effects/EffBan.java\n\n@@ -87,7 +87,15 @@ public class EffBan extends Effect {\n \tprotected void execute(final Event e) {\n \t\tfinal String reason = this.reason != null ? this.reason.getSingle(e) : null; // don't check for null, just ignore an invalid reason\n \t\tTimespan ts = this.expires != null ? this.expires.getSingle(e) : null;\n-\t\tfinal Date expires = ts != null ? new Date(System.currentTimeMillis() + ts.getMilliSeconds()) : null;\n+\t\tDate expires = null;\n+\t\tif (this.expires != null) {\n+\t\t\tif (ts != null)\n+\t\t\t\texpires = new Date(System.currentTimeMillis() + ts.getMilliSeconds());\n+\t\t\telse {\n+\t\t\t\tSkript.error(\"Could not temp ban \" + players.toString(e, true) + \" for: \" + this.expires.toString(e, true));\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t}\n \t\tfinal String source = \"Skript ban effect\";\n \t\tfor (final Object o : players.getArray(e)) {\n \t\t\tif (o instanceof Player) {\n"}}, {"oid": "3911d0e79874b913681be8afad3d902fa260efae", "url": "https://github.com/SkriptLang/Skript/commit/3911d0e79874b913681be8afad3d902fa260efae", "message": "EffBan - prevent perma banning if timespan = null", "committedDate": "2020-01-10T03:29:57Z", "type": "commit"}, {"oid": "f7e9148dc84f9471e995986c1bd116f7b70f351e", "url": "https://github.com/SkriptLang/Skript/commit/f7e9148dc84f9471e995986c1bd116f7b70f351e", "message": "EffBan - removed error message, revert back to perm ban if timespan = null, updated description to let users know of this", "committedDate": "2020-01-10T22:30:45Z", "type": "commit"}]}