{"pr_number": 2757, "pr_title": "Enchanting Events", "pr_createdAt": "2020-01-12T19:25:51Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/2757", "timeline": [{"oid": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37", "url": "https://github.com/SkriptLang/Skript/commit/75b0ddf1106e561f71cc76a74f5eef509f1b9d37", "message": "Enchant Prepare Base", "committedDate": "2020-01-12T18:58:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYyMjYwNw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r365622607", "bodyText": "Maybe you could test the other way round, and return Number as default, i.e. if (mode == ChangeMode.REMOVE_ALL ...)", "author": "Wealthyturtle", "createdAt": "2020-01-13T00:10:57Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+import java.util.List;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+@Name(\"Enchantment Offer Cost\")\n+@Description(\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer. NOTE: This changes how many levels are required to enchant, but does not change the number of levels removed. To change that, use the enchant event.\")\n+@Examples(\"set cost of enchantment offer 1 to 50\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentOfferCost extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tregister(ExprEnchantmentOfferCost.class, Number.class, \"[enchant[ment]] cost\", \"enchantmentoffers\");\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] cost\";\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getCost();\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET || mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET)", "originalCommit": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c36ccaf6a461b579ab37dec2e16551eabed8903", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\nindex 4f4022ec..e124b708 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\n\n@@ -19,6 +19,10 @@\n  */\n package ch.njol.skript.expressions;\n \n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n import ch.njol.skript.Skript;\n import ch.njol.skript.classes.Changer;\n import ch.njol.skript.classes.Changer.ChangeMode;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYyMjY3NA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r365622674", "bodyText": "Same issue here.", "author": "Wealthyturtle", "createdAt": "2020-01-13T00:11:59Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.bukkit.block.Block;\n+import org.bukkit.block.BlockState;\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.SpongeAbsorbEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.registrations.Converters;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description(\"The enchantment level of an enchantment offer. NOTE: This change is visual, and does not change the number of levels applied. To change that, use the enchant event.\")\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] level\";\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET || mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET)", "originalCommit": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c36ccaf6a461b579ab37dec2e16551eabed8903", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\nindex 0f0b73bb..676f4af0 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n\n@@ -19,44 +19,26 @@\n  */\n package ch.njol.skript.expressions;\n \n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-\n-import org.bukkit.block.Block;\n-import org.bukkit.block.BlockState;\n-import org.bukkit.enchantments.Enchantment;\n import org.bukkit.enchantments.EnchantmentOffer;\n import org.bukkit.event.Event;\n-import org.bukkit.event.block.SpongeAbsorbEvent;\n-import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n-import org.bukkit.inventory.meta.ItemMeta;\n import org.eclipse.jdt.annotation.Nullable;\n \n-import ch.njol.skript.ScriptLoader;\n import ch.njol.skript.Skript;\n-import ch.njol.skript.aliases.ItemType;\n import ch.njol.skript.classes.Changer;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n import ch.njol.skript.doc.Examples;\n import ch.njol.skript.doc.Name;\n import ch.njol.skript.doc.Since;\n-import ch.njol.skript.expressions.base.PropertyExpression;\n import ch.njol.skript.expressions.base.SimplePropertyExpression;\n-import ch.njol.skript.lang.Expression;\n import ch.njol.skript.lang.ExpressionType;\n-import ch.njol.skript.lang.SkriptParser.ParseResult;\n-import ch.njol.skript.lang.util.SimpleExpression;\n-import ch.njol.skript.log.ErrorQuality;\n-import ch.njol.skript.registrations.Converters;\n-import ch.njol.skript.util.EnchantmentType;\n-import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Enchantment Offer Enchantment Level\")\n-@Description(\"The enchantment level of an enchantment offer. NOTE: This change is visual, and does not change the number of levels applied. To change that, use the enchant event.\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is visual, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the enchant event.\",})\n @Examples(\"set enchantment level of enchantment offer 1 to 3\")\n @Since(\"INSERT VERSION\")\n public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4MDA0MA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r367880040", "bodyText": "Wrong event class xD", "author": "Wealthyturtle", "createdAt": "2020-01-17T10:59:18Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.bukkit.block.BlockState;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.SpongeAbsorbEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Bonus\")\n+@Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves.\")\n+@Events(\"enchant prepare\")\n+@Examples(\"the enchantment bonus\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentBonus extends SimpleExpression<Integer> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantmentBonus.class, Integer.class, ExpressionType.SIMPLE, \"[the] enchantment bonus\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(SpongeAbsorbEvent.class)) {", "originalCommit": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c36ccaf6a461b579ab37dec2e16551eabed8903", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\nindex 0822b958..0550733e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\n\n@@ -19,12 +19,7 @@\n  */\n package ch.njol.skript.expressions;\n \n-import java.util.Iterator;\n-import java.util.List;\n-\n-import org.bukkit.block.BlockState;\n import org.bukkit.event.Event;\n-import org.bukkit.event.block.SpongeAbsorbEvent;\n import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n import org.eclipse.jdt.annotation.Nullable;\n \n"}}, {"oid": "7c36ccaf6a461b579ab37dec2e16551eabed8903", "url": "https://github.com/SkriptLang/Skript/commit/7c36ccaf6a461b579ab37dec2e16551eabed8903", "message": "Cleanup Enchant Prepare Files", "committedDate": "2020-01-20T04:39:02Z", "type": "commit"}, {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "url": "https://github.com/SkriptLang/Skript/commit/d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "message": "Add version compatibility", "committedDate": "2020-01-20T05:46:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwNzYxNQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374107615", "bodyText": "Number of bookshelves where exactly? Near the enchantment table? How near, exactly? You can link to Minecraft wiki if it depends on MC version or is too complex to explain with a few sentences.", "author": "bensku", "createdAt": "2020-02-03T13:42:57Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Bonus\")\n+@Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves.\")", "originalCommit": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83d720dc9f172bdc2158eba14c395a8553528688", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\nindex 0550733e..a5d43b28 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\n\n@@ -38,20 +38,20 @@ import ch.njol.skript.log.ErrorQuality;\n import ch.njol.util.Kleenean;\n \n @Name(\"Enchantment Bonus\")\n-@Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves.\")\n+@Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves affecting/surrounding the enchantment table.\")\n @Events(\"enchant prepare\")\n @Examples(\"the enchantment bonus\")\n @Since(\"INSERT VERSION\")\n-public class ExprEnchantmentBonus extends SimpleExpression<Integer> {\n+public class ExprEnchantmentBonus extends SimpleExpression<Number> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantmentBonus.class, Integer.class, ExpressionType.SIMPLE, \"[the] enchantment bonus\");\n+\t\tSkript.registerExpression(ExprEnchantmentBonus.class, Number.class, ExpressionType.SIMPLE, \"[the] enchantment bonus\");\n \t}\n \n \t@Override\n \tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n \t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n-\t\t\tSkript.error(\"Getting the enchantment bonus is only possible in an enchant prepare event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\tSkript.error(\"The enchantment bonus is only usable in an enchant prepare event.\", ErrorQuality.SEMANTIC_ERROR);\n \t\t\treturn false;\n \t\t}\n \t\treturn true;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwODM3MQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374108371", "bodyText": "Is there any replacement in later versions? Also, use separate annotation to spell out the requirements.", "author": "bensku", "createdAt": "2020-02-03T13:44:24Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.Arrays;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Exp Level Cost\")\n+@Description({\"The cost of an enchantment in an enchant prepare event. This expression is only for Minecraft 1.9 and 1.10.\",", "originalCommit": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExMjc3OA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374112778", "bodyText": "There is functionality for this in later versions. It is more advanced though.", "author": "APickledWalrus", "createdAt": "2020-02-03T13:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwODM3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "83d720dc9f172bdc2158eba14c395a8553528688", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java\nindex 7c12eaaa..a010bbec 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java\n\n@@ -30,8 +30,10 @@ import ch.njol.skript.Skript;\n import ch.njol.skript.classes.Changer;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n import ch.njol.skript.doc.Examples;\n import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n import ch.njol.skript.doc.Since;\n import ch.njol.skript.lang.Expression;\n import ch.njol.skript.lang.ExpressionType;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwODk4Mg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374108982", "bodyText": "Indicate required MC version in annotation meant for requirements.", "author": "bensku", "createdAt": "2020-02-03T13:45:33Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events. Minecraft 1.11+.\")", "originalCommit": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83d720dc9f172bdc2158eba14c395a8553528688", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\nindex d63fad96..d8b5c5dc 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n\n@@ -27,8 +27,10 @@ import org.eclipse.jdt.annotation.Nullable;\n import ch.njol.skript.ScriptLoader;\n import ch.njol.skript.Skript;\n import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n import ch.njol.skript.doc.Examples;\n import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n import ch.njol.skript.doc.Since;\n import ch.njol.skript.lang.Expression;\n import ch.njol.skript.lang.ExpressionType;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTIxMQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374109211", "bodyText": "Requirements annotation.", "author": "bensku", "createdAt": "2020-02-03T13:45:59Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Cost\")\n+@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer. Minecraft 1.11+.\",", "originalCommit": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83d720dc9f172bdc2158eba14c395a8553528688", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\nindex 6630ac55..1bae02a7 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\n\n@@ -25,23 +25,24 @@ import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n import org.eclipse.jdt.annotation.Nullable;\n \n import ch.njol.skript.Skript;\n-import ch.njol.skript.classes.Changer;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n import ch.njol.skript.doc.Examples;\n import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n import ch.njol.skript.doc.Since;\n import ch.njol.skript.expressions.base.SimplePropertyExpression;\n import ch.njol.skript.lang.ExpressionType;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Enchantment Offer Enchantment Cost\")\n-@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer. Minecraft 1.11+.\",\n+@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer.\",\n \t\t\t\"If the cost is changed, it will always be at least 1.\",\n \t\t\t\"This changes how many levels are required to enchant, but does not change the number of levels removed.\", \n \t\t\t\"To change the number of levels removed, use the enchant event.\"})\n @Examples(\"set cost of enchantment offer 1 to 50\")\n @Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n public class ExprEnchantmentOfferCost extends SimplePropertyExpression<EnchantmentOffer, Number>{\n \n \tstatic {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTM0OQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374109349", "bodyText": "Nullable annotation to line before.", "author": "bensku", "createdAt": "2020-02-03T13:46:17Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Cost\")\n+@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer. Minecraft 1.11+.\",\n+\t\t\t\"If the cost is changed, it will always be at least 1.\",\n+\t\t\t\"This changes how many levels are required to enchant, but does not change the number of levels removed.\", \n+\t\t\t\"To change the number of levels removed, use the enchant event.\"})\n+@Examples(\"set cost of enchantment offer 1 to 50\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentOfferCost extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.methodExists(EnchantmentOffer.class, \"getCost\")) {\n+\t\t\tregister(ExprEnchantmentOfferCost.class, Number.class, \"[enchant[ment]] cost\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] cost\";\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getCost();\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {", "originalCommit": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83d720dc9f172bdc2158eba14c395a8553528688", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\nindex 6630ac55..1bae02a7 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\n\n@@ -25,23 +25,24 @@ import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n import org.eclipse.jdt.annotation.Nullable;\n \n import ch.njol.skript.Skript;\n-import ch.njol.skript.classes.Changer;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n import ch.njol.skript.doc.Examples;\n import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n import ch.njol.skript.doc.Since;\n import ch.njol.skript.expressions.base.SimplePropertyExpression;\n import ch.njol.skript.lang.ExpressionType;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Enchantment Offer Enchantment Cost\")\n-@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer. Minecraft 1.11+.\",\n+@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer.\",\n \t\t\t\"If the cost is changed, it will always be at least 1.\",\n \t\t\t\"This changes how many levels are required to enchant, but does not change the number of levels removed.\", \n \t\t\t\"To change the number of levels removed, use the enchant event.\"})\n @Examples(\"set cost of enchantment offer 1 to 50\")\n @Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n public class ExprEnchantmentOfferCost extends SimplePropertyExpression<EnchantmentOffer, Number>{\n \n \tstatic {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTc1OA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374109758", "bodyText": "Change visual to e.g. cosmetic.", "author": "bensku", "createdAt": "2020-02-03T13:47:03Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.registrations.Converters;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment\")\n+@Description({\"The enchantment of an enchantment offer. Minecraft 1.11+.\", \n+\t\t\t\"NOTE: The level and cost should be set with their corresponding expressions.\", \n+\t\t\t\"This change is visual, and does not effect what the item will be enchanted with.\", ", "originalCommit": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83d720dc9f172bdc2158eba14c395a8553528688", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java\nindex 2196d2c9..8cdf0f80 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java\n\n@@ -30,6 +30,7 @@ import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n import ch.njol.skript.doc.Examples;\n import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n import ch.njol.skript.doc.Since;\n import ch.njol.skript.expressions.base.SimplePropertyExpression;\n import ch.njol.skript.lang.ExpressionType;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTkxOA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374109918", "bodyText": "Requirements annotation.", "author": "bensku", "createdAt": "2020-02-03T13:47:23Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer. Minecraft 1.11+.\",", "originalCommit": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83d720dc9f172bdc2158eba14c395a8553528688", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\nindex 3c063a48..54999810 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n\n@@ -25,23 +25,24 @@ import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n import org.eclipse.jdt.annotation.Nullable;\n \n import ch.njol.skript.Skript;\n-import ch.njol.skript.classes.Changer;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n import ch.njol.skript.doc.Examples;\n import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n import ch.njol.skript.doc.Since;\n import ch.njol.skript.expressions.base.SimplePropertyExpression;\n import ch.njol.skript.lang.ExpressionType;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Enchantment Offer Enchantment Level\")\n-@Description({\"The enchantment level of an enchantment offer. Minecraft 1.11+.\",\n+@Description({\"The enchantment level of an enchantment offer.\",\n \t\t\t\"If the level is changed, it will always be at least 1.\",\n-\t\t\t\"This change is visual, and does not change the number of levels applied.\", \n-\t\t\t\"To change the number of levels applied, use the enchant event.\",})\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n @Examples(\"set enchantment level of enchantment offer 1 to 3\")\n @Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n \n \tstatic {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExMDAwOQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374110009", "bodyText": "No inline nullable annotation.", "author": "bensku", "createdAt": "2020-02-03T13:47:33Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer. Minecraft 1.11+.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is visual, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the enchant event.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.methodExists(EnchantmentOffer.class, \"getEnchantmentLevel\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] level\";\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {", "originalCommit": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83d720dc9f172bdc2158eba14c395a8553528688", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\nindex 3c063a48..54999810 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n\n@@ -25,23 +25,24 @@ import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n import org.eclipse.jdt.annotation.Nullable;\n \n import ch.njol.skript.Skript;\n-import ch.njol.skript.classes.Changer;\n import ch.njol.skript.classes.Changer.ChangeMode;\n import ch.njol.skript.doc.Description;\n import ch.njol.skript.doc.Examples;\n import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n import ch.njol.skript.doc.Since;\n import ch.njol.skript.expressions.base.SimplePropertyExpression;\n import ch.njol.skript.lang.ExpressionType;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Enchantment Offer Enchantment Level\")\n-@Description({\"The enchantment level of an enchantment offer. Minecraft 1.11+.\",\n+@Description({\"The enchantment level of an enchantment offer.\",\n \t\t\t\"If the level is changed, it will always be at least 1.\",\n-\t\t\t\"This change is visual, and does not change the number of levels applied.\", \n-\t\t\t\"To change the number of levels applied, use the enchant event.\",})\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n @Examples(\"set enchantment level of enchantment offer 1 to 3\")\n @Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n \n \tstatic {\n"}}, {"oid": "b82ef638205f2d9617f335ac5f963b8a27b000b6", "url": "https://github.com/SkriptLang/Skript/commit/b82ef638205f2d9617f335ac5f963b8a27b000b6", "message": "Enchant Item Event Syntax", "committedDate": "2020-02-05T01:23:30Z", "type": "commit"}, {"oid": "83d720dc9f172bdc2158eba14c395a8553528688", "url": "https://github.com/SkriptLang/Skript/commit/83d720dc9f172bdc2158eba14c395a8553528688", "message": "Enchant Prepare Fixes", "committedDate": "2020-02-05T02:32:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNDQ1NQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r385404455", "bodyText": "We often get people asking for help, who demand examples from us (on discord).\nI recommend adding a bit more of an example here, one which could include an event.", "author": "ShaneBeee", "createdAt": "2020-02-27T22:18:54Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Bonus\")\n+@Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves affecting/surrounding the enchantment table.\")\n+@Events(\"enchant prepare\")\n+@Examples(\"the enchantment bonus\")", "originalCommit": "83d720dc9f172bdc2158eba14c395a8553528688", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyNjIzNg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r385426236", "bodyText": "I\u2019ll make the changes soon! Thanks for the reply :)", "author": "APickledWalrus", "createdAt": "2020-02-27T23:17:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNDQ1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ffe9872b4503a357add71445326b850ae6758b5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\nindex a5d43b28..e5899ff7 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\n\n@@ -40,7 +40,8 @@ import ch.njol.util.Kleenean;\n @Name(\"Enchantment Bonus\")\n @Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves affecting/surrounding the enchantment table.\")\n @Events(\"enchant prepare\")\n-@Examples(\"the enchantment bonus\")\n+@Examples({\"on enchant:\", \n+\t\"\\tsend \\\"There are %enchantment bonus% bookshelves surrounding this enchantment table!\\\" to player\"})\n @Since(\"INSERT VERSION\")\n public class ExprEnchantmentBonus extends SimpleExpression<Number> {\n \n"}}, {"oid": "9ffe9872b4503a357add71445326b850ae6758b5", "url": "https://github.com/SkriptLang/Skript/commit/9ffe9872b4503a357add71445326b850ae6758b5", "message": "Clarity Changes", "committedDate": "2020-02-29T20:41:32Z", "type": "commit"}, {"oid": "101422562b1820e6c0786cad5cad5233a937e1db", "url": "https://github.com/SkriptLang/Skript/commit/101422562b1820e6c0786cad5cad5233a937e1db", "message": "Merge branch 'master' into APickledWalrus-evts-enchant", "committedDate": "2020-03-27T01:28:13Z", "type": "commit"}, {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "url": "https://github.com/SkriptLang/Skript/commit/2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "message": "Minor Changes & Fixes\n\n- Fix version compatibility\n- Improve adherence to coding conventions\n- Add ability to customize the event item for the enchant prepare event\n- Minor doc/pattern changes", "committedDate": "2020-03-27T02:55:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzMDIxNw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405530217", "bodyText": "should a dash really be an option and should [ed] be optional? enchanted-item is kinda ugly and so is enchant-item. don't think anyone would really try that rather than just having a space", "author": "Pikachu920", "createdAt": "2020-04-08T13:36:33Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")\n+@Description({\"The enchant item in an enchant prepare event or enchant event.\",\n+\t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n+\t\t\t\"on enchant prepare:\",\n+\t\t\t\"\\tset the enchant item to a wooden sword\"})\n+@Events(\"enchant prepare and enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchant[ed](-| )item\");", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\nindex 1b8e16bb..5c5223cc 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\n\n@@ -55,7 +55,7 @@ import ch.njol.util.coll.CollectionUtils;\n public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchant[ed](-| )item\");\n+\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchanted item\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNzE4NQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405537185", "bodyText": "skript already has a click type expression - it makes more sense to add support for enchant events to that rather than make a whole new expression\n\n  \n    \n      Skript/src/main/java/ch/njol/skript/expressions/ExprClicked.java\n    \n    \n         Line 201\n      in\n      4947bb8\n    \n    \n    \n    \n\n        \n          \n           return new ClickType[] {((InventoryClickEvent) e).getClick()};", "author": "Pikachu920", "createdAt": "2020-04-08T13:46:23Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemClickedButton.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Clicked Button\")\n+@Description(\"The enchantment button clicked in an enchant event. It will return 1, 2, or 3.\")\n+@Examples({\"on enchant:\", \n+\t\t\t\"\\tif the clicked enchantment button is 1:\", \n+\t\t\t\"\\t\\tsend \\\"You clicked button 1!\\\"\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemClickedButton extends SimpleExpression<Number>{", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc3NDk1MQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r415774951", "bodyText": "To me, \"if the click type is 1\" is less clear than \"if the clicked enchantment button is 1\", but maybe I'm misunderstanding what you mean. Perhaps it would be better to add \"clicked enchantment button\" to ExprClicked.", "author": "APickledWalrus", "createdAt": "2020-04-27T12:36:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNzE4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemClickedButton.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemClickedButton.java\ndeleted file mode 100644\nindex 425a552d..00000000\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemClickedButton.java\n+++ /dev/null\n\n@@ -1,86 +0,0 @@\n-/**\n- *   This file is part of Skript.\n- *\n- *  Skript is free software: you can redistribute it and/or modify\n- *  it under the terms of the GNU General Public License as published by\n- *  the Free Software Foundation, either version 3 of the License, or\n- *  (at your option) any later version.\n- *\n- *  Skript is distributed in the hope that it will be useful,\n- *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- *  GNU General Public License for more details.\n- *\n- *  You should have received a copy of the GNU General Public License\n- *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n- *\n- *\n- * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n- */\n-package ch.njol.skript.expressions;\n-\n-import org.bukkit.event.Event;\n-import org.bukkit.event.enchantment.EnchantItemEvent;\n-import org.eclipse.jdt.annotation.Nullable;\n-\n-import ch.njol.skript.ScriptLoader;\n-import ch.njol.skript.Skript;\n-import ch.njol.skript.classes.Changer;\n-import ch.njol.skript.classes.Changer.ChangeMode;\n-import ch.njol.skript.doc.Description;\n-import ch.njol.skript.doc.Events;\n-import ch.njol.skript.doc.Examples;\n-import ch.njol.skript.doc.Name;\n-import ch.njol.skript.doc.Since;\n-import ch.njol.skript.lang.Expression;\n-import ch.njol.skript.lang.ExpressionType;\n-import ch.njol.skript.lang.SkriptParser.ParseResult;\n-import ch.njol.skript.lang.util.SimpleExpression;\n-import ch.njol.skript.log.ErrorQuality;\n-import ch.njol.util.Kleenean;\n-import ch.njol.util.coll.CollectionUtils;\n-\n-@Name(\"Enchant Event Clicked Button\")\n-@Description(\"The enchantment button clicked in an enchant event. It will return 1, 2, or 3.\")\n-@Examples({\"on enchant:\", \n-\t\t\t\"\\tif the clicked enchantment button is 1:\", \n-\t\t\t\"\\t\\tsend \\\"You clicked button 1!\\\"\"})\n-@Events(\"enchant\")\n-@Since(\"INSERT VERSION\")\n-public class ExprEnchantItemClickedButton extends SimpleExpression<Number>{\n-\n-\tstatic {\n-\t\tSkript.registerExpression(ExprEnchantItemClickedButton.class, Number.class, ExpressionType.SIMPLE, \"[the] (enchant[ment] button clicked|clicked enchant[ment] button)\");\n-\t}\n-\n-\t@Override\n-\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n-\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n-\t\t\tSkript.error(\"The clicked enchantment button is only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\t@Nullable\n-\tprotected Number[] get(Event e) {\n-\t\treturn new Number[]{((EnchantItemEvent) e).whichButton()+1};\n-\t}\n-\n-\t@Override\n-\tpublic boolean isSingle() {\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic Class<Number> getReturnType() {\n-\t\treturn Number.class;\n-\t}\n-\n-\t@Override\n-\tpublic String toString(@Nullable Event e, boolean debug) {\n-\t\treturn \"clicked enchantment button\";\n-\t}\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNzkyMg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405537922", "bodyText": "put toArray on it's own line please", "author": "Pikachu920", "createdAt": "2020-04-08T13:47:22Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue())).toArray(EnchantmentType[]::new);", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\nindex e8c58022..15c507d2 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n\n@@ -22,7 +22,6 @@ package ch.njol.skript.expressions;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n \n import org.bukkit.enchantments.Enchantment;\n import org.bukkit.event.Event;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzOTMzMw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405539333", "bodyText": "maybe it makes sense to add a Map.Entry<Enchantment, Integer> constructor to EnchantmentType the bukkit API usually returns enchants as a map like this", "author": "Pikachu920", "createdAt": "2020-04-08T13:49:19Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue())).toArray(EnchantmentType[]::new);", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\nindex e8c58022..15c507d2 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n\n@@ -22,7 +22,6 @@ package ch.njol.skript.expressions;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n \n import org.bukkit.enchantments.Enchantment;\n import org.bukkit.event.Event;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0OTE5OQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405549199", "bodyText": "what about enchantment cost? also usually xp is valid too", "author": "Pikachu920", "createdAt": "2020-04-08T14:02:23Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost to enchant in an enchant event.\", \n+\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n+@Events(\"enchant prepare\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \"[the] [exp[erience]] cost of enchant[(ing|ment)]\");", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0OTU3OQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405549579", "bodyText": "or cost of the enchantment", "author": "Pikachu920", "createdAt": "2020-04-08T14:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0OTE5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\nindex dabe2110..8360ed63 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n\n@@ -49,7 +49,9 @@ import ch.njol.util.coll.CollectionUtils;\n public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \"[the] [exp[erience]] cost of enchant[(ing|ment)]\");\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n+\t\t\t\t\"[the] [e]xp[erience] cost (of|for) [the] enchant[ment]\",\n+\t\t\t\t\"[the] enchant[ment] cost\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2OTUyOA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405569528", "bodyText": "in my opinion, this expression should not support that singular syntax - you should simply have enchantment offers then another expression can handle things like first element out of enchantment offer", "author": "Pikachu920", "createdAt": "2020-04-08T14:30:30Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"enchant[ment] offer 1\",", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMxOTEzMw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r410319133", "bodyText": "I think it'd be nice to be able to write\nenchantment level of enchantment offer 1\nthan\nenchantment level of first element out of enchantment offers", "author": "APickledWalrus", "createdAt": "2020-04-17T16:01:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2OTUyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5OTkxNg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r410699916", "bodyText": "alright, but to be consistent with other expressions the pattern should be 1st enchantment offer and the number should be an expression otherwise you can't do enchantment offer {_something}\n\n  \n    \n      Skript/src/main/java/ch/njol/skript/expressions/ExprLore.java\n    \n    \n         Line 70\n      in\n      4c37bc9\n    \n    \n    \n    \n\n        \n          \n           \"[the] %number%(st|nd|rd|th) line of [the] lore of %itemstack/itemtype%\",", "author": "Pikachu920", "createdAt": "2020-04-18T13:40:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2OTUyOA=="}], "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\nindex b7d2207d..60b588fb 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n\n@@ -19,6 +19,7 @@\n  */\n package ch.njol.skript.expressions;\n \n+import org.bukkit.Bukkit;\n import org.bukkit.enchantments.EnchantmentOffer;\n import org.bukkit.event.Event;\n import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2OTg5OA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405569898", "bodyText": "wouldn't it be offerNumber != 3?", "author": "Pikachu920", "createdAt": "2020-04-08T14:30:59Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"enchant[ment] offer 1\",\n+\t\t\t\t\t\"enchant[ment] offer 2\",\n+\t\t\t\t\t\"enchant[ment] offer 3\",\n+\t\t\t\t\t\"[the] enchant[ment] offers\");\n+\t\t}\n+\t}\n+\n+\tprivate int offerNumber;\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tofferNumber = matchedPattern;\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (offerNumber == 3)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\t\treturn new EnchantmentOffer[]{((PrepareItemEnchantEvent) e).getOffers()[offerNumber]};\n+\t}\n+\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn offerNumber != 4;", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\nindex b7d2207d..60b588fb 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n\n@@ -19,6 +19,7 @@\n  */\n package ch.njol.skript.expressions;\n \n+import org.bukkit.Bukkit;\n import org.bukkit.enchantments.EnchantmentOffer;\n import org.bukkit.event.Event;\n import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MTU4MA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405571580", "bodyText": "if I try to set it to 0 or a negative number should it really set the level to 1?", "author": "Pikachu920", "createdAt": "2020-04-08T14:33:18Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0)\n+\t\t\treturn;\n+\t\tint level = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (level < 1) level = 1;", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\nindex 079620d3..8f48a359 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n\n@@ -67,11 +67,12 @@ public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<Enchantm\n \t@Override\n \tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n \t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n-\t\tif (offers.length == 0)\n+\t\tif (offers.length == 0 || delta == null)\n \t\t\treturn;\n-\t\tint level = delta != null ? ((Number) delta[0]).intValue() : 1;\n-\t\tif (level < 1) level = 1;\n-\t\tint change = 1;\n+\t\tint level = ((Number) delta[0]).intValue();\n+\t\tif (level < 1) \n+\t\t\treturn;\n+\t\tint change;\n \t\tswitch (mode) {\n \t\t\tcase SET:\n \t\t\t\tfor (EnchantmentOffer offer : offers)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MTc1NA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405571754", "bodyText": "if the change is less than 1 why does it change anything at all?", "author": "Pikachu920", "createdAt": "2020-04-08T14:33:33Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0)\n+\t\t\treturn;\n+\t\tint level = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (level < 1) level = 1;\n+\t\tint change = 1;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setEnchantmentLevel(level);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1)", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\nindex 079620d3..8f48a359 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n\n@@ -67,11 +67,12 @@ public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<Enchantm\n \t@Override\n \tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n \t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n-\t\tif (offers.length == 0)\n+\t\tif (offers.length == 0 || delta == null)\n \t\t\treturn;\n-\t\tint level = delta != null ? ((Number) delta[0]).intValue() : 1;\n-\t\tif (level < 1) level = 1;\n-\t\tint change = 1;\n+\t\tint level = ((Number) delta[0]).intValue();\n+\t\tif (level < 1) \n+\t\t\treturn;\n+\t\tint change;\n \t\tswitch (mode) {\n \t\t\tcase SET:\n \t\t\t\tfor (EnchantmentOffer offer : offers)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MjQ3Mg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405572472", "bodyText": "getPropertyName isn't meant to have the syntax tokens in it, it is used for the toString and should be representative of how it would read in a script", "author": "Pikachu920", "createdAt": "2020-04-08T14:34:25Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0)\n+\t\t\treturn;\n+\t\tint level = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (level < 1) level = 1;\n+\t\tint change = 1;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setEnchantmentLevel(level);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1)\n+\t\t\t\t\t\tchange = 1;\n+\t\t\t\t\toffer.setEnchantmentLevel(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level - offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1)\n+\t\t\t\t\t\tchange = 1;\n+\t\t\t\t\toffer.setEnchantmentLevel(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\tcase DELETE:\n+\t\t\tcase REMOVE_ALL:\n+\t\t\t\tassert false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] level\";", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\nindex 079620d3..8f48a359 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n\n@@ -67,11 +67,12 @@ public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<Enchantm\n \t@Override\n \tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n \t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n-\t\tif (offers.length == 0)\n+\t\tif (offers.length == 0 || delta == null)\n \t\t\treturn;\n-\t\tint level = delta != null ? ((Number) delta[0]).intValue() : 1;\n-\t\tif (level < 1) level = 1;\n-\t\tint change = 1;\n+\t\tint level = ((Number) delta[0]).intValue();\n+\t\tif (level < 1) \n+\t\t\treturn;\n+\t\tint change;\n \t\tswitch (mode) {\n \t\t\tcase SET:\n \t\t\t\tfor (EnchantmentOffer offer : offers)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MjU5Mg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405572592", "bodyText": "getPropertyName isn't meant to have the syntax tokens in it, it is used for the toString and should be representative of how it would read in a script", "author": "Pikachu920", "createdAt": "2020-04-08T14:34:32Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.registrations.Converters;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment\")\n+@Description({\"The enchantment of an enchantment offer.\", \n+\t\t\t\"The level and cost of the enchantment should be set with their corresponding expressions.\", \n+\t\t\t\"This change is cosmetic, and does not affect what the item will be enchanted with.\", \n+\t\t\t\"To change the enchantment that is applied, use the applied enchantment expression.\"})\n+@Examples(\"set enchantment of enchantment offer 1 to sharpness\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferEnchantment extends SimplePropertyExpression<EnchantmentOffer, EnchantmentType> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferEnchantment.class, EnchantmentType.class, \"enchant[ment]\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic EnchantmentType convert(final EnchantmentOffer offer) {\n+\t\treturn Converters.convert(offer.getEnchantment(), EnchantmentType.class);\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET)\n+\t\t\treturn CollectionUtils.array(EnchantmentType.class);\n+\t\treturn null;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, Changer.ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0 || delta == null || delta.length == 0)\n+\t\t\treturn;\n+\t\tEnchantmentType enchant = (EnchantmentType) delta[0];\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\toffer.setEnchantment(enchant.getType());\n+\t\t\t\t\toffer.setEnchantmentLevel(enchant.getLevel());\n+\t\t\t\t}\n+\t\t\tcase ADD:\n+\t\t\tcase DELETE:\n+\t\t\tcase REMOVE:\n+\t\t\tcase REMOVE_ALL:\n+\t\t\tcase RESET:\n+\t\t\t\tassert false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<EnchantmentType> getReturnType() {\n+\t\treturn EnchantmentType.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java\nindex 43196d55..d8788ee1 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java\n\n@@ -57,7 +57,7 @@ public class ExprEnchantmentOfferEnchantment extends SimplePropertyExpression<En\n \t@SuppressWarnings(\"null\")\n \t@Override\n \tpublic EnchantmentType convert(final EnchantmentOffer offer) {\n-\t\treturn Converters.convert(offer.getEnchantment(), EnchantmentType.class);\n+\t\treturn new EnchantmentType(offer.getEnchantment(), offer.getEnchantmentLevel());\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MjY0OQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405572649", "bodyText": "getPropertyName isn't meant to have the syntax tokens in it, it is used for the toString and should be representative of how it would read in a script", "author": "Pikachu920", "createdAt": "2020-04-08T14:34:36Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Cost\")\n+@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer.\",\n+\t\t\t\"If the cost is changed, it will always be at least 1.\",\n+\t\t\t\"This changes how many levels are required to enchant, but does not change the number of levels removed.\", \n+\t\t\t\"To change the number of levels removed, use the enchant event.\"})\n+@Examples(\"set cost of enchantment offer 1 to 50\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferCost extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferCost.class, Number.class, \"[enchant[ment]] cost\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getCost();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0)\n+\t\t\treturn;\n+\t\tint cost = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (cost < 1) cost = 1;\n+\t\tint change = 1;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setCost(cost);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = cost + offer.getCost();\n+\t\t\t\t\tif (change < 1) change = 1;\n+\t\t\t\t\toffer.setCost(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = cost - offer.getCost();\n+\t\t\t\t\tif (change < 1) change = 1;\n+\t\t\t\t\toffer.setCost(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\tcase DELETE:\n+\t\t\tcase REMOVE_ALL:\n+\t\t\t\tassert false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\nindex 717b4a57..8ee15664 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java\n\n@@ -67,11 +67,12 @@ public class ExprEnchantmentOfferCost extends SimplePropertyExpression<Enchantme\n \t@Override\n \tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n \t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n-\t\tif (offers.length == 0)\n+\t\tif (offers.length == 0 || delta == null)\n \t\t\treturn;\n-\t\tint cost = delta != null ? ((Number) delta[0]).intValue() : 1;\n-\t\tif (cost < 1) cost = 1;\n-\t\tint change = 1;\n+\t\tint cost = ((Number) delta[0]).intValue();\n+\t\tif (cost < 1) \n+\t\t\treturn;\n+\t\tint change;\n \t\tswitch (mode) {\n \t\t\tcase SET:\n \t\t\t\tfor (EnchantmentOffer offer : offers)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3Mjk0OQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405572949", "bodyText": "doesn't give the right output when the enchantment offers expression is used", "author": "Pikachu920", "createdAt": "2020-04-08T14:35:00Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"enchant[ment] offer 1\",\n+\t\t\t\t\t\"enchant[ment] offer 2\",\n+\t\t\t\t\t\"enchant[ment] offer 3\",\n+\t\t\t\t\t\"[the] enchant[ment] offers\");\n+\t\t}\n+\t}\n+\n+\tprivate int offerNumber;\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tofferNumber = matchedPattern;\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (offerNumber == 3)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\t\treturn new EnchantmentOffer[]{((PrepareItemEnchantEvent) e).getOffers()[offerNumber]};\n+\t}\n+\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn offerNumber != 4;\n+\t}\n+\n+\t@Override\n+\tpublic Class<? extends EnchantmentOffer> getReturnType() {\n+\t\treturn EnchantmentOffer.class;\n+\t}\n+\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\nindex b7d2207d..60b588fb 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n\n@@ -19,6 +19,7 @@\n  */\n package ch.njol.skript.expressions;\n \n+import org.bukkit.Bukkit;\n import org.bukkit.enchantments.EnchantmentOffer;\n import org.bukkit.event.Event;\n import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3NTgwNg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405575806", "bodyText": "subtracting 0 shouldn't subtract 1, it should just do nothing", "author": "Pikachu920", "createdAt": "2020-04-08T14:39:06Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.Arrays;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Prepare Enchantment Experience Level Cost\")\n+@Description({\"The experience cost of an enchantment in an enchant prepare event.\",\n+\t\t\t\"If the cost is changed, it will always be at least 1.\"})\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tset the cost of enchantment 1 to 50\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.9 or 1.10\")\n+@SuppressWarnings(\"deprecation\")\n+public class ExprEnchantmentExpLevelCosts extends SimpleExpression<Number>{\n+\n+\tstatic {\n+\t\tif (!Skript.isRunningMinecraft(1, 11)) { // This expression should only be usable on 1.9 and 1.10.\n+\t\t\tSkript.registerExpression(ExprEnchantmentExpLevelCosts.class, Number.class, ExpressionType.SIMPLE,\n+\t\t\t\t\t\"[the] cost of enchant[ment] [offer] 1\",\n+\t\t\t\t\t\"[the] cost of enchant[ment] [offer] 2\",\n+\t\t\t\t\t\"[the] cost of enchant[ment] [offer] 3\",\n+\t\t\t\t\t\"[the] cost of (enchant[ment]s|enchant[ment] offers)\");\n+\t\t}\n+\t}\n+\n+\tprivate int offerNumber;\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"The enchantment exp level cost is only usable in an enchant prepare event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tofferNumber = matchedPattern;\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected Number[] get(Event e) {\n+\t\tif (offerNumber == 4) {\n+\t\t\treturn Arrays.stream(((PrepareItemEnchantEvent) e).getExpLevelCostsOffered())\n+\t\t\t\t\t.boxed()\n+\t\t\t\t\t.toArray(Number[]::new);\n+\t\t}\n+\t\treturn new Number[]{((PrepareItemEnchantEvent) e).getExpLevelCostsOffered()[offerNumber]};\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, Changer.ChangeMode mode) {\n+\t\tint cost = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (cost < 1) cost = 1;\n+\t\tPrepareItemEnchantEvent e = (PrepareItemEnchantEvent) event;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (offerNumber == 4) {\n+\t\t\t\t\tfor (int i = 0; i <= 2; i++)\n+\t\t\t\t\t\te.getExpLevelCostsOffered()[i] = cost;\n+\t\t\t\t} else {\n+\t\t\t\t\te.getExpLevelCostsOffered()[offerNumber] = cost;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tint add;\n+\t\t\t\tif (offerNumber == 4) {\n+\t\t\t\t\tfor (int i = 0; i <= 2; i++) {\n+\t\t\t\t\t\tadd = cost + e.getExpLevelCostsOffered()[i];\n+\t\t\t\t\t\tif (add < 1) add = 1;\n+\t\t\t\t\t\te.getExpLevelCostsOffered()[i] = add;\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tadd = cost + e.getExpLevelCostsOffered()[offerNumber];\n+\t\t\t\t\tif (add < 1) add = 1;\n+\t\t\t\t\te.getExpLevelCostsOffered()[offerNumber] = add;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tint subtract;\n+\t\t\t\tif (offerNumber == 4) {\n+\t\t\t\t\tfor (int i = 0; i <= 2; i++) {\n+\t\t\t\t\t\tsubtract = cost - e.getExpLevelCostsOffered()[i];\n+\t\t\t\t\t\tif (subtract < 1) subtract = 1;\n+\t\t\t\t\t\te.getExpLevelCostsOffered()[i] = subtract;\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tsubtract = cost - e.getExpLevelCostsOffered()[offerNumber];\n+\t\t\t\t\tif (subtract < 1) subtract = 1;", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java\nindex 74d7fb13..b86a8f84 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java\n\n@@ -21,6 +21,7 @@ package ch.njol.skript.expressions;\n \n import java.util.Arrays;\n \n+import org.bukkit.enchantments.EnchantmentOffer;\n import org.bukkit.event.Event;\n import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n import org.eclipse.jdt.annotation.Nullable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3Njk0NQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405576945", "bodyText": "that implies this will match anything without whitespace which is not true - toVariableNameString has a space in it", "author": "Pikachu920", "createdAt": "2020-04-08T14:40:48Z", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1719,6 +1720,41 @@ public String getVariableNamePattern() {\n \t\t\t\t\t})\n \t\t\t\t\t.serializer(new EnumSerializer<>(Cat.Type.class)));\n \t\t}\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(EnchantmentOffer.class, \"enchantmentoffer\")\n+\t\t\t\t.user(\"enchant[ment][ ]offers?\")\n+\t\t\t\t.name(\"Enchantment Offer\")\n+\t\t\t\t.description(\"The enchantmentoffer in an enchant prepare event.\")\n+\t\t\t\t.examples(\"cost of enchantmentoffer\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<EnchantmentOffer>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\tpublic EnchantmentOffer parse(String input, ParseContext context) {\n+\t\t\t\t\t\treturn null;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic boolean canParse(ParseContext context) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(EnchantmentOffer eo, int flags) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment(), flags) + \" \" + eo.getEnchantmentLevel();\n+\t\t\t\t\t}\n+\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(EnchantmentOffer eo) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment()) + \" \" + eo.getEnchantmentLevel();\n+\t\t\t\t\t}\n+\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String getVariableNamePattern() {\n+\t\t\t\t\t\treturn \"\\\\S+\";", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\nindex f6915b05..d7b5aa5e 100644\n--- a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n+++ b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n\n@@ -1751,7 +1751,7 @@ public class BukkitClasses {\n \t\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic String getVariableNamePattern() {\n-\t\t\t\t\t\treturn \"\\\\S+\";\n+\t\t\t\t\t\treturn \".+\";\n \t\t\t\t\t}\n \t\t\t\t}));\n \t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3NzI0NQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405577245", "bodyText": "no need to add these other types", "author": "Pikachu920", "createdAt": "2020-04-08T14:41:15Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")\n+@Description({\"The enchant item in an enchant prepare event or enchant event.\",\n+\t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n+\t\t\t\"on enchant prepare:\",\n+\t\t\t\"\\tset the enchant item to a wooden sword\"})\n+@Events(\"enchant prepare and enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchant[ed](-| )item\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class) && !ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"The enchant item is only usable in an enchant prepare event or enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected ItemType[] get(Event e) {\n+\t\tif (e instanceof PrepareItemEnchantEvent)\n+\t\t\treturn new ItemType[]{new ItemType(((PrepareItemEnchantEvent) e).getItem())};\n+\t\treturn new ItemType[]{new ItemType(((EnchantItemEvent) e).getItem())};\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET)\n+\t\t\treturn CollectionUtils.array(ItemType.class);\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tassert delta != null;\n+\t\tItemType item = ((ItemType) delta[0]);\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (event instanceof PrepareItemEnchantEvent) {\n+\t\t\t\t\tPrepareItemEnchantEvent e = (PrepareItemEnchantEvent) event;\n+\t\t\t\t\te.getItem().setType(item.getMaterial());\n+\t\t\t\t\te.getItem().setItemMeta(item.getItemMeta());\n+\t\t\t\t\te.getItem().setAmount(item.getAmount());\n+\t\t\t\t} else {\n+\t\t\t\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\t\t\t\te.getItem().setType(item.getMaterial());\n+\t\t\t\t\te.getItem().setItemMeta(item.getItemMeta());\n+\t\t\t\t\te.getItem().setAmount(item.getAmount());\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:", "originalCommit": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\nindex 1b8e16bb..5c5223cc 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\n\n@@ -55,7 +55,7 @@ import ch.njol.util.coll.CollectionUtils;\n public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchant[ed](-| )item\");\n+\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchanted item\");\n \t}\n \n \t@Override\n"}}, {"oid": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "url": "https://github.com/SkriptLang/Skript/commit/ea5d9c0e900800501b3c6491a765b88f6ae69225", "message": "Make Requested Changes", "committedDate": "2020-04-27T15:07:31Z", "type": "commit"}, {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "url": "https://github.com/SkriptLang/Skript/commit/01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "message": "Merge branch 'master' into APickledWalrus-evts-enchant", "committedDate": "2020-04-27T15:08:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4MTMzMg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416681332", "bodyText": "no need to duplicate the code:\nreturn toString(eo, 0);", "author": "Pikachu920", "createdAt": "2020-04-28T14:55:14Z", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1719,6 +1720,41 @@ public String getVariableNamePattern() {\n \t\t\t\t\t})\n \t\t\t\t\t.serializer(new EnumSerializer<>(Cat.Type.class)));\n \t\t}\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(EnchantmentOffer.class, \"enchantmentoffer\")\n+\t\t\t\t.user(\"enchant[ment][ ]offers?\")\n+\t\t\t\t.name(\"Enchantment Offer\")\n+\t\t\t\t.description(\"The enchantmentoffer in an enchant prepare event.\")\n+\t\t\t\t.examples(\"cost of enchantmentoffer\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<EnchantmentOffer>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\tpublic EnchantmentOffer parse(String input, ParseContext context) {\n+\t\t\t\t\t\treturn null;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic boolean canParse(ParseContext context) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(EnchantmentOffer eo, int flags) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment(), flags) + \" \" + eo.getEnchantmentLevel();\n+\t\t\t\t\t}\n+\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(EnchantmentOffer eo) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment()) + \" \" + eo.getEnchantmentLevel();", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\nindex d7b5aa5e..db03ae84 100644\n--- a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n+++ b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n\n@@ -1746,7 +1746,7 @@ public class BukkitClasses {\n \t\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic String toVariableNameString(EnchantmentOffer eo) {\n-\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment()) + \" \" + eo.getEnchantmentLevel();\n+\t\t\t\t\t\treturn toString(eo, 0);\n \t\t\t\t\t}\n \t\n \t\t\t\t\t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NjMxMw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416686313", "bodyText": "should be enchanted item", "author": "Pikachu920", "createdAt": "2020-04-28T15:01:26Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")\n+@Description({\"The enchant item in an enchant prepare event or enchant event.\",\n+\t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n+\t\t\t\"on enchant prepare:\",\n+\t\t\t\"\\tset the enchant item to a wooden sword\"})\n+@Events(\"enchant prepare and enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchanted item\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class) && !ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"The enchant item is only usable in an enchant prepare event or enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected ItemType[] get(Event e) {\n+\t\tif (e instanceof PrepareItemEnchantEvent)\n+\t\t\treturn new ItemType[]{new ItemType(((PrepareItemEnchantEvent) e).getItem())};\n+\t\treturn new ItemType[]{new ItemType(((EnchantItemEvent) e).getItem())};\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET)\n+\t\t\treturn CollectionUtils.array(ItemType.class);\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null)\n+\t\t\treturn;\n+\t\tItemType item = ((ItemType) delta[0]);\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (event instanceof PrepareItemEnchantEvent) {\n+\t\t\t\t\tPrepareItemEnchantEvent e = (PrepareItemEnchantEvent) event;\n+\t\t\t\t\te.getItem().setType(item.getMaterial());\n+\t\t\t\t\te.getItem().setItemMeta(item.getItemMeta());\n+\t\t\t\t\te.getItem().setAmount(item.getAmount());\n+\t\t\t\t} else {\n+\t\t\t\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\t\t\t\te.getItem().setType(item.getMaterial());\n+\t\t\t\t\te.getItem().setItemMeta(item.getItemMeta());\n+\t\t\t\t\te.getItem().setAmount(item.getAmount());\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\tcase RESET:\n+\t\t\tcase DELETE:\n+\t\t\tcase REMOVE_ALL:\n+\t\t\t\tassert false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\tpublic Class<? extends ItemType> getReturnType() {\n+\t\treturn ItemType.class;\n+\t}\n+\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"enchant item\";", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\nindex 5c5223cc..2a4c1fda 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\n\n@@ -123,7 +123,7 @@ public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n \n \t@Override\n \tpublic String toString(@Nullable Event e, boolean debug) {\n-\t\treturn \"enchant item\";\n+\t\treturn \"enchanted item\";\n \t}\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NjgwMw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416686803", "bodyText": "missing spaces around <", "author": "Pikachu920", "createdAt": "2020-04-28T15:02:03Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentType[] enchants = new EnchantmentType[delta != null ? delta.length : 0];\n+\t\tif (delta != null && delta.length != 0) {\n+\t\t\tfor (int i = 0; i<delta.length; i++) {", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\nindex 15c507d2..915bd28e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n\n@@ -82,7 +82,7 @@ public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentTyp\n \t@Override\n \t@Nullable\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\n-\t\tif (mode == ChangeMode.RESET)\n+\t\tif (mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n \t\t\treturn null;\n \t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NDY2MA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416694660", "bodyText": "you could use fallthrough here:\ncase SET:\n   clear();\ncase ADD:\n    addEnchants();\n    break;", "author": "Pikachu920", "createdAt": "2020-04-28T15:12:02Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentType[] enchants = new EnchantmentType[delta != null ? delta.length : 0];\n+\t\tif (delta != null && delta.length != 0) {\n+\t\t\tfor (int i = 0; i<delta.length; i++) {\n+\t\t\t\tif (delta[i] instanceof EnchantmentType)\n+\t\t\t\t\tenchants[i] = (EnchantmentType) delta[i];\n+\t\t\t\telse\n+\t\t\t\t\tenchants[i] = new EnchantmentType((Enchantment) delta[i]);\n+\t\t\t}\n+\t\t}\n+\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\te.getEnchantsToAdd().clear();", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\nindex 15c507d2..915bd28e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n\n@@ -82,7 +82,7 @@ public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentTyp\n \t@Override\n \t@Nullable\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\n-\t\tif (mode == ChangeMode.RESET)\n+\t\tif (mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n \t\t\treturn null;\n \t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5ODA5NQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416698095", "bodyText": "you don't have to check if it contains the key or value, you can just remove", "author": "Pikachu920", "createdAt": "2020-04-28T15:16:18Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentType[] enchants = new EnchantmentType[delta != null ? delta.length : 0];\n+\t\tif (delta != null && delta.length != 0) {\n+\t\t\tfor (int i = 0; i<delta.length; i++) {\n+\t\t\t\tif (delta[i] instanceof EnchantmentType)\n+\t\t\t\t\tenchants[i] = (EnchantmentType) delta[i];\n+\t\t\t\telse\n+\t\t\t\t\tenchants[i] = new EnchantmentType((Enchantment) delta[i]);\n+\t\t\t}\n+\t\t}\n+\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\te.getEnchantsToAdd().clear();\n+\t\t\t\tfor (EnchantmentType enchant : enchants)\n+\t\t\t\t\te.getEnchantsToAdd().put(enchant.getType(), enchant.getLevel());\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentType enchant : enchants)\n+\t\t\t\t\te.getEnchantsToAdd().put(enchant.getType(), enchant.getLevel());\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentType enchant : enchants) {\n+\t\t\t\t\tif (e.getEnchantsToAdd().containsKey(enchant.getType())) {", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\nindex 15c507d2..915bd28e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n\n@@ -82,7 +82,7 @@ public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentTyp\n \t@Override\n \t@Nullable\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\n-\t\tif (mode == ChangeMode.RESET)\n+\t\tif (mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n \t\t\treturn null;\n \t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5OTQ3MA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416699470", "bodyText": "remove all is not the same as delete, it requires an expression. for example remove all sharpness 1 from applied enchants would remove all enchants in this case", "author": "Pikachu920", "createdAt": "2020-04-28T15:17:59Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentType[] enchants = new EnchantmentType[delta != null ? delta.length : 0];\n+\t\tif (delta != null && delta.length != 0) {\n+\t\t\tfor (int i = 0; i<delta.length; i++) {\n+\t\t\t\tif (delta[i] instanceof EnchantmentType)\n+\t\t\t\t\tenchants[i] = (EnchantmentType) delta[i];\n+\t\t\t\telse\n+\t\t\t\t\tenchants[i] = new EnchantmentType((Enchantment) delta[i]);\n+\t\t\t}\n+\t\t}\n+\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\te.getEnchantsToAdd().clear();\n+\t\t\t\tfor (EnchantmentType enchant : enchants)\n+\t\t\t\t\te.getEnchantsToAdd().put(enchant.getType(), enchant.getLevel());\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentType enchant : enchants)\n+\t\t\t\t\te.getEnchantsToAdd().put(enchant.getType(), enchant.getLevel());\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentType enchant : enchants) {\n+\t\t\t\t\tif (e.getEnchantsToAdd().containsKey(enchant.getType())) {\n+\t\t\t\t\t\tif (e.getEnchantsToAdd().containsValue(enchant.getLevel())) {\n+\t\t\t\t\t\t\te.getEnchantsToAdd().remove(enchant.getType(), enchant.getLevel());\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\tcase REMOVE_ALL:", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\nindex 15c507d2..915bd28e 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n\n@@ -82,7 +82,7 @@ public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentTyp\n \t@Override\n \t@Nullable\n \tpublic Class<?>[] acceptChange(ChangeMode mode) {\n-\t\tif (mode == ChangeMode.RESET)\n+\t\tif (mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n \t\t\treturn null;\n \t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwNDM2Mw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416704363", "bodyText": "what do you mean when you say it doesn't serve a purpose?", "author": "Pikachu920", "createdAt": "2020-04-28T15:24:08Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost to enchant in an enchant event.\", \n+\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n+@Events(\"enchant prepare\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n+\t\t\t\t\"[the] [e]xp[erience] cost (of|for) [the] enchant[ment]\",\n+\t\t\t\t\"[the] enchant[ment] cost\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The experience cost of enchanting is only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected Number[] get(Event e) {\n+\t\treturn new Number[]{((EnchantItemEvent) e).getExpLevelCost()};\n+\t}\n+\n+\t/*\n+\t * As of now, modifying the cost does not seem to serve a purpose.", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\nindex 8360ed63..b2a43034 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n\n@@ -40,18 +40,17 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Enchant Event Experience Cost\")\n-@Description({\"The cost to enchant in an enchant event.\", \n-\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Description({\"The cost of enchanting in an enchant event.\", \n+\t\t\t\t\"This is number that was displayed in the enchantment table, not the actual number of levels removed.\"})\n @Examples({\"on enchant:\",\n-\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n-@Events(\"enchant prepare\")\n+\t\t\t\"\\tsend \\\"Cost: %the displayed cost of enchanting%\\\" to player\"})\n+@Events(\"enchant\")\n @Since(\"INSERT VERSION\")\n public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n \n \tstatic {\n \t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n-\t\t\t\t\"[the] [e]xp[erience] cost (of|for) [the] enchant[ment]\",\n-\t\t\t\t\"[the] enchant[ment] cost\");\n+\t\t\t\t\"[the] [displayed] [[e]xp[erience]] cost (of enchanting|to enchant)\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwNDkxNg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416704916", "bodyText": "this example is incorrect", "author": "Pikachu920", "createdAt": "2020-04-28T15:24:51Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost to enchant in an enchant event.\", \n+\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\nindex 8360ed63..b2a43034 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n\n@@ -40,18 +40,17 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Enchant Event Experience Cost\")\n-@Description({\"The cost to enchant in an enchant event.\", \n-\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Description({\"The cost of enchanting in an enchant event.\", \n+\t\t\t\t\"This is number that was displayed in the enchantment table, not the actual number of levels removed.\"})\n @Examples({\"on enchant:\",\n-\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n-@Events(\"enchant prepare\")\n+\t\t\t\"\\tsend \\\"Cost: %the displayed cost of enchanting%\\\" to player\"})\n+@Events(\"enchant\")\n @Since(\"INSERT VERSION\")\n public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n \n \tstatic {\n \t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n-\t\t\t\t\"[the] [e]xp[erience] cost (of|for) [the] enchant[ment]\",\n-\t\t\t\t\"[the] enchant[ment] cost\");\n+\t\t\t\t\"[the] [displayed] [[e]xp[erience]] cost (of enchanting|to enchant)\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczMjIyNA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416732224", "bodyText": "why the hardcoded 2? you should still use the length of the array", "author": "Pikachu920", "createdAt": "2020-04-28T15:58:33Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"[the] enchant[ment] offers\",\n+\t\t\t\t\t\"enchant[ment] offer %number%\",\n+\t\t\t\t\t\"[the] %number%(st|nd|rd|th) enchant[ment] offer\");\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Number> exprOfferNumber;\n+\n+\tprivate boolean multiple;\n+\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (matchedPattern == 0) {\n+\t\t\tmultiple = true;\n+\t\t} else {\n+\t\t\texprOfferNumber = (Expression<Number>) exprs[0];\n+\t\t\tmultiple = false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (multiple)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\n+\t\tint offerNumber = exprOfferNumber.getSingle(e).intValue();\n+\t\tif (offerNumber < 1 || offerNumber > 3)\n+\t\t\treturn new EnchantmentOffer[]{};\n+\t\treturn new EnchantmentOffer[]{((PrepareItemEnchantEvent) e).getOffers()[offerNumber - 1]};\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.DELETE)\n+\t\t\treturn CollectionUtils.array(EnchantmentOffer.class);\n+\t\treturn null;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\n+\t\t// Index Form\n+\t\tint offerNumber = 0;\n+\t\tif (exprOfferNumber != null) {\n+\t\t\tofferNumber = exprOfferNumber.getSingle(e).intValue() - 1;\n+\t\t}\n+\n+\t\tif (e instanceof PrepareItemEnchantEvent) {\n+\t\t\tswitch (mode) {\n+\t\t\t\tcase DELETE:\n+\t\t\t\t\tif (multiple) {\n+\t\t\t\t\t\tfor (int i = 0; i <= 2; i++)", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\nindex 60b588fb..b0da1fa5 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n\n@@ -19,7 +19,10 @@\n  */\n package ch.njol.skript.expressions;\n \n-import org.bukkit.Bukkit;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n import org.bukkit.enchantments.EnchantmentOffer;\n import org.bukkit.event.Event;\n import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc0NzY2OQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416747669", "bodyText": "i think it would make more sense to add an enchantment event value to the event and just piggy back off the cost property expression that already exists. it would allow for the same syntax is less code", "author": "Pikachu920", "createdAt": "2020-04-28T16:19:47Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost to enchant in an enchant event.\", \n+\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n+@Events(\"enchant prepare\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n+\t\t\t\t\"[the] [e]xp[erience] cost (of|for) [the] enchant[ment]\",", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1NDkxNw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416854917", "bodyText": "So, this expression is actually the cost that was displayed on the side of the enchantment offer. From what I saw in testing, it doesn't actually do anything if you modify it (I'll test again though), so I'm not why it's even modifiable in the first place. However, since the code is pretty much already there, maybe someone will find a use for being able to modify it. I'll clean up the  code & docs on this one.", "author": "APickledWalrus", "createdAt": "2020-04-28T19:06:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc0NzY2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\nindex 8360ed63..b2a43034 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n\n@@ -40,18 +40,17 @@ import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n @Name(\"Enchant Event Experience Cost\")\n-@Description({\"The cost to enchant in an enchant event.\", \n-\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Description({\"The cost of enchanting in an enchant event.\", \n+\t\t\t\t\"This is number that was displayed in the enchantment table, not the actual number of levels removed.\"})\n @Examples({\"on enchant:\",\n-\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n-@Events(\"enchant prepare\")\n+\t\t\t\"\\tsend \\\"Cost: %the displayed cost of enchanting%\\\" to player\"})\n+@Events(\"enchant\")\n @Since(\"INSERT VERSION\")\n public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n \n \tstatic {\n \t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n-\t\t\t\t\"[the] [e]xp[erience] cost (of|for) [the] enchant[ment]\",\n-\t\t\t\t\"[the] enchant[ment] cost\");\n+\t\t\t\t\"[the] [displayed] [[e]xp[erience]] cost (of enchanting|to enchant)\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MDk1Ng==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416750956", "bodyText": "instead of a whole expression for this, couldn't you just have this just return an EnchantmentOffer and use the already existing cost expression", "author": "Pikachu920", "createdAt": "2020-04-28T16:24:15Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java", "diffHunk": "@@ -0,0 +1,194 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.Arrays;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Prepare Enchantment Experience Level Cost\")\n+@Description({\"The experience cost of an enchantment in an enchant prepare event.\",\n+\t\t\t\"If the cost is changed, it will always be at least 1.\"})\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tset the cost of enchantment 1 to 50\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.9 or 1.10\")\n+@SuppressWarnings(\"deprecation\")\n+public class ExprEnchantmentExpLevelCosts extends SimpleExpression<Number>{\n+\n+\tstatic {\n+\t\tif (!Skript.isRunningMinecraft(1, 11)) { // This expression should only be usable on 1.9 and 1.10.\n+\t\t\tSkript.registerExpression(ExprEnchantmentExpLevelCosts.class, Number.class, ExpressionType.SIMPLE,\n+\t\t\t\t\t\"[the] cost of (enchant[ment]s|enchant[ment] offers)\",\n+\t\t\t\t\t\"[the] cost of enchant[ment] [offer] %number%\",", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMjA3OQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416832079", "bodyText": "Since EnchantmentOffer wasn't added until 1.11, this expression exists to give users on 1.9 / 1.10 some ability to make changes. The word \"offer\" in this expression is a little misleading.", "author": "APickledWalrus", "createdAt": "2020-04-28T18:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MDk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NjE1OA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416986158", "bodyText": "maybe you could create skript's own EnchantmentOffer and register that on old versions kind of like how ItemType wraps ItemStack and Color wraps Bukkit's color", "author": "Pikachu920", "createdAt": "2020-04-28T23:33:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MDk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk5NjA0Ng==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416996046", "bodyText": "That could be interesting, although this is the only customizable part on 1.9 / 1.10 I believe.", "author": "APickledWalrus", "createdAt": "2020-04-29T00:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MDk1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "31ec908ca57415b944605ef3decec8b8c5c68fb4", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpCosts.java\nsimilarity index 95%\nrename from src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java\nrename to src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpCosts.java\nindex b86a8f84..a23e2cb7 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpCosts.java\n\n@@ -44,7 +44,7 @@ import ch.njol.skript.log.ErrorQuality;\n import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Enchant Prepare Enchantment Experience Level Cost\")\n+@Name(\"Enchantment Experience Level Costs\")\n @Description({\"The experience cost of an enchantment in an enchant prepare event.\",\n \t\t\t\"If the cost is changed, it will always be at least 1.\"})\n @Examples({\"on enchant prepare:\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTc2Mw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416751763", "bodyText": "exprOfferNumber may be null, this could cause an NPE", "author": "Pikachu920", "createdAt": "2020-04-28T16:25:28Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"[the] enchant[ment] offers\",\n+\t\t\t\t\t\"enchant[ment] offer %number%\",\n+\t\t\t\t\t\"[the] %number%(st|nd|rd|th) enchant[ment] offer\");\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Number> exprOfferNumber;\n+\n+\tprivate boolean multiple;\n+\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (matchedPattern == 0) {\n+\t\t\tmultiple = true;\n+\t\t} else {\n+\t\t\texprOfferNumber = (Expression<Number>) exprs[0];\n+\t\t\tmultiple = false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (multiple)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\n+\t\tint offerNumber = exprOfferNumber.getSingle(e).intValue();", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\nindex 60b588fb..b0da1fa5 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n\n@@ -19,7 +19,10 @@\n  */\n package ch.njol.skript.expressions;\n \n-import org.bukkit.Bukkit;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n import org.bukkit.enchantments.EnchantmentOffer;\n import org.bukkit.event.Event;\n import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTg3NQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416751875", "bodyText": "new EnchantmentOffer[0];", "author": "Pikachu920", "createdAt": "2020-04-28T16:25:37Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"[the] enchant[ment] offers\",\n+\t\t\t\t\t\"enchant[ment] offer %number%\",\n+\t\t\t\t\t\"[the] %number%(st|nd|rd|th) enchant[ment] offer\");\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Number> exprOfferNumber;\n+\n+\tprivate boolean multiple;\n+\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (matchedPattern == 0) {\n+\t\t\tmultiple = true;\n+\t\t} else {\n+\t\t\texprOfferNumber = (Expression<Number>) exprs[0];\n+\t\t\tmultiple = false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (multiple)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\n+\t\tint offerNumber = exprOfferNumber.getSingle(e).intValue();\n+\t\tif (offerNumber < 1 || offerNumber > 3)\n+\t\t\treturn new EnchantmentOffer[]{};", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MjMxMA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416752310", "bodyText": "also wouldn't it make more sense to just check the length of the offer array? just because this is the length now doesn't mean it will be in the future", "author": "Pikachu920", "createdAt": "2020-04-28T16:26:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxMzg5Ng==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416813896", "bodyText": "I will have to change that. There could be 0-3 offers, so I'll have to account for that.", "author": "APickledWalrus", "createdAt": "2020-04-28T17:59:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTg3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\nindex 60b588fb..b0da1fa5 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java\n\n@@ -19,7 +19,10 @@\n  */\n package ch.njol.skript.expressions;\n \n-import org.bukkit.Bukkit;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n import org.bukkit.enchantments.EnchantmentOffer;\n import org.bukkit.event.Event;\n import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2Mzc4OQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416763789", "bodyText": "wouldn't this mean you can't do add -1 to player's level to a level 1 player and get 0?", "author": "Pikachu920", "createdAt": "2020-04-28T16:42:54Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0 || delta == null)\n+\t\t\treturn;\n+\t\tint level = ((Number) delta[0]).intValue();\n+\t\tif (level < 1) \n+\t\t\treturn;\n+\t\tint change;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setEnchantmentLevel(level);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1) ", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxMTE4Ng==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416811186", "bodyText": "This check is to just make sure the level isn't being set to a number < 1, because you aren't able to do that. However, I will add some comments for clarity.", "author": "APickledWalrus", "createdAt": "2020-04-28T17:55:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2Mzc4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\nindex 8f48a359..10711df8 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n\n@@ -80,7 +80,7 @@ public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<Enchantm\n \t\t\t\tbreak;\n \t\t\tcase ADD:\n \t\t\t\tfor (EnchantmentOffer offer : offers) {\n-\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tchange = offer.getEnchantmentLevel() + level;\n \t\t\t\t\tif (change < 1) \n \t\t\t\t\t\treturn;\n \t\t\t\t\toffer.setEnchantmentLevel(change);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2NDM1Ng==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416764356", "bodyText": "shouldn't this be reversed? offer.getEnchantmentLevel() - level", "author": "Pikachu920", "createdAt": "2020-04-28T16:43:44Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0 || delta == null)\n+\t\t\treturn;\n+\t\tint level = ((Number) delta[0]).intValue();\n+\t\tif (level < 1) \n+\t\t\treturn;\n+\t\tint change;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setEnchantmentLevel(level);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1) \n+\t\t\t\t\t\treturn;\n+\t\t\t\t\toffer.setEnchantmentLevel(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level - offer.getEnchantmentLevel();", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\nindex 8f48a359..10711df8 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n\n@@ -80,7 +80,7 @@ public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<Enchantm\n \t\t\t\tbreak;\n \t\t\tcase ADD:\n \t\t\t\tfor (EnchantmentOffer offer : offers) {\n-\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tchange = offer.getEnchantmentLevel() + level;\n \t\t\t\t\tif (change < 1) \n \t\t\t\t\t\treturn;\n \t\t\t\t\toffer.setEnchantmentLevel(change);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2NDgxNQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416764815", "bodyText": "shouldn't scripters be able to set the level to 0 or even negative levels if they wanted to?", "author": "Pikachu920", "createdAt": "2020-04-28T16:44:26Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0 || delta == null)\n+\t\t\treturn;\n+\t\tint level = ((Number) delta[0]).intValue();\n+\t\tif (level < 1) ", "originalCommit": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgwODMwMg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416808302", "bodyText": "It does not work - an error is thrown.", "author": "APickledWalrus", "createdAt": "2020-04-28T17:50:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2NDgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgwOTQyNQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416809425", "bodyText": "even if it's set to 0?", "author": "Pikachu920", "createdAt": "2020-04-28T17:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2NDgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxNzA1NQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416817055", "bodyText": "Yep. I thought it was possible to get enchantments of those levels, but maybe not? The cost and enchantment level both have to be greater than 0.", "author": "APickledWalrus", "createdAt": "2020-04-28T18:04:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2NDgxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\nindex 8f48a359..10711df8 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java\n\n@@ -80,7 +80,7 @@ public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<Enchantm\n \t\t\t\tbreak;\n \t\t\tcase ADD:\n \t\t\t\tfor (EnchantmentOffer offer : offers) {\n-\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tchange = offer.getEnchantmentLevel() + level;\n \t\t\t\t\tif (change < 1) \n \t\t\t\t\t\treturn;\n \t\t\t\t\toffer.setEnchantmentLevel(change);\n"}}, {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "url": "https://github.com/SkriptLang/Skript/commit/a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "message": "Make More Requested Changes", "committedDate": "2020-04-28T19:46:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNDMzMg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422714332", "bodyText": "This should be \"offer:\" + eo.getEnchantment().getKey().getKey() + \"=\" + eo.getEnchantmentLevel() or something similar, and the varible pattern may match that as well.", "author": "SnowPyon", "createdAt": "2020-05-10T23:12:32Z", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1719,6 +1720,41 @@ public String getVariableNamePattern() {\n \t\t\t\t\t})\n \t\t\t\t\t.serializer(new EnumSerializer<>(Cat.Type.class)));\n \t\t}\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(EnchantmentOffer.class, \"enchantmentoffer\")\n+\t\t\t\t.user(\"enchant[ment][ ]offers?\")\n+\t\t\t\t.name(\"Enchantment Offer\")\n+\t\t\t\t.description(\"The enchantmentoffer in an enchant prepare event.\")\n+\t\t\t\t.examples(\"cost of enchantmentoffer\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<EnchantmentOffer>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\tpublic EnchantmentOffer parse(String input, ParseContext context) {\n+\t\t\t\t\t\treturn null;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic boolean canParse(ParseContext context) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(EnchantmentOffer eo, int flags) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment(), flags) + \" \" + eo.getEnchantmentLevel();\n+\t\t\t\t\t}\n+\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(EnchantmentOffer eo) {\n+\t\t\t\t\t\treturn toString(eo, 0);", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\nindex db03ae84..65618301 100644\n--- a/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n+++ b/src/main/java/ch/njol/skript/classes/data/BukkitClasses.java\n\n@@ -1746,7 +1746,7 @@ public class BukkitClasses {\n \t\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic String toVariableNameString(EnchantmentOffer eo) {\n-\t\t\t\t\t\treturn toString(eo, 0);\n+\t\t\t\t\t\treturn \"offer:\" + EnchantmentType.toString(eo.getEnchantment()) + \"=\" + eo.getEnchantmentLevel();\n \t\t\t\t\t}\n \t\n \t\t\t\t\t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNDk1MQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422714951", "bodyText": "This should just be called Enchant Item", "author": "SnowPyon", "createdAt": "2020-05-10T23:18:00Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItem.java\nsimilarity index 93%\nrename from src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\nrename to src/main/java/ch/njol/skript/expressions/ExprEnchantItem.java\nindex 2a4c1fda..da83aff6 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItem.java\n\n@@ -43,19 +43,19 @@ import ch.njol.skript.log.ErrorQuality;\n import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Enchant Events Enchant Item\")\n+@Name(\"Enchant Item\")\n @Description({\"The enchant item in an enchant prepare event or enchant event.\",\n \t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n @Examples({\"on enchant:\",\n \t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n \t\t\t\"on enchant prepare:\",\n \t\t\t\"\\tset the enchant item to a wooden sword\"})\n-@Events(\"enchant prepare and enchant\")\n+@Events({\"enchant prepare\", \"enchant\"})\n @Since(\"INSERT VERSION\")\n-public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n+public class ExprEnchantItem extends SimpleExpression<ItemType> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchanted item\");\n+\t\tSkript.registerExpression(ExprEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchanted item\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNTYwNw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422715607", "bodyText": "This method accepts an array, and it should match the given name parameter on Skript#registerEvent method for the event.", "author": "SnowPyon", "createdAt": "2020-05-10T23:23:13Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")\n+@Description({\"The enchant item in an enchant prepare event or enchant event.\",\n+\t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n+\t\t\t\"on enchant prepare:\",\n+\t\t\t\"\\tset the enchant item to a wooden sword\"})\n+@Events(\"enchant prepare and enchant\")", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantItem.java\nsimilarity index 93%\nrename from src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\nrename to src/main/java/ch/njol/skript/expressions/ExprEnchantItem.java\nindex 2a4c1fda..da83aff6 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantItem.java\n\n@@ -43,19 +43,19 @@ import ch.njol.skript.log.ErrorQuality;\n import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Enchant Events Enchant Item\")\n+@Name(\"Enchant Item\")\n @Description({\"The enchant item in an enchant prepare event or enchant event.\",\n \t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n @Examples({\"on enchant:\",\n \t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n \t\t\t\"on enchant prepare:\",\n \t\t\t\"\\tset the enchant item to a wooden sword\"})\n-@Events(\"enchant prepare and enchant\")\n+@Events({\"enchant prepare\", \"enchant\"})\n @Since(\"INSERT VERSION\")\n-public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n+public class ExprEnchantItem extends SimpleExpression<ItemType> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchanted item\");\n+\t\tSkript.registerExpression(ExprEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchanted item\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNTk0OA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422715948", "bodyText": "Same as above, remove Enchant Event and make @Events match with the event name.", "author": "SnowPyon", "createdAt": "2020-05-10T23:25:59Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java b/src/main/java/ch/njol/skript/expressions/ExprAppliedEnchantments.java\nsimilarity index 93%\nrename from src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\nrename to src/main/java/ch/njol/skript/expressions/ExprAppliedEnchantments.java\nindex 915bd28e..fa57fe9d 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprAppliedEnchantments.java\n\n@@ -48,17 +48,17 @@ import ch.njol.skript.util.EnchantmentType;\n import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Enchant Event Applied Enchantments\")\n+@Name(\"Applied Enchantments\")\n @Description({\"The applied enchantments in an enchant event.\",\n \t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n @Examples({\"on enchant\",\n \t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n @Events(\"enchant\")\n @Since(\"INSERT VERSION\")\n-public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+public class ExprAppliedEnchantments extends SimpleExpression<EnchantmentType> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t\tSkript.registerExpression(ExprAppliedEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment]s\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjExNg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716116", "bodyText": "I believe this should be fine if it takes only EnchantmentType due to the Enchantment -> EnchantmentType converter (and Skript shouldn't really be returning Enchantment anywhere, if it does, it should be changed), not 100% sure though.", "author": "SnowPyon", "createdAt": "2020-05-10T23:27:27Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjczOTU0Ng==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422739546", "bodyText": "I based this off of the following:\n// Enchantment doesn't get automatically converted to EnchantmentType if you give it more than a one.\n// Meaning you can transform an Enchantment array to an EnchantmentType array automatically,\n// So, we gotta do it manually.\nreturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n\nSource: \n  \n    \n      Skript/src/main/java/ch/njol/skript/expressions/ExprEnchantments.java\n    \n    \n         Line 89\n      in\n      14f267c\n    \n    \n    \n    \n\n        \n          \n           // Enchantment doesn't get automatically converted to EnchantmentType if you give it more than a one. \n        \n    \n  \n\n\nNot sure if it is still relevant though", "author": "APickledWalrus", "createdAt": "2020-05-11T01:49:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjExNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA1NzM0MA==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r423057340", "bodyText": "Oh right, I wrote that lol. Yeah, we should fix that but for now, just keep accepting both. Sorry for the confusion.", "author": "SnowPyon", "createdAt": "2020-05-11T13:55:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjExNg=="}], "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java b/src/main/java/ch/njol/skript/expressions/ExprAppliedEnchantments.java\nsimilarity index 93%\nrename from src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\nrename to src/main/java/ch/njol/skript/expressions/ExprAppliedEnchantments.java\nindex 915bd28e..fa57fe9d 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprAppliedEnchantments.java\n\n@@ -48,17 +48,17 @@ import ch.njol.skript.util.EnchantmentType;\n import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Enchant Event Applied Enchantments\")\n+@Name(\"Applied Enchantments\")\n @Description({\"The applied enchantments in an enchant event.\",\n \t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n @Examples({\"on enchant\",\n \t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n @Events(\"enchant\")\n @Since(\"INSERT VERSION\")\n-public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+public class ExprAppliedEnchantments extends SimpleExpression<EnchantmentType> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t\tSkript.registerExpression(ExprAppliedEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment]s\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjMyNw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716327", "bodyText": "enchantment button clicked doesn't really make sense, does it?", "author": "SnowPyon", "createdAt": "2020-05-10T23:29:02Z", "path": "src/main/java/ch/njol/skript/expressions/ExprClicked.java", "diffHunk": "@@ -72,7 +73,8 @@\n \t\tSLOT(2, Slot.class, \"clicked slot\", \"clicked slot\"),\n \t\tINVENTORY(3, Inventory.class, \"clicked inventory\", \"clicked inventory\"),\n \t\tTYPE(4, ClickType.class, \"click type\", \"click (type|action)\"),\n-\t\tACTION(5, InventoryAction.class, \"inventory action\", \"inventory action\");\n+\t\tACTION(5, InventoryAction.class, \"inventory action\", \"inventory action\"),\n+\t\tENCHANT_BUTTON(6, Number.class, \"clicked enchantment button\", \"(clicked [enchant[ment]] button|enchant[ment] button clicked)\");", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc0MDUwNg==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422740506", "bodyText": "Since it only returns a number, maybe not?\nif the enchantment button clicked is 1 sounds okay to me, although it is a bit odd.", "author": "APickledWalrus", "createdAt": "2020-05-11T01:54:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjMyNw=="}], "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprClicked.java b/src/main/java/ch/njol/skript/expressions/ExprClicked.java\nindex 1257a416..032ef227 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprClicked.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprClicked.java\n\n@@ -74,7 +74,7 @@ public class ExprClicked extends SimpleExpression<Object> {\n \t\tINVENTORY(3, Inventory.class, \"clicked inventory\", \"clicked inventory\"),\n \t\tTYPE(4, ClickType.class, \"click type\", \"click (type|action)\"),\n \t\tACTION(5, InventoryAction.class, \"inventory action\", \"inventory action\"),\n-\t\tENCHANT_BUTTON(6, Number.class, \"clicked enchantment button\", \"(clicked [enchant[ment]] button|enchant[ment] button clicked)\");\n+\t\tENCHANT_BUTTON(6, Number.class, \"clicked enchantment button\", \"clicked [enchant[ment]] button\");\n \t\t\n \t\tprivate String name, syntax;\n \t\tprivate Class<?> c;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjQwMw==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716403", "bodyText": "The s shouldn't be optional,", "author": "SnowPyon", "createdAt": "2020-05-10T23:29:46Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc0MTA0Ng==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422741046", "bodyText": "I thought since there might only be one enchantment returned I should keep it optional, but since there isn't any way for me to check that in isSingle, I'll make the change", "author": "APickledWalrus", "createdAt": "2020-05-11T01:56:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjQwMw=="}], "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java b/src/main/java/ch/njol/skript/expressions/ExprAppliedEnchantments.java\nsimilarity index 93%\nrename from src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\nrename to src/main/java/ch/njol/skript/expressions/ExprAppliedEnchantments.java\nindex 915bd28e..fa57fe9d 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprAppliedEnchantments.java\n\n@@ -48,17 +48,17 @@ import ch.njol.skript.util.EnchantmentType;\n import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Enchant Event Applied Enchantments\")\n+@Name(\"Applied Enchantments\")\n @Description({\"The applied enchantments in an enchant event.\",\n \t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n @Examples({\"on enchant\",\n \t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n @Events(\"enchant\")\n @Since(\"INSERT VERSION\")\n-public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+public class ExprAppliedEnchantments extends SimpleExpression<EnchantmentType> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t\tSkript.registerExpression(ExprAppliedEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment]s\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjU1Ng==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716556", "bodyText": "Same as the others.", "author": "SnowPyon", "createdAt": "2020-05-10T23:30:47Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantingExpCost.java\nsimilarity index 92%\nrename from src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\nrename to src/main/java/ch/njol/skript/expressions/ExprEnchantingExpCost.java\nindex b2a43034..1989ebde 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantingExpCost.java\n\n@@ -39,18 +39,18 @@ import ch.njol.skript.log.ErrorQuality;\n import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Enchant Event Experience Cost\")\n+@Name(\"Enchanting Experience Cost\")\n @Description({\"The cost of enchanting in an enchant event.\", \n \t\t\t\t\"This is number that was displayed in the enchantment table, not the actual number of levels removed.\"})\n @Examples({\"on enchant:\",\n \t\t\t\"\\tsend \\\"Cost: %the displayed cost of enchanting%\\\" to player\"})\n @Events(\"enchant\")\n @Since(\"INSERT VERSION\")\n-public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+public class ExprEnchantingExpCost extends SimpleExpression<Number> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n-\t\t\t\t\"[the] [displayed] [[e]xp[erience]] cost (of enchanting|to enchant)\");\n+\t\tSkript.registerExpression(ExprEnchantingExpCost.class, Number.class, ExpressionType.SIMPLE, \n+\t\t\t\t\"[the] [displayed] ([e]xp[erience]|enchanting) cost\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjYwMQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716601", "bodyText": "Remove the enchanting|to enchant part, it's redundant.", "author": "SnowPyon", "createdAt": "2020-05-10T23:31:16Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost of enchanting in an enchant event.\", \n+\t\t\t\t\"This is number that was displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %the displayed cost of enchanting%\\\" to player\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n+\t\t\t\t\"[the] [displayed] [[e]xp[erience]] cost (of enchanting|to enchant)\");", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantingExpCost.java\nsimilarity index 92%\nrename from src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\nrename to src/main/java/ch/njol/skript/expressions/ExprEnchantingExpCost.java\nindex b2a43034..1989ebde 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantingExpCost.java\n\n@@ -39,18 +39,18 @@ import ch.njol.skript.log.ErrorQuality;\n import ch.njol.util.Kleenean;\n import ch.njol.util.coll.CollectionUtils;\n \n-@Name(\"Enchant Event Experience Cost\")\n+@Name(\"Enchanting Experience Cost\")\n @Description({\"The cost of enchanting in an enchant event.\", \n \t\t\t\t\"This is number that was displayed in the enchantment table, not the actual number of levels removed.\"})\n @Examples({\"on enchant:\",\n \t\t\t\"\\tsend \\\"Cost: %the displayed cost of enchanting%\\\" to player\"})\n @Events(\"enchant\")\n @Since(\"INSERT VERSION\")\n-public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+public class ExprEnchantingExpCost extends SimpleExpression<Number> {\n \n \tstatic {\n-\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n-\t\t\t\t\"[the] [displayed] [[e]xp[erience]] cost (of enchanting|to enchant)\");\n+\t\tSkript.registerExpression(ExprEnchantingExpCost.class, Number.class, ExpressionType.SIMPLE, \n+\t\t\t\t\"[the] [displayed] ([e]xp[erience]|enchanting) cost\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjY3OQ==", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716679", "bodyText": "Same here.", "author": "SnowPyon", "createdAt": "2020-05-10T23:32:11Z", "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchant Prepare Enchantment Bonus\")", "originalCommit": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "748030ab504894d3084daa095127c6189d81eeac", "chunk": "diff --git a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\nindex 13b4bf6f..e38e6a61 100644\n--- a/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\n+++ b/src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java\n\n@@ -37,7 +37,7 @@ import ch.njol.skript.lang.util.SimpleExpression;\n import ch.njol.skript.log.ErrorQuality;\n import ch.njol.util.Kleenean;\n \n-@Name(\"Enchant Prepare Enchantment Bonus\")\n+@Name(\"Enchantment Bonus\")\n @Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves affecting/surrounding the enchantment table.\")\n @Examples({\"on enchant:\", \n \t\"\\tsend \\\"There are %enchantment bonus% bookshelves surrounding this enchantment table!\\\" to player\"})\n"}}, {"oid": "748030ab504894d3084daa095127c6189d81eeac", "url": "https://github.com/SkriptLang/Skript/commit/748030ab504894d3084daa095127c6189d81eeac", "message": "Finishing Touches", "committedDate": "2020-06-13T22:58:38Z", "type": "commit"}, {"oid": "e4b159291034321fc62d9f19665b8857e072b288", "url": "https://github.com/SkriptLang/Skript/commit/e4b159291034321fc62d9f19665b8857e072b288", "message": "Merge branch 'master' into APickledWalrus-evts-enchant", "committedDate": "2020-06-13T22:59:04Z", "type": "commit"}, {"oid": "31ec908ca57415b944605ef3decec8b8c5c68fb4", "url": "https://github.com/SkriptLang/Skript/commit/31ec908ca57415b944605ef3decec8b8c5c68fb4", "message": "Remove redundant wording", "committedDate": "2020-06-13T23:06:16Z", "type": "commit"}, {"oid": "fb7d69b4046dcc98e61b3e3e45a595ac4c1e7922", "url": "https://github.com/SkriptLang/Skript/commit/fb7d69b4046dcc98e61b3e3e45a595ac4c1e7922", "message": "Merge branch 'master' into APickledWalrus-evts-enchant", "committedDate": "2020-06-15T20:12:18Z", "type": "commit"}, {"oid": "dab91ec385f2651f98e213a424f24e634aaf3d61", "url": "https://github.com/SkriptLang/Skript/commit/dab91ec385f2651f98e213a424f24e634aaf3d61", "message": "Stylistic Changes and Small Bug Fixes\n\nAlso removed some unnecessary code", "committedDate": "2020-07-10T01:40:19Z", "type": "commit"}, {"oid": "80c2929d76fc5ba30e5bfcc719f21c99011059f5", "url": "https://github.com/SkriptLang/Skript/commit/80c2929d76fc5ba30e5bfcc719f21c99011059f5", "message": "Merge branch 'master' into APickledWalrus-evts-enchant", "committedDate": "2020-07-10T01:41:06Z", "type": "commit"}, {"oid": "1713f92de58a7b0e102f88e1b2559a223fcbf2f2", "url": "https://github.com/SkriptLang/Skript/commit/1713f92de58a7b0e102f88e1b2559a223fcbf2f2", "message": "Enchantment Offer Updates\n\nNew converters / comparators too\nSmall bug fixes", "committedDate": "2020-07-12T05:20:17Z", "type": "commit"}, {"oid": "dfd7f9abc192aa3c95aa96bad4617f88b9e9aa78", "url": "https://github.com/SkriptLang/Skript/commit/dfd7f9abc192aa3c95aa96bad4617f88b9e9aa78", "message": "Merge branch 'master' into APickledWalrus-evts-enchant", "committedDate": "2020-07-12T05:22:22Z", "type": "commit"}]}