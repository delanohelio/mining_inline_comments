{"pr_number": 4076, "pr_title": "Allow to input all metadata in newspaper metadata input", "pr_createdAt": "2020-10-29T09:50:55Z", "pr_url": "https://github.com/kitodo/kitodo-production/pull/4076", "timeline": [{"oid": "fedefa583c80308e29c71cc82d607f6dd0a4a60b", "url": "https://github.com/kitodo/kitodo-production/commit/fedefa583c80308e29c71cc82d607f6dd0a4a60b", "message": "Allow to input metadata with minOccurs=\"1\" in newspaper metadata input", "committedDate": "2020-10-29T09:42:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzMTkzMA==", "url": "https://github.com/kitodo/kitodo-production/pull/4076#discussion_r514131930", "bodyText": "<T> is not used and was thus removed", "author": "matthias-ronge", "createdAt": "2020-10-29T09:51:36Z", "path": "Kitodo-API/src/main/java/org/kitodo/api/dataeditor/rulesetmanagement/ComplexMetadataViewInterface.java", "diffHunk": "@@ -25,23 +25,30 @@\n      * list contains only metadata keys that are still allowed at this point,\n      * minus those that are already displayed anyway but have no value yet.\n      *\n-     * @param <T>\n-     *            the type of metadata objects\n      * @param entered\n      *            metadata objects that have already been entered, along with\n      *            their key\n      * @param additionallySelected\n      *            metadata keys that the user has already selected\n      * @return the metadata keys that the user can add\n      */\n-    <T> Collection<MetadataViewInterface> getAddableMetadata(Map<T, String> entered,\n+    Collection<MetadataViewInterface> getAddableMetadata(Map<?, String> entered,", "originalCommit": "fedefa583c80308e29c71cc82d607f6dd0a4a60b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzMjE4NA==", "url": "https://github.com/kitodo/kitodo-production/pull/4076#discussion_r514132184", "bodyText": "This all || is the core change of this PR", "author": "matthias-ronge", "createdAt": "2020-10-29T09:52:03Z", "path": "Kitodo-DataEditor/src/main/java/org/kitodo/dataeditor/ruleset/NestedKeyView.java", "diffHunk": "@@ -340,12 +341,18 @@ protected NestedKeyView(Ruleset ruleset, U universalDivision, UniversalRule univ\n      *            metadata keys that the user has already selected\n      */\n     @Override\n-    public <V> Collection<MetadataViewInterface> getAddableMetadata(Map<V, String> currentEntries,\n+    public Collection<MetadataViewInterface> getAddableMetadata(Map<?, String> currentEntries,\n             Collection<String> additionalKeys) {\n \n+        return getPossibleMetadata(currentEntries, additionalKeys, false);\n+    }\n+\n+    private Collection<MetadataViewInterface> getPossibleMetadata(Map<?, String> currentEntries,\n+            Collection<String> additionalKeys, boolean all) {\n+\n         Collection<MetadataViewInterface> addableMetadata = new LinkedList<>();\n-        for (AuxiliaryTableRow<V> auxiliaryTableRow : createAuxiliaryTable(currentEntries, additionalKeys)) {\n-            if (auxiliaryTableRow.isPossibleToExpandAnotherField()) {\n+        for (AuxiliaryTableRow<?> auxiliaryTableRow : createAuxiliaryTable(currentEntries, additionalKeys)) {\n+            if (all || auxiliaryTableRow.isPossibleToExpandAnotherField()) {", "originalCommit": "fedefa583c80308e29c71cc82d607f6dd0a4a60b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzMjY0NQ==", "url": "https://github.com/kitodo/kitodo-production/pull/4076#discussion_r514132645", "bodyText": "Here a totally ugly work-around could be removed.", "author": "matthias-ronge", "createdAt": "2020-10-29T09:52:50Z", "path": "Kitodo/src/main/java/org/kitodo/production/services/calendar/CalendarService.java", "diffHunk": "@@ -109,18 +107,12 @@\n         StructuralElementViewInterface issueView = ruleset.getStructuralElementView(issueType, acquisitionStage, priorityList);\n \n         // From view to output, get all addable metadata\n-        List<MetadataViewWithValuesInterface<Object>> alreadyShowing = issueView\n-                .getSortedVisibleMetadata(Collections.emptyMap(), Collections.emptyList());\n-        Collection<MetadataViewInterface> addable = issueView.getAddableMetadata(Collections.emptyMap(), Collections.emptyList());\n-        return Stream\n-                .concat(\n-                    alreadyShowing.stream()\n-                            .filter(metadataViewWithValues -> metadataViewWithValues.getMetadata().isPresent())\n-                            .map(metadataViewWithValues -> metadataViewWithValues.getMetadata().get()),\n-                    addable.stream())\n-                .filter(new UniqueMetadataView())\n+        Collection<MetadataViewInterface> allowedMetadata = issueView.getAllowedMetadata();", "originalCommit": "fedefa583c80308e29c71cc82d607f6dd0a4a60b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}