{"pr_number": 3412, "pr_title": "Add the possibility to change the type of an included structural element", "pr_createdAt": "2020-04-08T14:09:32Z", "pr_url": "https://github.com/kitodo/kitodo-production/pull/3412", "timeline": [{"oid": "e61cc41538f7371a56d243e3f6df953ba8bf83f4", "url": "https://github.com/kitodo/kitodo-production/commit/e61cc41538f7371a56d243e3f6df953ba8bf83f4", "message": "Add the possibility to change the type of an included structural element\n\nFixes #3372", "committedDate": "2020-04-08T13:45:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkwMzkxMQ==", "url": "https://github.com/kitodo/kitodo-production/pull/3412#discussion_r407903911", "bodyText": "please remove the \"recursive\"", "author": "Kathrin-Huber", "createdAt": "2020-04-14T06:50:33Z", "path": "Kitodo/src/main/java/org/kitodo/production/metadata/MetadataEditor.java", "diffHunk": "@@ -350,6 +355,44 @@ public static View createUnrestrictedViewOn(MediaUnit mediaUnit) {\n         return unrestrictedView;\n     }\n \n+    /**\n+     * Recursively determines the path to the included structural element of the\n+     * child. For each level of the root element, the recursion is run through\n+     * once, that is for a newspaper year process tree times (year, month, day).\n+     *\n+     * @param includedStructuralElement\n+     *            included structural element of the level stage of recursion\n+     *            (starting from the top)\n+     * @param number\n+     *            number of the record of the process of the child\n+     *\n+     */\n+    public static List<IncludedStructuralElement> determineIncludedStructuralElementPathToChildRecursive(", "originalCommit": "e61cc41538f7371a56d243e3f6df953ba8bf83f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc1b591014098d2cfa788bf1b18977e8cf807792", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/metadata/MetadataEditor.java b/Kitodo/src/main/java/org/kitodo/production/metadata/MetadataEditor.java\nindex e156dfddd..bf48191c7 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/metadata/MetadataEditor.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/metadata/MetadataEditor.java\n\n@@ -356,9 +356,9 @@ public class MetadataEditor {\n     }\n \n     /**\n-     * Recursively determines the path to the included structural element of the\n-     * child. For each level of the root element, the recursion is run through\n-     * once, that is for a newspaper year process tree times (year, month, day).\n+     * Determines the path to the included structural element of the child. For\n+     * each level of the root element, the recursion is run through once, that\n+     * is for a newspaper year process tree times (year, month, day).\n      *\n      * @param includedStructuralElement\n      *            included structural element of the level stage of recursion\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkzMjUzMw==", "url": "https://github.com/kitodo/kitodo-production/pull/3412#discussion_r407932533", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private String docStructEditTypeSelectionSelectedItem;\n          \n          \n            \n                private String docStructType;", "author": "Kathrin-Huber", "createdAt": "2020-04-14T07:46:59Z", "path": "Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>\n+ *\n+ * This file is part of the Kitodo project.\n+ *\n+ * It is licensed under GNU General Public License version 3 or later.\n+ *\n+ * For the full copyright and license information, please read the\n+ * GPL3-License.txt file that was distributed with this source code.\n+ */\n+\n+package org.kitodo.production.forms.dataeditor;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.faces.model.SelectItem;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.kitodo.api.dataeditor.rulesetmanagement.StructuralElementViewInterface;\n+import org.kitodo.api.dataformat.IncludedStructuralElement;\n+import org.kitodo.production.helper.Helper;\n+import org.kitodo.production.metadata.MetadataEditor;\n+import org.kitodo.production.services.ServiceManager;\n+\n+/**\n+ * Backing bean for the change doc struc type dialog of the metadata editor.\n+ */\n+public class ChangeDocStrucTypeDialog {\n+    private static final Logger logger = LogManager.getLogger(ChangeDocStrucTypeDialog.class);\n+\n+    private final DataEditorForm dataEditor;\n+    private final List<SelectItem> docStructEditTypeSelectionItems = new ArrayList<>();\n+    private String docStructEditTypeSelectionSelectedItem;", "originalCommit": "e61cc41538f7371a56d243e3f6df953ba8bf83f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc1b591014098d2cfa788bf1b18977e8cf807792", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\nindex ffbd2490e..351751d8c 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n\n@@ -149,7 +149,7 @@ public class ChangeDocStrucTypeDialog {\n         IncludedStructuralElement parentRootElement = ServiceManager.getMetsService().loadWorkpiece(parentMetadataUri)\n                 .getRootElement();\n         List<IncludedStructuralElement> parentHierarchyPath = MetadataEditor\n-                .determineIncludedStructuralElementPathToChildRecursive(parentRootElement,\n+                .determineIncludedStructuralElementPathToChild(parentRootElement,\n                     dataEditor.getProcess().getId());\n         if (parentHierarchyPath.isEmpty()) {\n             throw new IllegalStateException(\"proces is not linked in parent process\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkzMjg2NQ==", "url": "https://github.com/kitodo/kitodo-production/pull/3412#discussion_r407932865", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final List<SelectItem> docStructEditTypeSelectionItems = new ArrayList<>();\n          \n          \n            \n                private final List<SelectItem> docStructTypes = new ArrayList<>();", "author": "Kathrin-Huber", "createdAt": "2020-04-14T07:47:39Z", "path": "Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>\n+ *\n+ * This file is part of the Kitodo project.\n+ *\n+ * It is licensed under GNU General Public License version 3 or later.\n+ *\n+ * For the full copyright and license information, please read the\n+ * GPL3-License.txt file that was distributed with this source code.\n+ */\n+\n+package org.kitodo.production.forms.dataeditor;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.faces.model.SelectItem;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.kitodo.api.dataeditor.rulesetmanagement.StructuralElementViewInterface;\n+import org.kitodo.api.dataformat.IncludedStructuralElement;\n+import org.kitodo.production.helper.Helper;\n+import org.kitodo.production.metadata.MetadataEditor;\n+import org.kitodo.production.services.ServiceManager;\n+\n+/**\n+ * Backing bean for the change doc struc type dialog of the metadata editor.\n+ */\n+public class ChangeDocStrucTypeDialog {\n+    private static final Logger logger = LogManager.getLogger(ChangeDocStrucTypeDialog.class);\n+\n+    private final DataEditorForm dataEditor;\n+    private final List<SelectItem> docStructEditTypeSelectionItems = new ArrayList<>();", "originalCommit": "e61cc41538f7371a56d243e3f6df953ba8bf83f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc1b591014098d2cfa788bf1b18977e8cf807792", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\nindex ffbd2490e..351751d8c 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n\n@@ -149,7 +149,7 @@ public class ChangeDocStrucTypeDialog {\n         IncludedStructuralElement parentRootElement = ServiceManager.getMetsService().loadWorkpiece(parentMetadataUri)\n                 .getRootElement();\n         List<IncludedStructuralElement> parentHierarchyPath = MetadataEditor\n-                .determineIncludedStructuralElementPathToChildRecursive(parentRootElement,\n+                .determineIncludedStructuralElementPathToChild(parentRootElement,\n                     dataEditor.getProcess().getId());\n         if (parentHierarchyPath.isEmpty()) {\n             throw new IllegalStateException(\"proces is not linked in parent process\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkzNTI0Mw==", "url": "https://github.com/kitodo/kitodo-production/pull/3412#discussion_r407935243", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private IncludedStructuralElement getTheCurrentlySelectedIncludedStructuralElement() {\n          \n          \n            \n                private IncludedStructuralElement getSelectedIncludedStructuralElement() {", "author": "Kathrin-Huber", "createdAt": "2020-04-14T07:51:58Z", "path": "Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>\n+ *\n+ * This file is part of the Kitodo project.\n+ *\n+ * It is licensed under GNU General Public License version 3 or later.\n+ *\n+ * For the full copyright and license information, please read the\n+ * GPL3-License.txt file that was distributed with this source code.\n+ */\n+\n+package org.kitodo.production.forms.dataeditor;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.faces.model.SelectItem;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.kitodo.api.dataeditor.rulesetmanagement.StructuralElementViewInterface;\n+import org.kitodo.api.dataformat.IncludedStructuralElement;\n+import org.kitodo.production.helper.Helper;\n+import org.kitodo.production.metadata.MetadataEditor;\n+import org.kitodo.production.services.ServiceManager;\n+\n+/**\n+ * Backing bean for the change doc struc type dialog of the metadata editor.\n+ */\n+public class ChangeDocStrucTypeDialog {\n+    private static final Logger logger = LogManager.getLogger(ChangeDocStrucTypeDialog.class);\n+\n+    private final DataEditorForm dataEditor;\n+    private final List<SelectItem> docStructEditTypeSelectionItems = new ArrayList<>();\n+    private String docStructEditTypeSelectionSelectedItem;\n+\n+    /**\n+     * Backing bean for the add doc struc type dialog of the metadata editor.\n+     *\n+     * @see \"WEB-INF/templates/includes/metadataEditor/dialogs/changeDocStrucType.xhtml\"\n+     */\n+    ChangeDocStrucTypeDialog(DataEditorForm dataEditor) {\n+        this.dataEditor = dataEditor;\n+    }\n+\n+    /**\n+     * Edit the doc struc.\n+     */\n+    public void editDocStruc() {\n+        IncludedStructuralElement selectedStructure = getTheCurrentlySelectedIncludedStructuralElement();\n+        selectedStructure.setType(docStructEditTypeSelectionSelectedItem);\n+        dataEditor.refreshStructurePanel();\n+    }\n+\n+    /**\n+     * Returns the selected item of the docStructEditTypeSelection drop-down\n+     * menu.\n+     *\n+     * @return the selected item of the docStructEditTypeSelection\n+     */\n+    public List<SelectItem> getDocStructEditTypeSelectionItems() {\n+        return docStructEditTypeSelectionItems;\n+    }\n+\n+    /**\n+     * Return selected doc struct type.\n+     *\n+     * @return selected doc struct type\n+     */\n+    public String getDocStructEditTypeSelectionSelectedItem() {\n+        return docStructEditTypeSelectionSelectedItem;\n+    }\n+\n+    /**\n+     * Sets the selected item of the docStructEditTypeSelection drop-down menu.\n+     *\n+     * @param docStructEditTypeSelectionSelectedItem\n+     *            selected item to set\n+     */\n+    public void setDocStructEditTypeSelectionSelectedItem(String docStructEditTypeSelectionSelectedItem) {\n+        this.docStructEditTypeSelectionSelectedItem = docStructEditTypeSelectionSelectedItem;\n+    }\n+\n+    /**\n+     * Prepare popup dialog by retrieving available doc struct types for\n+     * selected element.\n+     */\n+    public void prepare() {\n+        try {\n+            IncludedStructuralElement selectedStructure = getTheCurrentlySelectedIncludedStructuralElement();\n+            Map<String, String> possibleTypes = findAllTypesThisIncludedStructuralElementCanHave(selectedStructure);\n+            docStructEditTypeSelectionItems.clear();\n+            for (Entry<String, String> typeOption : possibleTypes.entrySet()) {\n+                docStructEditTypeSelectionItems.add(new SelectItem(typeOption.getKey(), typeOption.getValue()));\n+            }\n+            docStructEditTypeSelectionSelectedItem = selectedStructure.getType();\n+        } catch (IllegalStateException | IOException e) {\n+            Helper.setErrorMessage(e.getLocalizedMessage(), logger, e);\n+        }\n+    }\n+\n+    private IncludedStructuralElement getTheCurrentlySelectedIncludedStructuralElement() {", "originalCommit": "e61cc41538f7371a56d243e3f6df953ba8bf83f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc1b591014098d2cfa788bf1b18977e8cf807792", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\nindex ffbd2490e..351751d8c 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n\n@@ -149,7 +149,7 @@ public class ChangeDocStrucTypeDialog {\n         IncludedStructuralElement parentRootElement = ServiceManager.getMetsService().loadWorkpiece(parentMetadataUri)\n                 .getRootElement();\n         List<IncludedStructuralElement> parentHierarchyPath = MetadataEditor\n-                .determineIncludedStructuralElementPathToChildRecursive(parentRootElement,\n+                .determineIncludedStructuralElementPathToChild(parentRootElement,\n                     dataEditor.getProcess().getId());\n         if (parentHierarchyPath.isEmpty()) {\n             throw new IllegalStateException(\"proces is not linked in parent process\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkzNTY0MQ==", "url": "https://github.com/kitodo/kitodo-production/pull/3412#discussion_r407935641", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Map<String, String> findAllTypesThisIncludedStructuralElementCanHave(\n          \n          \n            \n                private Map<String, String> findAllPossibleTypes(", "author": "Kathrin-Huber", "createdAt": "2020-04-14T07:52:40Z", "path": "Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>\n+ *\n+ * This file is part of the Kitodo project.\n+ *\n+ * It is licensed under GNU General Public License version 3 or later.\n+ *\n+ * For the full copyright and license information, please read the\n+ * GPL3-License.txt file that was distributed with this source code.\n+ */\n+\n+package org.kitodo.production.forms.dataeditor;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.faces.model.SelectItem;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.kitodo.api.dataeditor.rulesetmanagement.StructuralElementViewInterface;\n+import org.kitodo.api.dataformat.IncludedStructuralElement;\n+import org.kitodo.production.helper.Helper;\n+import org.kitodo.production.metadata.MetadataEditor;\n+import org.kitodo.production.services.ServiceManager;\n+\n+/**\n+ * Backing bean for the change doc struc type dialog of the metadata editor.\n+ */\n+public class ChangeDocStrucTypeDialog {\n+    private static final Logger logger = LogManager.getLogger(ChangeDocStrucTypeDialog.class);\n+\n+    private final DataEditorForm dataEditor;\n+    private final List<SelectItem> docStructEditTypeSelectionItems = new ArrayList<>();\n+    private String docStructEditTypeSelectionSelectedItem;\n+\n+    /**\n+     * Backing bean for the add doc struc type dialog of the metadata editor.\n+     *\n+     * @see \"WEB-INF/templates/includes/metadataEditor/dialogs/changeDocStrucType.xhtml\"\n+     */\n+    ChangeDocStrucTypeDialog(DataEditorForm dataEditor) {\n+        this.dataEditor = dataEditor;\n+    }\n+\n+    /**\n+     * Edit the doc struc.\n+     */\n+    public void editDocStruc() {\n+        IncludedStructuralElement selectedStructure = getTheCurrentlySelectedIncludedStructuralElement();\n+        selectedStructure.setType(docStructEditTypeSelectionSelectedItem);\n+        dataEditor.refreshStructurePanel();\n+    }\n+\n+    /**\n+     * Returns the selected item of the docStructEditTypeSelection drop-down\n+     * menu.\n+     *\n+     * @return the selected item of the docStructEditTypeSelection\n+     */\n+    public List<SelectItem> getDocStructEditTypeSelectionItems() {\n+        return docStructEditTypeSelectionItems;\n+    }\n+\n+    /**\n+     * Return selected doc struct type.\n+     *\n+     * @return selected doc struct type\n+     */\n+    public String getDocStructEditTypeSelectionSelectedItem() {\n+        return docStructEditTypeSelectionSelectedItem;\n+    }\n+\n+    /**\n+     * Sets the selected item of the docStructEditTypeSelection drop-down menu.\n+     *\n+     * @param docStructEditTypeSelectionSelectedItem\n+     *            selected item to set\n+     */\n+    public void setDocStructEditTypeSelectionSelectedItem(String docStructEditTypeSelectionSelectedItem) {\n+        this.docStructEditTypeSelectionSelectedItem = docStructEditTypeSelectionSelectedItem;\n+    }\n+\n+    /**\n+     * Prepare popup dialog by retrieving available doc struct types for\n+     * selected element.\n+     */\n+    public void prepare() {\n+        try {\n+            IncludedStructuralElement selectedStructure = getTheCurrentlySelectedIncludedStructuralElement();\n+            Map<String, String> possibleTypes = findAllTypesThisIncludedStructuralElementCanHave(selectedStructure);\n+            docStructEditTypeSelectionItems.clear();\n+            for (Entry<String, String> typeOption : possibleTypes.entrySet()) {\n+                docStructEditTypeSelectionItems.add(new SelectItem(typeOption.getKey(), typeOption.getValue()));\n+            }\n+            docStructEditTypeSelectionSelectedItem = selectedStructure.getType();\n+        } catch (IllegalStateException | IOException e) {\n+            Helper.setErrorMessage(e.getLocalizedMessage(), logger, e);\n+        }\n+    }\n+\n+    private IncludedStructuralElement getTheCurrentlySelectedIncludedStructuralElement() {\n+        if (dataEditor.getSelectedStructure().isPresent()) {\n+            return dataEditor.getSelectedStructure().get();\n+        } else {\n+            throw new IllegalStateException(\"could not retrieve selected structure\");\n+        }\n+    }\n+\n+    private Map<String, String> findAllTypesThisIncludedStructuralElementCanHave(", "originalCommit": "e61cc41538f7371a56d243e3f6df953ba8bf83f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc1b591014098d2cfa788bf1b18977e8cf807792", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\nindex ffbd2490e..351751d8c 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n\n@@ -149,7 +149,7 @@ public class ChangeDocStrucTypeDialog {\n         IncludedStructuralElement parentRootElement = ServiceManager.getMetsService().loadWorkpiece(parentMetadataUri)\n                 .getRootElement();\n         List<IncludedStructuralElement> parentHierarchyPath = MetadataEditor\n-                .determineIncludedStructuralElementPathToChildRecursive(parentRootElement,\n+                .determineIncludedStructuralElementPathToChild(parentRootElement,\n                     dataEditor.getProcess().getId());\n         if (parentHierarchyPath.isEmpty()) {\n             throw new IllegalStateException(\"proces is not linked in parent process\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkzODUxNw==", "url": "https://github.com/kitodo/kitodo-production/pull/3412#discussion_r407938517", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void onlyAllowTypesThatSupportAllGivenIncludedStructuralChildElements(\n          \n          \n            \n                private void restrictTypesToChildElements(", "author": "Kathrin-Huber", "createdAt": "2020-04-14T07:57:25Z", "path": "Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>\n+ *\n+ * This file is part of the Kitodo project.\n+ *\n+ * It is licensed under GNU General Public License version 3 or later.\n+ *\n+ * For the full copyright and license information, please read the\n+ * GPL3-License.txt file that was distributed with this source code.\n+ */\n+\n+package org.kitodo.production.forms.dataeditor;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.faces.model.SelectItem;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.kitodo.api.dataeditor.rulesetmanagement.StructuralElementViewInterface;\n+import org.kitodo.api.dataformat.IncludedStructuralElement;\n+import org.kitodo.production.helper.Helper;\n+import org.kitodo.production.metadata.MetadataEditor;\n+import org.kitodo.production.services.ServiceManager;\n+\n+/**\n+ * Backing bean for the change doc struc type dialog of the metadata editor.\n+ */\n+public class ChangeDocStrucTypeDialog {\n+    private static final Logger logger = LogManager.getLogger(ChangeDocStrucTypeDialog.class);\n+\n+    private final DataEditorForm dataEditor;\n+    private final List<SelectItem> docStructEditTypeSelectionItems = new ArrayList<>();\n+    private String docStructEditTypeSelectionSelectedItem;\n+\n+    /**\n+     * Backing bean for the add doc struc type dialog of the metadata editor.\n+     *\n+     * @see \"WEB-INF/templates/includes/metadataEditor/dialogs/changeDocStrucType.xhtml\"\n+     */\n+    ChangeDocStrucTypeDialog(DataEditorForm dataEditor) {\n+        this.dataEditor = dataEditor;\n+    }\n+\n+    /**\n+     * Edit the doc struc.\n+     */\n+    public void editDocStruc() {\n+        IncludedStructuralElement selectedStructure = getTheCurrentlySelectedIncludedStructuralElement();\n+        selectedStructure.setType(docStructEditTypeSelectionSelectedItem);\n+        dataEditor.refreshStructurePanel();\n+    }\n+\n+    /**\n+     * Returns the selected item of the docStructEditTypeSelection drop-down\n+     * menu.\n+     *\n+     * @return the selected item of the docStructEditTypeSelection\n+     */\n+    public List<SelectItem> getDocStructEditTypeSelectionItems() {\n+        return docStructEditTypeSelectionItems;\n+    }\n+\n+    /**\n+     * Return selected doc struct type.\n+     *\n+     * @return selected doc struct type\n+     */\n+    public String getDocStructEditTypeSelectionSelectedItem() {\n+        return docStructEditTypeSelectionSelectedItem;\n+    }\n+\n+    /**\n+     * Sets the selected item of the docStructEditTypeSelection drop-down menu.\n+     *\n+     * @param docStructEditTypeSelectionSelectedItem\n+     *            selected item to set\n+     */\n+    public void setDocStructEditTypeSelectionSelectedItem(String docStructEditTypeSelectionSelectedItem) {\n+        this.docStructEditTypeSelectionSelectedItem = docStructEditTypeSelectionSelectedItem;\n+    }\n+\n+    /**\n+     * Prepare popup dialog by retrieving available doc struct types for\n+     * selected element.\n+     */\n+    public void prepare() {\n+        try {\n+            IncludedStructuralElement selectedStructure = getTheCurrentlySelectedIncludedStructuralElement();\n+            Map<String, String> possibleTypes = findAllTypesThisIncludedStructuralElementCanHave(selectedStructure);\n+            docStructEditTypeSelectionItems.clear();\n+            for (Entry<String, String> typeOption : possibleTypes.entrySet()) {\n+                docStructEditTypeSelectionItems.add(new SelectItem(typeOption.getKey(), typeOption.getValue()));\n+            }\n+            docStructEditTypeSelectionSelectedItem = selectedStructure.getType();\n+        } catch (IllegalStateException | IOException e) {\n+            Helper.setErrorMessage(e.getLocalizedMessage(), logger, e);\n+        }\n+    }\n+\n+    private IncludedStructuralElement getTheCurrentlySelectedIncludedStructuralElement() {\n+        if (dataEditor.getSelectedStructure().isPresent()) {\n+            return dataEditor.getSelectedStructure().get();\n+        } else {\n+            throw new IllegalStateException(\"could not retrieve selected structure\");\n+        }\n+    }\n+\n+    private Map<String, String> findAllTypesThisIncludedStructuralElementCanHave(\n+            IncludedStructuralElement includedStructuralElement) throws IOException {\n+\n+        Map<String, String> possibleTypes = getAllowedChildTypesFromIncludedStructuralParentElement(\n+            includedStructuralElement);\n+        onlyAllowTypesThatSupportAllGivenIncludedStructuralChildElements(includedStructuralElement, possibleTypes);\n+        return possibleTypes;\n+    }\n+\n+    private Map<String, String> getAllowedChildTypesFromIncludedStructuralParentElement(\n+            IncludedStructuralElement includedStructuralElement) throws IOException {\n+\n+        IncludedStructuralElement rootElement = dataEditor.getWorkpiece().getRootElement();\n+        if (rootElement.equals(includedStructuralElement)) {\n+            if (Objects.isNull(dataEditor.getProcess().getParent())) {\n+                return dataEditor.getRuleset().getStructuralElements(dataEditor.getPriorityList());\n+            } else {\n+                return getAllowedChildTypesFromParentalProcess();\n+            }\n+        } else {\n+            LinkedList<IncludedStructuralElement> ancestors = MetadataEditor\n+                    .getAncestorsOfStructure(includedStructuralElement, rootElement);\n+            String parentType = ancestors.getLast().getType();\n+            return getAllowedSubstructuralElements(parentType);\n+        }\n+    }\n+\n+    private Map<String, String> getAllowedChildTypesFromParentalProcess() throws IOException {\n+        URI parentMetadataUri = ServiceManager.getProcessService()\n+                .getMetadataFileUri(dataEditor.getProcess().getParent());\n+        IncludedStructuralElement parentRootElement = ServiceManager.getMetsService().loadWorkpiece(parentMetadataUri)\n+                .getRootElement();\n+        List<IncludedStructuralElement> parentHierarchyPath = MetadataEditor\n+                .determineIncludedStructuralElementPathToChildRecursive(parentRootElement,\n+                    dataEditor.getProcess().getId());\n+        if (parentHierarchyPath.isEmpty()) {\n+            throw new IllegalStateException(\"proces is not linked in parent process\");\n+        }\n+        return getAllowedSubstructuralElements(\n+            ((LinkedList<IncludedStructuralElement>) parentHierarchyPath).getLast().getType());\n+    }\n+\n+    private Map<String, String> getAllowedSubstructuralElements(String parentType) {\n+        StructuralElementViewInterface parentView = dataEditor.getRuleset().getStructuralElementView(parentType,\n+            dataEditor.getAcquisitionStage(), dataEditor.getPriorityList());\n+        return parentView.getAllowedSubstructuralElements();\n+    }\n+\n+    private void onlyAllowTypesThatSupportAllGivenIncludedStructuralChildElements(", "originalCommit": "e61cc41538f7371a56d243e3f6df953ba8bf83f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc1b591014098d2cfa788bf1b18977e8cf807792", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\nindex ffbd2490e..351751d8c 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/forms/dataeditor/ChangeDocStrucTypeDialog.java\n\n@@ -149,7 +149,7 @@ public class ChangeDocStrucTypeDialog {\n         IncludedStructuralElement parentRootElement = ServiceManager.getMetsService().loadWorkpiece(parentMetadataUri)\n                 .getRootElement();\n         List<IncludedStructuralElement> parentHierarchyPath = MetadataEditor\n-                .determineIncludedStructuralElementPathToChildRecursive(parentRootElement,\n+                .determineIncludedStructuralElementPathToChild(parentRootElement,\n                     dataEditor.getProcess().getId());\n         if (parentHierarchyPath.isEmpty()) {\n             throw new IllegalStateException(\"proces is not linked in parent process\");\n"}}, {"oid": "42047eaa850c6c702f0ba1402861c5aecc5f047b", "url": "https://github.com/kitodo/kitodo-production/commit/42047eaa850c6c702f0ba1402861c5aecc5f047b", "message": "Declare global variable PF in Javascript", "committedDate": "2020-04-14T11:12:14Z", "type": "commit"}, {"oid": "bc1b591014098d2cfa788bf1b18977e8cf807792", "url": "https://github.com/kitodo/kitodo-production/commit/bc1b591014098d2cfa788bf1b18977e8cf807792", "message": "Removes the \"recursive\"", "committedDate": "2020-04-14T11:14:24Z", "type": "commit"}, {"oid": "5d9139c2de25647670b099f8753346ad8b428f75", "url": "https://github.com/kitodo/kitodo-production/commit/5d9139c2de25647670b099f8753346ad8b428f75", "message": "Apply suggested changes", "committedDate": "2020-04-14T11:21:40Z", "type": "commit"}, {"oid": "9838f0393b2873c1fbe099d7fd9b0d6217b4cb2d", "url": "https://github.com/kitodo/kitodo-production/commit/9838f0393b2873c1fbe099d7fd9b0d6217b4cb2d", "message": "Fix test", "committedDate": "2020-04-14T11:27:50Z", "type": "commit"}]}