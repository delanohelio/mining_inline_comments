{"pr_number": 3806, "pr_title": "Add columns for last processed task", "pr_createdAt": "2020-07-03T15:02:50Z", "pr_url": "https://github.com/kitodo/kitodo-production/pull/3806", "timeline": [{"oid": "842830b9a91f1fcba9b45e3cb9c5bb4de497298e", "url": "https://github.com/kitodo/kitodo-production/commit/842830b9a91f1fcba9b45e3cb9c5bb4de497298e", "message": "Add columns for last processed task", "committedDate": "2020-07-03T14:55:58Z", "type": "commit"}, {"oid": "305d6fb218ffa53d903089abd29a068b2b5859e5", "url": "https://github.com/kitodo/kitodo-production/commit/305d6fb218ffa53d903089abd29a068b2b5859e5", "message": "Fix typo", "committedDate": "2020-07-06T12:52:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NjQxOA==", "url": "https://github.com/kitodo/kitodo-production/pull/3806#discussion_r451396418", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String getLastUserProcessingStart(ProcessDTO processDTO) {\n          \n          \n            \n                public String getLastProcessingStart(ProcessDTO processDTO) {", "author": "Kathrin-Huber", "createdAt": "2020-07-08T09:07:35Z", "path": "Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java", "diffHunk": "@@ -2505,4 +2510,64 @@ private String createCommentTooltip(List<Comment> comments) {\n                         + \" (\" + Helper.getTranslation(\"fixed\") + \": \" + c.isCorrected() + \")\")\n                 .collect(Collectors.joining(NEW_LINE_ENTITY));\n     }\n+\n+    private TaskDTO getLastProcessedTask(ProcessDTO processDTO) {\n+        List<TaskDTO> tasks = getTasksInWork(processDTO);\n+        if (tasks.isEmpty()) {\n+            tasks = getCompletedTasks(processDTO);\n+        }\n+        tasks = tasks.stream().filter(t -> Objects.nonNull(t.getProcessingUser())).collect(Collectors.toList());\n+        if (tasks.isEmpty()) {\n+            return null;\n+        } else {\n+            tasks.sort(Comparator.comparing(TaskDTO::getProcessingBegin));\n+            return tasks.get(0);\n+        }\n+    }\n+\n+    /**\n+     * Return UserName of user that handled the last task of the given process (either the newest task INWORK or the\n+     * newest DONE task, if no task is INWORK). Return an empty String if no task is INWORK or DONE.\n+     *\n+     * @param processDTO Process\n+     * @return name of processing user\n+     */\n+    public String getUserHandlingLastTask(ProcessDTO processDTO) {\n+        TaskDTO lastTask = getLastProcessedTask(processDTO);\n+        if (Objects.isNull(lastTask)) {\n+            return \"\";\n+        } else {\n+            return lastTask.getProcessingUser().getFullName();\n+        }\n+    }\n+\n+    /**\n+     * Return processing begin of last processed task of given process.\n+     *\n+     * @param processDTO Process\n+     * @return processing begin of last processed task\n+     */\n+    public String getLastUserProcessingStart(ProcessDTO processDTO) {", "originalCommit": "305d6fb218ffa53d903089abd29a068b2b5859e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5172c11a99fca154a07c2113f509d20f75e167f5", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java b/Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java\nindex 0880b6997..c0cdadff8 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java\n\n@@ -2547,7 +2547,7 @@ public class ProcessService extends ProjectSearchService<Process, ProcessDTO, Pr\n      * @param processDTO Process\n      * @return processing begin of last processed task\n      */\n-    public String getLastUserProcessingStart(ProcessDTO processDTO) {\n+    public String getLastProcessingStart(ProcessDTO processDTO) {\n         TaskDTO lastTask = getLastProcessedTask(processDTO);\n         if (Objects.isNull(lastTask)) {\n             return \"\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NjUzNg==", "url": "https://github.com/kitodo/kitodo-production/pull/3806#discussion_r451396536", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String getLastUserProcessingEnd(ProcessDTO processDTO) {\n          \n          \n            \n                public String getLastProcessingEnd(ProcessDTO processDTO) {", "author": "Kathrin-Huber", "createdAt": "2020-07-08T09:07:48Z", "path": "Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java", "diffHunk": "@@ -2505,4 +2510,64 @@ private String createCommentTooltip(List<Comment> comments) {\n                         + \" (\" + Helper.getTranslation(\"fixed\") + \": \" + c.isCorrected() + \")\")\n                 .collect(Collectors.joining(NEW_LINE_ENTITY));\n     }\n+\n+    private TaskDTO getLastProcessedTask(ProcessDTO processDTO) {\n+        List<TaskDTO> tasks = getTasksInWork(processDTO);\n+        if (tasks.isEmpty()) {\n+            tasks = getCompletedTasks(processDTO);\n+        }\n+        tasks = tasks.stream().filter(t -> Objects.nonNull(t.getProcessingUser())).collect(Collectors.toList());\n+        if (tasks.isEmpty()) {\n+            return null;\n+        } else {\n+            tasks.sort(Comparator.comparing(TaskDTO::getProcessingBegin));\n+            return tasks.get(0);\n+        }\n+    }\n+\n+    /**\n+     * Return UserName of user that handled the last task of the given process (either the newest task INWORK or the\n+     * newest DONE task, if no task is INWORK). Return an empty String if no task is INWORK or DONE.\n+     *\n+     * @param processDTO Process\n+     * @return name of processing user\n+     */\n+    public String getUserHandlingLastTask(ProcessDTO processDTO) {\n+        TaskDTO lastTask = getLastProcessedTask(processDTO);\n+        if (Objects.isNull(lastTask)) {\n+            return \"\";\n+        } else {\n+            return lastTask.getProcessingUser().getFullName();\n+        }\n+    }\n+\n+    /**\n+     * Return processing begin of last processed task of given process.\n+     *\n+     * @param processDTO Process\n+     * @return processing begin of last processed task\n+     */\n+    public String getLastUserProcessingStart(ProcessDTO processDTO) {\n+        TaskDTO lastTask = getLastProcessedTask(processDTO);\n+        if (Objects.isNull(lastTask)) {\n+            return \"\";\n+        } else {\n+            return lastTask.getProcessingBegin();\n+        }\n+    }\n+\n+    /**\n+     * Return processing end of last processed task of given process.\n+     *\n+     * @param processDTO Process\n+     * @return processing end of last processed task\n+     */\n+    public String getLastUserProcessingEnd(ProcessDTO processDTO) {", "originalCommit": "305d6fb218ffa53d903089abd29a068b2b5859e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5172c11a99fca154a07c2113f509d20f75e167f5", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java b/Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java\nindex 0880b6997..c0cdadff8 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java\n\n@@ -2547,7 +2547,7 @@ public class ProcessService extends ProjectSearchService<Process, ProcessDTO, Pr\n      * @param processDTO Process\n      * @return processing begin of last processed task\n      */\n-    public String getLastUserProcessingStart(ProcessDTO processDTO) {\n+    public String getLastProcessingStart(ProcessDTO processDTO) {\n         TaskDTO lastTask = getLastProcessedTask(processDTO);\n         if (Objects.isNull(lastTask)) {\n             return \"\";\n"}}, {"oid": "5172c11a99fca154a07c2113f509d20f75e167f5", "url": "https://github.com/kitodo/kitodo-production/commit/5172c11a99fca154a07c2113f509d20f75e167f5", "message": "Rename methods", "committedDate": "2020-07-08T12:05:11Z", "type": "commit"}]}