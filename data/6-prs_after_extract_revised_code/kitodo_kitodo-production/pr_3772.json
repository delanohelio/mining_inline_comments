{"pr_number": 3772, "pr_title": "Check project on url", "pr_createdAt": "2020-06-18T12:09:22Z", "pr_url": "https://github.com/kitodo/kitodo-production/pull/3772", "timeline": [{"oid": "128bc4d3f40a0a46c6cb96b3734f60356350614b", "url": "https://github.com/kitodo/kitodo-production/commit/128bc4d3f40a0a46c6cb96b3734f60356350614b", "message": "fix id retrival", "committedDate": "2020-06-24T09:11:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0MDUyMw==", "url": "https://github.com/kitodo/kitodo-production/pull/3772#discussion_r444840523", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *            the specific processId\n          \n          \n            \n                 *            the specific projectId", "author": "solth", "createdAt": "2020-06-24T11:55:47Z", "path": "Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java", "diffHunk": "@@ -339,6 +363,18 @@ public boolean hasAuthorityToEditProject() {\n         return hasAuthorityForClient(\"editProject\");\n     }\n \n+\n+    /**\n+     * Check if the current user has the authority to edit the project.\n+     *\n+     * @param projectId\n+     *            the specific processId", "originalCommit": "128bc4d3f40a0a46c6cb96b3734f60356350614b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d84cbfea6d8e4d793a9190858216908ef20c1c7", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java b/Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java\nindex c61c9e3e4..b95e23124 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java\n\n@@ -368,7 +368,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * Check if the current user has the authority to edit the project.\n      *\n      * @param projectId\n-     *            the specific processId\n+     *            the specific projectId\n      * @return true if the current user has the authority to edit the project\n      */\n     public boolean hasAuthorityToEditProject(int projectId) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0MDkxMQ==", "url": "https://github.com/kitodo/kitodo-production/pull/3772#discussion_r444840911", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *            the specific processId\n          \n          \n            \n                 *            the specific projectId", "author": "solth", "createdAt": "2020-06-24T11:56:36Z", "path": "Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java", "diffHunk": "@@ -449,6 +497,18 @@ public boolean hasAuthorityToViewProject() {\n         return hasAnyAuthorityForClient(\"viewProject, addProject, editProject\");\n     }\n \n+    /**\n+     * Check if the current user has the authority to view the project. Add and edit\n+     * authorities include also view.\n+     *\n+     * @param projectId\n+     *            the specific processId", "originalCommit": "128bc4d3f40a0a46c6cb96b3734f60356350614b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d84cbfea6d8e4d793a9190858216908ef20c1c7", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java b/Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java\nindex c61c9e3e4..b95e23124 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/services/security/SecurityAccessService.java\n\n@@ -502,7 +502,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * authorities include also view.\n      *\n      * @param projectId\n-     *            the specific processId\n+     *            the specific projectId\n      * @return true if the current user has the authority to view the project\n      */\n     public boolean hasAuthorityToViewProject(int projectId) {\n"}}, {"oid": "7c0b66d669122e06018f7b7a65401385ba70c43c", "url": "https://github.com/kitodo/kitodo-production/commit/7c0b66d669122e06018f7b7a65401385ba70c43c", "message": "fix id retrival", "committedDate": "2020-06-24T13:19:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2Nzk1OQ==", "url": "https://github.com/kitodo/kitodo-production/pull/3772#discussion_r445367959", "bodyText": "Instead of adding a new constant that basically just adds the .jsf suffix to the value of DEFAULT_LINK in the prior line, it would be less redundant to just add that suffix to the existing constant and reuse it. DEFAULT_LINK is currently only used for the referrer URL parameter in some places, and for that purpose desktop.jsf works as well as just desktop.", "author": "solth", "createdAt": "2020-06-25T07:44:12Z", "path": "Kitodo/src/main/java/org/kitodo/production/forms/BaseForm.java", "diffHunk": "@@ -62,6 +62,7 @@\n \n     protected static final String REDIRECT_PATH = TEMPLATE_ROOT + \"{0}?\" + REDIRECT_PARAMETER;\n     protected static final String DEFAULT_LINK = \"desktop\";\n+    protected static final String DESKTOP_LINK = \"desktop.jsf\";", "originalCommit": "9d0568457a4a9119ab57b1a4aa4025dd91f235f9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f6c17c00b1a520ac75ab9de07741bd4d459d3156", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/forms/BaseForm.java b/Kitodo/src/main/java/org/kitodo/production/forms/BaseForm.java\nindex dc5fe74ca..0c623a983 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/forms/BaseForm.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/forms/BaseForm.java\n\n@@ -62,11 +65,41 @@ public class BaseForm implements Serializable {\n \n     protected static final String REDIRECT_PATH = TEMPLATE_ROOT + \"{0}?\" + REDIRECT_PARAMETER;\n     protected static final String DEFAULT_LINK = \"desktop\";\n-    protected static final String DESKTOP_LINK = \"desktop.jsf\";\n+    private static final String LIST_PAGE = TEMPLATE_ROOT + \"{0}?keepPagination=true&\" + REDIRECT_PARAMETER;\n+    protected final String usersPage = MessageFormat.format(LIST_PAGE, \"users\");\n+    protected final String processesPage = MessageFormat.format(LIST_PAGE, \"processes\");\n+    protected final String projectsPage = MessageFormat.format(LIST_PAGE, \"projects\");\n+    protected final String tasksPage = MessageFormat.format(LIST_PAGE, \"tasks\");\n \n     protected List<SelectItem> columns;\n     protected List<ListColumn> selectedColumns;\n \n+    protected int firstRow;\n+\n+    /**\n+     * Get first row to show in datatable.\n+     * @return first\n+     */\n+    public int getFirstRow() {\n+        return this.firstRow;\n+    }\n+\n+    /**\n+     * Set first row to show in datatable.\n+     * @param firstRow first row to show in datatable\n+     */\n+    public void setFirstRow(int firstRow) {\n+        this.firstRow = firstRow;\n+    }\n+\n+    /**\n+     * Update first row to show in datatable on PageEvent.\n+     * @param pageEvent PageEvent triggered by data tables paginator\n+     */\n+    public void onPageChange(PageEvent pageEvent) {\n+        this.setFirstRow(((DataTable) pageEvent.getSource()).getFirst());\n+    }\n+\n     /**\n      * Getter: return lazyDTOModel.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3MDMyNw==", "url": "https://github.com/kitodo/kitodo-production/pull/3772#discussion_r445370327", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(), id },\n          \n          \n            \n                        Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.TASK.getTranslationSingular(), id },", "author": "solth", "createdAt": "2020-06-25T07:48:37Z", "path": "Kitodo/src/main/java/org/kitodo/production/forms/ProcessForm.java", "diffHunk": "@@ -1229,6 +1242,16 @@ public void load(int id) {\n      * Method being used as viewAction for task form.\n      */\n     public void loadTask(int id) {\n+        SecurityAccessController securityAccessController = new SecurityAccessController();\n+        try {\n+            if (!securityAccessController.hasAuthorityToEditTask(id)) {\n+                ExternalContext context = FacesContext.getCurrentInstance().getExternalContext();\n+                context.redirect(DESKTOP_LINK);\n+            }\n+        } catch (IOException | DataException e) {\n+            Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(), id },", "originalCommit": "9d0568457a4a9119ab57b1a4aa4025dd91f235f9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f6c17c00b1a520ac75ab9de07741bd4d459d3156", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/forms/ProcessForm.java b/Kitodo/src/main/java/org/kitodo/production/forms/ProcessForm.java\nindex 353345025..d9c296b0d 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/forms/ProcessForm.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/forms/ProcessForm.java\n\n@@ -1242,16 +1228,6 @@ public class ProcessForm extends TemplateBaseForm {\n      * Method being used as viewAction for task form.\n      */\n     public void loadTask(int id) {\n-        SecurityAccessController securityAccessController = new SecurityAccessController();\n-        try {\n-            if (!securityAccessController.hasAuthorityToEditTask(id)) {\n-                ExternalContext context = FacesContext.getCurrentInstance().getExternalContext();\n-                context.redirect(DESKTOP_LINK);\n-            }\n-        } catch (IOException | DataException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(), id },\n-                    logger, e);\n-        }\n         try {\n             if (id != 0) {\n                 setTask(ServiceManager.getTaskService().getById(id));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3MDk1Nw==", "url": "https://github.com/kitodo/kitodo-production/pull/3772#discussion_r445370957", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(), id },\n          \n          \n            \n                        Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROJECT.getTranslationSingular(), id },", "author": "solth", "createdAt": "2020-06-25T07:49:47Z", "path": "Kitodo/src/main/java/org/kitodo/production/forms/ProjectForm.java", "diffHunk": "@@ -599,6 +602,16 @@ public void setPreview(String preview) {\n      *            ID of the ruleset to load\n      */\n     public void loadProject(int id) {\n+        SecurityAccessController securityAccessController = new SecurityAccessController();\n+        try {\n+            if (!securityAccessController.hasAuthorityToEditProject(id)) {\n+                ExternalContext context = FacesContext.getCurrentInstance().getExternalContext();\n+                context.redirect(DESKTOP_LINK);\n+            }\n+        } catch (IOException e) {\n+            Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(), id },", "originalCommit": "9d0568457a4a9119ab57b1a4aa4025dd91f235f9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f6c17c00b1a520ac75ab9de07741bd4d459d3156", "chunk": "diff --git a/Kitodo/src/main/java/org/kitodo/production/forms/ProjectForm.java b/Kitodo/src/main/java/org/kitodo/production/forms/ProjectForm.java\nindex 1c421b400..b5113c1f2 100644\n--- a/Kitodo/src/main/java/org/kitodo/production/forms/ProjectForm.java\n+++ b/Kitodo/src/main/java/org/kitodo/production/forms/ProjectForm.java\n\n@@ -602,16 +598,6 @@ public class ProjectForm extends BaseForm {\n      *            ID of the ruleset to load\n      */\n     public void loadProject(int id) {\n-        SecurityAccessController securityAccessController = new SecurityAccessController();\n-        try {\n-            if (!securityAccessController.hasAuthorityToEditProject(id)) {\n-                ExternalContext context = FacesContext.getCurrentInstance().getExternalContext();\n-                context.redirect(DESKTOP_LINK);\n-            }\n-        } catch (IOException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(), id },\n-                    logger, e);\n-        }\n         try {\n             if (!Objects.equals(id, 0)) {\n                 setProject(ServiceManager.getProjectService().getById(id));\n"}}, {"oid": "f6c17c00b1a520ac75ab9de07741bd4d459d3156", "url": "https://github.com/kitodo/kitodo-production/commit/f6c17c00b1a520ac75ab9de07741bd4d459d3156", "message": "check project assignment on url", "committedDate": "2020-06-30T12:39:21Z", "type": "commit"}, {"oid": "a33e9ae59f85d3c11c36294aad9d50a123df68c0", "url": "https://github.com/kitodo/kitodo-production/commit/a33e9ae59f85d3c11c36294aad9d50a123df68c0", "message": "fix id retrival", "committedDate": "2020-06-30T12:40:12Z", "type": "commit"}, {"oid": "8d84cbfea6d8e4d793a9190858216908ef20c1c7", "url": "https://github.com/kitodo/kitodo-production/commit/8d84cbfea6d8e4d793a9190858216908ef20c1c7", "message": "Apply suggestions from code review\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>", "committedDate": "2020-06-30T12:40:12Z", "type": "commit"}, {"oid": "6e897b3ca9c925d89e8c67489d0432cded48fcc2", "url": "https://github.com/kitodo/kitodo-production/commit/6e897b3ca9c925d89e8c67489d0432cded48fcc2", "message": "apply code review", "committedDate": "2020-06-30T12:41:00Z", "type": "commit"}, {"oid": "c26a36306d1c929725a7078414fd08b840cdce22", "url": "https://github.com/kitodo/kitodo-production/commit/c26a36306d1c929725a7078414fd08b840cdce22", "message": "check for new process!", "committedDate": "2020-06-30T12:41:00Z", "type": "commit"}, {"oid": "c714295087e2064c572d28798f993cda1d9ba50d", "url": "https://github.com/kitodo/kitodo-production/commit/c714295087e2064c572d28798f993cda1d9ba50d", "message": "fix codacy", "committedDate": "2020-06-30T12:41:00Z", "type": "commit"}, {"oid": "c714295087e2064c572d28798f993cda1d9ba50d", "url": "https://github.com/kitodo/kitodo-production/commit/c714295087e2064c572d28798f993cda1d9ba50d", "message": "fix codacy", "committedDate": "2020-06-30T12:41:00Z", "type": "forcePushed"}]}