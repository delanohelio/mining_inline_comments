{"pr_number": 4157, "pr_title": "Fix introspecting external @Entity classes", "pr_createdAt": "2020-09-23T15:00:10Z", "pr_url": "https://github.com/micronaut-projects/micronaut-core/pull/4157", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2NjU1MA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4157#discussion_r493666550", "bodyText": "Not related, somehow I would get UncheckedIOException a lot during Gradle invocation", "author": "dstepanov", "createdAt": "2020-09-23T15:02:17Z", "path": "core/src/main/java/io/micronaut/core/io/service/SoftServiceLoader.java", "diffHunk": "@@ -197,23 +198,20 @@ public boolean hasNext() {\n                     return false;\n                 }\n                 URL url = serviceConfigs.nextElement();\n-                try {\n-                    try (BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))) {\n-                        List<String> lines = reader.lines()\n-                            .filter(line -> line.length() != 0 && line.charAt(0) != '#')\n-                            .filter(condition)\n-                            .map(line -> {\n-                                int i = line.indexOf('#');\n-                                if (i > -1) {\n-                                    line = line.substring(0, i);\n-                                }\n-                                return line;\n-                            })\n-                            .collect(Collectors.toList());\n-                        unprocessed = lines.iterator();\n-\n-                    }\n-                } catch (IOException e) {\n+                try (BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))) {\n+                    List<String> lines = reader.lines()\n+                        .filter(line -> line.length() != 0 && line.charAt(0) != '#')\n+                        .filter(condition)\n+                        .map(line -> {\n+                            int i = line.indexOf('#');\n+                            if (i > -1) {\n+                                line = line.substring(0, i);\n+                            }\n+                            return line;\n+                        })\n+                        .collect(Collectors.toList());\n+                    unprocessed = lines.iterator();\n+                } catch (IOException | UncheckedIOException e) {", "originalCommit": "5e44c11e9956fa0358b9fc5872d0126289b0b71d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b505f0a28c16f9e604722b2c4d75c7ff59fef5b7", "chunk": "diff --git a/core/src/main/java/io/micronaut/core/io/service/SoftServiceLoader.java b/core/src/main/java/io/micronaut/core/io/service/SoftServiceLoader.java\nindex 3766308c1..df794b5d1 100644\n--- a/core/src/main/java/io/micronaut/core/io/service/SoftServiceLoader.java\n+++ b/core/src/main/java/io/micronaut/core/io/service/SoftServiceLoader.java\n\n@@ -198,19 +198,22 @@ public final class SoftServiceLoader<S> implements Iterable<ServiceDefinition<S>\n                     return false;\n                 }\n                 URL url = serviceConfigs.nextElement();\n-                try (BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))) {\n-                    List<String> lines = reader.lines()\n-                        .filter(line -> line.length() != 0 && line.charAt(0) != '#')\n-                        .filter(condition)\n-                        .map(line -> {\n-                            int i = line.indexOf('#');\n-                            if (i > -1) {\n-                                line = line.substring(0, i);\n-                            }\n-                            return line;\n-                        })\n-                        .collect(Collectors.toList());\n-                    unprocessed = lines.iterator();\n+                try {\n+                    try (BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))) {\n+                        List<String> lines = reader.lines()\n+                            .filter(line -> line.length() != 0 && line.charAt(0) != '#')\n+                            .filter(condition)\n+                            .map(line -> {\n+                                int i = line.indexOf('#');\n+                                if (i > -1) {\n+                                    line = line.substring(0, i);\n+                                }\n+                                return line;\n+                            })\n+                            .collect(Collectors.toList());\n+                        unprocessed = lines.iterator();\n+\n+                    }\n                 } catch (IOException | UncheckedIOException e) {\n                     // ignore, can't do anything here and can't log because class used in compiler\n                 }\n"}}, {"oid": "8f38aa874d4814132a91dbeff3750b6592beb429", "url": "https://github.com/micronaut-projects/micronaut-core/commit/8f38aa874d4814132a91dbeff3750b6592beb429", "message": "Fix introspecting external @Entity classes", "committedDate": "2020-09-29T16:08:46Z", "type": "forcePushed"}, {"oid": "1ae139222a36dfc4f28b517758b3e1bc5c92d01f", "url": "https://github.com/micronaut-projects/micronaut-core/commit/1ae139222a36dfc4f28b517758b3e1bc5c92d01f", "message": "Fix introspecting external @Entity classes", "committedDate": "2020-09-29T16:38:34Z", "type": "forcePushed"}, {"oid": "be8985a9385ca5b273b0f57675ad31d59d58f1d2", "url": "https://github.com/micronaut-projects/micronaut-core/commit/be8985a9385ca5b273b0f57675ad31d59d58f1d2", "message": "Fix introspecting external @Entity classes", "committedDate": "2020-11-03T22:09:18Z", "type": "forcePushed"}, {"oid": "b505f0a28c16f9e604722b2c4d75c7ff59fef5b7", "url": "https://github.com/micronaut-projects/micronaut-core/commit/b505f0a28c16f9e604722b2c4d75c7ff59fef5b7", "message": "Fix introspecting external @Entity classes", "committedDate": "2020-11-11T10:20:28Z", "type": "commit"}, {"oid": "b505f0a28c16f9e604722b2c4d75c7ff59fef5b7", "url": "https://github.com/micronaut-projects/micronaut-core/commit/b505f0a28c16f9e604722b2c4d75c7ff59fef5b7", "message": "Fix introspecting external @Entity classes", "committedDate": "2020-11-11T10:20:28Z", "type": "forcePushed"}]}