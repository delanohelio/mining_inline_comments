{"pr_number": 4319, "pr_title": "Issue 3582 configure Netty shutdown quiet period and shutdown timeout", "pr_createdAt": "2020-10-14T18:57:17Z", "pr_url": "https://github.com/micronaut-projects/micronaut-core/pull/4319", "timeline": [{"oid": "2232221e9caa08a6a211ad7fcd7c6918b6bf335c", "url": "https://github.com/micronaut-projects/micronaut-core/commit/2232221e9caa08a6a211ad7fcd7c6918b6bf335c", "message": "Issue 3582 - adding feature to configure the shutdown quiet period and shutdown timeout for Netty event loop groups and http server", "committedDate": "2020-10-14T18:53:29Z", "type": "commit"}, {"oid": "7f3480ee92d5e9839c407a0277e06e40952017a3", "url": "https://github.com/micronaut-projects/micronaut-core/commit/7f3480ee92d5e9839c407a0277e06e40952017a3", "message": "Issue 3582 - adding feature to configure the shutdown quiet period and shutdown timeout for Netty event loop groups and http server", "committedDate": "2020-10-14T19:37:20Z", "type": "commit"}, {"oid": "adc415acf0a2bebdaf9e4c78e18aaa867936b4f0", "url": "https://github.com/micronaut-projects/micronaut-core/commit/adc415acf0a2bebdaf9e4c78e18aaa867936b4f0", "message": "Issue 3582\n- adding feature to configure the shutdown quiet period and shutdown timeouts\n- adding overloaded versions of HttpClient create; RxStreamingHttpClient create; and RxHttpClientFactory createClient and createStreamingClient to accept a HttpClientConfiguration instance, for cases where the client is created outside the Micronaut application context", "committedDate": "2020-10-19T19:14:40Z", "type": "commit"}, {"oid": "f90794625adfd12b27683fe9cff4b4f7114c7dae", "url": "https://github.com/micronaut-projects/micronaut-core/commit/f90794625adfd12b27683fe9cff4b4f7114c7dae", "message": "Issue 3582\n- adding feature to configure the shutdown quiet period and shutdown timeouts\n- adding overloaded versions of HttpClient create; RxStreamingHttpClient create; and RxHttpClientFactory createClient and createStreamingClient to accept a HttpClientConfiguration instance, for cases where the client is created outside the Micronaut application context", "committedDate": "2020-10-19T20:36:59Z", "type": "commit"}, {"oid": "437b5af7f50d7cafda7bba98411236ca9f759e6d", "url": "https://github.com/micronaut-projects/micronaut-core/commit/437b5af7f50d7cafda7bba98411236ca9f759e6d", "message": "Issue 3582\n- revise section 6.27.1 of the documentaion to add clarification about Netty server configuration\n- add deprecation warning in NettyHttpServer about preferring Netty event loop groups configurations", "committedDate": "2020-10-20T15:23:23Z", "type": "commit"}, {"oid": "35de798ad95bad665b57cd047106da5e491df392", "url": "https://github.com/micronaut-projects/micronaut-core/commit/35de798ad95bad665b57cd047106da5e491df392", "message": "Update threadPools.adoc", "committedDate": "2020-10-23T20:49:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NTcxMA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511145710", "bodyText": "This should be surrounded with if (LOGGER.isWarnEnabled())", "author": "jameskleeh", "createdAt": "2020-10-23T20:41:44Z", "path": "http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java", "diffHunk": "@@ -56,29 +66,49 @@ public DefaultEventLoopGroupRegistry(EventLoopGroupFactory eventLoopGroupFactory\n         this.beanLocator = beanLocator;\n     }\n \n+    /**\n+     * Shut down event loop groups according to configuration.\n+     */\n+    @PreDestroy\n+    void shutdown() {\n+        eventLoopGroups.forEach((eventLoopGroup, configuration) -> {\n+            try {\n+                long quietPeriod = configuration.getShutdownQuietPeriod().toMillis();\n+                long timeout = configuration.getShutdownTimeout().toMillis();\n+                eventLoopGroup.shutdownGracefully(quietPeriod, timeout, TimeUnit.MILLISECONDS);\n+            } catch (Throwable t) {\n+                LOGGER.warn(\"Error shutting down EventLoopGroup: {}\", t.getMessage(), t);", "originalCommit": "437b5af7f50d7cafda7bba98411236ca9f759e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75888f7a2a0c535a3707e97db58d88788e9dc53e", "chunk": "diff --git a/http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java b/http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java\nindex 9a086be96..14804e080 100644\n--- a/http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java\n+++ b/http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java\n\n@@ -77,7 +77,9 @@ public class DefaultEventLoopGroupRegistry implements EventLoopGroupRegistry {\n                 long timeout = configuration.getShutdownTimeout().toMillis();\n                 eventLoopGroup.shutdownGracefully(quietPeriod, timeout, TimeUnit.MILLISECONDS);\n             } catch (Throwable t) {\n-                LOGGER.warn(\"Error shutting down EventLoopGroup: {}\", t.getMessage(), t);\n+                if (LOG.isWarnEnabled()) {\n+                    LOG.warn(\"Error shutting down EventLoopGroup: {}\", t.getMessage(), t);\n+                }\n             }\n         });\n         eventLoopGroups.clear();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NTg1NQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511145855", "bodyText": "LOG here is generally preferred over LOGGER", "author": "jameskleeh", "createdAt": "2020-10-23T20:42:04Z", "path": "http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java", "diffHunk": "@@ -42,9 +48,13 @@\n @Internal\n @BootstrapContextCompatible\n public class DefaultEventLoopGroupRegistry implements EventLoopGroupRegistry {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEventLoopGroupRegistry.class);", "originalCommit": "437b5af7f50d7cafda7bba98411236ca9f759e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75888f7a2a0c535a3707e97db58d88788e9dc53e", "chunk": "diff --git a/http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java b/http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java\nindex 9a086be96..14804e080 100644\n--- a/http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java\n+++ b/http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java\n\n@@ -48,7 +48,7 @@ import java.util.concurrent.TimeUnit;\n @Internal\n @BootstrapContextCompatible\n public class DefaultEventLoopGroupRegistry implements EventLoopGroupRegistry {\n-    private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEventLoopGroupRegistry.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultEventLoopGroupRegistry.class);\n \n     private final EventLoopGroupFactory eventLoopGroupFactory;\n     private final BeanLocator beanLocator;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjA3MQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146071", "bodyText": "Please add @SInCE 2.2.0 here", "author": "jameskleeh", "createdAt": "2020-10-23T20:42:35Z", "path": "http-client-core/src/main/java/io/micronaut/http/client/RxStreamingHttpClient.java", "diffHunk": "@@ -59,4 +59,16 @@\n     static RxStreamingHttpClient create(URL url) {\n         return HttpClientConfiguration.createStreamingClient(url);\n     }\n+\n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration The client configuration\n+     * @return The client\n+     */\n+    static RxStreamingHttpClient create(URL url, HttpClientConfiguration configuration) {", "originalCommit": "437b5af7f50d7cafda7bba98411236ca9f759e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75888f7a2a0c535a3707e97db58d88788e9dc53e", "chunk": "diff --git a/http-client-core/src/main/java/io/micronaut/http/client/RxStreamingHttpClient.java b/http-client-core/src/main/java/io/micronaut/http/client/RxStreamingHttpClient.java\nindex 7da1a4ab6..07d40e366 100644\n--- a/http-client-core/src/main/java/io/micronaut/http/client/RxStreamingHttpClient.java\n+++ b/http-client-core/src/main/java/io/micronaut/http/client/RxStreamingHttpClient.java\n\n@@ -67,6 +67,7 @@ public interface RxStreamingHttpClient extends StreamingHttpClient, RxHttpClient\n      * @param url The base URL\n      * @param configuration The client configuration\n      * @return The client\n+     * @since 2.2.0\n      */\n     static RxStreamingHttpClient create(URL url, HttpClientConfiguration configuration) {\n         return HttpClientConfiguration.createStreamingClient(url, configuration);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjExOQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146119", "bodyText": "Please add @SInCE 2.2.0 here", "author": "jameskleeh", "createdAt": "2020-10-23T20:42:41Z", "path": "http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java", "diffHunk": "@@ -43,4 +53,14 @@\n      * @return The client\n      */\n     RxStreamingHttpClient createStreamingClient(@Nullable URL url);\n+\n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration The client configuration\n+     * @return The client\n+     */\n+    RxStreamingHttpClient createStreamingClient(@Nullable URL url, HttpClientConfiguration configuration);", "originalCommit": "437b5af7f50d7cafda7bba98411236ca9f759e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75888f7a2a0c535a3707e97db58d88788e9dc53e", "chunk": "diff --git a/http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java b/http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java\nindex 1c422058f..c63084a4e 100644\n--- a/http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java\n+++ b/http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java\n\n@@ -61,6 +62,7 @@ public interface RxHttpClientFactory {\n      * @param url The base URL\n      * @param configuration The client configuration\n      * @return The client\n+     * @since 2.2.0\n      */\n     RxStreamingHttpClient createStreamingClient(@Nullable URL url, HttpClientConfiguration configuration);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjE0MA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146140", "bodyText": "Please add @SInCE 2.2.0 here", "author": "jameskleeh", "createdAt": "2020-10-23T20:42:44Z", "path": "http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java", "diffHunk": "@@ -35,6 +35,16 @@\n      */\n     RxHttpClient createClient(@Nullable URL url);\n \n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration the client configuration\n+     * @return The client\n+     */\n+    RxHttpClient createClient(@Nullable URL url, HttpClientConfiguration configuration);", "originalCommit": "437b5af7f50d7cafda7bba98411236ca9f759e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75888f7a2a0c535a3707e97db58d88788e9dc53e", "chunk": "diff --git a/http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java b/http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java\nindex 1c422058f..c63084a4e 100644\n--- a/http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java\n+++ b/http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java\n\n@@ -42,6 +42,7 @@ public interface RxHttpClientFactory {\n      * @param url The base URL\n      * @param configuration the client configuration\n      * @return The client\n+     * @since 2.2.0\n      */\n     RxHttpClient createClient(@Nullable URL url, HttpClientConfiguration configuration);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjE4OQ==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146189", "bodyText": "Please add @SInCE 2.2.0 here", "author": "jameskleeh", "createdAt": "2020-10-23T20:42:51Z", "path": "http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java", "diffHunk": "@@ -609,6 +649,26 @@ static RxHttpClient createClient(@Nullable URL url) {\n     @Internal\n     static RxStreamingHttpClient createStreamingClient(@NonNull URL url) {\n         ArgumentUtils.requireNonNull(\"url\", url);\n+        RxHttpClientFactory clientFactory = getRxHttpClientFactory();\n+        return clientFactory.createStreamingClient(url);\n+    }\n+\n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration The client configuration\n+     * @return The client\n+     */\n+    @Internal\n+    static RxStreamingHttpClient createStreamingClient(@NonNull URL url, HttpClientConfiguration configuration) {", "originalCommit": "437b5af7f50d7cafda7bba98411236ca9f759e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75888f7a2a0c535a3707e97db58d88788e9dc53e", "chunk": "diff --git a/http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java b/http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java\nindex 5f9e13c2d..677e65087 100644\n--- a/http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java\n+++ b/http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java\n\n@@ -660,6 +661,7 @@ public abstract class HttpClientConfiguration {\n      * @param url The base URL\n      * @param configuration The client configuration\n      * @return The client\n+     * @since 2.2.0\n      */\n     @Internal\n     static RxStreamingHttpClient createStreamingClient(@NonNull URL url, HttpClientConfiguration configuration) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjIyOA==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146228", "bodyText": "Please add @SInCE 2.2.0 here", "author": "jameskleeh", "createdAt": "2020-10-23T20:42:57Z", "path": "http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java", "diffHunk": "@@ -586,19 +619,26 @@ public Proxy resolveProxy(boolean isSsl, String host, int port) {\n      */\n     @Internal\n     static RxHttpClient createClient(@Nullable URL url) {\n-        RxHttpClientFactory clientFactory = HttpClientConfiguration.clientFactory;\n-        if (clientFactory == null) {\n-            synchronized (HttpClientConfiguration.class) { // double check\n-                clientFactory = HttpClientConfiguration.clientFactory;\n-                if (clientFactory == null) {\n-                    clientFactory = resolveClientFactory();\n-                    HttpClientConfiguration.clientFactory = clientFactory;\n-                }\n-            }\n-        }\n+        RxHttpClientFactory clientFactory = getRxHttpClientFactory();\n+\n         return clientFactory.createClient(url);\n     }\n \n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration the client configuration\n+     * @return The client\n+     */\n+    @Internal\n+    static RxHttpClient createClient(@Nullable URL url, HttpClientConfiguration configuration) {", "originalCommit": "437b5af7f50d7cafda7bba98411236ca9f759e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75888f7a2a0c535a3707e97db58d88788e9dc53e", "chunk": "diff --git a/http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java b/http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java\nindex 5f9e13c2d..677e65087 100644\n--- a/http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java\n+++ b/http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java\n\n@@ -631,6 +631,7 @@ public abstract class HttpClientConfiguration {\n      * @param url The base URL\n      * @param configuration the client configuration\n      * @return The client\n+     * @since 2.2.0\n      */\n     @Internal\n     static RxHttpClient createClient(@Nullable URL url, HttpClientConfiguration configuration) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjMwNw==", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146307", "bodyText": "Please add @SInCE 2.2.0 here", "author": "jameskleeh", "createdAt": "2020-10-23T20:43:07Z", "path": "http-client-core/src/main/java/io/micronaut/http/client/HttpClient.java", "diffHunk": "@@ -233,4 +233,16 @@ default HttpClient refresh() {\n     static HttpClient create(@Nullable URL url) {\n         return HttpClientConfiguration.createClient(url);\n     }\n+\n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration the client configuration\n+     * @return The client\n+     */\n+    static HttpClient create(@Nullable URL url, HttpClientConfiguration configuration) {", "originalCommit": "437b5af7f50d7cafda7bba98411236ca9f759e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75888f7a2a0c535a3707e97db58d88788e9dc53e", "chunk": "diff --git a/http-client-core/src/main/java/io/micronaut/http/client/HttpClient.java b/http-client-core/src/main/java/io/micronaut/http/client/HttpClient.java\nindex db89c254b..bee134082 100644\n--- a/http-client-core/src/main/java/io/micronaut/http/client/HttpClient.java\n+++ b/http-client-core/src/main/java/io/micronaut/http/client/HttpClient.java\n\n@@ -241,6 +241,7 @@ public interface HttpClient extends Closeable, LifeCycle<HttpClient> {\n      * @param url The base URL\n      * @param configuration the client configuration\n      * @return The client\n+     * @since 2.2.0\n      */\n     static HttpClient create(@Nullable URL url, HttpClientConfiguration configuration) {\n         return HttpClientConfiguration.createClient(url, configuration);\n"}}, {"oid": "75888f7a2a0c535a3707e97db58d88788e9dc53e", "url": "https://github.com/micronaut-projects/micronaut-core/commit/75888f7a2a0c535a3707e97db58d88788e9dc53e", "message": "Issue 3582\n- adding feature to configure the shutdown quiet period and shutdown timeouts\n- adding overloaded versions of HttpClient create; RxStreamingHttpClient create; and RxHttpClientFactory createClient and createStreamingClient to accept a HttpClientConfiguration instance, for cases where the client is created outside the Micronaut application context", "committedDate": "2020-10-26T15:02:41Z", "type": "commit"}]}