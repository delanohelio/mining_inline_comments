{"pr_number": 402, "pr_title": "XRDDEV-865 Unregister client", "pr_createdAt": "2020-03-04T13:29:55Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/402", "timeline": [{"oid": "5af9b47978b6e96f4a49760b7f49d7ab9f69bb8a", "url": "https://github.com/nordic-institute/X-Road/commit/5af9b47978b6e96f4a49760b7f49d7ab9f69bb8a", "message": "XRDDEV-861 Register client\n\n* controller and service layer done\n* exception refactoring - sorry about the noise!\n* WIP: tests", "committedDate": "2020-03-02T12:27:35Z", "type": "commit"}, {"oid": "014268241df54b1b5c8177bf7a775842da3a671d", "url": "https://github.com/nordic-institute/X-Road/commit/014268241df54b1b5c8177bf7a775842da3a671d", "message": "XRDDEV-861 Register client // tests", "committedDate": "2020-03-02T13:49:04Z", "type": "commit"}, {"oid": "73d193e39fa81e1892b7507333987709eb24a1d4", "url": "https://github.com/nordic-institute/X-Road/commit/73d193e39fa81e1892b7507333987709eb24a1d4", "message": "XRDDEV-861 Register client // javadov update", "committedDate": "2020-03-02T14:26:40Z", "type": "commit"}, {"oid": "4833e41fce8c6ae263f2a98a159953d1b4f18dfb", "url": "https://github.com/nordic-institute/X-Road/commit/4833e41fce8c6ae263f2a98a159953d1b4f18dfb", "message": "XRDDEV-865 Unregister client\n\n* controller, service, tests", "committedDate": "2020-03-04T13:12:02Z", "type": "commit"}, {"oid": "358eb1deb6bd3cf05946274b4a892bf1d3862be5", "url": "https://github.com/nordic-institute/X-Road/commit/358eb1deb6bd3cf05946274b4a892bf1d3862be5", "message": "Merge branch 'develop' into XRDDEV-865-unregister-client\n\n# Conflicts:\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\n#\tsrc/proxy-ui-api/src/test/java/org/niis/xroad/restapi/service/ClientServiceIntegrationTest.java", "committedDate": "2020-03-04T13:37:16Z", "type": "commit"}, {"oid": "98cb840ef56d189a99199bf5383782704eaf5ec7", "url": "https://github.com/nordic-institute/X-Road/commit/98cb840ef56d189a99199bf5383782704eaf5ec7", "message": "XRDDEV-865 Unregister client // after merge fixes\n\n* throw ClientNotFound\n* add test for non existing client unregister", "committedDate": "2020-03-04T13:47:48Z", "type": "commit"}, {"oid": "395fe1492a818aa1f1e7489544bf311553c3999c", "url": "https://github.com/nordic-institute/X-Road/commit/395fe1492a818aa1f1e7489544bf311553c3999c", "message": "Merge branch 'develop' into XRDDEV-861-register-client\n\n# Conflicts:\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\n#\tsrc/proxy-ui-api/src/test/java/org/niis/xroad/restapi/service/ClientServiceIntegrationTest.java", "committedDate": "2020-03-04T13:52:38Z", "type": "commit"}, {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1", "url": "https://github.com/nordic-institute/X-Road/commit/8864a6125a5c86f52af1b3a522eb8f2582990db1", "message": "XRDDEV-865 Unregister client // checkstyle fixes", "committedDate": "2020-03-04T14:35:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxNDg1Ng==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390214856", "bodyText": "nitpick: \"is already unregistered\" may be slightly misleading, since ActionNotPossibleException is thrown also when client has status STATUS_SAVED, STATUS_DELINPROG or STATUS_GLOBALERR. At least STATUS_SAVED can happen even if client has not been already unregistered.", "author": "jansu76", "createdAt": "2020-03-10T10:19:17Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -418,6 +425,51 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         return mergeClientListsDistinctively(globalClients, localClients);\n     }\n \n+    /**\n+     * Registers a client\n+     * @param clientId client to register\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     */\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        try {\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n+            clientRepository.saveOrUpdate(client);\n+        } catch (ManagementRequestSendingFailedException e) {\n+            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        }\n+    }\n+\n+    /**\n+     * Unregister a client\n+     * @param clientId client to unregister\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n+     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered", "originalCommit": "8864a6125a5c86f52af1b3a522eb8f2582990db1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NDQ5OQ==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390794499", "bodyText": "Updated the javadoc", "author": "carohauta", "createdAt": "2020-03-11T07:55:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxNDg1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "412132cd91ee5028c178a0fd5b94c0bde24c502e", "chunk": "diff --git a/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java b/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\nindex 5ea41d95d..b31c272f6 100644\n--- a/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\n+++ b/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\n\n@@ -430,40 +425,21 @@ public class ClientService {\n      * @param clientId client to register\n      * @throws GlobalConfOutdatedException\n      * @throws ClientNotFoundException\n+     * @throws CannotRegisterOwnerException\n      */\n-    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n+            CannotRegisterOwnerException, ActionNotPossibleException {\n         ClientType client = getLocalClientOrThrowNotFound(clientId);\n-        try {\n-            managementRequestSenderService.sendClientRegisterRequest(clientId);\n-            client.setClientStatus(ClientType.STATUS_REGINPROG);\n-            clientRepository.saveOrUpdate(client);\n-        } catch (ManagementRequestSendingFailedException e) {\n-            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        ClientId ownerId = currentSecurityServerId.getServerId().getOwner();\n+        if (ownerId.equals(client.getIdentifier())) {\n+            throw new CannotRegisterOwnerException();\n         }\n-    }\n-\n-    /**\n-     * Unregister a client\n-     * @param clientId client to unregister\n-     * @throws GlobalConfOutdatedException\n-     * @throws ClientNotFoundException\n-     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n-     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered\n-     */\n-    public void unregisterClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n-            CannotUnregisterOwnerException, ActionNotPossibleException {\n-        ClientType client = getLocalClientOrThrowNotFound(clientId);\n-        List<String> allowedStatuses = Arrays.asList(STATUS_REGISTERED, STATUS_REGINPROG);\n-        if (!allowedStatuses.contains(client.getClientStatus())) {\n-            throw new ActionNotPossibleException(\"cannot unregister client with status \" + client.getClientStatus());\n-        }\n-        ClientId ownerId = securityServerOwner.getId();\n-        if (clientId.equals(ownerId)) {\n-            throw new CannotUnregisterOwnerException();\n+        if (!client.getClientStatus().equals(ClientType.STATUS_SAVED)) {\n+            throw new ActionNotPossibleException(\"Only clients with status 'saved' can be registered\");\n         }\n         try {\n-            managementRequestSenderService.sendClientUnregisterRequest(clientId);\n-            client.setClientStatus(STATUS_DELINPROG);\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n             clientRepository.saveOrUpdate(client);\n         } catch (ManagementRequestSendingFailedException e) {\n             throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxOTg3Mg==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390219872", "bodyText": "Are you sure about ActionNotPossibleException being bad request? For example similar operation token certificate register / unregister seem to map into http 409 conflict: \n  \n    \n      X-Road/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/TokenCertificatesApiController.java\n    \n    \n        Lines 213 to 214\n      in\n      05e6443\n    \n    \n    \n    \n\n        \n          \n           } catch (ActionNotPossibleException | KeyNotFoundException e) { \n        \n\n        \n          \n               throw new ConflictException(e); \n        \n    \n  \n\n\nAlso other controllers seem to map ActionNotPossibleExceptions into conflicts, currently.\nI am not sure if this means CannotUnregisterOwnerException should follow suit, if ActionNotPossible is changed into 409. It is a little bit different, since owner is mostly static, and it is not very likely that a conflict could happen due to some other API call changing the owner. It is more common / likely that client status is changed due to another API call.", "author": "jansu76", "createdAt": "2020-03-10T10:28:31Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java", "diffHunk": "@@ -406,6 +404,35 @@ private ClientType getClientType(String encodedId) {\n         return new ResponseEntity<>(subjects, HttpStatus.OK);\n     }\n \n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_REG_REQ')\")\n+    public ResponseEntity<Void> registerClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.registerClient(clientId);\n+        } catch (GlobalConfOutdatedException e) {\n+            throw new BadRequestException(e);\n+        } catch (ClientNotFoundException e) {\n+            throw new ResourceNotFoundException(e);\n+        }\n+        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n+    }\n+\n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_DEL_REQ')\")\n+    public ResponseEntity<Void> unregisterClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.unregisterClient(clientId);\n+        } catch (GlobalConfOutdatedException | ClientService.CannotUnregisterOwnerException\n+                | ActionNotPossibleException e) {", "originalCommit": "8864a6125a5c86f52af1b3a522eb8f2582990db1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NjAyNg==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390796026", "bodyText": "ActionNotPossibleException and CannotUnregisterOwnerException are now considered a conflict since the request itself is not 'bad'. This would also apply to the GlobalConfOutdatedException but let's still follow the current approach that we have and treat it as a bad request (the GlobalConfOutdatedException case has been discussed sometime before IIRC (?))", "author": "carohauta", "createdAt": "2020-03-11T07:58:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxOTg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgxOTQxMA==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390819410", "bodyText": "Yeah, GlobalConfOutdatedException is a bit suspect too, but since it is widely used convention let's not touch it in this ticket.", "author": "jansu76", "createdAt": "2020-03-11T08:49:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxOTg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgxOTcyNQ==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390819725", "bodyText": "There was some discussion about it in some ticket, unfortunately can't remember where...", "author": "jansu76", "createdAt": "2020-03-11T08:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxOTg3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "412132cd91ee5028c178a0fd5b94c0bde24c502e", "chunk": "diff --git a/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java b/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java\nindex 74295403c..8c8041c9c 100644\n--- a/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java\n+++ b/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java\n\n@@ -404,35 +404,6 @@ public class ClientsApiController implements ClientsApi {\n         return new ResponseEntity<>(subjects, HttpStatus.OK);\n     }\n \n-    @Override\n-    @PreAuthorize(\"hasAuthority('SEND_CLIENT_REG_REQ')\")\n-    public ResponseEntity<Void> registerClient(String encodedClientId) {\n-        ClientId clientId = clientConverter.convertId(encodedClientId);\n-        try {\n-            clientService.registerClient(clientId);\n-        } catch (GlobalConfOutdatedException e) {\n-            throw new BadRequestException(e);\n-        } catch (ClientNotFoundException e) {\n-            throw new ResourceNotFoundException(e);\n-        }\n-        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n-    }\n-\n-    @Override\n-    @PreAuthorize(\"hasAuthority('SEND_CLIENT_DEL_REQ')\")\n-    public ResponseEntity<Void> unregisterClient(String encodedClientId) {\n-        ClientId clientId = clientConverter.convertId(encodedClientId);\n-        try {\n-            clientService.unregisterClient(clientId);\n-        } catch (GlobalConfOutdatedException | ClientService.CannotUnregisterOwnerException\n-                | ActionNotPossibleException e) {\n-            throw new BadRequestException(e);\n-        } catch (ClientNotFoundException e) {\n-            throw new ResourceNotFoundException(e);\n-        }\n-        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n-    }\n-\n     /**\n      * This method is synchronized (like client add in old Ruby implementation)\n      * to prevent a problem with two threads both creating \"first\" additional members.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNTg3OQ==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390225879", "bodyText": "saveOrUpdate does not hurt, but out of curiosity, is it needed? Or would JPA implementation automatically persist the modified managed entity when transaction ends?\n(@Transactional tests might have something to do with this....if so, it would in principle be better to make adjustments to tests instead of production code - em.flush?)\nIf saveOrUpdate is not needed, we could consider removing it, just to make things simpler and not fooling maintainers into thinking there is something important that requires calling saveOrUpdate, when there is not?", "author": "jansu76", "createdAt": "2020-03-10T10:39:40Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -418,6 +425,51 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         return mergeClientListsDistinctively(globalClients, localClients);\n     }\n \n+    /**\n+     * Registers a client\n+     * @param clientId client to register\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     */\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        try {\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n+            clientRepository.saveOrUpdate(client);\n+        } catch (ManagementRequestSendingFailedException e) {\n+            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        }\n+    }\n+\n+    /**\n+     * Unregister a client\n+     * @param clientId client to unregister\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n+     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered\n+     */\n+    public void unregisterClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n+            CannotUnregisterOwnerException, ActionNotPossibleException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        List<String> allowedStatuses = Arrays.asList(STATUS_REGISTERED, STATUS_REGINPROG);\n+        if (!allowedStatuses.contains(client.getClientStatus())) {\n+            throw new ActionNotPossibleException(\"cannot unregister client with status \" + client.getClientStatus());\n+        }\n+        ClientId ownerId = securityServerOwner.getId();\n+        if (clientId.equals(ownerId)) {\n+            throw new CannotUnregisterOwnerException();\n+        }\n+        try {\n+            managementRequestSenderService.sendClientUnregisterRequest(clientId);\n+            client.setClientStatus(STATUS_DELINPROG);\n+            clientRepository.saveOrUpdate(client);", "originalCommit": "8864a6125a5c86f52af1b3a522eb8f2582990db1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5MzYxOQ==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390793619", "bodyText": "It is not needed. I added it merely to be consistent with the rest of our codebase. IMO it should be removed from elsewhere also.", "author": "carohauta", "createdAt": "2020-03-11T07:52:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNTg3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NTEzNQ==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390795135", "bodyText": "Agreed!", "author": "jansu76", "createdAt": "2020-03-11T07:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNTg3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5NDE4MA==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390894180", "bodyText": "Created a task about codebase cleanup. Cleanup suggestions to the task are appreciated:\nhttps://jira.niis.org/browse/XRDDEV-976", "author": "carohauta", "createdAt": "2020-03-11T11:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNTg3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "412132cd91ee5028c178a0fd5b94c0bde24c502e", "chunk": "diff --git a/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java b/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\nindex 5ea41d95d..b31c272f6 100644\n--- a/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\n+++ b/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\n\n@@ -430,40 +425,21 @@ public class ClientService {\n      * @param clientId client to register\n      * @throws GlobalConfOutdatedException\n      * @throws ClientNotFoundException\n+     * @throws CannotRegisterOwnerException\n      */\n-    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n+            CannotRegisterOwnerException, ActionNotPossibleException {\n         ClientType client = getLocalClientOrThrowNotFound(clientId);\n-        try {\n-            managementRequestSenderService.sendClientRegisterRequest(clientId);\n-            client.setClientStatus(ClientType.STATUS_REGINPROG);\n-            clientRepository.saveOrUpdate(client);\n-        } catch (ManagementRequestSendingFailedException e) {\n-            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        ClientId ownerId = currentSecurityServerId.getServerId().getOwner();\n+        if (ownerId.equals(client.getIdentifier())) {\n+            throw new CannotRegisterOwnerException();\n         }\n-    }\n-\n-    /**\n-     * Unregister a client\n-     * @param clientId client to unregister\n-     * @throws GlobalConfOutdatedException\n-     * @throws ClientNotFoundException\n-     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n-     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered\n-     */\n-    public void unregisterClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n-            CannotUnregisterOwnerException, ActionNotPossibleException {\n-        ClientType client = getLocalClientOrThrowNotFound(clientId);\n-        List<String> allowedStatuses = Arrays.asList(STATUS_REGISTERED, STATUS_REGINPROG);\n-        if (!allowedStatuses.contains(client.getClientStatus())) {\n-            throw new ActionNotPossibleException(\"cannot unregister client with status \" + client.getClientStatus());\n-        }\n-        ClientId ownerId = securityServerOwner.getId();\n-        if (clientId.equals(ownerId)) {\n-            throw new CannotUnregisterOwnerException();\n+        if (!client.getClientStatus().equals(ClientType.STATUS_SAVED)) {\n+            throw new ActionNotPossibleException(\"Only clients with status 'saved' can be registered\");\n         }\n         try {\n-            managementRequestSenderService.sendClientUnregisterRequest(clientId);\n-            client.setClientStatus(STATUS_DELINPROG);\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n             clientRepository.saveOrUpdate(client);\n         } catch (ManagementRequestSendingFailedException e) {\n             throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNjQ5NQ==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390226495", "bodyText": "Javadoc does not seem to be in sync with the implementation.", "author": "jansu76", "createdAt": "2020-03-10T10:40:51Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ManagementRequestSenderService.java", "diffHunk": "@@ -99,27 +103,51 @@ public Integer sendAuthCertDeletionRequest(byte[] authCert) throws\n         }\n     }\n \n-    private ManagementRequestSender createManagementRequestSender()\n-            throws GlobalConfService.GlobalConfOutdatedException {\n-        globalConfService.verifyGlobalConfValidity();\n-        ServerConfType serverConf = serverConfService.getServerConf();\n-        ClientId sender = serverConf.getOwner().getIdentifier();\n-        ClientId receiver = globalConfFacade.getManagementRequestService();\n-        return new ManagementRequestSender(sender, receiver);\n+    /**\n+     * Sends a client register request as a normal X-Road message\n+     * @param securityServer the security server id\n+     * @param clientId the client id that will be registered\n+     * @return request ID in the central server database\n+     * @throws GlobalConfOutdatedException\n+     * @throws ManagementRequestSendingFailedException if there is a problem sending the message\n+     */\n+    Integer sendClientRegisterRequest(ClientId clientId)\n+            throws GlobalConfOutdatedException, ManagementRequestSendingFailedException {\n+        ManagementRequestSender sender = createManagementRequestSender();\n+        try {\n+            return sender.sendClientRegRequest(serverConfService.getSecurityServerId(), clientId);\n+        } catch (CodedException ce) {\n+            throw ce;\n+        } catch (Exception e) {\n+            throw new ManagementRequestSendingFailedException(e);\n+        }\n     }\n \n     /**\n-     * Missing a valid auth cert\n+     * Sends a client unregister request as a normal X-Road message\n+     * @param securityServer the security server id", "originalCommit": "8864a6125a5c86f52af1b3a522eb8f2582990db1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NjIxMw==", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390796213", "bodyText": "Updated", "author": "carohauta", "createdAt": "2020-03-11T07:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNjQ5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "412132cd91ee5028c178a0fd5b94c0bde24c502e", "chunk": "diff --git a/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ManagementRequestSenderService.java b/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ManagementRequestSenderService.java\nindex a5b1b0c8b..f51ffee95 100644\n--- a/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ManagementRequestSenderService.java\n+++ b/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ManagementRequestSenderService.java\n\n@@ -97,7 +95,7 @@ public class ManagementRequestSenderService {\n             GlobalConfOutdatedException, ManagementRequestSendingFailedException {\n         ManagementRequestSender sender = createManagementRequestSender();\n         try {\n-            return sender.sendAuthCertDeletionRequest(serverConfService.getSecurityServerId(), authCert);\n+            return sender.sendAuthCertDeletionRequest(securityServerOwner.getServerId(), authCert);\n         } catch (Exception e) {\n             throw new ManagementRequestSendingFailedException(e);\n         }\n"}}, {"oid": "412132cd91ee5028c178a0fd5b94c0bde24c502e", "url": "https://github.com/nordic-institute/X-Road/commit/412132cd91ee5028c178a0fd5b94c0bde24c502e", "message": "XRDDEV-861 Register client // PR comment fixes 1\n\n* refactor SecurityServerOwner -> CurrentSecurityServerId\n* add verifications to whether or not client can be registered\n* test coverage for controller", "committedDate": "2020-03-10T14:40:48Z", "type": "commit"}, {"oid": "32fd524825145a0368d82e8c0852a29f7435b5ea", "url": "https://github.com/nordic-institute/X-Road/commit/32fd524825145a0368d82e8c0852a29f7435b5ea", "message": "Merge branch 'XRDDEV-861-register-client' into XRDDEV-865-unregister-client\n\n# Conflicts:\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ManagementRequestSenderService.java\n#\tsrc/proxy-ui-api/src/test/java/org/niis/xroad/restapi/service/ClientServiceIntegrationTest.java", "committedDate": "2020-03-10T14:51:32Z", "type": "commit"}, {"oid": "d99c7e6c6425f62efd330421eeffb9cd0850a8b9", "url": "https://github.com/nordic-institute/X-Road/commit/d99c7e6c6425f62efd330421eeffb9cd0850a8b9", "message": "XRDDEV-865 Unregister client // test fixes", "committedDate": "2020-03-10T16:01:18Z", "type": "commit"}, {"oid": "732506671384e6f95c26703aa1ef608ba8a9eff1", "url": "https://github.com/nordic-institute/X-Road/commit/732506671384e6f95c26703aa1ef608ba8a9eff1", "message": "XRDDEV-865 Unregister client // PR fixes 1\n\n* added controller tests", "committedDate": "2020-03-11T07:54:30Z", "type": "commit"}, {"oid": "b358e0f30d09a6d2e85b9dfbce484126bc3167af", "url": "https://github.com/nordic-institute/X-Road/commit/b358e0f30d09a6d2e85b9dfbce484126bc3167af", "message": "Merge branch 'develop' into XRDDEV-861-register-client", "committedDate": "2020-03-11T10:07:10Z", "type": "commit"}, {"oid": "34a93d79d5baa6623ad4d98a648f2eb9c88cb512", "url": "https://github.com/nordic-institute/X-Road/commit/34a93d79d5baa6623ad4d98a648f2eb9c88cb512", "message": "Merge branch 'XRDDEV-861-register-client' into XRDDEV-865-unregister-client", "committedDate": "2020-03-11T10:07:41Z", "type": "commit"}, {"oid": "a1b7015a7c280e7168a8c4d9efa7b12a3682ea14", "url": "https://github.com/nordic-institute/X-Road/commit/a1b7015a7c280e7168a8c4d9efa7b12a3682ea14", "message": "XRDDEV-865 Unregister client // checkstyle fix", "committedDate": "2020-03-11T11:09:10Z", "type": "commit"}, {"oid": "550f0fcfbccf2163c5fe092c8a5628865b03d1e4", "url": "https://github.com/nordic-institute/X-Road/commit/550f0fcfbccf2163c5fe092c8a5628865b03d1e4", "message": "Merge branch 'develop' into XRDDEV-861-register-client\n\n# Conflicts:\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java\n#\tsrc/proxy-ui-api/src/test/java/org/niis/xroad/restapi/openapi/ClientsApiControllerIntegrationTest.java", "committedDate": "2020-03-11T11:28:30Z", "type": "commit"}, {"oid": "b615452b802a526c4fb5bd1754c838a2a6bb8cfb", "url": "https://github.com/nordic-institute/X-Road/commit/b615452b802a526c4fb5bd1754c838a2a6bb8cfb", "message": "Merge branch 'XRDDEV-861-register-client' into XRDDEV-865-unregister-client\n\n# Conflicts:\n#\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "committedDate": "2020-03-11T11:50:44Z", "type": "commit"}]}