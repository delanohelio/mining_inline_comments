{"pr_number": 743, "pr_title": "XRDDEV-1366 Add defensive checks against bad client configuration", "pr_createdAt": "2020-10-11T10:41:12Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/743", "timeline": [{"oid": "001db3edb897ac770512d004f346af390fa1b8ec", "url": "https://github.com/nordic-institute/X-Road/commit/001db3edb897ac770512d004f346af390fa1b8ec", "message": "XRDDEV-1366 Add defensive checks against bad client configuration\n\n- Check member class when new local client is added.\n- Check instance identifier when registering a client.\n- Check member class when registering a client.\n- Fix failing tests.\n- Add new tests for invalid member class.", "committedDate": "2020-10-11T07:17:15Z", "type": "commit"}, {"oid": "04fa8c3fff4ff55b8643bf9379c7bba00c281cdb", "url": "https://github.com/nordic-institute/X-Road/commit/04fa8c3fff4ff55b8643bf9379c7bba00c281cdb", "message": "XRDDEV-1366 Update integration tests\n\n- Add a client with invalid instance identifier to the test configuration.\n- Add a client with invalid member class to the test configuration.\n- Update other tests are dependent on the number of the clients in the configuration.\n- Add new tests.", "committedDate": "2020-10-11T10:35:23Z", "type": "commit"}, {"oid": "c961484876e7c55db867756bdcb89285e8bbb65d", "url": "https://github.com/nordic-institute/X-Road/commit/c961484876e7c55db867756bdcb89285e8bbb65d", "message": "XRDDEV-1366 Fix Sonarqube issue", "committedDate": "2020-10-11T11:37:31Z", "type": "commit"}, {"oid": "b93eee7fec4a34221c6095b8395c45b60a755bcc", "url": "https://github.com/nordic-institute/X-Road/commit/b93eee7fec4a34221c6095b8395c45b60a755bcc", "message": "XRDDEV-1366 Fix Sonarqube issue", "committedDate": "2020-10-11T11:38:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAxOTU4NA==", "url": "https://github.com/nordic-institute/X-Road/pull/743#discussion_r515019584", "bodyText": "There are three methods in ManagementRequestSenderService that take in a ClientId parameter\n\nsendClientRegisterRequest\nsendClientUnregisterRequest\nsendOwnerChangeRequest\n\nWould it make sense to check the validity of the memberClass in all of these cases? Maybe moving the whole checking logic into ManagementRequestSenderService methods listed above.\nOr another way would be to just add the check to unregisterClient and changeOwner methods within ClientService.", "author": "carohauta", "createdAt": "2020-10-30T11:05:39Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -493,13 +495,27 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n      * @throws ClientNotFoundException\n      * @throws CannotRegisterOwnerException\n      * @throws ActionNotPossibleException\n+     * @throws InvalidMemberClassException\n+     * @throws InvalidInstanceIdentifierException\n      */\n     public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n-            CannotRegisterOwnerException, ActionNotPossibleException {\n+            CannotRegisterOwnerException, ActionNotPossibleException, InvalidMemberClassException,\n+            InvalidInstanceIdentifierException {\n \n         auditDataHelper.put(clientId);\n \n         ClientType client = getLocalClientOrThrowNotFound(clientId);\n+\n+        String instanceIdentifier = client.getIdentifier().getXRoadInstance();\n+        if (!instanceIdentifier.equals(globalConfFacade.getInstanceIdentifier())) {\n+            throw new InvalidInstanceIdentifierException(INVALID_INSTANCE_IDENTIFIER + instanceIdentifier);\n+        }\n+\n+        String memberClass = client.getIdentifier().getMemberClass();\n+        if (!isValidMemberClass(memberClass)) {\n+            throw new InvalidMemberClassException(INVALID_MEMBER_CLASS + memberClass);\n+        }", "originalCommit": "b93eee7fec4a34221c6095b8395c45b60a755bcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA0MzA2Ng==", "url": "https://github.com/nordic-institute/X-Road/pull/743#discussion_r515043066", "bodyText": "Originally I didn't include the member class check in sendClientUnregisterRequest and sendOwnerChangeRequest, because both requests require that the client has already been registered on the Security Server. And since the sendClientRegisterRequest has the check, registering a client with invalid member class should not be possible. So instead of including the check in all the three management requests, it's only included in the request that is a precondition for the two other requests.", "author": "petkivim", "createdAt": "2020-10-30T11:50:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAxOTU4NA=="}], "type": "inlineReview", "revised_code": null}]}