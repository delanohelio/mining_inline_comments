{"pr_number": 3668, "pr_title": "Fix build", "pr_createdAt": "2020-03-03T20:28:44Z", "pr_url": "https://github.com/getodk/collect/pull/3668", "timeline": [{"oid": "240109bab3604314b23222db724072c9cb92a651", "url": "https://github.com/getodk/collect/commit/240109bab3604314b23222db724072c9cb92a651", "message": "Use BackgroundWorkManager abstraction to look up AutoSendWorker status", "committedDate": "2020-03-03T20:42:48Z", "type": "commit"}, {"oid": "c15091be287844be29a33c02ff03ceecf855c0f0", "url": "https://github.com/getodk/collect/commit/c15091be287844be29a33c02ff03ceecf855c0f0", "message": "Make sure apps sttate is reset before activity is launched in migration tests", "committedDate": "2020-03-03T20:43:39Z", "type": "commit"}, {"oid": "d4c7fc4b9b88a6b3c11925bae87bbc26af96c3a9", "url": "https://github.com/getodk/collect/commit/d4c7fc4b9b88a6b3c11925bae87bbc26af96c3a9", "message": "Reset Dagger deps as part of ResetStateRule", "committedDate": "2020-03-03T20:43:39Z", "type": "commit"}, {"oid": "d2bef018d2fcd274b17c434174d121bb4c891277", "url": "https://github.com/getodk/collect/commit/d2bef018d2fcd274b17c434174d121bb4c891277", "message": "Move dependency overriding to ResetStateRule and make sure JavaRosa is reinitialized", "committedDate": "2020-03-03T20:43:39Z", "type": "commit"}, {"oid": "45ce97fa1b1c212e414d3e0711fceed28a5cb46f", "url": "https://github.com/getodk/collect/commit/45ce97fa1b1c212e414d3e0711fceed28a5cb46f", "message": "Just clear directories - don't use app's reset logic", "committedDate": "2020-03-03T20:43:39Z", "type": "commit"}, {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "url": "https://github.com/getodk/collect/commit/a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "message": "Revert \"Just clear directories - don't use app's reset logic\"\n\nThis reverts commit 64f642dfeb6b2e1f89e4fd05af5b7aa993733f09.", "committedDate": "2020-03-03T20:43:39Z", "type": "commit"}, {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "url": "https://github.com/getodk/collect/commit/a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "message": "Revert \"Just clear directories - don't use app's reset logic\"\n\nThis reverts commit 64f642dfeb6b2e1f89e4fd05af5b7aa993733f09.", "committedDate": "2020-03-03T20:43:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5NTM0NQ==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387295345", "bodyText": "Why is this needed? Isn't that the default runner?", "author": "lognaturel", "createdAt": "2020-03-03T21:10:23Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationCompletedBannerTest.java", "diffHunk": "@@ -21,18 +23,10 @@\n \n import static org.odk.collect.android.support.CollectHelpers.overrideAppDependencyModule;\n \n+@RunWith(AndroidJUnit4.class)", "originalCommit": "73df40136ceb394198ce20f8b14d065ef0b2bb83", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3MzY3MA==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387573670", "bodyText": "You technically don't need it but I think it's weird not to have it. It is possible to specify other ones and the Google team loves deprecating/changing them.", "author": "seadowg", "createdAt": "2020-03-04T10:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5NTM0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a26ccbe4af53eacc00f385798bd41fe082b7935e", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationCompletedBannerTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationCompletedBannerTest.java\nindex d7ebcea73..7bf250248 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationCompletedBannerTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationCompletedBannerTest.java\n\n@@ -21,25 +21,10 @@ import javax.inject.Singleton;\n \n import dagger.Provides;\n \n-import static org.odk.collect.android.support.CollectHelpers.overrideAppDependencyModule;\n-\n @RunWith(AndroidJUnit4.class)\n public class StorageMigrationCompletedBannerTest {\n \n-    public ActivityTestRule<MainMenuActivity> rule = new ActivityTestRule<MainMenuActivity>(MainMenuActivity.class) {\n-        @Override\n-        protected void beforeActivityLaunched() {\n-            overrideAppDependencyModule(new AppDependencyModule() {\n-                @Provides\n-                @Singleton\n-                public StorageMigrationRepository providesStorageMigrationRepository() {\n-                    StorageMigrationRepository storageMigrationRepository = new StorageMigrationRepository();\n-                    storageMigrationRepository.setResult(StorageMigrationResult.SUCCESS);\n-                    return storageMigrationRepository;\n-                }\n-            });\n-        }\n-    };\n+    public ActivityTestRule<MainMenuActivity> rule = new ActivityTestRule<>(MainMenuActivity.class);\n \n     @Rule\n     public RuleChain copyFormChain = RuleChain\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxODU4OA==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387318588", "bodyText": "Not important to change now but there are lots of doReturn calls in this test file that should use the newer and more readable when/thenReturn syntax. See the javadoc: Use doReturn() in those rare occasions when you cannot use when(Object). CC @grzesiek2010", "author": "lognaturel", "createdAt": "2020-03-03T21:57:41Z", "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -27,45 +31,44 @@\n     private final StorageMigrationRepository storageMigrationRepository = mock(StorageMigrationRepository.class);\n     private final GeneralSharedPreferences generalSharedPreferences = mock(GeneralSharedPreferences.class);\n     private final ReferenceManager referenceManager = mock(ReferenceManager.class);\n+    private final BackgroundWorkManager backgroundWorkManager = mock(BackgroundWorkManager.class);\n \n     @Before\n     public void setup() {\n-        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser, storageMigrationRepository, generalSharedPreferences, referenceManager));\n+        whenFormDownloaderIsNotRunning();\n+        whenFormUploaderIsNotRunning();\n \n-        doNothing().when(storageMigrator).reopenDatabases();\n         doNothing().when(storageEraser).clearOdkDirOnScopedStorage();\n         doNothing().when(storageEraser).deleteOdkDirFromUnscopedStorage();\n         doReturn(\"/sdcard/odk/layers/countries/countries-raster.mbtiles\").when(generalSharedPreferences).get(KEY_REFERENCE_LAYER);", "originalCommit": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2MjA5NA==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387562094", "bodyText": "Right probably I used spies then refactored to mocks and forgot to update here.", "author": "grzesiek2010", "createdAt": "2020-03-04T10:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxODU4OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMDI5Nw==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387320297", "bodyText": "These doNothing calls shouldn't be needed because storageEraser is a mock. It's needed below for the reopenDatabases because storageMigrator is a spy and not all of its methods can be run. CC @grzesiek2010", "author": "lognaturel", "createdAt": "2020-03-03T22:01:10Z", "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -27,45 +31,44 @@\n     private final StorageMigrationRepository storageMigrationRepository = mock(StorageMigrationRepository.class);\n     private final GeneralSharedPreferences generalSharedPreferences = mock(GeneralSharedPreferences.class);\n     private final ReferenceManager referenceManager = mock(ReferenceManager.class);\n+    private final BackgroundWorkManager backgroundWorkManager = mock(BackgroundWorkManager.class);\n \n     @Before\n     public void setup() {\n-        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser, storageMigrationRepository, generalSharedPreferences, referenceManager));\n+        whenFormDownloaderIsNotRunning();\n+        whenFormUploaderIsNotRunning();\n \n-        doNothing().when(storageMigrator).reopenDatabases();\n         doNothing().when(storageEraser).clearOdkDirOnScopedStorage();", "originalCommit": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2MTkxMg==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387561912", "bodyText": "Right probably I used spies then refactored to mocks and forgot to update here.", "author": "grzesiek2010", "createdAt": "2020-03-04T10:02:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMDI5Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMTQ0Mw==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387321443", "bodyText": "I didn't realize that applications were never recreated in Espresso tests before @seadowg explained this one to me. So Collect.onCreate does not run for every test.", "author": "lognaturel", "createdAt": "2020-03-03T22:03:24Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/ResetStateRule.java", "diffHunk": "@@ -29,14 +56,44 @@ public Statement apply(final Statement base, Description description) {\n \n         @Override\n         public void evaluate() throws Throwable {\n+            // Reset any singleton state\n+            if (appDependencyModule != null) {\n+                CollectHelpers.overrideAppDependencyModule(appDependencyModule);\n+            } else {\n+                CollectHelpers.overrideAppDependencyModule(new AppDependencyModule());\n+            }\n+\n+            // Make sure we clear all our shared prefs - ignore logic that doesn't reset keys\n+            Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n+            PreferenceManager.getDefaultSharedPreferences(context).edit().clear().commit();\n+            context.getSharedPreferences(ADMIN_PREFERENCES, 0).edit().clear().commit();\n+            new MetaSharedPreferencesProvider(context).getMetaSharedPreferences().edit().clear().commit();\n+\n+            // Reset the app in both the old and new storage locations (just nuke dirs)\n             List<Integer> resetActions = Arrays.asList(\n-                    ResetUtility.ResetAction.RESET_PREFERENCES, ResetUtility.ResetAction.RESET_INSTANCES,\n-                    ResetUtility.ResetAction.RESET_FORMS, ResetUtility.ResetAction.RESET_LAYERS,\n-                    ResetUtility.ResetAction.RESET_CACHE, ResetUtility.ResetAction.RESET_OSM_DROID\n+                    ResetUtility.ResetAction.RESET_PREFERENCES,\n+                    ResetUtility.ResetAction.RESET_INSTANCES,\n+                    ResetUtility.ResetAction.RESET_FORMS,\n+                    ResetUtility.ResetAction.RESET_LAYERS,\n+                    ResetUtility.ResetAction.RESET_CACHE,\n+                    ResetUtility.ResetAction.RESET_OSM_DROID\n             );\n \n-            Context targetContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\n-            new ResetUtility().reset(targetContext, resetActions);\n+            new StorageStateProvider().disableUsingScopedStorage();\n+            new ResetUtility().reset(context, resetActions);\n+            new StorageStateProvider().enableUsingScopedStorage();\n+            new ResetUtility().reset(context, resetActions);\n+\n+            // Setup storage location for tests\n+            if (useScopedStorage) {\n+                new StorageStateProvider().enableUsingScopedStorage();\n+            } else {\n+                new StorageStateProvider().disableUsingScopedStorage();\n+            }\n+\n+            // Any dependencies (PropertyManager for instance) will already have been\n+            // passed to JavaRosa so make sure everything is reset\n+            ((Collect) context.getApplicationContext()).initializeJavaRosa();", "originalCommit": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMzU0NA==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387323544", "bodyText": "I don't think this is needed. Because of the KEYS_WE_SHOULD_NOT_RESET map, the scoped storage setting can't be changed by a settings file.", "author": "lognaturel", "createdAt": "2020-03-03T22:07:19Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -296,12 +296,8 @@ public void onClick(View v) {\n                 ToastUtils.showLongToast(R.string.corrupt_settings_file_notification);\n             }\n         }\n-    }\n \n-    private void initToolbar() {\n-        Toolbar toolbar = findViewById(R.id.toolbar);\n-        setTitle(getString(R.string.main_menu));\n-        setSupportActionBar(toolbar);\n+        setUpStorageMigrationBanner();", "originalCommit": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1Mzk2OQ==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387553969", "bodyText": "It's called in onResume() and that's enough.", "author": "grzesiek2010", "createdAt": "2020-03-04T09:48:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMzU0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2OTUzMQ==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387569531", "bodyText": "Oh my bad another mistake. I was experimenting with test coverage and left this in. @grzesiek2010 is totally right it's only needed in onResume", "author": "seadowg", "createdAt": "2020-03-04T10:16:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMzU0NA=="}], "type": "inlineReview", "revised_code": {"commit": "a26ccbe4af53eacc00f385798bd41fe082b7935e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\nindex dee9e1915..076162a84 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n\n@@ -296,8 +296,6 @@ public class MainMenuActivity extends CollectAbstractActivity implements AdminPa\n                 ToastUtils.showLongToast(R.string.corrupt_settings_file_notification);\n             }\n         }\n-\n-        setUpStorageMigrationBanner();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1NTAyOQ==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387555029", "bodyText": "Shouldn't it be in ResetStateRule?", "author": "grzesiek2010", "createdAt": "2020-03-04T09:50:38Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/test/FormLoadingUtils.java", "diffHunk": "@@ -52,6 +52,7 @@ private FormLoadingUtils() {\n      */\n     public static void copyFormToStorage(String formFilename, List<String> mediaFilePaths, boolean copyToDatabase) throws IOException {\n         new StorageInitializer().createOdkDirsOnStorage();\n+        ReferenceManager.instance().reset();", "originalCommit": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1NjI4Mw==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387556283", "bodyText": "It was originally. I actually ended up on a call with @lognaturel to double check all the JavaRosa stuff (as I'm not as knowledgable about all that) and we ended up deciding to put this here. The reasoning was that the app doesn't need reset() to be called (it already handles setting up the ReferenceManager) but CopyFormRule does need it.", "author": "seadowg", "createdAt": "2020-03-04T09:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1NTAyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1OTc5Mw==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387559793", "bodyText": "ok", "author": "grzesiek2010", "createdAt": "2020-03-04T09:59:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1NTAyOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2MTI1NQ==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387561255", "bodyText": "What is the advantage of this change?", "author": "grzesiek2010", "createdAt": "2020-03-04T10:01:34Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/ResetUtility.java", "diffHunk": "@@ -35,7 +35,11 @@\n public class ResetUtility {\n \n     private List<Integer> failedResetActions;\n-    private final StoragePathProvider storagePathProvider = new StoragePathProvider();\n+    private final StoragePathProvider storagePathProvider;\n+\n+    public ResetUtility() {\n+        storagePathProvider = new StoragePathProvider();", "originalCommit": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2MjcwMg==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387562702", "bodyText": "oooo nice catch. That's a mistake. I think I'd looked at passing one in for some reason but abandoned the idea. I'll revert that.", "author": "seadowg", "createdAt": "2020-03-04T10:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2MTI1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a26ccbe4af53eacc00f385798bd41fe082b7935e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/utilities/ResetUtility.java b/collect_app/src/main/java/org/odk/collect/android/utilities/ResetUtility.java\nindex ba8690543..09e2f27fa 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/utilities/ResetUtility.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/utilities/ResetUtility.java\n\n@@ -35,11 +35,7 @@ import java.util.List;\n public class ResetUtility {\n \n     private List<Integer> failedResetActions;\n-    private final StoragePathProvider storagePathProvider;\n-\n-    public ResetUtility() {\n-        storagePathProvider = new StoragePathProvider();\n-    }\n+    private final StoragePathProvider storagePathProvider = new StoragePathProvider();\n \n     public List<Integer> reset(Context context, List<Integer> resetActions) {\n \n"}}, {"oid": "a26ccbe4af53eacc00f385798bd41fe082b7935e", "url": "https://github.com/getodk/collect/commit/a26ccbe4af53eacc00f385798bd41fe082b7935e", "message": "Revert accidental change", "committedDate": "2020-03-04T10:19:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MjE2OA==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387582168", "bodyText": "I feel anxious about the test you removed that verified those two methods. Those were android tests because starting evernote job / worker didn't work with Robolectric I don't know why. It required some time but at least it was verified and we were sure it won't cause any problem during migration. Now you moved the code here and it looks fine but generally when you refactor something it's good to add tests in this case we have refactoring and removing tests.", "author": "grzesiek2010", "createdAt": "2020-03-04T10:38:45Z", "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.odk.collect.android.backgroundwork;\n+\n+import androidx.work.WorkInfo;\n+import androidx.work.WorkManager;\n+\n+import com.evernote.android.job.Job;\n+import com.evernote.android.job.JobManager;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+import org.odk.collect.utilities.BackgroundWorkManager;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import timber.log.Timber;\n+\n+\n+/**\n+ * Abstraction that sits on top of {@link com.evernote.android.job.JobManager} and\n+ * {@link androidx.work.WorkManager}. Implementation of {@link BackgroundWorkManager} which objects\n+ * can use to interact with background work without having to care what underlying framework is\n+ * being used.\n+ */\n+public class CollectBackgroundWorkManager implements BackgroundWorkManager {\n+\n+    @Override\n+    public boolean isRunning(String tag) {\n+        switch (tag) {\n+            case AutoSendWorker.TAG: {\n+                return isWorkManagerWorkRunning(tag);\n+            }\n+\n+            case ServerPollingJob.TAG: {\n+                return isJobManagerWorkRunning(tag);\n+            }\n+\n+            default:\n+                throw new IllegalArgumentException(\"CollectBackgroundWorkManager doesn't know about \" + tag);\n+        }\n+    }\n+\n+    private boolean isJobManagerWorkRunning(String tag) {", "originalCommit": "a26ccbe4af53eacc00f385798bd41fe082b7935e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU5NjA1Mg==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387596052", "bodyText": "I can completely see where you're coming from here. The motivation behind changing the tests is that locally and on CI they were failing on and off as the waits wouldn't always work.\nI looked at faking out JobManager/WorkManager in the StorageMigrator tests but was unable to due to JobManager being a final class. Generally I'd wrap a depedency like this as I'm not trying to test that JobManager works but that our code that interacts with it does. Granted here we're wrapping a chunk of our own logic so it's not the \"thinnest\" wrapper.\nWe could of course test the wrapper (CollectBackgroundWorkManager) to give us more confidence. I'm comfortable with it being at the \"edge\" of our system enough that it doesn't need that but that's a pretty subjective statement. If you're feeling really uncomfortable with it I can have a stap at tests for the CollectBackgroundWorkManager. I'm not sure how feasible it would be for JobManager (although at worst we could wrap it in a veru light method proxy interface for tests) but WorkManager provides faking tools as far as I've seen.", "author": "seadowg", "createdAt": "2020-03-04T11:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MjE2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYwMDIxOA==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387600218", "bodyText": "Ok so let's merge it as is not to block other prs but if you have time you can add test if it's difficult please just let the QA team know about it so that they can verify this case manually one more time.", "author": "grzesiek2010", "createdAt": "2020-03-04T11:13:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MjE2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYwMzU5Mw==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387603593", "bodyText": "Ok that sounds good. I'll have a look at that. Go ahead and merge when you're ready!", "author": "seadowg", "createdAt": "2020-03-04T11:21:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MjE2OA=="}], "type": "inlineReview", "revised_code": {"commit": "d32560db5834a168add6256229dcea38685ba690", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java b/collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java\nindex 5520c4842..a7c4fe9e8 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java\n\n@@ -16,7 +16,6 @@ import java.util.Set;\n \n import timber.log.Timber;\n \n-\n /**\n  * Abstraction that sits on top of {@link com.evernote.android.job.JobManager} and\n  * {@link androidx.work.WorkManager}. Implementation of {@link BackgroundWorkManager} which objects\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYwMDMzMQ==", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387600331", "bodyText": "extra empty line", "author": "grzesiek2010", "createdAt": "2020-03-04T11:14:05Z", "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.odk.collect.android.backgroundwork;\n+\n+import androidx.work.WorkInfo;\n+import androidx.work.WorkManager;\n+\n+import com.evernote.android.job.Job;\n+import com.evernote.android.job.JobManager;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+import org.odk.collect.utilities.BackgroundWorkManager;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import timber.log.Timber;\n+\n+", "originalCommit": "a26ccbe4af53eacc00f385798bd41fe082b7935e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d32560db5834a168add6256229dcea38685ba690", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java b/collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java\nindex 5520c4842..a7c4fe9e8 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java\n\n@@ -16,7 +16,6 @@ import java.util.Set;\n \n import timber.log.Timber;\n \n-\n /**\n  * Abstraction that sits on top of {@link com.evernote.android.job.JobManager} and\n  * {@link androidx.work.WorkManager}. Implementation of {@link BackgroundWorkManager} which objects\n"}}, {"oid": "d32560db5834a168add6256229dcea38685ba690", "url": "https://github.com/getodk/collect/commit/d32560db5834a168add6256229dcea38685ba690", "message": "Remove extra line", "committedDate": "2020-03-04T11:18:36Z", "type": "commit"}]}