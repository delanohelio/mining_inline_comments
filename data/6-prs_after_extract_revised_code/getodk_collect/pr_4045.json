{"pr_number": 4045, "pr_title": "Fixed handling translations", "pr_createdAt": "2020-08-26T11:17:12Z", "pr_url": "https://github.com/getodk/collect/pull/4045", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0NTMzOQ==", "url": "https://github.com/getodk/collect/pull/4045#discussion_r479145339", "bodyText": "We can actually use the context param here instead of Collect.getInstance()", "author": "seadowg", "createdAt": "2020-08-28T11:14:24Z", "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/AutoSendTaskSpec.java", "diffHunk": "@@ -102,10 +103,10 @@\n                     } catch (SubmitException e) {\n                         switch (e.getType()) {\n                             case GOOGLE_ACCOUNT_NOT_SET:\n-                                notifier.onSubmission(true, Collect.getInstance().getString(R.string.google_set_account));\n+                                notifier.onSubmission(true, TranslationHandler.getString(Collect.getInstance(), R.string.google_set_account));", "originalCommit": "a87f182f8e65151705e67629be64a0e9cf7cf800", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4NzczOQ==", "url": "https://github.com/getodk/collect/pull/4045#discussion_r485687739", "bodyText": "Done.", "author": "grzesiek2010", "createdAt": "2020-09-09T15:07:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0NTMzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "ab4602315e6e10746001b3ffa169036974232c60", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/backgroundwork/AutoSendTaskSpec.java b/collect_app/src/main/java/org/odk/collect/android/backgroundwork/AutoSendTaskSpec.java\nindex 68b85ac15b..e7906917b9 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/backgroundwork/AutoSendTaskSpec.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/backgroundwork/AutoSendTaskSpec.java\n\n@@ -98,15 +105,15 @@ public class AutoSendTaskSpec implements TaskSpec {\n             return changeLock.withLock(acquiredLock -> {\n                 if (acquiredLock) {\n                     try {\n-                        Pair<Boolean, String> results = new InstanceSubmitter(analytics).submitUnsubmittedInstances();\n+                        Pair<Boolean, String> results = new InstanceSubmitter(analytics, formsRepository, instancesRepository).submitUnsubmittedInstances();\n                         notifier.onSubmission(results.first, results.second);\n                     } catch (SubmitException e) {\n                         switch (e.getType()) {\n                             case GOOGLE_ACCOUNT_NOT_SET:\n-                                notifier.onSubmission(true, TranslationHandler.getString(Collect.getInstance(), R.string.google_set_account));\n+                                notifier.onSubmission(true, context.getString(R.string.google_set_account));\n                                 break;\n                             case GOOGLE_ACCOUNT_NOT_PERMITTED:\n-                                notifier.onSubmission(true, TranslationHandler.getString(Collect.getInstance(), R.string.odk_permissions_fail));\n+                                notifier.onSubmission(true, context.getString(R.string.odk_permissions_fail));\n                                 break;\n                             case NOTHING_TO_SUBMIT:\n                                 break;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0Njg5Mw==", "url": "https://github.com/getodk/collect/pull/4045#discussion_r479146893", "bodyText": "This method could take a Context param in our just be inlined it looks like as it's only called from one place that has access to Application.", "author": "seadowg", "createdAt": "2020-08-28T11:15:49Z", "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/BackgroundWorkUtils.java", "diffHunk": "@@ -15,13 +16,13 @@ private BackgroundWorkUtils() {\n     }\n \n     public static long getPeriodInMilliseconds(String period) {\n-        if (period.equals(Collect.getInstance().getString(R.string.every_one_hour_value))) {\n+        if (period.equals(TranslationHandler.getString(Collect.getInstance(), R.string.every_one_hour_value))) {", "originalCommit": "a87f182f8e65151705e67629be64a0e9cf7cf800", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwMDE5MA==", "url": "https://github.com/getodk/collect/pull/4045#discussion_r485700190", "bodyText": "Done.", "author": "grzesiek2010", "createdAt": "2020-09-09T15:24:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0Njg5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ab4602315e6e10746001b3ffa169036974232c60", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/backgroundwork/BackgroundWorkUtils.java b/collect_app/src/main/java/org/odk/collect/android/backgroundwork/BackgroundWorkUtils.java\nindex 2b0e5b23cc..4191a90f8f 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/backgroundwork/BackgroundWorkUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/backgroundwork/BackgroundWorkUtils.java\n\n@@ -15,14 +16,14 @@ public class BackgroundWorkUtils {\n \n     }\n \n-    public static long getPeriodInMilliseconds(String period) {\n-        if (period.equals(TranslationHandler.getString(Collect.getInstance(), R.string.every_one_hour_value))) {\n+    public static long getPeriodInMilliseconds(String period, Context context) {\n+        if (period.equals(TranslationHandler.getString(context, R.string.every_one_hour_value))) {\n             return ONE_HOUR_PERIOD;\n-        } else if (period.equals(TranslationHandler.getString(Collect.getInstance(), R.string.every_six_hours_value))) {\n+        } else if (period.equals(TranslationHandler.getString(context, R.string.every_six_hours_value))) {\n             return SIX_HOURS_PERIOD;\n-        } else if (period.equals(TranslationHandler.getString(Collect.getInstance(), R.string.every_24_hours_value))) {\n+        } else if (period.equals(TranslationHandler.getString(context, R.string.every_24_hours_value))) {\n             return ONE_DAY_PERIOD;\n-        } else if (period.equals(TranslationHandler.getString(Collect.getInstance(), R.string.every_fifteen_minutes_value))) {\n+        } else if (period.equals(TranslationHandler.getString(context, R.string.every_fifteen_minutes_value))) {\n             return FIFTEEN_MINUTES_PERIOD;\n         } else {\n             throw new IllegalArgumentException();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE1Mjg3NA==", "url": "https://github.com/getodk/collect/pull/4045#discussion_r479152874", "bodyText": "I think it'd still be nice for this object to take in Context as a constructor dependency so it doesn't have to rely on Collect.getInstance()", "author": "seadowg", "createdAt": "2020-08-28T11:21:20Z", "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/FormApiExceptionMapper.java", "diffHunk": "@@ -1,23 +1,17 @@\n package org.odk.collect.android.formmanagement;\n \n-import android.content.res.Resources;\n-\n import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.openrosa.api.FormApiException;\n+import org.odk.collect.android.utilities.TranslationHandler;\n \n public class FormApiExceptionMapper {\n \n-    private final Resources resources;\n-\n-    public FormApiExceptionMapper(Resources resources) {", "originalCommit": "bc918d1491dcddcbf2d8bb182deb6438220c32e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4Nzk2MQ==", "url": "https://github.com/getodk/collect/pull/4045#discussion_r485687961", "bodyText": "Done.", "author": "grzesiek2010", "createdAt": "2020-09-09T15:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE1Mjg3NA=="}], "type": "inlineReview", "revised_code": {"commit": "ab4602315e6e10746001b3ffa169036974232c60", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/formmanagement/FormApiExceptionMapper.java b/collect_app/src/main/java/org/odk/collect/android/formmanagement/FormApiExceptionMapper.java\nindex 2f6eaed692..06bb7710d5 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/formmanagement/FormApiExceptionMapper.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/formmanagement/FormApiExceptionMapper.java\n\n@@ -1,17 +1,27 @@\n package org.odk.collect.android.formmanagement;\n \n+import android.content.Context;\n+\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.openrosa.api.FormApiException;\n import org.odk.collect.android.utilities.TranslationHandler;\n \n public class FormApiExceptionMapper {\n \n+    private final Context context;\n+\n+    public FormApiExceptionMapper(Context context) {\n+        this.context = context;\n+    }\n+\n     public String getMessage(FormApiException exception) {\n-        if (exception.getType() == FormApiException.Type.UNKNOWN_HOST) {\n-            return TranslationHandler.getString(Collect.getInstance(), R.string.unknown_host_error, exception.getServerUrl()) + \" \" + TranslationHandler.getString(Collect.getInstance(), R.string.report_to_project_lead);\n+        switch (exception.getType()) {\n+            case UNREACHABLE:\n+                return TranslationHandler.getString(context, R.string.unreachable_error, exception.getServerUrl()) + \" \" + TranslationHandler.getString(context, R.string.report_to_project_lead);\n+            case SECURITY_ERROR:\n+                return TranslationHandler.getString(context, R.string.security_error, exception.getServerUrl()) + \" \" + TranslationHandler.getString(context, R.string.report_to_project_lead);\n+            default:\n+                return TranslationHandler.getString(context, R.string.report_to_project_lead);\n         }\n-\n-        return TranslationHandler.getString(Collect.getInstance(), R.string.report_to_project_lead);\n     }\n }\n"}}, {"oid": "ab4602315e6e10746001b3ffa169036974232c60", "url": "https://github.com/getodk/collect/commit/ab4602315e6e10746001b3ffa169036974232c60", "message": "Code improvements", "committedDate": "2020-09-09T13:33:08Z", "type": "forcePushed"}, {"oid": "9ab380d74108b3b29bd2c03a3988977e037711b1", "url": "https://github.com/getodk/collect/commit/9ab380d74108b3b29bd2c03a3988977e037711b1", "message": "Added TranslationHandler class", "committedDate": "2020-09-23T10:04:31Z", "type": "commit"}, {"oid": "e9ba944a55c73418b23129edfe65e9ce35d2ba06", "url": "https://github.com/getodk/collect/commit/e9ba944a55c73418b23129edfe65e9ce35d2ba06", "message": "Don't use application context to get strings if not necessary", "committedDate": "2020-09-23T10:04:32Z", "type": "commit"}, {"oid": "e5f7ef5cba36c7503b9172212060bef0e3d421ad", "url": "https://github.com/getodk/collect/commit/e5f7ef5cba36c7503b9172212060bef0e3d421ad", "message": "Fixed pmd", "committedDate": "2020-09-23T10:04:32Z", "type": "commit"}, {"oid": "3a075aca103bc89f88026a4bbde6e381676e9035", "url": "https://github.com/getodk/collect/commit/3a075aca103bc89f88026a4bbde6e381676e9035", "message": "Use TranslationHandler wherever it's needed", "committedDate": "2020-09-23T10:06:21Z", "type": "commit"}, {"oid": "7d2c4c5b1ca7975b8aa7a4f78e886203918ad393", "url": "https://github.com/getodk/collect/commit/7d2c4c5b1ca7975b8aa7a4f78e886203918ad393", "message": "Cleared NotificationManagerNotifier", "committedDate": "2020-09-23T10:06:21Z", "type": "commit"}, {"oid": "ae2c35b7e6ab1a932c65c32b5ac40823bdbada7c", "url": "https://github.com/getodk/collect/commit/ae2c35b7e6ab1a932c65c32b5ac40823bdbada7c", "message": "Code improvements", "committedDate": "2020-09-23T10:06:21Z", "type": "commit"}, {"oid": "ae2c35b7e6ab1a932c65c32b5ac40823bdbada7c", "url": "https://github.com/getodk/collect/commit/ae2c35b7e6ab1a932c65c32b5ac40823bdbada7c", "message": "Code improvements", "committedDate": "2020-09-23T10:06:21Z", "type": "forcePushed"}]}