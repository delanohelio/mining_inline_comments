{"pr_number": 3661, "pr_title": "Show that form updates are available with Google Drive as server", "pr_createdAt": "2020-02-29T10:33:24Z", "pr_url": "https://github.com/getodk/collect/pull/3661", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjUyNg==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396422526", "bodyText": "If you already have cursor it's better to read lastModifiedLocal from its DATE column.", "author": "grzesiek2010", "createdAt": "2020-03-23T12:44:23Z", "path": "collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java", "diffHunk": "@@ -103,4 +115,15 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {\n         holder.onBind(items.get(position));\n         return view;\n     }\n+\n+    private boolean isNewVersion(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(Collect.FORMS_PATH + File.separator + item.getName());\n+        if (cursor != null && cursor.getCount() > 0) {\n+            Long lastModifiedLocal = new File(Collect.FORMS_PATH + File.separator + item.getName()).lastModified();", "originalCommit": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ0MTM5OQ==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396441399", "bodyText": "I tried using that but that poses a problem. Since in this case we do not have access to md5 or any other form specific data it is possible that the form available on google drive is essentially the same form(not an update!) but it would show as an update to the user because we're comparing modified time on gdrive and so if the user chooses to download that form, the database doesn't update(because we have md5 check there) so the DATE column also doesn't update, so the user will still see that the update is available any number of times he downloads the form.", "author": "chidauri", "createdAt": "2020-03-23T13:16:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjUyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5MTA0OA==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r418991048", "bodyText": "@grzesiek2010 can we ever face the problem i mentioned above or we're fine using DATE column??", "author": "chidauri", "createdAt": "2020-05-02T18:22:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjUyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE2MzEzNw==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r419163137", "bodyText": "@chidauri this would happen if a user did something like change the form definition and then change their mind and change it back, right? That seems like an uncommon enough scenario that I wouldn\u2019t worry about it. Is there another case that would be affected?\nThere is possible weirdness if the user\u2019s device has the wrong date/time, around daylight savings boundaries and if the device is in a time zone other than the one Google Dive is in but I think these are ok to document and not worry about.", "author": "lognaturel", "createdAt": "2020-05-03T21:31:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjUyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMDI5MQ==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r420110291", "bodyText": "@lognaturel this would also happen if we upload the form we already have to google drive. Also, is it fine to use last modified time for media files too?", "author": "chidauri", "createdAt": "2020-05-05T13:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjUyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQxNDI5NA==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r421414294", "bodyText": "Oh I see thanks for the explanation. In this case leaving this as is seems fine to me.", "author": "grzesiek2010", "createdAt": "2020-05-07T10:51:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjUyNg=="}], "type": "inlineReview", "revised_code": {"commit": "285e3210804ab14a49fcba5a64d560c2234821c3", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java b/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\nindex c0f41fcb8..22ea944e7 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\n\n@@ -115,15 +107,4 @@ public class FileArrayAdapter extends ArrayAdapter<DriveListItem> {\n         holder.onBind(items.get(position));\n         return view;\n     }\n-\n-    private boolean isNewVersion(DriveListItem item) {\n-        FormsDao formsDao = new FormsDao();\n-        Cursor cursor = formsDao.getFormsCursorForFormFilePath(Collect.FORMS_PATH + File.separator + item.getName());\n-        if (cursor != null && cursor.getCount() > 0) {\n-            Long lastModifiedLocal = new File(Collect.FORMS_PATH + File.separator + item.getName()).lastModified();\n-            Long lastModifiedServer = item.getDate().getValue();\n-            return lastModifiedServer > lastModifiedLocal;\n-        }\n-        return false;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMzQ0NQ==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396423445", "bodyText": "I think it's better to use cursor != null && cursor.moveToFirst() like we do in other places. cursor.moveToFirst() will return false if cursor.getCount() <= 0 and make sure you are at the first position.", "author": "grzesiek2010", "createdAt": "2020-03-23T12:46:01Z", "path": "collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java", "diffHunk": "@@ -103,4 +115,15 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {\n         holder.onBind(items.get(position));\n         return view;\n     }\n+\n+    private boolean isNewVersion(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(Collect.FORMS_PATH + File.separator + item.getName());\n+        if (cursor != null && cursor.getCount() > 0) {", "originalCommit": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "285e3210804ab14a49fcba5a64d560c2234821c3", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java b/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\nindex c0f41fcb8..22ea944e7 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\n\n@@ -115,15 +107,4 @@ public class FileArrayAdapter extends ArrayAdapter<DriveListItem> {\n         holder.onBind(items.get(position));\n         return view;\n     }\n-\n-    private boolean isNewVersion(DriveListItem item) {\n-        FormsDao formsDao = new FormsDao();\n-        Cursor cursor = formsDao.getFormsCursorForFormFilePath(Collect.FORMS_PATH + File.separator + item.getName());\n-        if (cursor != null && cursor.getCount() > 0) {\n-            Long lastModifiedLocal = new File(Collect.FORMS_PATH + File.separator + item.getName()).lastModified();\n-            Long lastModifiedServer = item.getDate().getValue();\n-            return lastModifiedServer > lastModifiedLocal;\n-        }\n-        return false;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNTkxMg==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396425912", "bodyText": "The view is gone by default but we need to set it here to avoid problem while scrolling when elements are reused am I right?", "author": "grzesiek2010", "createdAt": "2020-03-23T12:50:13Z", "path": "collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java", "diffHunk": "@@ -76,10 +82,16 @@ void onBind(DriveListItem item) {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.form_state_blank);\n                 imageView.setImageDrawable(d);\n                 checkBox.setVisibility(View.VISIBLE);\n+                if (isNewVersion(item)) {\n+                    formUpdateAlert.setVisibility(View.VISIBLE);\n+                } else {\n+                    formUpdateAlert.setVisibility(View.GONE);\n+                }\n             } else {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.ic_folder);\n                 imageView.setImageDrawable(d);\n                 checkBox.setVisibility(View.GONE);\n+                formUpdateAlert.setVisibility(View.GONE);", "originalCommit": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5MDUzMA==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r418990530", "bodyText": "yep, absolutely right!", "author": "chidauri", "createdAt": "2020-05-02T18:17:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNTkxMg=="}], "type": "inlineReview", "revised_code": {"commit": "285e3210804ab14a49fcba5a64d560c2234821c3", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java b/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\nindex c0f41fcb8..22ea944e7 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\n\n@@ -82,11 +78,7 @@ public class FileArrayAdapter extends ArrayAdapter<DriveListItem> {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.form_state_blank);\n                 imageView.setImageDrawable(d);\n                 checkBox.setVisibility(View.VISIBLE);\n-                if (isNewVersion(item)) {\n-                    formUpdateAlert.setVisibility(View.VISIBLE);\n-                } else {\n-                    formUpdateAlert.setVisibility(View.GONE);\n-                }\n+                formUpdateAlert.setVisibility(item.isNewerVersion() ? View.VISIBLE : View.GONE);\n             } else {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.ic_folder);\n                 imageView.setImageDrawable(d);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNjgwNA==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396426804", "bodyText": "If gone is needed at all here (depends on my question below since it;s the same case) I would prefer using ternary operator: formUpdateAlert.setVisibility(isNewVersion(item) ? View.VISIBLE : View.GONE);", "author": "grzesiek2010", "createdAt": "2020-03-23T12:51:54Z", "path": "collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java", "diffHunk": "@@ -76,10 +82,16 @@ void onBind(DriveListItem item) {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.form_state_blank);\n                 imageView.setImageDrawable(d);\n                 checkBox.setVisibility(View.VISIBLE);\n+                if (isNewVersion(item)) {\n+                    formUpdateAlert.setVisibility(View.VISIBLE);\n+                } else {\n+                    formUpdateAlert.setVisibility(View.GONE);", "originalCommit": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "285e3210804ab14a49fcba5a64d560c2234821c3", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java b/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\nindex c0f41fcb8..22ea944e7 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java\n\n@@ -82,11 +78,7 @@ public class FileArrayAdapter extends ArrayAdapter<DriveListItem> {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.form_state_blank);\n                 imageView.setImageDrawable(d);\n                 checkBox.setVisibility(View.VISIBLE);\n-                if (isNewVersion(item)) {\n-                    formUpdateAlert.setVisibility(View.VISIBLE);\n-                } else {\n-                    formUpdateAlert.setVisibility(View.GONE);\n-                }\n+                formUpdateAlert.setVisibility(item.isNewerVersion() ? View.VISIBLE : View.GONE);\n             } else {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.ic_folder);\n                 imageView.setImageDrawable(d);\n"}}, {"oid": "285e3210804ab14a49fcba5a64d560c2234821c3", "url": "https://github.com/getodk/collect/commit/285e3210804ab14a49fcba5a64d560c2234821c3", "message": "check for updated media files", "committedDate": "2020-05-07T15:36:07Z", "type": "forcePushed"}, {"oid": "2e2ac402cc0c288a8dfbabfa6f3ec9fbd09e8ec2", "url": "https://github.com/getodk/collect/commit/2e2ac402cc0c288a8dfbabfa6f3ec9fbd09e8ec2", "message": "check for updated media files", "committedDate": "2020-05-07T15:59:45Z", "type": "forcePushed"}, {"oid": "431caa7c172e43af04cf23e04784e08a94427f74", "url": "https://github.com/getodk/collect/commit/431caa7c172e43af04cf23e04784e08a94427f74", "message": "show if a form is an update in google drive", "committedDate": "2020-05-07T16:15:32Z", "type": "commit"}, {"oid": "68d5e5de57126fa6996461acebed4da6f2d2017d", "url": "https://github.com/getodk/collect/commit/68d5e5de57126fa6996461acebed4da6f2d2017d", "message": "Fix pmd issues", "committedDate": "2020-05-07T16:15:32Z", "type": "commit"}, {"oid": "6a10a9d56173fe74971587c37c95b18dc727565d", "url": "https://github.com/getodk/collect/commit/6a10a9d56173fe74971587c37c95b18dc727565d", "message": "fix for folders", "committedDate": "2020-05-07T16:15:32Z", "type": "commit"}, {"oid": "f2a217d6a990836c0614c9b9acbabe71d3f0325c", "url": "https://github.com/getodk/collect/commit/f2a217d6a990836c0614c9b9acbabe71d3f0325c", "message": "change last modified to use java file system", "committedDate": "2020-05-07T16:15:32Z", "type": "commit"}, {"oid": "dda27e7131a07cc721660f127bb13cc74f0b0301", "url": "https://github.com/getodk/collect/commit/dda27e7131a07cc721660f127bb13cc74f0b0301", "message": "Code Refactoring", "committedDate": "2020-05-07T16:15:32Z", "type": "commit"}, {"oid": "6cbd50f1de9184762c08c7462caac62d060c89fc", "url": "https://github.com/getodk/collect/commit/6cbd50f1de9184762c08c7462caac62d060c89fc", "message": "check for updated media files", "committedDate": "2020-05-07T16:20:06Z", "type": "commit"}, {"oid": "fe35248e3261e8dd850e64d8b5b90f3f53ce6c4d", "url": "https://github.com/getodk/collect/commit/fe35248e3261e8dd850e64d8b5b90f3f53ce6c4d", "message": "update forms path", "committedDate": "2020-05-07T17:40:25Z", "type": "commit"}, {"oid": "fe35248e3261e8dd850e64d8b5b90f3f53ce6c4d", "url": "https://github.com/getodk/collect/commit/fe35248e3261e8dd850e64d8b5b90f3f53ce6c4d", "message": "update forms path", "committedDate": "2020-05-07T17:40:25Z", "type": "forcePushed"}, {"oid": "0fa37e99b247f9b1e54603073f6fca0d174dd389", "url": "https://github.com/getodk/collect/commit/0fa37e99b247f9b1e54603073f6fca0d174dd389", "message": "fix back button behaviour", "committedDate": "2020-05-08T04:11:40Z", "type": "commit"}, {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa", "url": "https://github.com/getodk/collect/commit/adba127c67e942d74473cbd081602c9953dd1dfa", "message": "refactoring", "committedDate": "2020-05-08T05:56:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyMTY3OQ==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r422121679", "bodyText": "What is it for? I think it's not related to this issue.", "author": "grzesiek2010", "createdAt": "2020-05-08T12:44:35Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -559,7 +562,7 @@ public void onClick(View v) {\n                     if (folderIdStack.empty()) {\n                         parentId = ROOT_KEY;\n                     } else {\n-                        parentId = folderIdStack.pop();\n+                        parentId = folderIdStack.peek();", "originalCommit": "adba127c67e942d74473cbd081602c9953dd1dfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE0MDYzNw==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r422140637", "bodyText": "This fixes the back button behaviour, before this change if we clicked on some folder and returned back to parent folder, the update messages on the forms were gone.", "author": "chidauri", "createdAt": "2020-05-08T13:24:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyMTY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE0NTczMA==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r422145730", "bodyText": "Though i wonder why navigating up and down the hierarchy of folders was fine.", "author": "chidauri", "createdAt": "2020-05-08T13:34:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyMTY3OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwODQyNg==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426508426", "bodyText": "The cursor should be closed/ You can use try-with-resources for that.", "author": "grzesiek2010", "createdAt": "2020-05-18T09:56:32Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -729,47 +739,107 @@ protected void onPostExecute(HashMap<String, Object> results) {\n             }\n         }\n \n-        @SafeVarargs\n-        @Override\n-        protected final void onProgressUpdate(HashMap<String, Object>... values) {\n-            super.onProgressUpdate(values);\n-            List<com.google.api.services.drive.model.File> fileList =\n-                    (List<com.google.api.services.drive.model.File>) values[0]\n-                            .get(FILE_LIST_KEY);\n-            String parentId = (String) values[0].get(PARENT_ID_KEY);\n-            String currentDir = (String) values[0].get(CURRENT_ID_KEY);\n-\n-            List<DriveListItem> dirs = new ArrayList<>();\n-            List<DriveListItem> forms = new ArrayList<>();\n-\n-            for (com.google.api.services.drive.model.File f : fileList) {\n-                String type = f.getMimeType();\n-                switch (type) {\n-                    case \"application/xml\":\n-                    case \"text/xml\":\n-                    case \"application/xhtml\":\n-                    case \"text/xhtml\":\n-                    case \"application/xhtml+xml\":\n-                        forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.FILE, f.getId(), currentDir));\n-                        break;\n-                    case \"application/vnd.google-apps.folder\":\n-                        dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.DIR, f.getId(), parentId));\n-                        break;\n-                    default:\n-                        // skip the rest of the files\n-                        break;\n+    }\n+\n+    private void filterForms(HashMap<String, Object> pageDetails) {\n+        List<com.google.api.services.drive.model.File> fileList =\n+                (List<com.google.api.services.drive.model.File>) pageDetails.get(FILE_LIST_KEY);\n+        String parentId = (String) pageDetails.get(PARENT_ID_KEY);\n+        String currentDir = (String) pageDetails.get(CURRENT_ID_KEY);\n+\n+        List<DriveListItem> dirs = new ArrayList<>();\n+        List<DriveListItem> forms = new ArrayList<>();\n+\n+        for (com.google.api.services.drive.model.File f : fileList) {\n+            String type = f.getMimeType();\n+            switch (type) {\n+                case \"application/xml\":\n+                case \"text/xml\":\n+                case \"application/xhtml\":\n+                case \"text/xhtml\":\n+                case \"application/xhtml+xml\":\n+                    forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.FILE, f.getId(), currentDir));\n+                    break;\n+                case \"application/vnd.google-apps.folder\":\n+                    dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.DIR, f.getId(), parentId));\n+                    break;\n+                default:\n+                    // skip the rest of the files\n+                    break;\n+            }\n+        }\n+        Collections.sort(dirs);\n+        Collections.sort(forms);\n+        driveList.addAll(dirs);\n+        driveList.addAll(forms);\n+        checkFormUpdates();\n+    }\n+\n+    private void checkFormUpdates() {\n+        for (DriveListItem item: driveList) {\n+            if (item.getType() == DriveListItem.FILE) {\n+                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+                    item.setNewerVersion(true);\n                 }\n             }\n-            Collections.sort(dirs);\n-            Collections.sort(forms);\n-            driveList.addAll(dirs);\n-            driveList.addAll(forms);\n-            updateAdapter();\n         }\n     }\n \n+    private boolean isNewerFormVersionAvailable(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());", "originalCommit": "adba127c67e942d74473cbd081602c9953dd1dfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d8201f34d816c7138f714f28704f60638fdd852", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\nindex c8d9c3fbc..50549a72a 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n\n@@ -779,21 +782,20 @@ public class GoogleDriveActivity extends FormListActivity implements View.OnClic\n \n     private void checkFormUpdates() {\n         for (DriveListItem item: driveList) {\n-            if (item.getType() == DriveListItem.FILE) {\n-                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+            if (item.getType() == DriveListItem.FILE && (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item))) {\n                     item.setNewerVersion(true);\n-                }\n             }\n         }\n     }\n \n     private boolean isNewerFormVersionAvailable(DriveListItem item) {\n         FormsDao formsDao = new FormsDao();\n-        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());\n-        if (cursor != null && cursor.moveToFirst()) {\n-            Long lastModifiedLocal = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n-            Long lastModifiedServer = item.getDate().getValue();\n-            return lastModifiedServer > lastModifiedLocal;\n+        try (Cursor cursor = formsDao.getFormsCursorForFormFilePath(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName())) {\n+            if (cursor != null && cursor.moveToFirst()) {\n+                Long lastModifiedLocal = new File(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n+                Long lastModifiedServer = item.getDate().getValue();\n+                return lastModifiedServer > lastModifiedLocal;\n+            }\n         }\n         return false;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxNzIyOQ==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426517229", "bodyText": "I think it;s time to use injected StoragePathProvider because in many places we use new StoragePathProvider(). It's already available in AppDependencyModule and this activity is also ready to handle injected objects https://github.com/getodk/collect/blob/master/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java#L127 so you can just use it like we do with GoogleAccountsManager for example.", "author": "grzesiek2010", "createdAt": "2020-05-18T10:11:26Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -729,47 +739,107 @@ protected void onPostExecute(HashMap<String, Object> results) {\n             }\n         }\n \n-        @SafeVarargs\n-        @Override\n-        protected final void onProgressUpdate(HashMap<String, Object>... values) {\n-            super.onProgressUpdate(values);\n-            List<com.google.api.services.drive.model.File> fileList =\n-                    (List<com.google.api.services.drive.model.File>) values[0]\n-                            .get(FILE_LIST_KEY);\n-            String parentId = (String) values[0].get(PARENT_ID_KEY);\n-            String currentDir = (String) values[0].get(CURRENT_ID_KEY);\n-\n-            List<DriveListItem> dirs = new ArrayList<>();\n-            List<DriveListItem> forms = new ArrayList<>();\n-\n-            for (com.google.api.services.drive.model.File f : fileList) {\n-                String type = f.getMimeType();\n-                switch (type) {\n-                    case \"application/xml\":\n-                    case \"text/xml\":\n-                    case \"application/xhtml\":\n-                    case \"text/xhtml\":\n-                    case \"application/xhtml+xml\":\n-                        forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.FILE, f.getId(), currentDir));\n-                        break;\n-                    case \"application/vnd.google-apps.folder\":\n-                        dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.DIR, f.getId(), parentId));\n-                        break;\n-                    default:\n-                        // skip the rest of the files\n-                        break;\n+    }\n+\n+    private void filterForms(HashMap<String, Object> pageDetails) {\n+        List<com.google.api.services.drive.model.File> fileList =\n+                (List<com.google.api.services.drive.model.File>) pageDetails.get(FILE_LIST_KEY);\n+        String parentId = (String) pageDetails.get(PARENT_ID_KEY);\n+        String currentDir = (String) pageDetails.get(CURRENT_ID_KEY);\n+\n+        List<DriveListItem> dirs = new ArrayList<>();\n+        List<DriveListItem> forms = new ArrayList<>();\n+\n+        for (com.google.api.services.drive.model.File f : fileList) {\n+            String type = f.getMimeType();\n+            switch (type) {\n+                case \"application/xml\":\n+                case \"text/xml\":\n+                case \"application/xhtml\":\n+                case \"text/xhtml\":\n+                case \"application/xhtml+xml\":\n+                    forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.FILE, f.getId(), currentDir));\n+                    break;\n+                case \"application/vnd.google-apps.folder\":\n+                    dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.DIR, f.getId(), parentId));\n+                    break;\n+                default:\n+                    // skip the rest of the files\n+                    break;\n+            }\n+        }\n+        Collections.sort(dirs);\n+        Collections.sort(forms);\n+        driveList.addAll(dirs);\n+        driveList.addAll(forms);\n+        checkFormUpdates();\n+    }\n+\n+    private void checkFormUpdates() {\n+        for (DriveListItem item: driveList) {\n+            if (item.getType() == DriveListItem.FILE) {\n+                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+                    item.setNewerVersion(true);\n                 }\n             }\n-            Collections.sort(dirs);\n-            Collections.sort(forms);\n-            driveList.addAll(dirs);\n-            driveList.addAll(forms);\n-            updateAdapter();\n         }\n     }\n \n+    private boolean isNewerFormVersionAvailable(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());\n+        if (cursor != null && cursor.moveToFirst()) {\n+            Long lastModifiedLocal = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();", "originalCommit": "adba127c67e942d74473cbd081602c9953dd1dfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d8201f34d816c7138f714f28704f60638fdd852", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\nindex c8d9c3fbc..50549a72a 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n\n@@ -779,21 +782,20 @@ public class GoogleDriveActivity extends FormListActivity implements View.OnClic\n \n     private void checkFormUpdates() {\n         for (DriveListItem item: driveList) {\n-            if (item.getType() == DriveListItem.FILE) {\n-                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+            if (item.getType() == DriveListItem.FILE && (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item))) {\n                     item.setNewerVersion(true);\n-                }\n             }\n         }\n     }\n \n     private boolean isNewerFormVersionAvailable(DriveListItem item) {\n         FormsDao formsDao = new FormsDao();\n-        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());\n-        if (cursor != null && cursor.moveToFirst()) {\n-            Long lastModifiedLocal = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n-            Long lastModifiedServer = item.getDate().getValue();\n-            return lastModifiedServer > lastModifiedLocal;\n+        try (Cursor cursor = formsDao.getFormsCursorForFormFilePath(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName())) {\n+            if (cursor != null && cursor.moveToFirst()) {\n+                Long lastModifiedLocal = new File(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n+                Long lastModifiedServer = item.getDate().getValue();\n+                return lastModifiedServer > lastModifiedLocal;\n+            }\n         }\n         return false;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxOTk4Mg==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426519982", "bodyText": "Please merge those two nested if statements. It can be just one.", "author": "grzesiek2010", "createdAt": "2020-05-18T10:16:28Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -729,47 +739,107 @@ protected void onPostExecute(HashMap<String, Object> results) {\n             }\n         }\n \n-        @SafeVarargs\n-        @Override\n-        protected final void onProgressUpdate(HashMap<String, Object>... values) {\n-            super.onProgressUpdate(values);\n-            List<com.google.api.services.drive.model.File> fileList =\n-                    (List<com.google.api.services.drive.model.File>) values[0]\n-                            .get(FILE_LIST_KEY);\n-            String parentId = (String) values[0].get(PARENT_ID_KEY);\n-            String currentDir = (String) values[0].get(CURRENT_ID_KEY);\n-\n-            List<DriveListItem> dirs = new ArrayList<>();\n-            List<DriveListItem> forms = new ArrayList<>();\n-\n-            for (com.google.api.services.drive.model.File f : fileList) {\n-                String type = f.getMimeType();\n-                switch (type) {\n-                    case \"application/xml\":\n-                    case \"text/xml\":\n-                    case \"application/xhtml\":\n-                    case \"text/xhtml\":\n-                    case \"application/xhtml+xml\":\n-                        forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.FILE, f.getId(), currentDir));\n-                        break;\n-                    case \"application/vnd.google-apps.folder\":\n-                        dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.DIR, f.getId(), parentId));\n-                        break;\n-                    default:\n-                        // skip the rest of the files\n-                        break;\n+    }\n+\n+    private void filterForms(HashMap<String, Object> pageDetails) {\n+        List<com.google.api.services.drive.model.File> fileList =\n+                (List<com.google.api.services.drive.model.File>) pageDetails.get(FILE_LIST_KEY);\n+        String parentId = (String) pageDetails.get(PARENT_ID_KEY);\n+        String currentDir = (String) pageDetails.get(CURRENT_ID_KEY);\n+\n+        List<DriveListItem> dirs = new ArrayList<>();\n+        List<DriveListItem> forms = new ArrayList<>();\n+\n+        for (com.google.api.services.drive.model.File f : fileList) {\n+            String type = f.getMimeType();\n+            switch (type) {\n+                case \"application/xml\":\n+                case \"text/xml\":\n+                case \"application/xhtml\":\n+                case \"text/xhtml\":\n+                case \"application/xhtml+xml\":\n+                    forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.FILE, f.getId(), currentDir));\n+                    break;\n+                case \"application/vnd.google-apps.folder\":\n+                    dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.DIR, f.getId(), parentId));\n+                    break;\n+                default:\n+                    // skip the rest of the files\n+                    break;\n+            }\n+        }\n+        Collections.sort(dirs);\n+        Collections.sort(forms);\n+        driveList.addAll(dirs);\n+        driveList.addAll(forms);\n+        checkFormUpdates();\n+    }\n+\n+    private void checkFormUpdates() {\n+        for (DriveListItem item: driveList) {\n+            if (item.getType() == DriveListItem.FILE) {\n+                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {", "originalCommit": "adba127c67e942d74473cbd081602c9953dd1dfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d8201f34d816c7138f714f28704f60638fdd852", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\nindex c8d9c3fbc..50549a72a 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n\n@@ -779,21 +782,20 @@ public class GoogleDriveActivity extends FormListActivity implements View.OnClic\n \n     private void checkFormUpdates() {\n         for (DriveListItem item: driveList) {\n-            if (item.getType() == DriveListItem.FILE) {\n-                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+            if (item.getType() == DriveListItem.FILE && (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item))) {\n                     item.setNewerVersion(true);\n-                }\n             }\n         }\n     }\n \n     private boolean isNewerFormVersionAvailable(DriveListItem item) {\n         FormsDao formsDao = new FormsDao();\n-        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());\n-        if (cursor != null && cursor.moveToFirst()) {\n-            Long lastModifiedLocal = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n-            Long lastModifiedServer = item.getDate().getValue();\n-            return lastModifiedServer > lastModifiedLocal;\n+        try (Cursor cursor = formsDao.getFormsCursorForFormFilePath(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName())) {\n+            if (cursor != null && cursor.moveToFirst()) {\n+                Long lastModifiedLocal = new File(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n+                Long lastModifiedServer = item.getDate().getValue();\n+                return lastModifiedServer > lastModifiedLocal;\n+            }\n         }\n         return false;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyMjQzMQ==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426522431", "bodyText": "I would log it as a warning not an error so Timber.w(e); Since it's not something very important and on the other hand not necessarily our fault.", "author": "grzesiek2010", "createdAt": "2020-05-18T10:20:58Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -729,47 +739,107 @@ protected void onPostExecute(HashMap<String, Object> results) {\n             }\n         }\n \n-        @SafeVarargs\n-        @Override\n-        protected final void onProgressUpdate(HashMap<String, Object>... values) {\n-            super.onProgressUpdate(values);\n-            List<com.google.api.services.drive.model.File> fileList =\n-                    (List<com.google.api.services.drive.model.File>) values[0]\n-                            .get(FILE_LIST_KEY);\n-            String parentId = (String) values[0].get(PARENT_ID_KEY);\n-            String currentDir = (String) values[0].get(CURRENT_ID_KEY);\n-\n-            List<DriveListItem> dirs = new ArrayList<>();\n-            List<DriveListItem> forms = new ArrayList<>();\n-\n-            for (com.google.api.services.drive.model.File f : fileList) {\n-                String type = f.getMimeType();\n-                switch (type) {\n-                    case \"application/xml\":\n-                    case \"text/xml\":\n-                    case \"application/xhtml\":\n-                    case \"text/xhtml\":\n-                    case \"application/xhtml+xml\":\n-                        forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.FILE, f.getId(), currentDir));\n-                        break;\n-                    case \"application/vnd.google-apps.folder\":\n-                        dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.DIR, f.getId(), parentId));\n-                        break;\n-                    default:\n-                        // skip the rest of the files\n-                        break;\n+    }\n+\n+    private void filterForms(HashMap<String, Object> pageDetails) {\n+        List<com.google.api.services.drive.model.File> fileList =\n+                (List<com.google.api.services.drive.model.File>) pageDetails.get(FILE_LIST_KEY);\n+        String parentId = (String) pageDetails.get(PARENT_ID_KEY);\n+        String currentDir = (String) pageDetails.get(CURRENT_ID_KEY);\n+\n+        List<DriveListItem> dirs = new ArrayList<>();\n+        List<DriveListItem> forms = new ArrayList<>();\n+\n+        for (com.google.api.services.drive.model.File f : fileList) {\n+            String type = f.getMimeType();\n+            switch (type) {\n+                case \"application/xml\":\n+                case \"text/xml\":\n+                case \"application/xhtml\":\n+                case \"text/xhtml\":\n+                case \"application/xhtml+xml\":\n+                    forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.FILE, f.getId(), currentDir));\n+                    break;\n+                case \"application/vnd.google-apps.folder\":\n+                    dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.DIR, f.getId(), parentId));\n+                    break;\n+                default:\n+                    // skip the rest of the files\n+                    break;\n+            }\n+        }\n+        Collections.sort(dirs);\n+        Collections.sort(forms);\n+        driveList.addAll(dirs);\n+        driveList.addAll(forms);\n+        checkFormUpdates();\n+    }\n+\n+    private void checkFormUpdates() {\n+        for (DriveListItem item: driveList) {\n+            if (item.getType() == DriveListItem.FILE) {\n+                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+                    item.setNewerVersion(true);\n                 }\n             }\n-            Collections.sort(dirs);\n-            Collections.sort(forms);\n-            driveList.addAll(dirs);\n-            driveList.addAll(forms);\n-            updateAdapter();\n         }\n     }\n \n+    private boolean isNewerFormVersionAvailable(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());\n+        if (cursor != null && cursor.moveToFirst()) {\n+            Long lastModifiedLocal = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n+            Long lastModifiedServer = item.getDate().getValue();\n+            return lastModifiedServer > lastModifiedLocal;\n+        }\n+        return false;\n+    }\n+\n+    private boolean areNewerMediaFilesAvailable(DriveListItem item) {\n+        String mediaDirName = FileUtils.constructMediaPath(item.getName());\n+\n+        try {\n+            List<com.google.api.services.drive.model.File> mediaFileList;\n+            try {\n+                mediaFileList = getMediaFiles(item);\n+            } catch (MultipleFoldersFoundException exception) {\n+                return false;\n+            }\n+\n+            if (mediaFileList != null) {\n+                for (com.google.api.services.drive.model.File mediaFile : mediaFileList) {\n+                    File localMediaFile = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + mediaDirName + File.separator + mediaFile.getName());\n+                    if (!localMediaFile.exists()) {\n+                        return true;\n+                    } else {\n+                        Long lastModifiedLocal = localMediaFile.lastModified();\n+                        Long lastModifiedServer = mediaFile.getModifiedTime().getValue();\n+                        if (lastModifiedServer > lastModifiedLocal) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (Exception e) {\n+            Timber.e(e);", "originalCommit": "adba127c67e942d74473cbd081602c9953dd1dfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d8201f34d816c7138f714f28704f60638fdd852", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\nindex c8d9c3fbc..50549a72a 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n\n@@ -779,21 +782,20 @@ public class GoogleDriveActivity extends FormListActivity implements View.OnClic\n \n     private void checkFormUpdates() {\n         for (DriveListItem item: driveList) {\n-            if (item.getType() == DriveListItem.FILE) {\n-                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+            if (item.getType() == DriveListItem.FILE && (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item))) {\n                     item.setNewerVersion(true);\n-                }\n             }\n         }\n     }\n \n     private boolean isNewerFormVersionAvailable(DriveListItem item) {\n         FormsDao formsDao = new FormsDao();\n-        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());\n-        if (cursor != null && cursor.moveToFirst()) {\n-            Long lastModifiedLocal = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n-            Long lastModifiedServer = item.getDate().getValue();\n-            return lastModifiedServer > lastModifiedLocal;\n+        try (Cursor cursor = formsDao.getFormsCursorForFormFilePath(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName())) {\n+            if (cursor != null && cursor.moveToFirst()) {\n+                Long lastModifiedLocal = new File(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n+                Long lastModifiedServer = item.getDate().getValue();\n+                return lastModifiedServer > lastModifiedLocal;\n+            }\n         }\n         return false;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNDY3MA==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426524670", "bodyText": "Could you clarify this change? Why did you factor out filterForms() which contains generally the same code as publishProgress before and now call both?", "author": "grzesiek2010", "createdAt": "2020-05-18T10:25:10Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -701,7 +704,8 @@ protected void onPreExecute() {\n                         nextPage.put(PARENT_ID_KEY, parentId);\n                         nextPage.put(CURRENT_ID_KEY, currentDir);\n                         nextPage.put(FILE_LIST_KEY, driveFileListPage);\n-                        publishProgress(nextPage);\n+                        filterForms(nextPage);\n+                        publishProgress();", "originalCommit": "adba127c67e942d74473cbd081602c9953dd1dfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyMTU5OA==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426621598", "bodyText": "The filtering which was being done in publishProgress , i needed it for calculation of media folders and all these should run on background thread because of being computationally expensive, Whereas publishProgress runs on UI thread that's why.", "author": "chidauri", "createdAt": "2020-05-18T13:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNDY3MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0d8201f34d816c7138f714f28704f60638fdd852", "url": "https://github.com/getodk/collect/commit/0d8201f34d816c7138f714f28704f60638fdd852", "message": "minor fixes", "committedDate": "2020-05-18T14:10:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzMTQxNA==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r427231414", "bodyText": "Please also check the entire file and use injected storagePathProvider instead of new StoragePathProvider() like here.", "author": "grzesiek2010", "createdAt": "2020-05-19T11:33:28Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -795,18 +867,15 @@ void setGoogleDriveFormDownloadListener(GoogleDriveFormDownloadListener gl) {\n \n                     String mediaDirName = FileUtils.constructMediaPath(fileItem.getName());\n \n-                    String folderId;\n+                    List<com.google.api.services.drive.model.File> mediaFileList;\n                     try {\n-                        folderId = driveHelper.getIDOfFolderWithName(mediaDirName, fileItem.getParentId(), false);\n+                        mediaFileList = getMediaFiles(fileItem);\n                     } catch (MultipleFoldersFoundException exception) {\n                         results.put(fileItem.getName(), getString(R.string.multiple_media_folders_detected_notification));\n                         return results;\n                     }\n \n-                    if (folderId != null) {\n-                        List<com.google.api.services.drive.model.File> mediaFileList;\n-                        mediaFileList = driveHelper.getFilesFromDrive(null, folderId);\n-\n+                    if (mediaFileList != null) {\n                         FileUtils.createFolder(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + mediaDirName);", "originalCommit": "0d8201f34d816c7138f714f28704f60638fdd852", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0NDA4Mw==", "url": "https://github.com/getodk/collect/pull/3661#discussion_r427244083", "bodyText": "Done.", "author": "chidauri", "createdAt": "2020-05-19T11:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzMTQxNA=="}], "type": "inlineReview", "revised_code": {"commit": "ffac26db7eb65f8e0841f4d5069956189ab9191a", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\nindex 50549a72a..1675928b5 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java\n\n@@ -876,7 +876,7 @@ public class GoogleDriveActivity extends FormListActivity implements View.OnClic\n                     }\n \n                     if (mediaFileList != null) {\n-                        FileUtils.createFolder(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + mediaDirName);\n+                        FileUtils.createFolder(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + File.separator + mediaDirName);\n \n                         for (com.google.api.services.drive.model.File mediaFile : mediaFileList) {\n                             String filePath = mediaDirName + File.separator + mediaFile.getName();\n"}}, {"oid": "ffac26db7eb65f8e0841f4d5069956189ab9191a", "url": "https://github.com/getodk/collect/commit/ffac26db7eb65f8e0841f4d5069956189ab9191a", "message": "inject storagepathprovider", "committedDate": "2020-05-19T11:51:13Z", "type": "commit"}, {"oid": "a9f203c307a9575e169ae937199e9c7130ae9b53", "url": "https://github.com/getodk/collect/commit/a9f203c307a9575e169ae937199e9c7130ae9b53", "message": "fix not downloaded files showing updates", "committedDate": "2020-06-18T06:27:12Z", "type": "commit"}, {"oid": "2d010666b0edbadeaa88d5362a85b61e459357e6", "url": "https://github.com/getodk/collect/commit/2d010666b0edbadeaa88d5362a85b61e459357e6", "message": "Only compare last modified form", "committedDate": "2020-06-18T08:29:22Z", "type": "commit"}, {"oid": "9388dedc0ce733910392e428246221c448032df9", "url": "https://github.com/getodk/collect/commit/9388dedc0ce733910392e428246221c448032df9", "message": "Revert \"Only compare last modified form\"\n\nThis reverts commit 2d010666b0edbadeaa88d5362a85b61e459357e6.", "committedDate": "2020-07-02T08:02:51Z", "type": "commit"}]}