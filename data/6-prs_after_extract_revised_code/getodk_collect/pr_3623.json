{"pr_number": 3623, "pr_title": "Changes for allowing files migration", "pr_createdAt": "2020-02-05T15:24:52Z", "pr_url": "https://github.com/getodk/collect/pull/3623", "timeline": [{"oid": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "url": "https://github.com/getodk/collect/commit/e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "message": "Avoid multiclicking in StorageMigrationDialog", "committedDate": "2020-02-26T11:08:51Z", "type": "commit"}, {"oid": "ea71d20a2c26a592559e7c10b91a90a008af9f0e", "url": "https://github.com/getodk/collect/commit/ea71d20a2c26a592559e7c10b91a90a008af9f0e", "message": "Fixed build", "committedDate": "2020-02-26T11:08:51Z", "type": "commit"}, {"oid": "f8f0e62074699778d3456198e3063fc9fce71dcc", "url": "https://github.com/getodk/collect/commit/f8f0e62074699778d3456198e3063fc9fce71dcc", "message": "Code improvements", "committedDate": "2020-02-26T11:10:51Z", "type": "commit"}, {"oid": "547bd2964fbf622ea6a509213c86d928f4b471a1", "url": "https://github.com/getodk/collect/commit/547bd2964fbf622ea6a509213c86d928f4b471a1", "message": "Improved communication MainMenuActivity->StorageMigrationDialog", "committedDate": "2020-02-26T11:10:51Z", "type": "commit"}, {"oid": "617641fb3dcf0b6eb5d6b87cadbd1eb345eb4cd2", "url": "https://github.com/getodk/collect/commit/617641fb3dcf0b6eb5d6b87cadbd1eb345eb4cd2", "message": "Added new TextAppearance.Collect.Button.TextButton style", "committedDate": "2020-02-26T11:10:51Z", "type": "commit"}, {"oid": "ef2a7f78d75c5d01f041cf075393998e1e181c69", "url": "https://github.com/getodk/collect/commit/ef2a7f78d75c5d01f041cf075393998e1e181c69", "message": "Removed unused method", "committedDate": "2020-02-26T11:10:51Z", "type": "commit"}, {"oid": "2dc78a9857fa4b78c5e388fb8e90a7e2e9ac9d63", "url": "https://github.com/getodk/collect/commit/2dc78a9857fa4b78c5e388fb8e90a7e2e9ac9d63", "message": "Fixed creating StorageMigrationDialog", "committedDate": "2020-02-26T11:11:10Z", "type": "commit"}, {"oid": "0312b5d053ea20ebef917682fc4e5a1e7b95879b", "url": "https://github.com/getodk/collect/commit/0312b5d053ea20ebef917682fc4e5a1e7b95879b", "message": "Use MaterialButton  instead of TextView for moreDetailsButton", "committedDate": "2020-02-26T11:11:10Z", "type": "commit"}, {"oid": "3c19f68a57968acb75477776c2a76a21eeb82e92", "url": "https://github.com/getodk/collect/commit/3c19f68a57968acb75477776c2a76a21eeb82e92", "message": "Handle offline map layer", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "4a127cc6137823a930eb0ceaa4ab6bcfd5f482b1", "url": "https://github.com/getodk/collect/commit/4a127cc6137823a930eb0ceaa4ab6bcfd5f482b1", "message": "Fixed storage paths in tests", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "b41f872629c599595fe83d27e27fc5ee3bdc1ca2", "url": "https://github.com/getodk/collect/commit/b41f872629c599595fe83d27e27fc5ee3bdc1ca2", "message": "Improved existed tests", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "814be2d8de1cc8a134d0f89eb27cc9c98d2403fa", "url": "https://github.com/getodk/collect/commit/814be2d8de1cc8a134d0f89eb27cc9c98d2403fa", "message": "Code improvements", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "6fb6cab6cbbe6a22adb2da565564ea32ce4548c1", "url": "https://github.com/getodk/collect/commit/6fb6cab6cbbe6a22adb2da565564ea32ce4548c1", "message": "Reset ReferenceManager", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "9d04a5672c2071faa716647cc0cf54862adc9e76", "url": "https://github.com/getodk/collect/commit/9d04a5672c2071faa716647cc0cf54862adc9e76", "message": "Improved handling offline map layer paths", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "c39d25aab5dc9a179da718d7aa0174b4e261cc36", "url": "https://github.com/getodk/collect/commit/c39d25aab5dc9a179da718d7aa0174b4e261cc36", "message": "Don't use database observer when migartion in being performed to avoid blocking UI", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "e0b5bae7a2eed421472d1ad6fab63422a8858cdd", "url": "https://github.com/getodk/collect/commit/e0b5bae7a2eed421472d1ad6fab63422a8858cdd", "message": "Keep the right migration dialog state if a user leaves and returns to the app", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "a5c897dec0f05de683426d46fb6d78c1c74f9e51", "url": "https://github.com/getodk/collect/commit/a5c897dec0f05de683426d46fb6d78c1c74f9e51", "message": "Fixed checking if AutoSendWOrker is running", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "12853f65d142faabd8005c5d9eff91b1bbaf140b", "url": "https://github.com/getodk/collect/commit/12853f65d142faabd8005c5d9eff91b1bbaf140b", "message": "Added StorageMigrationCompletedBannerTest", "committedDate": "2020-02-26T11:11:47Z", "type": "commit"}, {"oid": "12853f65d142faabd8005c5d9eff91b1bbaf140b", "url": "https://github.com/getodk/collect/commit/12853f65d142faabd8005c5d9eff91b1bbaf140b", "message": "Added StorageMigrationCompletedBannerTest", "committedDate": "2020-02-26T11:11:47Z", "type": "forcePushed"}, {"oid": "d932897283f63bc10c8f0d3c307d2626ab93d777", "url": "https://github.com/getodk/collect/commit/d932897283f63bc10c8f0d3c307d2626ab93d777", "message": "Fixed strings", "committedDate": "2020-02-26T11:34:44Z", "type": "commit"}, {"oid": "c45f65acd72ff9f01afc7bb579b52f2bc92be96e", "url": "https://github.com/getodk/collect/commit/c45f65acd72ff9f01afc7bb579b52f2bc92be96e", "message": "Added StorageMigrationBannerTest", "committedDate": "2020-02-26T12:03:47Z", "type": "commit"}, {"oid": "1d780ec0a7609eda5ee634ac693ae47605f1b08f", "url": "https://github.com/getodk/collect/commit/1d780ec0a7609eda5ee634ac693ae47605f1b08f", "message": "AddedStorageMigrationDialogTest", "committedDate": "2020-02-26T15:10:20Z", "type": "commit"}, {"oid": "a1034deb4bf1eaed73692004882274dcd727b3fb", "url": "https://github.com/getodk/collect/commit/a1034deb4bf1eaed73692004882274dcd727b3fb", "message": "Improved checking if background form downloader is running and added tests", "committedDate": "2020-02-27T15:11:23Z", "type": "commit"}, {"oid": "a1034deb4bf1eaed73692004882274dcd727b3fb", "url": "https://github.com/getodk/collect/commit/a1034deb4bf1eaed73692004882274dcd727b3fb", "message": "Improved checking if background form downloader is running and added tests", "committedDate": "2020-02-27T15:11:23Z", "type": "forcePushed"}, {"oid": "254db8e944289890ab6bd7ada703a0b0acd9333d", "url": "https://github.com/getodk/collect/commit/254db8e944289890ab6bd7ada703a0b0acd9333d", "message": "Avoid displaying the banner again if it has been dismissed", "committedDate": "2020-02-27T19:49:22Z", "type": "commit"}, {"oid": "6fa5889f33389d20aa9be84860733f0c03d64927", "url": "https://github.com/getodk/collect/commit/6fa5889f33389d20aa9be84860733f0c03d64927", "message": "Added ScrollView to StorageMigrationDialog and moved the error TextView up", "committedDate": "2020-02-27T23:57:35Z", "type": "forcePushed"}, {"oid": "ee7e81876ea2c5577ee3912d88f9668e83940ce5", "url": "https://github.com/getodk/collect/commit/ee7e81876ea2c5577ee3912d88f9668e83940ce5", "message": "Added ScrollView to StorageMigrationDialog and moved the error TextView up", "committedDate": "2020-02-28T00:03:33Z", "type": "forcePushed"}, {"oid": "6122d41e691690eba139299b3a895a6a1bc947e1", "url": "https://github.com/getodk/collect/commit/6122d41e691690eba139299b3a895a6a1bc947e1", "message": "Added ScrollView to StorageMigrationDialog and moved the error TextView up", "committedDate": "2020-02-28T00:08:39Z", "type": "commit"}, {"oid": "6122d41e691690eba139299b3a895a6a1bc947e1", "url": "https://github.com/getodk/collect/commit/6122d41e691690eba139299b3a895a6a1bc947e1", "message": "Added ScrollView to StorageMigrationDialog and moved the error TextView up", "committedDate": "2020-02-28T00:08:39Z", "type": "forcePushed"}, {"oid": "e3257f08b49ad8ceb26e82a3cc4fa14a726dbd25", "url": "https://github.com/getodk/collect/commit/e3257f08b49ad8ceb26e82a3cc4fa14a726dbd25", "message": "Code improvements and tests", "committedDate": "2020-02-28T10:17:40Z", "type": "forcePushed"}, {"oid": "9c0949e42542d0000b93e621ba462044007a808b", "url": "https://github.com/getodk/collect/commit/9c0949e42542d0000b93e621ba462044007a808b", "message": "Code improvements and tests", "committedDate": "2020-02-28T10:45:25Z", "type": "forcePushed"}, {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b", "url": "https://github.com/getodk/collect/commit/2ecf4f6adbbdf88f14be4aaff53c973b9519160b", "message": "Code improvements and tests", "committedDate": "2020-02-28T10:47:43Z", "type": "commit"}, {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b", "url": "https://github.com/getodk/collect/commit/2ecf4f6adbbdf88f14be4aaff53c973b9519160b", "message": "Code improvements and tests", "committedDate": "2020-02-28T10:47:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyODQ1MA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385628450", "bodyText": "Really liking this use of @Rule! I think it'd be good to still have the ResetStateRule and standard permssion rules for these tests just to make sure they are starting fresh.", "author": "seadowg", "createdAt": "2020-02-28T10:49:00Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package org.odk.collect.android.storage;\n+\n+import androidx.test.rule.ActivityTestRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationBannerTest {\n+\n+    @Rule\n+    public ActivityTestRule<MainMenuActivity> main = new ActivityTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public StorageMigrationNotPerformedRule storageMigrationNotPerformedRule = new StorageMigrationNotPerformedRule();", "originalCommit": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxMTA0Nw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r386311047", "bodyText": "Done, but when it comes to the new rule I removed it because it was called too late. I needed to override beforeActivityLaunched like here f6073fa#diff-031d2e263a9e3d4064f608116ef282e4R34", "author": "grzesiek2010", "createdAt": "2020-03-02T10:29:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyODQ1MA=="}], "type": "inlineReview", "revised_code": {"commit": "f3e818eeed7fbd3c966e900732ea8a41ad362e94", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java\ndeleted file mode 100644\nindex cc893ccfd7..0000000000\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package org.odk.collect.android.storage;\n-\n-import androidx.test.rule.ActivityTestRule;\n-\n-import org.junit.Rule;\n-import org.junit.Test;\n-import org.odk.collect.android.activities.MainMenuActivity;\n-import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n-import org.odk.collect.android.support.pages.MainMenuPage;\n-\n-public class StorageMigrationBannerTest {\n-\n-    @Rule\n-    public ActivityTestRule<MainMenuActivity> main = new ActivityTestRule<>(MainMenuActivity.class);\n-\n-    @Rule\n-    public StorageMigrationNotPerformedRule storageMigrationNotPerformedRule = new StorageMigrationNotPerformedRule();\n-\n-    @Test\n-    public void when_storageMigrationNotPerformed_should_bannerBeVisible() {\n-        new MainMenuPage(main)\n-                .assertStorageMigrationBannerIsDisplayed()\n-                .rotateToLandscape(new MainMenuPage(main))\n-                .assertStorageMigrationBannerIsDisplayed()\n-                .rotateToPortrait(new MainMenuPage(main))\n-                .assertStorageMigrationBannerIsDisplayed()\n-                .reopenApp()\n-                .assertStorageMigrationBannerIsDisplayed();\n-    }\n-\n-    @Test\n-    public void when_learMoreButtonClicked_should_storageMigrationDialogAppear() {\n-        new MainMenuPage(main)\n-                .clickLearnMoreButton();\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyOTI5NQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385629295", "bodyText": "I think you'd be fine to combine this with the previous test as one flow. I think we can also move rotation/reopen testing out of Espresso for these cases but I'll have a quick think about that and get back to you on that.", "author": "seadowg", "createdAt": "2020-02-28T10:50:54Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package org.odk.collect.android.storage;\n+\n+import androidx.test.rule.ActivityTestRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationBannerTest {\n+\n+    @Rule\n+    public ActivityTestRule<MainMenuActivity> main = new ActivityTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public StorageMigrationNotPerformedRule storageMigrationNotPerformedRule = new StorageMigrationNotPerformedRule();\n+\n+    @Test\n+    public void when_storageMigrationNotPerformed_should_bannerBeVisible() {\n+        new MainMenuPage(main)\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .rotateToLandscape(new MainMenuPage(main))\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .rotateToPortrait(new MainMenuPage(main))\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .reopenApp()\n+                .assertStorageMigrationBannerIsDisplayed();\n+    }\n+\n+    @Test\n+    public void when_learMoreButtonClicked_should_storageMigrationDialogAppear() {\n+        new MainMenuPage(main)", "originalCommit": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzNjI0Mw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385636243", "bodyText": "Yeah you should be able to use the ActivityScenario in AndroidX testing and just call recreate to test recreation (otation is really just that). We're using it for a fragment test in FormMetadataFragmentTest. We should be able to use this kind of pattern to test the MainMenuActivity directly rather than having to worry about rotation/recreation at the Espresso level.", "author": "seadowg", "createdAt": "2020-02-28T11:06:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyOTI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMzNjU4Mw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r386336583", "bodyText": "think you'd be fine to combine this with the previous test as one flow.\n\nDone.\nwhen it comes to screen rotation I used recreate in some cases for example where I wanted to simulate that the app is reopened. However in this case rotation and recreation differ. In MainMenuActivity we use\nandroid:configChanges=\"locale|orientation|screenSize\"\nthat means onDestroy won't be called if you rotate your device so I expect a different behavior compared to recreation. For example if we have the banner with success msg it should disappear after reopening the app but should be still visible after simple rotation.", "author": "grzesiek2010", "createdAt": "2020-03-02T11:23:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyOTI5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3e818eeed7fbd3c966e900732ea8a41ad362e94", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java\ndeleted file mode 100644\nindex cc893ccfd7..0000000000\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package org.odk.collect.android.storage;\n-\n-import androidx.test.rule.ActivityTestRule;\n-\n-import org.junit.Rule;\n-import org.junit.Test;\n-import org.odk.collect.android.activities.MainMenuActivity;\n-import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n-import org.odk.collect.android.support.pages.MainMenuPage;\n-\n-public class StorageMigrationBannerTest {\n-\n-    @Rule\n-    public ActivityTestRule<MainMenuActivity> main = new ActivityTestRule<>(MainMenuActivity.class);\n-\n-    @Rule\n-    public StorageMigrationNotPerformedRule storageMigrationNotPerformedRule = new StorageMigrationNotPerformedRule();\n-\n-    @Test\n-    public void when_storageMigrationNotPerformed_should_bannerBeVisible() {\n-        new MainMenuPage(main)\n-                .assertStorageMigrationBannerIsDisplayed()\n-                .rotateToLandscape(new MainMenuPage(main))\n-                .assertStorageMigrationBannerIsDisplayed()\n-                .rotateToPortrait(new MainMenuPage(main))\n-                .assertStorageMigrationBannerIsDisplayed()\n-                .reopenApp()\n-                .assertStorageMigrationBannerIsDisplayed();\n-    }\n-\n-    @Test\n-    public void when_learMoreButtonClicked_should_storageMigrationDialogAppear() {\n-        new MainMenuPage(main)\n-                .clickLearnMoreButton();\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMDM4OQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385630389", "bodyText": "I'm wondering if it might make sense to combine these tests with the StorageMigrationBannerTest as one file that tests the migration flow.", "author": "seadowg", "createdAt": "2020-02-28T10:53:17Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationDialogTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.odk.collect.android.storage;\n+\n+import android.Manifest;\n+\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.CopyFormRule;\n+import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.StorageMigrationDialogPage;\n+\n+public class StorageMigrationDialogTest {", "originalCommit": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxMDI0MA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r386310240", "bodyText": "Done.", "author": "grzesiek2010", "createdAt": "2020-03-02T10:28:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMDM4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3e818eeed7fbd3c966e900732ea8a41ad362e94", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationDialogTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationDialogTest.java\ndeleted file mode 100644\nindex 6329c1f620..0000000000\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationDialogTest.java\n+++ /dev/null\n\n@@ -1,80 +0,0 @@\n-package org.odk.collect.android.storage;\n-\n-import android.Manifest;\n-\n-import androidx.test.espresso.intent.rule.IntentsTestRule;\n-import androidx.test.rule.GrantPermissionRule;\n-\n-import org.junit.Rule;\n-import org.junit.Test;\n-import org.junit.rules.RuleChain;\n-import org.odk.collect.android.activities.MainMenuActivity;\n-import org.odk.collect.android.support.CopyFormRule;\n-import org.odk.collect.android.support.ResetStateRule;\n-import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n-import org.odk.collect.android.support.pages.MainMenuPage;\n-import org.odk.collect.android.support.pages.StorageMigrationDialogPage;\n-\n-public class StorageMigrationDialogTest {\n-\n-    @Rule\n-    public IntentsTestRule<MainMenuActivity> main = new IntentsTestRule<>(MainMenuActivity.class);\n-\n-    @Rule\n-    public RuleChain copyFormChain = RuleChain\n-            .outerRule(GrantPermissionRule.grant(\n-                    Manifest.permission.READ_EXTERNAL_STORAGE,\n-                    Manifest.permission.WRITE_EXTERNAL_STORAGE\n-            ))\n-            .around(new StorageMigrationNotPerformedRule())\n-            .around(new ResetStateRule())\n-            .around(new CopyFormRule(\"basic.xml\", true));\n-\n-    @Test\n-    public void when_thereAreNoSavedForms_should_thePromptToSubmitFormsBeNotVisible() {\n-        new MainMenuPage(main)\n-                .clickLearnMoreButton()\n-                .assertStorageMigrationContentWithoutSavedFormsIsVisible();\n-    }\n-\n-    @Test\n-    public void when_savedFormsExist_should_thePromptToSubmitFormsBeVisible() {\n-        new MainMenuPage(main)\n-                .startBlankForm(\"basic\")\n-                .swipeToNextQuestion()\n-                .swipeToNextQuestion()\n-                .clickSaveAndExit()\n-                .clickLearnMoreButton()\n-                .assertStorageMigrationContentWithSavedFormsIsVisible();\n-    }\n-\n-    @Test\n-    public void when_moreDetailsButtonClicked_should_odkForumPageAppear() {\n-        new MainMenuPage(main)\n-                .clickLearnMoreButton()\n-                .clickMoreDetails()\n-                .assertWebViewOpen();\n-    }\n-\n-    @Test\n-    public void when_backButtonPressed_should_storageMigrationDialogPersist() {\n-        new MainMenuPage(main)\n-                .clickLearnMoreButton()\n-                .pressBack(new StorageMigrationDialogPage(main));\n-    }\n-\n-    @Test\n-    public void when_cancelButtonPressed_should_storageMigrationDialogBeClosed() {\n-        new MainMenuPage(main)\n-                .clickLearnMoreButton()\n-                .clickCancel();\n-    }\n-\n-    @Test\n-    public void when_rotationHappens_should_storageMigrationDialogPersist() {\n-        new MainMenuPage(main)\n-                .clickLearnMoreButton()\n-                .rotateToLandscape(new StorageMigrationDialogPage(main))\n-                .rotateToPortrait(new StorageMigrationDialogPage(main));\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMDg2Mw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385630863", "bodyText": "Same again: feels like we might be able to just combine these with the other migration tests", "author": "seadowg", "createdAt": "2020-02-28T10:54:15Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.odk.collect.android.storage;\n+\n+import android.Manifest;\n+\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.CopyFormRule;\n+import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationTest {\n+\n+    @Rule\n+    public IntentsTestRule<MainMenuActivity> main = new IntentsTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public RuleChain copyFormChain = RuleChain\n+            .outerRule(GrantPermissionRule.grant(\n+                    Manifest.permission.READ_EXTERNAL_STORAGE,\n+                    Manifest.permission.WRITE_EXTERNAL_STORAGE\n+            ))\n+            .around(new StorageMigrationNotPerformedRule())\n+            .around(new ResetStateRule())\n+            .around(new CopyFormRule(\"basic.xml\", true));\n+\n+    @Test\n+    public void when_migrationIsFinishedWIthSuccess_should_storageMigrationDialogDisappear() {\n+        new MainMenuPage(main)", "originalCommit": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxMDI4NQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r386310285", "bodyText": "Done.", "author": "grzesiek2010", "createdAt": "2020-03-02T10:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMDg2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "699219afb14b1f2eccc3752e8e0bb4b4ba4aebc5", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationTest.java\nindex 62a8a77962..97aed465f1 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationTest.java\n\n@@ -2,7 +2,7 @@ package org.odk.collect.android.storage;\n \n import android.Manifest;\n \n-import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.rule.ActivityTestRule;\n import androidx.test.rule.GrantPermissionRule;\n \n import org.junit.Rule;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY0MDkyNA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385640924", "bodyText": "I'm wondering if there is a way we could test that the StorageMigrator does the right thing when these jobs are runnign without actually having to start them up (and also have tests that run in the JVM). As far as I can see these tests are non deterministic due to the waits and background work.\nI know Google released some testing around WorkManager so I can have a look and see if there is anything we can use there. Ideally we can fake the state of work or have it run paused or something. This wouldn't solve for the JobManager stuff though, Alternatively, for the moment we could hide the logic around looking up the statuses of these pieces of background work behind an interface that we can sub out for the StorageMigrator's unit test (probably as a constructor arg):\npublic interface WorkStatusProvider {\n    public boolean isFormDownloaderRunning();\n    public boolean isFormUploaderRunning();\n}\nThis would also mean that objects like the StorageMigrator wouldn't have to care about the details involved of fetching those statuses.", "author": "seadowg", "createdAt": "2020-02-28T11:16:56Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,115 @@\n+package org.odk.collect.android.storage;\n+\n+import androidx.work.ExistingWorkPolicy;\n+import androidx.work.OneTimeWorkRequest;\n+import androidx.work.WorkManager;\n+\n+import com.evernote.android.job.JobManager;\n+import com.evernote.android.job.JobManagerCreateException;\n+import com.evernote.android.job.JobRequest;\n+\n+import org.javarosa.core.reference.ReferenceManager;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.preferences.GeneralSharedPreferences;\n+import org.odk.collect.android.storage.migration.StorageEraser;\n+import org.odk.collect.android.storage.migration.StorageMigrationRepository;\n+import org.odk.collect.android.storage.migration.StorageMigrationResult;\n+import org.odk.collect.android.storage.migration.StorageMigrator;\n+import org.odk.collect.android.storage.utils.FakedAutoSendWorker;\n+import org.odk.collect.android.storage.utils.FakedServerPollingJob;\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+\n+import timber.log.Timber;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.core.IsNot.not;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+\n+public class StorageMigratorTest {", "originalCommit": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "699219afb14b1f2eccc3752e8e0bb4b4ba4aebc5", "url": "https://github.com/getodk/collect/commit/699219afb14b1f2eccc3752e8e0bb4b4ba4aebc5", "message": "Fixed problem with external files", "committedDate": "2020-03-02T07:58:45Z", "type": "commit"}, {"oid": "f3e818eeed7fbd3c966e900732ea8a41ad362e94", "url": "https://github.com/getodk/collect/commit/f3e818eeed7fbd3c966e900732ea8a41ad362e94", "message": "Improved tests", "committedDate": "2020-03-02T10:46:05Z", "type": "commit"}, {"oid": "f3e818eeed7fbd3c966e900732ea8a41ad362e94", "url": "https://github.com/getodk/collect/commit/f3e818eeed7fbd3c966e900732ea8a41ad362e94", "message": "Improved tests", "committedDate": "2020-03-02T10:46:05Z", "type": "forcePushed"}, {"oid": "bc5a275611e2383449717bf4817b0288ec1e15ab", "url": "https://github.com/getodk/collect/commit/bc5a275611e2383449717bf4817b0288ec1e15ab", "message": "Center migration progress circle vertically", "committedDate": "2020-03-02T12:56:29Z", "type": "commit"}, {"oid": "3df5d35675eed9bcf9f9f09ef73a817f8a27bd8a", "url": "https://github.com/getodk/collect/commit/3df5d35675eed9bcf9f9f09ef73a817f8a27bd8a", "message": "Removed one test which is not valuable", "committedDate": "2020-03-02T14:24:02Z", "type": "commit"}, {"oid": "1f9fa1685f8adfd9cfb1ba2ad8d9a11a3b90a8c1", "url": "https://github.com/getodk/collect/commit/1f9fa1685f8adfd9cfb1ba2ad8d9a11a3b90a8c1", "message": "Added StorageMigratorTask", "committedDate": "2020-02-06T14:00:27Z", "type": "forcePushed"}, {"oid": "02de4c2a350497e55e4a94ef5f63ceae7881caa6", "url": "https://github.com/getodk/collect/commit/02de4c2a350497e55e4a94ef5f63ceae7881caa6", "message": "Added StorageMigratorTask", "committedDate": "2020-02-06T14:09:43Z", "type": "forcePushed"}, {"oid": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6", "url": "https://github.com/getodk/collect/commit/7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6", "message": "Added StorageMigratorTask", "committedDate": "2020-02-06T14:16:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2MjE1MA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r375962150", "bodyText": "I like that this is pulled out as its own object! I think you could pass the StoragePathProvider in as a constructor arg rather than have it passed in to both methods as it feels like a dependency.", "author": "seadowg", "createdAt": "2020-02-06T17:02:10Z", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageEraser.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.odk.collect.android.storage;\n+\n+import java.io.File;\n+\n+class StorageEraser {", "originalCommit": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxNjUwNg==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r376416506", "bodyText": "Done.", "author": "grzesiek2010", "createdAt": "2020-02-07T14:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2MjE1MA=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/storage/StorageEraser.java b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageEraser.java\nsimilarity index 51%\nrename from collect_app/src/main/java/org/odk/collect/android/storage/StorageEraser.java\nrename to collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageEraser.java\nindex c28686ee3b..21a1358e96 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/storage/StorageEraser.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageEraser.java\n\n@@ -1,15 +1,23 @@\n-package org.odk.collect.android.storage;\n+package org.odk.collect.android.storage.migration;\n+\n+import org.odk.collect.android.storage.StoragePathProvider;\n \n import java.io.File;\n \n-class StorageEraser {\n+public class StorageEraser {\n+\n+    private final StoragePathProvider storagePathProvider;\n+\n+    public StorageEraser(StoragePathProvider storagePathProvider) {\n+        this.storagePathProvider = storagePathProvider;\n+    }\n \n-    void clearOdkDirOnScopedStorage(StoragePathProvider storagePathProvider) {\n-        deleteDirectory(new File(storagePathProvider.getScopedStorageDirPath(StorageSubdirectory.ODK)));\n+    void clearOdkDirOnScopedStorage() {\n+        deleteDirectory(new File(storagePathProvider.getScopedStorageRootDirPath()));\n     }\n \n-    void deleteOdkDirFromUnscopedStorage(StoragePathProvider storagePathProvider) {\n-        deleteDirectory(new File(storagePathProvider.getUnscopedStorageDirPath(StorageSubdirectory.ODK)));\n+    void deleteOdkDirFromUnscopedStorage() {\n+        deleteDirectory(new File(storagePathProvider.getUnscopedStorageRootDirPath()));\n     }\n \n     private static void deleteDirectory(File directoryToBeDeleted) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2Mjg4OQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r375962889", "bodyText": "Big fan of this returning an enum/result object for each case \ud83d\udc4d", "author": "seadowg", "createdAt": "2020-02-06T17:03:23Z", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package org.odk.collect.android.storage;\n+\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.work.WorkInfo;\n+import androidx.work.WorkManager;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.odk.collect.android.dao.FormsDao;\n+import org.odk.collect.android.dao.InstancesDao;\n+import org.odk.collect.android.dao.ItemsetDao;\n+import org.odk.collect.android.database.ItemsetDbAdapter;\n+import org.odk.collect.android.forms.Form;\n+import org.odk.collect.android.instances.Instance;\n+import org.odk.collect.android.itemsets.Itemset;\n+import org.odk.collect.android.provider.FormsProvider;\n+import org.odk.collect.android.provider.InstanceProvider;\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static android.provider.BaseColumns._ID;\n+import static org.odk.collect.android.database.ItemsetDbAdapter.KEY_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_MEDIA_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JRCACHE_FILE_PATH;\n+import static org.odk.collect.android.provider.InstanceProviderAPI.InstanceColumns.INSTANCE_FILE_PATH;\n+\n+public class StorageMigrator {\n+\n+    private StoragePathProvider storagePathProvider;\n+    private StorageStateProvider storageStateProvider;\n+    private StorageEraser storageEraser;\n+\n+    public static boolean isMigrationBeingPerformed;\n+\n+    public StorageMigrator() {\n+        this(new StoragePathProvider(), new StorageStateProvider(), new StorageEraser());\n+    }\n+\n+    private StorageMigrator(StoragePathProvider storagePathProvider, StorageStateProvider storageStateProvider, StorageEraser storageEraser) {\n+        this.storagePathProvider = storagePathProvider;\n+        this.storageStateProvider = storageStateProvider;\n+        this.storageEraser = storageEraser;\n+    }\n+\n+    StorageMigrationResult performStorageMigration() {", "originalCommit": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrator.java\nsimilarity index 58%\nrename from collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java\nrename to collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrator.java\nindex 7540b2ff7d..54a938a77f 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrator.java\n\n@@ -1,4 +1,4 @@\n-package org.odk.collect.android.storage;\n+package org.odk.collect.android.storage.migration;\n \n import android.content.ContentValues;\n import android.database.Cursor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MDQyOA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r375980428", "bodyText": "I think it would be nice to have the execution encapsulated in a ViewModel. An example of this would be how FormSaveViewModel#saveForm works. Something like this for the ViewModel:\nclass StorageMigrationViewModel {\n    public LiveData<StorageMigratorResult> migrate() {\n        MutableLiveData<StorageMigratorResult> result = new MutableLiveData<>();\n        new StorageMigratorTask((migratorResult) -> result.setValue(migratorResult)).execute();\n        return result;\n    }\n}\nYou'll see an example of a task with a listener like this in FormSaveViewModel.\nIn can then deal with the dialog/errors in the Activity:\nstorageMigrationViewModel.migrate().observe(this, (result) -> {\n    if (result != null) {\n        // handle result\n    }\n});\nSomething like that lets us seperate out our UI logic from the migration logic and lets us avoid using WeakReference or worrying about AsyncTask memory leaks. Totally up for discussing if that approach doesn't feel right but it'd be nice for us to find a pattern we like for this kind of thing.", "author": "seadowg", "createdAt": "2020-02-06T17:35:53Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -640,4 +643,14 @@ private void disableSmsIfNeeded() {\n                     .show();\n         }\n     }\n+\n+    private void setStorageMigrationBannerVisibility() {\n+        if (!new StorageStateProvider().isScopedStorageUsed()) {\n+            findViewById(R.id.storage_migration_banner).setVisibility(View.VISIBLE);\n+        }\n+    }\n+\n+    public void learnMoreAndMigrate(View view) {\n+        new StorageMigratorTask(this).execute();", "originalCommit": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1ODkzNQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r376358935", "bodyText": "I think it's a good idea I implemented it, thanks.", "author": "grzesiek2010", "createdAt": "2020-02-07T12:09:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MDQyOA=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\nindex d503ebde52..4362b79eaa 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n\n@@ -644,13 +635,48 @@ public class MainMenuActivity extends CollectAbstractActivity {\n         }\n     }\n \n-    private void setStorageMigrationBannerVisibility() {\n-        if (!new StorageStateProvider().isScopedStorageUsed()) {\n-            findViewById(R.id.storage_migration_banner).setVisibility(View.VISIBLE);\n+    public void onStorageMigrationBannerDismiss(View view) {\n+        storageMigrationBanner.setVisibility(View.GONE);\n+    }\n+\n+    public void onStorageMigrationBannerLearnMoreClick(View view) {\n+        storageMigrationRepository.getResult().observe(this, this::onStorageMigrationFinish);\n+        DialogUtils.showIfNotShowing(StorageMigrationDialog.create(adminPasswordProvider, savedCount), getSupportFragmentManager());\n+    }\n+\n+    private void onStorageMigrationFinish(StorageMigrationResult result) {\n+        if (result == StorageMigrationResult.SUCCESS) {\n+            keepBannerWithSuccesMsgVisible = true;\n+            displayBannerWithSuccessStorageMigrationResult();\n+            DialogUtils.dismissDialog(StorageMigrationDialog.class, getSupportFragmentManager());\n+            storageMigrationRepository.consumeResult();\n+        } else {\n+            StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());\n+            if (storageMigrationDialog != null) {\n+                storageMigrationDialog.handleMigrationError(result);\n+            }\n         }\n     }\n \n-    public void learnMoreAndMigrate(View view) {\n-        new StorageMigratorTask(this).execute();\n+    private void setUpStorageMigrationBanner() {\n+        if (!storageStateProvider.isScopedStorageUsed()) {\n+            displayStorageMigrationBanner();\n+        } else if (keepBannerWithSuccesMsgVisible) {\n+            displayBannerWithSuccessStorageMigrationResult();\n+        }\n+    }\n+\n+    private void displayStorageMigrationBanner() {\n+        storageMigrationBanner.setVisibility(View.VISIBLE);\n+        storageMigrationBannerText.setText(R.string.scoped_storage_banner_text);\n+        storageMigrationBannerLearnMoreButton.setVisibility(View.VISIBLE);\n+        storageMigrationBannerDismissButton.setVisibility(View.GONE);\n+    }\n+\n+    private void displayBannerWithSuccessStorageMigrationResult() {\n+        storageMigrationBanner.setVisibility(View.VISIBLE);\n+        storageMigrationBannerText.setText(R.string.storage_migration_completed);\n+        storageMigrationBannerLearnMoreButton.setVisibility(View.GONE);\n+        storageMigrationBannerDismissButton.setVisibility(View.VISIBLE);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MTM2MQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r375981361", "bodyText": "What are you thinking for tests for this? Feels to me like testing the StorageMigrator in a all the possible scenarios (each result) and then maybe an Espresso test for the \"happy case\" (where everything goes right)?", "author": "seadowg", "createdAt": "2020-02-06T17:37:36Z", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package org.odk.collect.android.storage;\n+\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.work.WorkInfo;\n+import androidx.work.WorkManager;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.odk.collect.android.dao.FormsDao;\n+import org.odk.collect.android.dao.InstancesDao;\n+import org.odk.collect.android.dao.ItemsetDao;\n+import org.odk.collect.android.database.ItemsetDbAdapter;\n+import org.odk.collect.android.forms.Form;\n+import org.odk.collect.android.instances.Instance;\n+import org.odk.collect.android.itemsets.Itemset;\n+import org.odk.collect.android.provider.FormsProvider;\n+import org.odk.collect.android.provider.InstanceProvider;\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static android.provider.BaseColumns._ID;\n+import static org.odk.collect.android.database.ItemsetDbAdapter.KEY_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_MEDIA_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JRCACHE_FILE_PATH;\n+import static org.odk.collect.android.provider.InstanceProviderAPI.InstanceColumns.INSTANCE_FILE_PATH;\n+\n+public class StorageMigrator {", "originalCommit": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQwNTI3Nw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r376405277", "bodyText": "Ok I added such a test.\nWhen it comes to Espresso we need to have the UI implemented first.", "author": "grzesiek2010", "createdAt": "2020-02-07T14:03:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MTM2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrator.java\nsimilarity index 58%\nrename from collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java\nrename to collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrator.java\nindex 7540b2ff7d..54a938a77f 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrator.java\n\n@@ -1,4 +1,4 @@\n-package org.odk.collect.android.storage;\n+package org.odk.collect.android.storage.migration;\n \n import android.content.ContentValues;\n import android.database.Cursor;\n"}}, {"oid": "97d7fe364b273c029e11fd0ff55c461b31f4eba6", "url": "https://github.com/getodk/collect/commit/97d7fe364b273c029e11fd0ff55c461b31f4eba6", "message": "Moved classes responsible for migation to one dir", "committedDate": "2020-02-07T12:03:07Z", "type": "forcePushed"}, {"oid": "62cc09991827ebe2b5a671a4b780113f9c4b4655", "url": "https://github.com/getodk/collect/commit/62cc09991827ebe2b5a671a4b780113f9c4b4655", "message": "Replace AsyncTask with Service", "committedDate": "2020-02-11T14:57:44Z", "type": "forcePushed"}, {"oid": "1500526aee46a3dbb83fb3d6c9f6d1fd3ae8006a", "url": "https://github.com/getodk/collect/commit/1500526aee46a3dbb83fb3d6c9f6d1fd3ae8006a", "message": "Gray out the messgage after starting migration", "committedDate": "2020-02-11T15:16:03Z", "type": "forcePushed"}, {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803", "url": "https://github.com/getodk/collect/commit/0e141054594c4c079b5151ea14f67f7ca3684803", "message": "Removed unused string", "committedDate": "2020-02-11T15:45:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378100613", "bodyText": "I think we should be using an IntentService here (https://developer.android.com/guide/components/services#ExtendingIntentService). I've usually used them in the past as they take care of creating a worker threads and also protect us from multiple requests being exectued simultaneously etc. This would potentially mean the service could take care of the lock in StorageMigrator (.isMigrationBeingPerformed). Also if we do use a plain ol' service I think it needs to call stopSelf() when we're done executing - again an IntentService just takes care of that for us.\nSorry if this is research you already did and made the decision for some reason I'm missing!", "author": "seadowg", "createdAt": "2020-02-12T08:29:49Z", "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "originalCommit": "0e141054594c4c079b5151ea14f67f7ca3684803", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5MzAzNQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378293035", "bodyText": "I was thinking about using broadcast receivers vs livedata... could you take a look at the last commit whwre I replaced broadcast receivers with livedata and share you thought?", "author": "grzesiek2010", "createdAt": "2020-02-12T14:41:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2MDU5NA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378360594", "bodyText": "Using LiveData does seem a lot cleaner in the observers (the Activity and the DialogFragment). I'd want to avoid having the LiveData object being static and also avoid having the StorageMigrator have to deal with LiveData though. This is to avoid us running into problems with tests polluting each other  and also just avoids complicating the StorageMigrator with reactive stuff.\nWhat I might do is look at having a seperate MigrationStatusRepository like this:\nclass MigrationStatusRepository {\n\n    private MutableLiveData<StorageMigrationResult> migrationStatus = new MutableLiveData<>();\n\n    public LiveData<StorageMigrationResult> getStatus() {\n        return migrationStatus;\n    }\n\n    public void setStatus(StorageMigrationResult storageMigrationResult) {\n        migrationStatus.setValue(storageMigrationResult);\n    }\n}\nThe Activity/Fragment would call getStatus() to observe and the Service could write the status when StorageMigrator completes using setStatus. This can be set up as a singleton (Dagger's @Singleton) and injected into the Activity, Fragment and Service. That way it can be easily swapped out in tests for any of those objects.\nHow does that feel? cc/ @lognaturel", "author": "seadowg", "createdAt": "2020-02-12T16:21:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2NDU2NQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378564565", "bodyText": "But the service doesn't know about every single step it just starts migration (one method) sot it might receive the result but not every single status which changes after every step. Looking at your code where you mixed words status and result I think you didn't notice that we need both: one general result and a few statuses to update current progress text.", "author": "grzesiek2010", "createdAt": "2020-02-12T23:05:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2NTQ1MQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378565451", "bodyText": "So I would need to\n\ninject such repository to StorageMigrator class\nor divide the migration into a few methods and call all of them in Service one by one (and then deal with statuses in Service)", "author": "grzesiek2010", "createdAt": "2020-02-12T23:07:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0ODMxOA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378748318", "bodyText": "Ah you're absolutely right I missed that somehow. Sorry about that.\nYeah I'd still think about about looking at something lilke the MigrationStatusRespository. It could injected into the StorageMigrator (probably just as a constructor argument). It could still just have one set/get pair as the \"results\" could also just be a statuses i.e. the status could change from MIGRATING_DATABASES to SUCCESS or  from PREPARING_SCOPED_STORAGE to NOT_ENOUGH_SPACE.", "author": "seadowg", "createdAt": "2020-02-13T09:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg1NDUzMg==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378854532", "bodyText": "Ok I pushed new changes and now I use LiveData and a repository class for both results and statuses. I think those statuses is more like my idea so here is a question to @lognaturel because maybe you just want to display one message like Please wait. it might take a few seconds... and then we can get rid of it at all otherwise I think we need both.", "author": "grzesiek2010", "createdAt": "2020-02-13T13:21:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0OTczNA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379249734", "bodyText": "My initial reaction was that I really like the statuses because it gives users a sense of progress. That said, it's not clear that the information is actionable, the migration is going to be really quick for most people and it's a lot of translation effort for a one-time migration. Let's go with \"Migration in progress.\\nThis may take a few seconds...\" I do like the approach you'd come up with for the statuses, though @grzesiek2010. Sorry to see it go.", "author": "lognaturel", "createdAt": "2020-02-14T04:50:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM1MjMzMw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379352333", "bodyText": "Ok, done.", "author": "grzesiek2010", "createdAt": "2020-02-14T10:18:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java\nindex 02c188cdca..efddf8ca00 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java\n\n@@ -1,51 +1,25 @@\n package org.odk.collect.android.storage.migration;\n \n+import android.app.IntentService;\n import android.content.Intent;\n \n-import androidx.lifecycle.LifecycleService;\n-import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+import androidx.annotation.Nullable;\n \n-import org.jetbrains.annotations.NotNull;\n-import org.odk.collect.android.storage.StoragePathProvider;\n-import org.odk.collect.android.storage.StorageStateProvider;\n+import org.odk.collect.android.application.Collect;\n \n-public class StorageMigrationService extends LifecycleService {\n-    public static final String STORAGE_MIGRATION_STATUS_INTENT = \"storageMigrationStatusIntent\";\n-    public static final String STORAGE_MIGRATION_STATUS = \"storageMigrationStatus\";\n+import javax.inject.Inject;\n \n-    public static final String STORAGE_MIGRATION_RESULT_INTENT = \"storageMigrationResultIntent\";\n-    public static final String STORAGE_MIGRATION_RESULT = \"storageMigrationResult\";\n+public class StorageMigrationService extends IntentService {\n+    @Inject\n+    StorageMigrator storageMigrator;\n \n-    @Override\n-    public int onStartCommand(@NotNull Intent intent, int flags, int startId) {\n-        StoragePathProvider storagePathProvider = new StoragePathProvider();\n-        StorageStateProvider storageStateProvider = new StorageStateProvider();\n-        StorageEraser storageEraser = new StorageEraser(storagePathProvider);\n-\n-        StorageMigrator storageMigrator = new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser);\n-        storageMigrator.getStatus().observe(this, this::sendStatus);\n-\n-        new Thread() {\n-            @Override\n-            public void run() {\n-                StorageMigrator.isMigrationBeingPerformed = true;\n-                sendResult(storageMigrator.performStorageMigration());\n-                StorageMigrator.isMigrationBeingPerformed = false;\n-            }\n-        }.start();\n-\n-        return super.onStartCommand(intent, flags, startId);\n+    public StorageMigrationService() {\n+        super(\"StorageMigrationService\");\n+        Collect.getInstance().getComponent().inject(this);\n     }\n \n-    private void sendStatus(StorageMigrationStatus status) {\n-        Intent intent = new Intent(STORAGE_MIGRATION_STATUS_INTENT);\n-        intent.putExtra(STORAGE_MIGRATION_STATUS, status);\n-        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);\n-    }\n-\n-    private void sendResult(StorageMigrationResult result) {\n-        Intent intent = new Intent(STORAGE_MIGRATION_RESULT_INTENT);\n-        intent.putExtra(STORAGE_MIGRATION_RESULT, result);\n-        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);\n+    @Override\n+    protected void onHandleIntent(@Nullable Intent intent) {\n+        storageMigrator.performStorageMigration();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwODk4NQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378108985", "bodyText": "You should be able to use the MaterialFullScreenDialogFragment for this I think", "author": "seadowg", "createdAt": "2020-02-12T08:48:05Z", "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.TextView;\n+\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.widget.Toolbar;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.R;\n+\n+public class StorageMigrationDialog extends DialogFragment {", "originalCommit": "0e141054594c4c079b5151ea14f67f7ca3684803", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1Mjc0OA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378252748", "bodyText": "Fixed.", "author": "grzesiek2010", "createdAt": "2020-02-12T13:35:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwODk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java\nindex 9bf4480829..f8faaac24b 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java\n\n@@ -7,28 +7,58 @@ import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n import android.widget.Button;\n+import android.widget.LinearLayout;\n import android.widget.TextView;\n \n-import androidx.annotation.Nullable;\n-import androidx.appcompat.widget.Toolbar;\n-import androidx.fragment.app.DialogFragment;\n-\n import org.jetbrains.annotations.NotNull;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.WebViewActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.AdminPasswordDialog;\n+import org.odk.collect.android.material.MaterialFullScreenDialogFragment;\n+import org.odk.collect.android.utilities.AdminPasswordProvider;\n+import org.odk.collect.android.utilities.DialogUtils;\n+\n+import butterknife.BindView;\n+import butterknife.ButterKnife;\n+\n+public class StorageMigrationDialog extends MaterialFullScreenDialogFragment {\n+\n+    private final int unsentInstancesNumber;\n+\n+    @BindView(R.id.cancelButton)\n+    Button cancelButton;\n+\n+    @BindView(R.id.migrateButton)\n+    Button migrateButton;\n \n-public class StorageMigrationDialog extends DialogFragment {\n+    @BindView(R.id.messageText1)\n+    TextView messageText1;\n \n-    private TextView statusTextView;\n+    @BindView(R.id.messageText2)\n+    TextView messageText2;\n \n-    public static StorageMigrationDialog create() {\n-        return new StorageMigrationDialog();\n+    @BindView(R.id.messageText3)\n+    TextView messageText3;\n+\n+    @BindView(R.id.moreDetailsButton)\n+    TextView moreDetailsButton;\n+\n+    @BindView(R.id.errorText)\n+    TextView errorText;\n+\n+    @BindView(R.id.progressBar)\n+    LinearLayout progressBar;\n+\n+    private final AdminPasswordProvider adminPasswordProvider;\n+\n+    public static StorageMigrationDialog create(AdminPasswordProvider adminPasswordProvider, int unsentInstances) {\n+        return new StorageMigrationDialog(adminPasswordProvider, unsentInstances);\n     }\n \n-    @Override\n-    public void onCreate(@Nullable Bundle savedInstanceState) {\n-        super.onCreate(savedInstanceState);\n-        setCancelable(false);\n-        setStyle(DialogFragment.STYLE_NORMAL, R.style.Theme_Collect_Dialog_FullScreen);\n+    private StorageMigrationDialog(AdminPasswordProvider adminPasswordProvider, int unsentInstancesNumber) {\n+        this.adminPasswordProvider = adminPasswordProvider;\n+        this.unsentInstancesNumber = unsentInstancesNumber;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNDYzNg==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378114636", "bodyText": "I think we need to break this object up a bit so we're not having to fake/mock methods on the object under test. It looks like you've had to do this because of a bunch of static methods though. Maybe using a similar strategy to the BackgroundLocationHelper that @lognaturel created? This worked at the time as it allowed her to wrap a bunch of static methods/singletons that the new object she was build needed without having to go and refactor/unwrap all of them. This interface could also include isFormUploaderRunning() and isFormDownloaderRunning().", "author": "seadowg", "createdAt": "2020-02-12T08:59:27Z", "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class StorageMigratorTest {\n+\n+    private StorageMigrator storageMigrator;\n+    private StorageEraser storageEraser;\n+    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);\n+    private final StorageStateProvider storageStateProvider = mock(StorageStateProvider.class);\n+\n+    @Before\n+    public void setup() {\n+        storageEraser = spy(new StorageEraser(storagePathProvider));\n+        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser));\n+\n+        doNothing().when(storageMigrator).reopenDatabases();", "originalCommit": "0e141054594c4c079b5151ea14f67f7ca3684803", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0ODU2Mw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379248563", "bodyText": "Agreed that sounds like a promising direction.", "author": "lognaturel", "createdAt": "2020-02-14T04:43:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNDYzNg=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java b/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java\nindex c9d2c2537c..1fdabe4131 100644\n--- a/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java\n+++ b/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java\n\n@@ -17,14 +17,14 @@ import static org.mockito.Mockito.verify;\n public class StorageMigratorTest {\n \n     private StorageMigrator storageMigrator;\n-    private StorageEraser storageEraser;\n-    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);\n+    private final StoragePathProvider storagePathProvider = mock(StoragePathProvider.class);\n     private final StorageStateProvider storageStateProvider = mock(StorageStateProvider.class);\n+    private final StorageEraser storageEraser = mock(StorageEraser.class);\n+    private final StorageMigrationRepository storageMigrationRepository = mock(StorageMigrationRepository.class);\n \n     @Before\n     public void setup() {\n-        storageEraser = spy(new StorageEraser(storagePathProvider));\n-        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser));\n+        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser, storageMigrationRepository));\n \n         doNothing().when(storageMigrator).reopenDatabases();\n         doNothing().when(storageEraser).clearOdkDirOnScopedStorage();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNTMwOA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378115308", "bodyText": "Can this just be a mock rather than a spy? Personally I find spies make tests harder to read and understand as the boundaries of the test (i.e. what is faked/stubbed) become unclear.", "author": "seadowg", "createdAt": "2020-02-12T09:00:46Z", "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class StorageMigratorTest {\n+\n+    private StorageMigrator storageMigrator;\n+    private StorageEraser storageEraser;\n+    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);", "originalCommit": "0e141054594c4c079b5151ea14f67f7ca3684803", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1Mjg2OQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378252869", "bodyText": "Fixed.", "author": "grzesiek2010", "createdAt": "2020-02-12T13:35:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNTMwOA=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java b/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java\nindex c9d2c2537c..1fdabe4131 100644\n--- a/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java\n+++ b/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java\n\n@@ -17,14 +17,14 @@ import static org.mockito.Mockito.verify;\n public class StorageMigratorTest {\n \n     private StorageMigrator storageMigrator;\n-    private StorageEraser storageEraser;\n-    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);\n+    private final StoragePathProvider storagePathProvider = mock(StoragePathProvider.class);\n     private final StorageStateProvider storageStateProvider = mock(StorageStateProvider.class);\n+    private final StorageEraser storageEraser = mock(StorageEraser.class);\n+    private final StorageMigrationRepository storageMigrationRepository = mock(StorageMigrationRepository.class);\n \n     @Before\n     public void setup() {\n-        storageEraser = spy(new StorageEraser(storagePathProvider));\n-        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser));\n+        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser, storageMigrationRepository));\n \n         doNothing().when(storageMigrator).reopenDatabases();\n         doNothing().when(storageEraser).clearOdkDirOnScopedStorage();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNjEzOQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378116139", "bodyText": "Again would be nice for this to be a mock/fake rather than a spy.", "author": "seadowg", "createdAt": "2020-02-12T09:02:17Z", "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class StorageMigratorTest {\n+\n+    private StorageMigrator storageMigrator;\n+    private StorageEraser storageEraser;\n+    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);\n+    private final StorageStateProvider storageStateProvider = mock(StorageStateProvider.class);\n+\n+    @Before\n+    public void setup() {\n+        storageEraser = spy(new StorageEraser(storagePathProvider));", "originalCommit": "0e141054594c4c079b5151ea14f67f7ca3684803", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1MjkzOQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378252939", "bodyText": "Fixed.", "author": "grzesiek2010", "createdAt": "2020-02-12T13:35:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNjEzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java b/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java\nindex c9d2c2537c..1fdabe4131 100644\n--- a/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java\n+++ b/collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java\n\n@@ -17,14 +17,14 @@ import static org.mockito.Mockito.verify;\n public class StorageMigratorTest {\n \n     private StorageMigrator storageMigrator;\n-    private StorageEraser storageEraser;\n-    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);\n+    private final StoragePathProvider storagePathProvider = mock(StoragePathProvider.class);\n     private final StorageStateProvider storageStateProvider = mock(StorageStateProvider.class);\n+    private final StorageEraser storageEraser = mock(StorageEraser.class);\n+    private final StorageMigrationRepository storageMigrationRepository = mock(StorageMigrationRepository.class);\n \n     @Before\n     public void setup() {\n-        storageEraser = spy(new StorageEraser(storagePathProvider));\n-        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser));\n+        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser, storageMigrationRepository));\n \n         doNothing().when(storageMigrator).reopenDatabases();\n         doNothing().when(storageEraser).clearOdkDirOnScopedStorage();\n"}}, {"oid": "de4a297917d1b8b7ac2eae0018a8567d74fd4486", "url": "https://github.com/getodk/collect/commit/de4a297917d1b8b7ac2eae0018a8567d74fd4486", "message": "Use Livedata instead of broadcast receivers", "committedDate": "2020-02-12T14:40:09Z", "type": "forcePushed"}, {"oid": "abbeb518d0a93a2a38f9697259333101d8620866", "url": "https://github.com/getodk/collect/commit/abbeb518d0a93a2a38f9697259333101d8620866", "message": "Use Livedata instead of broadcast receivers", "committedDate": "2020-02-12T14:45:10Z", "type": "forcePushed"}, {"oid": "bd3ea6cccfde37848601cc639945cc4f25bb6549", "url": "https://github.com/getodk/collect/commit/bd3ea6cccfde37848601cc639945cc4f25bb6549", "message": "Use Livedata instead of broadcast receivers", "committedDate": "2020-02-12T14:48:25Z", "type": "forcePushed"}, {"oid": "0ad9d8c9e1d36fe18889aa6032d3db20cd0b4c85", "url": "https://github.com/getodk/collect/commit/0ad9d8c9e1d36fe18889aa6032d3db20cd0b4c85", "message": "Use Livedata instead of broadcast receivers", "committedDate": "2020-02-12T14:51:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM0NzM4Mg==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378347382", "bodyText": "Oh wow was this making it pop open the keyboard even though there aren't any fields? That's annoying. Feel free to reverse it so the default is false and the other dialogs override.", "author": "seadowg", "createdAt": "2020-02-12T16:02:05Z", "path": "collect_app/src/main/java/org/odk/collect/android/material/MaterialFullScreenDialogFragment.java", "diffHunk": "@@ -39,8 +39,10 @@ public void onStart() {\n             int height = ViewGroup.LayoutParams.MATCH_PARENT;\n             dialog.getWindow().setLayout(width, height);\n \n-            // Make sure soft keyboard shows for focused field - annoyingly needed\n-            dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);\n+            if (shouldShowSoftKeyboard()) {", "originalCommit": "0ad9d8c9e1d36fe18889aa6032d3db20cd0b4c85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3MTE2NA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378771164", "bodyText": "Fixed.", "author": "grzesiek2010", "createdAt": "2020-02-13T10:23:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM0NzM4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2aec2cef76323fcadf43baad6f780922420fbea9", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/material/MaterialFullScreenDialogFragment.java b/collect_app/src/main/java/org/odk/collect/android/material/MaterialFullScreenDialogFragment.java\nindex b9479111d3..1c3f4eec60 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/material/MaterialFullScreenDialogFragment.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/material/MaterialFullScreenDialogFragment.java\n\n@@ -39,10 +38,8 @@ public abstract class MaterialFullScreenDialogFragment extends DialogFragment {\n             int height = ViewGroup.LayoutParams.MATCH_PARENT;\n             dialog.getWindow().setLayout(width, height);\n \n-            if (shouldShowSoftKeyboard()) {\n-                // Make sure soft keyboard shows for focused field - annoyingly needed\n-                dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);\n-            }\n+            // Make sure soft keyboard shows for focused field - annoyingly needed\n+            dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);\n \n             setCancelable(false);\n             dialog.setOnKeyListener((dialogInterface, keyCode, event) -> {\n"}}, {"oid": "dcc8858054effc1658c7fd6c93336794057921eb", "url": "https://github.com/getodk/collect/commit/dcc8858054effc1658c7fd6c93336794057921eb", "message": "Use Livedata instead of broadcast receivers", "committedDate": "2020-02-13T10:08:57Z", "type": "forcePushed"}, {"oid": "c648963c21bc00901ebce412c99ce83758185404", "url": "https://github.com/getodk/collect/commit/c648963c21bc00901ebce412c99ce83758185404", "message": "Code improvements", "committedDate": "2020-02-13T12:46:05Z", "type": "forcePushed"}, {"oid": "5caad54c54b2ff94111e7edf5fd4c99566104dc1", "url": "https://github.com/getodk/collect/commit/5caad54c54b2ff94111e7edf5fd4c99566104dc1", "message": "Code improvements", "committedDate": "2020-02-13T12:48:51Z", "type": "forcePushed"}, {"oid": "ee4950f919a3c52ce845b1ebd2d445b7440a7249", "url": "https://github.com/getodk/collect/commit/ee4950f919a3c52ce845b1ebd2d445b7440a7249", "message": "Code improvements", "committedDate": "2020-02-13T12:52:48Z", "type": "forcePushed"}, {"oid": "a39b50ca8ce1004dbb524e23d861052f2ba83918", "url": "https://github.com/getodk/collect/commit/a39b50ca8ce1004dbb524e23d861052f2ba83918", "message": "Code improvements", "committedDate": "2020-02-13T13:09:47Z", "type": "forcePushed"}, {"oid": "faa160541062d8bf23fc55ff1a296e1bf2b6dc2a", "url": "https://github.com/getodk/collect/commit/faa160541062d8bf23fc55ff1a296e1bf2b6dc2a", "message": "Code improvements", "committedDate": "2020-02-13T13:10:48Z", "type": "forcePushed"}, {"oid": "a1eadb0a3388f7b0fd3a0a46285d77a54b356a90", "url": "https://github.com/getodk/collect/commit/a1eadb0a3388f7b0fd3a0a46285d77a54b356a90", "message": "Code improvements", "committedDate": "2020-02-13T13:12:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0ODAzMw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379248033", "bodyText": "Migartion -> Migration", "author": "lognaturel", "createdAt": "2020-02-14T04:39:48Z", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java", "diffHunk": "@@ -1,21 +1,78 @@\n package org.odk.collect.android.storage;\n \n+import android.os.Build;\n import android.os.Environment;\n+import android.os.StatFs;\n \n import org.odk.collect.android.preferences.GeneralSharedPreferences;\n \n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n import static org.odk.collect.android.preferences.GeneralKeys.KEY_SCOPED_STORAGE_USED;\n \n public class StorageStateProvider {\n-    boolean isScopedStorageUsed() {\n+\n+    public boolean isScopedStorageUsed() {\n         return GeneralSharedPreferences.getInstance().getBoolean(KEY_SCOPED_STORAGE_USED, false);\n     }\n \n-    public void recordMigrationToScopedStorage() {\n+    public void enableUsingScopedStorage() {\n         GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, true);\n     }\n \n+    public void disableUsingScopedStorage() {\n+        GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, false);\n+    }\n+\n     boolean isStorageMounted() {\n         return Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED);\n     }\n+\n+    public boolean isEnoughSpaceToPerformMigartion(StoragePathProvider storagePathProvider) {", "originalCommit": "a1eadb0a3388f7b0fd3a0a46285d77a54b356a90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM1MjAzNQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379352035", "bodyText": "Fixed.", "author": "grzesiek2010", "createdAt": "2020-02-14T10:18:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0ODAzMw=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java b/collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java\nindex 07f34a4823..f496093e8c 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java\n\n@@ -1,6 +1,5 @@\n package org.odk.collect.android.storage;\n \n-import android.os.Build;\n import android.os.Environment;\n import android.os.StatFs;\n \n"}}, {"oid": "513d3cfed7784daf868d8eac1835ac41cedf4308", "url": "https://github.com/getodk/collect/commit/513d3cfed7784daf868d8eac1835ac41cedf4308", "message": "Code improvemenets", "committedDate": "2020-02-14T10:47:04Z", "type": "forcePushed"}, {"oid": "4786e5177334eafdd28a262e5c3a236923713beb", "url": "https://github.com/getodk/collect/commit/4786e5177334eafdd28a262e5c3a236923713beb", "message": "Code improvemenets", "committedDate": "2020-02-14T10:54:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1Njk4MQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r380456981", "bodyText": "Interesting! Does this mean that the getValuesFromInstanceObject method wasn't used in that context before?", "author": "lognaturel", "createdAt": "2020-02-18T05:06:34Z", "path": "collect_app/src/main/java/org/odk/collect/android/dao/InstancesDao.java", "diffHunk": "@@ -363,9 +363,8 @@ public ContentValues getValuesFromInstanceObject(Instance instance) {\n         values.put(InstanceColumns.STATUS, instance.getStatus());\n         values.put(InstanceColumns.LAST_STATUS_CHANGE_DATE, instance.getLastStatusChangeDate());\n         values.put(InstanceColumns.DELETED_DATE, instance.getDeletedDate());\n+        values.put(InstanceColumns.GEOMETRY, instance.getGeometry());", "originalCommit": "40c0f954e3f227b5f58a28a0255f46c60b3f7d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU5ODExMA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r380598110", "bodyText": "Yes it was used in some tests but didn't verify those new columns.", "author": "grzesiek2010", "createdAt": "2020-02-18T10:52:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1Njk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2aec2cef76323fcadf43baad6f780922420fbea9", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/dao/InstancesDao.java b/collect_app/src/main/java/org/odk/collect/android/dao/InstancesDao.java\nindex 7c20b45ee2..3b48c42188 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/dao/InstancesDao.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/dao/InstancesDao.java\n\n@@ -363,8 +359,9 @@ public class InstancesDao {\n         values.put(InstanceColumns.STATUS, instance.getStatus());\n         values.put(InstanceColumns.LAST_STATUS_CHANGE_DATE, instance.getLastStatusChangeDate());\n         values.put(InstanceColumns.DELETED_DATE, instance.getDeletedDate());\n-        values.put(InstanceColumns.GEOMETRY, instance.getGeometry());\n         values.put(InstanceColumns.GEOMETRY_TYPE, instance.getGeometryType());\n+        values.put(InstanceColumns.GEOMETRY_TYPE, instance.getGeometry());\n+\n         return values;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1NzMyMQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r380457321", "bodyText": "Is your thinking that this test prevents someone accidentally removing one of the db fields from the method? Is this likely? It seems like it doesn't help prevent the kind of problem we saw here -- a new db field not being represented in the method.\nDoes it have to be a connected test? Seems it could be Robolectric-based?", "author": "lognaturel", "createdAt": "2020-02-18T05:08:24Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/dao/InstancesDaoTest.java", "diffHunk": "@@ -195,6 +196,35 @@ public void updateInstanceTest() {\n         assertThat(formWithGeopointInstance.getGeometry(), is(nullValue()));\n     }\n \n+    @Test\n+    public void getValuesFromInstanceObjectTest() {", "originalCommit": "40c0f954e3f227b5f58a28a0255f46c60b3f7d68", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3df5d35675eed9bcf9f9f09ef73a817f8a27bd8a", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/dao/InstancesDaoTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/dao/InstancesDaoTest.java\nindex 2611fbf436..efa75e392e 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/dao/InstancesDaoTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/dao/InstancesDaoTest.java\n\n@@ -196,35 +195,6 @@ public class InstancesDaoTest {\n         assertThat(formWithGeopointInstance.getGeometry(), is(nullValue()));\n     }\n \n-    @Test\n-    public void getValuesFromInstanceObjectTest() {\n-        ContentValues values = new InstancesDao().getValuesFromInstanceObject(new Instance.Builder()\n-                .displayName(\"Form with geopoint\")\n-                .submissionUri(\"https://fakeSubmission.com\")\n-                .canEditWhenComplete(true)\n-                .instanceFilePath(\"/my/fake/path\")\n-                .jrFormId(\"fake\")\n-                .jrVersion(\"1\")\n-                .status(InstanceProviderAPI.STATUS_SUBMITTED)\n-                .lastStatusChangeDate(1487595836793L)\n-                .deletedDate(1487695836793L)\n-                .geometry(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[127.6, 11.1]}\")\n-                .geometryType(\"Point\")\n-                .build());\n-\n-        assertThat(values.get(InstanceColumns.DISPLAY_NAME), is(\"Form with geopoint\"));\n-        assertThat(values.get(InstanceColumns.SUBMISSION_URI), is(\"https://fakeSubmission.com\"));\n-        assertThat(values.get(InstanceColumns.CAN_EDIT_WHEN_COMPLETE), is(\"true\"));\n-        assertThat(values.get(InstanceColumns.INSTANCE_FILE_PATH), is(\"/my/fake/path\"));\n-        assertThat(values.get(InstanceColumns.JR_FORM_ID), is(\"fake\"));\n-        assertThat(values.get(InstanceColumns.JR_VERSION), is(\"1\"));\n-        assertThat(values.get(InstanceColumns.STATUS), is(InstanceProviderAPI.STATUS_SUBMITTED));\n-        assertThat(values.get(InstanceColumns.LAST_STATUS_CHANGE_DATE), is(1487595836793L));\n-        assertThat(values.get(InstanceColumns.DELETED_DATE), is(1487695836793L));\n-        assertThat(values.get(InstanceColumns.GEOMETRY), is(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[127.6, 11.1]}\"));\n-        assertThat(values.get(InstanceColumns.GEOMETRY_TYPE), is(\"Point\"));\n-    }\n-\n     private void fillDatabase() {\n         hypertensionScreeningInstance = new Instance.Builder()\n                 .displayName(\"Hypertension Screening\")\n"}}, {"oid": "d4c1d90bf376d2f30ff5d5c299663f3336ca1d09", "url": "https://github.com/getodk/collect/commit/d4c1d90bf376d2f30ff5d5c299663f3336ca1d09", "message": "Use the banner to display migration results", "committedDate": "2020-02-18T10:58:29Z", "type": "forcePushed"}, {"oid": "a194594b3806c96cce6c5f2ddf456a6343a9512f", "url": "https://github.com/getodk/collect/commit/a194594b3806c96cce6c5f2ddf456a6343a9512f", "message": "Use the banner to display migration results", "committedDate": "2020-02-18T11:09:28Z", "type": "forcePushed"}, {"oid": "d2373fd5376e36350669a17d2d78760edac60da7", "url": "https://github.com/getodk/collect/commit/d2373fd5376e36350669a17d2d78760edac60da7", "message": "Fixed buttons visiblility in the banner", "committedDate": "2020-02-19T23:46:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MDYzOQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381470639", "bodyText": "Do you really need this? Like the failure message, the success message feels transient. So I think it's good for it to keep existing while someone is in a single \"app session\" but I don't think it still needs to be shown if the user closes and then reopens the app. That is, Collect going out of memory would implicitly dismiss the dialog.", "author": "lognaturel", "createdAt": "2020-02-19T18:43:30Z", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/GeneralKeys.java", "diffHunk": "@@ -146,7 +148,8 @@\n             KEY_METADATA_MIGRATED,\n             KEY_AUTOSEND_WIFI,\n             KEY_AUTOSEND_NETWORK,\n-            KEY_SCOPED_STORAGE_USED\n+            KEY_SCOPED_STORAGE_USED,\n+            KEY_SCOPED_STORAGE_BANNER_DISMISSED", "originalCommit": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NzQ2OQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381987469", "bodyText": "Fixed.", "author": "grzesiek2010", "createdAt": "2020-02-20T13:09:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MDYzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/preferences/GeneralKeys.java b/collect_app/src/main/java/org/odk/collect/android/preferences/GeneralKeys.java\nindex 3f6b7f54ff..2c1e3f4101 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/preferences/GeneralKeys.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/preferences/GeneralKeys.java\n\n@@ -148,11 +148,10 @@ public final class GeneralKeys {\n             KEY_METADATA_MIGRATED,\n             KEY_AUTOSEND_WIFI,\n             KEY_AUTOSEND_NETWORK,\n-            KEY_SCOPED_STORAGE_USED,\n-            KEY_SCOPED_STORAGE_BANNER_DISMISSED\n+            KEY_SCOPED_STORAGE_USED\n     );\n \n-    public static final HashMap<String, Object> GENERAL_KEYS = getHashMap();\n+    public static final HashMap<String, Object> DEFAULTS = getHashMap();\n \n     private GeneralKeys() {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MzU1NQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381473555", "bodyText": "I think you can pre-emptively go ahead and remove this one since we're sure we're changing the minSdk in this release.", "author": "lognaturel", "createdAt": "2020-02-19T18:48:55Z", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java", "diffHunk": "@@ -1,21 +1,78 @@\n package org.odk.collect.android.storage;\n \n+import android.os.Build;\n import android.os.Environment;\n+import android.os.StatFs;\n \n import org.odk.collect.android.preferences.GeneralSharedPreferences;\n \n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n import static org.odk.collect.android.preferences.GeneralKeys.KEY_SCOPED_STORAGE_USED;\n \n public class StorageStateProvider {\n-    boolean isScopedStorageUsed() {\n+\n+    public boolean isScopedStorageUsed() {\n         return GeneralSharedPreferences.getInstance().getBoolean(KEY_SCOPED_STORAGE_USED, false);\n     }\n \n-    public void recordMigrationToScopedStorage() {\n+    public void enableUsingScopedStorage() {\n         GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, true);\n     }\n \n+    public void disableUsingScopedStorage() {\n+        GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, false);\n+    }\n+\n     boolean isStorageMounted() {\n         return Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED);\n     }\n+\n+    public boolean isEnoughSpaceToPerformMigration(StoragePathProvider storagePathProvider) {\n+        try {\n+            return getAvailableScopedStorageSize(storagePathProvider) > getOdkDirSize(storagePathProvider);\n+        } catch (Exception | Error e) {\n+            Timber.w(e);\n+            return false;\n+        }\n+    }\n+\n+    private long getAvailableScopedStorageSize(StoragePathProvider storagePathProvider) {\n+        String scopedStoragePath = storagePathProvider.getScopedExternalFilesDirPath();\n+        if (scopedStoragePath.isEmpty()) {\n+            return 0;\n+        }\n+\n+        StatFs stat = new StatFs(scopedStoragePath);\n+        long blockSize;\n+        long availableBlocks;\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {", "originalCommit": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMzQ2MQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381923461", "bodyText": "Done.", "author": "grzesiek2010", "createdAt": "2020-02-20T10:50:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MzU1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java b/collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java\nindex 9320622903..f496093e8c 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java\n\n@@ -1,6 +1,5 @@\n package org.odk.collect.android.storage;\n \n-import android.os.Build;\n import android.os.Environment;\n import android.os.StatFs;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3NDM0OA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381474348", "bodyText": "I think we'll introduce a more user-facing post but this is a great placeholder for now.", "author": "lognaturel", "createdAt": "2020-02-19T18:50:23Z", "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.WebViewActivity;\n+import org.odk.collect.android.material.MaterialFullScreenDialogFragment;\n+\n+import butterknife.BindView;\n+import butterknife.ButterKnife;\n+\n+public class StorageMigrationDialog extends MaterialFullScreenDialogFragment {\n+\n+    private final int unsentInstancesNumber;\n+\n+    @BindView(R.id.cancelButton)\n+    Button cancelButton;\n+\n+    @BindView(R.id.migrateButton)\n+    Button migrateButton;\n+\n+    @BindView(R.id.messageText1)\n+    TextView messageText1;\n+\n+    @BindView(R.id.messageText2)\n+    TextView messageText2;\n+\n+    @BindView(R.id.messageText3)\n+    TextView messageText3;\n+\n+    @BindView(R.id.moreDetailsButton)\n+    TextView moreDetailsButton;\n+\n+    @BindView(R.id.progressBar)\n+    LinearLayout progressBar;\n+\n+    public static StorageMigrationDialog create(int unsentInstances) {\n+        return new StorageMigrationDialog(unsentInstances);\n+    }\n+\n+    private StorageMigrationDialog(int unsentInstancesNumber) {\n+        this.unsentInstancesNumber = unsentInstancesNumber;\n+    }\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        return inflater.inflate(R.layout.storage_migration_dialog, container, false);\n+    }\n+\n+    @Override\n+    public void onViewCreated(@NotNull View view, Bundle savedInstanceState) {\n+        super.onViewCreated(view, savedInstanceState);\n+        ButterKnife.bind(this, view);\n+\n+        setUpToolbar();\n+        setUpMessageAboutUnsetSubmissions();\n+\n+        moreDetailsButton.setOnClickListener(view1 -> showMoreDetails());\n+        cancelButton.setOnClickListener(v -> dismiss());\n+        migrateButton.setOnClickListener(v -> {\n+            disableDialog();\n+            showProgressBar();\n+            startStorageMigrationService();\n+        });\n+    }\n+\n+    @Override\n+    protected void onCloseClicked() {\n+    }\n+\n+    @Override\n+    protected void onBackPressed() {\n+    }\n+\n+    private void setUpToolbar() {\n+        getToolbar().setTitle(R.string.storage_migration_dialog_title);\n+        getToolbar().setNavigationIcon(null);\n+    }\n+\n+    private void setUpMessageAboutUnsetSubmissions() {\n+        if (unsentInstancesNumber > 0) {\n+            messageText2.setVisibility(View.VISIBLE);\n+            messageText2.setText(getString(R.string.storage_migration_dialog_message2, unsentInstancesNumber));\n+        }\n+    }\n+\n+    private void showMoreDetails() {\n+        Intent intent = new Intent(getContext(), WebViewActivity.class);\n+        intent.putExtra(\"url\", \"https://forum.opendatakit.org/t/24159\");", "originalCommit": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java\nindex b6a391b595..f8faaac24b 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java\n\n@@ -13,7 +13,11 @@ import android.widget.TextView;\n import org.jetbrains.annotations.NotNull;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.WebViewActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.AdminPasswordDialog;\n import org.odk.collect.android.material.MaterialFullScreenDialogFragment;\n+import org.odk.collect.android.utilities.AdminPasswordProvider;\n+import org.odk.collect.android.utilities.DialogUtils;\n \n import butterknife.BindView;\n import butterknife.ButterKnife;\n"}}, {"oid": "ff46be76e57131f524b0dbf3085856b6671235e5", "url": "https://github.com/getodk/collect/commit/ff46be76e57131f524b0dbf3085856b6671235e5", "message": "Get rid of additional odk dir on scoped storage", "committedDate": "2020-02-20T13:08:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxODA3MA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382018070", "bodyText": "I'm missing why we need this. Is there any problem in just keeping the result?", "author": "seadowg", "createdAt": "2020-02-20T14:05:02Z", "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+\n+public class StorageMigrationRepository {\n+    private MutableLiveData<StorageMigrationResult> migrationResult = new MutableLiveData<>();\n+\n+    private boolean isMigrationBeingPerformed;\n+\n+    public LiveData<StorageMigrationResult> getResult() {\n+        return migrationResult;\n+    }\n+\n+    public void setResult(StorageMigrationResult storageMigrationResult) {\n+        migrationResult.postValue(storageMigrationResult);\n+    }\n+\n+    public boolean isMigrationBeingPerformed() {\n+        return isMigrationBeingPerformed;\n+    }\n+\n+    void markMigrationStart() {\n+        isMigrationBeingPerformed = true;\n+    }\n+\n+    void markMigrationEnd() {\n+        isMigrationBeingPerformed = false;\n+    }\n+\n+    public void consumeResult() {", "originalCommit": "531b1366db726f7624e43f2572a76b7ada4b5ef3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0NzkzOQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382447939", "bodyText": "Now I use it in MainMenuActivity.onDestroy() otherwise if you close the app and open it again the banner with success message will be visible because the status persist. We agreed that the banner in such a case should be gone.", "author": "grzesiek2010", "createdAt": "2020-02-21T08:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxODA3MA=="}], "type": "inlineReview", "revised_code": {"commit": "ea71d20a2c26a592559e7c10b91a90a008af9f0e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationRepository.java b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationRepository.java\nindex 3a12f34862..8d01ce5d7f 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationRepository.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationRepository.java\n\n@@ -28,7 +28,7 @@ public class StorageMigrationRepository {\n         isMigrationBeingPerformed = false;\n     }\n \n-    public void consumeResult() {\n+    public void clearResult() {\n         migrationResult = new MutableLiveData<>();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyNDczNQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382024735", "bodyText": "Maybe I'm misinterpreting what @lognaturel was getting at before but I don't think we need any state around the banner at all. If the activity is recreated (rotation/out of memory) I think the LiveData observation on the result will take care of continuing to show the dialog (as the result is stored in a singlton). This is assuming we get rid of the consumeResult call.", "author": "seadowg", "createdAt": "2020-02-20T14:15:40Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -79,9 +84,9 @@\n  * @author Carl Hartung (carlhartung@gmail.com)\n  * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class MainMenuActivity extends CollectAbstractActivity {\n+public class MainMenuActivity extends CollectAbstractActivity implements AdminPasswordDialog.AdminPasswordDialogListener {\n \n-    private static final int PASSWORD_DIALOG = 1;\n+    private static final String KEEP_BANNER_WITH_SUCCESS_MSG_VISIBLE = \"keepBannerWithSuccessMsgVisible\";", "originalCommit": "531b1366db726f7624e43f2572a76b7ada4b5ef3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxMzQ4Ng==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382313486", "bodyText": "I think there are two reasons that it's still here. We want the success banner to be user-dismissible so this currently is what keeps track of whether the user has dismissed it or not. I think an alternative would be to clear/consume/nuke the livedata value on dismissal. I think the other is that the success banner should only hold the success text where as error banners keep notice test above the error. I think that could be done by making the case based on the livedata observed value.", "author": "lognaturel", "createdAt": "2020-02-20T23:19:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyNDczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0ODQ4NA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382448484", "bodyText": "I improved the code a bit removing that field and using just livedata + clearing the result in onDestroy();", "author": "grzesiek2010", "createdAt": "2020-02-21T08:18:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyNDczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "ea71d20a2c26a592559e7c10b91a90a008af9f0e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\nindex ce85becff9..44c0e7f866 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n\n@@ -84,9 +84,7 @@ import static org.odk.collect.android.preferences.GeneralKeys.KEY_SUBMISSION_TRA\n  * @author Carl Hartung (carlhartung@gmail.com)\n  * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class MainMenuActivity extends CollectAbstractActivity implements AdminPasswordDialog.AdminPasswordDialogListener {\n-\n-    private static final String KEEP_BANNER_WITH_SUCCESS_MSG_VISIBLE = \"keepBannerWithSuccessMsgVisible\";\n+public class MainMenuActivity extends CollectAbstractActivity implements AdminPasswordDialog.AdminPasswordDialogCallback {\n \n     private static final boolean EXIT = true;\n     // buttons\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382029109", "bodyText": "Could this just use showIfNotShowing instead? and call startStorageMigration on the returned dialog?", "author": "seadowg", "createdAt": "2020-02-20T14:22:47Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -585,6 +559,26 @@ private boolean loadSharedPreferencesFromFile(File src) {\n         return res;\n     }\n \n+    @Override\n+    public void onCorrectAdminPassword(AdminPasswordDialog.Action action) {\n+        switch (action) {\n+            case ADMIN_SETTINGS:\n+                startActivity(new Intent(this, AdminPreferencesActivity.class));\n+                break;\n+            case STORAGE_MIGRATION:\n+                StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());", "originalCommit": "531b1366db726f7624e43f2572a76b7ada4b5ef3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MjY1Ng==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382452656", "bodyText": "Uuuups I don't understand... showIfNotShowing what? A user should be asked for password when they clicks on MIGRATE button from StorageMigrationDialog not LEARN MORE AND MIGRATE from the Main Menu. Am I missing something or maybe it's you \ud83d\ude04", "author": "grzesiek2010", "createdAt": "2020-02-21T08:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUwODk1Ng==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382508956", "bodyText": "hah yeah sorry I meant DialogUtils.showIfNotShowing. Does that make sense? I wouldn't be surprised if I have the flow wrong in my head here!", "author": "seadowg", "createdAt": "2020-02-21T10:32:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUxMzAyMA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382513020", "bodyText": "I know you meant DialogUtils.showIfNotShowing but there is nothing to show here.", "author": "grzesiek2010", "createdAt": "2020-02-21T10:41:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUxNjE4Mg==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382516182", "bodyText": "I guess my head it's a nice way of \"fetching\" while also ensuring it's definitely on screen. Here it looks like you do expect the dialog to be showing. Is that right? If so there is a case here where if the dialog for some reason isn't showing then this is just a dead end (as storageMigrationDialog != null wouldn't pass). The code could just be:\ncase STORAGE_MIGRATION:\n    DialogUtils.showIfNotShowing(new StorageMigrationDialog(), getSupportFragmentManager()).startStorageMigration();\nIf we did that we should probably change showIfNotShowing to take a class rather than an instance (to not waste allocations).", "author": "seadowg", "createdAt": "2020-02-21T10:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUyMjA0Ng==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382522046", "bodyText": "Ok, now I understand what you mean, fixed. Thanks!", "author": "grzesiek2010", "createdAt": "2020-02-21T11:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUyMzA5Ng==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382523096", "bodyText": "Sorry I absolutely should have just put the example in at first!", "author": "seadowg", "createdAt": "2020-02-21T11:03:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "547bd2964fbf622ea6a509213c86d928f4b471a1", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\nindex ce85becff9..2a393fabdc 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n\n@@ -566,10 +561,9 @@ public class MainMenuActivity extends CollectAbstractActivity implements AdminPa\n                 startActivity(new Intent(this, AdminPreferencesActivity.class));\n                 break;\n             case STORAGE_MIGRATION:\n-                StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());\n-                if (storageMigrationDialog != null) {\n-                    storageMigrationDialog.startStorageMigration();\n-                }\n+                DialogUtils\n+                        .showIfNotShowing(StorageMigrationDialog.create(adminPasswordProvider, savedCount), getSupportFragmentManager())\n+                        .startStorageMigration();\n                 break;\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzMDc1Mg==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382030752", "bodyText": "I feel like it might make more sense to use a instanceof check here rather than caching the ClassCastException. This means we don't get warnings if we're using the Fragment in contexts where we're not interested in the listener (tests for instance).", "author": "seadowg", "createdAt": "2020-02-20T14:25:29Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/AdminPasswordDialog.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.odk.collect.android.fragments.dialogs;\n+\n+import android.app.AlertDialog;\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.text.InputType;\n+import android.view.View;\n+import android.view.WindowManager;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.utilities.AdminPasswordProvider;\n+\n+import timber.log.Timber;\n+\n+public class AdminPasswordDialog extends DialogFragment {\n+\n+    public interface AdminPasswordDialogListener {\n+        void onCorrectAdminPassword(Action action);\n+        void onIncorrectAdminPassword();\n+    }\n+\n+    public enum Action { ADMIN_SETTINGS, STORAGE_MIGRATION }\n+\n+    private AdminPasswordDialogListener listener;\n+\n+    private final Action action;\n+\n+    private final AdminPasswordProvider adminPasswordProvider;\n+\n+    public static AdminPasswordDialog create(AdminPasswordProvider adminPasswordProvider, Action action) {\n+        return new AdminPasswordDialog(adminPasswordProvider, action);\n+    }\n+\n+    private AdminPasswordDialog(AdminPasswordProvider adminPasswordProvider, Action action) {\n+        this.adminPasswordProvider = adminPasswordProvider;\n+        this.action = action;\n+    }\n+\n+    @Override\n+    public void onAttach(@NotNull Context context) {\n+        super.onAttach(context);\n+        try {\n+            listener = (AdminPasswordDialogListener) getActivity();", "originalCommit": "531b1366db726f7624e43f2572a76b7ada4b5ef3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MjQ0Mw==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382442443", "bodyText": "Done.", "author": "grzesiek2010", "createdAt": "2020-02-21T08:01:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzMDc1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ea71d20a2c26a592559e7c10b91a90a008af9f0e", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/AdminPasswordDialog.java b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/AdminPasswordDialog.java\nindex 228bde8a96..17f8cfa70a 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/AdminPasswordDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/AdminPasswordDialog.java\n\n@@ -16,18 +16,16 @@ import org.jetbrains.annotations.NotNull;\n import org.odk.collect.android.R;\n import org.odk.collect.android.utilities.AdminPasswordProvider;\n \n-import timber.log.Timber;\n-\n public class AdminPasswordDialog extends DialogFragment {\n \n-    public interface AdminPasswordDialogListener {\n+    public interface AdminPasswordDialogCallback {\n         void onCorrectAdminPassword(Action action);\n         void onIncorrectAdminPassword();\n     }\n \n     public enum Action { ADMIN_SETTINGS, STORAGE_MIGRATION }\n \n-    private AdminPasswordDialogListener listener;\n+    private AdminPasswordDialogCallback callback;\n \n     private final Action action;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwOTkzOA==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382309938", "bodyText": "Ooh, yeah, the odk subdirectory was from the StoragePathProvider PR. Sorry I didn't think through that before! Looks great now.", "author": "lognaturel", "createdAt": "2020-02-20T23:09:02Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/ResetAppStateTest.java", "diffHunk": "@@ -166,7 +166,7 @@ private void setupTestSettings() throws IOException {\n \n         assertTrue(new File(storagePathProvider.getDirPath(StorageSubdirectory.SETTINGS)).exists() || new File(storagePathProvider.getDirPath(StorageSubdirectory.SETTINGS)).mkdir());\n         assertTrue(new File(storagePathProvider.getDirPath(StorageSubdirectory.SETTINGS) + \"/collect.settings\").createNewFile());\n-        assertTrue(new File(storagePathProvider.getDirPath(StorageSubdirectory.ODK) + \"/collect.settings\").createNewFile());\n+        assertTrue(new File(storagePathProvider.getStorageRootDirPath() + \"/collect.settings\").createNewFile());", "originalCommit": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2aec2cef76323fcadf43baad6f780922420fbea9", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/ResetAppStateTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/ResetAppStateTest.java\nindex 7aa6ca9095..023cebfdfe 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/ResetAppStateTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/ResetAppStateTest.java\n\n@@ -166,7 +167,7 @@ public class ResetAppStateTest {\n \n         assertTrue(new File(storagePathProvider.getDirPath(StorageSubdirectory.SETTINGS)).exists() || new File(storagePathProvider.getDirPath(StorageSubdirectory.SETTINGS)).mkdir());\n         assertTrue(new File(storagePathProvider.getDirPath(StorageSubdirectory.SETTINGS) + \"/collect.settings\").createNewFile());\n-        assertTrue(new File(storagePathProvider.getStorageRootDirPath() + \"/collect.settings\").createNewFile());\n+        assertTrue(new File(storagePathProvider.getDirPath(StorageSubdirectory.ODK) + \"/collect.settings\").createNewFile());\n     }\n \n     private void setupTestFormsDatabase() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxNTg4Ng==", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382315886", "bodyText": "Nice.", "author": "lognaturel", "createdAt": "2020-02-20T23:26:43Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/AdminPasswordProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.odk.collect.android.utilities;\n+\n+import org.odk.collect.android.preferences.AdminSharedPreferences;\n+\n+import static org.odk.collect.android.preferences.AdminKeys.KEY_ADMIN_PW;\n+\n+public class AdminPasswordProvider {", "originalCommit": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2aec2cef76323fcadf43baad6f780922420fbea9", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/utilities/AdminPasswordProvider.java b/collect_app/src/main/java/org/odk/collect/android/utilities/AdminPasswordProvider.java\ndeleted file mode 100644\nindex 2972e56d3a..0000000000\n--- a/collect_app/src/main/java/org/odk/collect/android/utilities/AdminPasswordProvider.java\n+++ /dev/null\n\n@@ -1,22 +0,0 @@\n-package org.odk.collect.android.utilities;\n-\n-import org.odk.collect.android.preferences.AdminSharedPreferences;\n-\n-import static org.odk.collect.android.preferences.AdminKeys.KEY_ADMIN_PW;\n-\n-public class AdminPasswordProvider {\n-    private final AdminSharedPreferences adminSharedPreferences;\n-\n-    public AdminPasswordProvider(AdminSharedPreferences adminSharedPreferences) {\n-        this.adminSharedPreferences = adminSharedPreferences;\n-    }\n-\n-    public boolean isAdminPasswordSet() {\n-        String adminPassword = getAdminPassword();\n-        return adminPassword != null && !adminPassword.isEmpty();\n-    }\n-\n-    public String getAdminPassword() {\n-        return (String) adminSharedPreferences.get(KEY_ADMIN_PW);\n-    }\n-}\n"}}, {"oid": "f2872ef335f41998ea1910c2248c0005fbd6e26d", "url": "https://github.com/getodk/collect/commit/f2872ef335f41998ea1910c2248c0005fbd6e26d", "message": "Bumped minSdkVersion to 21", "committedDate": "2020-02-21T08:48:56Z", "type": "forcePushed"}, {"oid": "fcc9ce6601e956bffc3ee3a5266260461835dbc5", "url": "https://github.com/getodk/collect/commit/fcc9ce6601e956bffc3ee3a5266260461835dbc5", "message": "Fixed build", "committedDate": "2020-02-21T08:57:48Z", "type": "forcePushed"}, {"oid": "02ce2d10ac4c8cb69a302338ef91ef61dc75b2c0", "url": "https://github.com/getodk/collect/commit/02ce2d10ac4c8cb69a302338ef91ef61dc75b2c0", "message": "Code improvements", "committedDate": "2020-02-21T10:48:32Z", "type": "forcePushed"}, {"oid": "6f4a4f8aecd1888d249d98a5a72188bf64a767a7", "url": "https://github.com/getodk/collect/commit/6f4a4f8aecd1888d249d98a5a72188bf64a767a7", "message": "Code improvements", "committedDate": "2020-02-21T10:50:53Z", "type": "forcePushed"}, {"oid": "388ebb79402c7b6db2c896317b4d041488315b01", "url": "https://github.com/getodk/collect/commit/388ebb79402c7b6db2c896317b4d041488315b01", "message": "Removed unused method", "committedDate": "2020-02-21T12:05:32Z", "type": "forcePushed"}, {"oid": "244fbb9720ccacf6b16083a84b3173ef77e40511", "url": "https://github.com/getodk/collect/commit/244fbb9720ccacf6b16083a84b3173ef77e40511", "message": "Fixed creating StorageMigrationDialog", "committedDate": "2020-02-21T12:22:07Z", "type": "forcePushed"}, {"oid": "770de7c1382d404c947b7e59e195d9735c58621e", "url": "https://github.com/getodk/collect/commit/770de7c1382d404c947b7e59e195d9735c58621e", "message": "Fixed storage paths in tests", "committedDate": "2020-02-21T16:53:18Z", "type": "forcePushed"}, {"oid": "f5c68ce7cc930bba387d3b156546d2cb6325f8f3", "url": "https://github.com/getodk/collect/commit/f5c68ce7cc930bba387d3b156546d2cb6325f8f3", "message": "Update map layer path instead of resetting it", "committedDate": "2020-02-21T17:23:21Z", "type": "forcePushed"}, {"oid": "b6ffab9b386f928f5c0b0c64b2b3440bb3388d21", "url": "https://github.com/getodk/collect/commit/b6ffab9b386f928f5c0b0c64b2b3440bb3388d21", "message": "Improved dealing with the banner visibility", "committedDate": "2020-02-21T08:15:00Z", "type": "forcePushed"}, {"oid": "5443cc29f39e742181db5c4820b0b758efdb42e1", "url": "https://github.com/getodk/collect/commit/5443cc29f39e742181db5c4820b0b758efdb42e1", "message": "Code improvements", "committedDate": "2020-02-24T13:26:36Z", "type": "forcePushed"}, {"oid": "4533c7200e4426537b16fa2649a41063397e6d8c", "url": "https://github.com/getodk/collect/commit/4533c7200e4426537b16fa2649a41063397e6d8c", "message": "Reset ReferenceManager", "committedDate": "2020-02-25T07:28:12Z", "type": "forcePushed"}, {"oid": "05b08801043d78e0486fe97c599c16cd2c7b22d9", "url": "https://github.com/getodk/collect/commit/05b08801043d78e0486fe97c599c16cd2c7b22d9", "message": "Improved handling offline map layer paths", "committedDate": "2020-02-25T09:06:13Z", "type": "forcePushed"}, {"oid": "13c531d19c4dbeeea6c961644f4ad147c3f93333", "url": "https://github.com/getodk/collect/commit/13c531d19c4dbeeea6c961644f4ad147c3f93333", "message": "Improved handling offline map layer paths", "committedDate": "2020-02-25T13:06:00Z", "type": "forcePushed"}, {"oid": "2aec2cef76323fcadf43baad6f780922420fbea9", "url": "https://github.com/getodk/collect/commit/2aec2cef76323fcadf43baad6f780922420fbea9", "message": "Added possible mgration results", "committedDate": "2020-02-26T10:57:34Z", "type": "commit"}, {"oid": "abe7f65a4c39aa7ba2ef59da653235197104623f", "url": "https://github.com/getodk/collect/commit/abe7f65a4c39aa7ba2ef59da653235197104623f", "message": "Implemented isEnoughSpaceToPerformMigartion() method", "committedDate": "2020-02-26T10:57:34Z", "type": "commit"}, {"oid": "2ac1f4728dae8cd4bab72e804cc6d59982f8a5ae", "url": "https://github.com/getodk/collect/commit/2ac1f4728dae8cd4bab72e804cc6d59982f8a5ae", "message": "Implemented StorageMigrator", "committedDate": "2020-02-26T10:57:34Z", "type": "commit"}, {"oid": "08a57b78f017756ce3cd0cafb80ea7fff89ca8fb", "url": "https://github.com/getodk/collect/commit/08a57b78f017756ce3cd0cafb80ea7fff89ca8fb", "message": "Don't use storage paths in static fields because old values might persist after migrating", "committedDate": "2020-02-26T10:57:34Z", "type": "commit"}, {"oid": "d3f83e105d37ec3dc009a4dff509ede04cb7126b", "url": "https://github.com/getodk/collect/commit/d3f83e105d37ec3dc009a4dff509ede04cb7126b", "message": "Reopen databases to update paths", "committedDate": "2020-02-26T10:57:34Z", "type": "commit"}, {"oid": "0b502d280c45aa7097bfa6941fdc5480d4af0485", "url": "https://github.com/getodk/collect/commit/0b502d280c45aa7097bfa6941fdc5480d4af0485", "message": "Created StorageEraser class", "committedDate": "2020-02-26T10:57:34Z", "type": "commit"}, {"oid": "644e2adc538e325109460cdb95bc18aff7edfa92", "url": "https://github.com/getodk/collect/commit/644e2adc538e325109460cdb95bc18aff7edfa92", "message": "Code improvements", "committedDate": "2020-02-26T10:57:34Z", "type": "commit"}, {"oid": "87aa72e8dcfa84b10ba0ed39660d616ae64a12df", "url": "https://github.com/getodk/collect/commit/87aa72e8dcfa84b10ba0ed39660d616ae64a12df", "message": "Block uploading/downloading forms if migartion is being performed", "committedDate": "2020-02-26T10:57:34Z", "type": "commit"}, {"oid": "0a29c353c2ff8edf82bd9887a6f930eed5e5cf20", "url": "https://github.com/getodk/collect/commit/0a29c353c2ff8edf82bd9887a6f930eed5e5cf20", "message": "Added the banner", "committedDate": "2020-02-26T11:00:07Z", "type": "commit"}, {"oid": "0fee5bb00098971bedf3c61fd56402864bcfeccc", "url": "https://github.com/getodk/collect/commit/0fee5bb00098971bedf3c61fd56402864bcfeccc", "message": "Added StorageMigratorTask", "committedDate": "2020-02-26T11:02:15Z", "type": "commit"}, {"oid": "986271fcd32c40c7cc69fdcda6fccd06ccdc6508", "url": "https://github.com/getodk/collect/commit/986271fcd32c40c7cc69fdcda6fccd06ccdc6508", "message": "Moved classes responsible for migation to one dir", "committedDate": "2020-02-26T11:02:15Z", "type": "commit"}, {"oid": "9f2f6aed514bd0f2ee5d029e42630be344e3de3a", "url": "https://github.com/getodk/collect/commit/9f2f6aed514bd0f2ee5d029e42630be344e3de3a", "message": "Added StorageMigratorTest", "committedDate": "2020-02-26T11:02:15Z", "type": "commit"}, {"oid": "002ac82208ad3684a556dfdfcbb9f850cfcbfad6", "url": "https://github.com/getodk/collect/commit/002ac82208ad3684a556dfdfcbb9f850cfcbfad6", "message": "Code improvements", "committedDate": "2020-02-26T11:02:15Z", "type": "commit"}, {"oid": "dcf15ba45d62149a114c925a59f653928bf3c4da", "url": "https://github.com/getodk/collect/commit/dcf15ba45d62149a114c925a59f653928bf3c4da", "message": "Added StorageMigrationDialog", "committedDate": "2020-02-26T11:03:02Z", "type": "commit"}, {"oid": "17e476115da9892b9be2d92ab1b473b99e578f4c", "url": "https://github.com/getodk/collect/commit/17e476115da9892b9be2d92ab1b473b99e578f4c", "message": "Replace AsyncTask with Service", "committedDate": "2020-02-26T11:03:26Z", "type": "commit"}, {"oid": "1963e41fa266b9c0c9f953022814cc5828b31ebc", "url": "https://github.com/getodk/collect/commit/1963e41fa266b9c0c9f953022814cc5828b31ebc", "message": "Gray out the messgage after starting migration", "committedDate": "2020-02-26T11:03:26Z", "type": "commit"}, {"oid": "9a1de5ee7ba45f4baa1ddae6cf33207a8069b2a3", "url": "https://github.com/getodk/collect/commit/9a1de5ee7ba45f4baa1ddae6cf33207a8069b2a3", "message": "Removed unused string", "committedDate": "2020-02-26T11:03:26Z", "type": "commit"}, {"oid": "5adaaedb6b4a95936f15c3ace52e17091cd3eac7", "url": "https://github.com/getodk/collect/commit/5adaaedb6b4a95936f15c3ace52e17091cd3eac7", "message": "Use MaterialFullScreenDialogFragment for creating StorageMigrationDialog", "committedDate": "2020-02-26T11:03:26Z", "type": "commit"}, {"oid": "71640c3f30f80c4cfc7e80b8cf796e9a5e16483d", "url": "https://github.com/getodk/collect/commit/71640c3f30f80c4cfc7e80b8cf796e9a5e16483d", "message": "Improved tests", "committedDate": "2020-02-26T11:03:26Z", "type": "commit"}, {"oid": "4644f0f351ac9b4fbbc9eb84f1047fd9d3acf6cf", "url": "https://github.com/getodk/collect/commit/4644f0f351ac9b4fbbc9eb84f1047fd9d3acf6cf", "message": "Use Livedata instead of broadcast receivers", "committedDate": "2020-02-26T11:05:17Z", "type": "commit"}, {"oid": "510f4872da1f9b105f8490ef506f2d46a7d646d6", "url": "https://github.com/getodk/collect/commit/510f4872da1f9b105f8490ef506f2d46a7d646d6", "message": "Added CLEARING_OLD_DATA status", "committedDate": "2020-02-26T11:05:45Z", "type": "commit"}, {"oid": "84cff52a1c057bae720a9631f25b9c31fb5acc66", "url": "https://github.com/getodk/collect/commit/84cff52a1c057bae720a9631f25b9c31fb5acc66", "message": "Fixed commented line", "committedDate": "2020-02-26T11:05:45Z", "type": "commit"}, {"oid": "05515702f117197e15a603b4bdbe777e6bfae960", "url": "https://github.com/getodk/collect/commit/05515702f117197e15a603b4bdbe777e6bfae960", "message": "Improved managing softKeyboard in MaterialFullScreenDialogFragment", "committedDate": "2020-02-26T11:05:45Z", "type": "commit"}, {"oid": "90fceebc88237b1ff7a6b1b0855b592c5617b0f8", "url": "https://github.com/getodk/collect/commit/90fceebc88237b1ff7a6b1b0855b592c5617b0f8", "message": "Reverted changes I made by mistake", "committedDate": "2020-02-26T11:05:45Z", "type": "commit"}, {"oid": "f49f991bf12f226e5d58d31538e969952628b0b2", "url": "https://github.com/getodk/collect/commit/f49f991bf12f226e5d58d31538e969952628b0b2", "message": "Code improvements", "committedDate": "2020-02-26T11:05:45Z", "type": "commit"}, {"oid": "b5d7096f4c31f43899fd3c4ee8592ce08b2a9aaa", "url": "https://github.com/getodk/collect/commit/b5d7096f4c31f43899fd3c4ee8592ce08b2a9aaa", "message": "Get rid of dynamic progress status", "committedDate": "2020-02-26T11:06:04Z", "type": "commit"}, {"oid": "0115e56d22efeb15f4543ff851da4bf805f86b3f", "url": "https://github.com/getodk/collect/commit/0115e56d22efeb15f4543ff851da4bf805f86b3f", "message": "Code improvemenets", "committedDate": "2020-02-26T11:06:31Z", "type": "commit"}, {"oid": "a9a837e7180f7aab93b5ee1045a2e60f8c278d8a", "url": "https://github.com/getodk/collect/commit/a9a837e7180f7aab93b5ee1045a2e60f8c278d8a", "message": "Fixed getValuesFromInstanceObject() method", "committedDate": "2020-02-26T11:06:31Z", "type": "commit"}, {"oid": "73e6842819311ded7b50ab377e716c7d41a5452a", "url": "https://github.com/getodk/collect/commit/73e6842819311ded7b50ab377e716c7d41a5452a", "message": "Code improvements to make migration faster", "committedDate": "2020-02-26T11:06:31Z", "type": "commit"}, {"oid": "37c513832f5d6d4afdc3f2d25b44d342a128014b", "url": "https://github.com/getodk/collect/commit/37c513832f5d6d4afdc3f2d25b44d342a128014b", "message": "Use the banner to display migration results", "committedDate": "2020-02-26T11:06:47Z", "type": "commit"}, {"oid": "63b248b10f15104e7334e2b8216aef858b54b07c", "url": "https://github.com/getodk/collect/commit/63b248b10f15104e7334e2b8216aef858b54b07c", "message": "Avoid calling onStorageMigrationFinish every time a user returns to the app", "committedDate": "2020-02-26T11:06:47Z", "type": "commit"}, {"oid": "eaa69e34c25a8ed4ac7bd0e3aaef4ed41029db70", "url": "https://github.com/getodk/collect/commit/eaa69e34c25a8ed4ac7bd0e3aaef4ed41029db70", "message": "Updated StorageMigrationDialog", "committedDate": "2020-02-26T11:06:47Z", "type": "commit"}, {"oid": "7bb0bd5e144f7f8909f960e42a77fbdf00bf99a1", "url": "https://github.com/getodk/collect/commit/7bb0bd5e144f7f8909f960e42a77fbdf00bf99a1", "message": "Fixed migration result observer", "committedDate": "2020-02-26T11:06:47Z", "type": "commit"}, {"oid": "a8c1fceb126522f0e6ac02c6c650dafcb9745801", "url": "https://github.com/getodk/collect/commit/a8c1fceb126522f0e6ac02c6c650dafcb9745801", "message": "Ask for admin password if specyfied", "committedDate": "2020-02-26T11:06:47Z", "type": "commit"}, {"oid": "f7ab62544dfda115e4a1e9bf0e2f6fdc3b3030f6", "url": "https://github.com/getodk/collect/commit/f7ab62544dfda115e4a1e9bf0e2f6fdc3b3030f6", "message": "Don't save migration result in shared prefs", "committedDate": "2020-02-26T11:06:47Z", "type": "commit"}, {"oid": "1a4fd23153181b9a7446d0f92d08144a47c7d560", "url": "https://github.com/getodk/collect/commit/1a4fd23153181b9a7446d0f92d08144a47c7d560", "message": "Display error message in StorageMigrationDialog if migration failed", "committedDate": "2020-02-26T11:07:13Z", "type": "commit"}, {"oid": "c839b7631d4da164b0f408945390078c6ef98366", "url": "https://github.com/getodk/collect/commit/c839b7631d4da164b0f408945390078c6ef98366", "message": "Ask for admin pass when a user starts migration not when they open the migration dialog", "committedDate": "2020-02-26T11:07:13Z", "type": "commit"}, {"oid": "07091fdc081510e516b82e2838087d3b566c9f11", "url": "https://github.com/getodk/collect/commit/07091fdc081510e516b82e2838087d3b566c9f11", "message": "Fixed buttons visiblility in the banner", "committedDate": "2020-02-26T11:07:13Z", "type": "commit"}, {"oid": "8a41d51163c58863480f1716eb7b5fdcf975af88", "url": "https://github.com/getodk/collect/commit/8a41d51163c58863480f1716eb7b5fdcf975af88", "message": "Fixed pmd", "committedDate": "2020-02-26T11:07:13Z", "type": "commit"}, {"oid": "e3815b8de43bfe50521a7a2f1fa710a43840ef7c", "url": "https://github.com/getodk/collect/commit/e3815b8de43bfe50521a7a2f1fa710a43840ef7c", "message": "Make sure the progress circle is visble", "committedDate": "2020-02-26T11:07:13Z", "type": "commit"}, {"oid": "4d198c9fbf4f8917d02b659848ffc20ef046ff52", "url": "https://github.com/getodk/collect/commit/4d198c9fbf4f8917d02b659848ffc20ef046ff52", "message": "Code improvements", "committedDate": "2020-02-26T11:07:13Z", "type": "commit"}, {"oid": "5fd161fa4c7139e1f2ff66db5893fdb887bee5f4", "url": "https://github.com/getodk/collect/commit/5fd161fa4c7139e1f2ff66db5893fdb887bee5f4", "message": "Don't keep the banner with success result visible for ever", "committedDate": "2020-02-26T11:07:13Z", "type": "commit"}, {"oid": "f03d4a8d0c4c125a50f75fb608b68ed702c38795", "url": "https://github.com/getodk/collect/commit/f03d4a8d0c4c125a50f75fb608b68ed702c38795", "message": "Code improvements", "committedDate": "2020-02-26T11:07:13Z", "type": "commit"}, {"oid": "46e4f2c9aa775036bb40fa0a2a143d1515172dff", "url": "https://github.com/getodk/collect/commit/46e4f2c9aa775036bb40fa0a2a143d1515172dff", "message": "Factored out AdminPasswordProvider", "committedDate": "2020-02-26T11:07:40Z", "type": "commit"}, {"oid": "88f70e451abe2987e393f36ea1c1be70af4bec66", "url": "https://github.com/getodk/collect/commit/88f70e451abe2987e393f36ea1c1be70af4bec66", "message": "Code improvements", "committedDate": "2020-02-26T11:07:40Z", "type": "commit"}, {"oid": "13796856d1461ca2c2ff5165f337686a595c807d", "url": "https://github.com/getodk/collect/commit/13796856d1461ca2c2ff5165f337686a595c807d", "message": "Get rid of additional odk dir on scoped storage", "committedDate": "2020-02-26T11:08:51Z", "type": "commit"}, {"oid": "a775fa8feb35e489fa65a9129b09ef5e338bf5a9", "url": "https://github.com/getodk/collect/commit/a775fa8feb35e489fa65a9129b09ef5e338bf5a9", "message": "Revert the change I made by mistake", "committedDate": "2020-02-26T11:08:51Z", "type": "commit"}, {"oid": "e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "url": "https://github.com/getodk/collect/commit/e8c792063a9b0c171775e5e8e5f6ec1d6e0c392e", "message": "Avoid multiclicking in StorageMigrationDialog", "committedDate": "2020-02-26T11:08:51Z", "type": "commit"}, {"oid": "534c6a779f52120d784cee4f0ad9b5da297baac9", "url": "https://github.com/getodk/collect/commit/534c6a779f52120d784cee4f0ad9b5da297baac9", "message": "Fixed dismissing the banner", "committedDate": "2020-02-26T11:08:51Z", "type": "commit"}, {"oid": "d7641c17fd91dc7fab025923c62fd6736dfb0a94", "url": "https://github.com/getodk/collect/commit/d7641c17fd91dc7fab025923c62fd6736dfb0a94", "message": "Fixed pmd", "committedDate": "2020-02-26T11:08:51Z", "type": "commit"}]}