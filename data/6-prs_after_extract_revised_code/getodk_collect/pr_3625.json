{"pr_number": 3625, "pr_title": "Updated minSdkVersion to 21 and removed special cases for APIs under 21 ", "pr_createdAt": "2020-02-06T04:59:54Z", "pr_url": "https://github.com/getodk/collect/pull/3625", "timeline": [{"oid": "7938c6c71aaaa14ce36109dfb736f1ac4a23e006", "url": "https://github.com/getodk/collect/commit/7938c6c71aaaa14ce36109dfb736f1ac4a23e006", "message": "updated minSdkVersion", "committedDate": "2020-02-06T04:51:51Z", "type": "commit"}, {"oid": "19a281491c93a7b2fe718e0d14bbae1dc22fc92f", "url": "https://github.com/getodk/collect/commit/19a281491c93a7b2fe718e0d14bbae1dc22fc92f", "message": "removed special cases", "committedDate": "2020-02-06T07:07:00Z", "type": "commit"}, {"oid": "7adee1f10af9b0d791f2bad26bd41253f5f239a1", "url": "https://github.com/getodk/collect/commit/7adee1f10af9b0d791f2bad26bd41253f5f239a1", "message": "Merge branch 'master' of https://github.com/opendatakit/collect into Issue#3624\n\nresolved conflicts", "committedDate": "2020-02-06T07:54:45Z", "type": "commit"}, {"oid": "43a3ee525a60c86151a900ca34a40b4de033c933", "url": "https://github.com/getodk/collect/commit/43a3ee525a60c86151a900ca34a40b4de033c933", "message": "fixed pmd", "committedDate": "2020-02-06T09:06:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc0NjQxMQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r375746411", "bodyText": "Isn't this whole class unused now?", "author": "grzesiek2010", "createdAt": "2020-02-06T10:13:27Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/PRNGFixes.java", "diffHunk": "@@ -39,107 +36,13 @@\n  */\n public final class PRNGFixes {", "originalCommit": "43a3ee525a60c86151a900ca34a40b4de033c933", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkwMDk4Ng==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r375900986", "bodyText": "Yes, actually @grzesiek2010! \ud83d\ude05", "author": "SaumiaSinghal", "createdAt": "2020-02-06T15:26:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc0NjQxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "a7d0964102031183e96e11d0679b9d5eab57d952", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/utilities/PRNGFixes.java b/collect_app/src/main/java/org/odk/collect/android/utilities/PRNGFixes.java\ndeleted file mode 100644\nindex 74424554c..000000000\n--- a/collect_app/src/main/java/org/odk/collect/android/utilities/PRNGFixes.java\n+++ /dev/null\n\n@@ -1,235 +0,0 @@\n-/*\n- * This software is provided 'as-is', without any express or implied\n- * warranty.  In no event will Google be held liable for any damages\n- * arising from the use of this software.\n- *\n- * Permission is granted to anyone to use this software for any purpose,\n- * including commercial applications, and to alter it and redistribute it\n- * freely, as long as the origin is not misrepresented.\n- */\n-\n-package org.odk.collect.android.utilities;\n-\n-import android.os.Build;\n-import android.os.Process;\n-\n-import java.io.ByteArrayOutputStream;\n-import java.io.DataInputStream;\n-import java.io.DataOutputStream;\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.OutputStream;\n-import java.io.UnsupportedEncodingException;\n-import java.security.Provider;\n-import java.security.SecureRandomSpi;\n-\n-import timber.log.Timber;\n-\n-/**\n- * Fixes for the output of the default PRNG having low entropy.\n- *\n- * The fixes need to be applied via {@link #apply()} before any use of Java\n- * Cryptography Architecture primitives. A good place to invoke them is in the\n- * application's {@code onCreate}.\n- */\n-public final class PRNGFixes {\n-\n-    private static final byte[] BUILD_FINGERPRINT_AND_DEVICE_SERIAL =\n-            getBuildFingerprintAndDeviceSerial();\n-\n-    /** Hidden constructor to prevent instantiation. */\n-    private PRNGFixes() {\n-    }\n-\n-    /**\n-     * {@code Provider} of {@code SecureRandom} engines which pass through\n-     * all requests to the Linux PRNG.\n-     */\n-    private static class LinuxPRNGSecureRandomProvider extends Provider {\n-\n-        LinuxPRNGSecureRandomProvider() {\n-            super(\"LinuxPRNG\",\n-                    1.0,\n-                    \"A Linux-specific random number provider that uses\"\n-                            + \" /dev/urandom\");\n-            // Although /dev/urandom is not a SHA-1 PRNG, some apps\n-            // explicitly request a SHA1PRNG SecureRandom and we thus need to\n-            // prevent them from getting the default implementation whose output\n-            // may have low entropy.\n-            put(\"SecureRandom.SHA1PRNG\", LinuxPRNGSecureRandom.class.getName());\n-            put(\"SecureRandom.SHA1PRNG ImplementedIn\", \"Software\");\n-        }\n-    }\n-\n-    /**\n-     * {@link SecureRandomSpi} which passes all requests to the Linux PRNG\n-     * ({@code /dev/urandom}).\n-     */\n-    public static class LinuxPRNGSecureRandom extends SecureRandomSpi {\n-\n-        /*\n-         * IMPLEMENTATION NOTE: Requests to generate bytes and to mix in a seed\n-         * are passed through to the Linux PRNG (/dev/urandom). Instances of\n-         * this class seed themselves by mixing in the current time, PID, UID,\n-         * build fingerprint, and hardware serial number (where available) into\n-         * Linux PRNG.\n-         *\n-         * Concurrency: Read requests to the underlying Linux PRNG are\n-         * serialized (on sLock) to ensure that multiple threads do not get\n-         * duplicated PRNG output.\n-         */\n-\n-        private static final File URANDOM_FILE = new File(\"/dev/urandom\");\n-\n-        private static final Object LOCK = new Object();\n-\n-        /**\n-         * Input stream for reading from Linux PRNG or {@code null} if not yet\n-         * opened.\n-         */\n-        private static DataInputStream sUrandomIn;\n-\n-        /**\n-         * Output stream for writing to Linux PRNG or {@code null} if not yet\n-         * opened.\n-         */\n-        private static OutputStream sUrandomOut;\n-\n-        /**\n-         * Whether this engine instance has been seeded. This is needed because\n-         * each instance needs to seed itself if the client does not explicitly\n-         * seed it.\n-         */\n-        private boolean seeded;\n-\n-        @Override\n-        protected void engineSetSeed(byte[] bytes) {\n-            try {\n-                OutputStream out;\n-                synchronized (LOCK) {\n-                    out = getUrandomOutputStream();\n-                }\n-                out.write(bytes);\n-                out.flush();\n-            } catch (IOException e) {\n-                // On a small fraction of devices /dev/urandom is not writable.\n-                // Log and ignore.\n-                Timber.w(PRNGFixes.class.getSimpleName(),\n-                        \"Failed to mix seed into %s\", URANDOM_FILE.toString());\n-            } finally {\n-                seeded = true;\n-            }\n-        }\n-\n-        @Override\n-        protected void engineNextBytes(byte[] bytes) {\n-            if (!seeded) {\n-                // Mix in the device- and invocation-specific seed.\n-                engineSetSeed(generateSeed());\n-            }\n-\n-            try {\n-                DataInputStream in;\n-                synchronized (LOCK) {\n-                    in = getUrandomInputStream();\n-                }\n-                synchronized (in) {\n-                    in.readFully(bytes);\n-                }\n-            } catch (IOException e) {\n-                throw new SecurityException(\n-                        \"Failed to read from \" + URANDOM_FILE, e);\n-            }\n-        }\n-\n-        @Override\n-        protected byte[] engineGenerateSeed(int size) {\n-            byte[] seed = new byte[size];\n-            engineNextBytes(seed);\n-            return seed;\n-        }\n-\n-        private DataInputStream getUrandomInputStream() {\n-            synchronized (LOCK) {\n-                if (sUrandomIn == null) {\n-                    // NOTE: Consider inserting a BufferedInputStream between\n-                    // DataInputStream and FileInputStream if you need higher\n-                    // PRNG output performance and can live with future PRNG\n-                    // output being pulled into this process prematurely.\n-                    try {\n-                        sUrandomIn = new DataInputStream(\n-                                new FileInputStream(URANDOM_FILE));\n-                    } catch (IOException e) {\n-                        throw new SecurityException(\"Failed to open \"\n-                                + URANDOM_FILE + \" for reading\", e);\n-                    }\n-                }\n-                return sUrandomIn;\n-            }\n-        }\n-\n-        private OutputStream getUrandomOutputStream() throws IOException {\n-            synchronized (LOCK) {\n-                if (sUrandomOut == null) {\n-                    sUrandomOut = new FileOutputStream(URANDOM_FILE);\n-                }\n-                return sUrandomOut;\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Generates a device- and invocation-specific seed to be mixed into the\n-     * Linux PRNG.\n-     */\n-    private static byte[] generateSeed() {\n-        try {\n-            ByteArrayOutputStream seedBuffer = new ByteArrayOutputStream();\n-            DataOutputStream seedBufferOut =\n-                    new DataOutputStream(seedBuffer);\n-            seedBufferOut.writeLong(System.currentTimeMillis());\n-            seedBufferOut.writeLong(System.nanoTime());\n-            seedBufferOut.writeInt(Process.myPid());\n-            seedBufferOut.writeInt(Process.myUid());\n-            seedBufferOut.write(BUILD_FINGERPRINT_AND_DEVICE_SERIAL);\n-            seedBufferOut.close();\n-            return seedBuffer.toByteArray();\n-        } catch (IOException e) {\n-            throw new SecurityException(\"Failed to generate seed\", e);\n-        }\n-    }\n-\n-    /**\n-     * Gets the hardware serial number of this device.\n-     *\n-     * @return serial number or {@code null} if not available.\n-     */\n-    private static String getDeviceSerialNumber() {\n-        // We're using the Reflection API because Build.SERIAL is only available\n-        // since API Level 9 (Gingerbread, Android 2.3).\n-        try {\n-            return (String) Build.class.getField(\"SERIAL\").get(null);\n-        } catch (Exception ignored) {\n-            return null;\n-        }\n-    }\n-\n-    private static byte[] getBuildFingerprintAndDeviceSerial() {\n-        StringBuilder result = new StringBuilder();\n-        String fingerprint = Build.FINGERPRINT;\n-        if (fingerprint != null) {\n-            result.append(fingerprint);\n-        }\n-        String serial = getDeviceSerialNumber();\n-        if (serial != null) {\n-            result.append(serial);\n-        }\n-        try {\n-            return result.toString().getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            throw new RuntimeException(\"UTF-8 encoding not supported\");\n-        }\n-    }\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MDI5OA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r375760298", "bodyText": "Looks like CaptureSelfieActivity should be removed at all because it's unused.", "author": "grzesiek2010", "createdAt": "2020-02-06T10:41:27Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java", "diffHunk": "@@ -150,11 +148,7 @@ private void captureImage() {\n         errorTextView.setVisibility(View.GONE);\n         Intent intent;\n         if (selfie) {\n-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n-                intent = new Intent(getContext(), CaptureSelfieActivityNewApi.class);\n-            } else {\n-                intent = new Intent(getContext(), CaptureSelfieActivity.class);", "originalCommit": "43a3ee525a60c86151a900ca34a40b4de033c933", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f6f5a21202799d2d215ae789fe307da3cce6a8c", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java\nindex 301f43434..55050ac82 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java\n\n@@ -148,7 +148,7 @@ public class ImageWidget extends BaseImageWidget {\n         errorTextView.setVisibility(View.GONE);\n         Intent intent;\n         if (selfie) {\n-            intent = new Intent(getContext(), CaptureSelfieActivityNewApi.class);\n+            intent = new Intent(getContext(), CaptureSelfieActivity.class);\n         } else {\n             intent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\n             // We give the camera an absolute filename/path where to put the\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MzAzOA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r375763038", "bodyText": "The same here, looks as if this class was used just here so we can get rid of it.", "author": "grzesiek2010", "createdAt": "2020-02-06T10:46:51Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java", "diffHunk": "@@ -352,26 +285,11 @@ public void denied() {\n     private void captureVideo() {\n         Intent i;\n         if (selfie) {\n-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n-                i = new Intent(getContext(), CaptureSelfieVideoActivityNewApi.class);\n-            } else {\n-                i = new Intent(getContext(), CaptureSelfieVideoActivity.class);", "originalCommit": "43a3ee525a60c86151a900ca34a40b4de033c933", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f6f5a21202799d2d215ae789fe307da3cce6a8c", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java\nindex 633a98cef..f98d0bc20 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java\n\n@@ -285,7 +285,7 @@ public class VideoWidget extends QuestionWidget implements FileWidget {\n     private void captureVideo() {\n         Intent i;\n         if (selfie) {\n-            i = new Intent(getContext(), CaptureSelfieVideoActivityNewApi.class);\n+            i = new Intent(getContext(), CaptureSelfieVideoActivity.class);\n         } else {\n             i = new Intent(android.provider.MediaStore.ACTION_VIDEO_CAPTURE);\n             i.putExtra(android.provider.MediaStore.EXTRA_OUTPUT,\n"}}, {"oid": "a7d0964102031183e96e11d0679b9d5eab57d952", "url": "https://github.com/getodk/collect/commit/a7d0964102031183e96e11d0679b9d5eab57d952", "message": "removed special cases", "committedDate": "2020-02-06T15:29:17Z", "type": "commit"}, {"oid": "5500e30c5bc91f788eb91330448f4bac18a5c969", "url": "https://github.com/getodk/collect/commit/5500e30c5bc91f788eb91330448f4bac18a5c969", "message": "deleted CaptureSelfieActivity and CaptureSelfieVideoActivity", "committedDate": "2020-02-06T15:48:42Z", "type": "commit"}, {"oid": "ba1a637fbe9e8925e3df7ec519318e5124bc2b2d", "url": "https://github.com/getodk/collect/commit/ba1a637fbe9e8925e3df7ec519318e5124bc2b2d", "message": "deleted layout-v17", "committedDate": "2020-02-06T15:57:14Z", "type": "commit"}, {"oid": "85334405da1be6991e32b554cf2ee72d6649424b", "url": "https://github.com/getodk/collect/commit/85334405da1be6991e32b554cf2ee72d6649424b", "message": "replaced range_widget_horizontal.xml", "committedDate": "2020-02-07T22:58:52Z", "type": "commit"}, {"oid": "85334405da1be6991e32b554cf2ee72d6649424b", "url": "https://github.com/getodk/collect/commit/85334405da1be6991e32b554cf2ee72d6649424b", "message": "replaced range_widget_horizontal.xml", "committedDate": "2020-02-07T22:58:52Z", "type": "forcePushed"}, {"oid": "3f252a651b31e8356dcce3737190e8209338af58", "url": "https://github.com/getodk/collect/commit/3f252a651b31e8356dcce3737190e8209338af58", "message": "removed themes.xml for -v21", "committedDate": "2020-02-07T23:11:20Z", "type": "commit"}, {"oid": "43ff81bf97b0018a56d36c85b2d66e12a605af66", "url": "https://github.com/getodk/collect/commit/43ff81bf97b0018a56d36c85b2d66e12a605af66", "message": "removed -v21 files", "committedDate": "2020-02-07T23:42:51Z", "type": "commit"}, {"oid": "3c05dc54448a2a01e53acb83169add2f58945522", "url": "https://github.com/getodk/collect/commit/3c05dc54448a2a01e53acb83169add2f58945522", "message": "removed activity_capture_selfie.xml", "committedDate": "2020-02-08T00:53:28Z", "type": "commit"}, {"oid": "2c7fff33ddbc6c441ee86183772f62f57138dea9", "url": "https://github.com/getodk/collect/commit/2c7fff33ddbc6c441ee86183772f62f57138dea9", "message": "removed unused Widget.Collect.Button.Custom in styles.xml", "committedDate": "2020-02-08T01:39:28Z", "type": "commit"}, {"oid": "b269f43fc0b9de9a9a41bd83173e3cef3bd55e72", "url": "https://github.com/getodk/collect/commit/b269f43fc0b9de9a9a41bd83173e3cef3bd55e72", "message": "removed light_theme_tint_list.xml and dark_theme_tint_list.xml", "committedDate": "2020-02-08T02:29:11Z", "type": "commit"}, {"oid": "271a02b4fd3bf81f8e247d39608a3259fea44b97", "url": "https://github.com/getodk/collect/commit/271a02b4fd3bf81f8e247d39608a3259fea44b97", "message": "removed redundant attributes toRightOf and toLeftOf", "committedDate": "2020-02-08T02:36:11Z", "type": "commit"}, {"oid": "28742618ae5233465053b52443ece353c4f07d1f", "url": "https://github.com/getodk/collect/commit/28742618ae5233465053b52443ece353c4f07d1f", "message": "removed redundant attributes", "committedDate": "2020-02-08T02:54:14Z", "type": "commit"}, {"oid": "8999df0b9e12ff78c90690a693dc53aa1ac0ff9b", "url": "https://github.com/getodk/collect/commit/8999df0b9e12ff78c90690a693dc53aa1ac0ff9b", "message": "removed redundant attributes in layout files", "committedDate": "2020-02-08T03:07:30Z", "type": "commit"}, {"oid": "064f809d17fbb29be806268ec3563d0a1bda1042", "url": "https://github.com/getodk/collect/commit/064f809d17fbb29be806268ec3563d0a1bda1042", "message": "removed redundant attribute marginLeft in geopolyDialog.xml", "committedDate": "2020-02-08T03:15:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyOTc0NQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r376929745", "bodyText": "Now it doesn't make sense to keep this class. Could you get rid of it and use View.generateViewId() everywhere instead?", "author": "grzesiek2010", "createdAt": "2020-02-10T08:53:46Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/ViewIds.java", "diffHunk": "@@ -1,47 +1,17 @@\n package org.odk.collect.android.utilities;\n \n-import android.os.Build;\n import android.view.View;\n \n-import java.util.concurrent.atomic.AtomicInteger;\n-\n public class ViewIds {", "originalCommit": "064f809d17fbb29be806268ec3563d0a1bda1042", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzEzNDg4MQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r377134881", "bodyText": "Yes @grzesiek2010, I will do that!", "author": "SaumiaSinghal", "createdAt": "2020-02-10T15:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyOTc0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6fbbe51b3d8ab82e0b293af643a95766ce7a0361", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/utilities/ViewIds.java b/collect_app/src/main/java/org/odk/collect/android/utilities/ViewIds.java\ndeleted file mode 100644\nindex e024e501e..000000000\n--- a/collect_app/src/main/java/org/odk/collect/android/utilities/ViewIds.java\n+++ /dev/null\n\n@@ -1,18 +0,0 @@\n-package org.odk.collect.android.utilities;\n-\n-import android.view.View;\n-\n-public class ViewIds {\n-\n-    /**\n-     * Generates a unique integer ID for a View.\n-     * Falls back to the system provided {@link View#generateViewId()} when possible.\n-     *\n-     * @return A unique integer ID.\n-     */\n-    public static int generateViewId() {\n-        return View.generateViewId();\n-    }\n-\n-    private ViewIds() {}\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkzMTQ3NA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r376931474", "bodyText": "Please get rid of this extra empty line. Hmm it should break the build, i'm wondering why it didn't happen in this case.", "author": "grzesiek2010", "createdAt": "2020-02-10T08:57:33Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java", "diffHunk": "@@ -64,6 +62,7 @@ public ImageWidget(Context context, final QuestionDetails prompt) {\n         addAnswerView(answerLayout);\n     }\n \n+", "originalCommit": "064f809d17fbb29be806268ec3563d0a1bda1042", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f6f5a21202799d2d215ae789fe307da3cce6a8c", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java\nindex 08c871b7c..55050ac82 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/ImageWidget.java\n\n@@ -62,7 +62,6 @@ public class ImageWidget extends BaseImageWidget {\n         addAnswerView(answerLayout);\n     }\n \n-\n     @Override\n     protected void setUpLayout() {\n         super.setUpLayout();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkzMTk3Nw==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r376931977", "bodyText": "Please rename this class removing NewApi because now it's misleading.", "author": "grzesiek2010", "createdAt": "2020-02-10T08:58:39Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivityNewApi.java", "diffHunk": "@@ -28,7 +26,6 @@\n \n import static org.odk.collect.android.utilities.PermissionUtils.isCameraPermissionGranted;\n \n-@TargetApi(Build.VERSION_CODES.LOLLIPOP)\n public class CaptureSelfieActivityNewApi extends CollectAbstractActivity {", "originalCommit": "064f809d17fbb29be806268ec3563d0a1bda1042", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f6f5a21202799d2d215ae789fe307da3cce6a8c", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivityNewApi.java b/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivity.java\nsimilarity index 95%\nrename from collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivityNewApi.java\nrename to collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivity.java\nindex 138e9e3b0..3c04b6014 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivityNewApi.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivity.java\n\n@@ -26,7 +26,7 @@ import org.odk.collect.android.utilities.ToastUtils;\n \n import static org.odk.collect.android.utilities.PermissionUtils.isCameraPermissionGranted;\n \n-public class CaptureSelfieActivityNewApi extends CollectAbstractActivity {\n+public class CaptureSelfieActivity extends CollectAbstractActivity {\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkzMjE4MA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r376932180", "bodyText": "Please rename this class removing NewApi because now it's misleading.", "author": "grzesiek2010", "createdAt": "2020-02-10T08:59:04Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivityNewApi.java", "diffHunk": "@@ -28,7 +26,6 @@\n \n import static org.odk.collect.android.utilities.PermissionUtils.areCameraAndRecordAudioPermissionsGranted;\n \n-@TargetApi(Build.VERSION_CODES.LOLLIPOP)\n public class CaptureSelfieVideoActivityNewApi extends Activity {", "originalCommit": "064f809d17fbb29be806268ec3563d0a1bda1042", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f6f5a21202799d2d215ae789fe307da3cce6a8c", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivityNewApi.java b/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivity.java\nsimilarity index 96%\nrename from collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivityNewApi.java\nrename to collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivity.java\nindex e9d72dcaa..17934ca60 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivityNewApi.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivity.java\n\n@@ -26,7 +26,7 @@ import org.odk.collect.android.utilities.ToastUtils;\n \n import static org.odk.collect.android.utilities.PermissionUtils.areCameraAndRecordAudioPermissionsGranted;\n \n-public class CaptureSelfieVideoActivityNewApi extends Activity {\n+public class CaptureSelfieVideoActivity extends Activity {\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkzMzUxNQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r376933515", "bodyText": "There is something wrong here, KITKAT won't be supported so you don't need this check.", "author": "grzesiek2010", "createdAt": "2020-02-10T09:02:09Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/RangeWidget.java", "diffHunk": "@@ -172,14 +170,10 @@ private void setUpSeekBar() {\n         seekBar.setOnSeekBarChangeListener(this);\n         if (isRTL()) {\n             float rotate = seekBar.getRotation();\n-            if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT ||\n-                    Build.VERSION.SDK_INT == Build.VERSION_CODES.JELLY_BEAN_MR2) {\n+            if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) {", "originalCommit": "064f809d17fbb29be806268ec3563d0a1bda1042", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "757fbab421cd6ba25b678063b80e7206c47717ab", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/RangeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/RangeWidget.java\nindex f5dc0959c..ff46a8b8b 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/RangeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/RangeWidget.java\n\n@@ -170,11 +170,7 @@ public abstract class RangeWidget extends QuestionWidget implements ButtonWidget\n         seekBar.setOnSeekBarChangeListener(this);\n         if (isRTL()) {\n             float rotate = seekBar.getRotation();\n-            if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) {\n-                seekBar.setRotation(180 - rotate);\n-            } else {\n-                seekBar.setRotation(360 - rotate);\n-            }\n+            seekBar.setRotation(360 - rotate);\n         }\n \n         seekBar.setOnTouchListener(new SeekBar.OnTouchListener() {\n"}}, {"oid": "6fbbe51b3d8ab82e0b293af643a95766ce7a0361", "url": "https://github.com/getodk/collect/commit/6fbbe51b3d8ab82e0b293af643a95766ce7a0361", "message": "deleted ViewIds.java", "committedDate": "2020-02-10T15:29:29Z", "type": "commit"}, {"oid": "7f6f5a21202799d2d215ae789fe307da3cce6a8c", "url": "https://github.com/getodk/collect/commit/7f6f5a21202799d2d215ae789fe307da3cce6a8c", "message": "refractor CaptureSelfieActivity and CaptureSelfieVideoActivity", "committedDate": "2020-02-10T15:38:03Z", "type": "commit"}, {"oid": "757fbab421cd6ba25b678063b80e7206c47717ab", "url": "https://github.com/getodk/collect/commit/757fbab421cd6ba25b678063b80e7206c47717ab", "message": "made changes", "committedDate": "2020-02-10T15:49:43Z", "type": "commit"}, {"oid": "d8b05bdcace920618c04e2dfb79b1d6d20717176", "url": "https://github.com/getodk/collect/commit/d8b05bdcace920618c04e2dfb79b1d6d20717176", "message": "revert changes", "committedDate": "2020-02-10T18:41:58Z", "type": "commit"}, {"oid": "5a6c6929bc91911461c7f0fc08bf4022eb7ebbe2", "url": "https://github.com/getodk/collect/commit/5a6c6929bc91911461c7f0fc08bf4022eb7ebbe2", "message": "fixed pmd", "committedDate": "2020-02-10T18:44:22Z", "type": "commit"}, {"oid": "a5fc5c85f5ec07baab8219689d588fdb7823e462", "url": "https://github.com/getodk/collect/commit/a5fc5c85f5ec07baab8219689d588fdb7823e462", "message": "revert changes", "committedDate": "2020-02-11T21:31:36Z", "type": "commit"}, {"oid": "c6fa089cbad9e980368aa64c8034520ca673ccf2", "url": "https://github.com/getodk/collect/commit/c6fa089cbad9e980368aa64c8034520ca673ccf2", "message": "resolved conflicts", "committedDate": "2020-02-11T21:34:24Z", "type": "commit"}, {"oid": "d07273805e0189f28b711bc3d29afe4a184696ee", "url": "https://github.com/getodk/collect/commit/d07273805e0189f28b711bc3d29afe4a184696ee", "message": "resolved conflicts", "committedDate": "2020-02-11T21:40:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwNTA2Mw==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r378405063", "bodyText": "Probably don't need this comment any longer!", "author": "seadowg", "createdAt": "2020-02-12T17:34:38Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/AppListFragment.java", "diffHunk": "@@ -104,12 +103,10 @@ public static void toggleButtonLabel(Button toggleButton, ListView lv) {\n     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n         super.onViewCreated(view, savedInstanceState);\n \n-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n-            // Use the nicer-looking drawable with Material Design insets.\n-            ListView listView = getListView();\n-            listView.setDivider(getResources().getDrawable(R.drawable.list_item_divider, getActivity().getTheme()));\n-            listView.setDividerHeight(1);\n-        }\n+        // Use the nicer-looking drawable with Material Design insets.", "originalCommit": "d07273805e0189f28b711bc3d29afe4a184696ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1818558b51fb2ed6ac64120789075881c016e27f", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/AppListFragment.java b/collect_app/src/main/java/org/odk/collect/android/fragments/AppListFragment.java\nindex 96ee88cfc..87febde63 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/AppListFragment.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/AppListFragment.java\n\n@@ -103,7 +103,6 @@ abstract class AppListFragment extends ListFragment {\n     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n         super.onViewCreated(view, savedInstanceState);\n \n-        // Use the nicer-looking drawable with Material Design insets.\n         ListView listView = getListView();\n         listView.setDivider(getResources().getDrawable(R.drawable.list_item_divider, getActivity().getTheme()));\n         listView.setDividerHeight(1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwNjEyOA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r378406128", "bodyText": "We can probably lose this @SupressLint", "author": "seadowg", "createdAt": "2020-02-12T17:36:36Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MediaUtils.java", "diffHunk": "@@ -419,32 +418,7 @@ public static final int deleteVideoInFolderFromMediaProvider(File folder) {\n      */\n     @SuppressLint(\"NewApi\")", "originalCommit": "d07273805e0189f28b711bc3d29afe4a184696ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1818558b51fb2ed6ac64120789075881c016e27f", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/utilities/MediaUtils.java b/collect_app/src/main/java/org/odk/collect/android/utilities/MediaUtils.java\nindex 081a9720f..5d1b09772 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/utilities/MediaUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/utilities/MediaUtils.java\n\n@@ -416,12 +415,10 @@ public class MediaUtils {\n      * media prompts. Beginning with KitKat, the responses use a different\n      * mechanism and needs a lot of special handling.\n      */\n-    @SuppressLint(\"NewApi\")\n     public static String getPathFromUri(Context ctxt, Uri uri, String pathKey) {\n         return getPath(ctxt, uri);\n     }\n \n-    @SuppressLint(\"NewApi\")\n     /**\n      * Get a file path from a Uri. This will get the the path for Storage Access\n      * Framework Documents, as well as the _data field for the MediaStore and\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0NzMzNQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r378547335", "bodyText": "Please rename this layout file as well removing _new_api.", "author": "grzesiek2010", "createdAt": "2020-02-12T22:22:09Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivity.java", "diffHunk": "@@ -16,95 +16,36 @@\n \n package org.odk.collect.android.activities;\n \n-import android.hardware.Camera;\n import android.os.Bundle;\n-import android.view.View;\n import android.view.Window;\n import android.view.WindowManager;\n-import android.widget.FrameLayout;\n \n import org.odk.collect.android.R;\n-import org.odk.collect.android.storage.StoragePathProvider;\n-import org.odk.collect.android.utilities.CameraUtils;\n+import org.odk.collect.android.fragments.Camera2Fragment;\n import org.odk.collect.android.utilities.ToastUtils;\n-import org.odk.collect.android.views.CameraPreview;\n \n-import timber.log.Timber;\n+import static org.odk.collect.android.utilities.PermissionUtils.isCameraPermissionGranted;\n \n public class CaptureSelfieActivity extends CollectAbstractActivity {\n-    private Camera camera;\n-    private CameraPreview preview;\n-    private int cameraId;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n-        requestWindowFeature(Window.FEATURE_NO_TITLE);\n-        getWindow().setFlags(WindowManager\n-                .LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n-\n-        setContentView(R.layout.activity_capture_selfie);\n-        FrameLayout previewLayout = findViewById(R.id.camera_preview);\n-\n-        try {\n-            cameraId = CameraUtils.getFrontCameraId();\n-            camera = CameraUtils.getCameraInstance(this, cameraId);\n-        } catch (Exception e) {\n-            Timber.e(e);\n-        }\n-\n-        preview = new CameraPreview(this, camera);\n-        previewLayout.addView(preview);\n-\n-        preview.setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                preview.setEnabled(false);\n-                camera.takePicture(null, null, picture);\n-            }\n-        });\n-\n-        ToastUtils.showLongToast(R.string.take_picture_instruction);\n-    }\n \n-    private final Camera.PictureCallback picture = new Camera.PictureCallback() {\n-        @Override\n-        public void onPictureTaken(byte[] data, Camera camera) {\n-            CameraUtils.savePhoto(new StoragePathProvider().getTmpFilePath(), data);\n-            setResult(RESULT_OK);\n+        if (!isCameraPermissionGranted(this)) {\n             finish();\n+            return;\n         }\n-    };\n \n-    @Override\n-    protected void onPause() {\n-        camera = null;\n-        super.onPause();\n-    }\n-\n-    @Override\n-    protected void onResume() {\n-        super.onResume();\n-\n-        if (camera == null) {\n-            setContentView(R.layout.activity_capture_selfie);\n-            FrameLayout preview = findViewById(R.id.camera_preview);\n-\n-            try {\n-                cameraId = CameraUtils.getFrontCameraId();\n-                camera = CameraUtils.getCameraInstance(this, cameraId);\n-            } catch (Exception e) {\n-                Timber.e(e);\n-            }\n-\n-            this.preview = new CameraPreview(this, camera);\n-            preview.addView(this.preview);\n-            preview.setOnClickListener(new View.OnClickListener() {\n-                @Override\n-                public void onClick(View v) {\n-                    camera.takePicture(null, null, picture);\n-                }\n-            });\n+        requestWindowFeature(Window.FEATURE_NO_TITLE);\n+        getWindow().setFlags(WindowManager\n+                .LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+        setContentView(R.layout.activity_capture_selfie_new_api);", "originalCommit": "d07273805e0189f28b711bc3d29afe4a184696ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1818558b51fb2ed6ac64120789075881c016e27f", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivity.java\nindex 3c04b6014..3a5503bab 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieActivity.java\n\n@@ -40,7 +40,7 @@ public class CaptureSelfieActivity extends CollectAbstractActivity {\n         requestWindowFeature(Window.FEATURE_NO_TITLE);\n         getWindow().setFlags(WindowManager\n                 .LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n-        setContentView(R.layout.activity_capture_selfie_new_api);\n+        setContentView(R.layout.activity_capture_selfie);\n         if (null == savedInstanceState) {\n             getFragmentManager().beginTransaction()\n                     .replace(R.id.container, Camera2Fragment.newInstance())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0NzUzOQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r378547539", "bodyText": "Please rename this layout file as well removing _new_api.", "author": "grzesiek2010", "createdAt": "2020-02-12T22:22:36Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivity.java", "diffHunk": "@@ -17,196 +18,31 @@\n  */\n \n import android.app.Activity;\n-import android.content.Intent;\n-import android.hardware.Camera;\n-import android.media.CamcorderProfile;\n-import android.media.MediaRecorder;\n-import android.net.Uri;\n import android.os.Bundle;\n-import android.view.View;\n-import android.view.Window;\n-import android.view.WindowManager;\n-import android.widget.FrameLayout;\n \n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n-import org.odk.collect.android.utilities.CameraUtils;\n+import org.odk.collect.android.fragments.Camera2VideoFragment;\n import org.odk.collect.android.utilities.ToastUtils;\n-import org.odk.collect.android.views.CameraPreview;\n-\n-import java.io.File;\n-import java.io.IOException;\n-\n-import timber.log.Timber;\n \n-/*https://developer.android.com/guide/topics/media/camera.html#capture-video*/\n+import static org.odk.collect.android.utilities.PermissionUtils.areCameraAndRecordAudioPermissionsGranted;\n \n public class CaptureSelfieVideoActivity extends Activity {\n-    private Camera camera;\n-    private CameraPreview camPreview;\n-    private int cameraId;\n-    private boolean recording;\n-    private MediaRecorder mediaRecorder;\n-    private String outputFile;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n-        requestWindowFeature(Window.FEATURE_NO_TITLE);\n-        getWindow().setFlags(WindowManager\n-                .LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n-\n-        setContentView(R.layout.activity_capture_selfie);\n-        FrameLayout preview = findViewById(R.id.camera_preview);\n-\n-        try {\n-            cameraId = CameraUtils.getFrontCameraId();\n-            camera = CameraUtils.getCameraInstance(this, cameraId);\n-        } catch (Exception e) {\n-            Timber.e(e);\n-        }\n-\n-        this.camPreview = new CameraPreview(this, camera);\n-        preview.addView(this.camPreview);\n-\n-        mediaRecorder = new MediaRecorder();\n-\n-        this.camPreview.setOnClickListener(new View.OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                if (Collect.allowClick(getClass().getName())) {\n-                    if (!recording) {\n-                        // initialize video camera\n-                        if (prepareVideoRecorder()) {\n-                            // Camera is available and unlocked, MediaRecorder is prepared,\n-                            // now you can start recording\n-                            mediaRecorder.start();\n-                            Timber.d(\"Started recording\");\n-\n-                            // inform the user that recording has started\n-                            ToastUtils.showLongToast(getString(R.string.stop_video_capture_instruction));\n-                            recording = true;\n-                        } else {\n-                            // prepare didn't work, release the camera\n-                            releaseMediaRecorder();\n-                        }\n-                    } else {\n-                        try {\n-                            camPreview.setClickable(false);\n-                            Timber.d(\"About to stop recording\");\n-                            mediaRecorder.stop();  // stop the recording\n-\n-                            releaseMediaRecorder(); // release the MediaRecorder object\n-                            camera.lock();         // take camera access back from MediaRecorder\n-                            recording = false;\n-                            releaseCamera();\n-\n-                            Intent i = new Intent();\n-                            i.setData(Uri.fromFile(new File(outputFile)));\n-                            setResult(RESULT_OK, i);\n-                        } catch (RuntimeException e) {\n-                            // RuntimeException is thrown when stop() is called immediately after start().\n-                            // In this case the output file is not properly constructed ans should be deleted.\n-                            Timber.d(\"RuntimeException: stop() is called immediately after start()\");\n-                            //noinspection ResultOfMethodCallIgnored\n-                            new File(outputFile).delete();\n-\n-                            releaseMediaRecorder(); // release the MediaRecorder object\n-                            camera.lock();         // take camera access back from MediaRecorder\n-                            recording = false;\n-                            releaseCamera();\n-                        }\n-                        finish();\n-                    }\n-                }\n-            }\n-        });\n-\n-        ToastUtils.showLongToast(getString(R.string.start_video_capture_instruction));\n-    }\n-\n-    private boolean prepareVideoRecorder() {\n-\n-        mediaRecorder = new MediaRecorder();\n-\n-        // Step 1: Unlock and set camera to MediaRecorder\n-        camera.unlock();\n-        mediaRecorder.setCamera(camera);\n-\n-        // Step 2: Set sources\n-        mediaRecorder.setAudioSource(MediaRecorder.AudioSource.CAMCORDER);\n-        mediaRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);\n \n-        // Step 3: Set a CamcorderProfile (requires API Level 8 or higher)\n-        mediaRecorder.setProfile(CamcorderProfile.get(cameraId, CamcorderProfile.QUALITY_HIGH));\n-\n-        // Step 4: Set output file\n-\n-        if (outputFile == null || outputFile.isEmpty()) {\n-            outputFile = CameraUtils.getVideoFilePath(this);\n-        }\n-        mediaRecorder.setOutputFile(outputFile);\n-\n-        // Step 5: Set the preview output\n-        mediaRecorder.setPreviewDisplay(camPreview.getHolder().getSurface());\n-\n-        // Step 6: Prepare configured MediaRecorder\n-        try {\n-            mediaRecorder.prepare();\n-        } catch (IllegalStateException | IOException e) {\n-            Timber.e(e);\n-            releaseMediaRecorder();\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    private void releaseMediaRecorder() {\n-        if (mediaRecorder != null) {\n-            mediaRecorder.reset();   // clear recorder configuration\n-            mediaRecorder.release(); // release the recorder object\n-            mediaRecorder = null;\n-            camera.lock();           // lock camera for later use\n-        }\n-    }\n-\n-    private void releaseCamera() {\n-        if (camera != null) {\n-            // release the camera for other applications\n-            try {\n-                camera.release();\n-                Timber.i(\"Camera released\");\n-            } catch (Exception e) {\n-                Timber.d(\"Camera has been already released\");\n-            }\n-            camera = null;\n+        if (!areCameraAndRecordAudioPermissionsGranted(this)) {\n+            finish();\n+            return;\n         }\n-    }\n-\n-    @Override\n-    protected void onPause() {\n-        releaseMediaRecorder();       // if you are using MediaRecorder, release it first\n-        releaseCamera();\n-        super.onPause();\n-    }\n \n-    @Override\n-    protected void onResume() {\n-        super.onResume();\n-\n-        if (camera == null) {\n-            setContentView(R.layout.activity_capture_selfie);\n-            FrameLayout preview = findViewById(R.id.camera_preview);\n-\n-            try {\n-                cameraId = CameraUtils.getFrontCameraId();\n-                camera = CameraUtils.getCameraInstance(this, cameraId);\n-            } catch (Exception e) {\n-                Timber.e(e);\n-            }\n-\n-            this.camPreview = new CameraPreview(this, camera);\n-            preview.addView(this.camPreview);\n+        setContentView(R.layout.activity_capture_selfie_video_new_api);", "originalCommit": "d07273805e0189f28b711bc3d29afe4a184696ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1818558b51fb2ed6ac64120789075881c016e27f", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivity.java\nindex 17934ca60..8a1a198d7 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivity.java\n\n@@ -37,7 +37,7 @@ public class CaptureSelfieVideoActivity extends Activity {\n             return;\n         }\n \n-        setContentView(R.layout.activity_capture_selfie_video_new_api);\n+        setContentView(R.layout.activity_capture_selfie_video);\n         if (null == savedInstanceState) {\n             getFragmentManager().beginTransaction()\n                     .replace(R.id.container, Camera2VideoFragment.newInstance())\n"}}, {"oid": "1818558b51fb2ed6ac64120789075881c016e27f", "url": "https://github.com/getodk/collect/commit/1818558b51fb2ed6ac64120789075881c016e27f", "message": "made changes", "committedDate": "2020-02-14T00:59:08Z", "type": "commit"}, {"oid": "6d1fb423e6a7b844bc106663c3d9ce82b97c371f", "url": "https://github.com/getodk/collect/commit/6d1fb423e6a7b844bc106663c3d9ce82b97c371f", "message": "resolved conflict", "committedDate": "2020-02-14T01:02:47Z", "type": "commit"}, {"oid": "db8a74e58f4e6fd6ea760ef81739cb38978b3d62", "url": "https://github.com/getodk/collect/commit/db8a74e58f4e6fd6ea760ef81739cb38978b3d62", "message": "fixed pmd", "committedDate": "2020-02-14T01:10:08Z", "type": "commit"}, {"oid": "816bc50a5f629754d5a928f81d6fd5e1a28f02f6", "url": "https://github.com/getodk/collect/commit/816bc50a5f629754d5a928f81d6fd5e1a28f02f6", "message": "removed comment 'intended for lollipop nad above'", "committedDate": "2020-02-14T01:28:58Z", "type": "commit"}, {"oid": "b6502f9152d18cfd25fd6617f699b90e263353fc", "url": "https://github.com/getodk/collect/commit/b6502f9152d18cfd25fd6617f699b90e263353fc", "message": "removed unused xml namespace", "committedDate": "2020-02-14T01:35:53Z", "type": "commit"}, {"oid": "e21f4843c0d80afe98d02efb28818f9071d2ae91", "url": "https://github.com/getodk/collect/commit/e21f4843c0d80afe98d02efb28818f9071d2ae91", "message": "fixed test", "committedDate": "2020-02-18T11:26:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MzMyMA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r380653320", "bodyText": "There is something to improve in that method as well. Please take a look.", "author": "grzesiek2010", "createdAt": "2020-02-18T12:54:53Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -223,7 +223,7 @@ private int getTheme() {\n         int theme = 0;\n         // https://github.com/opendatakit/collect/issues/1424\n         // https://github.com/opendatakit/collect/issues/1367\n-        if (!isBrokenSamsungDevice() && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n+        if (!isBrokenSamsungDevice()) {", "originalCommit": "e21f4843c0d80afe98d02efb28818f9071d2ae91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2NTI0NA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r380665244", "bodyText": "I mean you can get rid of && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP", "author": "grzesiek2010", "createdAt": "2020-02-18T13:18:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MzMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY3NjAyOQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r380676029", "bodyText": "Please also get rid of those two comments with links to issues. We can find related issues using git.", "author": "grzesiek2010", "createdAt": "2020-02-18T13:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MzMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk5MzYyOA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r380993628", "bodyText": "Still isBrokenSamsungDevice() is not updated.", "author": "grzesiek2010", "createdAt": "2020-02-18T23:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MzMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU2MTM3NA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r382561374", "bodyText": "What about this @SaumiaSinghal?", "author": "grzesiek2010", "createdAt": "2020-02-21T12:43:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MzMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwNzU5Nw==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r382607597", "bodyText": "I read your comment and removed the link to those issues, but jumped && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP, I updated it.", "author": "SaumiaSinghal", "createdAt": "2020-02-21T14:24:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MzMyMA=="}], "type": "inlineReview", "revised_code": {"commit": "9f2012f8d670a68f94743adcc619d054e9b44f4b", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\nindex 9404fbe97..c61412229 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n\n@@ -221,8 +221,6 @@ public class DateWidget extends QuestionWidget implements DatePickerDialog.OnDat\n \n     private int getTheme() {\n         int theme = 0;\n-        // https://github.com/opendatakit/collect/issues/1424\n-        // https://github.com/opendatakit/collect/issues/1367\n         if (!isBrokenSamsungDevice()) {\n             theme = themeUtils.getMaterialDialogTheme();\n         }\n"}}, {"oid": "9f2012f8d670a68f94743adcc619d054e9b44f4b", "url": "https://github.com/getodk/collect/commit/9f2012f8d670a68f94743adcc619d054e9b44f4b", "message": "made changes", "committedDate": "2020-02-18T21:45:23Z", "type": "commit"}, {"oid": "98bfc6170572d534e4f8ee651fdd4e0ec0a00944", "url": "https://github.com/getodk/collect/commit/98bfc6170572d534e4f8ee651fdd4e0ec0a00944", "message": "TODO task in ServerPreferencesFragment.java", "committedDate": "2020-02-18T21:53:44Z", "type": "commit"}, {"oid": "2f468275590f919301c89322b01e8506de8bfc46", "url": "https://github.com/getodk/collect/commit/2f468275590f919301c89322b01e8506de8bfc46", "message": "fixed pmd", "committedDate": "2020-02-18T21:58:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk5Mjg3OQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r380992879", "bodyText": "You can now remove UriUtils class and the related UriUtilsTest.", "author": "grzesiek2010", "createdAt": "2020-02-18T23:17:02Z", "path": "collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java", "diffHunk": "@@ -528,14 +528,12 @@ public int update(Uri uri, ContentValues values, String where,\n         return newWhereArgs;\n     }\n \n-    // Leading slashes are removed from paths to support minSdkVersion < 18:\n-    // https://developer.android.com/reference/android/content/UriMatcher\n     static {\n         URI_MATCHER = new UriMatcher(UriMatcher.NO_MATCH);\n-        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, UriUtils.stripLeadingUriSlashes(FormsColumns.CONTENT_URI.getPath()), FORMS);", "originalCommit": "9f2012f8d670a68f94743adcc619d054e9b44f4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "005536279258cd4dd0b51772925a9e825bf9e696", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java b/collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java\nindex 4f5513fc2..199766e7c 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java\n\n@@ -530,10 +529,10 @@ public class FormsProvider extends ContentProvider {\n \n     static {\n         URI_MATCHER = new UriMatcher(UriMatcher.NO_MATCH);\n-        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, FormsColumns.CONTENT_URI.getPath(), FORMS);\n-        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, FormsColumns.CONTENT_URI.getPath() + \"/#\", FORM_ID);\n+        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, \"forms\", FORMS);\n+        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, \"forms/#\", FORM_ID);\n         // Only available for query and type\n-        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, FormsColumns.CONTENT_NEWEST_FORMS_BY_FORMID_URI.getPath(), NEWEST_FORMS_BY_FORM_ID);\n+        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, \"uniqueFormsByFormId\", NEWEST_FORMS_BY_FORM_ID);\n \n         sFormsProjectionMap = new HashMap<>();\n         sFormsProjectionMap.put(FormsColumns._ID, FormsColumns._ID);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk5ODQyMg==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r380998422", "bodyText": "I think it's a wrong solution please take a look at this commit where it was implemented f22b49d and InstancesProvider class.\nI think it should be:\nforms\nforms/#\nuniqueFormsByFormId", "author": "grzesiek2010", "createdAt": "2020-02-18T23:34:56Z", "path": "collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java", "diffHunk": "@@ -528,14 +528,12 @@ public int update(Uri uri, ContentValues values, String where,\n         return newWhereArgs;\n     }\n \n-    // Leading slashes are removed from paths to support minSdkVersion < 18:\n-    // https://developer.android.com/reference/android/content/UriMatcher\n     static {\n         URI_MATCHER = new UriMatcher(UriMatcher.NO_MATCH);\n-        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, UriUtils.stripLeadingUriSlashes(FormsColumns.CONTENT_URI.getPath()), FORMS);\n-        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, UriUtils.stripLeadingUriSlashes(FormsColumns.CONTENT_URI.getPath()) + \"/#\", FORM_ID);\n+        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, FormsColumns.CONTENT_URI.getPath(), FORMS);", "originalCommit": "9f2012f8d670a68f94743adcc619d054e9b44f4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUzMjEzNQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r382532135", "bodyText": "Hie @grzesiek2010! Thanks for directing to the commit. I reverted it to how it was implemented.", "author": "SaumiaSinghal", "createdAt": "2020-02-21T11:26:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk5ODQyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0ODAxMQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r383248011", "bodyText": "I made a mistake and what you did here was right. Could you add it back?\nSorry my mistake... Please just revert this 0055362", "author": "grzesiek2010", "createdAt": "2020-02-24T12:54:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk5ODQyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI0OTYwNw==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r383249607", "bodyText": "Yes that's okay @grzesiek2010! I'll revert it.", "author": "SaumiaSinghal", "createdAt": "2020-02-24T12:58:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk5ODQyMg=="}], "type": "inlineReview", "revised_code": {"commit": "005536279258cd4dd0b51772925a9e825bf9e696", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java b/collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java\nindex 4f5513fc2..199766e7c 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java\n\n@@ -530,10 +529,10 @@ public class FormsProvider extends ContentProvider {\n \n     static {\n         URI_MATCHER = new UriMatcher(UriMatcher.NO_MATCH);\n-        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, FormsColumns.CONTENT_URI.getPath(), FORMS);\n-        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, FormsColumns.CONTENT_URI.getPath() + \"/#\", FORM_ID);\n+        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, \"forms\", FORMS);\n+        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, \"forms/#\", FORM_ID);\n         // Only available for query and type\n-        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, FormsColumns.CONTENT_NEWEST_FORMS_BY_FORMID_URI.getPath(), NEWEST_FORMS_BY_FORM_ID);\n+        URI_MATCHER.addURI(FormsProviderAPI.AUTHORITY, \"uniqueFormsByFormId\", NEWEST_FORMS_BY_FORM_ID);\n \n         sFormsProjectionMap = new HashMap<>();\n         sFormsProjectionMap.put(FormsColumns._ID, FormsColumns._ID);\n"}}, {"oid": "42e058cdd099fd6f7168eb95b69d48aeb5bd78ab", "url": "https://github.com/getodk/collect/commit/42e058cdd099fd6f7168eb95b69d48aeb5bd78ab", "message": "deleted UriUtils", "committedDate": "2020-02-21T11:15:26Z", "type": "commit"}, {"oid": "78265873180a14fb39573f86c518970feebe3c42", "url": "https://github.com/getodk/collect/commit/78265873180a14fb39573f86c518970feebe3c42", "message": "deleted ObjectUtils", "committedDate": "2020-02-21T11:19:03Z", "type": "commit"}, {"oid": "005536279258cd4dd0b51772925a9e825bf9e696", "url": "https://github.com/getodk/collect/commit/005536279258cd4dd0b51772925a9e825bf9e696", "message": "updated FormsProvider", "committedDate": "2020-02-21T11:25:02Z", "type": "commit"}, {"oid": "04e9606575db2b71f1ba3ac3b67b398dabab4be6", "url": "https://github.com/getodk/collect/commit/04e9606575db2b71f1ba3ac3b67b398dabab4be6", "message": "updated sort_item", "committedDate": "2020-02-21T12:18:06Z", "type": "commit"}, {"oid": "27303466a3bdc4d51d9b5201805141501ee7ae21", "url": "https://github.com/getodk/collect/commit/27303466a3bdc4d51d9b5201805141501ee7ae21", "message": "updated isBrokenSamsungDevice", "committedDate": "2020-02-21T14:22:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY5NDM1MQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r382694351", "bodyText": "Please get rid of the comment above since the explanation won't be needed now.", "author": "grzesiek2010", "createdAt": "2020-02-21T16:56:28Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/FileUtils.java", "diffHunk": "@@ -587,20 +584,6 @@ public static String getFileExtension(String fileName) {\n     public static void grantFilePermissions(Intent intent, Uri uri, Context context) {\n         intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n         intent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION);\n-", "originalCommit": "27303466a3bdc4d51d9b5201805141501ee7ae21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY5ODEzOQ==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r382698139", "bodyText": "Yes Correct!", "author": "SaumiaSinghal", "createdAt": "2020-02-21T17:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY5NDM1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "bec8550546e6b89e40dab0946adc9860b53963e6", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/utilities/FileUtils.java b/collect_app/src/main/java/org/odk/collect/android/utilities/FileUtils.java\nindex 7a0a57621..1ff74341b 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/utilities/FileUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/utilities/FileUtils.java\n\n@@ -570,17 +570,6 @@ public class FileUtils {\n         return fileName.substring(dotIndex + 1).toLowerCase(Locale.ROOT);\n     }\n \n-    /**\n-     * Grants read and write permissions to a content URI added to the specified intent.\n-     *\n-     * For Android > 4.4, the permissions expire when the receiving app's stack is finished. For\n-     * Android <= 4.4, the permissions are granted to all applications that can respond to the\n-     * intent.\n-     *\n-     * For true security, the permissions for Android <= 4.4 should be revoked manually but we don't\n-     * revoke them because we don't have many users on lower API levels and prior to targeting API\n-     * 24+, all apps always had access to the files anyway.\n-     */\n     public static void grantFilePermissions(Intent intent, Uri uri, Context context) {\n         intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n         intent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION);\n"}}, {"oid": "bec8550546e6b89e40dab0946adc9860b53963e6", "url": "https://github.com/getodk/collect/commit/bec8550546e6b89e40dab0946adc9860b53963e6", "message": "comment removed", "committedDate": "2020-02-21T17:03:13Z", "type": "commit"}, {"oid": "9f4f6fabbeea0394b10f075486f40c98a3f502bb", "url": "https://github.com/getodk/collect/commit/9f4f6fabbeea0394b10f075486f40c98a3f502bb", "message": "revreted changes in FormsProvider", "committedDate": "2020-02-24T13:02:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2NDE3Mg==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r383264172", "bodyText": "Why do we still need this comment?", "author": "seadowg", "createdAt": "2020-02-24T13:29:15Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/CaptureSelfieVideoActivity.java", "diffHunk": "@@ -1,13 +1,14 @@\n+\n package org.odk.collect.android.activities;\n \n /*\n- * Copyright (C) 2013 The Android Open Source Project\n+ * Copyright 2014 The Android Open Source Project", "originalCommit": "9f4f6fabbeea0394b10f075486f40c98a3f502bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg0Nzk0NA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r383847944", "bodyText": "Please remove this comment", "author": "grzesiek2010", "createdAt": "2020-02-25T12:27:46Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2783,11 +2782,7 @@ private void displayUIFor(@Nullable BackgroundLocationManager.BackgroundLocation\n         // double space where the placeholder is in the text resource. Collapse those spaces.\n         // See https://github.com/opendatakit/collect/pull/2864", "originalCommit": "9f4f6fabbeea0394b10f075486f40c98a3f502bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg0OTkzMg==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r383849932", "bodyText": "I also ran into a really old comment in SounnerMultiWidget class, please remove this part in the same commit:\n\nThere is a bug in\nandroid versions previous to 2.0 that affects this widget. You can find the report here:\nhttp://code.google.com/p/android/issues/detail?id=922 This bug causes text to be white in alert\nboxes, which makes the select options invisible in this widget. For this reason, this widget\nshould not be used on phones with android versions lower than 2.0.", "author": "grzesiek2010", "createdAt": "2020-02-25T12:32:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg0Nzk0NA=="}], "type": "inlineReview", "revised_code": {"commit": "53a75e3de9d44aab37f7c0553cf0d62798a40271", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\nindex 3f9c27906..46bd4ec21 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n\n@@ -2777,10 +2777,6 @@ public class FormEntryActivity extends CollectAbstractActivity implements Animat\n \n         String snackBarText;\n \n-        // Older Android versions don't have the \"\u22ee\" character. Only insert it into the text if the\n-        // Android version supports it. If the Android version doesn't support it, there will be a\n-        // double space where the placeholder is in the text resource. Collapse those spaces.\n-        // See https://github.com/opendatakit/collect/pull/2864\n         if (backgroundLocationMessage.isMenuCharacterNeeded()) {\n             snackBarText = String.format(getString(backgroundLocationMessage.getMessageTextResourceId()), \"\u22ee\");\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg1MzczNA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r383853734", "bodyText": "We also don't need this comment anymore.", "author": "grzesiek2010", "createdAt": "2020-02-25T12:40:42Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java", "diffHunk": "@@ -275,13 +215,6 @@ public void setBinaryData(Object object) {\n         // Need to have this ugly code to account for\n         // a bug in the Nexus 7 on 4.3 not returning the mediaUri in the data\n         // of the intent - uri in this case is a file", "originalCommit": "9f4f6fabbeea0394b10f075486f40c98a3f502bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg1NTUyOA==", "url": "https://github.com/getodk/collect/pull/3625#discussion_r383855528", "bodyText": "Thanks for directing @grzesiek2010!", "author": "SaumiaSinghal", "createdAt": "2020-02-25T12:44:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg1MzczNA=="}], "type": "inlineReview", "revised_code": {"commit": "53a75e3de9d44aab37f7c0553cf0d62798a40271", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java\nindex 2afc9a477..2cea2d854 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/VideoWidget.java\n\n@@ -211,11 +211,6 @@ public class VideoWidget extends QuestionWidget implements FileWidget {\n         }\n \n         binaryName = newVideo.getName();\n-\n-        // Need to have this ugly code to account for\n-        // a bug in the Nexus 7 on 4.3 not returning the mediaUri in the data\n-        // of the intent - uri in this case is a file\n-\n         widgetValueChanged();\n         playButton.setEnabled(binaryName != null);\n     }\n"}}, {"oid": "53a75e3de9d44aab37f7c0553cf0d62798a40271", "url": "https://github.com/getodk/collect/commit/53a75e3de9d44aab37f7c0553cf0d62798a40271", "message": "removed comment", "committedDate": "2020-02-25T12:43:36Z", "type": "commit"}, {"oid": "53a75e3de9d44aab37f7c0553cf0d62798a40271", "url": "https://github.com/getodk/collect/commit/53a75e3de9d44aab37f7c0553cf0d62798a40271", "message": "removed comment", "committedDate": "2020-02-25T12:43:36Z", "type": "forcePushed"}, {"oid": "c5851322e32ccff8f4468acb6935e8360b8062c6", "url": "https://github.com/getodk/collect/commit/c5851322e32ccff8f4468acb6935e8360b8062c6", "message": "removed unused view in material_full_screen_dialog_toolbar.xml", "committedDate": "2020-02-25T13:44:42Z", "type": "commit"}]}