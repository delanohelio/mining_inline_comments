{"pr_number": 3975, "pr_title": "Rework Date and Time Widgets", "pr_createdAt": "2020-07-20T16:15:14Z", "pr_url": "https://github.com/getodk/collect/pull/3975", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ1ODg0NQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459458845", "bodyText": "You have this variable just to use it in return, you can get rid of it and return just binding.getRoot()", "author": "grzesiek2010", "createdAt": "2020-07-23T13:43:31Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -15,113 +15,88 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.DatePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.Resources;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.util.AttributeSet;\n+import android.util.TypedValue;\n import android.view.View;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.DatePicker;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n \n import org.javarosa.core.model.data.DateData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n-\n-/**\n- * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n- * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements DatePickerDialog.OnDateSetListener, BinaryWidget {\n-    Button dateButton;\n-    TextView dateTextView;\n-\n-    boolean isNullAnswer;\n+public class DateWidget extends QuestionWidget implements BinaryWidget {\n+    WidgetAnswerBinding binding;\n \n     private LocalDateTime date;\n-\n     private DatePickerDetails datePickerDetails;\n+    private boolean isNullAnswer;\n \n     public DateWidget(Context context, QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public DateWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createWidget(context);\n     }\n \n-    protected void createWidget(Context context) {\n-        datePickerDetails = DateTimeUtils.getDatePickerDetails(getFormEntryPrompt().getQuestion().getAppearanceAttr());\n-        dateButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_date), getAnswerFontSize(), this);\n-        dateTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        addViews(context);\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        View answerView = binding.getRoot();", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\nindex 92cb27fff..2533d9213 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n\n@@ -30,18 +30,17 @@ import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n-import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n import java.util.Date;\n \n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements BinaryWidget {\n+public class DateWidget extends QuestionWidget implements BinaryDataReceiver {\n     WidgetAnswerBinding binding;\n \n-    private LocalDateTime date;\n+    private LocalDateTime selectedDate;\n     private DatePickerDetails datePickerDetails;\n-    private boolean isNullAnswer;\n \n     public DateWidget(Context context, QuestionDetails prompt) {\n         this(context, prompt, false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2MDg4MQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459460881", "bodyText": "Do you really need this here? I don't think so because here you just want to add the default text no_date_selected which btw I don't like because it's not consistent with other widgets. @lognaturel can we maybe get rid of it?", "author": "grzesiek2010", "createdAt": "2020-07-23T13:46:25Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -15,113 +15,88 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.DatePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.Resources;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.util.AttributeSet;\n+import android.util.TypedValue;\n import android.view.View;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.DatePicker;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n \n import org.javarosa.core.model.data.DateData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n-\n-/**\n- * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n- * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements DatePickerDialog.OnDateSetListener, BinaryWidget {\n-    Button dateButton;\n-    TextView dateTextView;\n-\n-    boolean isNullAnswer;\n+public class DateWidget extends QuestionWidget implements BinaryWidget {\n+    WidgetAnswerBinding binding;\n \n     private LocalDateTime date;\n-\n     private DatePickerDetails datePickerDetails;\n+    private boolean isNullAnswer;\n \n     public DateWidget(Context context, QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public DateWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createWidget(context);\n     }\n \n-    protected void createWidget(Context context) {\n-        datePickerDetails = DateTimeUtils.getDatePickerDetails(getFormEntryPrompt().getQuestion().getAppearanceAttr());\n-        dateButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_date), getAnswerFontSize(), this);\n-        dateTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        addViews(context);\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        View answerView = binding.getRoot();\n+\n+        datePickerDetails = DateTimeUtils.getDatePickerDetails(prompt.getQuestion().getAppearanceAttr());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_date));\n+            binding.widgetButton.setOnClickListener(v -> onButtonClick(binding.widgetButton.getId()));\n+        }\n+\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n         if (getFormEntryPrompt().getAnswerValue() == null) {\n             clearAnswer();", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\nindex 92cb27fff..2533d9213 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n\n@@ -30,18 +30,17 @@ import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n-import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n import java.util.Date;\n \n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements BinaryWidget {\n+public class DateWidget extends QuestionWidget implements BinaryDataReceiver {\n     WidgetAnswerBinding binding;\n \n-    private LocalDateTime date;\n+    private LocalDateTime selectedDate;\n     private DatePickerDetails datePickerDetails;\n-    private boolean isNullAnswer;\n \n     public DateWidget(Context context, QuestionDetails prompt) {\n         this(context, prompt, false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2Mjk5MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459462990", "bodyText": "Do we really need this field? Can't we just relay on the label, (or even on date which is nullable)? Checking if it contains the default message or is empty if we get rid of it (look at my other comment regarding the default message)", "author": "grzesiek2010", "createdAt": "2020-07-23T13:49:23Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -15,113 +15,88 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.DatePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.Resources;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.util.AttributeSet;\n+import android.util.TypedValue;\n import android.view.View;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.DatePicker;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n \n import org.javarosa.core.model.data.DateData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n-\n-/**\n- * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n- * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements DatePickerDialog.OnDateSetListener, BinaryWidget {\n-    Button dateButton;\n-    TextView dateTextView;\n-\n-    boolean isNullAnswer;\n+public class DateWidget extends QuestionWidget implements BinaryWidget {\n+    WidgetAnswerBinding binding;\n \n     private LocalDateTime date;\n-\n     private DatePickerDetails datePickerDetails;\n+    private boolean isNullAnswer;", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\nindex 92cb27fff..2533d9213 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n\n@@ -30,18 +30,17 @@ import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n-import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n import java.util.Date;\n \n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements BinaryWidget {\n+public class DateWidget extends QuestionWidget implements BinaryDataReceiver {\n     WidgetAnswerBinding binding;\n \n-    private LocalDateTime date;\n+    private LocalDateTime selectedDate;\n     private DatePickerDetails datePickerDetails;\n-    private boolean isNullAnswer;\n \n     public DateWidget(Context context, QuestionDetails prompt) {\n         this(context, prompt, false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2NDI2Nw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459464267", "bodyText": "I would give it a more meaningful name like selectedDate?", "author": "grzesiek2010", "createdAt": "2020-07-23T13:51:05Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -15,113 +15,88 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.DatePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.Resources;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.util.AttributeSet;\n+import android.util.TypedValue;\n import android.view.View;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.DatePicker;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n \n import org.javarosa.core.model.data.DateData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n-\n-/**\n- * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n- * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements DatePickerDialog.OnDateSetListener, BinaryWidget {\n-    Button dateButton;\n-    TextView dateTextView;\n-\n-    boolean isNullAnswer;\n+public class DateWidget extends QuestionWidget implements BinaryWidget {\n+    WidgetAnswerBinding binding;\n \n     private LocalDateTime date;", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\nindex 92cb27fff..2533d9213 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n\n@@ -30,18 +30,17 @@ import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n-import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n import java.util.Date;\n \n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements BinaryWidget {\n+public class DateWidget extends QuestionWidget implements BinaryDataReceiver {\n     WidgetAnswerBinding binding;\n \n-    private LocalDateTime date;\n+    private LocalDateTime selectedDate;\n     private DatePickerDetails datePickerDetails;\n-    private boolean isNullAnswer;\n \n     public DateWidget(Context context, QuestionDetails prompt) {\n         this(context, prompt, false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2NjQ2OA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459466468", "bodyText": "As in DateWidget you don't need this variable just return binding.getRoot() at the bottom", "author": "grzesiek2010", "createdAt": "2020-07-23T13:54:04Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -69,241 +45,73 @@ public TimeWidget(Context context, final QuestionDetails prompt) {\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n-    }\n-\n-    @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n-    }\n-\n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n-    }\n-\n-    @Override\n-    public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n     }\n \n     @Override\n-    public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n-    }\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        View answerView = binding.getRoot();", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\nindex 5900fdcd6..2fad70413 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n\n@@ -37,7 +37,6 @@ public class TimeWidget extends QuestionWidget {\n \n     private int hourOfDay;\n     private int minuteOfHour;\n-    private boolean nullAnswer;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2NzE4Nw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459467187", "bodyText": "As in DateWidget I think we don't need this filed and we can relay on the label.", "author": "grzesiek2010", "createdAt": "2020-07-23T13:54:54Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,52 +15,28 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonWidget, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget {\n+    WidgetAnswerBinding binding;\n \n     private int hourOfDay;\n     private int minuteOfHour;\n-\n     private boolean nullAnswer;", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\nindex 5900fdcd6..2fad70413 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n\n@@ -37,7 +37,6 @@ public class TimeWidget extends QuestionWidget {\n \n     private int hourOfDay;\n     private int minuteOfHour;\n-    private boolean nullAnswer;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3OTA2NQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459579065", "bodyText": "What if we have at least two Time widgets on one screen then even if you change the second one , the first one will be edited because as opposed to setBinaryData which checks if a widget is waiting for data this just takes the first one? Am I missing something?", "author": "grzesiek2010", "createdAt": "2020-07-23T16:32:50Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -698,6 +705,58 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (currentView != null) {\n+            for (QuestionWidget qw : ((ODKView) currentView).getWidgets()) {\n+                if (qw instanceof DateWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                } else if (qw instanceof DateTimeWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateTimeWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMDQzMQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459710431", "bodyText": "Also the fact that here you use onTimeSet and above setBinaryData is not consistent i think it would be good to use setBinaryData in all cases. I know that name doesn't match very well since originally it was created for media widgets so I would rename it to just setAnswer maybe.", "author": "grzesiek2010", "createdAt": "2020-07-23T20:31:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNTE4NA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459735184", "bodyText": "I totally agree with you that using setBinaryData() at all places will be consistent. I didn't know that we can have two Time widgets on one screen for ODK X Forms. I usually use ODK Build to build testing forms. I didn't see any feature like that to include two Time widgets on one screen there.", "author": "SaumiaSinghal", "createdAt": "2020-07-23T21:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNjU2Mg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459736562", "bodyText": "Theoretically it is possible that's why we use waitForData()/cancelWaitingForData to mark widgets that should receive answers.", "author": "grzesiek2010", "createdAt": "2020-07-23T21:24:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3OTA2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\nindex ad22278d2..5daae8dd4 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n\n@@ -705,58 +697,6 @@ public class FormEntryActivity extends CollectAbstractActivity implements Animat\n         }\n     }\n \n-    @Override\n-    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n-        if (currentView != null) {\n-            for (QuestionWidget qw : ((ODKView) currentView).getWidgets()) {\n-                if (qw instanceof DateWidget) {\n-                    LocalDateTime date = new LocalDateTime()\n-                            .withYear(year)\n-                            .withMonthOfYear(month + 1)\n-                            .withDayOfMonth(dayOfMonth)\n-                            .withHourOfDay(0)\n-                            .withMinuteOfHour(0)\n-                            .withSecondOfMinute(0)\n-                            .withMillisOfSecond(0);\n-                    ((DateWidget) qw).setBinaryData(date);\n-                    widgetValueChanged(qw);\n-                    return;\n-                } else if (qw instanceof DateTimeWidget) {\n-                    LocalDateTime date = new LocalDateTime()\n-                            .withYear(year)\n-                            .withMonthOfYear(month + 1)\n-                            .withDayOfMonth(dayOfMonth)\n-                            .withHourOfDay(0)\n-                            .withMinuteOfHour(0)\n-                            .withSecondOfMinute(0)\n-                            .withMillisOfSecond(0);\n-                    ((DateTimeWidget) qw).setBinaryData(date);\n-                    widgetValueChanged(qw);\n-                    return;\n-                }\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\n-        if (currentView != null) {\n-            for (QuestionWidget qw : ((ODKView) currentView).getWidgets()) {\n-                if (qw instanceof TimeWidget) {\n-                    view.clearFocus();\n-                    ((TimeWidget) qw).onTimeSet(hourOfDay, minute);\n-                    widgetValueChanged(qw);\n-                    return;\n-                } else if (qw instanceof DateTimeWidget) {\n-                    view.clearFocus();\n-                    ((DateTimeWidget) qw).onTimeSet(hourOfDay, minute);\n-                    widgetValueChanged(qw);\n-                    return;\n-                }\n-            }\n-        }\n-    }\n-\n     @Nullable\n     private FormController getFormController() {\n         return Collect.getInstance().getFormController();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MTE4MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459581180", "bodyText": "Please create a view model for this dialog instead of using such a trick to prevent data from clearing.\nBTW it would be good to have a vie model for CustomDatePickerDialog too.", "author": "grzesiek2010", "createdAt": "2020-07-23T16:36:24Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java", "diffHunk": "@@ -0,0 +1,153 @@\n+package org.odk.collect.android.fragments.dialogs;\n+\n+import android.app.Dialog;\n+import android.app.TimePickerDialog;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.graphics.Color;\n+import android.graphics.drawable.ColorDrawable;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.text.format.DateFormat;\n+import android.util.AttributeSet;\n+import android.view.Window;\n+import android.widget.TimePicker;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.joda.time.DateTime;\n+import org.odk.collect.android.R;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Field;\n+\n+import timber.log.Timber;\n+\n+public class CustomTimePickerDialog extends DialogFragment {\n+    public static final String CURRENT_TIME = \"CURRENT_TIME\";\n+    public static final String TIME_PICKER_THEME = \"TIME_PICKER_THEME\";\n+\n+    private TimePickerDialog.OnTimeSetListener listener;\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+\n+        if (context instanceof TimePickerDialog.OnTimeSetListener) {\n+            listener = (TimePickerDialog.OnTimeSetListener) context;\n+        }\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        DateTime date = (DateTime) getArguments().getSerializable(CURRENT_TIME);\n+        setRetainInstance(true);", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java\nindex 47bc8f2d5..3ec8315cb 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java\n\n@@ -16,9 +16,11 @@ import android.widget.TimePicker;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.fragment.app.DialogFragment;\n+import androidx.lifecycle.ViewModelProvider;\n \n-import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n import java.lang.reflect.Constructor;\n import java.lang.reflect.Field;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNDI4NA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459714284", "bodyText": "Why do we need this here?", "author": "grzesiek2010", "createdAt": "2020-07-23T20:38:34Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -97,56 +123,90 @@ public IAnswerData getAnswer() {\n \n     @Override\n     public void clearAnswer() {\n-        dateWidget.clearAnswerWithoutValueChangeEvent();\n-        timeWidget.clearAnswerWithoutValueChangeEvent();\n+        isDateNull = true;\n+        binding.dateAnswerText.setText(R.string.no_date_selected);\n+        setDateToCurrent();\n \n+        isTimeNull = true;\n+        binding.timeAnswerText.setText(R.string.no_time_selected);\n+        setTimeToCurrent();\n         widgetValueChanged();\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        dateWidget.setOnLongClickListener(l);\n-        timeWidget.setOnLongClickListener(l);\n+        binding.dateButton.setOnLongClickListener(l);\n+        binding.dateAnswerText.setOnLongClickListener(l);\n+\n+        binding.timeButton.setOnLongClickListener(l);\n+        binding.timeAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        dateWidget.cancelLongPress();\n-        timeWidget.cancelLongPress();\n+        binding.dateButton.cancelLongPress();\n+        binding.dateAnswerText.cancelLongPress();\n+\n+        binding.timeButton.cancelLongPress();\n+        binding.timeAnswerText.cancelLongPress();\n     }\n \n     @Override\n     public void setBinaryData(Object answer) {\n-        dateWidget.setBinaryData(answer);\n+        if (answer instanceof LocalDateTime) {\n+            date = (LocalDateTime) answer;\n+            isDateNull = false;\n+            DateTimeWidgetUtils.setDateLabel(getContext(), binding.dateAnswerText, (Date) getAnswer().getValue(), datePickerDetails);\n+        }\n     }\n \n-    public DateWidget getDateWidget() {\n-        return dateWidget;\n+    @Override\n+    public void onButtonClick(int buttonId) {\n+        DateTimeWidgetUtils.createTimePickerDialog((FormEntryActivity) getContext(), hourOfDay, minuteOfHour);\n     }\n \n-    // Exposed for testing purposes to avoid reflection.\n-    public void setDateWidget(DateWidget dateWidget) {\n-        this.dateWidget = dateWidget;\n+    @Override\n+    public void widgetValueChanged(QuestionWidget changedWidget) {", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\nindex 1e770b8b5..1ea25ea5e 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n\n@@ -123,33 +117,27 @@ public class DateTimeWidget extends QuestionWidget implements BinaryWidget, Widg\n \n     @Override\n     public void clearAnswer() {\n-        isDateNull = true;\n-        binding.dateAnswerText.setText(R.string.no_date_selected);\n-        setDateToCurrent();\n-\n-        isTimeNull = true;\n-        binding.timeAnswerText.setText(R.string.no_time_selected);\n-        setTimeToCurrent();\n+        clearAnswerWithoutValueChangeListener();\n         widgetValueChanged();\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        binding.dateButton.setOnLongClickListener(l);\n-        binding.dateAnswerText.setOnLongClickListener(l);\n+        binding.dateWidget.widgetButton.setOnLongClickListener(l);\n+        binding.dateWidget.widgetAnswerText.setOnLongClickListener(l);\n \n-        binding.timeButton.setOnLongClickListener(l);\n-        binding.timeAnswerText.setOnLongClickListener(l);\n+        binding.timeWidget.widgetButton.setOnLongClickListener(l);\n+        binding.timeWidget.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        binding.dateButton.cancelLongPress();\n-        binding.dateAnswerText.cancelLongPress();\n+        binding.dateWidget.widgetButton.cancelLongPress();\n+        binding.dateWidget.widgetAnswerText.cancelLongPress();\n \n-        binding.timeButton.cancelLongPress();\n-        binding.timeAnswerText.cancelLongPress();\n+        binding.timeWidget.widgetButton.cancelLongPress();\n+        binding.timeWidget.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyMTcxMw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459721713", "bodyText": "It's weird that we pass boolean nullAnswer here I think we should check for it before we use this method.", "author": "grzesiek2010", "createdAt": "2020-07-23T20:53:37Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex 977671f13..e80929f6f 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,12 +1,10 @@\n package org.odk.collect.android.widgets.utilities;\n \n-import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n-import android.widget.TextView;\n \n+import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n-import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.activities.FormEntryActivity;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyMjQ3MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459722470", "bodyText": "it should be a part of widget class, passing TextView dateAnswerText just to setText on it is strange.", "author": "grzesiek2010", "createdAt": "2020-07-23T20:55:07Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex 977671f13..e80929f6f 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,12 +1,10 @@\n package org.odk.collect.android.widgets.utilities;\n \n-import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n-import android.widget.TextView;\n \n+import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n-import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.activities.FormEntryActivity;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyMjYzMg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459722632", "bodyText": "As above it should be a part of widget class.", "author": "grzesiek2010", "createdAt": "2020-07-23T20:55:25Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {\n+        dateAnswerText.setText(DateTimeUtils.getDateTimeLabel(date, datePickerDetails, false, context));\n+    }\n+\n+    public static void setTimeLabel(TextView timeAnswerText, int hourOfDay, int minuteOfHour, boolean nullAnswer) {", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex 977671f13..e80929f6f 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,12 +1,10 @@\n package org.odk.collect.android.widgets.utilities;\n \n-import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n-import android.widget.TextView;\n \n+import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n-import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.activities.FormEntryActivity;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyMzU5MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459723590", "bodyText": "FormEntryPrompt prompt is used just to get its index so please pass the index only.", "author": "grzesiek2010", "createdAt": "2020-07-23T20:57:15Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {\n+        dateAnswerText.setText(DateTimeUtils.getDateTimeLabel(date, datePickerDetails, false, context));\n+    }\n+\n+    public static void setTimeLabel(TextView timeAnswerText, int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        timeAnswerText.setText(getTimeData(hourOfDay, minuteOfHour, nullAnswer).getDisplayText());\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormEntryPrompt prompt, DatePickerDetails datePickerDetails,", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex 977671f13..e80929f6f 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,12 +1,10 @@\n package org.odk.collect.android.widgets.utilities;\n \n-import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n-import android.widget.TextView;\n \n+import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n-import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.activities.FormEntryActivity;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyNTM0Nw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459725347", "bodyText": "i think we can get rid of this DATE_PICKER_DIALOG static value and use CustomDatePickerDialog.class.getName() in all cases.", "author": "grzesiek2010", "createdAt": "2020-07-23T21:00:31Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {\n+        dateAnswerText.setText(DateTimeUtils.getDateTimeLabel(date, datePickerDetails, false, context));\n+    }\n+\n+    public static void setTimeLabel(TextView timeAnswerText, int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        timeAnswerText.setText(getTimeData(hourOfDay, minuteOfHour, nullAnswer).getDisplayText());\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormEntryPrompt prompt, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case ETHIOPIAN:\n+                CustomDatePickerDialog dialog = EthiopianDatePickerDialog.newInstance(prompt.getIndex(), date, datePickerDetails);\n+                dialog.show(activity.getSupportFragmentManager(), DATE_PICKER_DIALOG);", "originalCommit": "f369b5c5978f0604b784825cb5e5867fefbf985e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMDUwNA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459730504", "bodyText": "And also i'm wondering if we can simplify it somehow like:\n    public static void showDatePickerDialog(FormEntryActivity activity, FormEntryPrompt prompt, DatePickerDetails datePickerDetails,\n                                            LocalDateTime date) {\n\n        Bundle bundle = new Bundle();\n        bundle.putInt(DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n        bundle.putSerializable(CURRENT_DATE, date);\n        bundle.putSerializable(DATE_PICKER_DETAILS, datePickerDetails);\n\n        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n    }\n    \n    private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n        switch (datePickerType) {\n            case ETHIOPIAN:\n                return CustomDatePickerDialog.class;\n            case COPTIC:\n                return CopticDatePickerDialog.class;\n            case ISLAMIC:\n                return IslamicDatePickerDialog.class;\n            case BIKRAM_SAMBAT:\n                return BikramSambatDatePickerDialog.class;\n            case MYANMAR:\n                return MyanmarDatePickerDialog.class;\n            case PERSIAN:\n                return PersianDatePickerDialog.class;\n            default:\n                return FixedDatePickerDialog.class;\n        }\n    }\n\nyou would need to add some fixes in handling those values we pass to dialogs but I think it's possible?", "author": "grzesiek2010", "createdAt": "2020-07-23T21:11:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyNTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgwODc2Mg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459808762", "bodyText": "Ohh that's great! I'll work on it.", "author": "SaumiaSinghal", "createdAt": "2020-07-24T01:11:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyNTM0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5df577aab33aa664aa4b3f693522b2fba95481dc", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex 977671f13..e80929f6f 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,12 +1,10 @@\n package org.odk.collect.android.widgets.utilities;\n \n-import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n-import android.widget.TextView;\n \n+import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n-import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.activities.FormEntryActivity;\n"}}, {"oid": "5df577aab33aa664aa4b3f693522b2fba95481dc", "url": "https://github.com/getodk/collect/commit/5df577aab33aa664aa4b3f693522b2fba95481dc", "message": "code improvements", "committedDate": "2020-07-24T02:47:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzMzgzOA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459933838", "bodyText": "You won't need negation if you turn the order:\n        return binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_date_selected))\n                ? null\n                : new DateData(selectedDate.toDate());", "author": "grzesiek2010", "createdAt": "2020-07-24T09:00:43Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -83,291 +48,69 @@ public DateWidget(Context context, QuestionDetails prompt) {\n \n     public DateWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createWidget(context);\n     }\n \n-    protected void createWidget(Context context) {\n-        datePickerDetails = DateTimeUtils.getDatePickerDetails(getFormEntryPrompt().getQuestion().getAppearanceAttr());\n-        dateButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_date), getAnswerFontSize(), this);\n-        dateTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        addViews(context);\n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n-            setDateToCurrent();\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        datePickerDetails = DateTimeUtils.getDatePickerDetails(prompt.getQuestion().getAppearanceAttr());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n         } else {\n-            date = new LocalDateTime(getFormEntryPrompt().getAnswerValue().getValue());\n-            setDateLabel();\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_date));\n+            binding.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.showDatePickerDialog(\n+                    (FormEntryActivity) getContext(), prompt.getIndex(), datePickerDetails, selectedDate));\n         }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+        if (prompt.getAnswerValue() == null) {\n+            selectedDate = DateTimeWidgetUtils.getCurrentDate();\n+            binding.widgetAnswerText.setText(R.string.no_date_selected);\n+        } else {\n+            selectedDate = new LocalDateTime(getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                    (Date) getAnswer().getValue(), datePickerDetails, false, context));\n+        }\n+\n+        return binding.getRoot();\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        dateButton.setOnLongClickListener(l);\n-        dateTextView.setOnLongClickListener(l);\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        dateButton.cancelLongPress();\n-        dateTextView.cancelLongPress();\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n     public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n+        selectedDate = DateTimeWidgetUtils.getCurrentDate();\n+        binding.widgetAnswerText.setText(R.string.no_date_selected);\n         widgetValueChanged();\n     }\n \n-    void clearAnswerWithoutValueChangeEvent() {\n-        isNullAnswer = true;\n-        dateTextView.setText(R.string.no_date_selected);\n-        setDateToCurrent();\n-    }\n-\n     @Override\n     public IAnswerData getAnswer() {\n-        return isNullAnswer ? null : new DateData(date.toDate());\n+        return !binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_date_selected))", "originalCommit": "38ce2d8d772001cea191113a2a0505ba5b142ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\nindex 2533d9213..432a0f881 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java\n\n@@ -20,34 +20,47 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.DateData;\n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n import java.util.Date;\n \n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class DateWidget extends QuestionWidget {\n     WidgetAnswerBinding binding;\n \n+    private final DateTimeWidgetListener listener;\n+\n     private LocalDateTime selectedDate;\n     private DatePickerDetails datePickerDetails;\n \n-    public DateWidget(Context context, QuestionDetails prompt) {\n-        this(context, prompt, false);\n-    }\n-\n-    public DateWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n-        super(context, prompt, !isPartOfDateTimeWidget);\n+    public DateWidget(Context context, QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n+        super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedDate().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedDate = localDateTime;\n+                binding.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                        selectedDate.toDate(), datePickerDetails, false, getContext()));\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzNDM0Mw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459934343", "bodyText": "You won't need negation if you turn the order:\n        return binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n                ? null\n                : DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour);", "author": "grzesiek2010", "createdAt": "2020-07-24T09:01:49Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,106 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n     private int hourOfDay;\n     private int minuteOfHour;\n \n-    private boolean nullAnswer;\n-\n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n-    }\n-\n-    @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n-    }\n-\n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n-    }\n-\n-    @Override\n-    public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n     }\n \n     @Override\n-    public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n-    }\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n \n-    @Override\n-    public void cancelLongPress() {\n-        super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.createTimePickerDialog(\n+                    (FormEntryActivity) getContext(), hourOfDay, minuteOfHour));\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n+        if (prompt.getAnswerValue() == null) {\n+            setTimeToCurrent();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n         } else {\n             Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n             DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n \n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n+            hourOfDay = dateTime.getHourOfDay();\n+            minuteOfHour = dateTime.getMinuteOfHour();\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour).getDisplayText());\n+        }\n \n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n+        return binding.getRoot();\n     }\n \n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n+    @Override\n+    public void clearAnswer() {\n+        setTimeToCurrent();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n+    @Override\n+    public IAnswerData getAnswer() {\n+        return !binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))", "originalCommit": "38ce2d8d772001cea191113a2a0505ba5b142ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\nindex 47dbc87ea..c8883738e 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n\n@@ -20,31 +20,43 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.core.model.data.TimeData;\n import org.javarosa.form.api.FormEntryPrompt;\n+\n import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n-\n-import java.util.Date;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class TimeWidget extends QuestionWidget {\n     WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n+    private final DateTimeWidgetListener listener;\n \n-    public TimeWidget(Context context, final QuestionDetails prompt) {\n-        this(context, prompt, false);\n-    }\n+    private LocalDateTime selectedTime;\n \n-    public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n-        super(context, prompt, !isPartOfDateTimeWidget);\n+    public TimeWidget(Context context, final QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n+        super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedTime = DateTimeWidgetUtils.getSelectedTime(selectedTime, LocalDateTime.now());\n+                binding.widgetAnswerText.setText(new TimeData(selectedTime.toDate()).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzNTgxMw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459935813", "bodyText": "I think it's not consistent than in this widget we keep separate values hour, minute and in DateWidget we keep LocalDateTime wouldn't it be better to have TimeData field here instead of hour/minute?", "author": "grzesiek2010", "createdAt": "2020-07-24T09:04:43Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,106 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n     private int hourOfDay;", "originalCommit": "38ce2d8d772001cea191113a2a0505ba5b142ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\nindex 47dbc87ea..c8883738e 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n\n@@ -20,31 +20,43 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.core.model.data.TimeData;\n import org.javarosa.form.api.FormEntryPrompt;\n+\n import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n-\n-import java.util.Date;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class TimeWidget extends QuestionWidget {\n     WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n+    private final DateTimeWidgetListener listener;\n \n-    public TimeWidget(Context context, final QuestionDetails prompt) {\n-        this(context, prompt, false);\n-    }\n+    private LocalDateTime selectedTime;\n \n-    public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n-        super(context, prompt, !isPartOfDateTimeWidget);\n+    public TimeWidget(Context context, final QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n+        super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedTime = DateTimeWidgetUtils.getSelectedTime(selectedTime, LocalDateTime.now());\n+                binding.widgetAnswerText.setText(new TimeData(selectedTime.toDate()).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzODU5Ng==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459938596", "bodyText": "As I said in one of my previous comments it would be good to rename this method because now it is used in many widgets not just binary ones. setData maybe?", "author": "grzesiek2010", "createdAt": "2020-07-24T09:09:32Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,106 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n     private int hourOfDay;\n     private int minuteOfHour;\n \n-    private boolean nullAnswer;\n-\n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n-    }\n-\n-    @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n-    }\n-\n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n-    }\n-\n-    @Override\n-    public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n     }\n \n     @Override\n-    public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n-    }\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n \n-    @Override\n-    public void cancelLongPress() {\n-        super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.createTimePickerDialog(\n+                    (FormEntryActivity) getContext(), hourOfDay, minuteOfHour));\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n+        if (prompt.getAnswerValue() == null) {\n+            setTimeToCurrent();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n         } else {\n             Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n             DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n \n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n+            hourOfDay = dateTime.getHourOfDay();\n+            minuteOfHour = dateTime.getMinuteOfHour();\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour).getDisplayText());\n+        }\n \n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n+        return binding.getRoot();\n     }\n \n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n+    @Override\n+    public void clearAnswer() {\n+        setTimeToCurrent();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n+    @Override\n+    public IAnswerData getAnswer() {\n+        return !binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n+                ? DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour)\n+                : null;\n     }\n \n-    public void updateTime(int hourOfDay, int minuteOfHour, boolean shouldUpdateLabel) {\n-        this.hourOfDay = hourOfDay;\n-        this.minuteOfHour = minuteOfHour;\n-\n-        timePickerDialog.updateTime(hourOfDay, minuteOfHour);\n-\n-        if (shouldUpdateLabel) {\n-            setTimeLabel();\n-        }\n+    @Override\n+    public void setOnLongClickListener(OnLongClickListener l) {\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n-    public void onTimeSet(TimePicker timePicker, int hourOfDay, int minute) {\n-        timePicker.clearFocus();\n-\n-        this.hourOfDay = timePicker.getCurrentHour();\n-        this.minuteOfHour = timePicker.getCurrentMinute();\n-\n-        setTimeLabel();\n-        widgetValueChanged();\n+    public void cancelLongPress() {\n+        super.cancelLongPress();\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n-    public void onButtonClick(int buttonId) {\n-        if (nullAnswer) {\n-            setTimeToCurrent();\n-        } else {\n-            updateTime(hourOfDay, minuteOfHour, true);\n+    public void setBinaryData(Object answer) {", "originalCommit": "38ce2d8d772001cea191113a2a0505ba5b142ee0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk1Mzc2OQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459953769", "bodyText": "Oh okay right Sorry I forgot.", "author": "SaumiaSinghal", "createdAt": "2020-07-24T09:42:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzODU5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\nindex 47dbc87ea..c8883738e 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n\n@@ -20,31 +20,43 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.core.model.data.TimeData;\n import org.javarosa.form.api.FormEntryPrompt;\n+\n import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n-\n-import java.util.Date;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class TimeWidget extends QuestionWidget {\n     WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n+    private final DateTimeWidgetListener listener;\n \n-    public TimeWidget(Context context, final QuestionDetails prompt) {\n-        this(context, prompt, false);\n-    }\n+    private LocalDateTime selectedTime;\n \n-    public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n-        super(context, prompt, !isPartOfDateTimeWidget);\n+    public TimeWidget(Context context, final QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n+        super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedTime = DateTimeWidgetUtils.getSelectedTime(selectedTime, LocalDateTime.now());\n+                binding.widgetAnswerText.setText(new TimeData(selectedTime.toDate()).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0Mjc3Nw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459942777", "bodyText": "Please create methods that return true/false based on labels and use instead of these fields.", "author": "grzesiek2010", "createdAt": "2020-07-24T09:17:46Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,175 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+\n+import java.util.Date;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n+\n+    private LocalDateTime date;\n+    private DatePickerDetails datePickerDetails;\n+    private int hourOfDay;\n+    private int minuteOfHour;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private boolean isDateNull;", "originalCommit": "38ce2d8d772001cea191113a2a0505ba5b142ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\nindex e60e6c4d1..08dd48282 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n\n@@ -20,40 +20,59 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n-\n-import java.util.Date;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n  */\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class DateTimeWidget extends QuestionWidget {\n     DateTimeWidgetAnswerBinding binding;\n \n-    private LocalDateTime date;\n-    private DatePickerDetails datePickerDetails;\n-    private int hourOfDay;\n-    private int minuteOfHour;\n+    private final DateTimeWidgetListener listener;\n \n-    private boolean isDateNull;\n-    private boolean isTimeNull;\n+    private LocalDateTime selectedDateTime;\n+    private DatePickerDetails datePickerDetails;\n \n-    public DateTimeWidget(Context context, QuestionDetails prompt) {\n+    public DateTimeWidget(Context context, QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n         super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedDate().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedDate(localDateTime, selectedDateTime);\n+                binding.dateWidget.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                        localDateTime.toDate(), datePickerDetails, false, getContext()));\n+                widgetValueChanged();\n+            }\n+        });\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                DateTime selectedTime = localDateTime.toDateTime();\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedTime(selectedTime.toLocalDateTime(), selectedDateTime);\n+                binding.timeWidget.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0NDk4MQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459944981", "bodyText": "Those fields are now hared between CustomDatePickerDialog and FixedDatePickerDialog so shouldn't placed in CustomDatePickerDialog. This class would be probably a better place.", "author": "grzesiek2010", "createdAt": "2020-07-24T09:22:37Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return new TimeData(localDateTime.toDate());\n+    }\n+\n+    public static LocalDateTime getCurrentDate() {\n+        return LocalDateTime\n+                .now()\n+                .withHourOfDay(0)\n+                .withMinuteOfHour(0)\n+                .withSecondOfMinute(0)\n+                .withMillisOfSecond(0);\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        ThemeUtils themeUtils = new ThemeUtils(activity);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));", "originalCommit": "38ce2d8d772001cea191113a2a0505ba5b142ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex e80929f6f..79840fe91 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,59 +1,108 @@\n package org.odk.collect.android.widgets.utilities;\n \n+import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n \n+import androidx.appcompat.app.AppCompatActivity;\n+\n import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n-import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ScreenContext;\n import org.odk.collect.android.utilities.ThemeUtils;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n \n-public class DateTimeWidgetUtils {\n+public class DateTimeWidgetUtils implements DateTimeWidgetListener {\n+    public static final String FORM_INDEX = \"formIndex\";\n+    public static final String DATE = \"date\";\n+    public static final String DATE_PICKER_DETAILS = \"datePickerDetails\";\n+    public static final String DATE_PICKER_THEME = \"datePickerTheme\";\n \n-    private DateTimeWidgetUtils() {\n+    @Override\n+    public void setWidgetWaitingForData(FormIndex formIndex) {\n+        setWaitingForData(formIndex);\n     }\n \n-    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+    @Override\n+    public boolean isWidgetWaitingForData(FormIndex formIndex) {\n+        return isWaitingForData(formIndex);\n+    }\n+\n+    @Override\n+    public void displayDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails, LocalDateTime selectedDate) {\n+        showDatePickerDialog(context, formIndex, datePickerDetails, selectedDate);\n+    }\n+\n+    @Override\n+    public void displayTimePickerDialog(Context context, LocalDateTime selectedTime) {\n+        showTimePickerDialog(context, selectedTime);\n+    }\n+\n+    public static LocalDateTime getSelectedDate(LocalDateTime selectedDate, LocalDateTime currentTime) {\n+        return new LocalDateTime()\n+                .withDate(selectedDate.getYear(), selectedDate.getMonthOfYear(), selectedDate.getDayOfMonth())\n+                .withTime(currentTime.getHourOfDay(), currentTime.getMinuteOfHour(), 0, 0);\n+    }\n \n+    public static LocalDateTime getSelectedTime(LocalDateTime selectedTime, LocalDateTime currentDate) {\n+        return new LocalDateTime()\n+                .withDate(currentDate.getYear(), currentDate.getMonthOfYear(), currentDate.getDayOfMonth())\n+                .withTime(selectedTime.getHourOfDay(), selectedTime.getMinuteOfHour(), 0, 0);\n+    }\n+\n+    public static LocalDateTime getCurrentDateTime() {\n+        return new LocalDateTime()\n+                .withDate(DateTime.now().getYear(), DateTime.now().getMonthOfYear(), DateTime.now().getDayOfMonth())\n+                .withTime(DateTime.now().getHourOfDay(), DateTime.now().getMinuteOfHour(), 0, 0);\n+    }\n+\n+    public static TimeData getTimeData(DateTime dateTime) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime().withTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), 0, 0);\n         return new TimeData(localDateTime.toDate());\n     }\n \n-    public static LocalDateTime getCurrentDate() {\n-        return LocalDateTime\n-                .now()\n-                .withHourOfDay(0)\n-                .withMinuteOfHour(0)\n-                .withSecondOfMinute(0)\n-                .withMillisOfSecond(0);\n+    private static void setWaitingForData(FormIndex formIndex) {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController != null) {\n+            formController.setIndexWaitingForData(formIndex);\n+        }\n+    }\n+\n+    private static boolean isWaitingForData(FormIndex formIndex) {\n+        FormControllerWaitingForDataRegistry waitingForDataRegistry = new FormControllerWaitingForDataRegistry();\n+        if (waitingForDataRegistry.isWaitingForData(formIndex)) {\n+            waitingForDataRegistry.cancelWaitingForData();\n+            return true;\n+        }\n+        return false;\n     }\n \n-    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+    private static void showDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails,\n                                             LocalDateTime date) {\n-        ThemeUtils themeUtils = new ThemeUtils(activity);\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n \n         Bundle bundle = new Bundle();\n-        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n-        bundle.putSerializable(CustomDatePickerDialog.DATE, date);\n-        bundle.putSerializable(CustomDatePickerDialog.DATE_PICKER_DETAILS, datePickerDetails);\n-        bundle.putSerializable(CustomDatePickerDialog.FORM_INDEX, formIndex);\n+        bundle.putInt(DATE_PICKER_THEME, getDatePickerTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(DATE, date);\n+        bundle.putSerializable(DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(FORM_INDEX, formIndex);\n \n-        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n+        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, ((ScreenContext) context).getActivity().getSupportFragmentManager());\n     }\n \n     private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0NjM5OA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459946398", "bodyText": "Could be one line, it's short enough.", "author": "grzesiek2010", "createdAt": "2020-07-24T09:25:36Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()", "originalCommit": "38ce2d8d772001cea191113a2a0505ba5b142ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex e80929f6f..79840fe91 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,59 +1,108 @@\n package org.odk.collect.android.widgets.utilities;\n \n+import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n \n+import androidx.appcompat.app.AppCompatActivity;\n+\n import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n-import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ScreenContext;\n import org.odk.collect.android.utilities.ThemeUtils;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n \n-public class DateTimeWidgetUtils {\n+public class DateTimeWidgetUtils implements DateTimeWidgetListener {\n+    public static final String FORM_INDEX = \"formIndex\";\n+    public static final String DATE = \"date\";\n+    public static final String DATE_PICKER_DETAILS = \"datePickerDetails\";\n+    public static final String DATE_PICKER_THEME = \"datePickerTheme\";\n \n-    private DateTimeWidgetUtils() {\n+    @Override\n+    public void setWidgetWaitingForData(FormIndex formIndex) {\n+        setWaitingForData(formIndex);\n     }\n \n-    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+    @Override\n+    public boolean isWidgetWaitingForData(FormIndex formIndex) {\n+        return isWaitingForData(formIndex);\n+    }\n+\n+    @Override\n+    public void displayDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails, LocalDateTime selectedDate) {\n+        showDatePickerDialog(context, formIndex, datePickerDetails, selectedDate);\n+    }\n+\n+    @Override\n+    public void displayTimePickerDialog(Context context, LocalDateTime selectedTime) {\n+        showTimePickerDialog(context, selectedTime);\n+    }\n+\n+    public static LocalDateTime getSelectedDate(LocalDateTime selectedDate, LocalDateTime currentTime) {\n+        return new LocalDateTime()\n+                .withDate(selectedDate.getYear(), selectedDate.getMonthOfYear(), selectedDate.getDayOfMonth())\n+                .withTime(currentTime.getHourOfDay(), currentTime.getMinuteOfHour(), 0, 0);\n+    }\n \n+    public static LocalDateTime getSelectedTime(LocalDateTime selectedTime, LocalDateTime currentDate) {\n+        return new LocalDateTime()\n+                .withDate(currentDate.getYear(), currentDate.getMonthOfYear(), currentDate.getDayOfMonth())\n+                .withTime(selectedTime.getHourOfDay(), selectedTime.getMinuteOfHour(), 0, 0);\n+    }\n+\n+    public static LocalDateTime getCurrentDateTime() {\n+        return new LocalDateTime()\n+                .withDate(DateTime.now().getYear(), DateTime.now().getMonthOfYear(), DateTime.now().getDayOfMonth())\n+                .withTime(DateTime.now().getHourOfDay(), DateTime.now().getMinuteOfHour(), 0, 0);\n+    }\n+\n+    public static TimeData getTimeData(DateTime dateTime) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime().withTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), 0, 0);\n         return new TimeData(localDateTime.toDate());\n     }\n \n-    public static LocalDateTime getCurrentDate() {\n-        return LocalDateTime\n-                .now()\n-                .withHourOfDay(0)\n-                .withMinuteOfHour(0)\n-                .withSecondOfMinute(0)\n-                .withMillisOfSecond(0);\n+    private static void setWaitingForData(FormIndex formIndex) {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController != null) {\n+            formController.setIndexWaitingForData(formIndex);\n+        }\n+    }\n+\n+    private static boolean isWaitingForData(FormIndex formIndex) {\n+        FormControllerWaitingForDataRegistry waitingForDataRegistry = new FormControllerWaitingForDataRegistry();\n+        if (waitingForDataRegistry.isWaitingForData(formIndex)) {\n+            waitingForDataRegistry.cancelWaitingForData();\n+            return true;\n+        }\n+        return false;\n     }\n \n-    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+    private static void showDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails,\n                                             LocalDateTime date) {\n-        ThemeUtils themeUtils = new ThemeUtils(activity);\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n \n         Bundle bundle = new Bundle();\n-        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n-        bundle.putSerializable(CustomDatePickerDialog.DATE, date);\n-        bundle.putSerializable(CustomDatePickerDialog.DATE_PICKER_DETAILS, datePickerDetails);\n-        bundle.putSerializable(CustomDatePickerDialog.FORM_INDEX, formIndex);\n+        bundle.putInt(DATE_PICKER_THEME, getDatePickerTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(DATE, date);\n+        bundle.putSerializable(DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(FORM_INDEX, formIndex);\n \n-        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n+        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, ((ScreenContext) context).getActivity().getSupportFragmentManager());\n     }\n \n     private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0NzU5Ng==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459947596", "bodyText": "Make sure this method name is consistent with showDatePickerDialog it should also start with show not create.", "author": "grzesiek2010", "createdAt": "2020-07-24T09:28:19Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return new TimeData(localDateTime.toDate());\n+    }\n+\n+    public static LocalDateTime getCurrentDate() {\n+        return LocalDateTime\n+                .now()\n+                .withHourOfDay(0)\n+                .withMinuteOfHour(0)\n+                .withSecondOfMinute(0)\n+                .withMillisOfSecond(0);\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        ThemeUtils themeUtils = new ThemeUtils(activity);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(CustomDatePickerDialog.DATE, date);\n+        bundle.putSerializable(CustomDatePickerDialog.DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(CustomDatePickerDialog.FORM_INDEX, formIndex);\n+\n+        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n+    }\n+\n+    private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n+        switch (datePickerType) {\n+            case ETHIOPIAN:\n+                return EthiopianDatePickerDialog.class;\n+            case COPTIC:\n+                return CopticDatePickerDialog.class;\n+            case ISLAMIC:\n+                return IslamicDatePickerDialog.class;\n+            case BIKRAM_SAMBAT:\n+                return BikramSambatDatePickerDialog.class;\n+            case MYANMAR:\n+                return MyanmarDatePickerDialog.class;\n+            case PERSIAN:\n+                return PersianDatePickerDialog.class;\n+            default:\n+                return FixedDatePickerDialog.class;\n+        }\n+    }\n+\n+    public static void createTimePickerDialog(FormEntryActivity activity, int hourOfDay, int minuteOfHour) {", "originalCommit": "38ce2d8d772001cea191113a2a0505ba5b142ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex e80929f6f..79840fe91 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,59 +1,108 @@\n package org.odk.collect.android.widgets.utilities;\n \n+import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n \n+import androidx.appcompat.app.AppCompatActivity;\n+\n import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n-import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ScreenContext;\n import org.odk.collect.android.utilities.ThemeUtils;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n \n-public class DateTimeWidgetUtils {\n+public class DateTimeWidgetUtils implements DateTimeWidgetListener {\n+    public static final String FORM_INDEX = \"formIndex\";\n+    public static final String DATE = \"date\";\n+    public static final String DATE_PICKER_DETAILS = \"datePickerDetails\";\n+    public static final String DATE_PICKER_THEME = \"datePickerTheme\";\n \n-    private DateTimeWidgetUtils() {\n+    @Override\n+    public void setWidgetWaitingForData(FormIndex formIndex) {\n+        setWaitingForData(formIndex);\n     }\n \n-    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+    @Override\n+    public boolean isWidgetWaitingForData(FormIndex formIndex) {\n+        return isWaitingForData(formIndex);\n+    }\n+\n+    @Override\n+    public void displayDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails, LocalDateTime selectedDate) {\n+        showDatePickerDialog(context, formIndex, datePickerDetails, selectedDate);\n+    }\n+\n+    @Override\n+    public void displayTimePickerDialog(Context context, LocalDateTime selectedTime) {\n+        showTimePickerDialog(context, selectedTime);\n+    }\n+\n+    public static LocalDateTime getSelectedDate(LocalDateTime selectedDate, LocalDateTime currentTime) {\n+        return new LocalDateTime()\n+                .withDate(selectedDate.getYear(), selectedDate.getMonthOfYear(), selectedDate.getDayOfMonth())\n+                .withTime(currentTime.getHourOfDay(), currentTime.getMinuteOfHour(), 0, 0);\n+    }\n \n+    public static LocalDateTime getSelectedTime(LocalDateTime selectedTime, LocalDateTime currentDate) {\n+        return new LocalDateTime()\n+                .withDate(currentDate.getYear(), currentDate.getMonthOfYear(), currentDate.getDayOfMonth())\n+                .withTime(selectedTime.getHourOfDay(), selectedTime.getMinuteOfHour(), 0, 0);\n+    }\n+\n+    public static LocalDateTime getCurrentDateTime() {\n+        return new LocalDateTime()\n+                .withDate(DateTime.now().getYear(), DateTime.now().getMonthOfYear(), DateTime.now().getDayOfMonth())\n+                .withTime(DateTime.now().getHourOfDay(), DateTime.now().getMinuteOfHour(), 0, 0);\n+    }\n+\n+    public static TimeData getTimeData(DateTime dateTime) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime().withTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), 0, 0);\n         return new TimeData(localDateTime.toDate());\n     }\n \n-    public static LocalDateTime getCurrentDate() {\n-        return LocalDateTime\n-                .now()\n-                .withHourOfDay(0)\n-                .withMinuteOfHour(0)\n-                .withSecondOfMinute(0)\n-                .withMillisOfSecond(0);\n+    private static void setWaitingForData(FormIndex formIndex) {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController != null) {\n+            formController.setIndexWaitingForData(formIndex);\n+        }\n+    }\n+\n+    private static boolean isWaitingForData(FormIndex formIndex) {\n+        FormControllerWaitingForDataRegistry waitingForDataRegistry = new FormControllerWaitingForDataRegistry();\n+        if (waitingForDataRegistry.isWaitingForData(formIndex)) {\n+            waitingForDataRegistry.cancelWaitingForData();\n+            return true;\n+        }\n+        return false;\n     }\n \n-    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+    private static void showDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails,\n                                             LocalDateTime date) {\n-        ThemeUtils themeUtils = new ThemeUtils(activity);\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n \n         Bundle bundle = new Bundle();\n-        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n-        bundle.putSerializable(CustomDatePickerDialog.DATE, date);\n-        bundle.putSerializable(CustomDatePickerDialog.DATE_PICKER_DETAILS, datePickerDetails);\n-        bundle.putSerializable(CustomDatePickerDialog.FORM_INDEX, formIndex);\n+        bundle.putInt(DATE_PICKER_THEME, getDatePickerTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(DATE, date);\n+        bundle.putSerializable(DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(FORM_INDEX, formIndex);\n \n-        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n+        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, ((ScreenContext) context).getActivity().getSupportFragmentManager());\n     }\n \n     private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0ODUyNw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459948527", "bodyText": "please rename it to getDatePickerTheme or something like that because now it's confusing and other contributors migt think it should be used for building TimePickers as well.", "author": "grzesiek2010", "createdAt": "2020-07-24T09:30:29Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return new TimeData(localDateTime.toDate());\n+    }\n+\n+    public static LocalDateTime getCurrentDate() {\n+        return LocalDateTime\n+                .now()\n+                .withHourOfDay(0)\n+                .withMinuteOfHour(0)\n+                .withSecondOfMinute(0)\n+                .withMillisOfSecond(0);\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        ThemeUtils themeUtils = new ThemeUtils(activity);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(CustomDatePickerDialog.DATE, date);\n+        bundle.putSerializable(CustomDatePickerDialog.DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(CustomDatePickerDialog.FORM_INDEX, formIndex);\n+\n+        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n+    }\n+\n+    private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n+        switch (datePickerType) {\n+            case ETHIOPIAN:\n+                return EthiopianDatePickerDialog.class;\n+            case COPTIC:\n+                return CopticDatePickerDialog.class;\n+            case ISLAMIC:\n+                return IslamicDatePickerDialog.class;\n+            case BIKRAM_SAMBAT:\n+                return BikramSambatDatePickerDialog.class;\n+            case MYANMAR:\n+                return MyanmarDatePickerDialog.class;\n+            case PERSIAN:\n+                return PersianDatePickerDialog.class;\n+            default:\n+                return FixedDatePickerDialog.class;\n+        }\n+    }\n+\n+    public static void createTimePickerDialog(FormEntryActivity activity, int hourOfDay, int minuteOfHour) {\n+        ThemeUtils themeUtils = new ThemeUtils(activity);\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(CustomTimePickerDialog.TIME_PICKER_THEME, themeUtils.getHoloDialogTheme());\n+        bundle.putSerializable(CustomTimePickerDialog.CURRENT_TIME, new DateTime().withTime(hourOfDay, minuteOfHour, 0, 0));\n+\n+        DialogUtils.showIfNotShowing(CustomTimePickerDialog.class, bundle, activity.getSupportFragmentManager());\n+    }\n+\n+    private static int getTheme(ThemeUtils themeUtils, DatePickerDetails datePickerDetails) {", "originalCommit": "38ce2d8d772001cea191113a2a0505ba5b142ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex e80929f6f..79840fe91 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,59 +1,108 @@\n package org.odk.collect.android.widgets.utilities;\n \n+import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n \n+import androidx.appcompat.app.AppCompatActivity;\n+\n import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n-import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ScreenContext;\n import org.odk.collect.android.utilities.ThemeUtils;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n \n-public class DateTimeWidgetUtils {\n+public class DateTimeWidgetUtils implements DateTimeWidgetListener {\n+    public static final String FORM_INDEX = \"formIndex\";\n+    public static final String DATE = \"date\";\n+    public static final String DATE_PICKER_DETAILS = \"datePickerDetails\";\n+    public static final String DATE_PICKER_THEME = \"datePickerTheme\";\n \n-    private DateTimeWidgetUtils() {\n+    @Override\n+    public void setWidgetWaitingForData(FormIndex formIndex) {\n+        setWaitingForData(formIndex);\n     }\n \n-    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+    @Override\n+    public boolean isWidgetWaitingForData(FormIndex formIndex) {\n+        return isWaitingForData(formIndex);\n+    }\n+\n+    @Override\n+    public void displayDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails, LocalDateTime selectedDate) {\n+        showDatePickerDialog(context, formIndex, datePickerDetails, selectedDate);\n+    }\n+\n+    @Override\n+    public void displayTimePickerDialog(Context context, LocalDateTime selectedTime) {\n+        showTimePickerDialog(context, selectedTime);\n+    }\n+\n+    public static LocalDateTime getSelectedDate(LocalDateTime selectedDate, LocalDateTime currentTime) {\n+        return new LocalDateTime()\n+                .withDate(selectedDate.getYear(), selectedDate.getMonthOfYear(), selectedDate.getDayOfMonth())\n+                .withTime(currentTime.getHourOfDay(), currentTime.getMinuteOfHour(), 0, 0);\n+    }\n \n+    public static LocalDateTime getSelectedTime(LocalDateTime selectedTime, LocalDateTime currentDate) {\n+        return new LocalDateTime()\n+                .withDate(currentDate.getYear(), currentDate.getMonthOfYear(), currentDate.getDayOfMonth())\n+                .withTime(selectedTime.getHourOfDay(), selectedTime.getMinuteOfHour(), 0, 0);\n+    }\n+\n+    public static LocalDateTime getCurrentDateTime() {\n+        return new LocalDateTime()\n+                .withDate(DateTime.now().getYear(), DateTime.now().getMonthOfYear(), DateTime.now().getDayOfMonth())\n+                .withTime(DateTime.now().getHourOfDay(), DateTime.now().getMinuteOfHour(), 0, 0);\n+    }\n+\n+    public static TimeData getTimeData(DateTime dateTime) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime().withTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), 0, 0);\n         return new TimeData(localDateTime.toDate());\n     }\n \n-    public static LocalDateTime getCurrentDate() {\n-        return LocalDateTime\n-                .now()\n-                .withHourOfDay(0)\n-                .withMinuteOfHour(0)\n-                .withSecondOfMinute(0)\n-                .withMillisOfSecond(0);\n+    private static void setWaitingForData(FormIndex formIndex) {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController != null) {\n+            formController.setIndexWaitingForData(formIndex);\n+        }\n+    }\n+\n+    private static boolean isWaitingForData(FormIndex formIndex) {\n+        FormControllerWaitingForDataRegistry waitingForDataRegistry = new FormControllerWaitingForDataRegistry();\n+        if (waitingForDataRegistry.isWaitingForData(formIndex)) {\n+            waitingForDataRegistry.cancelWaitingForData();\n+            return true;\n+        }\n+        return false;\n     }\n \n-    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+    private static void showDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails,\n                                             LocalDateTime date) {\n-        ThemeUtils themeUtils = new ThemeUtils(activity);\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n \n         Bundle bundle = new Bundle();\n-        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n-        bundle.putSerializable(CustomDatePickerDialog.DATE, date);\n-        bundle.putSerializable(CustomDatePickerDialog.DATE_PICKER_DETAILS, datePickerDetails);\n-        bundle.putSerializable(CustomDatePickerDialog.FORM_INDEX, formIndex);\n+        bundle.putInt(DATE_PICKER_THEME, getDatePickerTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(DATE, date);\n+        bundle.putSerializable(DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(FORM_INDEX, formIndex);\n \n-        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n+        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, ((ScreenContext) context).getActivity().getSupportFragmentManager());\n     }\n \n     private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyNDMzOQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460024339", "bodyText": "No need to cast to Date.", "author": "grzesiek2010", "createdAt": "2020-07-24T12:34:33Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n-\n-    private int hourOfDay;\n-    private int minuteOfHour;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n     }\n \n     @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.showTimePickerDialog(\n+                    (FormEntryActivity) getContext(), selectedTime));\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+        if (prompt.getAnswerValue() == null) {\n+            selectedTime = DateTime.now();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        } else {\n+            selectedTime = new DateTime((Date) getFormEntryPrompt().getAnswerValue().getValue());", "originalCommit": "54c371ebd725b1682d770a801358b122a9b30384", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\nindex 2d5cab16c..c8883738e 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n\n@@ -20,30 +20,43 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.core.model.data.TimeData;\n import org.javarosa.form.api.FormEntryPrompt;\n+\n import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n-\n-import java.util.Date;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class TimeWidget extends QuestionWidget {\n     WidgetAnswerBinding binding;\n \n-    private DateTime selectedTime;\n+    private final DateTimeWidgetListener listener;\n \n-    public TimeWidget(Context context, final QuestionDetails prompt) {\n-        this(context, prompt, false);\n-    }\n+    private LocalDateTime selectedTime;\n+\n+    public TimeWidget(Context context, final QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n+        super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n \n-    public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n-        super(context, prompt, !isPartOfDateTimeWidget);\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedTime = DateTimeWidgetUtils.getSelectedTime(selectedTime, LocalDateTime.now());\n+                binding.widgetAnswerText.setText(new TimeData(selectedTime.toDate()).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyNDgyMg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460024822", "bodyText": "To be consistent with DateWidget please use selectedDate name here.", "author": "grzesiek2010", "createdAt": "2020-07-24T12:35:32Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,161 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+\n+import java.util.Date;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private LocalDateTime date;", "originalCommit": "54c371ebd725b1682d770a801358b122a9b30384", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\nindex da9c9d526..08dd48282 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n\n@@ -20,36 +20,59 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n-\n-import java.util.Date;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n  */\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class DateTimeWidget extends QuestionWidget {\n     DateTimeWidgetAnswerBinding binding;\n \n-    private LocalDateTime date;\n+    private final DateTimeWidgetListener listener;\n+\n+    private LocalDateTime selectedDateTime;\n     private DatePickerDetails datePickerDetails;\n-    private DateTime time;\n \n-    public DateTimeWidget(Context context, QuestionDetails prompt) {\n+    public DateTimeWidget(Context context, QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n         super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedDate().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedDate(localDateTime, selectedDateTime);\n+                binding.dateWidget.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                        localDateTime.toDate(), datePickerDetails, false, getContext()));\n+                widgetValueChanged();\n+            }\n+        });\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                DateTime selectedTime = localDateTime.toDateTime();\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedTime(selectedTime.toLocalDateTime(), selectedDateTime);\n+                binding.timeWidget.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyNTAwNA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460025004", "bodyText": "To be consistent with TimeWidget please use selectedTime name here.", "author": "grzesiek2010", "createdAt": "2020-07-24T12:35:57Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,161 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+\n+import java.util.Date;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private LocalDateTime date;\n+    private DatePickerDetails datePickerDetails;\n+    private DateTime time;", "originalCommit": "54c371ebd725b1682d770a801358b122a9b30384", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\nindex da9c9d526..08dd48282 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n\n@@ -20,36 +20,59 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n-\n-import java.util.Date;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n  */\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class DateTimeWidget extends QuestionWidget {\n     DateTimeWidgetAnswerBinding binding;\n \n-    private LocalDateTime date;\n+    private final DateTimeWidgetListener listener;\n+\n+    private LocalDateTime selectedDateTime;\n     private DatePickerDetails datePickerDetails;\n-    private DateTime time;\n \n-    public DateTimeWidget(Context context, QuestionDetails prompt) {\n+    public DateTimeWidget(Context context, QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n         super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedDate().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedDate(localDateTime, selectedDateTime);\n+                binding.dateWidget.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                        localDateTime.toDate(), datePickerDetails, false, getContext()));\n+                widgetValueChanged();\n+            }\n+        });\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                DateTime selectedTime = localDateTime.toDateTime();\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedTime(selectedTime.toLocalDateTime(), selectedDateTime);\n+                binding.timeWidget.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyOTQyNQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460029425", "bodyText": "This combination is a bit confusing clearAnswerWithoutValueChangeListener() + widgetValueChanged() if you want to keep that first method I think it would be better to rename it to something like resetAnswerFields() or clearAnswerFields().", "author": "grzesiek2010", "createdAt": "2020-07-24T12:45:05Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,161 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+\n+import java.util.Date;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private LocalDateTime date;\n+    private DatePickerDetails datePickerDetails;\n+    private DateTime time;\n \n     public DateTimeWidget(Context context, QuestionDetails prompt) {\n         super(context, prompt);\n+    }\n+\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = DateTimeWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        datePickerDetails = DateTimeUtils.getDatePickerDetails(prompt.getQuestion().getAppearanceAttr());\n \n-        dateWidget = new DateWidget(context, prompt, true);\n-        timeWidget = new TimeWidget(context, prompt, true);\n+        if (prompt.isReadOnly()) {\n+            binding.dateWidget.widgetButton.setVisibility(GONE);\n+            binding.timeWidget.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.dateWidget.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.timeWidget.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+            binding.dateWidget.widgetButton.setText(getContext().getString(R.string.select_date));\n+            binding.timeWidget.widgetButton.setText(getContext().getString(R.string.select_time));\n \n-        dateWidget.getAudioVideoImageTextLabel().getLabelTextView().setVisibility(GONE);\n-        dateWidget.getHelpTextLayout().setVisibility(GONE);\n+            binding.dateWidget.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.showDatePickerDialog(\n+                    (FormEntryActivity) context, prompt.getIndex(), datePickerDetails, date));\n+            binding.timeWidget.widgetButton.setOnClickListener(v ->\n+                    DateTimeWidgetUtils.showTimePickerDialog((FormEntryActivity) getContext(), time));\n+        }\n+        binding.dateWidget.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+        binding.timeWidget.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        timeWidget.getAudioVideoImageTextLabel().getLabelTextView().setVisibility(GONE);\n-        timeWidget.getHelpTextLayout().setVisibility(GONE);\n+        if (getFormEntryPrompt().getAnswerValue() == null) {\n+            clearAnswerWithoutValueChangeListener();\n+        } else {\n+            date = new LocalDateTime(getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.dateWidget.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                    date.toDate(), datePickerDetails, false, context));\n \n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(dateWidget);\n-        if (!dateWidget.isDayHidden()) {\n-            linearLayout.addView(timeWidget);\n+            time = new DateTime((Date) getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.timeWidget.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(time).getDisplayText());\n         }\n-        addAnswerView(linearLayout);\n \n-        timeWidget.setValueChangedListener(this);\n-        dateWidget.setValueChangedListener(this);\n+        return binding.getRoot();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        if (isNullAnswer()) {\n+        if (isNullValue()) {\n             return null;\n         } else {\n-            if (timeWidget.isNullAnswer()) {\n-                timeWidget.setTimeToCurrent();\n-                timeWidget.setTimeLabel();\n-            } else if (dateWidget.isNullAnswer()) {\n-                dateWidget.setDateToCurrent();\n-                dateWidget.setDateLabel();\n+            LocalDateTime ldt;\n+            if (isTimeNull()) {\n+                ldt = DateTimeUtils.getLocalDateTime(date.getYear(),\n+                        date.getMonthOfYear(), date.getDayOfMonth(), 0, 0);\n+                time = DateTime.now();\n+            } else if (isDateNull()) {\n+                ldt = new LocalDateTime()\n+                        .withHourOfDay(time.getHourOfDay())\n+                        .withMinuteOfHour(time.getMinuteOfHour());\n+\n+                date = DateTimeWidgetUtils.getCurrentDate();\n+            } else {\n+                ldt = DateTimeUtils.getLocalDateTime(date.getYear(), date.getMonthOfYear(),\n+                        date.getDayOfMonth(), time.getHourOfDay(), time.getMinuteOfHour());\n             }\n-\n-            int year = dateWidget.getDate().getYear();\n-            int month = dateWidget.getDate().getMonthOfYear();\n-            int day = dateWidget.getDate().getDayOfMonth();\n-            int hour = timeWidget.getHour();\n-            int minute = timeWidget.getMinute();\n-\n-            LocalDateTime ldt = new LocalDateTime()\n-                    .withYear(year)\n-                    .withMonthOfYear(month)\n-                    .withDayOfMonth(day)\n-                    .withHourOfDay(hour)\n-                    .withMinuteOfHour(minute)\n-                    .withSecondOfMinute(0)\n-                    .withMillisOfSecond(0);\n-\n             return new DateTimeData(ldt.toDate());\n         }\n     }\n \n     @Override\n     public void clearAnswer() {\n-        dateWidget.clearAnswerWithoutValueChangeEvent();\n-        timeWidget.clearAnswerWithoutValueChangeEvent();\n-\n+        clearAnswerWithoutValueChangeListener();", "originalCommit": "54c371ebd725b1682d770a801358b122a9b30384", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\nindex da9c9d526..08dd48282 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n\n@@ -20,36 +20,59 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n-\n-import java.util.Date;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n  */\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class DateTimeWidget extends QuestionWidget {\n     DateTimeWidgetAnswerBinding binding;\n \n-    private LocalDateTime date;\n+    private final DateTimeWidgetListener listener;\n+\n+    private LocalDateTime selectedDateTime;\n     private DatePickerDetails datePickerDetails;\n-    private DateTime time;\n \n-    public DateTimeWidget(Context context, QuestionDetails prompt) {\n+    public DateTimeWidget(Context context, QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n         super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedDate().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedDate(localDateTime, selectedDateTime);\n+                binding.dateWidget.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                        localDateTime.toDate(), datePickerDetails, false, getContext()));\n+                widgetValueChanged();\n+            }\n+        });\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                DateTime selectedTime = localDateTime.toDateTime();\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedTime(selectedTime.toLocalDateTime(), selectedDateTime);\n+                binding.timeWidget.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzMDY0MQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460030641", "bodyText": "Please make sure that the same format is used like above (datePickerTheme not DATE_PICKER_THEME) btw it would be good to have a lint/checkstyle for that.", "author": "grzesiek2010", "createdAt": "2020-07-24T12:47:30Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+    public static final String FORM_INDEX = \"formIndex\";\n+    public static final String DATE = \"date\";\n+    public static final String DATE_PICKER_DETAILS = \"datePickerDetails\";\n+    public static final String DATE_PICKER_THEME = \"DATE_PICKER_THEME\";", "originalCommit": "54c371ebd725b1682d770a801358b122a9b30384", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex b3087c593..79840fe91 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,13 +1,16 @@\n package org.odk.collect.android.widgets.utilities;\n \n+import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n \n+import androidx.appcompat.app.AppCompatActivity;\n+\n import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n-import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460050820", "bodyText": "This two methods still don't work like expected please take a look at onDateChanged/onRankingChanged\nand also you probably don't need this method at all because there is existing onDateChanged can you use it?", "author": "grzesiek2010", "createdAt": "2020-07-24T13:26:38Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -700,6 +708,44 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {", "originalCommit": "54c371ebd725b1682d770a801358b122a9b30384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNjQ5OA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460226498", "bodyText": "@grzesiek2010 I checked the code of DatePickerDialog.\n@Override  public void onClick(@NonNull DialogInterface dialog, int which) { switch (which) { case BUTTON_POSITIVE: if (mDateSetListener != null) { mDatePicker.clearFocus(); mDateSetListener.onDateSet(mDatePicker, mDatePicker.getYear(), mDatePicker.getMonth(), mDatePicker.getDayOfMonth()); } break; case BUTTON_NEGATIVE: cancel(); break; } }\nonDateSet is called on clicking the positive button. Do I need to override the onClick() method?", "author": "SaumiaSinghal", "createdAt": "2020-07-24T18:42:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4MTAzOQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462081039", "bodyText": "I think I don't understand...\nIn FixedDatePickerDialog you have:\nprivate DatePickerDialog.OnDateSetListener listener;\n\nbut in CustomDatePickerDialog you have\nprivate CustomDatePickerDialogListener listener;\n\nend then you end up with two different methods in FormEntryActivity:\nonDateChanged and onDateSet I think you can share use just one listener probably:\nprivate DatePickerDialog.OnDateSetListener listener;\n\nbecause you won't be able to use CustomDatePickerDialogListener in FixedDatePickerDialog\nis that clear?\nThis was just the first problem, another one is that your methods should work like onDateChanged/onRankingChanged\nI mean they should use setData() otherwise you just pass an answer to the first question what won't work in case of having multiple questions on the same screen.\nThe difference between your approach and the one we need to have is that as I said you add an answer to the first question but you should do the same we do in CustomDatePickerDialog where we set formController.setIndexWaitingForData() and then using if you use setData the method is able to find the widget that is waiting for answer.", "author": "grzesiek2010", "createdAt": "2020-07-29T07:00:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5MjcxMw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462592713", "bodyText": "Oh now I get it. Sorry for misunderstanding", "author": "SaumiaSinghal", "createdAt": "2020-07-29T21:13:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MTE3OQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462941179", "bodyText": "Great this looks good now.", "author": "grzesiek2010", "createdAt": "2020-07-30T11:49:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA=="}], "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\nindex 5f2ba840a..5daae8dd4 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n\n@@ -708,44 +697,6 @@ public class FormEntryActivity extends CollectAbstractActivity implements Animat\n         }\n     }\n \n-    @Override\n-    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n-        if (currentView != null) {\n-            for (QuestionWidget qw : ((ODKView) currentView).getWidgets()) {\n-                if (qw instanceof DateWidget) {\n-                    ((DateWidget) qw).setData(DateTimeUtils.getLocalDateTime(\n-                            year, month + 1, dayOfMonth, 0, 0));\n-                    widgetValueChanged(qw);\n-                    return;\n-                } else if (qw instanceof DateTimeWidget) {\n-                    ((DateTimeWidget) qw).setData(DateTimeUtils.getLocalDateTime(\n-                            year, month + 1, dayOfMonth, 0, 0));\n-                    widgetValueChanged(qw);\n-                    return;\n-                }\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\n-        if (currentView != null) {\n-            for (QuestionWidget qw : ((ODKView) currentView).getWidgets()) {\n-                if (qw instanceof TimeWidget) {\n-                    view.clearFocus();\n-                    ((TimeWidget) qw).setData(DateTimeUtils.getDateTime(hourOfDay, minute));\n-                    widgetValueChanged(qw);\n-                    return;\n-                } else if (qw instanceof DateTimeWidget) {\n-                    view.clearFocus();\n-                    ((DateTimeWidget) qw).setData(DateTimeUtils.getDateTime(hourOfDay, minute));\n-                    widgetValueChanged(qw);\n-                    return;\n-                }\n-            }\n-        }\n-    }\n-\n     @Nullable\n     private FormController getFormController() {\n         return Collect.getInstance().getFormController();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzNzc5OQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462937799", "bodyText": "This method name also should be changed like you did with setData() in this case it might be setWidgetData() without binary word because as i said before it is no longer used only by binary widgets.", "author": "grzesiek2010", "createdAt": "2020-07-30T11:42:18Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2643,11 +2646,20 @@ public void onNumberPickerValueSelected(int widgetId, int value) {\n     }\n \n     @Override\n-    public void onDateChanged(LocalDateTime date) {\n-        ODKView odkView = getCurrentViewIfODKView();\n-        if (odkView != null) {\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (getCurrentViewIfODKView() != null) {\n             QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n-            setBinaryWidgetData(date);\n+            setBinaryWidgetData(DateTimeUtils.getLocalDateTime(", "originalCommit": "ed632d502fdf66ea73e169e7c715d49b67d871f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5OTI3MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462999270", "bodyText": "Also the BinaryDataReceiver class has wrong name again it's not just for binary widgets.", "author": "grzesiek2010", "createdAt": "2020-07-30T13:33:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzNzc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3MTY0Ng==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463271646", "bodyText": "I renamed it to WidgetDataReceiver. Is it fine?", "author": "SaumiaSinghal", "createdAt": "2020-07-30T21:07:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzNzc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4NDQ2NA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463284464", "bodyText": "Yes seems fine.", "author": "grzesiek2010", "createdAt": "2020-07-30T21:34:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzNzc5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\nindex 9ee942737..5daae8dd4 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n\n@@ -2645,25 +2639,6 @@ public class FormEntryActivity extends CollectAbstractActivity implements Animat\n         }\n     }\n \n-    @Override\n-    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n-        if (getCurrentViewIfODKView() != null) {\n-            QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n-            setBinaryWidgetData(DateTimeUtils.getLocalDateTime(\n-                    year, month + 1, dayOfMonth, 0, 0));\n-            widgetValueChanged(widgetGettingNewValue);\n-        }\n-    }\n-\n-    @Override\n-    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\n-        if (getCurrentViewIfODKView() != null) {\n-            QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n-            setBinaryWidgetData(DateTimeUtils.getDateTime(hourOfDay, minute));\n-            widgetValueChanged(widgetGettingNewValue);\n-        }\n-    }\n-\n     @Override\n     public void onRankingChanged(List<SelectChoice> items) {\n         ODKView odkView = getCurrentViewIfODKView();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462946160", "bodyText": "What is the reason to have DateTimeWidgetUtils and DateTimeUtils as separate classes? Shouldn't it be just one class?", "author": "grzesiek2010", "createdAt": "2020-07-30T12:00:38Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "originalCommit": "ed632d502fdf66ea73e169e7c715d49b67d871f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3MzI2MQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463273261", "bodyText": "I just thought that the methods in DateTimeUtils are very much specific to getting a particular format of Date and Time Data. Although the names of both classes are very similar.", "author": "SaumiaSinghal", "createdAt": "2020-07-30T21:10:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3MTcwNA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463571704", "bodyText": "Should we have a single class here, just DateTimeUtils?", "author": "SaumiaSinghal", "createdAt": "2020-07-31T12:06:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg0Njc1OQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463846759", "bodyText": "I think we should review those classes because even if it make sense to keep them both at least we need to move some methods. For example in DateTimeWidgetUtils you have getCurrentDate()/getTimeData() where it would be better to have it in DateTimeUtils on the other hand in DateTimeUtils you have getDateTimeLabel() where it should probably be in DateTimeWidgetUtils because it's a label for widgets.", "author": "grzesiek2010", "createdAt": "2020-07-31T21:13:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1MDAxMQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463850011", "bodyText": "Okay sure! I will review them.", "author": "SaumiaSinghal", "createdAt": "2020-07-31T21:18:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4MDQ2OQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465080469", "bodyText": "Is this cleaning done? Because I doubt.", "author": "grzesiek2010", "createdAt": "2020-08-04T14:12:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NDM4Nw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465244387", "bodyText": "Yes done in e2765b1", "author": "SaumiaSinghal", "createdAt": "2020-08-04T18:24:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMzE0MQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465633141", "bodyText": "What about: getDatePickerDetails/getDateTimeLabel/getGregorianDateTimeLabel shouldn't it also be a part of DateTimeWidgetUtils?", "author": "grzesiek2010", "createdAt": "2020-08-05T10:38:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2OTY5Mw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465969693", "bodyText": "Right @grzesiek2010, they should be a part of WidgetUtils", "author": "SaumiaSinghal", "createdAt": "2020-08-05T19:59:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}], "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex 2ab81f8ac..79840fe91 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -1,13 +1,15 @@\n package org.odk.collect.android.widgets.utilities;\n \n+import android.content.Context;\n import android.os.Build;\n import android.os.Bundle;\n \n+import androidx.appcompat.app.AppCompatActivity;\n+\n import org.javarosa.core.model.FormIndex;\n import org.javarosa.core.model.data.TimeData;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462951085", "bodyText": "You still didn't implement view model as I said before (too keep data) so your picker will reset values for example if your rotate your device. This is something we should test automatically.", "author": "grzesiek2010", "createdAt": "2020-07-30T12:11:08Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "originalCommit": "ed632d502fdf66ea73e169e7c715d49b67d871f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA3NzMwMw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465077303", "bodyText": "You implemented the viewmodel but you don't use values stored there so the result is the same once you rotate your device everything is reset. As above would be good to have a test for it.", "author": "grzesiek2010", "createdAt": "2020-08-04T14:08:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0Mjc4NA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465242784", "bodyText": "I tested it on my device. Values didn't change on device rotation. When displaying the DatePickerDialog, I use date value passed by the widget to set the dialog to that value. Am I missing something?", "author": "SaumiaSinghal", "createdAt": "2020-08-04T18:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY0MDM1Mg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465640352", "bodyText": "I think it happens only in custom date pickers like coptic/ethiopian etc. Did you test them?", "author": "grzesiek2010", "createdAt": "2020-08-05T10:53:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY3MjUwNw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465672507", "bodyText": "Oh right I need to take care of the dates displayed in the textview of the dialog.", "author": "SaumiaSinghal", "createdAt": "2020-08-05T11:55:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3MjEwMA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465972100", "bodyText": "Should I write the test for CusotmDatePickerDialog as I ddin't use the viewmodel to set the values shown on the dialog on screen orientation change.", "author": "SaumiaSinghal", "createdAt": "2020-08-05T20:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4Mjk4NQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466382985", "bodyText": "It would be good to have a test that confirms everything is fine after recreation.", "author": "grzesiek2010", "createdAt": "2020-08-06T12:41:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIzMzY5Mw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469233693", "bodyText": "That would mean writing tests for all CustomDatePickerDialogs, should I write them as part of this PR itself?", "author": "SaumiaSinghal", "createdAt": "2020-08-12T12:49:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIzNzQ2NA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469237464", "bodyText": "I wanted to say please file a separate issue but it would be great to have at least those that check if values don change on recreation so it shouldn't be a big deal.", "author": "grzesiek2010", "createdAt": "2020-08-12T12:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0ODEyNw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469248127", "bodyText": "Oh sure! I will add tests for that as part of this PR, and all the other tests as a different PR, after filing a separate issue.", "author": "SaumiaSinghal", "createdAt": "2020-08-12T13:12:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\nindex c4b1bfed0..ce796bd75 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n\n@@ -16,14 +16,14 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n-import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import android.view.View;\n-import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NzM5Mw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462957393", "bodyText": "Removing this you have broken #3948 so it's a regression. In order to fix this you need to do the same now in FormEnryActivity where onTimeSet is used. Unfortunately we don't have any test for it. Could you write one? Or at leas please file an issue to do that in the future.", "author": "grzesiek2010", "createdAt": "2020-07-30T12:23:22Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n-import java.util.Date;\n-\n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n-\n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n     }\n \n     @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> {\n+                DateTimeWidgetUtils.setWidgetWaitingForData(prompt.getIndex());\n+                DateTimeWidgetUtils.showTimePickerDialog((FormEntryActivity) getContext(), selectedTime);\n+            });\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+        if (prompt.getAnswerValue() == null) {\n+            selectedTime = DateTime.now();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        } else {\n+            selectedTime = new DateTime(getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+        }\n+\n+        return binding.getRoot();\n     }\n \n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n+    @Override\n+    public void clearAnswer() {\n+        selectedTime = DateTime.now();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n+        return binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n+                ? null\n+                : DateTimeWidgetUtils.getTimeData(selectedTime);\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n-\n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n-        } else {\n-            Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n-            DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n-\n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n-\n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n-    }\n-\n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n-    }\n-\n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n-    }\n-\n-    public void updateTime(int hourOfDay, int minuteOfHour, boolean shouldUpdateLabel) {\n-        this.hourOfDay = hourOfDay;\n-        this.minuteOfHour = minuteOfHour;\n-\n-        timePickerDialog.updateTime(hourOfDay, minuteOfHour);\n-\n-        if (shouldUpdateLabel) {\n-            setTimeLabel();\n-        }\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n-    public void onTimeSet(TimePicker timePicker, int hourOfDay, int minute) {\n-        timePicker.clearFocus();", "originalCommit": "ed632d502fdf66ea73e169e7c715d49b67d871f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3NDgwMA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463274800", "bodyText": "Oh sorry @grzesiek2010. I will implement the viewModel and then I'll write tests for the same.", "author": "SaumiaSinghal", "createdAt": "2020-07-30T21:13:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NzM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA2NDk0MQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465064941", "bodyText": "Still not fixed. Have you tested it?", "author": "grzesiek2010", "createdAt": "2020-08-04T13:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NzM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5MzU3NA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465093574", "bodyText": "Sorry for this. I fixed this in 731dc65", "author": "SaumiaSinghal", "createdAt": "2020-08-04T14:28:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NzM5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\nindex 69c45b2a1..c8883738e 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n\n@@ -20,28 +20,43 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.core.model.data.TimeData;\n import org.javarosa.form.api.FormEntryPrompt;\n+\n import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class TimeWidget extends QuestionWidget {\n     WidgetAnswerBinding binding;\n \n-    private DateTime selectedTime;\n+    private final DateTimeWidgetListener listener;\n \n-    public TimeWidget(Context context, final QuestionDetails prompt) {\n-        this(context, prompt, false);\n-    }\n+    private LocalDateTime selectedTime;\n \n-    public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n-        super(context, prompt, !isPartOfDateTimeWidget);\n+    public TimeWidget(Context context, final QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n+        super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedTime = DateTimeWidgetUtils.getSelectedTime(selectedTime, LocalDateTime.now());\n+                binding.widgetAnswerText.setText(new TimeData(selectedTime.toDate()).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzgwNg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462963806", "bodyText": "This isPartOfDateTimeWidget doesn't make sense anymore it is called only from the same class with false value (look above). It was implemented to fix #3761 but now as you have a separate DateTimeWidget which doesn't contain two widgets inside as before it is probably no longer an issue. So you can remove the code implemented in #3770", "author": "grzesiek2010", "createdAt": "2020-07-30T12:35:26Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n-import java.util.Date;\n-\n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n-\n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);", "originalCommit": "ed632d502fdf66ea73e169e7c715d49b67d871f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA3MDQxOQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465070419", "bodyText": "You didn't remove the whole code implemented in https://github.com/getodk/collect/pull/3770/files for example registerForContextMenu parameters still exists in QuestionWidget which is always true.", "author": "grzesiek2010", "createdAt": "2020-08-04T13:58:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzgwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEyNDc5OA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465124798", "bodyText": "I removed it from the QuestionWidget in b95a8d5", "author": "SaumiaSinghal", "createdAt": "2020-08-04T15:11:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\nindex 69c45b2a1..c8883738e 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java\n\n@@ -20,28 +20,43 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.core.model.data.TimeData;\n import org.javarosa.form.api.FormEntryPrompt;\n+\n import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class TimeWidget extends QuestionWidget {\n     WidgetAnswerBinding binding;\n \n-    private DateTime selectedTime;\n+    private final DateTimeWidgetListener listener;\n \n-    public TimeWidget(Context context, final QuestionDetails prompt) {\n-        this(context, prompt, false);\n-    }\n+    private LocalDateTime selectedTime;\n \n-    public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n-        super(context, prompt, !isPartOfDateTimeWidget);\n+    public TimeWidget(Context context, final QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n+        super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedTime = DateTimeWidgetUtils.getSelectedTime(selectedTime, LocalDateTime.now());\n+                binding.widgetAnswerText.setText(new TimeData(selectedTime.toDate()).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5Mjc0MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462992740", "bodyText": "Can't we use LocalDateTime here only instead of LocalDateTime and DateTime. DateTime seems redundant since you can save both date and time in LocalDateTime.", "author": "grzesiek2010", "createdAt": "2020-07-30T13:24:07Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,163 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private LocalDateTime selectedDate;", "originalCommit": "ed632d502fdf66ea73e169e7c715d49b67d871f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e478c43fc6d49fee438484d7df61049655c53fd", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\nindex 4c73e9535..08dd48282 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java\n\n@@ -20,34 +20,59 @@ import android.content.Context;\n import android.util.TypedValue;\n import android.view.View;\n \n+import androidx.lifecycle.LifecycleOwner;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.utilities.ScreenContext;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.interfaces.DateTimeWidgetListener;\n import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n  */\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+public class DateTimeWidget extends QuestionWidget {\n     DateTimeWidgetAnswerBinding binding;\n \n-    private LocalDateTime selectedDate;\n+    private final DateTimeWidgetListener listener;\n+\n+    private LocalDateTime selectedDateTime;\n     private DatePickerDetails datePickerDetails;\n-    private DateTime selectedTime;\n \n-    public DateTimeWidget(Context context, QuestionDetails prompt) {\n+    public DateTimeWidget(Context context, QuestionDetails prompt, LifecycleOwner lifecycleOwner, DateTimeWidgetListener listener) {\n         super(context, prompt);\n+        this.listener = listener;\n+        DateTimeViewModel dateTimeViewModel = new ViewModelProvider(((ScreenContext) context).getActivity()).get(DateTimeViewModel.class);\n+\n+        dateTimeViewModel.getSelectedDate().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedDate(localDateTime, selectedDateTime);\n+                binding.dateWidget.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                        localDateTime.toDate(), datePickerDetails, false, getContext()));\n+                widgetValueChanged();\n+            }\n+        });\n+\n+        dateTimeViewModel.getSelectedTime().observe(lifecycleOwner, localDateTime -> {\n+            if (localDateTime != null && listener.isWidgetWaitingForData(getFormEntryPrompt().getIndex())) {\n+                DateTime selectedTime = localDateTime.toDateTime();\n+                selectedDateTime = DateTimeWidgetUtils.getSelectedTime(selectedTime.toLocalDateTime(), selectedDateTime);\n+                binding.timeWidget.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+                widgetValueChanged();\n+            }\n+        });\n     }\n \n     @Override\n"}}, {"oid": "7e478c43fc6d49fee438484d7df61049655c53fd", "url": "https://github.com/getodk/collect/commit/7e478c43fc6d49fee438484d7df61049655c53fd", "message": "code refactor", "committedDate": "2020-08-01T07:13:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMTkyNg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465621926", "bodyText": "Do we need this? I know it was needed in TimePickerDialog but here?", "author": "grzesiek2010", "createdAt": "2020-08-05T10:16:04Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.odk.collect.android.widgets.viewmodels;\n+\n+import android.app.DatePickerDialog;\n+import android.app.TimePickerDialog;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+\n+public class DateTimeViewModel extends ViewModel {\n+    private final MutableLiveData<LocalDateTime> selectedDate = new MutableLiveData<>();\n+    private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n+\n+    private final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {\n+        view.clearFocus();", "originalCommit": "075c2c1c8b7a495dd9594d980af168f1b2720d45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2OTkxOQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465669919", "bodyText": "Oh okay I'll check once", "author": "SaumiaSinghal", "createdAt": "2020-08-05T11:49:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMTkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3MDg1MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465970850", "bodyText": "@grzesiek2010 I found that view.clearFocus() does not make any difference on the DatePicker or TimePicker dialogs. I too remember it was required for the Time Picker dialog to hide the extra window behind the dialog, but even without it, I don't see that window now.", "author": "SaumiaSinghal", "createdAt": "2020-08-05T20:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMTkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI3MTcyOQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466271729", "bodyText": "In TimePicker it is required now as you removed it I can reproduce #3948 again.", "author": "grzesiek2010", "createdAt": "2020-08-06T09:23:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMTkyNg=="}], "type": "inlineReview", "revised_code": {"commit": "670af9c4815abeedb1b8e8db143c1198270d0938", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java b/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java\nindex cb6db74b6..29491820b 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java\n\n@@ -16,12 +16,10 @@ public class DateTimeViewModel extends ViewModel {\n     private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n \n     private final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {\n-        view.clearFocus();\n         setSelectedDate(year, monthOfYear, dayOfMonth);\n     };\n \n     private final TimePickerDialog.OnTimeSetListener timeSetListener = (view, hourOfDay, minuteOfHour) -> {\n-        view.clearFocus();\n         hourOfDay = view.getCurrentHour();\n         minuteOfHour = view.getCurrentMinute();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465631052", "bodyText": "This class seems redundant you can use DateTimeWidgetUtils everywhere you need. Or maybe I missed something important?", "author": "grzesiek2010", "createdAt": "2020-08-05T10:33:57Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "originalCommit": "075c2c1c8b7a495dd9594d980af168f1b2720d45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY3MTAzOA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465671038", "bodyText": "Oh actually I used to that I can verify the method calls to the DateTimeWidgetUtils, and then right separate tests to verify that the behaviour of the methods in DateTimeWidgetUtils. I can pass a mock of DateTimeWidgetListener in the Date time widgets constructor, and then verify method calls.", "author": "SaumiaSinghal", "createdAt": "2020-08-05T11:52:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI5ODM1Ng==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466298356", "bodyText": "But you don't need an interface to achieve that you can use mock with verify on DateTimeWidgetUtils in the same way. That's why I said it seems like a redundant abstraction.", "author": "grzesiek2010", "createdAt": "2020-08-06T09:50:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxNzczOA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466317738", "bodyText": "Yes right I can mock DateTimeWidgetUtils class but I was not able to use verify for any static method.", "author": "SaumiaSinghal", "createdAt": "2020-08-06T10:28:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3ODUxNg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466378516", "bodyText": "But you don't verify static methods in your tests so I don't understand what the problem was. From what I see all tests will work without that interface too.", "author": "grzesiek2010", "createdAt": "2020-08-06T12:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMTM1Ng==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466401356", "bodyText": "The interface will act as a wrapper for the static methods, so I can verify any calls to them in the widget test, and I verified the behaviour of static method calls by verifying again the interface methods.\nIn DateTimeWidgetUtilsTest, I used dateTimeWidgetUtils.displayTimePickerDialog to check if the Time Picker dialog is displayed whenever this method is called. This verifies the behaviour of static method showTimePickerDialog.", "author": "SaumiaSinghal", "createdAt": "2020-08-06T13:12:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwNzY3Ng==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466407676", "bodyText": "Oh I understand, without that interface, I will have to check whether some dialog is displayed in the widget test, and I can verify whether correct arguments are passed, by checking the bundle of the displayed dialog fragment, then I can test separately whether the correct dialog class is displayed in the DateTimeWidgetUtilsTest. I'll remove the abstrcation.", "author": "SaumiaSinghal", "createdAt": "2020-08-06T13:22:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwMzQ2Nw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r467903467", "bodyText": "@grzesiek2010 I had some doubt regarding removing this abstraction completely. Currently, I'm verifying dateTimeWidgetUtils.displayDatePickerDialog() is called with valid arguments. I don't need to verify here that correct datePickerDetails argument is passed to the function, as that is extracted in the DateTimeWidgetUtils class. So I can write all the tests verifying that different dialogs are displayed for datePickerType only once for the tests for DateTimeWidgetUtils class. I need not verify this for all the widgets separately.", "author": "SaumiaSinghal", "createdAt": "2020-08-10T13:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1NjEyNQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468456125", "bodyText": "Which test are you talking about? I did what I expected by myself to give it a try and all test you have added seem to work well b6e2850", "author": "grzesiek2010", "createdAt": "2020-08-11T09:41:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2NzcyNQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468467725", "bodyText": "Sorry for not understanding earlier. I understand now, I can simply remove the static methods as I cannot verify them, nonetheless, I access them using public wrapper functions, so I can simply verify them for the test.", "author": "SaumiaSinghal", "createdAt": "2020-08-11T10:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c5a2847e320e9ca70a3ad52cf645e75cafcee505", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java b/collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java\ndeleted file mode 100644\nindex 4ebdfd944..000000000\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java\n+++ /dev/null\n\n@@ -1,15 +0,0 @@\n-package org.odk.collect.android.widgets.interfaces;\n-\n-import android.content.Context;\n-\n-import org.javarosa.core.model.FormIndex;\n-import org.joda.time.LocalDateTime;\n-import org.odk.collect.android.logic.DatePickerDetails;\n-\n-public interface DateTimeWidgetListener {\n-    void setWidgetWaitingForData(FormIndex formIndex);\n-\n-    void displayDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails, LocalDateTime selectedDate);\n-\n-    void displayTimePickerDialog(Context context, LocalDateTime selectedTime);\n-}\n"}}, {"oid": "670af9c4815abeedb1b8e8db143c1198270d0938", "url": "https://github.com/getodk/collect/commit/670af9c4815abeedb1b8e8db143c1198270d0938", "message": "refactor DateTimeWidgetUtils and DateTimeUtils", "committedDate": "2020-08-05T20:15:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI4MjE3OA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466282178", "bodyText": "This works but it's not a proper solution. You already have ViewModel and it is a component you should use to store data and make sure it persists. I mean passing data from a widget to dialog using bundle is ok but then you should unpack it and store in your viewmodel.", "author": "grzesiek2010", "createdAt": "2020-08-06T09:31:38Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -82,6 +82,12 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {\n                 .create();\n     }\n \n+    @Override\n+    public void onDestroyView() {", "originalCommit": "cac04f4c93371c0e79f5990d00f637fafa9970bd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c5a2847e320e9ca70a3ad52cf645e75cafcee505", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\nindex 7d86f1f44..cebe58144 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n\n@@ -75,7 +77,7 @@ public abstract class CustomDatePickerDialog extends DialogFragment {\n                 .setView(R.layout.custom_date_picker_dialog)\n                 .setPositiveButton(R.string.ok, (dialog, id) -> {\n                     LocalDateTime date = getDateAsGregorian(getOriginalDate());\n-                    viewModel.setSelectedDate(date.getYear(), date.getMonthOfYear(), date.getDayOfMonth());\n+                    dateTimeViewModel.setSelectedDate(date.getYear(), date.getMonthOfYear() - 1, date.getDayOfMonth());\n                     dismiss();\n                 })\n                 .setNegativeButton(R.string.cancel, (dialog, id) -> dismiss())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466374047", "bodyText": "I think it should be viewmodel's responsibility not to return null, so this check should be moved there and here you should just call viewModel.getDate();", "author": "grzesiek2010", "createdAt": "2020-08-06T12:25:19Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -242,7 +189,11 @@ public int getYear() {\n     }\n \n     public LocalDateTime getDate() {\n-        return date;\n+        if (viewModel.getDate() == null) {", "originalCommit": "3a7c45bfeac0377b61173c808dcedb88bdd7bc92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMDA3NA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466410074", "bodyText": "Should I pass all the other arguments to the ViewModel too? Now That I have a ViewModel, it seems like I should use just one way of communicating with the fragment.", "author": "SaumiaSinghal", "createdAt": "2020-08-06T13:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYyNzI3MQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r467627271", "bodyText": "You mean those you access via getArguments().getSerializable if so yeah I think it should be stored in viewmodel.", "author": "grzesiek2010", "createdAt": "2020-08-09T20:49:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwNTgwOA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r467905808", "bodyText": "I tried to get all those values using the ViewModel, but now I have two instances of DateTimeViewModel class in the dialogs. I see that you have an idea of instantiating all the widgets inside fragments, that is really cool, and it will solve this problem. Is it fine to have two instances of the ViewModel for now?", "author": "SaumiaSinghal", "createdAt": "2020-08-10T13:32:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1ODA4MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468458080", "bodyText": "Why do you need two viewmodels? am I missing something?", "author": "grzesiek2010", "createdAt": "2020-08-11T09:45:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0MjgzMg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468542832", "bodyText": "So for passing the values using viewmodel, I would be needing the viewmodel to be created using the FormEntryActivity right?, and that is against your idea of creating the viewModel using dialog context. Sorry If I'm misinterpreting things", "author": "SaumiaSinghal", "createdAt": "2020-08-11T12:30:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1MDIwMw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468550203", "bodyText": "I think you want to pass those arguments to CustomDatePickerDialog using viewmodel? If so that's not what I wanted. I just said that you can store them in the existing view model (unique for every CustomDatePickerDialog) after receiving them via getArguments().getSerializable  so it's ok to pass them to dialog like now but then would be good to store and access via viewmodel. Is that what made confusion?", "author": "grzesiek2010", "createdAt": "2020-08-11T12:43:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1MTQyNw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468551427", "bodyText": "Oh alright! I understand it now. Thanks!", "author": "SaumiaSinghal", "createdAt": "2020-08-11T12:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c5a2847e320e9ca70a3ad52cf645e75cafcee505", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\nindex 9de99d689..cebe58144 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n\n@@ -189,11 +190,7 @@ public abstract class CustomDatePickerDialog extends DialogFragment {\n     }\n \n     public LocalDateTime getDate() {\n-        if (viewModel.getDate() == null) {\n-            LocalDateTime date = (LocalDateTime) getArguments().getSerializable(DateTimeWidgetUtils.DATE);\n-            viewModel.setDate(date);\n-        }\n-        return viewModel.getDate();\n+        return viewModel.localDateTime;\n     }\n \n     public LocalDateTime getDateWithSkippedDaylightSavingGapIfExists() {\n"}}, {"oid": "c5a2847e320e9ca70a3ad52cf645e75cafcee505", "url": "https://github.com/getodk/collect/commit/c5a2847e320e9ca70a3ad52cf645e75cafcee505", "message": "remove DateTimeWidgetListener and update unit tests", "committedDate": "2020-08-11T10:35:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyNzQwOQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468927409", "bodyText": "This is added but never used.", "author": "grzesiek2010", "createdAt": "2020-08-11T23:52:14Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,275 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.joda.time.chrono.CopticChronology;\n+import org.joda.time.chrono.EthiopicChronology;\n+import org.joda.time.chrono.IslamicChronology;\n+import org.joda.time.chrono.PersianChronologyKhayyamBorkowski;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.MyanmarDateUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n+\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.Locale;\n+\n+import bikramsambat.BikramSambatDate;\n+import bikramsambat.BsCalendar;\n+import bikramsambat.BsException;\n+import bikramsambat.BsGregorianDate;\n+import mmcalendar.MyanmarDate;\n+import mmcalendar.MyanmarDateConverter;\n+import timber.log.Timber;\n+\n+public class DateTimeWidgetUtils {\n+    public static final String DATE = \"date\";\n+    public static final String TIME = \"time\";\n+    public static final String DIALOG_THEME = \"dialog_theme\";\n+    public static final String DATE_PICKER_DETAILS = \"date_picker_details\";\n+    public static final String FORM_INDEX = \"form_index\";\n+\n+    public static void setWidgetWaitingForData(FormIndex formIndex) {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController != null) {\n+            formController.setIndexWaitingForData(formIndex);\n+        }\n+    }\n+\n+    public static DatePickerDetails getDatePickerDetails(String appearance) {\n+        DatePickerDetails.DatePickerType datePickerType = DatePickerDetails.DatePickerType.GREGORIAN;\n+        DatePickerDetails.DatePickerMode datePickerMode = DatePickerDetails.DatePickerMode.CALENDAR;\n+        if (appearance != null) {\n+            appearance = appearance.toLowerCase(Locale.US);\n+            if (appearance.contains(WidgetAppearanceUtils.ETHIOPIAN)) {\n+                datePickerType = DatePickerDetails.DatePickerType.ETHIOPIAN;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.COPTIC)) {\n+                datePickerType = DatePickerDetails.DatePickerType.COPTIC;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.ISLAMIC)) {\n+                datePickerType = DatePickerDetails.DatePickerType.ISLAMIC;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.BIKRAM_SAMBAT)) {\n+                datePickerType = DatePickerDetails.DatePickerType.BIKRAM_SAMBAT;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.MYANMAR)) {\n+                datePickerType = DatePickerDetails.DatePickerType.MYANMAR;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.PERSIAN)) {\n+                datePickerType = DatePickerDetails.DatePickerType.PERSIAN;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.NO_CALENDAR)) {\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            }\n+\n+            if (appearance.contains(WidgetAppearanceUtils.MONTH_YEAR)) {\n+                datePickerMode = DatePickerDetails.DatePickerMode.MONTH_YEAR;\n+            } else if (appearance.contains(WidgetAppearanceUtils.YEAR)) {\n+                datePickerMode = DatePickerDetails.DatePickerMode.YEAR;\n+            }\n+        }\n+\n+        return new DatePickerDetails(datePickerType, datePickerMode);\n+    }\n+\n+    public static String getDateTimeLabel(Date date, DatePickerDetails datePickerDetails, boolean containsTime, Context context) {\n+        String gregorianDateText = getGregorianDateTimeLabel(date, datePickerDetails, containsTime, Locale.getDefault());\n+\n+        DateTime customDate;\n+        String[] monthArray;\n+\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case GREGORIAN:\n+                return gregorianDateText;\n+            case ETHIOPIAN:\n+                customDate = new DateTime(date).withChronology(EthiopicChronology.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.ethiopian_months);\n+                break;\n+            case COPTIC:\n+                customDate = new DateTime(date).withChronology(CopticChronology.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.coptic_months);\n+                break;\n+            case ISLAMIC:\n+                customDate = new DateTime(date).withChronology(IslamicChronology.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.islamic_months);\n+                break;\n+            case BIKRAM_SAMBAT:\n+                customDate = new DateTime(date);\n+                monthArray = BsCalendar.MONTH_NAMES.toArray(new String[BsCalendar.MONTH_NAMES.size()]);\n+                break;\n+            case MYANMAR:\n+                customDate = new DateTime(date);\n+                MyanmarDate myanmarDate = MyanmarDateConverter.convert(customDate.getYear(),\n+                        customDate.getMonthOfYear(), customDate.getDayOfMonth(), customDate.getHourOfDay(),\n+                        customDate.getMinuteOfHour(), customDate.getSecondOfMinute());\n+                monthArray = MyanmarDateUtils.getMyanmarMonthsArray(myanmarDate.getYearInt());\n+                break;\n+            case PERSIAN:\n+                customDate = new DateTime(date).withChronology(PersianChronologyKhayyamBorkowski.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.persian_months);\n+                break;\n+            default:\n+                Timber.w(\"Not supported date type.\");\n+                return null;\n+        }\n+\n+        String customDateText = \"\";\n+\n+        SimpleDateFormat df = new SimpleDateFormat(\"HH:mm\", Locale.getDefault());\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case BIKRAM_SAMBAT:\n+                BikramSambatDate bikramSambatDate;\n+                try {\n+                    Calendar calendar = Calendar.getInstance();\n+                    calendar.setTime(date);\n+                    bikramSambatDate = BsCalendar.getInstance().toBik(new BsGregorianDate(\n+                            calendar.get(Calendar.YEAR),\n+                            calendar.get(Calendar.MONTH) + 1,\n+                            calendar.get(Calendar.DAY_OF_MONTH)));\n+                    String day = datePickerDetails.isSpinnerMode() ? bikramSambatDate.day + \" \" : \"\";\n+                    String month = datePickerDetails.isSpinnerMode() || datePickerDetails.isMonthYearMode() ? monthArray[bikramSambatDate.month - 1] + \" \" : \"\";\n+\n+                    if (containsTime) {\n+                        customDateText = day + month + bikramSambatDate.year + \", \" + df.format(customDate.toDate());\n+                    } else {\n+                        customDateText = day + month + bikramSambatDate.year;\n+                    }\n+                } catch (BsException e) {\n+                    Timber.e(e);\n+                }\n+                break;\n+            case MYANMAR: {\n+                MyanmarDate myanmarDate = MyanmarDateConverter.convert(customDate.getYear(),\n+                        customDate.getMonthOfYear(), customDate.getDayOfMonth(), customDate.getHourOfDay(),\n+                        customDate.getMinuteOfHour(), customDate.getSecondOfMinute());\n+\n+                String day = datePickerDetails.isSpinnerMode() ? myanmarDate.getMonthDay() + \" \" : \"\";\n+                String month = datePickerDetails.isSpinnerMode() || datePickerDetails.isMonthYearMode() ? monthArray[MyanmarDateUtils.getMonthId(myanmarDate)] + \" \" : \"\";\n+\n+                if (containsTime) {\n+                    customDateText = day + month + myanmarDate.getYearInt() + \", \" + df.format(customDate.toDate());\n+                } else {\n+                    customDateText = day + month + myanmarDate.getYearInt();\n+                }\n+                break;\n+            }\n+            default:\n+                String day = datePickerDetails.isSpinnerMode() ? customDate.getDayOfMonth() + \" \" : \"\";\n+                String month = datePickerDetails.isSpinnerMode() || datePickerDetails.isMonthYearMode() ? monthArray[customDate.getMonthOfYear() - 1] + \" \" : \"\";\n+\n+                if (containsTime) {\n+                    customDateText = day + month + customDate.getYear() + \", \" + df.format(customDate.toDate());\n+                } else {\n+                    customDateText = day + month + customDate.getYear();\n+                }\n+        }\n+\n+        return String.format(context.getString(R.string.custom_date), customDateText, gregorianDateText);\n+    }\n+\n+    public void showTimePickerDialog(Context context, LocalDateTime dateTime) {\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(DIALOG_THEME, themeUtils.getHoloDialogTheme());\n+        bundle.putSerializable(TIME, dateTime);\n+\n+        DialogUtils.showIfNotShowing(CustomTimePickerDialog.class, bundle, ((AppCompatActivity) context).getSupportFragmentManager());\n+    }\n+\n+    public void showDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(DIALOG_THEME, getDatePickerTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(DATE, date);\n+        bundle.putSerializable(DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(FORM_INDEX, formIndex);", "originalCommit": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwODUxOA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469208518", "bodyText": "Sorry I missed", "author": "SaumiaSinghal", "createdAt": "2020-08-12T12:07:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyNzQwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e9aa09a5357292a5ca317669e13f3c4a26cb1130", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\nindex b4c988c6e..f118eb508 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java\n\n@@ -49,7 +49,6 @@ public class DateTimeWidgetUtils {\n     public static final String TIME = \"time\";\n     public static final String DIALOG_THEME = \"dialog_theme\";\n     public static final String DATE_PICKER_DETAILS = \"date_picker_details\";\n-    public static final String FORM_INDEX = \"form_index\";\n \n     public static void setWidgetWaitingForData(FormIndex formIndex) {\n         FormController formController = Collect.getInstance().getFormController();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyODA3NQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468928075", "bodyText": "Should be stored in view model too.", "author": "grzesiek2010", "createdAt": "2020-08-11T23:54:46Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -18,137 +18,97 @@\n \n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import android.view.View;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {\n-    public static final String DATE_PICKER_DIALOG = \"datePickerDialog\";\n-\n-    private static final String FORM_INDEX = \"formIndex\";\n-    private static final String DATE = \"date\";\n-    private static final String DATE_PICKER_DETAILS = \"datePickerDetails\";\n-\n     private NumberPicker dayPicker;\n     private NumberPicker monthPicker;\n     private NumberPicker yearPicker;\n \n-    private LocalDateTime date;\n-\n     private TextView gregorianDateText;\n \n-    private FormIndex formIndex;\n-\n     private DatePickerDetails datePickerDetails;", "originalCommit": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9aa09a5357292a5ca317669e13f3c4a26cb1130", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\nindex c5dee70f3..96c71bde2 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n\n@@ -28,7 +28,6 @@ import android.widget.NumberPicker;\n import android.widget.TextView;\n \n import org.joda.time.LocalDateTime;\n-import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkzMDI4Mw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468930283", "bodyText": "Values you acres via DateTimeWidgetUtils.TIME and DateTimeWidgetUtils.DIALOG_THEME should be stored in viewmodel like you do in CustomDatePickerDialog.", "author": "grzesiek2010", "createdAt": "2020-08-12T00:02:17Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java", "diffHunk": "@@ -0,0 +1,165 @@\n+package org.odk.collect.android.fragments.dialogs;\n+\n+import android.app.Dialog;\n+import android.app.TimePickerDialog;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.graphics.Color;\n+import android.graphics.drawable.ColorDrawable;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.text.format.DateFormat;\n+import android.util.AttributeSet;\n+import android.view.Window;\n+import android.widget.TimePicker;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.DialogFragment;\n+import androidx.lifecycle.ViewModelProvider;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Field;\n+\n+import timber.log.Timber;\n+\n+public class CustomTimePickerDialog extends DialogFragment {\n+    private DateTimeViewModel viewModel;\n+    private TimeChangeListener timeChangeListener;\n+\n+    public interface TimeChangeListener {\n+        void onTimeChanged(DateTime selectedTime);\n+    }\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+\n+        if (context instanceof TimeChangeListener) {\n+            timeChangeListener = (TimeChangeListener) context;\n+        }\n+\n+        viewModel = new ViewModelProvider(this).get(DateTimeViewModel.class);\n+        viewModel.getSelectedTime().observe(this, dateTime -> {\n+            timeChangeListener.onTimeChanged(dateTime);\n+        });\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        LocalDateTime time = (LocalDateTime) getArguments().getSerializable(DateTimeWidgetUtils.TIME);", "originalCommit": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9aa09a5357292a5ca317669e13f3c4a26cb1130", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java\nindex e024dee06..a4ad38444 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java\n\n@@ -46,6 +46,9 @@ public class CustomTimePickerDialog extends DialogFragment {\n         }\n \n         viewModel = new ViewModelProvider(this).get(DateTimeViewModel.class);\n+        viewModel.setLocalDateTime((LocalDateTime) getArguments().getSerializable(DateTimeWidgetUtils.TIME));\n+        viewModel.setDialogTheme(getArguments().getInt(DateTimeWidgetUtils.DIALOG_THEME));\n+\n         viewModel.getSelectedTime().observe(this, dateTime -> {\n             timeChangeListener.onTimeChanged(dateTime);\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkzMDc4MA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468930780", "bodyText": "Would be good to move getDateAsGregorian and getDateWithSkippedDaylightSavingGapIfExists methods out of this class to DateTimeUtils.", "author": "grzesiek2010", "createdAt": "2020-08-12T00:04:21Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -18,137 +18,97 @@\n \n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import android.view.View;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "originalCommit": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9aa09a5357292a5ca317669e13f3c4a26cb1130", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\nindex c5dee70f3..96c71bde2 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java\n\n@@ -28,7 +28,6 @@ import android.widget.NumberPicker;\n import android.widget.TextView;\n \n import org.joda.time.LocalDateTime;\n-import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkzNTIzMQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468935231", "bodyText": "This is not your fault because probably it worked in the same way on master but it's not consistent. Only TimePicker is not cancelable in all other cases where we use dialogs like datePicker/RankingWidget/NumberPicker it is possible to close such a dialog clicking outside of it so I think timePicker should follow the same approach.", "author": "grzesiek2010", "createdAt": "2020-08-12T00:20:11Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java", "diffHunk": "@@ -0,0 +1,165 @@\n+package org.odk.collect.android.fragments.dialogs;\n+\n+import android.app.Dialog;\n+import android.app.TimePickerDialog;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.graphics.Color;\n+import android.graphics.drawable.ColorDrawable;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.text.format.DateFormat;\n+import android.util.AttributeSet;\n+import android.view.Window;\n+import android.widget.TimePicker;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.DialogFragment;\n+import androidx.lifecycle.ViewModelProvider;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Field;\n+\n+import timber.log.Timber;\n+\n+public class CustomTimePickerDialog extends DialogFragment {\n+    private DateTimeViewModel viewModel;\n+    private TimeChangeListener timeChangeListener;\n+\n+    public interface TimeChangeListener {\n+        void onTimeChanged(DateTime selectedTime);\n+    }\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+\n+        if (context instanceof TimeChangeListener) {\n+            timeChangeListener = (TimeChangeListener) context;\n+        }\n+\n+        viewModel = new ViewModelProvider(this).get(DateTimeViewModel.class);\n+        viewModel.getSelectedTime().observe(this, dateTime -> {\n+            timeChangeListener.onTimeChanged(dateTime);\n+        });\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        LocalDateTime time = (LocalDateTime) getArguments().getSerializable(DateTimeWidgetUtils.TIME);\n+\n+        TimePickerDialog dialog = new TimePickerDialog(requireContext(), getArguments().getInt(DateTimeWidgetUtils.DIALOG_THEME),\n+                viewModel.timeSetListener, time.getHourOfDay(),\n+                time.getMinuteOfHour(), DateFormat.is24HourFormat(requireContext()));\n+\n+        dialog.setTitle(requireContext().getString(R.string.select_time));\n+        fixSpinner(requireContext(), time.getHourOfDay(), time.getMinuteOfHour(),\n+                DateFormat.is24HourFormat(requireContext()));\n+\n+        Window window = dialog.getWindow();\n+        if (window != null) {\n+            window.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n+        }\n+\n+        setCancelable(false);", "originalCommit": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9aa09a5357292a5ca317669e13f3c4a26cb1130", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java\nindex e024dee06..a4ad38444 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java\n\n@@ -46,6 +46,9 @@ public class CustomTimePickerDialog extends DialogFragment {\n         }\n \n         viewModel = new ViewModelProvider(this).get(DateTimeViewModel.class);\n+        viewModel.setLocalDateTime((LocalDateTime) getArguments().getSerializable(DateTimeWidgetUtils.TIME));\n+        viewModel.setDialogTheme(getArguments().getInt(DateTimeWidgetUtils.DIALOG_THEME));\n+\n         viewModel.getSelectedTime().observe(this, dateTime -> {\n             timeChangeListener.onTimeChanged(dateTime);\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MzE3MQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469243171", "bodyText": "Hi @grzesiek2010! I had a doubt. Here, I just test whether the date answer shown in widgetAnswerText is same as that returned by DateTimeWidgetUtils.getDateTimeLAbel() method. I do not write unit tests for all the different cases when datePickerDetails are different, and for different formats. Is it fine here just to check for one case, and have a check for all the other cases in DateTimeWidgetUtilsTest class?", "author": "SaumiaSinghal", "createdAt": "2020-08-12T13:04:24Z", "path": "collect_app/src/test/java/org/odk/collect/android/widgets/DateWidgetTest.java", "diffHunk": "@@ -2,65 +2,158 @@\n \n import android.view.View;\n \n-import androidx.annotation.NonNull;\n-\n import org.javarosa.core.model.QuestionDef;\n import org.javarosa.core.model.data.DateData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n+import org.junit.Before;\n import org.junit.Test;\n-import org.mockito.Mock;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.base.GeneralDateTimeWidgetTest;\n+import org.odk.collect.android.listeners.WidgetValueChangedListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.support.TestScreenContextActivity;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.robolectric.RobolectricTestRunner;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.nullValue;\n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.mockValueChangedListener;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.promptWithQuestionDefAndAnswer;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.promptWithReadOnlyAndQuestionDef;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.widgetTestActivity;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class DateWidgetTest {\n+    private TestScreenContextActivity widgetActivity;\n+    private DateTimeWidgetUtils widgetUtils;\n+    private View.OnLongClickListener onLongClickListener;\n+\n+    private QuestionDef questionDef;\n+    private LocalDateTime dateAnswer;\n+\n+    @Before\n+    public void setUp() {\n+        widgetActivity = widgetTestActivity();\n+\n+        questionDef = mock(QuestionDef.class);\n+        onLongClickListener = mock(View.OnLongClickListener.class);\n+        widgetUtils = mock(DateTimeWidgetUtils.class);\n+\n+        dateAnswer = DateTimeUtils.getSelectedDate(new LocalDateTime().withDate(2010, 5, 12), LocalDateTime.now());\n+    }\n+\n+    @Test\n+    public void usingReadOnlyOption_doesNotShowButton() {\n+        DateWidget widget = createWidget(promptWithReadOnlyAndQuestionDef(questionDef));\n+        assertEquals(widget.binding.widgetButton.getVisibility(), View.GONE);\n+    }\n+\n+    @Test\n+    public void whenPromptIsNotReadOnly_buttonShowsCorrectText() {\n+        DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, null));\n+        assertEquals(widget.binding.widgetButton.getText(), widget.getContext().getString(R.string.select_date));\n+    }\n+\n+    @Test\n+    public void getAnswer_whenPromptDoesNotHaveAnswer_returnsNull() {\n+        assertThat(createWidget(promptWithQuestionDefAndAnswer(questionDef, null)).getAnswer(), nullValue());\n+    }\n+\n+    @Test\n+    public void getAnswer_whenPromptHasAnswer_returnsDate() {\n+        DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, new DateData(dateAnswer.toDate())));\n+        assertEquals(widget.getAnswer().getDisplayText(), new DateData(dateAnswer.toDate()).getDisplayText());\n+    }\n \n-public class DateWidgetTest extends GeneralDateTimeWidgetTest<DateWidget, DateData> {\n+    @Test\n+    public void whenPromptDoesNotHaveAnswer_answerTextViewShowsNoDateSelected() {\n+        DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, null));\n+        assertEquals(widget.binding.widgetAnswerText.getText(), widget.getContext().getString(R.string.no_date_selected));\n+    }\n+\n+    @Test\n+    public void whenPromptHasAnswer_answerTextViewShowsCorrectDate() {\n+        FormEntryPrompt prompt = promptWithQuestionDefAndAnswer(questionDef, new DateData(dateAnswer.toDate()));\n+        DatePickerDetails datePickerDetails = DateTimeWidgetUtils.getDatePickerDetails(prompt.getQuestion().getAppearanceAttr());\n+        DateWidget widget = createWidget(prompt);\n+\n+        assertEquals(widget.binding.widgetAnswerText.getText(),\n+                DateTimeWidgetUtils.getDateTimeLabel(dateAnswer.toDate(), datePickerDetails, false, widget.getContext()));\n+    }", "originalCommit": "608085353ec71a8f9ea700f3b9c00e475afbcf5a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTczNDUyOA==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469734528", "bodyText": "Yeah I think it's fine", "author": "grzesiek2010", "createdAt": "2020-08-13T06:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MzE3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ace7eb312a68eb4cf184db0c06f78e56894c0be", "chunk": "diff --git a/collect_app/src/test/java/org/odk/collect/android/widgets/DateWidgetTest.java b/collect_app/src/test/java/org/odk/collect/android/widgets/DateWidgetTest.java\nindex a35bfb6fb..6cb1c9231 100644\n--- a/collect_app/src/test/java/org/odk/collect/android/widgets/DateWidgetTest.java\n+++ b/collect_app/src/test/java/org/odk/collect/android/widgets/DateWidgetTest.java\n\n@@ -52,13 +52,13 @@ public class DateWidgetTest {\n     @Test\n     public void usingReadOnlyOption_doesNotShowButton() {\n         DateWidget widget = createWidget(promptWithReadOnlyAndQuestionDef(questionDef));\n-        assertEquals(widget.binding.widgetButton.getVisibility(), View.GONE);\n+        assertEquals(widget.binding.dateButton.getVisibility(), View.GONE);\n     }\n \n     @Test\n     public void whenPromptIsNotReadOnly_buttonShowsCorrectText() {\n         DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, null));\n-        assertEquals(widget.binding.widgetButton.getText(), widget.getContext().getString(R.string.select_date));\n+        assertEquals(widget.binding.dateButton.getText(), widget.getContext().getString(R.string.select_date));\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0MDIyMg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469740222", "bodyText": "You should be consequent here. Below you have private props accessed via getters, would be good to keep one approach.", "author": "grzesiek2010", "createdAt": "2020-08-13T07:05:58Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "diffHunk": "@@ -23,7 +24,9 @@\n         setSelectedTime(hourOfDay, minuteOfHour);\n     };\n \n-    public LocalDateTime date;\n+    public LocalDateTime localDateTime;", "originalCommit": "608085353ec71a8f9ea700f3b9c00e475afbcf5a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9aa09a5357292a5ca317669e13f3c4a26cb1130", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java b/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java\nindex 872a22e3a..3b16aeee0 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java\n\n@@ -13,23 +13,22 @@ import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n \n public class DateTimeViewModel extends ViewModel {\n-    public final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {\n-        setSelectedDate(year, monthOfYear, dayOfMonth);\n-    };\n+    private final MutableLiveData<LocalDateTime> selectedDate = new MutableLiveData<>();\n+    private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n \n-    public final TimePickerDialog.OnTimeSetListener timeSetListener = (view, hourOfDay, minuteOfHour) -> {\n+    private final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) ->\n+            setSelectedDate(year, monthOfYear, dayOfMonth);\n+\n+    private final TimePickerDialog.OnTimeSetListener timeSetListener = (view, hourOfDay, minuteOfHour) -> {\n         view.clearFocus();\n         hourOfDay = view.getCurrentHour();\n         minuteOfHour = view.getCurrentMinute();\n         setSelectedTime(hourOfDay, minuteOfHour);\n     };\n \n-    public LocalDateTime localDateTime;\n-    public DatePickerDetails datePickerDetails;\n-    public int dialogTheme;\n-\n-    private final MutableLiveData<LocalDateTime> selectedDate = new MutableLiveData<>();\n-    private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n+    private LocalDateTime localDateTime;\n+    private DatePickerDetails datePickerDetails;\n+    private int dialogTheme;\n \n     public LiveData<LocalDateTime> getSelectedDate() {\n         return selectedDate;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0MzgzMw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469743833", "bodyText": "You can get rid of curly brackets here.", "author": "grzesiek2010", "createdAt": "2020-08-13T07:13:35Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.odk.collect.android.widgets.viewmodels;\n+\n+import android.app.DatePickerDialog;\n+import android.app.TimePickerDialog;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+\n+public class DateTimeViewModel extends ViewModel {\n+    public final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {", "originalCommit": "608085353ec71a8f9ea700f3b9c00e475afbcf5a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9aa09a5357292a5ca317669e13f3c4a26cb1130", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java b/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java\nindex 872a22e3a..3b16aeee0 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java\n\n@@ -13,23 +13,22 @@ import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n \n public class DateTimeViewModel extends ViewModel {\n-    public final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {\n-        setSelectedDate(year, monthOfYear, dayOfMonth);\n-    };\n+    private final MutableLiveData<LocalDateTime> selectedDate = new MutableLiveData<>();\n+    private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n \n-    public final TimePickerDialog.OnTimeSetListener timeSetListener = (view, hourOfDay, minuteOfHour) -> {\n+    private final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) ->\n+            setSelectedDate(year, monthOfYear, dayOfMonth);\n+\n+    private final TimePickerDialog.OnTimeSetListener timeSetListener = (view, hourOfDay, minuteOfHour) -> {\n         view.clearFocus();\n         hourOfDay = view.getCurrentHour();\n         minuteOfHour = view.getCurrentMinute();\n         setSelectedTime(hourOfDay, minuteOfHour);\n     };\n \n-    public LocalDateTime localDateTime;\n-    public DatePickerDetails datePickerDetails;\n-    public int dialogTheme;\n-\n-    private final MutableLiveData<LocalDateTime> selectedDate = new MutableLiveData<>();\n-    private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n+    private LocalDateTime localDateTime;\n+    private DatePickerDetails datePickerDetails;\n+    private int dialogTheme;\n \n     public LiveData<LocalDateTime> getSelectedDate() {\n         return selectedDate;\n"}}, {"oid": "e9aa09a5357292a5ca317669e13f3c4a26cb1130", "url": "https://github.com/getodk/collect/commit/e9aa09a5357292a5ca317669e13f3c4a26cb1130", "message": "refactor DateTimeViewModel", "committedDate": "2020-09-08T07:59:16Z", "type": "forcePushed"}, {"oid": "3c2b01165ee3389c451691d00fb08ed12b752939", "url": "https://github.com/getodk/collect/commit/3c2b01165ee3389c451691d00fb08ed12b752939", "message": "fix crash on Android 7", "committedDate": "2020-10-09T04:06:38Z", "type": "forcePushed"}, {"oid": "9ace7eb312a68eb4cf184db0c06f78e56894c0be", "url": "https://github.com/getodk/collect/commit/9ace7eb312a68eb4cf184db0c06f78e56894c0be", "message": "fix unit tests", "committedDate": "2020-10-13T10:34:37Z", "type": "forcePushed"}, {"oid": "53cab7c02d9811b7d2866dc622c28dc3372a6ca1", "url": "https://github.com/getodk/collect/commit/53cab7c02d9811b7d2866dc622c28dc3372a6ca1", "message": "fix unit tests", "committedDate": "2020-10-13T10:37:56Z", "type": "forcePushed"}, {"oid": "281f4915a583c288f4e2913a0f58fb6a0dd83084", "url": "https://github.com/getodk/collect/commit/281f4915a583c288f4e2913a0f58fb6a0dd83084", "message": "code refactor", "committedDate": "2020-10-20T17:37:27Z", "type": "forcePushed"}, {"oid": "9fdadadc6c268fbd81a24c9b8b78671b27293465", "url": "https://github.com/getodk/collect/commit/9fdadadc6c268fbd81a24c9b8b78671b27293465", "message": "reslolve conflicts", "committedDate": "2020-11-06T12:37:26Z", "type": "commit"}, {"oid": "99254e99f1c182975efe95057fc2dcc671477d5d", "url": "https://github.com/getodk/collect/commit/99254e99f1c182975efe95057fc2dcc671477d5d", "message": "update layout", "committedDate": "2020-11-06T12:37:26Z", "type": "commit"}, {"oid": "663f3ade247e7db454cd218d83ce3732bc606020", "url": "https://github.com/getodk/collect/commit/663f3ade247e7db454cd218d83ce3732bc606020", "message": "fixed conflicts", "committedDate": "2020-11-06T12:37:27Z", "type": "commit"}, {"oid": "77f21c8a4909483f132b1022cb050020dc761627", "url": "https://github.com/getodk/collect/commit/77f21c8a4909483f132b1022cb050020dc761627", "message": "fixed conflicts", "committedDate": "2020-11-06T12:37:27Z", "type": "commit"}, {"oid": "b204a218e7ef413d1b15c2b281965adb6e46b73a", "url": "https://github.com/getodk/collect/commit/b204a218e7ef413d1b15c2b281965adb6e46b73a", "message": "add unit tests for time widget", "committedDate": "2020-11-06T12:37:28Z", "type": "commit"}, {"oid": "227676955114d36075671141473cbf3def80190c", "url": "https://github.com/getodk/collect/commit/227676955114d36075671141473cbf3def80190c", "message": "fixed conflicts", "committedDate": "2020-11-06T12:37:28Z", "type": "commit"}, {"oid": "953878ca37ff35b7c135ae4287e85f8e7191b54f", "url": "https://github.com/getodk/collect/commit/953878ca37ff35b7c135ae4287e85f8e7191b54f", "message": "fixed conflicts", "committedDate": "2020-11-06T12:37:29Z", "type": "commit"}, {"oid": "b3c1b034eba62ddf8f85cd6ee3f6509b18838a21", "url": "https://github.com/getodk/collect/commit/b3c1b034eba62ddf8f85cd6ee3f6509b18838a21", "message": "fixed conflicts", "committedDate": "2020-11-06T12:37:30Z", "type": "commit"}, {"oid": "cb14e16d66fa376fb8a4d148bd3527853b563640", "url": "https://github.com/getodk/collect/commit/cb14e16d66fa376fb8a4d148bd3527853b563640", "message": "add unit tests for DateTimeWidget", "committedDate": "2020-11-06T12:37:31Z", "type": "commit"}, {"oid": "90bc92536b8ffb8ec9e812bf87a10446b9c6bc9a", "url": "https://github.com/getodk/collect/commit/90bc92536b8ffb8ec9e812bf87a10446b9c6bc9a", "message": "fixed conflicts", "committedDate": "2020-11-06T12:37:31Z", "type": "commit"}, {"oid": "d37649036de136e4c7934b91c0b1d74caedd4339", "url": "https://github.com/getodk/collect/commit/d37649036de136e4c7934b91c0b1d74caedd4339", "message": "fixed conflicts", "committedDate": "2020-11-06T12:37:32Z", "type": "commit"}, {"oid": "c8575a8b8d72dae07d6a6672cad99c0516172867", "url": "https://github.com/getodk/collect/commit/c8575a8b8d72dae07d6a6672cad99c0516172867", "message": "add unit tests for DateTimeWidgetUtils", "committedDate": "2020-11-06T12:37:32Z", "type": "commit"}, {"oid": "857da01294be30e9a04847fc4c856d8b6c9ec0e8", "url": "https://github.com/getodk/collect/commit/857da01294be30e9a04847fc4c856d8b6c9ec0e8", "message": "code refactor", "committedDate": "2020-11-06T12:37:33Z", "type": "commit"}, {"oid": "78c298a6cbc669ac9fb3ddcbfb54384e95cdbc16", "url": "https://github.com/getodk/collect/commit/78c298a6cbc669ac9fb3ddcbfb54384e95cdbc16", "message": "add unit tests", "committedDate": "2020-11-06T12:37:34Z", "type": "commit"}, {"oid": "4c4cafbca283d2f77a311e34bed4ced15850d464", "url": "https://github.com/getodk/collect/commit/4c4cafbca283d2f77a311e34bed4ced15850d464", "message": "code refactor", "committedDate": "2020-11-06T12:37:34Z", "type": "commit"}, {"oid": "2d9d986daea25a8080d2cefd67224bc64cad0be7", "url": "https://github.com/getodk/collect/commit/2d9d986daea25a8080d2cefd67224bc64cad0be7", "message": "code improvements", "committedDate": "2020-11-06T12:37:35Z", "type": "commit"}, {"oid": "cdb5127154fbdc1fb201e79f616070ca99ec59dc", "url": "https://github.com/getodk/collect/commit/cdb5127154fbdc1fb201e79f616070ca99ec59dc", "message": "update unit tests in DateTimeWidgetUtils", "committedDate": "2020-11-06T12:37:35Z", "type": "commit"}, {"oid": "0e4e3577acdcd6566db3d97c3f103b143cd25f5d", "url": "https://github.com/getodk/collect/commit/0e4e3577acdcd6566db3d97c3f103b143cd25f5d", "message": "fix test shown on date button", "committedDate": "2020-11-06T12:37:36Z", "type": "commit"}, {"oid": "5defdc69ce10c406ff1ccb735c6477dd6cc1e758", "url": "https://github.com/getodk/collect/commit/5defdc69ce10c406ff1ccb735c6477dd6cc1e758", "message": "fix month value shown in FixedDatePickerDialog", "committedDate": "2020-11-06T12:37:36Z", "type": "commit"}, {"oid": "77289eba62a0980f3e6504e2a6e3aeefbd51c72c", "url": "https://github.com/getodk/collect/commit/77289eba62a0980f3e6504e2a6e3aeefbd51c72c", "message": "fix failing unit tests", "committedDate": "2020-11-06T12:37:37Z", "type": "commit"}, {"oid": "9f4b1b98ff56f7fd7d2a966703f8fb37ade5b6aa", "url": "https://github.com/getodk/collect/commit/9f4b1b98ff56f7fd7d2a966703f8fb37ade5b6aa", "message": "rename BinaryDataReceiver to WidgetDataReceiver", "committedDate": "2020-11-06T12:38:47Z", "type": "commit"}, {"oid": "74c257e99981502cecb0d36abb7dea5efd308abe", "url": "https://github.com/getodk/collect/commit/74c257e99981502cecb0d36abb7dea5efd308abe", "message": "code refactor", "committedDate": "2020-11-06T12:38:56Z", "type": "commit"}, {"oid": "c0835444d9cbef72947289902c00775c3d44989f", "url": "https://github.com/getodk/collect/commit/c0835444d9cbef72947289902c00775c3d44989f", "message": "fix pmd", "committedDate": "2020-11-06T12:38:56Z", "type": "commit"}, {"oid": "1e3478eef1fcd93902b456557da462a30bcce76b", "url": "https://github.com/getodk/collect/commit/1e3478eef1fcd93902b456557da462a30bcce76b", "message": "code refactor", "committedDate": "2020-11-06T12:38:57Z", "type": "commit"}, {"oid": "501d519aaeeb42cc1c93364524750d3122bf8274", "url": "https://github.com/getodk/collect/commit/501d519aaeeb42cc1c93364524750d3122bf8274", "message": "remove CustomDatePickerDialog listener", "committedDate": "2020-11-06T12:38:57Z", "type": "commit"}, {"oid": "53059ffe7368125bb835cc948932f436f369e43e", "url": "https://github.com/getodk/collect/commit/53059ffe7368125bb835cc948932f436f369e43e", "message": "rename BinaryDataReceiver to WidgetDataReceiver", "committedDate": "2020-11-06T12:38:58Z", "type": "commit"}, {"oid": "e38b94d406e5fdb03de469d2a3363d30d520ca55", "url": "https://github.com/getodk/collect/commit/e38b94d406e5fdb03de469d2a3363d30d520ca55", "message": "code refactor", "committedDate": "2020-11-06T12:38:58Z", "type": "commit"}, {"oid": "db0d0b08a6b1fa31259d36e93b9cf76575ac1de3", "url": "https://github.com/getodk/collect/commit/db0d0b08a6b1fa31259d36e93b9cf76575ac1de3", "message": "use LocalDateTime for TimeWidget and DateTimeWidget", "committedDate": "2020-11-06T12:38:59Z", "type": "commit"}, {"oid": "1f6faf90fa1323046c3322851114ee99474ae5a6", "url": "https://github.com/getodk/collect/commit/1f6faf90fa1323046c3322851114ee99474ae5a6", "message": "create DateTimeViewModel", "committedDate": "2020-11-06T12:38:59Z", "type": "commit"}, {"oid": "74965daaa2bb1200eb73d4641cd60f649e09034a", "url": "https://github.com/getodk/collect/commit/74965daaa2bb1200eb73d4641cd60f649e09034a", "message": "remove OnDateSetListener and OnTimeSetListener", "committedDate": "2020-11-06T12:39:00Z", "type": "commit"}, {"oid": "aab3001d6d81ec4f573fa10a46d4312b05664889", "url": "https://github.com/getodk/collect/commit/aab3001d6d81ec4f573fa10a46d4312b05664889", "message": "craete DateTimeWidgetListener", "committedDate": "2020-11-06T12:41:00Z", "type": "commit"}, {"oid": "38fc43884edfa52888005595e43f826f17492d4a", "url": "https://github.com/getodk/collect/commit/38fc43884edfa52888005595e43f826f17492d4a", "message": "update TimeWidget unit tests", "committedDate": "2020-11-06T12:41:11Z", "type": "commit"}, {"oid": "58e3d6afcc04697e9c4d702a9001b4c406d9945c", "url": "https://github.com/getodk/collect/commit/58e3d6afcc04697e9c4d702a9001b4c406d9945c", "message": "update unit tests for Date and Time Widgets", "committedDate": "2020-11-06T12:41:12Z", "type": "commit"}, {"oid": "ea57a351ce1a9f99acdc086eaa748e1206abb4af", "url": "https://github.com/getodk/collect/commit/ea57a351ce1a9f99acdc086eaa748e1206abb4af", "message": "code refactor", "committedDate": "2020-11-06T12:41:13Z", "type": "commit"}, {"oid": "7fbacdeebcb7a95dcff1169de4ecdceb069b775f", "url": "https://github.com/getodk/collect/commit/7fbacdeebcb7a95dcff1169de4ecdceb069b775f", "message": "craete separate viewmodel for sepaarte classes", "committedDate": "2020-11-06T12:41:13Z", "type": "commit"}, {"oid": "85a52d0fbc2efc0c28ced7105ebc19d3084aa01b", "url": "https://github.com/getodk/collect/commit/85a52d0fbc2efc0c28ced7105ebc19d3084aa01b", "message": "create viewmodel using context of dialog and add update unit tests", "committedDate": "2020-11-06T12:42:03Z", "type": "commit"}, {"oid": "90041d30febb5b43408280f05c23f0efc977e96b", "url": "https://github.com/getodk/collect/commit/90041d30febb5b43408280f05c23f0efc977e96b", "message": "fix timepicker value set listener", "committedDate": "2020-11-06T12:42:11Z", "type": "commit"}, {"oid": "a0ad82d7bd8fa6b1172bb874dd7b4f313f0e0389", "url": "https://github.com/getodk/collect/commit/a0ad82d7bd8fa6b1172bb874dd7b4f313f0e0389", "message": "remove registerToContextMenu in QuestionWidget", "committedDate": "2020-11-06T12:42:11Z", "type": "commit"}, {"oid": "62bcc7e5214aa17a5c348754fb9c15a8f364c5fe", "url": "https://github.com/getodk/collect/commit/62bcc7e5214aa17a5c348754fb9c15a8f364c5fe", "message": "add unit tests for DateTimeViewModel", "committedDate": "2020-11-06T12:42:12Z", "type": "commit"}, {"oid": "1c188c472fa4b48170c4a421100668aecc51c566", "url": "https://github.com/getodk/collect/commit/1c188c472fa4b48170c4a421100668aecc51c566", "message": "refactor DateTimeUtils and DateTimeWidgetUtils", "committedDate": "2020-11-06T12:42:12Z", "type": "commit"}, {"oid": "3fa3d33b1f1dcb62160b17bd26ea376021424e8b", "url": "https://github.com/getodk/collect/commit/3fa3d33b1f1dcb62160b17bd26ea376021424e8b", "message": "add unit tests for DateTimeUtils", "committedDate": "2020-11-06T12:42:13Z", "type": "commit"}, {"oid": "ea2a85cd3b3bd0933635a0cce95b758deab91eae", "url": "https://github.com/getodk/collect/commit/ea2a85cd3b3bd0933635a0cce95b758deab91eae", "message": "update correct values in CustomDatePickerDialog on screen orientation", "committedDate": "2020-11-06T12:42:13Z", "type": "commit"}, {"oid": "50af755de8b238adcfe30b839f1b47ac15193b22", "url": "https://github.com/getodk/collect/commit/50af755de8b238adcfe30b839f1b47ac15193b22", "message": "refactor DateTimeWidgetUtils and DateTimeUtils", "committedDate": "2020-11-06T12:42:13Z", "type": "commit"}, {"oid": "0768876cf44b11b0e6eb5877a6bd8371faec4462", "url": "https://github.com/getodk/collect/commit/0768876cf44b11b0e6eb5877a6bd8371faec4462", "message": "revert timePicker.clearFocus() and use viewmodel to retain date on screen rotation", "committedDate": "2020-11-06T12:42:14Z", "type": "commit"}, {"oid": "cb9fe76a0f08c0e984d7b8f6b286bdfd817dbd84", "url": "https://github.com/getodk/collect/commit/cb9fe76a0f08c0e984d7b8f6b286bdfd817dbd84", "message": "remove unwanted abstraction", "committedDate": "2020-11-06T12:42:15Z", "type": "commit"}, {"oid": "f9f1fe1862a34c00ca585e1b90155ae5cd803c49", "url": "https://github.com/getodk/collect/commit/f9f1fe1862a34c00ca585e1b90155ae5cd803c49", "message": "fix unit tests", "committedDate": "2020-11-06T12:42:16Z", "type": "commit"}, {"oid": "0fd8646f9e237031a962acf85347f20b223deb20", "url": "https://github.com/getodk/collect/commit/0fd8646f9e237031a962acf85347f20b223deb20", "message": "remove DateTimeWidgetListener and update unit tests", "committedDate": "2020-11-06T12:42:16Z", "type": "commit"}, {"oid": "63efa3e63d9b41a1a12cd0a65497061c69ecef11", "url": "https://github.com/getodk/collect/commit/63efa3e63d9b41a1a12cd0a65497061c69ecef11", "message": "use viewmodel to retain values in CustomDatePickerDialog", "committedDate": "2020-11-06T12:42:17Z", "type": "commit"}, {"oid": "bd6dbefa14596fd70e9022ef6d7d941665a9f61b", "url": "https://github.com/getodk/collect/commit/bd6dbefa14596fd70e9022ef6d7d941665a9f61b", "message": "code refactor", "committedDate": "2020-11-06T12:42:18Z", "type": "commit"}, {"oid": "225e5f614237426bc8f80db06604dbed85c4c46c", "url": "https://github.com/getodk/collect/commit/225e5f614237426bc8f80db06604dbed85c4c46c", "message": "add tests for CustomDatePickerDialogs", "committedDate": "2020-11-06T12:42:19Z", "type": "commit"}, {"oid": "082b999b1cf7766dd028cc1ba407de076fbcfe14", "url": "https://github.com/getodk/collect/commit/082b999b1cf7766dd028cc1ba407de076fbcfe14", "message": "refactor DateTimeViewModel", "committedDate": "2020-11-06T12:42:19Z", "type": "commit"}, {"oid": "00d7ac2c87d7a1e35e8849352bc3ef195c9f5801", "url": "https://github.com/getodk/collect/commit/00d7ac2c87d7a1e35e8849352bc3ef195c9f5801", "message": "fix pmd error", "committedDate": "2020-11-06T12:42:20Z", "type": "commit"}, {"oid": "d7c0c5b832fce05f03abd769baefad11253f3339", "url": "https://github.com/getodk/collect/commit/d7c0c5b832fce05f03abd769baefad11253f3339", "message": "fix crash on Android 7", "committedDate": "2020-11-06T12:42:21Z", "type": "commit"}, {"oid": "01628d0b220694cae649bc55215e251544df2a8d", "url": "https://github.com/getodk/collect/commit/01628d0b220694cae649bc55215e251544df2a8d", "message": "update date and time layout resources", "committedDate": "2020-11-06T12:42:21Z", "type": "commit"}, {"oid": "6ee68738405ae4960a75d08553a893204d80db40", "url": "https://github.com/getodk/collect/commit/6ee68738405ae4960a75d08553a893204d80db40", "message": "retain date in custom date picker dialogs", "committedDate": "2020-11-06T12:42:22Z", "type": "commit"}, {"oid": "5dafae431abbe8c67d025272432c82cf32708662", "url": "https://github.com/getodk/collect/commit/5dafae431abbe8c67d025272432c82cf32708662", "message": "fix unit test", "committedDate": "2020-11-06T12:42:22Z", "type": "commit"}, {"oid": "8fa80e3856e46eb33871fa5190d0b0e77fb52a88", "url": "https://github.com/getodk/collect/commit/8fa80e3856e46eb33871fa5190d0b0e77fb52a88", "message": "fix unit tests", "committedDate": "2020-11-06T12:42:23Z", "type": "commit"}, {"oid": "d66ac5057dce652700eedd54717e8c5cf7cffc91", "url": "https://github.com/getodk/collect/commit/d66ac5057dce652700eedd54717e8c5cf7cffc91", "message": "code refactor", "committedDate": "2020-11-06T12:42:24Z", "type": "commit"}, {"oid": "b69d65837accd84d7f485ae3cfaab2ed5aaf2cae", "url": "https://github.com/getodk/collect/commit/b69d65837accd84d7f485ae3cfaab2ed5aaf2cae", "message": "remove extra margin in widget buttons", "committedDate": "2020-11-06T12:42:24Z", "type": "commit"}, {"oid": "b69d65837accd84d7f485ae3cfaab2ed5aaf2cae", "url": "https://github.com/getodk/collect/commit/b69d65837accd84d7f485ae3cfaab2ed5aaf2cae", "message": "remove extra margin in widget buttons", "committedDate": "2020-11-06T12:42:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExMTc0Mw==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r520111743", "bodyText": "Could you explain this change to me. You added a similar code to other date dialogs as well and I think I understand why we check if copticDay > copticDate.dayOfMonth() a few lines above since it's possible that when we change months we might move from one that has more days than another but is that possible that the number which represents months is negative?", "author": "grzesiek2010", "createdAt": "2020-11-09T20:50:52Z", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CopticDatePickerDialog.java", "diffHunk": "@@ -82,6 +73,10 @@ private LocalDateTime getCurrentCopticDate() {\n             copticDay = copticDate.dayOfMonth().getMaximumValue();\n         }\n \n+        if (copticDay < copticDate.dayOfMonth().getMinimumValue()) {", "originalCommit": "b69d65837accd84d7f485ae3cfaab2ed5aaf2cae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEyNDQyMQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r521124421", "bodyText": "Hi @grzesiek2010! Some of the unit tests fails without this code. Actually when the widget does not have any answer, and the user opens up the date picker dialog, the view model sets the value of selected date as null, and we get the default value for day as 0, while it must be in the range [1,30/31] for custom date picker dialogs.", "author": "SaumiaSinghal", "createdAt": "2020-11-11T05:39:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExMTc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk3MzUyMQ==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r521973521", "bodyText": "Ok I see, thanks.", "author": "grzesiek2010", "createdAt": "2020-11-12T09:48:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExMTc0Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExMzIyMg==", "url": "https://github.com/getodk/collect/pull/3975#discussion_r520113222", "bodyText": "Please rename this method to setWidgetData() since like in this case it's not only about binary files.", "author": "grzesiek2010", "createdAt": "2020-11-09T20:53:42Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2632,6 +2629,15 @@ public void onCancelFormLoading() {\n         finish();\n     }\n \n+    private void onDataChanged(Object data) {\n+        ODKView odkView = getCurrentViewIfODKView();\n+        if (odkView != null) {\n+            QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n+            setBinaryWidgetData(data);", "originalCommit": "b69d65837accd84d7f485ae3cfaab2ed5aaf2cae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "919cca13a0e23dc02758687738564ecfb8b61a7c", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\nindex d3aa4ddfc..f0d04b13c 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java\n\n@@ -2633,7 +2633,7 @@ public class FormEntryActivity extends CollectAbstractActivity implements Animat\n         ODKView odkView = getCurrentViewIfODKView();\n         if (odkView != null) {\n             QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n-            setBinaryWidgetData(data);\n+            setWidgetData(data);\n             widgetValueChanged(widgetGettingNewValue);\n         }\n     }\n"}}, {"oid": "919cca13a0e23dc02758687738564ecfb8b61a7c", "url": "https://github.com/getodk/collect/commit/919cca13a0e23dc02758687738564ecfb8b61a7c", "message": "rename setBinaryWidgetData to setWidgetData in FormEntryActivity", "committedDate": "2020-11-11T05:43:16Z", "type": "commit"}, {"oid": "7eb6cf2d16924ab63fca3eedc18ded631e9f1299", "url": "https://github.com/getodk/collect/commit/7eb6cf2d16924ab63fca3eedc18ded631e9f1299", "message": "Merge branch 'master' into rework_date_widget", "committedDate": "2020-11-12T09:56:05Z", "type": "commit"}]}