{"pr_number": 3637, "pr_title": "Scan Qr code main menu button", "pr_createdAt": "2020-02-11T20:25:38Z", "pr_url": "https://github.com/getodk/collect/pull/3637", "timeline": [{"oid": "ac3322d1b99b71bc3bf08bf6cbe92ac84790f37e", "url": "https://github.com/getodk/collect/commit/ac3322d1b99b71bc3bf08bf6cbe92ac84790f37e", "message": "qr code menu item and visibility", "committedDate": "2020-02-18T19:56:28Z", "type": "commit"}, {"oid": "ac3322d1b99b71bc3bf08bf6cbe92ac84790f37e", "url": "https://github.com/getodk/collect/commit/ac3322d1b99b71bc3bf08bf6cbe92ac84790f37e", "message": "qr code menu item and visibility", "committedDate": "2020-02-18T19:56:28Z", "type": "forcePushed"}, {"oid": "49800b42d860298b6ca85a7b405c31a16e98fc17", "url": "https://github.com/getodk/collect/commit/49800b42d860298b6ca85a7b405c31a16e98fc17", "message": "ScanQRCodeActivity", "committedDate": "2020-02-19T04:20:37Z", "type": "commit"}, {"oid": "f5dabbca11dbdbdfa5cbf3745c8220fc811a8bb9", "url": "https://github.com/getodk/collect/commit/f5dabbca11dbdbdfa5cbf3745c8220fc811a8bb9", "message": "successful qrscan to Server Preferences", "committedDate": "2020-02-19T04:49:57Z", "type": "commit"}, {"oid": "ca0cf79471737900ca3240306f3392a00f03d661", "url": "https://github.com/getodk/collect/commit/ca0cf79471737900ca3240306f3392a00f03d661", "message": "remove unused imports/fix style issues", "committedDate": "2020-02-19T05:11:29Z", "type": "commit"}, {"oid": "b59395678f41bb91a73aa9857dfbaf14f96c7826", "url": "https://github.com/getodk/collect/commit/b59395678f41bb91a73aa9857dfbaf14f96c7826", "message": "Revert \"successful qrscan to Server Preferences\"\n\nThis reverts commit f5dabbca11dbdbdfa5cbf3745c8220fc811a8bb9.", "committedDate": "2020-02-19T08:44:44Z", "type": "commit"}, {"oid": "784375de3c781867c1c99c315fd21152295115ae", "url": "https://github.com/getodk/collect/commit/784375de3c781867c1c99c315fd21152295115ae", "message": "remove import_export_settings string", "committedDate": "2020-02-19T08:47:33Z", "type": "commit"}, {"oid": "4107bab55ecd05aebe0458d046411960b93fb44b", "url": "https://github.com/getodk/collect/commit/4107bab55ecd05aebe0458d046411960b93fb44b", "message": "add test for press qr code menu item", "committedDate": "2020-02-19T21:41:03Z", "type": "commit"}, {"oid": "15b3bd956c4d42728296db027c11ad1f411f1e39", "url": "https://github.com/getodk/collect/commit/15b3bd956c4d42728296db027c11ad1f411f1e39", "message": "fix ScanQRCodeActivity and add MainMenuSettingsTest", "committedDate": "2020-02-20T00:05:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2ODk0OA==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r382768948", "bodyText": "We have some nice abstractions that you can use in MainMenuPage that will make this test even cleaner.", "author": "lognaturel", "createdAt": "2020-02-21T19:38:21Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.odk.collect.android.settings;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+\n+import androidx.test.espresso.Espresso;\n+import androidx.test.filters.LargeTest;\n+import androidx.test.rule.ActivityTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;\n+\n+@RunWith(AndroidJUnit4.class)\n+@LargeTest\n+public class MainMenuSettingsTest {\n+    @Rule\n+    public ActivityTestRule<MainMenuActivity> activityRule =\n+            new ActivityTestRule<>(MainMenuActivity.class);\n+\n+    @Test\n+    public void configureWithQRCanBeDisabled() {\n+        openActionBarOverflowOrOptionsMenu(getInstrumentation().getTargetContext());", "originalCommit": "15b3bd956c4d42728296db027c11ad1f411f1e39", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3a290e59ff821e94b96d3ae7bdfecfcbe11b6e5", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java\nindex 8c1df01ba..477cafdda 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java\n\n@@ -5,45 +5,30 @@ import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.pages.AdminSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n \n-import androidx.test.espresso.Espresso;\n import androidx.test.filters.LargeTest;\n import androidx.test.rule.ActivityTestRule;\n import androidx.test.runner.AndroidJUnit4;\n \n-import static androidx.test.espresso.Espresso.onView;\n-import static androidx.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu;\n-import static androidx.test.espresso.action.ViewActions.click;\n-import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n-import static androidx.test.espresso.matcher.ViewMatchers.withText;\n-import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;\n-\n @RunWith(AndroidJUnit4.class)\n @LargeTest\n public class MainMenuSettingsTest {\n     @Rule\n-    public ActivityTestRule<MainMenuActivity> activityRule =\n-            new ActivityTestRule<>(MainMenuActivity.class);\n+    public ActivityTestRule<MainMenuActivity> rule = new ActivityTestRule<>(MainMenuActivity.class);\n \n     @Test\n     public void configureWithQRCanBeDisabled() {\n-        openActionBarOverflowOrOptionsMenu(getInstrumentation().getTargetContext());\n-\n-        onView(withText(R.string.admin_preferences))\n-                .perform(click());\n-\n-        onView(withText(R.string.main_menu_settings))\n-                .perform(click());\n-\n-        onView(withText(R.string.qr_code))\n-                .perform(click());\n-\n-        Espresso.pressBack();\n-        Espresso.pressBack();\n-\n-        openActionBarOverflowOrOptionsMenu(getInstrumentation().getTargetContext());\n-\n-        onView(withText(R.string.scan_qrcode_overflow_menu))\n-                .check(doesNotExist());\n+        new MainMenuPage(rule)\n+                .clickOnMenu()\n+                .clickAdminSettings()\n+                .clickOnString(R.string.main_menu_settings)\n+                .clickOnString(R.string.qr_code)\n+                .pressBack(new AdminSettingsPage(rule))\n+                .pressBack(new MainMenuPage(rule))\n+                .clickOnMenu()\n+                .checkIfTextDoesNotExist(R.string.scan_qrcode_overflow_menu);\n     }\n+\n }\n"}}, {"oid": "9a856959b9cf4e44e6ef7264c133c74e05a89b06", "url": "https://github.com/getodk/collect/commit/9a856959b9cf4e44e6ef7264c133c74e05a89b06", "message": "prompt admin password prompt for qrcode menu item", "committedDate": "2020-02-21T22:38:56Z", "type": "commit"}, {"oid": "b3a290e59ff821e94b96d3ae7bdfecfcbe11b6e5", "url": "https://github.com/getodk/collect/commit/b3a290e59ff821e94b96d3ae7bdfecfcbe11b6e5", "message": "testing for disabling qrcode menu iitem", "committedDate": "2020-02-21T22:57:53Z", "type": "commit"}, {"oid": "a6b1bc87d9992f4e8aa73fb2df8d7ab3f6311fa1", "url": "https://github.com/getodk/collect/commit/a6b1bc87d9992f4e8aa73fb2df8d7ab3f6311fa1", "message": "fix null adminPreferences in robolectric tests", "committedDate": "2020-02-22T22:08:59Z", "type": "commit"}, {"oid": "2c07e06668e9a698f8b92788be7295b31c0b746a", "url": "https://github.com/getodk/collect/commit/2c07e06668e9a698f8b92788be7295b31c0b746a", "message": "fix style", "committedDate": "2020-02-22T22:45:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyNjgwNA==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383726804", "bodyText": "You can delete this annotation. Google always uses in it examples but we don't split our tests by size so it's not somthing we need!", "author": "seadowg", "createdAt": "2020-02-25T08:37:33Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.settings;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.pages.AdminSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+import androidx.test.filters.LargeTest;\n+import androidx.test.rule.ActivityTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+@LargeTest", "originalCommit": "2c07e06668e9a698f8b92788be7295b31c0b746a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "80ed066a9b2bb86d0f6073a817eefb389269466d", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuTest.java\nsimilarity index 67%\nrename from collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java\nrename to collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuTest.java\nindex 477cafdda..97059ba72 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuTest.java\n\n@@ -1,23 +1,36 @@\n package org.odk.collect.android.settings;\n \n+import android.Manifest;\n+\n import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.RuleChain;\n import org.junit.runner.RunWith;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.ResetStateRule;\n import org.odk.collect.android.support.pages.AdminSettingsPage;\n import org.odk.collect.android.support.pages.MainMenuPage;\n \n import androidx.test.filters.LargeTest;\n import androidx.test.rule.ActivityTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n import androidx.test.runner.AndroidJUnit4;\n \n @RunWith(AndroidJUnit4.class)\n-@LargeTest\n-public class MainMenuSettingsTest {\n+public class MainMenuTest {\n     @Rule\n     public ActivityTestRule<MainMenuActivity> rule = new ActivityTestRule<>(MainMenuActivity.class);\n \n+    @Rule\n+    public RuleChain copyFormChain = RuleChain\n+            .outerRule(GrantPermissionRule.grant(\n+                    Manifest.permission.READ_EXTERNAL_STORAGE,\n+                    Manifest.permission.WRITE_EXTERNAL_STORAGE,\n+                    Manifest.permission.READ_PHONE_STATE\n+            ))\n+            .around(new ResetStateRule());\n+\n     @Test\n     public void configureWithQRCanBeDisabled() {\n         new MainMenuPage(rule)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyODc1MQ==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383728751", "bodyText": "Pretty much all our tests need permissions granted to run on fresh devices and so the test doesn't get polluted by others (another test bmight disable the QR code configuration for instance) you need to clear state before running the test. To do so you can add this rule chain:\n@Rule\npublic RuleChain copyFormChain = RuleChain\n    .outerRule(GrantPermissionRule.grant(\n        Manifest.permission.READ_EXTERNAL_STORAGE,\n        Manifest.permission.WRITE_EXTERNAL_STORAGE,\n        Manifest.permission.READ_PHONE_STATE\n    ))\n    .around(new ResetStateRule());", "author": "seadowg", "createdAt": "2020-02-25T08:41:22Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.settings;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.pages.AdminSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+import androidx.test.filters.LargeTest;\n+import androidx.test.rule.ActivityTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+@LargeTest\n+public class MainMenuSettingsTest {", "originalCommit": "2c07e06668e9a698f8b92788be7295b31c0b746a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyOTM0Mw==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383729343", "bodyText": "Also I think we should call this test MainMenuTest for now", "author": "seadowg", "createdAt": "2020-02-25T08:42:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyODc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "80ed066a9b2bb86d0f6073a817eefb389269466d", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuTest.java\nsimilarity index 67%\nrename from collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java\nrename to collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuTest.java\nindex 477cafdda..97059ba72 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuTest.java\n\n@@ -1,23 +1,36 @@\n package org.odk.collect.android.settings;\n \n+import android.Manifest;\n+\n import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.RuleChain;\n import org.junit.runner.RunWith;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.ResetStateRule;\n import org.odk.collect.android.support.pages.AdminSettingsPage;\n import org.odk.collect.android.support.pages.MainMenuPage;\n \n import androidx.test.filters.LargeTest;\n import androidx.test.rule.ActivityTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n import androidx.test.runner.AndroidJUnit4;\n \n @RunWith(AndroidJUnit4.class)\n-@LargeTest\n-public class MainMenuSettingsTest {\n+public class MainMenuTest {\n     @Rule\n     public ActivityTestRule<MainMenuActivity> rule = new ActivityTestRule<>(MainMenuActivity.class);\n \n+    @Rule\n+    public RuleChain copyFormChain = RuleChain\n+            .outerRule(GrantPermissionRule.grant(\n+                    Manifest.permission.READ_EXTERNAL_STORAGE,\n+                    Manifest.permission.WRITE_EXTERNAL_STORAGE,\n+                    Manifest.permission.READ_PHONE_STATE\n+            ))\n+            .around(new ResetStateRule());\n+\n     @Test\n     public void configureWithQRCanBeDisabled() {\n         new MainMenuPage(rule)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzczMzEzMA==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383733130", "bodyText": "This should really be initialized in onCreate as onOptionsItemSelected won't be called until someone clicks on a menu item. This means adminPreferences will have a high likelyhood of being null if someone tries to call it somewhere else.\nI'm guessing this was causing problems in your test? I've got some ideas around fixing that but I'll leave them on the test \ud83d\ude01", "author": "seadowg", "createdAt": "2020-02-25T08:50:02Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -357,21 +356,38 @@ protected void onPause() {\n     @Override\n     public boolean onCreateOptionsMenu(Menu menu) {\n         getMenuInflater().inflate(R.menu.main_menu, menu);\n+        qrcodeScannerMenuItem = menu.findItem(R.id.menu_configure_qr_code);\n         return super.onCreateOptionsMenu(menu);\n     }\n \n+    @Override\n+    public boolean onPrepareOptionsMenu(Menu menu) {\n+        qrcodeScannerMenuItem.setVisible(this.getSharedPreferences(AdminPreferencesActivity.ADMIN_PREFERENCES, 0).getBoolean(AdminKeys.KEY_QR_CODE_SCANNER, true));\n+        return super.onPrepareOptionsMenu(menu);\n+    }\n+\n     @Override\n     public boolean onOptionsItemSelected(MenuItem item) {\n+        SharedPreferences adminPreferences = this.getSharedPreferences(", "originalCommit": "2c07e06668e9a698f8b92788be7295b31c0b746a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03faeec016787b601d7141e70bff5f5eb951cfde", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\nindex 97b4f07b1..f67c72135 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n\n@@ -368,8 +372,6 @@ public class MainMenuActivity extends CollectAbstractActivity {\n \n     @Override\n     public boolean onOptionsItemSelected(MenuItem item) {\n-        SharedPreferences adminPreferences = this.getSharedPreferences(\n-                AdminPreferencesActivity.ADMIN_PREFERENCES, 0);\n         String pw = adminPreferences.getString(\n                 AdminKeys.KEY_ADMIN_PW, \"\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MTQ1OQ==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383741459", "bodyText": "I had never seen this test file! Well done on finding it. I think it's good that you've followed the style set by the file but it's a little unusual compared to the tests we'd usually write. Generally we try and be as descriptive as possible in our test names rather than using JavaDoc. For example I would have named your test pressingConfigureQRCode_launchesScanQRCodeActivity. I like the test itself.\nIt also looks like test doesn't set up the application for the MainMenuActivity correctly - this is why you were getting a null adminSharedPreferences. The activity's onCreate has this code:\ntry {\n    new StorageInitializer().createODKDirs();\n} catch (RuntimeException e) {\n    createErrorDialog(e.getMessage(), EXIT);\n    return;\n}\nFor this to work the app's \"storage state\" has to be setup correctly. It wasn't so the catch branch was firing before adminSharedPreferences was initialized. I think it would nice to rework this whole test (which is something I can take a look) so for the moment could you create a new MainMenuActivityTest with your test (iwith a new name and without the javadoc comment). The @Before you need to make sure storage state is setup is:\n@Before\npublic void setup() {\n    ShadowEnvironment.setExternalStorageState(MEDIA_MOUNTED);\n    mainMenuActivity = Robolectric.setupActivity(MainMenuActivity.class);\n}", "author": "seadowg", "createdAt": "2020-02-25T09:06:06Z", "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainActivityTest.java", "diffHunk": "@@ -197,4 +200,18 @@ public void manageFilesButtonTest() throws Exception {\n         assertEquals(FileManagerTabs.class.getName(),\n                 shadowIntent.getIntentClass().getName());\n     }\n+\n+    /**", "originalCommit": "2c07e06668e9a698f8b92788be7295b31c0b746a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "80ed066a9b2bb86d0f6073a817eefb389269466d", "chunk": "diff --git a/collect_app/src/test/java/org/odk/collect/android/activities/MainActivityTest.java b/collect_app/src/test/java/org/odk/collect/android/activities/MainActivityTest.java\nindex 5df09ff81..faa2604ab 100644\n--- a/collect_app/src/test/java/org/odk/collect/android/activities/MainActivityTest.java\n+++ b/collect_app/src/test/java/org/odk/collect/android/activities/MainActivityTest.java\n\n@@ -200,18 +199,4 @@ public class MainActivityTest {\n         assertEquals(FileManagerTabs.class.getName(),\n                 shadowIntent.getIntentClass().getName());\n     }\n-\n-    /**\n-     * {@link Test} to assert \"Scan QR Code\" option item brings user to qr scanning activity\n-     */\n-    @Test\n-    public void pressScanQRCode() throws Exception {\n-        MenuItem item = new RoboMenuItem(R.id.menu_configure_qr_code);\n-\n-        mainMenuActivity.onOptionsItemSelected(item);\n-\n-        Intent expectedIntent = new Intent(mainMenuActivity, ScanQRCodeActivity.class);\n-        Intent actual = shadowOf(RuntimeEnvironment.application).getNextStartedActivity();\n-        assertEquals(expectedIntent.getComponent(), actual.getComponent());\n-    }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MzIzOA==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383743238", "bodyText": "I like the comment but the \"decorator\" part confused me. Generally I'd think of a decorator adding functionality to an interface. I could totally just be missing something!", "author": "seadowg", "createdAt": "2020-02-25T09:09:28Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/ScanQRCodeActivity.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package org.odk.collect.android.activities;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import com.google.zxing.integration.android.IntentIntegrator;\n+import com.google.zxing.integration.android.IntentResult;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.listeners.ActionListener;\n+import org.odk.collect.android.listeners.PermissionListener;\n+import org.odk.collect.android.preferences.AdminSharedPreferences;\n+import org.odk.collect.android.preferences.GeneralSharedPreferences;\n+import org.odk.collect.android.preferences.PreferenceSaver;\n+import org.odk.collect.android.utilities.CompressionUtils;\n+import org.odk.collect.android.utilities.LocaleHelper;\n+import org.odk.collect.android.utilities.PermissionUtils;\n+import org.odk.collect.android.utilities.ToastUtils;\n+\n+import java.io.IOException;\n+import java.util.zip.DataFormatException;\n+\n+import androidx.annotation.Nullable;\n+import timber.log.Timber;\n+\n+// ScanQRCodeActivity uses the decorator pattern to process the results from ScannerWithFlashlightActivity", "originalCommit": "2c07e06668e9a698f8b92788be7295b31c0b746a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwODY5OA==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r384208698", "bodyText": "I guess I was thinking of ScanQRCodeActivity as adding functionality on top of the ScannerWithFlashlightActivity and removing the need to interact with ScannerWithFlashlightActivity directly anymore.\nWould it be more appropriate as Proxy design pattern because ScanQRCodeActivity is wrapping the ScannerWithFlashlightActivity?", "author": "hypercubestart", "createdAt": "2020-02-26T00:23:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MzIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4MDY3MQ==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r384680671", "bodyText": "I don't think you need to explicitly call out a pattern. I'd change the comment to Initiates barcode scanning and processes its results or something like that.", "author": "lognaturel", "createdAt": "2020-02-26T18:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MzIzOA=="}], "type": "inlineReview", "revised_code": {"commit": "7aa82fcebc592be71f6c150562c3f1621aa342c6", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/ScanQRCodeActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/ScanQRCodeActivity.java\nindex 1645f35bd..0d0d12579 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/ScanQRCodeActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/ScanQRCodeActivity.java\n\n@@ -24,7 +24,7 @@ import java.util.zip.DataFormatException;\n import androidx.annotation.Nullable;\n import timber.log.Timber;\n \n-// ScanQRCodeActivity uses the decorator pattern to process the results from ScannerWithFlashlightActivity\n+// ScanQRCodeActivity initiates barcode scanning and process its results\n // it does not have a UI\n public class ScanQRCodeActivity extends CollectAbstractActivity {\n     @Override\n"}}, {"oid": "80ed066a9b2bb86d0f6073a817eefb389269466d", "url": "https://github.com/getodk/collect/commit/80ed066a9b2bb86d0f6073a817eefb389269466d", "message": "fix review changes", "committedDate": "2020-02-26T00:40:39Z", "type": "commit"}, {"oid": "03faeec016787b601d7141e70bff5f5eb951cfde", "url": "https://github.com/getodk/collect/commit/03faeec016787b601d7141e70bff5f5eb951cfde", "message": "Revert \"fix null adminPreferences in robolectric tests\"\n\nThis reverts commit a6b1bc87d9992f4e8aa73fb2df8d7ab3f6311fa1.", "committedDate": "2020-02-26T00:40:45Z", "type": "commit"}, {"oid": "7aa82fcebc592be71f6c150562c3f1621aa342c6", "url": "https://github.com/getodk/collect/commit/7aa82fcebc592be71f6c150562c3f1621aa342c6", "message": "fix comment", "committedDate": "2020-02-26T18:33:10Z", "type": "commit"}, {"oid": "1adb1ed4861f9c8a57c07903ff52126228ebfb72", "url": "https://github.com/getodk/collect/commit/1adb1ed4861f9c8a57c07903ff52126228ebfb72", "message": "remove unused imports", "committedDate": "2020-02-26T18:46:27Z", "type": "commit"}, {"oid": "54633c30b414f45ae2208102367db195a29ac31c", "url": "https://github.com/getodk/collect/commit/54633c30b414f45ae2208102367db195a29ac31c", "message": "fix null pointer in test", "committedDate": "2020-02-26T19:00:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk4Mzk4NA==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r384983984", "bodyText": "We probably don't need this comment. We'll most likely add tests to it so it'll get out of date fast!", "author": "seadowg", "createdAt": "2020-02-27T08:48:56Z", "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.odk.collect.android.activities;\n+\n+import android.content.Intent;\n+import android.view.MenuItem;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.robolectric.Robolectric;\n+import org.robolectric.RobolectricTestRunner;\n+import org.robolectric.RuntimeEnvironment;\n+import org.robolectric.fakes.RoboMenuItem;\n+import org.robolectric.shadows.ShadowEnvironment;\n+\n+import static android.os.Environment.MEDIA_MOUNTED;\n+import static junit.framework.Assert.assertEquals;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+/**\n+ * Unit test for checking {@link ScanQRCodeActivity} launched correctly from {@link MainMenuActivity}", "originalCommit": "54633c30b414f45ae2208102367db195a29ac31c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b8e323370b612120e9e5772d3c2fc6daf574f69", "chunk": "diff --git a/collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java b/collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java\nindex 4242f3210..c532c3aac 100644\n--- a/collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java\n+++ b/collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java\n\n@@ -17,9 +17,6 @@ import static android.os.Environment.MEDIA_MOUNTED;\n import static junit.framework.Assert.assertEquals;\n import static org.robolectric.Shadows.shadowOf;\n \n-/**\n- * Unit test for checking {@link ScanQRCodeActivity} launched correctly from {@link MainMenuActivity}\n- */\n @RunWith(RobolectricTestRunner.class)\n public class MainMenuActivityTest {\n     private MainMenuActivity mainMenuActivity;\n"}}, {"oid": "5b8e323370b612120e9e5772d3c2fc6daf574f69", "url": "https://github.com/getodk/collect/commit/5b8e323370b612120e9e5772d3c2fc6daf574f69", "message": "remove comment", "committedDate": "2020-02-27T18:12:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNzc4Mw==", "url": "https://github.com/getodk/collect/pull/3637#discussion_r385507783", "bodyText": "#3623 adds some nice abstractions for this admin dialog (https://github.com/opendatakit/collect/pull/3623/files#diff-587fa336330bb907832356ee77ed08d1R405). I wasn't sure when each of these two PRs would land and how the conflict would best be dealt with. As luck would have it, they're ready at the same time. Since it's going through quality assurance right now, let's plan on merging it first and then you'll unfortunately have conflicts to fix throughout this class.", "author": "lognaturel", "createdAt": "2020-02-28T04:58:01Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -445,61 +463,71 @@ public void onClick(DialogInterface dialog, int i) {\n         alertDialog.show();\n     }\n \n-    @Override\n-    protected Dialog onCreateDialog(int id) {\n-        switch (id) {\n-            case PASSWORD_DIALOG:\n+    private Dialog createPasswordDialog(Intent intent) {", "originalCommit": "5b8e323370b612120e9e5772d3c2fc6daf574f69", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "178fa3fb8e13858060757bbf91284633b8045194", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\nindex f67c72135..ee18fcee7 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java\n\n@@ -463,76 +499,6 @@ public class MainMenuActivity extends CollectAbstractActivity {\n         alertDialog.show();\n     }\n \n-    private Dialog createPasswordDialog(Intent intent) {\n-        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n-        final AlertDialog passwordDialog = builder.create();\n-        passwordDialog.setTitle(getString(R.string.enter_admin_password));\n-        LayoutInflater inflater = this.getLayoutInflater();\n-        View dialogView = inflater.inflate(R.layout.dialogbox_layout, null);\n-        passwordDialog.setView(dialogView, 20, 10, 20, 10);\n-        final CheckBox checkBox = dialogView.findViewById(R.id.checkBox);\n-        final EditText input = dialogView.findViewById(R.id.editText);\n-        final SharedPreferences adminPreferences = this.getSharedPreferences(\n-                AdminPreferencesActivity.ADMIN_PREFERENCES, 0);\n-        checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n-            @Override\n-            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {\n-                if (!checkBox.isChecked()) {\n-                    input.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\n-                } else {\n-                    input.setInputType(InputType.TYPE_TEXT_VARIATION_PASSWORD);\n-                }\n-            }\n-        });\n-\n-        passwordDialog.setButton(AlertDialog.BUTTON_POSITIVE,\n-                getString(R.string.ok),\n-                new DialogInterface.OnClickListener() {\n-                    public void onClick(DialogInterface dialog,\n-                                        int whichButton) {\n-                        String value = input.getText().toString();\n-                        String pw = adminPreferences.getString(\n-                                AdminKeys.KEY_ADMIN_PW, \"\");\n-                        if (pw.compareTo(value) == 0) {\n-                            startActivity(intent);\n-                            input.setText(\"\");\n-                            passwordDialog.dismiss();\n-                        } else {\n-                            ToastUtils.showShortToast(R.string.admin_password_incorrect);\n-                        }\n-                    }\n-                });\n-\n-        passwordDialog.setButton(AlertDialog.BUTTON_NEGATIVE,\n-                getString(R.string.cancel),\n-                new DialogInterface.OnClickListener() {\n-\n-                    public void onClick(DialogInterface dialog, int which) {\n-                        input.setText(\"\");\n-                    }\n-                });\n-\n-        passwordDialog.getWindow().setSoftInputMode(\n-                WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);\n-\n-        return passwordDialog;\n-    }\n-\n-    @Override\n-    protected Dialog onCreateDialog(int id) {\n-\n-\n-        switch (id) {\n-            case PASSWORD_DIALOG:\n-                return createPasswordDialog(new Intent(getApplicationContext(), AdminPreferencesActivity.class));\n-\n-            case QR_PASSWORD_DIALOG:\n-                return createPasswordDialog(new Intent(getApplicationContext(), ScanQRCodeActivity.class));\n-\n-        }\n-        return null;\n-    }\n-\n     private void updateButtons() {\n         if (finalizedCursor != null && !finalizedCursor.isClosed()) {\n             finalizedCursor.requery();\n"}}, {"oid": "2ea64994e3745652a91f1b3e5bde277fc8c8901e", "url": "https://github.com/getodk/collect/commit/2ea64994e3745652a91f1b3e5bde277fc8c8901e", "message": "add scan qr code analytics", "committedDate": "2020-02-29T18:09:11Z", "type": "commit"}, {"oid": "2ea64994e3745652a91f1b3e5bde277fc8c8901e", "url": "https://github.com/getodk/collect/commit/2ea64994e3745652a91f1b3e5bde277fc8c8901e", "message": "add scan qr code analytics", "committedDate": "2020-02-29T18:09:11Z", "type": "forcePushed"}, {"oid": "2ea64994e3745652a91f1b3e5bde277fc8c8901e", "url": "https://github.com/getodk/collect/commit/2ea64994e3745652a91f1b3e5bde277fc8c8901e", "message": "add scan qr code analytics", "committedDate": "2020-02-29T18:09:11Z", "type": "forcePushed"}, {"oid": "178fa3fb8e13858060757bbf91284633b8045194", "url": "https://github.com/getodk/collect/commit/178fa3fb8e13858060757bbf91284633b8045194", "message": "Merge remote-tracking branch 'upstream/master' into qrcode-hm", "committedDate": "2020-03-03T01:55:56Z", "type": "commit"}, {"oid": "1e7c02fdd2f97dff271d3beb4e55355129916d1a", "url": "https://github.com/getodk/collect/commit/1e7c02fdd2f97dff271d3beb4e55355129916d1a", "message": "Use descriptive string for menu title", "committedDate": "2020-03-03T02:19:54Z", "type": "commit"}, {"oid": "1e7c02fdd2f97dff271d3beb4e55355129916d1a", "url": "https://github.com/getodk/collect/commit/1e7c02fdd2f97dff271d3beb4e55355129916d1a", "message": "Use descriptive string for menu title", "committedDate": "2020-03-03T02:19:54Z", "type": "forcePushed"}, {"oid": "483ecb638bb84b28f7ce4e2b3b6e86237b7f0ecc", "url": "https://github.com/getodk/collect/commit/483ecb638bb84b28f7ce4e2b3b6e86237b7f0ecc", "message": "Use onAttach variant called on all API levels\n\nSee https://developer.android.com/reference/android/app/Fragment#onAttach(android.content.Context): onAttach(Context) was added in API 23.", "committedDate": "2020-03-03T04:44:56Z", "type": "commit"}]}