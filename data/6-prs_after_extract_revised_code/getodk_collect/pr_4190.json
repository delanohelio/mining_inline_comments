{"pr_number": 4190, "pr_title": "Make audio question record within form entry", "pr_createdAt": "2020-10-28T11:30:18Z", "pr_url": "https://github.com/getodk/collect/pull/4190", "timeline": [{"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee", "url": "https://github.com/getodk/collect/commit/3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee", "message": "Add implementation for new methods in ExternalAppRecordingRequester", "committedDate": "2020-11-03T10:22:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2NDk3OQ==", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516564979", "bodyText": "Faking here is nice as we have a clearly defined boundary between the collect_app and audiorecorder and it means the test isn't exposed to any issues that could occur given we're trying to access the mic and using a service in the real implementation.", "author": "seadowg", "createdAt": "2020-11-03T10:30:01Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java", "diffHunk": "@@ -0,0 +1,175 @@\n+package org.odk.collect.android.feature.formentry;\n+\n+import android.Manifest;\n+import android.app.Application;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.TestDependencies;\n+import org.odk.collect.android.support.TestRuleChain;\n+import org.odk.collect.android.support.pages.FormEndPage;\n+import org.odk.collect.android.support.pages.GeneralSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.SaveOrIgnoreDialog;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModel;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModelFactory;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.odk.collect.android.support.FileUtils.copyFileFromAssets;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AudioRecordingTest {\n+\n+    private final FakeAudioRecorderViewModel fakeAudioRecorderViewModel = new FakeAudioRecorderViewModel();", "originalCommit": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7be3091adbca44b00eb505b45023c2e3643f985", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java\nindex 3d9f7ab8a..0db89f36f 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java\n\n@@ -21,6 +21,8 @@ import org.odk.collect.android.activities.MainMenuActivity;\n import org.odk.collect.android.support.TestDependencies;\n import org.odk.collect.android.support.TestRuleChain;\n import org.odk.collect.android.support.pages.FormEndPage;\n+import org.odk.collect.android.support.pages.FormEntryPage;\n+import org.odk.collect.android.support.pages.FormHierarchyPage;\n import org.odk.collect.android.support.pages.GeneralSettingsPage;\n import org.odk.collect.android.support.pages.MainMenuPage;\n import org.odk.collect.android.support.pages.SaveOrIgnoreDialog;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2NjQwNw==", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516566407", "bodyText": "I'd been trying to resist writing an Espresso test due to the feature being isolated within the widget but making recording work inline requires collaboration between a few different things (the widget and the activity for instance) so it started to feel too disjointed just writing tests at the component level.\nI do like where these tests have ended up however as they capture the high level navigation features without having to deal with any of the detail of audio recording or playback.", "author": "seadowg", "createdAt": "2020-11-03T10:32:28Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java", "diffHunk": "@@ -0,0 +1,175 @@\n+package org.odk.collect.android.feature.formentry;\n+\n+import android.Manifest;\n+import android.app.Application;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.TestDependencies;\n+import org.odk.collect.android.support.TestRuleChain;\n+import org.odk.collect.android.support.pages.FormEndPage;\n+import org.odk.collect.android.support.pages.GeneralSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.SaveOrIgnoreDialog;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModel;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModelFactory;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.odk.collect.android.support.FileUtils.copyFileFromAssets;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AudioRecordingTest {", "originalCommit": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7be3091adbca44b00eb505b45023c2e3643f985", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java\nindex 3d9f7ab8a..0db89f36f 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java\n\n@@ -21,6 +21,8 @@ import org.odk.collect.android.activities.MainMenuActivity;\n import org.odk.collect.android.support.TestDependencies;\n import org.odk.collect.android.support.TestRuleChain;\n import org.odk.collect.android.support.pages.FormEndPage;\n+import org.odk.collect.android.support.pages.FormEntryPage;\n+import org.odk.collect.android.support.pages.FormHierarchyPage;\n import org.odk.collect.android.support.pages.GeneralSettingsPage;\n import org.odk.collect.android.support.pages.MainMenuPage;\n import org.odk.collect.android.support.pages.SaveOrIgnoreDialog;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2NzE2MA==", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516567160", "bodyText": "I think I managed to take this another step in the right direction. A lot of work to do still though!", "author": "seadowg", "createdAt": "2020-11-03T10:33:42Z", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormIndexAnimationHandler.java", "diffHunk": "@@ -10,6 +10,11 @@\n  */\n public class FormIndexAnimationHandler {", "originalCommit": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e436ff7295d189ce0ff5e1401367f3b85e68c76d", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/formentry/FormIndexAnimationHandler.java b/collect_app/src/main/java/org/odk/collect/android/formentry/FormIndexAnimationHandler.java\nindex 5100ea786..2bc64c3f6 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/formentry/FormIndexAnimationHandler.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/formentry/FormIndexAnimationHandler.java\n\n@@ -10,11 +10,6 @@ import org.javarosa.core.model.FormIndex;\n  */\n public class FormIndexAnimationHandler {\n \n-    public enum Direction {\n-        FORWARDS,\n-        BACKWARDS\n-    }\n-\n     private final Listener listener;\n     private FormIndex lastIndex;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2ODM1Mw==", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516568353", "bodyText": "This basically. We could massively simplify AudioWidget's implementation by just speaking to this interface.", "author": "seadowg", "createdAt": "2020-11-03T10:35:37Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/ExternalAppRecordingRequester.java", "diffHunk": "@@ -50,4 +52,14 @@ public void denied() {\n             }\n         });\n     }\n+\n+    @Override\n+    public void onIsRecordingChanged(Consumer<Boolean> isRecordingListener) {\n+        isRecordingListener.accept(false);\n+    }\n+\n+    @Override\n+    public void onRecordingAvailable(FormEntryPrompt prompt, Consumer<String> recordingAvailableListener) {\n+        // This could be implemented using the new Activity Result API  once it's stable", "originalCommit": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e436ff7295d189ce0ff5e1401367f3b85e68c76d", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/ExternalAppRecordingRequester.java b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/ExternalAppRecordingRequester.java\nindex 70445661f..8c35d1b78 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/ExternalAppRecordingRequester.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/widgets/utilities/ExternalAppRecordingRequester.java\n\n@@ -52,14 +50,4 @@ public class ExternalAppRecordingRequester implements RecordingRequester {\n             }\n         });\n     }\n-\n-    @Override\n-    public void onIsRecordingChanged(Consumer<Boolean> isRecordingListener) {\n-        isRecordingListener.accept(false);\n-    }\n-\n-    @Override\n-    public void onRecordingAvailable(FormEntryPrompt prompt, Consumer<String> recordingAvailableListener) {\n-        // This could be implemented using the new Activity Result API  once it's stable\n-    }\n }\n"}}, {"oid": "b7be3091adbca44b00eb505b45023c2e3643f985", "url": "https://github.com/getodk/collect/commit/b7be3091adbca44b00eb505b45023c2e3643f985", "message": "Delete files on cleanup", "committedDate": "2020-11-06T11:38:31Z", "type": "forcePushed"}, {"oid": "e436ff7295d189ce0ff5e1401367f3b85e68c76d", "url": "https://github.com/getodk/collect/commit/e436ff7295d189ce0ff5e1401367f3b85e68c76d", "message": "Add testing to ViewModel", "committedDate": "2020-11-06T16:16:13Z", "type": "commit"}, {"oid": "b7f9a48d07db57c27a01c752fc6e9e2c392eba2e", "url": "https://github.com/getodk/collect/commit/b7f9a48d07db57c27a01c752fc6e9e2c392eba2e", "message": "Start recording without leaving question screen", "committedDate": "2020-11-06T16:16:13Z", "type": "commit"}, {"oid": "f02969d74fddab93cc3489d14a270abb14d02f23", "url": "https://github.com/getodk/collect/commit/f02969d74fddab93cc3489d14a270abb14d02f23", "message": "Expose abstract class instead of implementation", "committedDate": "2020-11-06T16:16:14Z", "type": "commit"}, {"oid": "c57463eff45c9f90466bd8d36c225350a01af0c3", "url": "https://github.com/getodk/collect/commit/c57463eff45c9f90466bd8d36c225350a01af0c3", "message": "Initial implementation of inline recording", "committedDate": "2020-11-06T16:16:14Z", "type": "commit"}, {"oid": "0b0e3a570fd102171a027fdc3116031f996b5933", "url": "https://github.com/getodk/collect/commit/0b0e3a570fd102171a027fdc3116031f996b5933", "message": "Rework interface", "committedDate": "2020-11-06T16:16:14Z", "type": "commit"}, {"oid": "8cf2a6ce4c929921cd838d8ad70544ece86450c1", "url": "https://github.com/getodk/collect/commit/8cf2a6ce4c929921cd838d8ad70544ece86450c1", "message": "Disable buttons on audio widget when recording in progress", "committedDate": "2020-11-06T16:16:14Z", "type": "commit"}, {"oid": "94e14614e9589bde21eb5d96ffd93e89ffb1c952", "url": "https://github.com/getodk/collect/commit/94e14614e9589bde21eb5d96ffd93e89ffb1c952", "message": "Write failing test for external widget and audio in field list", "committedDate": "2020-11-06T16:16:14Z", "type": "commit"}, {"oid": "13aac9ca106aa33dba4fb3f57315d38036d2af92", "url": "https://github.com/getodk/collect/commit/13aac9ca106aa33dba4fb3f57315d38036d2af92", "message": "Allow external widgets and audio question to work together", "committedDate": "2020-11-06T16:16:14Z", "type": "commit"}, {"oid": "e7cc71b60c5c324bc86fde4abdd5e65429954224", "url": "https://github.com/getodk/collect/commit/e7cc71b60c5c324bc86fde4abdd5e65429954224", "message": "Make sure audio files are cleaned up after recording", "committedDate": "2020-11-06T16:16:14Z", "type": "commit"}, {"oid": "f05790fee17f533ee32f96855a77349a0b7b57d6", "url": "https://github.com/getodk/collect/commit/f05790fee17f533ee32f96855a77349a0b7b57d6", "message": "Simplify FormEntryActivity and FormIndexAnimationHandler communication", "committedDate": "2020-11-06T16:16:14Z", "type": "commit"}, {"oid": "f06af002dd476aec572a6468626c8b3ba2b80ee9", "url": "https://github.com/getodk/collect/commit/f06af002dd476aec572a6468626c8b3ba2b80ee9", "message": "Add helper", "committedDate": "2020-11-06T16:16:15Z", "type": "commit"}, {"oid": "e9ae68ea6743b1b2c978a674e80f69dd4ebb1d18", "url": "https://github.com/getodk/collect/commit/e9ae68ea6743b1b2c978a674e80f69dd4ebb1d18", "message": "Use fake audio recorder view model in test to prevent timing issues", "committedDate": "2020-11-06T16:16:15Z", "type": "commit"}, {"oid": "584fbe01e15ddf7f46a20e850da091365aa33c63", "url": "https://github.com/getodk/collect/commit/584fbe01e15ddf7f46a20e850da091365aa33c63", "message": "Make sure audio recording cancels when changing screens", "committedDate": "2020-11-06T16:16:15Z", "type": "commit"}, {"oid": "0c8cacf468f8d72aaae266e0fc84919294d16eb2", "url": "https://github.com/getodk/collect/commit/0c8cacf468f8d72aaae266e0fc84919294d16eb2", "message": "Attempt to make screen transition logic a little nicer", "committedDate": "2020-11-06T16:16:15Z", "type": "commit"}, {"oid": "d59eec0debd2e8dadc654bc81203996fbb18a99f", "url": "https://github.com/getodk/collect/commit/d59eec0debd2e8dadc654bc81203996fbb18a99f", "message": "Only show stop recording button when recording", "committedDate": "2020-11-06T16:16:15Z", "type": "commit"}, {"oid": "e0678ce6d7e46574c04a9610c9fed61f2675b2cc", "url": "https://github.com/getodk/collect/commit/e0678ce6d7e46574c04a9610c9fed61f2675b2cc", "message": "Display stop button in toolbar", "committedDate": "2020-11-06T16:16:15Z", "type": "commit"}, {"oid": "81b2bd7c51ed4c7a3e88d622be32b0e64763556d", "url": "https://github.com/getodk/collect/commit/81b2bd7c51ed4c7a3e88d622be32b0e64763556d", "message": "Make sure recording cancels when form is quit", "committedDate": "2020-11-06T16:16:15Z", "type": "commit"}, {"oid": "9ae04e29f8e8246538a2daccb8c6d8320c58cedd", "url": "https://github.com/getodk/collect/commit/9ae04e29f8e8246538a2daccb8c6d8320c58cedd", "message": "Add test for createAnswerFile", "committedDate": "2020-11-06T16:16:16Z", "type": "commit"}, {"oid": "c1ba5c070e684a013a01bbd325cb45ff0f2dcc85", "url": "https://github.com/getodk/collect/commit/c1ba5c070e684a013a01bbd325cb45ff0f2dcc85", "message": "Add implementation for new methods in ExternalAppRecordingRequester", "committedDate": "2020-11-06T16:16:16Z", "type": "commit"}, {"oid": "537c57177002a162b9af2bfee9a290c3f8db1955", "url": "https://github.com/getodk/collect/commit/537c57177002a162b9af2bfee9a290c3f8db1955", "message": "Move string to correct place", "committedDate": "2020-11-06T16:16:16Z", "type": "commit"}, {"oid": "00ba7eb74322020b2921b634e10314bdc5a5d500", "url": "https://github.com/getodk/collect/commit/00ba7eb74322020b2921b634e10314bdc5a5d500", "message": "Get rid of unneeded endSession", "committedDate": "2020-11-06T16:16:16Z", "type": "commit"}, {"oid": "9c5ce05c98099818ecd59760aa47bab8a8b87679", "url": "https://github.com/getodk/collect/commit/9c5ce05c98099818ecd59760aa47bab8a8b87679", "message": "Make sure recording status updates correctly", "committedDate": "2020-11-06T16:16:16Z", "type": "commit"}, {"oid": "a2fdfa0ebec2796b60157d8f0ad71a4ad94ba141", "url": "https://github.com/getodk/collect/commit/a2fdfa0ebec2796b60157d8f0ad71a4ad94ba141", "message": "Make sure opening hierarchy doesn't break anything", "committedDate": "2020-11-06T16:16:16Z", "type": "commit"}, {"oid": "0ccf3335d3df78fd9afbde21b5b7e68a71cb51c9", "url": "https://github.com/getodk/collect/commit/0ccf3335d3df78fd9afbde21b5b7e68a71cb51c9", "message": "Don't worry about cleaning up files for now", "committedDate": "2020-11-06T16:16:16Z", "type": "commit"}, {"oid": "4db4dfca68200ec4daa47d83ac7d2d111f82c2b1", "url": "https://github.com/getodk/collect/commit/4db4dfca68200ec4daa47d83ac7d2d111f82c2b1", "message": "Move back to repository pattern", "committedDate": "2020-11-06T16:16:17Z", "type": "commit"}, {"oid": "2b7d55660a925814cdcb15fead33ff9d1f273f61", "url": "https://github.com/getodk/collect/commit/2b7d55660a925814cdcb15fead33ff9d1f273f61", "message": "Make sure it's safe to call createAnswerFile with the same file multiple times", "committedDate": "2020-11-06T16:16:17Z", "type": "commit"}, {"oid": "2e020eab1a3eefa8d6e7ab30d77553a157ee066e", "url": "https://github.com/getodk/collect/commit/2e020eab1a3eefa8d6e7ab30d77553a157ee066e", "message": "Clean up after recording audio", "committedDate": "2020-11-06T16:16:17Z", "type": "commit"}, {"oid": "0432c9ab68365d7bbc6e51a0745cf58a894aa5a3", "url": "https://github.com/getodk/collect/commit/0432c9ab68365d7bbc6e51a0745cf58a894aa5a3", "message": "Show progress dialog while saving answer files", "committedDate": "2020-11-06T16:16:17Z", "type": "commit"}, {"oid": "a32d0833593570e7b3931e7001b276288ff44fd1", "url": "https://github.com/getodk/collect/commit/a32d0833593570e7b3931e7001b276288ff44fd1", "message": "Delete files on cleanup", "committedDate": "2020-11-06T16:16:17Z", "type": "commit"}, {"oid": "a32d0833593570e7b3931e7001b276288ff44fd1", "url": "https://github.com/getodk/collect/commit/a32d0833593570e7b3931e7001b276288ff44fd1", "message": "Delete files on cleanup", "committedDate": "2020-11-06T16:16:17Z", "type": "forcePushed"}, {"oid": "86e548247dca95fd93e8982ddc7a1b38622b152b", "url": "https://github.com/getodk/collect/commit/86e548247dca95fd93e8982ddc7a1b38622b152b", "message": "Fix tests so they drive out file saving after recording", "committedDate": "2020-11-09T12:25:12Z", "type": "commit"}, {"oid": "ee8b2e27cb119b3b29fec9a1f7a7268b325aa093", "url": "https://github.com/getodk/collect/commit/ee8b2e27cb119b3b29fec9a1f7a7268b325aa093", "message": "Make sure swiping between screens works during recording", "committedDate": "2020-11-09T15:49:46Z", "type": "commit"}, {"oid": "62de68dd605b1a55d1984228ae4708532d9b4a4a", "url": "https://github.com/getodk/collect/commit/62de68dd605b1a55d1984228ae4708532d9b4a4a", "message": "Rework audio recorder tests to focus on contract", "committedDate": "2020-11-09T16:38:59Z", "type": "commit"}, {"oid": "86f47cb1389b7af5a6c9f3733f4f9270b59ec207", "url": "https://github.com/getodk/collect/commit/86f47cb1389b7af5a6c9f3733f4f9270b59ec207", "message": "Move fake view model to package so it can use same contract test", "committedDate": "2020-11-09T17:23:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5NjQ3Ng==", "url": "https://github.com/getodk/collect/pull/4190#discussion_r520796476", "bodyText": "Huh. I think this might actually address https://forum.getodk.org/t/testing-form-on-central-upload-error-a-resource-already-exists/30947? That would be good. @getodk/testers could you please quickly give this a try? On master, submitting All Widgets to Central with the same image file attached twice should fail as in the forum post. I think it will succeed after this change.", "author": "lognaturel", "createdAt": "2020-11-10T18:53:18Z", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -321,11 +322,19 @@ public void replaceAnswerFile(String questionIndex, String fileName) {\n \n     @Override\n     public String createAnswerFile(File file) {\n+        String newFileHash = FileUtils.getMd5Hash(file);\n+        String instanceDir = formController.getInstanceFile().getParent();\n+\n+        File[] answerFiles = new File(instanceDir).listFiles();\n+        for (File answerFile : answerFiles) {\n+            if (FileUtils.getMd5Hash(answerFile).equals(newFileHash)) {\n+                return answerFile.getName();", "originalCommit": "2b7d55660a925814cdcb15fead33ff9d1f273f61", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2d067f0ad838a0c1b860bc0495a4704e26868e99", "chunk": "diff --git a/collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java b/collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java\nindex 5e8b85ae3..081d21526 100644\n--- a/collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java\n+++ b/collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java\n\n@@ -321,31 +324,41 @@ public class FormSaveViewModel extends ViewModel implements ProgressDialogFragme\n     }\n \n     @Override\n-    public String createAnswerFile(File file) {\n-        String newFileHash = FileUtils.getMd5Hash(file);\n-        String instanceDir = formController.getInstanceFile().getParent();\n-\n-        File[] answerFiles = new File(instanceDir).listFiles();\n-        for (File answerFile : answerFiles) {\n-            if (FileUtils.getMd5Hash(answerFile).equals(newFileHash)) {\n-                return answerFile.getName();\n+    public LiveData<String> createAnswerFile(File file) {\n+        MutableLiveData<String> liveData = new MutableLiveData<>(null);\n+\n+        isSavingAnswerFile.setValue(true);\n+        scheduler.immediate(() -> {\n+            String newFileHash = FileUtils.getMd5Hash(file);\n+            String instanceDir = formController.getInstanceFile().getParent();\n+\n+            File[] answerFiles = new File(instanceDir).listFiles();\n+            for (File answerFile : answerFiles) {\n+                if (FileUtils.getMd5Hash(answerFile).equals(newFileHash)) {\n+                    return answerFile.getName();\n+                }\n             }\n-        }\n \n-        String fileName = file.getName();\n-        String extension = fileName.substring(fileName.lastIndexOf('.') + 1);\n-        String newFileName = System.currentTimeMillis() + \".\" + extension;\n-        String newFilePath = instanceDir + File.separator + newFileName;\n+            String fileName = file.getName();\n+            String extension = fileName.substring(fileName.lastIndexOf('.') + 1);\n+            String newFileName = System.currentTimeMillis() + \".\" + extension;\n+            String newFilePath = instanceDir + File.separator + newFileName;\n \n-        try (InputStream inputStream = new FileInputStream(file)) {\n-            try (OutputStream outputStream = new FileOutputStream(newFilePath)) {\n-                IOUtils.copy(inputStream, outputStream);\n+            try (InputStream inputStream = new FileInputStream(file)) {\n+                try (OutputStream outputStream = new FileOutputStream(newFilePath)) {\n+                    IOUtils.copy(inputStream, outputStream);\n+                }\n+            } catch (IOException ignored) {\n+                // Ignored\n             }\n-        } catch (IOException ignored) {\n-            // Ignored\n-        }\n \n-        return newFileName;\n+            return newFileName;\n+        }, fileName -> {\n+            liveData.setValue(fileName);\n+            isSavingAnswerFile.setValue(false);\n+        });\n+\n+        return liveData;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg5NTI1OQ==", "url": "https://github.com/getodk/collect/pull/4190#discussion_r520895259", "bodyText": ".4a -> m4a (doesn't really matter but might as well)", "author": "lognaturel", "createdAt": "2020-11-10T21:48:32Z", "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java", "diffHunk": "@@ -0,0 +1,157 @@\n+package org.odk.collect.android.feature.formentry;\n+\n+import android.Manifest;\n+import android.app.Application;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.ViewModel;\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.TestDependencies;\n+import org.odk.collect.android.support.TestRuleChain;\n+import org.odk.collect.android.support.pages.FormEndPage;\n+import org.odk.collect.android.support.pages.FormEntryPage;\n+import org.odk.collect.android.support.pages.FormHierarchyPage;\n+import org.odk.collect.android.support.pages.GeneralSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.SaveOrIgnoreDialog;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModelFactory;\n+import org.odk.collect.audiorecorder.testsupport.StubAudioRecorderViewModel;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.odk.collect.android.support.FileUtils.copyFileFromAssets;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AudioRecordingTest {\n+\n+    private StubAudioRecorderViewModel stubAudioRecorderViewModel;\n+\n+    public final TestDependencies testDependencies = new TestDependencies() {\n+        @Override\n+        public AudioRecorderViewModelFactory providesAudioRecorderViewModelFactory(Application application) {\n+            return new AudioRecorderViewModelFactory(application) {\n+                @Override\n+                public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {\n+                    if (stubAudioRecorderViewModel == null) {\n+                        try {\n+                            File stubRecording = File.createTempFile(\"test\", \".4a\");", "originalCommit": "86f47cb1389b7af5a6c9f3733f4f9270b59ec207", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "02af947e4ab407dc90a007c36b95a9d254fed00c", "chunk": "diff --git a/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java b/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java\nindex 8d8e6579c..ea72dc728 100644\n--- a/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java\n+++ b/collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java\n\n@@ -46,7 +46,7 @@ public class AudioRecordingTest {\n                 public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {\n                     if (stubAudioRecorderViewModel == null) {\n                         try {\n-                            File stubRecording = File.createTempFile(\"test\", \".4a\");\n+                            File stubRecording = File.createTempFile(\"test\", \".m4a\");\n                             stubRecording.deleteOnExit();\n \n                             copyFileFromAssets(\"media/test.m4a\", stubRecording.getAbsolutePath());\n"}}, {"oid": "2d067f0ad838a0c1b860bc0495a4704e26868e99", "url": "https://github.com/getodk/collect/commit/2d067f0ad838a0c1b860bc0495a4704e26868e99", "message": "Rename method", "committedDate": "2020-11-11T09:32:29Z", "type": "commit"}, {"oid": "02af947e4ab407dc90a007c36b95a9d254fed00c", "url": "https://github.com/getodk/collect/commit/02af947e4ab407dc90a007c36b95a9d254fed00c", "message": "Rename file", "committedDate": "2020-11-11T09:39:17Z", "type": "commit"}]}