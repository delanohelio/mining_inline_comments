{"pr_number": 1150, "pr_title": "GG-28399 [IGNITE-12399' Java thin client: add cache expiry policies", "pr_createdAt": "2020-05-14T11:49:52Z", "pr_url": "https://github.com/gridgain/gridgain/pull/1150", "timeline": [{"oid": "cfd43e22f6a27a89e4b2222ac13441325d8f4061", "url": "https://github.com/gridgain/gridgain/commit/cfd43e22f6a27a89e4b2222ac13441325d8f4061", "message": "GG-28399 [IGNITE-12399' Java thin client: add cache expiry policies\n\n(cherry picked from commit 4fb139d10913ba757900fa1231ba6dfa1afc16b5)", "committedDate": "2020-05-14T10:55:08Z", "type": "commit"}, {"oid": "c6283b44d4d108fba3acc7446e2b53e824e960db", "url": "https://github.com/gridgain/gridgain/commit/c6283b44d4d108fba3acc7446e2b53e824e960db", "message": "GG-28399: Default protocol version fixed", "committedDate": "2020-05-14T10:55:08Z", "type": "commit"}, {"oid": "4fc3d097f68d29b9ff4905f72233da79cfc1d7c8", "url": "https://github.com/gridgain/gridgain/commit/4fc3d097f68d29b9ff4905f72233da79cfc1d7c8", "message": "GG-28399: Added tests", "committedDate": "2020-05-14T10:55:08Z", "type": "commit"}, {"oid": "f31ac105a29490357bba01e130b20ab1873c0f5e", "url": "https://github.com/gridgain/gridgain/commit/f31ac105a29490357bba01e130b20ab1873c0f5e", "message": "GG-28399: Fixed tests", "committedDate": "2020-05-14T10:55:08Z", "type": "commit"}, {"oid": "ca0cc450e42e6c55d44bc921643434cc5a30a9a1", "url": "https://github.com/gridgain/gridgain/commit/ca0cc450e42e6c55d44bc921643434cc5a30a9a1", "message": "GG-28399: Minor fix", "committedDate": "2020-05-14T10:55:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3ODgwMw==", "url": "https://github.com/gridgain/gridgain/pull/1150#discussion_r425078803", "bodyText": "I believe that this method should be consistent with a regular cache API and be named as \"withExpirypolicy\". But since we are making a port from Ignite, let's keep the single code base for now.", "author": "ashapkin", "createdAt": "2020-05-14T11:54:25Z", "path": "modules/core/src/main/java/org/apache/ignite/client/ClientCache.java", "diffHunk": "@@ -335,12 +337,19 @@\n      */\n     public <K1, V1> ClientCache<K1, V1> withKeepBinary();\n \n+    /**\n+     * Returns cache with the specified expired policy set. This policy will be used for each operation invoked on\n+     * the returned cache.\n+     *\n+     * @return Cache instance with the specified expiry policy set.\n+     */\n+    public <K1, V1> ClientCache<K1, V1> withExpirePolicy(ExpiryPolicy expirePlc);", "originalCommit": "ca0cc450e42e6c55d44bc921643434cc5a30a9a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4236a2548da46e884da6a24ba24de8642f346807", "chunk": "diff --git a/modules/core/src/main/java/org/apache/ignite/client/ClientCache.java b/modules/core/src/main/java/org/apache/ignite/client/ClientCache.java\nindex 703b90d7cc0..87872a51474 100644\n--- a/modules/core/src/main/java/org/apache/ignite/client/ClientCache.java\n+++ b/modules/core/src/main/java/org/apache/ignite/client/ClientCache.java\n\n@@ -338,12 +338,24 @@ public interface ClientCache<K, V> {\n     public <K1, V1> ClientCache<K1, V1> withKeepBinary();\n \n     /**\n-     * Returns cache with the specified expired policy set. This policy will be used for each operation invoked on\n+     * Returns cache with the specified expiry policy set. This policy will be used for each operation invoked on\n      * the returned cache.\n      *\n+     * @param expiryPlc Expiry policy to use.\n+     * @return Cache instance with the specified expiry policy set.\n+     *\n+     * @deprecated Please use {@link #withExpiryPolicy} instead.\n+     */\n+    public <K1, V1> ClientCache<K1, V1> withExpirePolicy(ExpiryPolicy expiryPlc);\n+\n+    /**\n+     * Returns cache with the specified expiry policy set. This policy will be used for each operation invoked on\n+     * the returned cache.\n+     *\n+     * @param expiryPlc Expiry policy to use.\n      * @return Cache instance with the specified expiry policy set.\n      */\n-    public <K1, V1> ClientCache<K1, V1> withExpirePolicy(ExpiryPolicy expirePlc);\n+    public <K1, V1> ClientCache<K1, V1> withExpiryPolicy(ExpiryPolicy expiryPlc);\n \n     /**\n      * Queries cache. Supports {@link ScanQuery} and {@link SqlFieldsQuery}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3OTI1OQ==", "url": "https://github.com/gridgain/gridgain/pull/1150#discussion_r425079259", "bodyText": "\"Expiry\", but see comment above", "author": "ashapkin", "createdAt": "2020-05-14T11:55:15Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientUtils.java", "diffHunk": "@@ -338,15 +343,32 @@ void cacheConfiguration(ClientCacheConfiguration cfg, BinaryOutputStream out, Pr\n                                 w.writeByte((byte)i.getIndexType().ordinal());\n                                 w.writeInt(i.getInlineSize());\n                                 ClientUtils.collection(i.getFields().entrySet(), out, (unused5, f) -> {\n-                                        w.writeString(f.getKey());\n-                                        w.writeBoolean(f.getValue());\n-                                    }\n+                                            w.writeString(f.getKey());\n+                                            w.writeBoolean(f.getValue());\n+                                        }\n                                 );\n                             });\n-                    }\n+                        }\n                 )\n             );\n \n+            if (ver.compareTo(V1_6_0) >= 0) {\n+                itemWriter.accept(CfgItem.EXPIRE_POLICY, w -> {\n+                    ExpiryPolicy expiryPlc = cfg.getExpiryPolicy();\n+                    if (expiryPlc == null)\n+                        w.writeBoolean(false);\n+                    else {\n+                        w.writeBoolean(true);\n+                        w.writeLong(convertDuration(expiryPlc.getExpiryForCreation()));\n+                        w.writeLong(convertDuration(expiryPlc.getExpiryForUpdate()));\n+                        w.writeLong(convertDuration(expiryPlc.getExpiryForAccess()));\n+                    }\n+                });\n+            } else if (cfg.getExpiryPolicy() != null) {\n+                throw new ClientProtocolError(String.format(\"Expire policies have not supported by the server \" +", "originalCommit": "ca0cc450e42e6c55d44bc921643434cc5a30a9a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "4236a2548da46e884da6a24ba24de8642f346807", "url": "https://github.com/gridgain/gridgain/commit/4236a2548da46e884da6a24ba24de8642f346807", "message": "GG-28399: Deprecated withExpirePolicy and added withExpiryPolicy", "committedDate": "2020-05-14T12:28:51Z", "type": "commit"}]}