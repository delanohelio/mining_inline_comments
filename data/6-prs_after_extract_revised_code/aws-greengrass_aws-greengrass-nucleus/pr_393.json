{"pr_number": 393, "pr_title": "Clear auth module when component removed", "pr_createdAt": "2020-08-26T22:34:14Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393", "timeline": [{"oid": "10e72a8ba63f3ac3944687d1a75ab216817956ce", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/10e72a8ba63f3ac3944687d1a75ab216817956ce", "message": "Clear auth module when component removed", "committedDate": "2020-08-26T22:29:02Z", "type": "commit"}, {"oid": "624d71aaf31d6104a898edb9c5b2ebc97351b783", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/624d71aaf31d6104a898edb9c5b2ebc97351b783", "message": "Fix test", "committedDate": "2020-08-26T23:18:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzgxNjQwNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r477816404", "bodyText": "this is wrong. The name of this node could be anything. Use kernel.findServiceForNode to get the service name", "author": "MikeDombo", "createdAt": "2020-08-27T00:52:08Z", "path": "src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java", "diffHunk": "@@ -78,6 +80,9 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n                         return;\n                     }\n                     if (!newv.childOf(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n+                        if (newv.childOf(SERVICES_NAMESPACE_TOPIC) && WhatHappened.childRemoved.equals(why)) {\n+                            authModule.clearPermissions(newv.getName());", "originalCommit": "624d71aaf31d6104a898edb9c5b2ebc97351b783", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0a4292510dbc32fc3e0d3b9d74cb14c3c9f38287", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\nindex 6abb136d6..27de2d47a 100644\n--- a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n+++ b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n\n@@ -79,25 +78,36 @@ public class AuthorizationHandler  {\n                     if (newv == null) {\n                         return;\n                     }\n-                    if (!newv.childOf(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n-                        if (newv.childOf(SERVICES_NAMESPACE_TOPIC) && WhatHappened.childRemoved.equals(why)) {\n-                            authModule.clearPermissions(newv.getName());\n+\n+                     //If there is a childChanged event, it has to be the 'accessControl' Topic that has bubbled up\n+                     //If there is a childRemoved event, it could be either the 'accessControl' Topic or the\n+                     //'parameters' Topics that has bubbled up, so we need to handle and filter out all other\n+                     // WhatHappeneds\n+                     if (why.equals(WhatHappened.childChanged)) {\n+                        if (!newv.childOf(PARAMETERS_CONFIG_KEY)\n+                                || !newv.getName().equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n+                            return;\n                         }\n+                        if (!(newv instanceof Topic)) {\n+                            logger.atError(\"update-authorization-formatting-error\")\n+                                    .addKeyValue(\"InvalidNodeName\", newv.getFullName())\n+                                    .log(\"Incorrect formatting while updating the authorization ACL.\");\n+                            return;\n+                        }\n+                    } else if (why.equals(WhatHappened.childRemoved) && !newv.getName().equals(PARAMETERS_CONFIG_KEY)\n+                             && !newv.getName().equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n                         return;\n                     }\n-                    if (!(newv instanceof Topic)) {\n-                        logger.atError(\"update-authorization-formatting-error\")\n-                                .addKeyValue(\"InvalidNodeName\", newv.getFullName())\n-                                .log(\"Incorrect formatting while updating the authorization ACL.\");\n-                        return;\n-                    }\n-                    Topic updatedTopic = (Topic) newv;\n-                    String componentName = findServiceForNode(updatedTopic);\n-                    //If there is a change in a node, reload that one component's ACL\n-                    List<AuthorizationPolicy> updatedComponentPolicies = policyParser\n-                            .parseAuthorizationPolicyList(componentName, updatedTopic, logger);\n-                    this.loadAuthorizationPolicies(updatedTopic.getName(), updatedComponentPolicies, true);\n \n+                    //Reload all policies\n+                    //TODO: Add more sophisticated logic to specifically update policies scoped to this component,\n+                    // instead of reloading everything on every update.\n+                    // https://issues-iad.amazon.com/issues/V243584397\n+                    Map<String, List<AuthorizationPolicy>> reloadedPolicies = policyParser\n+                            .parseAllAuthorizationPolicies(kernel);\n+                    for (Map.Entry<String, List<AuthorizationPolicy>> acl : reloadedPolicies.entrySet()) {\n+                        this.loadAuthorizationPolicies(acl.getKey(), acl.getValue(), true);\n+                    }\n                 });\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg2MjYzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r477862636", "bodyText": "This  makes it interesting, as we can have the same component added again, and now the policies should be added again. Looks like we need to reload the table again on addition of components as well.", "author": "prateek-y", "createdAt": "2020-08-27T01:19:13Z", "path": "src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java", "diffHunk": "@@ -78,6 +80,9 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n                         return;\n                     }\n                     if (!newv.childOf(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n+                        if (newv.childOf(SERVICES_NAMESPACE_TOPIC) && WhatHappened.childRemoved.equals(why)) {", "originalCommit": "624d71aaf31d6104a898edb9c5b2ebc97351b783", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA5MjI2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483092264", "bodyText": "If there is a component added, now it will not fall into any if statement and continue to run the lines reloading the policies. I added a test step for this.", "author": "youtuyy", "createdAt": "2020-09-03T16:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg2MjYzNg=="}], "type": "inlineReview", "revised_code": {"commit": "0a4292510dbc32fc3e0d3b9d74cb14c3c9f38287", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\nindex 6abb136d6..27de2d47a 100644\n--- a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n+++ b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n\n@@ -79,25 +78,36 @@ public class AuthorizationHandler  {\n                     if (newv == null) {\n                         return;\n                     }\n-                    if (!newv.childOf(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n-                        if (newv.childOf(SERVICES_NAMESPACE_TOPIC) && WhatHappened.childRemoved.equals(why)) {\n-                            authModule.clearPermissions(newv.getName());\n+\n+                     //If there is a childChanged event, it has to be the 'accessControl' Topic that has bubbled up\n+                     //If there is a childRemoved event, it could be either the 'accessControl' Topic or the\n+                     //'parameters' Topics that has bubbled up, so we need to handle and filter out all other\n+                     // WhatHappeneds\n+                     if (why.equals(WhatHappened.childChanged)) {\n+                        if (!newv.childOf(PARAMETERS_CONFIG_KEY)\n+                                || !newv.getName().equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n+                            return;\n                         }\n+                        if (!(newv instanceof Topic)) {\n+                            logger.atError(\"update-authorization-formatting-error\")\n+                                    .addKeyValue(\"InvalidNodeName\", newv.getFullName())\n+                                    .log(\"Incorrect formatting while updating the authorization ACL.\");\n+                            return;\n+                        }\n+                    } else if (why.equals(WhatHappened.childRemoved) && !newv.getName().equals(PARAMETERS_CONFIG_KEY)\n+                             && !newv.getName().equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n                         return;\n                     }\n-                    if (!(newv instanceof Topic)) {\n-                        logger.atError(\"update-authorization-formatting-error\")\n-                                .addKeyValue(\"InvalidNodeName\", newv.getFullName())\n-                                .log(\"Incorrect formatting while updating the authorization ACL.\");\n-                        return;\n-                    }\n-                    Topic updatedTopic = (Topic) newv;\n-                    String componentName = findServiceForNode(updatedTopic);\n-                    //If there is a change in a node, reload that one component's ACL\n-                    List<AuthorizationPolicy> updatedComponentPolicies = policyParser\n-                            .parseAuthorizationPolicyList(componentName, updatedTopic, logger);\n-                    this.loadAuthorizationPolicies(updatedTopic.getName(), updatedComponentPolicies, true);\n \n+                    //Reload all policies\n+                    //TODO: Add more sophisticated logic to specifically update policies scoped to this component,\n+                    // instead of reloading everything on every update.\n+                    // https://issues-iad.amazon.com/issues/V243584397\n+                    Map<String, List<AuthorizationPolicy>> reloadedPolicies = policyParser\n+                            .parseAllAuthorizationPolicies(kernel);\n+                    for (Map.Entry<String, List<AuthorizationPolicy>> acl : reloadedPolicies.entrySet()) {\n+                        this.loadAuthorizationPolicies(acl.getKey(), acl.getValue(), true);\n+                    }\n                 });\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg3OTU1OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r478879558", "bodyText": "This may no longer be the case...take a look at #399\nAlthough I can probably just modify my PR to accommodate this. Let's sync up to discuss how we want to implement this.", "author": "avipinku", "createdAt": "2020-08-28T07:22:54Z", "path": "src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java", "diffHunk": "@@ -78,6 +80,9 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n                         return;\n                     }\n                     if (!newv.childOf(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n+                        if (newv.childOf(SERVICES_NAMESPACE_TOPIC) && WhatHappened.childRemoved.equals(why)) {", "originalCommit": "624d71aaf31d6104a898edb9c5b2ebc97351b783", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0a4292510dbc32fc3e0d3b9d74cb14c3c9f38287", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\nindex 6abb136d6..27de2d47a 100644\n--- a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n+++ b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n\n@@ -79,25 +78,36 @@ public class AuthorizationHandler  {\n                     if (newv == null) {\n                         return;\n                     }\n-                    if (!newv.childOf(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n-                        if (newv.childOf(SERVICES_NAMESPACE_TOPIC) && WhatHappened.childRemoved.equals(why)) {\n-                            authModule.clearPermissions(newv.getName());\n+\n+                     //If there is a childChanged event, it has to be the 'accessControl' Topic that has bubbled up\n+                     //If there is a childRemoved event, it could be either the 'accessControl' Topic or the\n+                     //'parameters' Topics that has bubbled up, so we need to handle and filter out all other\n+                     // WhatHappeneds\n+                     if (why.equals(WhatHappened.childChanged)) {\n+                        if (!newv.childOf(PARAMETERS_CONFIG_KEY)\n+                                || !newv.getName().equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n+                            return;\n                         }\n+                        if (!(newv instanceof Topic)) {\n+                            logger.atError(\"update-authorization-formatting-error\")\n+                                    .addKeyValue(\"InvalidNodeName\", newv.getFullName())\n+                                    .log(\"Incorrect formatting while updating the authorization ACL.\");\n+                            return;\n+                        }\n+                    } else if (why.equals(WhatHappened.childRemoved) && !newv.getName().equals(PARAMETERS_CONFIG_KEY)\n+                             && !newv.getName().equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n                         return;\n                     }\n-                    if (!(newv instanceof Topic)) {\n-                        logger.atError(\"update-authorization-formatting-error\")\n-                                .addKeyValue(\"InvalidNodeName\", newv.getFullName())\n-                                .log(\"Incorrect formatting while updating the authorization ACL.\");\n-                        return;\n-                    }\n-                    Topic updatedTopic = (Topic) newv;\n-                    String componentName = findServiceForNode(updatedTopic);\n-                    //If there is a change in a node, reload that one component's ACL\n-                    List<AuthorizationPolicy> updatedComponentPolicies = policyParser\n-                            .parseAuthorizationPolicyList(componentName, updatedTopic, logger);\n-                    this.loadAuthorizationPolicies(updatedTopic.getName(), updatedComponentPolicies, true);\n \n+                    //Reload all policies\n+                    //TODO: Add more sophisticated logic to specifically update policies scoped to this component,\n+                    // instead of reloading everything on every update.\n+                    // https://issues-iad.amazon.com/issues/V243584397\n+                    Map<String, List<AuthorizationPolicy>> reloadedPolicies = policyParser\n+                            .parseAllAuthorizationPolicies(kernel);\n+                    for (Map.Entry<String, List<AuthorizationPolicy>> acl : reloadedPolicies.entrySet()) {\n+                        this.loadAuthorizationPolicies(acl.getKey(), acl.getValue(), true);\n+                    }\n                 });\n     }\n \n"}}, {"oid": "4b0a16d27bf5045bc37b890924e28d47c90f5fbd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4b0a16d27bf5045bc37b890924e28d47c90f5fbd", "message": "Merge remote-tracking branch 'origin/master'", "committedDate": "2020-08-28T22:06:36Z", "type": "commit"}, {"oid": "6a9345802e0f4c871401ac37e796c5ab971df9c2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6a9345802e0f4c871401ac37e796c5ab971df9c2", "message": "Merge remote-tracking branch 'origin/master'", "committedDate": "2020-09-02T07:15:15Z", "type": "commit"}, {"oid": "0a4292510dbc32fc3e0d3b9d74cb14c3c9f38287", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0a4292510dbc32fc3e0d3b9d74cb14c3c9f38287", "message": "Merge remote-tracking branch 'origin/master'\n\n# Conflicts:\n#\tsrc/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCPubSubTest.java\n#\tsrc/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java", "committedDate": "2020-09-02T23:55:45Z", "type": "commit"}, {"oid": "ceede654d29e82dd1917551c190e9427093eb9ab", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ceede654d29e82dd1917551c190e9427093eb9ab", "message": "rebase", "committedDate": "2020-09-03T15:55:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0NjkwOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483146908", "bodyText": "Do we need this with ashay's change to reload all of the config?", "author": "prateek-y", "createdAt": "2020-09-03T17:37:36Z", "path": "src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java", "diffHunk": "@@ -94,9 +96,15 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n                                     .log(\"Incorrect formatting while updating the authorization ACL.\");\n                             return;\n                         }\n-                    } else if (why.equals(WhatHappened.childRemoved) && !newv.getName().equals(PARAMETERS_CONFIG_KEY)\n-                             && !newv.getName().equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n-                        return;\n+                    } else if (WhatHappened.childRemoved.equals(why)) {\n+                        if (newv.parent.getName().equals(SERVICES_NAMESPACE_TOPIC)) {\n+                            authModule.clearPermissions(findServiceForNode(newv));", "originalCommit": "ceede654d29e82dd1917551c190e9427093eb9ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI2MzMzMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483263333", "bodyText": "Lets add the test for pub sub removal, and handle that case as discussed offline.", "author": "prateek-y", "createdAt": "2020-09-03T21:27:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0NjkwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMyMTA3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483321070", "bodyText": "Removed calling clearPermissions() on component removals and modified reload of policies to handle that. Added test to remove pubsub and check for auth module.", "author": "youtuyy", "createdAt": "2020-09-04T00:27:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0NjkwOA=="}], "type": "inlineReview", "revised_code": {"commit": "3defeab49176c9210ee38a7dec7085c9aec89bc5", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\nindex b15a0cd21..7a2905d9c 100644\n--- a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n+++ b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n\n@@ -96,15 +95,10 @@ public class AuthorizationHandler  {\n                                     .log(\"Incorrect formatting while updating the authorization ACL.\");\n                             return;\n                         }\n-                    } else if (WhatHappened.childRemoved.equals(why)) {\n-                        if (newv.parent.getName().equals(SERVICES_NAMESPACE_TOPIC)) {\n-                            authModule.clearPermissions(findServiceForNode(newv));\n-                            return;\n-                        }\n-                        if (!newv.getName().equals(PARAMETERS_CONFIG_KEY) && !newv.getName()\n-                                .equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n-                            return;\n-                        }\n+                    } else if (WhatHappened.childRemoved.equals(why) && !newv.parent.getName()\n+                            .equals(SERVICES_NAMESPACE_TOPIC) && !newv.getName().equals(PARAMETERS_CONFIG_KEY) && !newv\n+                            .getName().equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n+                        return;\n                     }\n \n                     //Reload all policies\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0NTI4Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483145286", "bodyText": "Could you also change this to WhatHappened.childChanged.equals(why) like you did below?", "author": "avipinku", "createdAt": "2020-09-03T17:34:33Z", "path": "src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java", "diffHunk": "@@ -79,13 +81,13 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n                         return;\n                     }\n \n-                     //If there is a childChanged event, it has to be the 'accessControl' Topic that has bubbled up\n-                     //If there is a childRemoved event, it could be either the 'accessControl' Topic or the\n-                     //'parameters' Topics that has bubbled up, so we need to handle and filter out all other\n-                     // WhatHappeneds\n-                     if (why.equals(WhatHappened.childChanged)) {\n-                        if (!newv.childOf(PARAMETERS_CONFIG_KEY)\n-                                || !newv.getName().equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n+                    //If there is a childChanged event, it has to be the 'accessControl' Topic that has bubbled up\n+                    //If there is a childRemoved event, it could be the component is removed, or either the\n+                    //'accessControl' Topic or/the 'parameters' Topics that has bubbled up, so we need to handle and\n+                    //filter out all other WhatHappeneds\n+                    if (why.equals(WhatHappened.childChanged)) {", "originalCommit": "ceede654d29e82dd1917551c190e9427093eb9ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2OTYyMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483169621", "bodyText": "done", "author": "youtuyy", "createdAt": "2020-09-03T18:19:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0NTI4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a52ad3850cd9b3259038213500ec37fb6c481502", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\nindex b15a0cd21..bf9111fed 100644\n--- a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n+++ b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationHandler.java\n\n@@ -85,7 +85,7 @@ public class AuthorizationHandler  {\n                     //If there is a childRemoved event, it could be the component is removed, or either the\n                     //'accessControl' Topic or/the 'parameters' Topics that has bubbled up, so we need to handle and\n                     //filter out all other WhatHappeneds\n-                    if (why.equals(WhatHappened.childChanged)) {\n+                    if (WhatHappened.childChanged.equals(why)) {\n                         if (!newv.childOf(PARAMETERS_CONFIG_KEY) || !newv.getName()\n                                 .equals(ACCESS_CONTROL_NAMESPACE_TOPIC)) {\n                             return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0OTcyOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483149729", "bodyText": "Before removing the serviceTopic, could you validate that pub/sub works up above here, and then test that the policies have been removed after the serviceTopic removal?", "author": "avipinku", "createdAt": "2020-09-03T17:42:54Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCPubSubTest.java", "diffHunk": "@@ -169,6 +169,35 @@ void GIVEN_pubsubclient_WHEN_authorized_THEN_parameters_child_removed_THEN_updat\n         assertThrows(PubSubException.class, () -> c.publishToTopic(\"a\", \"some message\".getBytes(StandardCharsets.UTF_8)));\n     }\n \n+    @Test\n+    void GIVEN_pubsubclient_WHEN_service_removed_and_added_THEN_fail_and_succeed() throws Exception {\n+        kernel = prepareKernelFromConfigFile(\"pubsub_authorized.yaml\",\n+                TEST_SERVICE_NAME, this.getClass());\n+        KernelIPCClientConfig config = getIPCConfigForService(TEST_SERVICE_NAME, kernel);\n+        client = new IPCClientImpl(config);\n+        PubSub c = new PubSubImpl(client);\n+        Pair<CompletableFuture<Void>, Consumer<byte[]>> cb = asyncAssertOnConsumer((m) -> {\n+            assertEquals(\"some message\", new String(m, StandardCharsets.UTF_8));\n+        });\n+", "originalCommit": "ceede654d29e82dd1917551c190e9427093eb9ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a52ad3850cd9b3259038213500ec37fb6c481502", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCPubSubTest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCPubSubTest.java\nindex d94e45eaf..1ca9adf86 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCPubSubTest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCPubSubTest.java\n\n@@ -179,6 +179,9 @@ class IPCPubSubTest {\n         Pair<CompletableFuture<Void>, Consumer<byte[]>> cb = asyncAssertOnConsumer((m) -> {\n             assertEquals(\"some message\", new String(m, StandardCharsets.UTF_8));\n         });\n+        c.subscribeToTopic(\"a\", cb.getRight());\n+        c.publishToTopic(\"a\", \"some message\".getBytes(StandardCharsets.UTF_8));\n+        cb.getLeft().get(2, TimeUnit.SECONDS);\n \n         // Remove the service topic\n         Topics serviceTopic = kernel.findServiceTopic(TEST_SERVICE_NAME);\n"}}, {"oid": "1aaaddef6bbba71e54c0d5e85d9cee4e6f5022d1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1aaaddef6bbba71e54c0d5e85d9cee4e6f5022d1", "message": "Merge remote-tracking branch 'origin/master'", "committedDate": "2020-09-03T18:07:01Z", "type": "commit"}, {"oid": "a52ad3850cd9b3259038213500ec37fb6c481502", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a52ad3850cd9b3259038213500ec37fb6c481502", "message": "address comments", "committedDate": "2020-09-03T18:15:30Z", "type": "commit"}, {"oid": "1423425dbdbe273c62ea7e4f67ff275a46551b11", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1423425dbdbe273c62ea7e4f67ff275a46551b11", "message": "Merge remote-tracking branch 'origin/master'", "committedDate": "2020-09-04T00:18:52Z", "type": "commit"}, {"oid": "3defeab49176c9210ee38a7dec7085c9aec89bc5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3defeab49176c9210ee38a7dec7085c9aec89bc5", "message": "fix policy reload", "committedDate": "2020-09-04T00:23:13Z", "type": "commit"}, {"oid": "1c8dd8b3074ec815abe42f7b3f3ae54d32ea6af9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1c8dd8b3074ec815abe42f7b3f3ae54d32ea6af9", "message": "fix ut", "committedDate": "2020-09-04T00:42:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MjQxMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483342411", "bodyText": "Not needed?", "author": "prateek-y", "createdAt": "2020-09-04T01:54:17Z", "path": "src/main/java/com/aws/iot/evergreen/auth/AuthorizationModule.java", "diffHunk": "@@ -43,12 +44,34 @@ public void addPermission(final String destination, Permission permission) throw\n      * Clear the permission list for a given destination. This is used when updating policies for a component.\n      * @param destination destination value\n      */\n-    public void clearComponentPermissions(String destination) {\n+    public void deletePermissionsWithDestination(String destination) {\n         if (permissions.containsKey(destination) && !Utils.isEmpty(permissions.get(destination))) {\n             permissions.get(destination).clear();\n         }\n     }\n \n+    /**\n+     * Clear the permission list with a given principal.\n+     *\n+     * @param component component name\n+     */\n+    public void deletePermissionsWithPrincipal(String component) {\n+        for (Map.Entry<String, List<Permission>> permissionSet : permissions.entrySet()) {\n+            permissionSet.getValue().removeIf(entry -> entry.hasPrincipal(component));\n+        }\n+    }\n+\n+    /**\n+     * Clear permissions for a given component. This is used when a component is removed.\n+     *\n+     * @param component component name\n+     */\n+    public void clearPermissions(String component) {", "originalCommit": "1c8dd8b3074ec815abe42f7b3f3ae54d32ea6af9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0NTU1OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483345558", "bodyText": "cleaned", "author": "youtuyy", "createdAt": "2020-09-04T02:06:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MjQxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c9b5f031e059629976275068d29c5de7b71f3f79", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationModule.java b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationModule.java\nindex 79ab8589d..73494b632 100644\n--- a/src/main/java/com/aws/iot/evergreen/auth/AuthorizationModule.java\n+++ b/src/main/java/com/aws/iot/evergreen/auth/AuthorizationModule.java\n\n@@ -50,28 +49,6 @@ public class AuthorizationModule {\n         }\n     }\n \n-    /**\n-     * Clear the permission list with a given principal.\n-     *\n-     * @param component component name\n-     */\n-    public void deletePermissionsWithPrincipal(String component) {\n-        for (Map.Entry<String, List<Permission>> permissionSet : permissions.entrySet()) {\n-            permissionSet.getValue().removeIf(entry -> entry.hasPrincipal(component));\n-        }\n-    }\n-\n-    /**\n-     * Clear permissions for a given component. This is used when a component is removed.\n-     *\n-     * @param component component name\n-     */\n-    public void clearPermissions(String component) {\n-        deletePermissionsWithPrincipal(component);\n-        deletePermissionsWithDestination(component);\n-        permissions.remove(component);\n-    }\n-\n     /**\n      * Check if the combination of destination,principal,operation,resource exists in the table.\n      * @param destination destination value\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MjUyOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/393#discussion_r483342528", "bodyText": "Only  needed to test deletePermissionsWithDestination ?", "author": "prateek-y", "createdAt": "2020-09-04T01:54:47Z", "path": "src/test/java/com/aws/iot/evergreen/auth/AuthorizationModuleTest.java", "diffHunk": "@@ -79,6 +81,28 @@ void Given_authZmodule_WHEN_added_entries_THEN_retrieve_works(String destination\n         assertTrue(module.isPresent(destination, permission));\n     }\n \n+    @Test\n+    void Given_authZmodule_WHEN_given_component_and_clear_permissions_THEN_delete_permissions() {\n+        AuthorizationModule module = new AuthorizationModule();\n+        permissionEntries().forEach(entry -> {\n+            String destination = (String)entry.get()[0];\n+            String principal = (String)entry.get()[1];\n+            String op = (String)entry.get()[2];\n+            String resource = (String)entry.get()[3];\n+            try {\n+                Permission permission = Permission.builder().principal(principal).operation(op).resource(resource).build();\n+                module.addPermission(destination, permission);\n+                assertTrue(module.isPresent(destination, permission));\n+            } catch (AuthorizationException e) {\n+                fail(\"Encountered exception \", e);\n+            }\n+        });\n+        String componentToRemove = \"ComponentB\";\n+        module.clearPermissions(componentToRemove);", "originalCommit": "1c8dd8b3074ec815abe42f7b3f3ae54d32ea6af9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9b5f031e059629976275068d29c5de7b71f3f79", "chunk": "diff --git a/src/test/java/com/aws/iot/evergreen/auth/AuthorizationModuleTest.java b/src/test/java/com/aws/iot/evergreen/auth/AuthorizationModuleTest.java\nindex 5b586b1f9..83b52dfb7 100644\n--- a/src/test/java/com/aws/iot/evergreen/auth/AuthorizationModuleTest.java\n+++ b/src/test/java/com/aws/iot/evergreen/auth/AuthorizationModuleTest.java\n\n@@ -98,9 +97,8 @@ public class AuthorizationModuleTest {\n             }\n         });\n         String componentToRemove = \"ComponentB\";\n-        module.clearPermissions(componentToRemove);\n-        assertEquals(module.permissions.get(\"ComponentA\").size(), 1);\n-        assertNull(module.permissions.get(componentToRemove));\n+        module.deletePermissionsWithDestination(componentToRemove);\n+        assertEquals(module.permissions.get(\"ComponentB\").size(), 0);\n     }\n \n     @Test\n"}}, {"oid": "c9b5f031e059629976275068d29c5de7b71f3f79", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c9b5f031e059629976275068d29c5de7b71f3f79", "message": "remove unused methods", "committedDate": "2020-09-04T02:05:20Z", "type": "commit"}, {"oid": "b62e2581c2b1c8d3a97c6c828b4ec43e318b8878", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b62e2581c2b1c8d3a97c6c828b4ec43e318b8878", "message": "Merge branch 'master' into auth-remove-component", "committedDate": "2020-09-08T17:20:34Z", "type": "commit"}, {"oid": "0b688c71a7ed0acb90cb7df760c0853ee79eef53", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0b688c71a7ed0acb90cb7df760c0853ee79eef53", "message": "Merge branch 'master' into auth-remove-component", "committedDate": "2020-09-10T16:15:33Z", "type": "commit"}]}