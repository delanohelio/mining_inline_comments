{"pr_number": 140, "pr_title": "Support lifecycle platform", "pr_createdAt": "2020-03-26T17:45:54Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/140", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc4ODcyMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/140#discussion_r398788721", "bodyText": "Nit -Serializer feels like too broad a name, when the scope of this is limited to YAML/Json. Also currently this class seems to be functioning more as a factory than a serializer/deserializer.", "author": "shaguptashaikh", "createdAt": "2020-03-26T18:12:42Z", "path": "src/main/java/com/aws/iot/evergreen/util/Serializer.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.aws.iot.evergreen.util;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+\n+public final class Serializer {", "originalCommit": "dec23e7d1348de3166ce8060ee526cc4d0fdb6c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1MTc4OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/140#discussion_r398851788", "bodyText": "Good call. It's intent to be a factory. Updated.", "author": "wikimonkey", "createdAt": "2020-03-26T19:55:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc4ODcyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "69fd5762867ae4c152f9bac594a18150c6310ca0", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/util/Serializer.java b/src/main/java/com/aws/iot/evergreen/util/Serializer.java\ndeleted file mode 100644\nindex 7f3eabccf..000000000\n--- a/src/main/java/com/aws/iot/evergreen/util/Serializer.java\n+++ /dev/null\n\n@@ -1,19 +0,0 @@\n-package com.aws.iot.evergreen.util;\n-\n-import com.fasterxml.jackson.annotation.JsonInclude;\n-import com.fasterxml.jackson.databind.MapperFeature;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n-\n-public final class Serializer {\n-    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper(new YAMLFactory());\n-\n-    static {\n-        OBJECT_MAPPER.configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n-        OBJECT_MAPPER.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n-    }\n-\n-    public static ObjectMapper getObjectMapper() {\n-        return OBJECT_MAPPER;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5MTE1NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/140#discussion_r398791155", "bodyText": "Since we've put this class as a common, is the intention so that any EG code can use it? In that case anyone trying to use this will be blocked until acquiring a lock, is that acceptable?", "author": "shaguptashaikh", "createdAt": "2020-03-26T18:16:34Z", "path": "src/main/java/com/aws/iot/evergreen/util/Serializer.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.aws.iot.evergreen.util;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+\n+public final class Serializer {\n+    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper(new YAMLFactory());", "originalCommit": "dec23e7d1348de3166ce8060ee526cc4d0fdb6c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1MTg0Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/140#discussion_r398851846", "bodyText": "The serializer factory can provide serializers including recipe serializer.\nI didn't do lazy initialization, it's initialization on demand, so there is no lock for using it.", "author": "wikimonkey", "createdAt": "2020-03-26T19:55:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5MTE1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "69fd5762867ae4c152f9bac594a18150c6310ca0", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/util/Serializer.java b/src/main/java/com/aws/iot/evergreen/util/Serializer.java\ndeleted file mode 100644\nindex 7f3eabccf..000000000\n--- a/src/main/java/com/aws/iot/evergreen/util/Serializer.java\n+++ /dev/null\n\n@@ -1,19 +0,0 @@\n-package com.aws.iot.evergreen.util;\n-\n-import com.fasterxml.jackson.annotation.JsonInclude;\n-import com.fasterxml.jackson.databind.MapperFeature;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n-\n-public final class Serializer {\n-    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper(new YAMLFactory());\n-\n-    static {\n-        OBJECT_MAPPER.configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n-        OBJECT_MAPPER.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n-    }\n-\n-    public static ObjectMapper getObjectMapper() {\n-        return OBJECT_MAPPER;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5MDk4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/140#discussion_r398990989", "bodyText": "It's very neat but I'm concerned that we are hiding the PlatformResolver.resolve logic in a Deserializer.\nI would prefer separating the deserialization vs resolve platform.\n\nString -> RecipeDoc via deserialization.\nRecipeDoc -> Recipe via resolving platform.\n\nBut this would create one more layer of conversion and seems an overkill for now. We can see what others think.", "author": "leaf94", "createdAt": "2020-03-27T01:49:17Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/Package.java", "diffHunk": "@@ -98,4 +106,16 @@ public Package(@JsonProperty(\"RecipeTemplateVersion\") RecipeTemplateVersion reci\n     public Semver getVersion() {\n         return version;\n     }\n+\n+    private static class MapFieldDeserializer extends JsonDeserializer<Map<String, Object>> {\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public Map<String, Object> deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)\n+                throws IOException {\n+            Map<Object, Object> map =\n+                    SerializerFactory.getRecipeSerializer().convertValue(jsonParser.readValueAsTree(), Map.class);\n+\n+            return (Map<String, Object>) PlatformResolver.resolvePlatform(map);\n+        }\n+    }", "originalCommit": "1ac5eeaf3b0a96f37e54a4018bae944479bd8999", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5MDg0Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/140#discussion_r399490843", "bodyText": "Discussed offline, we are aligned that although additional layer of model will add good separation, we don't want to add additional memory usage.\nOur mental model is deserializer could be smart to contain the conversion logic.", "author": "leaf94", "createdAt": "2020-03-27T19:23:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5MDk4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "69fd5762867ae4c152f9bac594a18150c6310ca0", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/packagemanager/models/Package.java b/src/main/java/com/aws/iot/evergreen/packagemanager/models/Package.java\nindex ee6f41bac..2e2d2c517 100644\n--- a/src/main/java/com/aws/iot/evergreen/packagemanager/models/Package.java\n+++ b/src/main/java/com/aws/iot/evergreen/packagemanager/models/Package.java\n\n@@ -94,11 +95,11 @@ public class Package {\n         this.version = new Semver(version.toString(), Semver.SemverType.NPM);\n         this.description = description;\n         this.publisher = publisher;\n-        this.packageParameters = packageParameters != null ? packageParameters : Collections.emptySet();\n-        this.lifecycle = lifecycle != null ? lifecycle : Collections.emptyMap();\n-        this.artifacts = artifacts != null ? artifacts : Collections.emptyList();\n-        this.dependencies = dependencies != null ? dependencies : Collections.emptyMap();\n-        this.requires = requires != null ? requires : Collections.emptyList();\n+        this.packageParameters = packageParameters == null ? Collections.emptySet() : packageParameters;\n+        this.lifecycle = lifecycle == null ? Collections.emptyMap() : lifecycle;\n+        this.artifacts = artifacts == null ? Collections.emptyList() : artifacts;\n+        this.dependencies = dependencies == null ? Collections.emptyMap() : dependencies;\n+        this.requires = requires == null ? Collections.emptyList() : requires;\n         this.dependencyPackages = new HashSet<>();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0MjUyOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/140#discussion_r399442529", "bodyText": "this doesn't need to be a static block, you can set features when you create the mapper. I think it is \".with\" or \".configure\" or something like that.", "author": "MikeDombo", "createdAt": "2020-03-27T17:53:46Z", "path": "src/main/java/com/aws/iot/evergreen/util/SerializerFactory.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package com.aws.iot.evergreen.util;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+\n+public final class SerializerFactory {\n+    private static final ObjectMapper RECIPE_SERIALIZER = new ObjectMapper(new YAMLFactory());\n+\n+    static {\n+        RECIPE_SERIALIZER.configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);", "originalCommit": "1ac5eeaf3b0a96f37e54a4018bae944479bd8999", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwMzA0NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/140#discussion_r399503045", "bodyText": "Yep, updated.", "author": "wikimonkey", "createdAt": "2020-03-27T19:48:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0MjUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "69fd5762867ae4c152f9bac594a18150c6310ca0", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/util/SerializerFactory.java b/src/main/java/com/aws/iot/evergreen/util/SerializerFactory.java\nindex 9e6a9ce8c..c29b9ed1f 100644\n--- a/src/main/java/com/aws/iot/evergreen/util/SerializerFactory.java\n+++ b/src/main/java/com/aws/iot/evergreen/util/SerializerFactory.java\n\n@@ -6,12 +6,9 @@ import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n \n public final class SerializerFactory {\n-    private static final ObjectMapper RECIPE_SERIALIZER = new ObjectMapper(new YAMLFactory());\n-\n-    static {\n-        RECIPE_SERIALIZER.configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n-        RECIPE_SERIALIZER.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n-    }\n+    private static final ObjectMapper RECIPE_SERIALIZER =\n+            new ObjectMapper(new YAMLFactory()).configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true)\n+                    .setSerializationInclusion(JsonInclude.Include.NON_NULL);\n \n     public static ObjectMapper getRecipeSerializer() {\n         return RECIPE_SERIALIZER;\n"}}, {"oid": "69fd5762867ae4c152f9bac594a18150c6310ca0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/69fd5762867ae4c152f9bac594a18150c6310ca0", "message": "change per comments", "committedDate": "2020-03-27T22:43:09Z", "type": "forcePushed"}, {"oid": "5fd6bba809a1eaec66c7948f99e5938c04238938", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5fd6bba809a1eaec66c7948f99e5938c04238938", "message": "change per comments", "committedDate": "2020-03-29T05:42:45Z", "type": "forcePushed"}, {"oid": "3a83f0fd14792b15c8f6d1fa12320dde0350ea5f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3a83f0fd14792b15c8f6d1fa12320dde0350ea5f", "message": "support platform in lifecycle of recipe", "committedDate": "2020-03-30T18:12:50Z", "type": "commit"}, {"oid": "ac43197adebbe081e09e89fe420b3fde32475eae", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ac43197adebbe081e09e89fe420b3fde32475eae", "message": "rename serializer factory", "committedDate": "2020-03-30T18:12:50Z", "type": "commit"}, {"oid": "2a88f0f618109ec83e8cb0cab19575f61ce029ef", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2a88f0f618109ec83e8cb0cab19575f61ce029ef", "message": "change per comments", "committedDate": "2020-03-30T18:12:50Z", "type": "commit"}, {"oid": "5eb83dd3605fd5b4e3a6b306524cf9fda0cc6e93", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5eb83dd3605fd5b4e3a6b306524cf9fda0cc6e93", "message": "fix a few PMD violations", "committedDate": "2020-03-30T18:12:50Z", "type": "commit"}, {"oid": "5eb83dd3605fd5b4e3a6b306524cf9fda0cc6e93", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5eb83dd3605fd5b4e3a6b306524cf9fda0cc6e93", "message": "fix a few PMD violations", "committedDate": "2020-03-30T18:12:50Z", "type": "forcePushed"}]}