{"pr_number": 367, "pr_title": "Publish Kernel zip and update initial setup steps", "pr_createdAt": "2020-08-14T22:42:42Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367", "timeline": [{"oid": "264fc933d2b81035955bdddc8764ea3995800cef", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/264fc933d2b81035955bdddc8764ea3995800cef", "message": "Publish Kernel zip and update initial setup steps", "committedDate": "2020-08-17T22:29:06Z", "type": "forcePushed"}, {"oid": "d72283d03050758d454c5717396f9aac1dc4144c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d72283d03050758d454c5717396f9aac1dc4144c", "message": "Publish Kernel zip and update initial setup steps", "committedDate": "2020-08-17T23:21:28Z", "type": "forcePushed"}, {"oid": "96f69f7cc6bf00448afb078ca7d822ec4114d39f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/96f69f7cc6bf00448afb078ca7d822ec4114d39f", "message": "Publish Kernel zip and update initial setup steps", "committedDate": "2020-08-18T00:41:20Z", "type": "forcePushed"}, {"oid": "ace9c4431db9ac20a632dc82112f1ba6aca16b92", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ace9c4431db9ac20a632dc82112f1ba6aca16b92", "message": "Publish Kernel zip and update initial setup steps", "committedDate": "2020-08-18T01:11:27Z", "type": "commit"}, {"oid": "ace9c4431db9ac20a632dc82112f1ba6aca16b92", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ace9c4431db9ac20a632dc82112f1ba6aca16b92", "message": "Publish Kernel zip and update initial setup steps", "committedDate": "2020-08-18T01:11:27Z", "type": "forcePushed"}, {"oid": "cb1375c722921e4d4f4f84223a803ff2888f95a0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cb1375c722921e4d4f4f84223a803ff2888f95a0", "message": "Merge branch 'master' into ku12", "committedDate": "2020-08-18T17:35:29Z", "type": "commit"}, {"oid": "b52d85759eebb1fe77bc470489df4bf7dd59c21f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b52d85759eebb1fe77bc470489df4bf7dd59c21f", "message": "Merge branch 'master' into ku12", "committedDate": "2020-08-18T20:18:13Z", "type": "commit"}, {"oid": "e34406dbae67c9c1469d4751d4545c184e8b7180", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e34406dbae67c9c1469d4751d4545c184e8b7180", "message": "Merge branch 'master' into ku12", "committedDate": "2020-08-19T17:45:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzOTcxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r474139718", "bodyText": "This might be able to be entirely moved to Kernel::parseArgs", "author": "leaf94", "createdAt": "2020-08-20T17:00:37Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelLifecycle.java", "diffHunk": "@@ -93,7 +89,7 @@ public void launch() {\n         startupAllServices();\n     }\n \n-    private void initConfigAndTlog() {\n+    void initConfigAndTlog() {\n         Path transactionLogPath = kernel.getConfigPath().resolve(\"config.tlog\");\n         Path configurationFile = kernel.getConfigPath().resolve(\"config.yaml\");", "originalCommit": "e34406dbae67c9c1469d4751d4545c184e8b7180", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MDM2MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r474140361", "bodyText": "Nice... Now the provision override drawback is also eliminated. I will update the README after you merge this in. Please remind me afterwards~", "author": "leaf94", "createdAt": "2020-08-20T17:01:46Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -499,8 +501,17 @@ public EvergreenService locate(String name) throws ServiceLoadException {\n         return rootPackageNameAndVersionMap;\n     }\n \n+    /**\n+     * Parse kernel arguments and initialized configuration.\n+     *\n+     * @param args CLI args\n+     * @return Kernel instance\n+     */\n     public Kernel parseArgs(String... args) {\n         kernelCommandLine.parseArgs(args);\n+\n+        config.lookupTopics(SERVICES_NAMESPACE_TOPIC, MAIN_SERVICE_NAME, SERVICE_LIFECYCLE_NAMESPACE_TOPIC);\n+        kernelLifecycle.initConfigAndTlog();", "originalCommit": "e34406dbae67c9c1469d4751d4545c184e8b7180", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "a003428cf1b60cb58473324f8a0bb2fbd6a24fed", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a003428cf1b60cb58473324f8a0bb2fbd6a24fed", "message": "Merge remote-tracking branch 'origin/master' into ku12", "committedDate": "2020-08-24T17:02:43Z", "type": "commit"}, {"oid": "924bea326025de95240b2275ac25855ef7b70bbc", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/924bea326025de95240b2275ac25855ef7b70bbc", "message": "Address comments", "committedDate": "2020-08-24T17:26:55Z", "type": "commit"}, {"oid": "924bea326025de95240b2275ac25855ef7b70bbc", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/924bea326025de95240b2275ac25855ef7b70bbc", "message": "Address comments", "committedDate": "2020-08-24T17:26:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4MjQ3Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475782476", "bodyText": "why is this a separate platform? Systemd isn't a platform, but something which can be installed on multiple different platforms.\nI'd probably have a separate inheritance hierarchy for this feature set. It can still be accessible through the platform instance, but it shouldn't be in the same hierarchy.", "author": "MikeDombo", "createdAt": "2020-08-24T17:34:30Z", "path": "src/main/java/com/aws/iot/evergreen/util/platforms/Platform.java", "diffHunk": "@@ -27,17 +34,44 @@ public static synchronized Platform getInstance() {\n             INSTANCE = new WindowsPlatform();\n         } else if (PlatformResolver.RANKS.get().containsKey(\"qnx\")) {\n             INSTANCE = new QNXPlatform();\n+        } else if (SystemServiceManager.SYSTEMD.equals(getSystemServiceManager())) {\n+            INSTANCE = new SystemdUnixPlatform();", "originalCommit": "924bea326025de95240b2275ac25855ef7b70bbc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1cfee17c35eaeaf430dcb828eef2ed3aed0aaf7b", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/util/platforms/Platform.java b/src/main/java/com/aws/iot/evergreen/util/platforms/Platform.java\nindex 3d575290..120488c5 100644\n--- a/src/main/java/com/aws/iot/evergreen/util/platforms/Platform.java\n+++ b/src/main/java/com/aws/iot/evergreen/util/platforms/Platform.java\n\n@@ -34,8 +30,6 @@ public abstract class Platform {\n             INSTANCE = new WindowsPlatform();\n         } else if (PlatformResolver.RANKS.get().containsKey(\"qnx\")) {\n             INSTANCE = new QNXPlatform();\n-        } else if (SystemServiceManager.SYSTEMD.equals(getSystemServiceManager())) {\n-            INSTANCE = new SystemdUnixPlatform();\n         } else {\n             INSTANCE = new UnixPlatform();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4MzU5OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475783599", "bodyText": "use shellrunner?", "author": "MikeDombo", "createdAt": "2020-08-24T17:36:30Z", "path": "src/main/java/com/aws/iot/evergreen/util/platforms/SystemdUnixPlatform.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.platforms;\n+\n+import com.aws.iot.evergreen.kernel.KernelAlternatives;\n+import com.aws.iot.evergreen.util.Exec;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+\n+public class SystemdUnixPlatform extends UnixPlatform {\n+    private static final String PID_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_PID_FILE\";\n+    private static final String LOADER_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_FILE\";\n+    private static final String SERVICE_CONFIG_FILE_PATH = \"/etc/systemd/system/greengrass.service\";\n+    private static final String SED_CMD = \"sed -i -e \\\"s#%s#%s#g\\\" %s\";\n+\n+    @Override\n+    public boolean setupSystemService(KernelAlternatives kernelAlternatives) {\n+        try {\n+            kernelAlternatives.setupInitLaunchDirIfAbsent();\n+            Path serviceConfig = kernelAlternatives.getServiceTemplatePath();\n+            runCommand(String.format(SED_CMD, PID_FILE_PARAM, kernelAlternatives.getLoaderPidPath(), serviceConfig));\n+            runCommand(String.format(SED_CMD, LOADER_FILE_PARAM, kernelAlternatives.getLoaderPath(), serviceConfig));\n+            runCommand(String.format(\"sudo cp %s %s\", serviceConfig, SERVICE_CONFIG_FILE_PATH));\n+            runCommand(\"sudo systemctl daemon-reload\");\n+            runCommand(\"sudo systemctl unmask greengrass.service\");\n+            runCommand(\"sudo systemctl start greengrass.service\");\n+            runCommand(\"sudo systemctl enable greengrass.service\");\n+            logger.atInfo().log(\"Successfully set up systemd service\");\n+            return true;\n+        } catch (IOException | InterruptedException | URISyntaxException e) {\n+            logger.atError().log(\"Failed to set up systemd service\", e);\n+        }\n+        return false;\n+    }\n+\n+    private boolean runCommand(String command) throws IOException, InterruptedException {\n+        return new Exec()", "originalCommit": "924bea326025de95240b2275ac25855ef7b70bbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5MDIyNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475790225", "bodyText": "Shellrunner is designed for running commands on behalf of EG services, and some env var settings don't apply", "author": "hui-yang", "createdAt": "2020-08-24T17:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4MzU5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "1cfee17c35eaeaf430dcb828eef2ed3aed0aaf7b", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/util/platforms/SystemdUnixPlatform.java b/src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java\nsimilarity index 95%\nrename from src/main/java/com/aws/iot/evergreen/util/platforms/SystemdUnixPlatform.java\nrename to src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java\nindex eadbc64b..7f27f87e 100644\n--- a/src/main/java/com/aws/iot/evergreen/util/platforms/SystemdUnixPlatform.java\n+++ b/src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java\n\n@@ -3,7 +3,7 @@\n  * SPDX-License-Identifier: Apache-2.0\n  */\n \n-package com.aws.iot.evergreen.util.platforms;\n+package com.aws.iot.evergreen.util.orchestration;\n \n import com.aws.iot.evergreen.kernel.KernelAlternatives;\n import com.aws.iot.evergreen.util.Exec;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4MzkxNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475783914", "bodyText": "can we put this into an afterEach so it can't be forgotten?", "author": "MikeDombo", "createdAt": "2020-08-24T17:37:04Z", "path": "src/test/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelperTest.java", "diffHunk": "@@ -192,6 +193,7 @@ public void GIVEN_test_tes_role_config_WHEN_role_info_provided_THEN_add_config_t\n         assertEquals(\"roleAliasName\", kernel.getConfig()\n                 .lookup(SERVICES_NAMESPACE_TOPIC, TOKEN_EXCHANGE_SERVICE_TOPICS, PARAMETERS_CONFIG_KEY,\n                         IOT_ROLE_ALIAS_TOPIC).getOnce());\n+        kernel.shutdown();", "originalCommit": "924bea326025de95240b2275ac25855ef7b70bbc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1cfee17c35eaeaf430dcb828eef2ed3aed0aaf7b", "chunk": "diff --git a/src/test/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelperTest.java b/src/test/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelperTest.java\nindex d4d855f2..63cc6926 100644\n--- a/src/test/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelperTest.java\n+++ b/src/test/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelperTest.java\n\n@@ -181,19 +190,17 @@ public class DeviceProvisioningHelperTest {\n                         KeyPair.builder().privateKey(\"privateKey\").publicKey(\"publicKey\").build(), \"dataEndpoint\",\n                         \"credEndpoint\"), TEST_REGION);\n         assertEquals(\"thingname\", kernel.getConfig().lookup(SYSTEM_NAMESPACE_KEY, DEVICE_PARAM_THING_NAME).getOnce());\n-        kernel.shutdown();\n     }\n \n     @Test\n     public void GIVEN_test_tes_role_config_WHEN_role_info_provided_THEN_add_config_to_config_store() {\n-        Kernel kernel = new Kernel()\n+        kernel = new Kernel()\n                 .parseArgs(\"-i\", getClass().getResource(\"blank_config.yaml\").toString(), \"-r\", tempRootDir.toString());\n \n         deviceProvisioningHelper.updateKernelConfigWithTesRoleInfo(kernel, \"roleAliasName\");\n         assertEquals(\"roleAliasName\", kernel.getConfig()\n                 .lookup(SERVICES_NAMESPACE_TOPIC, TOKEN_EXCHANGE_SERVICE_TOPICS, PARAMETERS_CONFIG_KEY,\n                         IOT_ROLE_ALIAS_TOPIC).getOnce());\n-        kernel.shutdown();\n     }\n \n     @Test\n"}}, {"oid": "1cfee17c35eaeaf430dcb828eef2ed3aed0aaf7b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1cfee17c35eaeaf430dcb828eef2ed3aed0aaf7b", "message": "Address comments", "committedDate": "2020-08-24T21:16:05Z", "type": "commit"}, {"oid": "1a3dcfbf85860a95ee278ca9d2f3d3224bcdc868", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1a3dcfbf85860a95ee278ca9d2f3d3224bcdc868", "message": "Merge remote-tracking branch 'origin/master' into ku12", "committedDate": "2020-08-24T21:17:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNDc0MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475904741", "bodyText": "why are these running as sudo? Won't the kernel be running as root at this point? Systems may not have sudo, or won't be configured with passwordless sudo, so I'd maybe just make it a requirement that GG is running as root for this feature.", "author": "MikeDombo", "createdAt": "2020-08-24T21:28:06Z", "path": "src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.orchestration;\n+\n+import com.aws.iot.evergreen.kernel.KernelAlternatives;\n+import com.aws.iot.evergreen.util.Exec;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+\n+public class SystemdUtils extends SystemServiceUtils {\n+    private static final String PID_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_PID_FILE\";\n+    private static final String LOADER_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_FILE\";\n+    private static final String SERVICE_CONFIG_FILE_PATH = \"/etc/systemd/system/greengrass.service\";\n+    private static final String SED_CMD = \"sed -i -e \\\"s#%s#%s#g\\\" %s\";\n+\n+    @Override\n+    public boolean setupSystemService(KernelAlternatives kernelAlternatives) {\n+        try {\n+            kernelAlternatives.setupInitLaunchDirIfAbsent();\n+            Path serviceConfig = kernelAlternatives.getServiceTemplatePath();\n+            runCommand(String.format(SED_CMD, PID_FILE_PARAM, kernelAlternatives.getLoaderPidPath(), serviceConfig));\n+            runCommand(String.format(SED_CMD, LOADER_FILE_PARAM, kernelAlternatives.getLoaderPath(), serviceConfig));\n+            runCommand(String.format(\"sudo cp %s %s\", serviceConfig, SERVICE_CONFIG_FILE_PATH));\n+            runCommand(\"sudo systemctl daemon-reload\");\n+            runCommand(\"sudo systemctl unmask greengrass.service\");\n+            runCommand(\"sudo systemctl start greengrass.service\");\n+            runCommand(\"sudo systemctl enable greengrass.service\");", "originalCommit": "1a3dcfbf85860a95ee278ca9d2f3d3224bcdc868", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c240453ea771698461860dd210508174115f6c66", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java b/src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java\nindex 7f27f87e..d8915a1e 100644\n--- a/src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java\n+++ b/src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java\n\n@@ -25,11 +25,11 @@ public class SystemdUtils extends SystemServiceUtils {\n             Path serviceConfig = kernelAlternatives.getServiceTemplatePath();\n             runCommand(String.format(SED_CMD, PID_FILE_PARAM, kernelAlternatives.getLoaderPidPath(), serviceConfig));\n             runCommand(String.format(SED_CMD, LOADER_FILE_PARAM, kernelAlternatives.getLoaderPath(), serviceConfig));\n-            runCommand(String.format(\"sudo cp %s %s\", serviceConfig, SERVICE_CONFIG_FILE_PATH));\n-            runCommand(\"sudo systemctl daemon-reload\");\n-            runCommand(\"sudo systemctl unmask greengrass.service\");\n-            runCommand(\"sudo systemctl start greengrass.service\");\n-            runCommand(\"sudo systemctl enable greengrass.service\");\n+            runCommand(String.format(\"cp %s %s\", serviceConfig, SERVICE_CONFIG_FILE_PATH));\n+            runCommand(\"systemctl daemon-reload\");\n+            runCommand(\"systemctl unmask greengrass.service\");\n+            runCommand(\"systemctl start greengrass.service\");\n+            runCommand(\"systemctl enable greengrass.service\");\n             logger.atInfo().log(\"Successfully set up systemd service\");\n             return true;\n         } catch (IOException | InterruptedException | URISyntaxException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNDg0Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475904846", "bodyText": "unused?", "author": "MikeDombo", "createdAt": "2020-08-24T21:28:22Z", "path": "src/main/java/com/aws/iot/evergreen/util/platforms/Platform.java", "diffHunk": "@@ -6,11 +6,14 @@\n package com.aws.iot.evergreen.util.platforms;\n \n import com.aws.iot.evergreen.config.PlatformResolver;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n import com.aws.iot.evergreen.util.Exec;\n \n import java.io.IOException;\n \n public abstract class Platform {\n+    protected static final Logger logger = LogManager.getLogger(Platform.class);", "originalCommit": "1a3dcfbf85860a95ee278ca9d2f3d3224bcdc868", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkxMzY3MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475913671", "bodyText": "Used by child classes", "author": "hui-yang", "createdAt": "2020-08-24T21:48:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNDg0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNTI2MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475905261", "bodyText": "this is the test change, where's the source change?", "author": "MikeDombo", "createdAt": "2020-08-24T21:29:14Z", "path": "src/test/java/com/aws/iot/evergreen/easysetup/EvergreenSetupTest.java", "diffHunk": "@@ -56,7 +55,6 @@ void GIVEN_setup_script_WHEN_script_is_used_with_short_arg_notations_THEN_setup_\n         verify(deviceProvisioningHelper, times(1)).updateKernelConfigWithIotConfiguration(any(), any(), any());\n         verify(deviceProvisioningHelper, times(1)).setupIoTRoleForTes(any(), any(), any());\n         verify(deviceProvisioningHelper, times(1)).updateKernelConfigWithTesRoleInfo(any(), any());\n-        verify(deviceProvisioningHelper, times(1)).setUpEmptyPackagesForFirstPartyServices();", "originalCommit": "1a3dcfbf85860a95ee278ca9d2f3d3224bcdc868", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNTk5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475905994", "bodyText": "In EvergreenSetup, do you suggest completely removing the method?", "author": "hui-yang", "createdAt": "2020-08-24T21:31:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNTI2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNjU5MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475906591", "bodyText": "Missed it, I see it now. If it is unused, then yeah remove it.", "author": "MikeDombo", "createdAt": "2020-08-24T21:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNTI2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNzA0NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r475907044", "bodyText": "The format of the component it creates is wrong now, so it definitely needs to be removed or fixed", "author": "MikeDombo", "createdAt": "2020-08-24T21:33:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNTI2MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "c240453ea771698461860dd210508174115f6c66", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c240453ea771698461860dd210508174115f6c66", "message": "Address comments on sudo commands and clean up method which creates empty components", "committedDate": "2020-08-24T21:53:03Z", "type": "commit"}, {"oid": "94b3110042abc9daa4e5a743ad3f922faab05022", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/94b3110042abc9daa4e5a743ad3f922faab05022", "message": "Merge remote-tracking branch 'origin/master' into ku12", "committedDate": "2020-08-24T23:45:36Z", "type": "commit"}, {"oid": "80a879019e0539067fc07371fbba8d5b41932709", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/80a879019e0539067fc07371fbba8d5b41932709", "message": "Update .gitignore and github jobs", "committedDate": "2020-08-24T23:58:38Z", "type": "commit"}, {"oid": "946c19afe9b12bdd4bc0e9104d965a88c9e568ff", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/946c19afe9b12bdd4bc0e9104d965a88c9e568ff", "message": "Address comments to refactor system service utils", "committedDate": "2020-08-25T00:57:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAyNjA4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r476026089", "bodyText": "why are we using sed? Let's use java", "author": "MikeDombo", "createdAt": "2020-08-25T01:09:02Z", "path": "src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.orchestration;\n+\n+import com.aws.iot.evergreen.kernel.KernelAlternatives;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.aws.iot.evergreen.util.Exec;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+\n+public class SystemdUtils implements SystemServiceUtils {\n+    protected static final Logger logger = LogManager.getLogger(SystemdUtils.class);\n+    private static final String PID_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_PID_FILE\";\n+    private static final String LOADER_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_FILE\";\n+    private static final String SERVICE_CONFIG_FILE_PATH = \"/etc/systemd/system/greengrass.service\";\n+    private static final String SED_CMD = \"sed -i -e \\\"s#%s#%s#g\\\" %s\";", "originalCommit": "946c19afe9b12bdd4bc0e9104d965a88c9e568ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjA1MjExMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/367#discussion_r476052110", "bodyText": "I intend to prepare the file content and permission before moving it in place.\nAdd to backlog for now as discussed offline.", "author": "hui-yang", "createdAt": "2020-08-25T01:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAyNjA4OQ=="}], "type": "inlineReview", "revised_code": null}]}