{"pr_number": 451, "pr_title": "size limit - file ops", "pr_createdAt": "2020-09-18T15:29:17Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyMzQ2Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r491223462", "bodyText": "Maybe also check artifactsDecompressedDirectory and delete it", "author": "hui-yang", "createdAt": "2020-09-18T22:39:52Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java", "diffHunk": "@@ -136,6 +137,23 @@ PackageRecipe getPackageRecipe(@NonNull PackageIdentifier pkgId) throws PackageL\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull PackageIdentifier pkgId) throws PackagingException {\n+        Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n+        Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n+\n+        try {\n+            Files.deleteIfExists(recipePath);\n+            FileUtils.deleteDirectory(artifactDirPath.toFile());", "originalCommit": "8f011ba05f809bcbe9264a488c186486f7f1f45c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE0NDkyMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492144921", "bodyText": "good point!", "author": "tilo-chen", "createdAt": "2020-09-21T15:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyMzQ2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b03162dbd606a748e2a584cfc7ff07313fe35c27", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java b/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\nsimilarity index 69%\nrename from src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java\nrename to src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\nindex 77202bbe4..d4c3a684e 100644\n--- a/src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java\n+++ b/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\n\n@@ -142,13 +144,15 @@ public class PackageStore {\n      *\n      * @param pkgId package identifier\n      */\n-    void deletePackage(@NonNull PackageIdentifier pkgId) throws PackagingException {\n+    void deletePackage(@NonNull ComponentIdentifier pkgId) throws PackagingException {\n         Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n         Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n+        Path artifactUnpackDirPath = resolveArtifactsUnpackDirectory(pkgId);\n \n         try {\n             Files.deleteIfExists(recipePath);\n             FileUtils.deleteDirectory(artifactDirPath.toFile());\n+            FileUtils.deleteDirectory(artifactUnpackDirPath.toFile());\n         } catch (IOException e) {\n             throw new PackagingException(\"Failed to delete package \" + pkgId, e);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyNzYwNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r491227605", "bodyText": "hmm. how often do we recalculate the whole directory? I feel we can keep track of an increasing number until the next cleanup", "author": "hui-yang", "createdAt": "2020-09-18T22:56:58Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java", "diffHunk": "@@ -233,6 +251,36 @@ public Path resolveAndSetupArtifactsUnpackDirectory(@NonNull PackageIdentifier p\n         }\n     }\n \n+    /**\n+     * Get the total size of files in the package store by recursively walking the package store directory. Provides an\n+     * estimate of the package store's disk usage.\n+     *\n+     * @return total length of files in bytes\n+     * @throws UnexpectedPackagingException if unable to access the package store directory\n+     */\n+    public long getContentSize() throws UnexpectedPackagingException {", "originalCommit": "8f011ba05f809bcbe9264a488c186486f7f1f45c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE1NTgzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492155836", "bodyText": "this iteration we'll recalculate before every download. one downside of tracking a number is that it may become inconsistent over time. join the discussion here! https://quip-amazon.com/AaoVA3qZbqhf/Evergreen-Package-Store-Size-Limit#CcI9CA9WoEz", "author": "tilo-chen", "createdAt": "2020-09-21T15:33:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyNzYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b03162dbd606a748e2a584cfc7ff07313fe35c27", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java b/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\nsimilarity index 69%\nrename from src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java\nrename to src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\nindex 77202bbe4..d4c3a684e 100644\n--- a/src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java\n+++ b/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\n\n@@ -232,22 +236,33 @@ public class PackageStore {\n     }\n \n     /**\n-     * Resolve the artifact unpack directory path and creates the directory if absent.\n+     * Resolve the artifact unpack directory.\n      *\n      * @param packageIdentifier packageIdentifier\n      * @return artifact unpack directory path\n+     */\n+    public Path resolveArtifactsUnpackDirectory(@NonNull ComponentIdentifier packageIdentifier) {\n+        return artifactsDecompressedDirectory.resolve(packageIdentifier.getName())\n+                .resolve(packageIdentifier.getVersion().getValue());\n+    }\n+\n+    /**\n+     * Resolve the artifact unpack directory path and creates the directory if absent.\n+     *\n+     * @param componentIdentifier packageIdentifier\n+     * @return artifact unpack directory path\n      * @throws PackageLoadingException if un-able to create artifact unpack directory path\n      */\n-    public Path resolveAndSetupArtifactsUnpackDirectory(@NonNull PackageIdentifier packageIdentifier)\n+    public Path resolveAndSetupArtifactsUnpackDirectory(@NonNull ComponentIdentifier componentIdentifier)\n             throws PackageLoadingException {\n-        Path path = artifactsDecompressedDirectory.resolve(packageIdentifier.getName())\n-                                                  .resolve(packageIdentifier.getVersion().getValue());\n+        Path path = artifactsDecompressedDirectory.resolve(componentIdentifier.getName())\n+                                                  .resolve(componentIdentifier.getVersion().getValue());\n         try {\n             Utils.createPaths(path);\n             return path;\n         } catch (IOException e) {\n             throw new PackageLoadingException(\n-                    \"Failed to create artifact unpack directory for \" + packageIdentifier.toString(), e);\n+                    \"Failed to create artifact unpack directory for \" + componentIdentifier.toString(), e);\n         }\n     }\n \n"}}, {"oid": "b03162dbd606a748e2a584cfc7ff07313fe35c27", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b03162dbd606a748e2a584cfc7ff07313fe35c27", "message": "package store file operations; rebase master", "committedDate": "2020-09-21T16:03:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzE4OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492247188", "bodyText": "Maybe use consistent name DecompressedDirectory?\nAlso reuse this method in resolveAndSetupArtifactsUnpackDirectory below", "author": "hui-yang", "createdAt": "2020-09-21T18:00:08Z", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -215,6 +235,17 @@ private Path resolveRecipePath(String packageName, Semver packageVersion) {\n         return recipeDirectory.resolve(String.format(RECIPE_FILE_NAME_FORMAT, packageName, packageVersion.getValue()));\n     }\n \n+    /**\n+     * Resolve the artifact unpack directory.\n+     *\n+     * @param packageIdentifier packageIdentifier\n+     * @return artifact unpack directory path\n+     */\n+    public Path resolveArtifactsUnpackDirectory(@NonNull ComponentIdentifier packageIdentifier) {", "originalCommit": "b03162dbd606a748e2a584cfc7ff07313fe35c27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1ODAzOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492258039", "bodyText": "I'll rename.\nThe existing resolveAndSetupArtifactsUnpackDirectory actually creates the directory if it doesn't exist, which kind of defeats the purpose if we want to check and remove it.", "author": "tilo-chen", "createdAt": "2020-09-21T18:19:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzE4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMyODQwNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492328405", "bodyText": "I meant to reuse resolveArtifactsUnpackDirectory in resolveAndSetupArtifactsUnpackDirectory", "author": "hui-yang", "createdAt": "2020-09-21T20:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzE4OA=="}], "type": "inlineReview", "revised_code": {"commit": "dbc6f6951a344798928515aed1a15c0c2e321d41", "chunk": "diff --git a/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java b/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\nindex d4c3a684e..4d05069ed 100644\n--- a/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\n+++ b/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\n\n@@ -236,33 +236,32 @@ public class ComponentStore {\n     }\n \n     /**\n-     * Resolve the artifact unpack directory.\n+     * Resolve the artifact decompressed directory.\n      *\n-     * @param packageIdentifier packageIdentifier\n-     * @return artifact unpack directory path\n+     * @param componentIdentifier componentIdentifier\n+     * @return artifact decompressed directory path\n      */\n-    public Path resolveArtifactsUnpackDirectory(@NonNull ComponentIdentifier packageIdentifier) {\n-        return artifactsDecompressedDirectory.resolve(packageIdentifier.getName())\n-                .resolve(packageIdentifier.getVersion().getValue());\n+    public Path resolveArtifactsDecompressedDirectory(@NonNull ComponentIdentifier componentIdentifier) {\n+        return artifactsDecompressedDirectory.resolve(componentIdentifier.getName())\n+                .resolve(componentIdentifier.getVersion().getValue());\n     }\n \n     /**\n-     * Resolve the artifact unpack directory path and creates the directory if absent.\n+     * Resolve the artifact decompressed directory path and creates the directory if absent.\n      *\n-     * @param componentIdentifier packageIdentifier\n-     * @return artifact unpack directory path\n-     * @throws PackageLoadingException if un-able to create artifact unpack directory path\n+     * @param componentIdentifier componentIdentifier\n+     * @return artifact decompressed directory path\n+     * @throws PackageLoadingException if un-able to create artifact decompressed directory path\n      */\n-    public Path resolveAndSetupArtifactsUnpackDirectory(@NonNull ComponentIdentifier componentIdentifier)\n+    public Path resolveAndSetupArtifactsDecompressedDirectory(@NonNull ComponentIdentifier componentIdentifier)\n             throws PackageLoadingException {\n-        Path path = artifactsDecompressedDirectory.resolve(componentIdentifier.getName())\n-                                                  .resolve(componentIdentifier.getVersion().getValue());\n+        Path path = resolveArtifactsDecompressedDirectory(componentIdentifier);\n         try {\n             Utils.createPaths(path);\n             return path;\n         } catch (IOException e) {\n             throw new PackageLoadingException(\n-                    \"Failed to create artifact unpack directory for \" + componentIdentifier.toString(), e);\n+                    \"Failed to create artifact decompressed directory for \" + componentIdentifier.toString(), e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzIwOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492247209", "bodyText": "I think it's possible artifactDirPath or artifactUnpackDirPath doesn't exist. Maybe don't throw in that case?", "author": "hui-yang", "createdAt": "2020-09-21T18:00:10Z", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -138,6 +139,25 @@ ComponentRecipe getPackageRecipe(@NonNull ComponentIdentifier pkgId) throws Pack\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull ComponentIdentifier pkgId) throws PackagingException {\n+        Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n+        Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n+        Path artifactUnpackDirPath = resolveArtifactsUnpackDirectory(pkgId);\n+\n+        try {\n+            Files.deleteIfExists(recipePath);\n+            FileUtils.deleteDirectory(artifactDirPath.toFile());\n+            FileUtils.deleteDirectory(artifactUnpackDirPath.toFile());", "originalCommit": "b03162dbd606a748e2a584cfc7ff07313fe35c27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1OTE0NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492259145", "bodyText": "FileUtils.deleteDirectory will check existence first. Here we're only catching IOException. I should add a comment here. Thanks!", "author": "tilo-chen", "createdAt": "2020-09-21T18:21:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMyOTAzNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492329037", "bodyText": "Does that mean we should also handle IllegalArgumentException? http://commons.apache.org/proper/commons-io/javadocs/api-2.5/org/apache/commons/io/FileUtils.html#deleteDirectory(java.io.File)", "author": "hui-yang", "createdAt": "2020-09-21T20:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2OTUxMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492369513", "bodyText": "Oh the comment says it throws IllegalArgumentException but the code actually doesn't! We can file a bug report...", "author": "tilo-chen", "createdAt": "2020-09-21T21:59:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzIwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "dbc6f6951a344798928515aed1a15c0c2e321d41", "chunk": "diff --git a/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java b/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\nindex d4c3a684e..4d05069ed 100644\n--- a/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\n+++ b/src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java\n\n@@ -147,12 +147,12 @@ public class ComponentStore {\n     void deletePackage(@NonNull ComponentIdentifier pkgId) throws PackagingException {\n         Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n         Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n-        Path artifactUnpackDirPath = resolveArtifactsUnpackDirectory(pkgId);\n+        Path artifactDecompressedDirPath = resolveArtifactsDecompressedDirectory(pkgId);\n \n         try {\n             Files.deleteIfExists(recipePath);\n             FileUtils.deleteDirectory(artifactDirPath.toFile());\n-            FileUtils.deleteDirectory(artifactUnpackDirPath.toFile());\n+            FileUtils.deleteDirectory(artifactDecompressedDirPath.toFile());\n         } catch (IOException e) {\n             throw new PackagingException(\"Failed to delete package \" + pkgId, e);\n         }\n"}}, {"oid": "dbc6f6951a344798928515aed1a15c0c2e321d41", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dbc6f6951a344798928515aed1a15c0c2e321d41", "message": "package store file operations", "committedDate": "2020-09-22T03:02:24Z", "type": "forcePushed"}, {"oid": "91ede7b0bf318e832aeeb2857e086774d98a8c54", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/91ede7b0bf318e832aeeb2857e086774d98a8c54", "message": "package store file operations", "committedDate": "2020-09-22T03:06:38Z", "type": "commit"}, {"oid": "91ede7b0bf318e832aeeb2857e086774d98a8c54", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/91ede7b0bf318e832aeeb2857e086774d98a8c54", "message": "package store file operations", "committedDate": "2020-09-22T03:06:38Z", "type": "forcePushed"}, {"oid": "7fba2a61de4cebbce3310a3fadcc794353702f81", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7fba2a61de4cebbce3310a3fadcc794353702f81", "message": "Merge branch 'master' into size-limit-tc", "committedDate": "2020-09-22T16:59:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk1OTg3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492959870", "bodyText": "rename package to component everywhere", "author": "MikeDombo", "createdAt": "2020-09-22T18:49:22Z", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -138,6 +139,25 @@ ComponentRecipe getPackageRecipe(@NonNull ComponentIdentifier pkgId) throws Pack\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull ComponentIdentifier pkgId) throws PackagingException {", "originalCommit": "7fba2a61de4cebbce3310a3fadcc794353702f81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "fb13dd4ac8e101af662a2b4e5f22a40062f669fb", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fb13dd4ac8e101af662a2b4e5f22a40062f669fb", "message": "Merge branch 'master' into size-limit-tc", "committedDate": "2020-09-22T19:19:48Z", "type": "commit"}, {"oid": "540f1c082dc13ba280f3aea7451272374f972394", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/540f1c082dc13ba280f3aea7451272374f972394", "message": "Merge branch 'master' into size-limit-tc", "committedDate": "2020-09-23T21:10:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0MzQyMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r493943420", "bodyText": "Didn't you verify this already?", "author": "shaguptashaikh", "createdAt": "2020-09-23T23:07:11Z", "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -103,6 +105,38 @@ public File downloadToPath(ComponentIdentifier componentIdentifier, ComponentArt\n         return null;\n     }\n \n+    /**\n+     * Get the size of artifact from greengrass repo by sending HTTP HEAD request.\n+     *\n+     * @param packageIdentifier package info\n+     * @param artifact artifact info\n+     * @return ContentLength in bytes\n+     */\n+    @Override\n+    public long getSize(ComponentIdentifier packageIdentifier, ComponentArtifact artifact)\n+            throws IOException, PackageDownloadException {\n+        logger.atInfo().setEventType(\"get-artifact-size-from-greengrass-repo\")\n+                .addKeyValue(\"packageIdentifier\", packageIdentifier)\n+                .addKeyValue(\"artifactUri\", artifact.getArtifactUri().toString()).log();\n+\n+        String preSignedUrl =\n+                getArtifactDownloadURL(packageIdentifier, artifact.getArtifactUri().getSchemeSpecificPart());\n+        URL url = new URL(preSignedUrl);\n+        HttpURLConnection conn = connect(url);\n+        conn.setRequestMethod(\"HEAD\");\n+        Map<String, List<String>> headers = conn.getHeaderFields();\n+        // TODO verify this works by trying on a real package", "originalCommit": "540f1c082dc13ba280f3aea7451272374f972394", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0NzcyOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r493947729", "bodyText": "Not yet. Will address this in next PR", "author": "tilo-chen", "createdAt": "2020-09-23T23:13:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0MzQyMA=="}], "type": "inlineReview", "revised_code": null}]}