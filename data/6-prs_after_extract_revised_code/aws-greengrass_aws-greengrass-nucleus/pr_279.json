{"pr_number": 279, "pr_title": "Refactoring how current deployment task metadata is handled", "pr_createdAt": "2020-06-11T19:50:09Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzNjgzNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439036837", "bodyText": "just use lombok?", "author": "MikeDombo", "createdAt": "2020-06-11T20:03:56Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.aws.iot.evergreen.deployment.DeploymentTask;\n+import lombok.Data;\n+import lombok.NonNull;\n+\n+import java.util.concurrent.Future;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+@Data\n+public class DeploymentTaskMetadata {\n+    private DeploymentTask deploymentTask;\n+    private Future<DeploymentResult> deploymentProcess;\n+    private String deploymentId;\n+    private Deployment.DeploymentType deploymentType;\n+    private AtomicInteger deploymentAttemptCount;\n+\n+    /**\n+     * Constructor.\n+     * @param deploymentTask {@link DeploymentTask} created for the deployment\n+     * @param deploymentProcess Future returned from the executor service starting the deployment\n+     * @param deploymentId deployment identifier\n+     * @param deploymentType {@link com.aws.iot.evergreen.deployment.model.Deployment.DeploymentType}\n+     * @param deploymentAttemptCount number of times this deployment has been attempted. Deployment is attempted\n+     *                               again in case of\n+     *                      {@link com.aws.iot.evergreen.deployment.exceptions.RetryableDeploymentTaskFailureException}\n+     */\n+    public DeploymentTaskMetadata(@NonNull DeploymentTask deploymentTask,", "originalCommit": "4a5d47027bea335c2ad805288e97469064247638", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "717dd389c6944f1bcdad47b8d3f0d18d5b9f1b05", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java b/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java\nindex 3089e42947..66ee0b8b3d 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java\n\n@@ -1,39 +1,34 @@\n package com.aws.iot.evergreen.deployment.model;\n \n import com.aws.iot.evergreen.deployment.DeploymentTask;\n-import lombok.Data;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n import lombok.NonNull;\n+import lombok.Synchronized;\n \n import java.util.concurrent.Future;\n import java.util.concurrent.atomic.AtomicInteger;\n \n-@Data\n+@AllArgsConstructor\n public class DeploymentTaskMetadata {\n+    @NonNull @Getter\n     private DeploymentTask deploymentTask;\n+    @NonNull\n     private Future<DeploymentResult> deploymentProcess;\n+    @NonNull @Getter\n     private String deploymentId;\n+    @NonNull @Getter\n     private Deployment.DeploymentType deploymentType;\n+    @NonNull @Getter\n     private AtomicInteger deploymentAttemptCount;\n \n-    /**\n-     * Constructor.\n-     * @param deploymentTask {@link DeploymentTask} created for the deployment\n-     * @param deploymentProcess Future returned from the executor service starting the deployment\n-     * @param deploymentId deployment identifier\n-     * @param deploymentType {@link com.aws.iot.evergreen.deployment.model.Deployment.DeploymentType}\n-     * @param deploymentAttemptCount number of times this deployment has been attempted. Deployment is attempted\n-     *                               again in case of\n-     *                      {@link com.aws.iot.evergreen.deployment.exceptions.RetryableDeploymentTaskFailureException}\n-     */\n-    public DeploymentTaskMetadata(@NonNull DeploymentTask deploymentTask,\n-                                  @NonNull Future<DeploymentResult> deploymentProcess,\n-                                  @NonNull String deploymentId,\n-                                  @NonNull Deployment.DeploymentType deploymentType,\n-                                  @NonNull AtomicInteger deploymentAttemptCount) {\n-        this.deploymentTask = deploymentTask;\n+    @Synchronized\n+    public void setDeploymentProcess(Future<DeploymentResult> deploymentProcess) {\n         this.deploymentProcess = deploymentProcess;\n-        this.deploymentId = deploymentId;\n-        this.deploymentType = deploymentType;\n-        this.deploymentAttemptCount = deploymentAttemptCount;\n+    }\n+\n+    @Synchronized\n+    public Future<DeploymentResult> getDeploymentProcess() {\n+        return deploymentProcess;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MzQzOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439043438", "bodyText": "Can we make all r/w operations to currentDeploymentTaskMetadata atomic?", "author": "hui-yang", "createdAt": "2020-06-11T20:13:43Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -82,16 +84,7 @@\n     @Inject\n     private Kernel kernel;\n \n-    @Getter\n-    private Future<DeploymentResult> currentProcessStatus = null;\n-\n-    // This is very likely not thread safe. If the Deployment Service is split into multiple threads in a re-design\n-    // as mentioned in some other comments, this will need an update as well\n-    private String currentDeploymentId = null;\n-    private Deployment.DeploymentType currentDeploymentType = null;\n-\n-    private final AtomicInteger currentJobAttemptCount = new AtomicInteger(0);\n-    private DeploymentTask currentDeploymentTask = null;\n+    private DeploymentTaskMetadata currentDeploymentTaskMetadata = null;", "originalCommit": "4a5d47027bea335c2ad805288e97469064247638", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0NDI3OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439044278", "bodyText": "Also is currentDeploymentTaskMetadata going to be persisted if deployment service or kernel restarts?", "author": "hui-yang", "createdAt": "2020-06-11T20:14:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MzQzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1ODQ2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439058464", "bodyText": "+1 Maybe just have an AtomicReference for the metadata variable", "author": "shaguptashaikh", "createdAt": "2020-06-11T20:39:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MzQzOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2MDc5OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439060798", "bodyText": "nit- currentDeploymentTaskMetadata.getDeploymentId(deployment.getId()) will be more null safe", "author": "shaguptashaikh", "createdAt": "2020-06-11T20:44:19Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -156,26 +149,30 @@ public void startup() throws InterruptedException {\n         logger.info(\"Running deployment service\");\n \n         while (!receivedShutdown.get()) {\n-            if (currentProcessStatus != null && currentProcessStatus.isDone()) {\n+            if (currentDeploymentTaskMetadata != null && currentDeploymentTaskMetadata.getDeploymentProcess()\n+                    .isDone()) {\n                 finishCurrentDeployment();\n             }\n             //Cannot wait on queue because need to listen to queue as well as the currentProcessStatus future.\n             //One thread cannot wait on both. If we want to make this completely event driven then we need to put\n             // the waiting on currentProcessStatus in its own thread. I currently choose to not do this.\n             Deployment deployment = deploymentsQueue.peek();\n             if (deployment != null) {\n-                if (currentDeploymentType != null && !deployment.getDeploymentType().equals(currentDeploymentType)) {\n+                if (currentDeploymentTaskMetadata != null && !deployment.getDeploymentType()\n+                        .equals(currentDeploymentTaskMetadata.getDeploymentType())) {\n                     // deployment from another source, wait till the current deployment finish\n                     continue;\n                 }\n-                if (currentDeploymentId != null && currentDeploymentType != null) {\n-                    if (deployment.getId().equals(currentDeploymentId) && deployment.getDeploymentType()\n-                            .equals(currentDeploymentType)) {\n+                if (currentDeploymentTaskMetadata != null\n+                        && currentDeploymentTaskMetadata.getDeploymentType() != null) {\n+                    if (deployment.getId().equals(currentDeploymentTaskMetadata.getDeploymentId()) && deployment", "originalCommit": "4a5d47027bea335c2ad805288e97469064247638", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2MjU0Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439062546", "bodyText": "This seems unused", "author": "shaguptashaikh", "createdAt": "2020-06-11T20:48:09Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -46,6 +47,7 @@\n public class DeploymentService extends EvergreenService {\n \n     public static final String DEPLOYMENT_SERVICE_TOPICS = \"DeploymentService\";\n+    public static final String GROUP_TO_ROOT_PACKAGES_TOPICS = \"GroupToRootPackages\";", "originalCommit": "4a5d47027bea335c2ad805288e97469064247638", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "717dd389c6944f1bcdad47b8d3f0d18d5b9f1b05", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java b/src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java\nindex 37c8f4c3da..ffe0f1cc98 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java\n\n@@ -47,7 +47,6 @@ import javax.inject.Named;\n public class DeploymentService extends EvergreenService {\n \n     public static final String DEPLOYMENT_SERVICE_TOPICS = \"DeploymentService\";\n-    public static final String GROUP_TO_ROOT_PACKAGES_TOPICS = \"GroupToRootPackages\";\n \n     protected static final String DEPLOYMENTS_QUEUE = \"deploymentsQueue\";\n     protected static final ObjectMapper OBJECT_MAPPER =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2NDY1Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439064652", "bodyText": "nit - Does this need all of @DaTa? if not it's too much generated code and I'm not sure there should be setters for things like deploymentType or deploymentId", "author": "shaguptashaikh", "createdAt": "2020-06-11T20:52:42Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.aws.iot.evergreen.deployment.DeploymentTask;\n+import lombok.Data;\n+import lombok.NonNull;\n+\n+import java.util.concurrent.Future;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+@Data", "originalCommit": "4a5d47027bea335c2ad805288e97469064247638", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "717dd389c6944f1bcdad47b8d3f0d18d5b9f1b05", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java b/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java\nindex 3089e42947..66ee0b8b3d 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java\n\n@@ -1,39 +1,34 @@\n package com.aws.iot.evergreen.deployment.model;\n \n import com.aws.iot.evergreen.deployment.DeploymentTask;\n-import lombok.Data;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n import lombok.NonNull;\n+import lombok.Synchronized;\n \n import java.util.concurrent.Future;\n import java.util.concurrent.atomic.AtomicInteger;\n \n-@Data\n+@AllArgsConstructor\n public class DeploymentTaskMetadata {\n+    @NonNull @Getter\n     private DeploymentTask deploymentTask;\n+    @NonNull\n     private Future<DeploymentResult> deploymentProcess;\n+    @NonNull @Getter\n     private String deploymentId;\n+    @NonNull @Getter\n     private Deployment.DeploymentType deploymentType;\n+    @NonNull @Getter\n     private AtomicInteger deploymentAttemptCount;\n \n-    /**\n-     * Constructor.\n-     * @param deploymentTask {@link DeploymentTask} created for the deployment\n-     * @param deploymentProcess Future returned from the executor service starting the deployment\n-     * @param deploymentId deployment identifier\n-     * @param deploymentType {@link com.aws.iot.evergreen.deployment.model.Deployment.DeploymentType}\n-     * @param deploymentAttemptCount number of times this deployment has been attempted. Deployment is attempted\n-     *                               again in case of\n-     *                      {@link com.aws.iot.evergreen.deployment.exceptions.RetryableDeploymentTaskFailureException}\n-     */\n-    public DeploymentTaskMetadata(@NonNull DeploymentTask deploymentTask,\n-                                  @NonNull Future<DeploymentResult> deploymentProcess,\n-                                  @NonNull String deploymentId,\n-                                  @NonNull Deployment.DeploymentType deploymentType,\n-                                  @NonNull AtomicInteger deploymentAttemptCount) {\n-        this.deploymentTask = deploymentTask;\n+    @Synchronized\n+    public void setDeploymentProcess(Future<DeploymentResult> deploymentProcess) {\n         this.deploymentProcess = deploymentProcess;\n-        this.deploymentId = deploymentId;\n-        this.deploymentType = deploymentType;\n-        this.deploymentAttemptCount = deploymentAttemptCount;\n+    }\n+\n+    @Synchronized\n+    public Future<DeploymentResult> getDeploymentProcess() {\n+        return deploymentProcess;\n     }\n }\n"}}, {"oid": "717dd389c6944f1bcdad47b8d3f0d18d5b9f1b05", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/717dd389c6944f1bcdad47b8d3f0d18d5b9f1b05", "message": "Refactoring how current deployment task metadata is handled", "committedDate": "2020-06-11T21:31:31Z", "type": "commit"}, {"oid": "717dd389c6944f1bcdad47b8d3f0d18d5b9f1b05", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/717dd389c6944f1bcdad47b8d3f0d18d5b9f1b05", "message": "Refactoring how current deployment task metadata is handled", "committedDate": "2020-06-11T21:31:31Z", "type": "forcePushed"}, {"oid": "cd3c15b80bda7071029d11f8bb207e26fa916f15", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cd3c15b80bda7071029d11f8bb207e26fa916f15", "message": "Merge branch 'master' into refactorDeploymentTaskMetadata", "committedDate": "2020-06-12T18:17:30Z", "type": "commit"}]}