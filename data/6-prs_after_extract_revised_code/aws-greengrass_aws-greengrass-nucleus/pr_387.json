{"pr_number": 387, "pr_title": "Fixing S3 for cross-region calls", "pr_createdAt": "2020-08-25T21:35:00Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/387", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc2MDMzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/387#discussion_r476760336", "bodyText": "Why remove the tes credential hook?", "author": "shaguptashaikh", "createdAt": "2020-08-25T21:37:46Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/plugins/S3Downloader.java", "diffHunk": "@@ -103,10 +101,7 @@ public File downloadToPath(PackageIdentifier packageIdentifier, ComponentArtifac\n     private byte[] getObject(String bucket, String key, ComponentArtifact artifact, PackageIdentifier packageIdentifier)\n             throws PackageDownloadException {\n         try {\n-            TokenExchangeService tokenExchangeService = kernel.getContext().get(TokenExchangeService.class);\n-            GetObjectRequest getObjectRequest = GetObjectRequest.builder().overrideConfiguration(\n-                    AwsRequestOverrideConfiguration.builder().credentialsProvider(tokenExchangeService).build())\n-                    .bucket(bucket).key(key).build();\n+            GetObjectRequest getObjectRequest = GetObjectRequest.builder().bucket(bucket).key(key).build();", "originalCommit": "8760dfb82c08ee7b03617954f80273d5c921d818", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc2MTQ4NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/387#discussion_r476761485", "bodyText": "It is already configured to use TES in the client factory", "author": "MikeDombo", "createdAt": "2020-08-25T21:39:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc2MDMzNg=="}], "type": "inlineReview", "revised_code": {"commit": "baebd485543a43036d4e9b29646141639fb25a2c", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/packagemanager/plugins/S3Downloader.java b/src/main/java/com/aws/iot/evergreen/packagemanager/plugins/S3Downloader.java\nindex 1ae6c9136..a58b03e60 100644\n--- a/src/main/java/com/aws/iot/evergreen/packagemanager/plugins/S3Downloader.java\n+++ b/src/main/java/com/aws/iot/evergreen/packagemanager/plugins/S3Downloader.java\n\n@@ -101,8 +104,15 @@ public class S3Downloader implements ArtifactDownloader {\n     private byte[] getObject(String bucket, String key, ComponentArtifact artifact, PackageIdentifier packageIdentifier)\n             throws PackageDownloadException {\n         try {\n+            GetBucketLocationRequest getBucketLocationRequest =\n+                    GetBucketLocationRequest.builder().bucket(bucket).build();\n+            String region = s3Client.getBucketLocation(getBucketLocationRequest).locationConstraintAsString();\n+            S3Client regionClient =\n+                    S3Client.builder().credentialsProvider(kernel.getContext().get(LazyCredentialProvider.class))\n+                            // If the region is empty, it is us-east-1\n+                            .region(Utils.isEmpty(region) ? Region.US_EAST_1 : Region.of(region)).build();\n             GetObjectRequest getObjectRequest = GetObjectRequest.builder().bucket(bucket).key(key).build();\n-            return s3Client.getObjectAsBytes(getObjectRequest).asByteArray();\n+            return regionClient.getObjectAsBytes(getObjectRequest).asByteArray();\n         } catch (S3Exception e) {\n             throw new PackageDownloadException(\n                     String.format(ARTIFACT_DOWNLOAD_EXCEPTION_PMS_FMT, artifact.getArtifactUri(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc2MjIwOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/387#discussion_r476762208", "bodyText": "This is supposed to be temporary, GG will eventually be available in other regions, add a TODO for that? Or leave it the way it was and not test in other regions until GG becomes available so that we don't have to come back and change this again later", "author": "shaguptashaikh", "createdAt": "2020-08-25T21:39:57Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/GreengrassPackageServiceClientFactory.java", "diffHunk": "@@ -40,7 +39,8 @@ public GreengrassPackageServiceClientFactory(\n             LazyCredentialProvider credentialsProvider) {\n         AWSEvergreenClientBuilder clientBuilder =\n                 AWSEvergreenClientBuilder.standard();\n-        String region = Coerce.toString(deviceConfiguration.getAWSRegion());\n+        // GG only exists in east\n+        String region = \"us-east-1\"; // Coerce.toString(deviceConfiguration.getAWSRegion());", "originalCommit": "8760dfb82c08ee7b03617954f80273d5c921d818", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62aff50b8407d0c1d3353e035fc233a30ba7036d", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/packagemanager/GreengrassPackageServiceClientFactory.java b/src/main/java/com/aws/iot/evergreen/packagemanager/GreengrassPackageServiceClientFactory.java\nindex e0af71808..d257692c1 100644\n--- a/src/main/java/com/aws/iot/evergreen/packagemanager/GreengrassPackageServiceClientFactory.java\n+++ b/src/main/java/com/aws/iot/evergreen/packagemanager/GreengrassPackageServiceClientFactory.java\n\n@@ -39,8 +40,7 @@ public class GreengrassPackageServiceClientFactory {\n             LazyCredentialProvider credentialsProvider) {\n         AWSEvergreenClientBuilder clientBuilder =\n                 AWSEvergreenClientBuilder.standard();\n-        // GG only exists in east\n-        String region = \"us-east-1\"; // Coerce.toString(deviceConfiguration.getAWSRegion());\n+        String region = Coerce.toString(deviceConfiguration.getAWSRegion());\n \n         if (!Utils.isEmpty(region)) {\n             if (!Utils.isEmpty(greengrassServiceEndpoint)) {\n"}}, {"oid": "baebd485543a43036d4e9b29646141639fb25a2c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/baebd485543a43036d4e9b29646141639fb25a2c", "message": "Fix S3 for cross-region calls by looking up the bucket first", "committedDate": "2020-08-25T23:25:50Z", "type": "forcePushed"}, {"oid": "301387bf33fd57b00edb0e299303cd7192c61e46", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/301387bf33fd57b00edb0e299303cd7192c61e46", "message": "Fix S3 for cross-region calls by looking up the bucket first", "committedDate": "2020-08-25T23:27:02Z", "type": "forcePushed"}, {"oid": "62aff50b8407d0c1d3353e035fc233a30ba7036d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/62aff50b8407d0c1d3353e035fc233a30ba7036d", "message": "Fix S3 for cross-region calls by looking up the bucket first", "committedDate": "2020-08-25T23:27:46Z", "type": "forcePushed"}, {"oid": "9be6a656146607c341f8e9591afede169fe1240b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9be6a656146607c341f8e9591afede169fe1240b", "message": "Fix S3 for cross-region calls by looking up the bucket first", "committedDate": "2020-08-25T23:37:06Z", "type": "forcePushed"}, {"oid": "533e649d3509d1c252ce0afd92d1f07a57739cd5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/533e649d3509d1c252ce0afd92d1f07a57739cd5", "message": "Fix S3 for cross-region calls by looking up the bucket first", "committedDate": "2020-08-26T00:06:25Z", "type": "forcePushed"}, {"oid": "8c63f63525af9d8fe778673e1c289c0b3d10c410", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8c63f63525af9d8fe778673e1c289c0b3d10c410", "message": "Fix S3 for cross-region calls by looking up the bucket first", "committedDate": "2020-08-26T00:13:43Z", "type": "forcePushed"}, {"oid": "3a46ec2cf954ecbad553450677c2fd0e726f3f91", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3a46ec2cf954ecbad553450677c2fd0e726f3f91", "message": "Fix S3 for cross-region calls by looking up the bucket first", "committedDate": "2020-08-26T00:18:30Z", "type": "forcePushed"}, {"oid": "5d206412f12a28acc3a8206307023af0d58aa5be", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5d206412f12a28acc3a8206307023af0d58aa5be", "message": "Fix S3 for cross-region calls by looking up the bucket first", "committedDate": "2020-08-26T00:32:01Z", "type": "commit"}, {"oid": "5d206412f12a28acc3a8206307023af0d58aa5be", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5d206412f12a28acc3a8206307023af0d58aa5be", "message": "Fix S3 for cross-region calls by looking up the bucket first", "committedDate": "2020-08-26T00:32:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMwNjQxMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/387#discussion_r477306413", "bodyText": "Which resource is it complaining as not being closed? The getObjectsAsBytes? Can we try-resources that block?", "author": "philcali", "createdAt": "2020-08-26T13:37:39Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/plugins/S3Downloader.java", "diffHunk": "@@ -100,14 +98,18 @@ public File downloadToPath(PackageIdentifier packageIdentifier, ComponentArtifac\n         }\n     }\n \n+    @SuppressWarnings(\"PMD.CloseResource\")", "originalCommit": "5d206412f12a28acc3a8206307023af0d58aa5be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxODE5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/387#discussion_r477418194", "bodyText": "No, it is the s3 client, which we shouldn't be closing.", "author": "MikeDombo", "createdAt": "2020-08-26T16:07:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMwNjQxMw=="}], "type": "inlineReview", "revised_code": null}]}