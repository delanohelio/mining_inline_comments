{"pr_number": 706, "pr_title": "Use new cloud api model", "pr_createdAt": "2020-11-19T06:04:11Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAyOTk0Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r527029947", "bodyText": "This is what I'm looking for. I will let you know Shagupta", "author": "leaf94", "createdAt": "2020-11-19T16:36:59Z", "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -168,15 +168,15 @@ private void retrieveArtifactInfo() throws PackageDownloadException, Interrupted\n \n     private URL getArtifactDownloadURL(ComponentIdentifier componentIdentifier, String artifactName)\n             throws PackageDownloadException {\n-        GetComponentVersionArtifactDeprecatedRequest getComponentArtifactRequest =\n-                new GetComponentVersionArtifactDeprecatedRequest().withArtifactName(artifactName)\n-                        .withComponentName(componentIdentifier.getName())\n-                        .withComponentVersion(componentIdentifier.getVersion().toString());\n+        // TODO : UPDATE_MODEL : use ARN when the PR to handle ARN is checked in", "originalCommit": "feea9a100db3684ed0b338a1244777291a4164ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fb8852ced2b7d2057fa8fb8716f3261862df93d", "chunk": "diff --git a/src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java b/src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java\nindex a53793913..01112f100 100644\n--- a/src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java\n+++ b/src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java\n\n@@ -166,20 +174,29 @@ public class GreengrassRepositoryDownloader extends ArtifactDownloader {\n         });\n     }\n \n+\n     private URL getArtifactDownloadURL(ComponentIdentifier componentIdentifier, String artifactName)\n             throws PackageDownloadException {\n-        // TODO : UPDATE_MODEL : use ARN when the PR to handle ARN is checked in\n-        GetComponentVersionArtifactRequest getComponentArtifactRequest =\n-                new GetComponentVersionArtifactRequest().withArtifactName(artifactName)\n-                        .withArn(componentIdentifier.getName());\n+        String arn;\n+        try {\n+            arn = componentStore.getRecipeMetadata(componentIdentifier)\n+                    .getComponentVersionArn();\n+        } catch (PackageLoadingException e) {\n+            throw new PackageDownloadException(\n+                    \"Failed to get component version arn from component store. The arn is required for getting artifact\"\n+                            + \" from greengrass cloud.\",\n+                    e);\n+        }\n \n+        GetComponentVersionArtifactRequest getComponentArtifactRequest =\n+                new GetComponentVersionArtifactRequest().withArtifactName(artifactName).withArn(arn);\n         String preSignedUrl;\n         try {\n             GetComponentVersionArtifactResult getComponentArtifactResult =\n                     clientFactory.getCmsClient().getComponentVersionArtifact(getComponentArtifactRequest);\n             preSignedUrl = getComponentArtifactResult.getPreSignedUrl();\n-        } catch (AmazonClientException ace) {\n-            throw new PackageDownloadException(getErrorString(\"error in get artifact download URL\"), ace);\n+        } catch (AmazonClientException e) {\n+            throw new PackageDownloadException(getErrorString(\"error in get artifact download URL\"), e);\n         }\n         try {\n             return new URL(preSignedUrl);\n"}}, {"oid": "d52dd9919af7d7a5930a28a0a0fe599b6832ec67", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d52dd9919af7d7a5930a28a0a0fe599b6832ec67", "message": "Fix benchmark", "committedDate": "2020-11-19T18:51:09Z", "type": "forcePushed"}, {"oid": "0fb8852ced2b7d2057fa8fb8716f3261862df93d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0fb8852ced2b7d2057fa8fb8716f3261862df93d", "message": "Merge use_component_arn branch to get data plane cloud API changes", "committedDate": "2020-11-19T21:26:21Z", "type": "forcePushed"}, {"oid": "b6c7a477f485349b06c2c2516c4b1eace9a0a2f4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b6c7a477f485349b06c2c2516c4b1eace9a0a2f4", "message": "Merge use_component_arn branch to get data plane cloud API changes", "committedDate": "2020-11-19T22:01:21Z", "type": "forcePushed"}, {"oid": "fe6fc4f7c867090fa367f08b3002637a13138522", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fe6fc4f7c867090fa367f08b3002637a13138522", "message": "Fix unit tests", "committedDate": "2020-11-19T23:56:44Z", "type": "forcePushed"}, {"oid": "29aaa1491482ed53ce3e6be61bebfd68c93dddc3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/29aaa1491482ed53ce3e6be61bebfd68c93dddc3", "message": "Fix integ tests", "committedDate": "2020-11-20T01:07:07Z", "type": "forcePushed"}, {"oid": "144ffe1fa3e21f9a69dfb790b557e73409e7e4fe", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/144ffe1fa3e21f9a69dfb790b557e73409e7e4fe", "message": "Temporarily diable artifact cleanup for debugging", "committedDate": "2020-11-20T02:35:42Z", "type": "forcePushed"}, {"oid": "c4d2a5670e7f2859539a41d4ddf59a3c872404ec", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c4d2a5670e7f2859539a41d4ddf59a3c872404ec", "message": "Temporarily disable artifact upload for e2e to test other E2E while blocked on cloud team", "committedDate": "2020-11-20T02:45:32Z", "type": "forcePushed"}, {"oid": "b2b1abee24551503a27e6a9e43b4d8c90285710f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b2b1abee24551503a27e6a9e43b4d8c90285710f", "message": "Temporarily disable artifact upload for e2e to test other E2E while blocked on cloud team", "committedDate": "2020-11-20T18:49:09Z", "type": "forcePushed"}, {"oid": "d75336def1c3d9ffefd131d54db34e990ef49a9b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d75336def1c3d9ffefd131d54db34e990ef49a9b", "message": "Fix data plane endpoints", "committedDate": "2020-11-20T21:30:55Z", "type": "forcePushed"}, {"oid": "26560a70dc02dcfa0ef8c07ea42248283908c920", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/26560a70dc02dcfa0ef8c07ea42248283908c920", "message": "Update SDK and try tests again", "committedDate": "2020-11-20T23:32:47Z", "type": "forcePushed"}, {"oid": "2b619e8926bd5dba4de3c2fbc96acce8d9409a85", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2b619e8926bd5dba4de3c2fbc96acce8d9409a85", "message": "Revert \"Try with Greg`s personal stack\"\n\nThis reverts commit fd19cbf5659874f6d436be74b1a3b5fab4fc9ffe.", "committedDate": "2020-11-21T00:55:42Z", "type": "forcePushed"}, {"oid": "fc7e4070fe7675112c778ee3d11b7df5628fc4ac", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fc7e4070fe7675112c778ee3d11b7df5628fc4ac", "message": "Update job namespace id", "committedDate": "2020-11-21T09:32:01Z", "type": "forcePushed"}, {"oid": "61a46372ca5931219b306e0dea57d1ccee6ddc31", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/61a46372ca5931219b306e0dea57d1ccee6ddc31", "message": "Update job namespace id", "committedDate": "2020-11-21T09:41:42Z", "type": "forcePushed"}, {"oid": "439219c93aaa111d20f0860ded90f24c65e8ad57", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/439219c93aaa111d20f0860ded90f24c65e8ad57", "message": "Use new cloud api model", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "a228a5c78ba6865d034882915e204469f0610388", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a228a5c78ba6865d034882915e204469f0610388", "message": "Fix benchmark", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "cc548103a9d277199a59204f5a81126129565aa2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cc548103a9d277199a59204f5a81126129565aa2", "message": "Merge use_component_arn branch to get data plane cloud API changes", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "548ef82d9ee37db1e937fe3a96ec16d46cb72553", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/548ef82d9ee37db1e937fe3a96ec16d46cb72553", "message": "E2E cleanup fix", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "64e987fb601a554a14c7c95c84c4409467282a15", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/64e987fb601a554a14c7c95c84c4409467282a15", "message": "Fix unit tests", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "f04f04da5227762078923c517791163a8f6d02ef", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f04f04da5227762078923c517791163a8f6d02ef", "message": "Move back E2E tests to Gamma", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "f1ee0d176b9274bc67014b0919cf2c99ce717046", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f1ee0d176b9274bc67014b0919cf2c99ce717046", "message": "Fix integ tests", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "814bf1422824b77a4398d92308b50b8420d9abe4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/814bf1422824b77a4398d92308b50b8420d9abe4", "message": "Temporarily disable artifact upload for e2e to test other E2E while blocked on cloud team", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "ce0aa5aab5f5b15c2cf2f6180b5ccd05487e357a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ce0aa5aab5f5b15c2cf2f6180b5ccd05487e357a", "message": "Fix data plane endpoints", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "f71d97b09693d7c42a8206b04553257336af4b56", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f71d97b09693d7c42a8206b04553257336af4b56", "message": "Reenable S3 artifacts test components for e2e to reproduce create failure", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "6f5b9c4efbe94848a95d8dfacbc46e5882adced5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6f5b9c4efbe94848a95d8dfacbc46e5882adced5", "message": "Try Beta to see if create component works there", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "3877437c73c07ef3d3bcef6d6fcbdad87e3e5f9d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3877437c73c07ef3d3bcef6d6fcbdad87e3e5f9d", "message": "Update SDK and try tests again", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "c7938d3265fcd5aa00f4dfb39d6a70b74edf4b78", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c7938d3265fcd5aa00f4dfb39d6a70b74edf4b78", "message": "Try with Greg`s personal stack", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "af30729b9fbf03361848ac2fdf7256f3d3ed3fd2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/af30729b9fbf03361848ac2fdf7256f3d3ed3fd2", "message": "Revert \"Try with Greg`s personal stack\"\n\nThis reverts commit fd19cbf5659874f6d436be74b1a3b5fab4fc9ffe.", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "4933d6c14b2048da4374469d497455cfd06e560c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4933d6c14b2048da4374469d497455cfd06e560c", "message": "Update job namespace id", "committedDate": "2020-11-23T18:25:24Z", "type": "commit"}, {"oid": "eb493ebfd8a2311b85fd4d922454972c5573e7e6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eb493ebfd8a2311b85fd4d922454972c5573e7e6", "message": "Switch back to gamma endpoint, fix exception type to ingore, remove log added for debugging", "committedDate": "2020-11-23T18:33:48Z", "type": "commit"}, {"oid": "eb493ebfd8a2311b85fd4d922454972c5573e7e6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eb493ebfd8a2311b85fd4d922454972c5573e7e6", "message": "Switch back to gamma endpoint, fix exception type to ingore, remove log added for debugging", "committedDate": "2020-11-23T18:33:48Z", "type": "forcePushed"}, {"oid": "b6098b776a096d1790d94c25428c1a1692c08d15", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b6098b776a096d1790d94c25428c1a1692c08d15", "message": "Fall back to beta again, gamma still doesn`t work", "committedDate": "2020-11-23T18:44:33Z", "type": "commit"}, {"oid": "7dedb3c709f209cbdc17600fcda52795a9499c17", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7dedb3c709f209cbdc17600fcda52795a9499c17", "message": "Fix expected exception type to ingore in e2e", "committedDate": "2020-11-23T19:26:01Z", "type": "commit"}, {"oid": "7dedb3c709f209cbdc17600fcda52795a9499c17", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7dedb3c709f209cbdc17600fcda52795a9499c17", "message": "Fix expected exception type to ingore in e2e", "committedDate": "2020-11-23T19:26:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1NTYxMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r528955610", "bodyText": "nit - do we need to assert like this? If it doesn't throw I guess we should be good?", "author": "leaf94", "createdAt": "2020-11-23T19:48:18Z", "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -204,9 +206,16 @@ static void afterAll() {\n         try {\n             List<ComponentIdentifier> allComponents = new ArrayList<>(Arrays.asList(componentsWithArtifactsInS3));\n             for (ComponentIdentifier component : allComponents) {\n-                DeleteComponentVersionDeprecatedResult result = ComponentServiceHelper\n-                        .deleteComponent(greengrassClient, component.getName(), component.getVersion().toString());\n-                assertEquals(200, result.getSdkHttpMetadata().getHttpStatusCode());\n+                String componentArn = componentArns.get(component);\n+                if (Utils.isEmpty(componentArn)) {\n+                    logger.atWarn().kv(\"component-name\", component.getName())\n+                            .kv(\"compoenent-version\", component.getVersion())\n+                            .log(\"No component arn found to make delete request for cleanup\");\n+                } else {\n+                    DeleteComponentResult result =\n+                            ComponentServiceTestHelper.deleteComponent(greengrassClient, componentArn);\n+                    assertEquals(200, result.getSdkHttpMetadata().getHttpStatusCode());", "originalCommit": "7dedb3c709f209cbdc17600fcda52795a9499c17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1ODMzMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r528958333", "bodyText": "Not sure, it was already like this", "author": "shaguptashaikh", "createdAt": "2020-11-23T19:53:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1NTYxMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "7b44ecac127664450400975c174652863a5b9f5d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7b44ecac127664450400975c174652863a5b9f5d", "message": "Gamma endpoint is fixed, switch e2e back to gamma", "committedDate": "2020-11-23T19:56:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2MzA1Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r528963052", "bodyText": "Can be removed", "author": "wikimonkey", "createdAt": "2020-11-23T20:01:54Z", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentServiceHelper.java", "diffHunk": "@@ -80,19 +61,19 @@ ComponentContent resolveComponentVersion(String componentName, Semver localCandi\n                         .withArchitecture(platformResolver.getCurrentPlatform().get(PlatformResolver.ARCHITECTURE_KEY));\n         Map<String, String> versionRequirementsInString = versionRequirements.entrySet().stream()\n                 .collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().toString()));\n-        ComponentCandidate candidate = new ComponentCandidate().withName(componentName)\n-                .withVersion(localCandidateVersion == null ? null : localCandidateVersion.getValue())\n+        ComponentCandidate candidate = new ComponentCandidate().withComponentName(componentName)\n+                .withComponentVersion(localCandidateVersion == null ? null : localCandidateVersion.getValue())\n                 .withVersionRequirements(versionRequirementsInString);\n-        ResolveComponentVersionsRequest request = new ResolveComponentVersionsRequest().withPlatform(platform)\n-                .withComponentCandidates(Collections.singletonList(candidate))\n-                // TODO: [P41215565]: Switch back deploymentConfigurationId once it's removed from URL path\n-                // use UUID to avoid ARN complication in URL, deploymentConfigurationId is used for logging purpose\n-                // in server, so could have this hack now\n-                .withDeploymentConfigurationId(UUID.randomUUID().toString());\n-\n-        ResolveComponentVersionsResult result;\n+        ResolveComponentCandidatesRequest request = new ResolveComponentCandidatesRequest().withPlatform(platform)\n+                .withComponentCandidates(Collections.singletonList(candidate));\n+        // TODO: [P41215565]: Switch back deploymentConfigurationId once it's removed from URL path\n+        // use UUID to avoid ARN complication in URL, deploymentConfigurationId is used for logging purpose\n+        // in server, so could have this hack now\n+        //.withDeploymentConfigurationId(UUID.randomUUID().toString());", "originalCommit": "7b44ecac127664450400975c174652863a5b9f5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2OTI4Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r528969287", "bodyText": "I will do it.", "author": "leaf94", "createdAt": "2020-11-23T20:14:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2MzA1Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2MzI5Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r528963293", "bodyText": "nit: should we call it gcs?", "author": "wikimonkey", "createdAt": "2020-11-23T20:02:20Z", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentServiceHelper.java", "diffHunk": "@@ -80,19 +61,19 @@ ComponentContent resolveComponentVersion(String componentName, Semver localCandi\n                         .withArchitecture(platformResolver.getCurrentPlatform().get(PlatformResolver.ARCHITECTURE_KEY));\n         Map<String, String> versionRequirementsInString = versionRequirements.entrySet().stream()\n                 .collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().toString()));\n-        ComponentCandidate candidate = new ComponentCandidate().withName(componentName)\n-                .withVersion(localCandidateVersion == null ? null : localCandidateVersion.getValue())\n+        ComponentCandidate candidate = new ComponentCandidate().withComponentName(componentName)\n+                .withComponentVersion(localCandidateVersion == null ? null : localCandidateVersion.getValue())\n                 .withVersionRequirements(versionRequirementsInString);\n-        ResolveComponentVersionsRequest request = new ResolveComponentVersionsRequest().withPlatform(platform)\n-                .withComponentCandidates(Collections.singletonList(candidate))\n-                // TODO: [P41215565]: Switch back deploymentConfigurationId once it's removed from URL path\n-                // use UUID to avoid ARN complication in URL, deploymentConfigurationId is used for logging purpose\n-                // in server, so could have this hack now\n-                .withDeploymentConfigurationId(UUID.randomUUID().toString());\n-\n-        ResolveComponentVersionsResult result;\n+        ResolveComponentCandidatesRequest request = new ResolveComponentCandidatesRequest().withPlatform(platform)\n+                .withComponentCandidates(Collections.singletonList(candidate));\n+        // TODO: [P41215565]: Switch back deploymentConfigurationId once it's removed from URL path\n+        // use UUID to avoid ARN complication in URL, deploymentConfigurationId is used for logging purpose\n+        // in server, so could have this hack now\n+        //.withDeploymentConfigurationId(UUID.randomUUID().toString());\n+\n+        ResolveComponentCandidatesResult result;\n         try {\n-            result = clientFactory.getCmsClient().resolveComponentVersions(request);\n+            result = clientFactory.getCmsClient().resolveComponentCandidates(request);", "originalCommit": "7b44ecac127664450400975c174652863a5b9f5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2OTM5MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r528969391", "bodyText": "yeah. will do renaming in one shot", "author": "leaf94", "createdAt": "2020-11-23T20:14:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2MzI5Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2NTEzOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r528965138", "bodyText": "Should be able to delete the function.", "author": "wikimonkey", "createdAt": "2020-11-23T20:06:00Z", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -235,7 +249,7 @@ ComponentMetadata getPackageMetadata(@NonNull ComponentIdentifier pkgId) throws\n      */\n     List<ComponentMetadata> listAvailablePackageMetadata(@NonNull String packageName, @NonNull Requirement requirement)", "originalCommit": "7b44ecac127664450400975c174652863a5b9f5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2OTU4Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r528969587", "bodyText": "good point... I will try", "author": "leaf94", "createdAt": "2020-11-23T20:14:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2NTEzOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2NjM4Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/706#discussion_r528966383", "bodyText": "The exception should be renamed, and probably examine exception hierarchy.", "author": "wikimonkey", "createdAt": "2020-11-23T20:08:34Z", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -409,4 +429,102 @@ private static Semver parseVersionFromFileName(String filename) throws PackageLo\n         }\n     }\n \n+    /**\n+     * Saves recipe metadata to file. Overrides if the target file exists.\n+     *\n+     * @param componentIdentifier component id\n+     * @param recipeMetadata      metadata for the recipe\n+     * @throws PackageLoadingException when failed write recipe metadata to file system.\n+     */\n+    public void saveRecipeMetadata(ComponentIdentifier componentIdentifier, RecipeMetadata recipeMetadata)\n+            throws PackageLoadingException {\n+        File metadataFile = resolveRecipeMetadataFile(componentIdentifier);\n+\n+        try {\n+            SerializerFactory.getFailSafeJsonObjectMapper().writeValue(metadataFile, recipeMetadata);\n+        } catch (IOException e) {\n+            logger.atError().cause(e).kv(RECIPE_METADATA_FILE_PATH_LOG_KEY, metadataFile.getAbsolutePath())\n+                    .log(\"Failed to write recipe metadata file\");\n+\n+            throw new PackageLoadingException(\n+                    String.format(\"Failed to write recipe metadata to file: '%s'.\", metadataFile.getAbsolutePath()), e);\n+        }\n+    }\n+\n+    /**\n+     * Reads component recipe metadata file.\n+     *\n+     * @param componentIdentifier component id\n+     * @throws PackageLoadingException if failed to read recipe metadata from file system or failed to parse the file.\n+     */\n+    public RecipeMetadata getRecipeMetadata(ComponentIdentifier componentIdentifier) throws PackageLoadingException {\n+        File metadataFile = resolveRecipeMetadataFile(componentIdentifier);\n+\n+        if (!metadataFile.exists() || !metadataFile.isFile()) {\n+            // log error because this is not expected to happen in any normal case\n+            logger.atError().kv(RECIPE_METADATA_FILE_PATH_LOG_KEY, metadataFile.getAbsolutePath())\n+                    .log(\"Failed to get recipe metadata because the file doesn't not exit or it is a folder\");\n+\n+            throw new PackageLoadingException(String.format(\n+                    \"Failed to get recipe metadata because the file doesn't not exit or it is a folder. \"\n+                            + RECIPE_METADATA_FILE_PATH_LOG_KEY + \": '%s'.\", metadataFile.getAbsolutePath()));\n+        }\n+\n+        try {\n+            return SerializerFactory.getFailSafeJsonObjectMapper().readValue(metadataFile, RecipeMetadata.class);\n+\n+            // exception handling is intentionally heavy so that to deal with file corruption\n+            // TODO review note: I struggled btw having the below or removing it. Tried to remove it and feel a single\n+            // catch on IOException and saying file is corrupted is a little thin.\n+            // Furthermore, we should do the similar to recipe file! That's a lot more important.\n+        } catch (JsonParseException e) {\n+            // log error because this is not expected to happen in any normal case\n+            logger.atError().cause(e).kv(RECIPE_METADATA_FILE_PATH_LOG_KEY, metadataFile.getAbsolutePath())\n+                    .log(\"Failed to get recipe metadata because the recipe metadata file should be a json \"\n+                                 + \"but is corrupted\");\n+\n+            throw new PackageLoadingException(String.format(", "originalCommit": "7b44ecac127664450400975c174652863a5b9f5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}