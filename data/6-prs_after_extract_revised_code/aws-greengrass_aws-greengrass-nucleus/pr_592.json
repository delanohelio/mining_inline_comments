{"pr_number": 592, "pr_title": "Set IPC socket to be ugo+rw (666)", "pr_createdAt": "2020-10-30T23:51:23Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/592", "timeline": [{"oid": "e695dad2f498701ef021c7041a36bf5253b0178f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e695dad2f498701ef021c7041a36bf5253b0178f", "message": "Set IPC socket to be ugo+rw (666)", "committedDate": "2020-10-30T23:50:21Z", "type": "commit"}, {"oid": "a92cbec2a1488aab510d6ac954d3749e83f0fd93", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a92cbec2a1488aab510d6ac954d3749e83f0fd93", "message": "Merge branch 'master' into ipc-socket-perm", "committedDate": "2020-10-30T23:51:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyNzA1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/592#discussion_r515427056", "bodyText": "this isn't logging. use debug instead", "author": "MikeDombo", "createdAt": "2020-10-30T23:52:32Z", "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "diffHunk": "@@ -156,6 +161,29 @@ public void startup() {\n             close();\n             throw e;\n         }\n+\n+        // IPC socket does not get created immediately after runServer returns\n+        // Wait up to 30s for it to exist\n+        Path ipcPath = Paths.get(ipcServerSocketAbsolutePath);\n+        long maxTime = System.currentTimeMillis() + MAX_IPC_SOCKET_CREATION_WAIT_TIME_SECONDS * 1000;\n+        while (System.currentTimeMillis() < maxTime && Files.notExists(ipcPath)) {\n+            logger.atDebug(\"Waiting for server socket file\");", "originalCommit": "a92cbec2a1488aab510d6ac954d3749e83f0fd93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyODI3OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/592#discussion_r515428279", "bodyText": "\ud83e\udd26", "author": "rbattle", "createdAt": "2020-10-30T23:59:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyNzA1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7d6724287682bab173d7a48f69d807440a3cc5a7", "chunk": "diff --git a/src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java b/src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java\nindex 63c03a0a..25a97e42 100644\n--- a/src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java\n+++ b/src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java\n\n@@ -167,13 +168,13 @@ public class IPCEventStreamService implements Startable, Closeable {\n         Path ipcPath = Paths.get(ipcServerSocketAbsolutePath);\n         long maxTime = System.currentTimeMillis() + MAX_IPC_SOCKET_CREATION_WAIT_TIME_SECONDS * 1000;\n         while (System.currentTimeMillis() < maxTime && Files.notExists(ipcPath)) {\n-            logger.atDebug(\"Waiting for server socket file\");\n+            logger.atDebug().log(\"Waiting for server socket file\");\n             try {\n                 Thread.sleep(SOCKET_CREATE_POLL_INTERVAL_MS);\n             } catch (InterruptedException e) {\n                 logger.atWarn().setCause(e).log(\"Service interrupted before server socket exists\");\n                 close();\n-                return;\n+                throw new RuntimeException(e);\n             }\n         }\n         // set permissions on IPC socket so that everyone can read/write\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyNzMwMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/592#discussion_r515427302", "bodyText": "rethrow (as unchecked) to cause the startup to fail?", "author": "MikeDombo", "createdAt": "2020-10-30T23:54:07Z", "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "diffHunk": "@@ -156,6 +161,29 @@ public void startup() {\n             close();\n             throw e;\n         }\n+\n+        // IPC socket does not get created immediately after runServer returns\n+        // Wait up to 30s for it to exist\n+        Path ipcPath = Paths.get(ipcServerSocketAbsolutePath);\n+        long maxTime = System.currentTimeMillis() + MAX_IPC_SOCKET_CREATION_WAIT_TIME_SECONDS * 1000;\n+        while (System.currentTimeMillis() < maxTime && Files.notExists(ipcPath)) {\n+            logger.atDebug(\"Waiting for server socket file\");\n+            try {\n+                Thread.sleep(SOCKET_CREATE_POLL_INTERVAL_MS);\n+            } catch (InterruptedException e) {\n+                logger.atWarn().setCause(e).log(\"Service interrupted before server socket exists\");\n+                close();\n+                return;\n+            }\n+        }\n+        // set permissions on IPC socket so that everyone can read/write\n+        try {\n+            Permissions.setIpcSocketPermission(ipcPath);\n+        } catch (IOException e) {\n+            logger.atError().setCause(e).log(\"Error while setting permissions for IPC server socket\");\n+            close();\n+            return;", "originalCommit": "a92cbec2a1488aab510d6ac954d3749e83f0fd93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7d6724287682bab173d7a48f69d807440a3cc5a7", "chunk": "diff --git a/src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java b/src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java\nindex 63c03a0a..25a97e42 100644\n--- a/src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java\n+++ b/src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java\n\n@@ -167,13 +168,13 @@ public class IPCEventStreamService implements Startable, Closeable {\n         Path ipcPath = Paths.get(ipcServerSocketAbsolutePath);\n         long maxTime = System.currentTimeMillis() + MAX_IPC_SOCKET_CREATION_WAIT_TIME_SECONDS * 1000;\n         while (System.currentTimeMillis() < maxTime && Files.notExists(ipcPath)) {\n-            logger.atDebug(\"Waiting for server socket file\");\n+            logger.atDebug().log(\"Waiting for server socket file\");\n             try {\n                 Thread.sleep(SOCKET_CREATE_POLL_INTERVAL_MS);\n             } catch (InterruptedException e) {\n                 logger.atWarn().setCause(e).log(\"Service interrupted before server socket exists\");\n                 close();\n-                return;\n+                throw new RuntimeException(e);\n             }\n         }\n         // set permissions on IPC socket so that everyone can read/write\n"}}, {"oid": "7d6724287682bab173d7a48f69d807440a3cc5a7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7d6724287682bab173d7a48f69d807440a3cc5a7", "message": "Fix logging and throw rte", "committedDate": "2020-10-31T00:03:06Z", "type": "commit"}, {"oid": "7ab27addd8660fce8e3c40c60a3b15b5cb6b041d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7ab27addd8660fce8e3c40c60a3b15b5cb6b041d", "message": "Merge branch 'master' into ipc-socket-perm", "committedDate": "2020-10-31T00:15:20Z", "type": "commit"}]}