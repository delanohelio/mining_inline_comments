{"pr_number": 474, "pr_title": "wait till the publish interval to check the periodic metrics future s\u2026", "pr_createdAt": "2020-09-25T17:32:22Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/474", "timeline": [{"oid": "b96edef4199ca7746f3ab925a3fe04e0aaa5a8d5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b96edef4199ca7746f3ab925a3fe04e0aaa5a8d5", "message": "wait till the publish interval to check the periodic metrics future status", "committedDate": "2020-09-25T17:29:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNTY5OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/474#discussion_r495135698", "bodyText": "the problem is that getPeriodPublishMetricsFuture can return null. Are you 100% sure that at this point, it cannot be null?", "author": "MikeDombo", "createdAt": "2020-09-25T17:35:38Z", "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java", "diffHunk": "@@ -104,7 +102,8 @@ void GIVEN_kernel_running_with_telemetry_config_WHEN_launch_THEN_metrics_are_pub\n         TimeUnit.SECONDS.sleep(periodicInterval + 1);\n         assertTrue(Coerce.toLong(telTopics.find(RUNTIME_STORE_NAMESPACE_TOPIC,\n                 TELEMETRY_LAST_PERIODIC_AGGREGATION_TIME_TOPIC)) > lastAgg);\n-\n+        long delay = ta.getPeriodicPublishMetricsFuture().getDelay(TimeUnit.SECONDS);", "originalCommit": "b96edef4199ca7746f3ab925a3fe04e0aaa5a8d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNzk2OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/474#discussion_r495137968", "bodyText": "Yes, by this time the first publish is also done which is scheduled using the future. It cannot be null.\nThe previous check was too early for periodPublishMetricsFuture to be not null as it is assigned to be null when TA starts.", "author": "saranyailla", "createdAt": "2020-09-25T17:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNTY5OA=="}], "type": "inlineReview", "revised_code": {"commit": "540bf2b1b22ee26132355c37ed0d5747f4890f9b", "chunk": "diff --git a/src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java b/src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java\nindex 3661ea6170..320c573c5a 100644\n--- a/src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java\n+++ b/src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java\n\n@@ -102,6 +102,7 @@ class TelemetryAgentTest extends BaseITCase {\n         TimeUnit.SECONDS.sleep(periodicInterval + 1);\n         assertTrue(Coerce.toLong(telTopics.find(RUNTIME_STORE_NAMESPACE_TOPIC,\n                 TELEMETRY_LAST_PERIODIC_AGGREGATION_TIME_TOPIC)) > lastAgg);\n+        assertNotNull(ta.getPeriodicPublishMetricsFuture(), \"periodic publish future is not scheduled.\");\n         long delay = ta.getPeriodicPublishMetricsFuture().getDelay(TimeUnit.SECONDS);\n         assertTrue(delay <= periodicInterval);\n         // telemetry logs are always written to ~root/telemetry\n"}}, {"oid": "540bf2b1b22ee26132355c37ed0d5747f4890f9b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/540bf2b1b22ee26132355c37ed0d5747f4890f9b", "message": "assert non null on periodic metrics future", "committedDate": "2020-09-25T17:49:37Z", "type": "commit"}]}