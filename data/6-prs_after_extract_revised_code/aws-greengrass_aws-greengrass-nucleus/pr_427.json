{"pr_number": 427, "pr_title": "Add TES role policy creation in easysetup, remove cmsClient", "pr_createdAt": "2020-09-10T19:31:10Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/427", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4NzA5Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/427#discussion_r486587097", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nProblem: While wrapping the caught exception into a custom one, information about the caught exception is being lost, including information about the stack trace of the exception.\nFix: If the caught exception object does not contain sensitive information, consider passing it as the \"rootCause\" or inner exception parameter to the constructor of the new exception before throwing the new exception. (Note that not all exception constructors support inner exceptions. Use a wrapper exception that supports inner exceptions.)\nLearn more", "author": "MikeDombo", "createdAt": "2020-09-10T19:34:13Z", "path": "src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java", "diffHunk": "@@ -228,6 +240,19 @@ void parseArgs() {\n                 case TES_ROLE_NAME_ARG_SHORT:\n                     this.tesRoleName = getArg();\n                     break;\n+                case TES_ROLE_POLICY_NAME_ARG:\n+                case TES_ROLE_POLICY_NAME_ARG_SHORT:\n+                    this.tesRolePolicyName = getArg();\n+                    break;\n+                case TES_ROLE_POLICY_DOC_ARG:\n+                case TES_ROLE_POLICY_DOC_ARG_SHORT:\n+                    try {\n+                        this.tesRolePolicyDoc = Utils.loadParamMaybeFile(getArg());\n+                    } catch (Exception e) {", "originalCommit": "301480c1750a980632dd8ee082dcb901e7afef1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "41931239a82175f494b844781cf1054144eedf53", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\nindex aa73ed4435..39f5de8af8 100644\n--- a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n+++ b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n\n@@ -248,9 +249,9 @@ public class EvergreenSetup {\n                 case TES_ROLE_POLICY_DOC_ARG_SHORT:\n                     try {\n                         this.tesRolePolicyDoc = Utils.loadParamMaybeFile(getArg());\n-                    } catch (Exception e) {\n-                        logger.atError().setCause(e).log();\n-                        throw new RuntimeException(String.format(\"Error loading TES role policy doc: %s\", this.tesRolePolicyDoc));\n+                    } catch (URISyntaxException | IOException e) {\n+                        throw new RuntimeException(\n+                                String.format(\"Error loading TES role policy doc: %s\", this.tesRolePolicyDoc), e);\n                     }\n                     break;\n                 case TES_ROLE_ALIAS_NAME_ARG:\n"}}, {"oid": "41931239a82175f494b844781cf1054144eedf53", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/41931239a82175f494b844781cf1054144eedf53", "message": "add tes role policy creation in easysetup", "committedDate": "2020-09-10T20:32:39Z", "type": "commit"}, {"oid": "41931239a82175f494b844781cf1054144eedf53", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/41931239a82175f494b844781cf1054144eedf53", "message": "add tes role policy creation in easysetup", "committedDate": "2020-09-10T20:32:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMTkwOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/427#discussion_r486621909", "bodyText": "It might be better to not fail the setup for this, instead we could just log something like this and move on - Could not create role policy because it already exists, please attach it to the IAM role if it isn't attached already.", "author": "shaguptashaikh", "createdAt": "2020-09-10T20:43:12Z", "path": "src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -300,6 +294,33 @@ public void setupIoTRoleForTes(String roleName, String roleAliasName, String cer\n         iotClient.attachPolicy(attachPolicyRequest);\n     }\n \n+    /**\n+     * Creates IAM policy using specified name and document. Attach the policy to given IAM role name.\n+     *\n+     * @param roleName           name of target role\n+     * @param rolePolicyName     name of policy to create and attach\n+     * @param rolePolicyDocument document of policy to create and attach\n+     * @return ARN of created policy\n+     */\n+    public String createAndAttachRolePolicy(String roleName, String rolePolicyName, String rolePolicyDocument) {\n+        String tesRolePolicyArn;\n+        try {\n+            CreatePolicyResponse createPolicyResponse = iamClient.createPolicy(\n+                    software.amazon.awssdk.services.iam.model.CreatePolicyRequest.builder().policyName(rolePolicyName)\n+                            .policyDocument(rolePolicyDocument).build());\n+            tesRolePolicyArn = createPolicyResponse.policy().arn();\n+            outStream.printf(\"IAM role policy for TES \\\"%s\\\" created%n\", rolePolicyName);\n+        } catch (EntityAlreadyExistsException e) {\n+            // TODO get and reuse the policy. non trivial because we can only get IAM policy by ARN\n+            throw new RuntimeException(String.format(\"TES role policy named %s already exists\", rolePolicyName), e);", "originalCommit": "41931239a82175f494b844781cf1054144eedf53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyOTIyMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/427#discussion_r486629220", "bodyText": "Then we won't have the policy ARN to return. Currently BaseE2ETestCase needs it for cleanup. Let's fail it for now?", "author": "tilo-chen", "createdAt": "2020-09-10T20:57:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMTkwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYzNTExOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/427#discussion_r486635119", "bodyText": "Return an optional from here then and have E2E cleanup logic attempt cleanup only if it Optional.isPresent(arn)? E2E doesn't seem to be failing on EntityAlreadyExistsException even today so it won't behave differently", "author": "shaguptashaikh", "createdAt": "2020-09-10T21:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMTkwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e0decbc45b13734ef16fe9b6f977e501f0f73d57", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java b/src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java\nindex b12e7fb2d4..5317cb92d3 100644\n--- a/src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java\n+++ b/src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java\n\n@@ -302,23 +296,25 @@ public class DeviceProvisioningHelper {\n      * @param rolePolicyDocument document of policy to create and attach\n      * @return ARN of created policy\n      */\n-    public String createAndAttachRolePolicy(String roleName, String rolePolicyName, String rolePolicyDocument) {\n-        String tesRolePolicyArn;\n+    public Optional<String> createAndAttachRolePolicy(String roleName, String rolePolicyName,\n+                                                      String rolePolicyDocument) {\n         try {\n+            String tesRolePolicyArn;\n             CreatePolicyResponse createPolicyResponse = iamClient.createPolicy(\n                     software.amazon.awssdk.services.iam.model.CreatePolicyRequest.builder().policyName(rolePolicyName)\n                             .policyDocument(rolePolicyDocument).build());\n             tesRolePolicyArn = createPolicyResponse.policy().arn();\n             outStream.printf(\"IAM role policy for TES \\\"%s\\\" created%n\", rolePolicyName);\n+            outStream.println(\"Attaching IAM role policy for TES to IAM role for TES...\");\n+            iamClient.attachRolePolicy(\n+                    AttachRolePolicyRequest.builder().roleName(roleName).policyArn(tesRolePolicyArn).build());\n+            return Optional.of(tesRolePolicyArn);\n         } catch (EntityAlreadyExistsException e) {\n             // TODO get and reuse the policy. non trivial because we can only get IAM policy by ARN\n-            throw new RuntimeException(String.format(\"TES role policy named %s already exists\", rolePolicyName), e);\n+            outStream.printf(\"IAM policy named \\\"%s\\\" already exists. Please attach it to the IAM role if not \"\n+                    + \"already%n\", rolePolicyName);\n+            return Optional.empty();\n         }\n-\n-        outStream.println(\"Attaching IAM role policy for TES to IAM role for TES...\");\n-        iamClient.attachRolePolicy(\n-                AttachRolePolicyRequest.builder().roleName(roleName).policyArn(tesRolePolicyArn).build());\n-        return tesRolePolicyArn;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMjU0Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/427#discussion_r486622547", "bodyText": "Do we still need this?", "author": "shaguptashaikh", "createdAt": "2020-09-10T20:44:25Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -402,24 +399,17 @@ protected void setupTesRoleAndAlias() throws InterruptedException, ServiceLoadEx\n         try {\n             deviceProvisioningHelper\n                     .setupIoTRoleForTes(TES_ROLE_NAME, TES_ROLE_ALIAS_NAME, thingInfo.getCertificateArn());\n+            tesRolePolicyArn = deviceProvisioningHelper\n+                    .createAndAttachRolePolicy(TES_ROLE_NAME, TES_ROLE_POLICY_NAME, TES_ROLE_POLICY_DOCUMENT);\n             deviceProvisioningHelper.updateKernelConfigWithTesRoleInfo(kernel, TES_ROLE_ALIAS_NAME);\n-\n-            CreatePolicyResponse createPolicyResponse = iamClient.createPolicy(\n-                    CreatePolicyRequest.builder().policyName(TES_ROLE_POLICY_NAME)\n-                            .policyDocument(TES_ROLE_POLICY_DOCUMENT)\n-                            .description(\"Defines permissions to access AWS services for E2E test device TES role\")\n-                            .build());\n-            tesRolePolicyArn = createPolicyResponse.policy().arn();\n-            iamClient.attachRolePolicy(AttachRolePolicyRequest.builder().roleName(TES_ROLE_NAME)\n-                    .policyArn(tesRolePolicyArn).build());\n         } catch (EntityAlreadyExistsException e) {\n             // No-op if resources already exist\n         }", "originalCommit": "41931239a82175f494b844781cf1054144eedf53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYzMjI0Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/427#discussion_r486632246", "bodyText": "no. setupIoTRoleForTes tries to get before creation, and createAndAttachRolePolicy also handles it", "author": "tilo-chen", "createdAt": "2020-09-10T21:03:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMjU0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e0decbc45b13734ef16fe9b6f977e501f0f73d57", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\nindex ac57be910a..a2de003a54 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n\n@@ -396,15 +396,11 @@ public class BaseE2ETestCase implements AutoCloseable {\n     }\n \n     protected void setupTesRoleAndAlias() throws InterruptedException, ServiceLoadException {\n-        try {\n-            deviceProvisioningHelper\n-                    .setupIoTRoleForTes(TES_ROLE_NAME, TES_ROLE_ALIAS_NAME, thingInfo.getCertificateArn());\n-            tesRolePolicyArn = deviceProvisioningHelper\n-                    .createAndAttachRolePolicy(TES_ROLE_NAME, TES_ROLE_POLICY_NAME, TES_ROLE_POLICY_DOCUMENT);\n-            deviceProvisioningHelper.updateKernelConfigWithTesRoleInfo(kernel, TES_ROLE_ALIAS_NAME);\n-        } catch (EntityAlreadyExistsException e) {\n-            // No-op if resources already exist\n-        }\n+        deviceProvisioningHelper\n+                .setupIoTRoleForTes(TES_ROLE_NAME, TES_ROLE_ALIAS_NAME, thingInfo.getCertificateArn());\n+        tesRolePolicyArn = deviceProvisioningHelper\n+                .createAndAttachRolePolicy(TES_ROLE_NAME, TES_ROLE_POLICY_NAME, TES_ROLE_POLICY_DOCUMENT);\n+        deviceProvisioningHelper.updateKernelConfigWithTesRoleInfo(kernel, TES_ROLE_ALIAS_NAME);\n \n         // Force context to create TES now to that it subscribes to the role alias changes\n         kernel.getContext().get(TokenExchangeService.class);\n"}}, {"oid": "e0decbc45b13734ef16fe9b6f977e501f0f73d57", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e0decbc45b13734ef16fe9b6f977e501f0f73d57", "message": "make policy arn optional. remove unused", "committedDate": "2020-09-10T21:22:17Z", "type": "commit"}, {"oid": "215ae8b3ee8148b751ad9cec16627228790b4b84", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/215ae8b3ee8148b751ad9cec16627228790b4b84", "message": "Merge branch 'master' into easysetup-create-policy", "committedDate": "2020-09-11T18:03:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxNDkwMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/427#discussion_r487214903", "bodyText": "is this clean up order ok? as deleteRole happens before detachRolePolicy?", "author": "hui-yang", "createdAt": "2020-09-11T18:23:15Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -429,9 +415,12 @@ protected void setupTesRoleAndAlias() throws InterruptedException, ServiceLoadEx\n     protected static void cleanUpTesRoleAndAlias() {\n         try {\n             iotClient.deleteRoleAlias(DeleteRoleAliasRequest.builder().roleAlias(TES_ROLE_ALIAS_NAME).build());\n-            iamClient.detachRolePolicy(DetachRolePolicyRequest.builder().roleName(TES_ROLE_NAME).policyArn(tesRolePolicyArn).build());\n             iamClient.deleteRole(DeleteRoleRequest.builder().roleName(TES_ROLE_NAME).build());\n-            iamClient.deletePolicy(DeletePolicyRequest.builder().policyArn(tesRolePolicyArn).build());\n+\n+            if (tesRolePolicyArn.isPresent()) {\n+                iamClient.detachRolePolicy(DetachRolePolicyRequest.builder().roleName(TES_ROLE_NAME).policyArn(tesRolePolicyArn.get()).build());", "originalCommit": "215ae8b3ee8148b751ad9cec16627228790b4b84", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyMjA1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/427#discussion_r487222056", "bodyText": "good catch!", "author": "tilo-chen", "createdAt": "2020-09-11T18:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxNDkwMw=="}], "type": "inlineReview", "revised_code": {"commit": "2ea68608153e781a3709a41e925f8aec901b35a8", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\nindex a2de003a54..4023daa111 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n\n@@ -415,12 +415,13 @@ public class BaseE2ETestCase implements AutoCloseable {\n     protected static void cleanUpTesRoleAndAlias() {\n         try {\n             iotClient.deleteRoleAlias(DeleteRoleAliasRequest.builder().roleAlias(TES_ROLE_ALIAS_NAME).build());\n-            iamClient.deleteRole(DeleteRoleRequest.builder().roleName(TES_ROLE_NAME).build());\n \n             if (tesRolePolicyArn.isPresent()) {\n                 iamClient.detachRolePolicy(DetachRolePolicyRequest.builder().roleName(TES_ROLE_NAME).policyArn(tesRolePolicyArn.get()).build());\n                 iamClient.deletePolicy(DeletePolicyRequest.builder().policyArn(tesRolePolicyArn.get()).build());\n             }\n+\n+            iamClient.deleteRole(DeleteRoleRequest.builder().roleName(TES_ROLE_NAME).build());\n         } catch (ResourceNotFoundException | NoSuchEntityException e) {\n             logger.atInfo().addKeyValue(\"error-message\", e.getMessage()).log(\"Could not clean up TES resources\");\n         }\n"}}, {"oid": "2ea68608153e781a3709a41e925f8aec901b35a8", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2ea68608153e781a3709a41e925f8aec901b35a8", "message": "fix cleanup order", "committedDate": "2020-09-11T18:39:00Z", "type": "commit"}, {"oid": "0af30c9582885b92ff715c96ffc5201b14a31ecf", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0af30c9582885b92ff715c96ffc5201b14a31ecf", "message": "Merge branch 'master' into easysetup-create-policy", "committedDate": "2020-09-14T20:38:03Z", "type": "commit"}, {"oid": "c6a8fb54fd2de435899dcf495b2c87b68351caa0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c6a8fb54fd2de435899dcf495b2c87b68351caa0", "message": "fix e2e test", "committedDate": "2020-09-14T23:25:34Z", "type": "commit"}, {"oid": "43a8e7aa6164af7096e2ffe990d6823ac19c836e", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/43a8e7aa6164af7096e2ffe990d6823ac19c836e", "message": "Merge branch 'master' into easysetup-create-policy", "committedDate": "2020-09-14T23:49:16Z", "type": "commit"}]}