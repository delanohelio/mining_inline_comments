{"pr_number": 551, "pr_title": "Do not allow publish interval configurability for telemetry and FSS less than default. ", "pr_createdAt": "2020-10-20T22:51:56Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/551", "timeline": [{"oid": "3ff13aa83f9053a8351191ce5525cbc40c173546", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3ff13aa83f9053a8351191ce5525cbc40c173546", "message": "Do not allow publish interval configurability for telemetry and FSS less than default. Remove publish topic configurability.", "committedDate": "2020-10-20T22:51:09Z", "type": "commit"}, {"oid": "8787b85f1dc79138b769f7d56724e11f19ce3e90", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8787b85f1dc79138b769f7d56724e11f19ce3e90", "message": "Merge branch 'master' into removeParameters", "committedDate": "2020-10-28T03:43:24Z", "type": "commit"}, {"oid": "c959409f39520369ac07493bfa37e393016b57e4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c959409f39520369ac07493bfa37e393016b57e4", "message": "Merge branch 'master' into removeParameters", "committedDate": "2020-11-05T00:04:23Z", "type": "commit"}, {"oid": "66c1b4e1520005f1bbfb571abc35e7916bc97d30", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/66c1b4e1520005f1bbfb571abc35e7916bc97d30", "message": "Fix accesibility for test feartures interface and methods.", "committedDate": "2020-11-06T06:11:46Z", "type": "commit"}, {"oid": "9713828482d3f572df2c88d662ac24b1940c55ce", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9713828482d3f572df2c88d662ac24b1940c55ce", "message": "Merge branch 'master' into removeParameters", "committedDate": "2020-11-06T06:13:11Z", "type": "commit"}, {"oid": "a3b5bef000b5a25505a5100530d30f6211799bcd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a3b5bef000b5a25505a5100530d30f6211799bcd", "message": "Merge branch 'master' into removeParameters", "committedDate": "2020-11-11T00:59:00Z", "type": "commit"}, {"oid": "976d1eb3776689a35a3a854dd6d2585f9461186c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/976d1eb3776689a35a3a854dd6d2585f9461186c", "message": "Merge branch 'master' into removeParameters", "committedDate": "2020-11-11T06:26:17Z", "type": "commit"}, {"oid": "5882df2974b128eab38f6ac8a404da1345883fac", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5882df2974b128eab38f6ac8a404da1345883fac", "message": "Merge branch 'master' into removeParameters", "committedDate": "2020-11-11T16:05:57Z", "type": "commit"}, {"oid": "5deeac317ab273649639ba9e511bb2c8ac18ac24", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5deeac317ab273649639ba9e511bb2c8ac18ac24", "message": "Merge branch 'master' into removeParameters", "committedDate": "2020-11-11T23:42:06Z", "type": "commit"}, {"oid": "79caad0fc4ebbe7e8aad7294c0ee3c30d0f4fb2f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/79caad0fc4ebbe7e8aad7294c0ee3c30d0f4fb2f", "message": "Get test features override for FSS and telemetry.", "committedDate": "2020-11-11T23:59:25Z", "type": "forcePushed"}, {"oid": "3154e651850e5ad93e2c67e283a9cfbd6c9be4ac", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3154e651850e5ad93e2c67e283a9cfbd6c9be4ac", "message": "Get test features override for FSS and telemetry.", "committedDate": "2020-11-12T00:06:12Z", "type": "forcePushed"}, {"oid": "0a47dc2a1a4d3a23bf689ae57155f8a764062c8a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0a47dc2a1a4d3a23bf689ae57155f8a764062c8a", "message": "Get test features override for FSS and telemetry.", "committedDate": "2020-11-12T00:57:16Z", "type": "forcePushed"}, {"oid": "2683b0446071c2d5ec98b564ee70c1807a831b4c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2683b0446071c2d5ec98b564ee70c1807a831b4c", "message": "Get test features override for FSS and telemetry.", "committedDate": "2020-11-12T04:32:14Z", "type": "forcePushed"}, {"oid": "a5225f70d29aa1c9e471b0aed0be98e940a674d2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a5225f70d29aa1c9e471b0aed0be98e940a674d2", "message": "Get test features override for FSS and telemetry.", "committedDate": "2020-11-12T05:30:11Z", "type": "commit"}, {"oid": "a5225f70d29aa1c9e471b0aed0be98e940a674d2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a5225f70d29aa1c9e471b0aed0be98e940a674d2", "message": "Get test features override for FSS and telemetry.", "committedDate": "2020-11-12T05:30:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg1MTUzNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/551#discussion_r521851535", "bodyText": "seems unnecessary", "author": "MikeDombo", "createdAt": "2020-11-12T05:38:56Z", "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java", "diffHunk": "@@ -77,34 +98,36 @@ void GIVEN_kernel_running_with_telemetry_config_WHEN_launch_THEN_metrics_are_pub\n         //WHEN\n         CountDownLatch telemetryRunning = new CountDownLatch(1);\n         kernel.getContext().addGlobalStateChangeListener((service, oldState, newState) -> {\n-            if (service.getName().equals(TELEMETRY_AGENT_SERVICE_TOPICS) &&\n-                    service.getState().equals(State.RUNNING)) {\n-                telemetryRunning.countDown();\n-                ta = (TelemetryAgent) service;\n+            if (service.getName().equals(TELEMETRY_AGENT_SERVICE_TOPICS)) {\n+                if (service.getState().equals(State.RUNNING)) {\n+                    ta = (TelemetryAgent) service;\n+                    ta.setPeriodicPublishMetricsIntervalSec(publishInterval);\n+                    ta.setPeriodicAggregateMetricsIntervalSec(aggregateInterval);\n+                    ta.schedulePeriodicAggregateMetrics(true);\n+                    ta.schedulePeriodicPublishMetrics(true);\n+                    telemetryRunning.countDown();\n+                }\n             }\n-\n         });\n         kernel.launch();\n         assertTrue(telemetryRunning.await(10, TimeUnit.SECONDS), \"TelemetryAgent is not in RUNNING state.\");\n         Topics telTopics = kernel.findServiceTopic(TELEMETRY_AGENT_SERVICE_TOPICS);\n         assertNotNull(telTopics);\n-        int aggregateInterval = Coerce.toInt(telTopics.find(PARAMETERS_CONFIG_KEY,\n-                TELEMETRY_PERIODIC_AGGREGATE_INTERVAL_SEC));\n-        int periodicInterval = Coerce.toInt(telTopics.find(PARAMETERS_CONFIG_KEY,\n-                TELEMETRY_PERIODIC_PUBLISH_INTERVAL_SEC));\n-        //telemetry configurations are set correctly\n-        assertEquals(2, aggregateInterval);\n-        assertEquals(4, periodicInterval);\n         long lastAgg = Coerce.toLong(telTopics.find(RUNTIME_STORE_NAMESPACE_TOPIC,\n                 TELEMETRY_LAST_PERIODIC_AGGREGATION_TIME_TOPIC));\n \n         //wait till the first publish\n-        TimeUnit.SECONDS.sleep(periodicInterval + 1);\n+        TimeUnit.SECONDS.sleep(publishInterval + 1);\n         assertTrue(Coerce.toLong(telTopics.find(RUNTIME_STORE_NAMESPACE_TOPIC,\n                 TELEMETRY_LAST_PERIODIC_AGGREGATION_TIME_TOPIC)) > lastAgg);\n         assertNotNull(ta.getPeriodicPublishMetricsFuture(), \"periodic publish future is not scheduled.\");\n         long delay = ta.getPeriodicPublishMetricsFuture().getDelay(TimeUnit.SECONDS);\n-        assertTrue(delay <= periodicInterval);\n+        if (delay > publishInterval) {\n+            logger.atInfo().log(\"****************\");\n+            logger.atInfo().log(delay);\n+            logger.atInfo().log(\"****************\");", "originalCommit": "a5225f70d29aa1c9e471b0aed0be98e940a674d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6e4bbfec5f629b55dff8b70b288e208be3373510", "chunk": "diff --git a/src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java b/src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java\nindex 535c433cf..3a9bd79a0 100644\n--- a/src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java\n+++ b/src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java\n\n@@ -101,10 +98,6 @@ class TelemetryAgentTest extends BaseITCase {\n             if (service.getName().equals(TELEMETRY_AGENT_SERVICE_TOPICS)) {\n                 if (service.getState().equals(State.RUNNING)) {\n                     ta = (TelemetryAgent) service;\n-                    ta.setPeriodicPublishMetricsIntervalSec(publishInterval);\n-                    ta.setPeriodicAggregateMetricsIntervalSec(aggregateInterval);\n-                    ta.schedulePeriodicAggregateMetrics(true);\n-                    ta.schedulePeriodicPublishMetrics(true);\n                     telemetryRunning.countDown();\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg1MjA5OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/551#discussion_r521852098", "bodyText": "why is all this stuff public now? Keep things private or package-private.", "author": "MikeDombo", "createdAt": "2020-11-12T05:40:39Z", "path": "src/main/java/com/aws/greengrass/telemetry/TelemetryAgent.java", "diffHunk": "@@ -111,7 +142,7 @@ public TelemetryAgent(Topics topics, MqttClient mqttClient, DeviceConfiguration\n      *\n      * @param isReconfigured will be true if aggregation interval is reconfigured\n      */\n-    private void schedulePeriodicAggregateMetrics(boolean isReconfigured) {\n+    public void schedulePeriodicAggregateMetrics(boolean isReconfigured) {", "originalCommit": "a5225f70d29aa1c9e471b0aed0be98e940a674d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6e4bbfec5f629b55dff8b70b288e208be3373510", "chunk": "diff --git a/src/main/java/com/aws/greengrass/telemetry/TelemetryAgent.java b/src/main/java/com/aws/greengrass/telemetry/TelemetryAgent.java\nindex 5b2f757c6..b6eba104b 100644\n--- a/src/main/java/com/aws/greengrass/telemetry/TelemetryAgent.java\n+++ b/src/main/java/com/aws/greengrass/telemetry/TelemetryAgent.java\n\n@@ -142,7 +142,7 @@ public class TelemetryAgent extends GreengrassService {\n      *\n      * @param isReconfigured will be true if aggregation interval is reconfigured\n      */\n-    public void schedulePeriodicAggregateMetrics(boolean isReconfigured) {\n+    void schedulePeriodicAggregateMetrics(boolean isReconfigured) {\n         for (PeriodicMetricsEmitter emitter : periodicMetricsEmitters) {\n             cancelJob(emitter.future, periodicAggregateMetricsInProgressLock, false);\n         }\n"}}, {"oid": "6e4bbfec5f629b55dff8b70b288e208be3373510", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6e4bbfec5f629b55dff8b70b288e208be3373510", "message": "Address PR comments.", "committedDate": "2020-11-12T05:59:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2MzAwNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/551#discussion_r521863007", "bodyText": "if you're pulling the intvalue, why are you using Double? Why not just Integer?", "author": "MikeDombo", "createdAt": "2020-11-12T06:17:43Z", "path": "src/main/java/com/aws/greengrass/telemetry/TelemetryAgent.java", "diffHunk": "@@ -89,13 +96,37 @@ public void onConnectionResumed(boolean sessionPresent) {\n     public TelemetryAgent(Topics topics, MqttClient mqttClient, DeviceConfiguration deviceConfiguration,\n                           MetricsAggregator ma, SystemMetricsEmitter sme, KernelMetricsEmitter kme,\n                           ScheduledExecutorService ses) {\n+        this(topics, mqttClient, deviceConfiguration, ma, sme, kme, ses,\n+                DEFAULT_PERIODIC_PUBLISH_INTERVAL_SEC, DEFAULT_PERIODIC_AGGREGATE_INTERVAL_SEC);\n+    }\n+\n+    /**\n+     * Constructor for the class.\n+     *\n+     * @param topics                                root configuration topic for this service\n+     * @param mqttClient                            {@link MqttClient}\n+     * @param deviceConfiguration                   {@link DeviceConfiguration}\n+     * @param ma                                    {@link MetricsAggregator}\n+     * @param sme                                   {@link SystemMetricsEmitter}\n+     * @param kme                                   {@link KernelMetricsEmitter}\n+     * @param ses                                   {@link ScheduledExecutorService}\n+     * @param periodicPublishMetricsIntervalSec     interval for cadence based telemetry publish.\n+     * @param periodicAggregateMetricsIntervalSec   interval for cadence based telemetry metrics aggregation.*/\n+    public TelemetryAgent(Topics topics, MqttClient mqttClient, DeviceConfiguration deviceConfiguration,\n+                          MetricsAggregator ma, SystemMetricsEmitter sme, KernelMetricsEmitter kme,\n+                          ScheduledExecutorService ses, int periodicPublishMetricsIntervalSec,\n+                          int periodicAggregateMetricsIntervalSec) {\n         super(topics);\n         this.mqttClient = mqttClient;\n         this.publisher = new MqttChunkedPayloadPublisher<>(this.mqttClient);\n         this.publisher.setMaxPayloadLengthBytes(MAX_PAYLOAD_LENGTH_BYTES);\n         this.ses = ses;\n         this.metricsAggregator = ma;\n         this.thingName = Coerce.toString(deviceConfiguration.getThingName());\n+        this.periodicAggregateMetricsIntervalSec = TestFeatureParameters.retrieveWithDefault(Double.class,", "originalCommit": "6e4bbfec5f629b55dff8b70b288e208be3373510", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2NDE2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/551#discussion_r521864164", "bodyText": "cause when I am sending the config in the UAT like\n            | aws.greengrass.TestFeatureParameters | LATEST | telemetryPeriodicAggregateMetricsIntervalSec  | 3 |\n\nThe value is 3.0 So it is a double/float.", "author": "nikkhilmuthye", "createdAt": "2020-11-12T06:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2MzAwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg3MzI1NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/551#discussion_r521873255", "bodyText": "That's a bug with how our SDK is using GSON", "author": "MikeDombo", "createdAt": "2020-11-12T06:48:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2MzAwNw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0dd544bd96c3b9e0e56f402a26ed89a3bf04f11f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0dd544bd96c3b9e0e56f402a26ed89a3bf04f11f", "message": "Merge branch 'master' into removeParameters", "committedDate": "2020-11-12T19:24:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM2ODg2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/551#discussion_r522368869", "bodyText": "Do we need to log here? Also if the current value is larger than DEFAULT_PERIODIC_UPDATE_INTERVAL_SEC, should we reduce it to DEFAULT_PERIODIC_UPDATE_INTERVAL_SEC?", "author": "hui-yang", "createdAt": "2020-11-12T19:31:58Z", "path": "src/main/java/com/aws/greengrass/status/FleetStatusService.java", "diffHunk": "@@ -127,16 +150,18 @@ public FleetStatusService(Topics topics, MqttClient mqttClient, DeploymentStatus\n         topics.lookup(PARAMETERS_CONFIG_KEY, FLEET_STATUS_PERIODIC_UPDATE_INTERVAL_SEC)\n                 .dflt(DEFAULT_PERIODIC_UPDATE_INTERVAL_SEC)\n                 .subscribe((why, newv) -> {\n-                    periodicUpdateIntervalSec = Coerce.toInt(newv);\n+                    int newPeriodicUpdateIntervalSec = Coerce.toInt(newv);\n+                    // Do not update the scheduled interval if it is less than the default.\n+                    if (newPeriodicUpdateIntervalSec < DEFAULT_PERIODIC_UPDATE_INTERVAL_SEC) {\n+                        return;", "originalCommit": "0dd544bd96c3b9e0e56f402a26ed89a3bf04f11f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM3NzQ2Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/551#discussion_r522377462", "bodyText": "I don't think we should change the value if the new value is lesser than the default and current value is greater than. default.", "author": "nikkhilmuthye", "createdAt": "2020-11-12T19:46:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM2ODg2OQ=="}], "type": "inlineReview", "revised_code": null}]}