{"pr_number": 547, "pr_title": "Add ability to restart nucleus on nucleus config changes if needed", "pr_createdAt": "2020-10-19T20:44:33Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547", "timeline": [{"oid": "56a8b695d859704e4c7b1d7af0db89dced9f1e0b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/56a8b695d859704e4c7b1d7af0db89dced9f1e0b", "message": "Add ability to restart nucleus on nucleus config changes if needed", "committedDate": "2020-10-19T20:48:19Z", "type": "forcePushed"}, {"oid": "88c709e228f0f63b4bf83efad1267895c1de80e2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/88c709e228f0f63b4bf83efad1267895c1de80e2", "message": "Add ability to restart nucleus on nucleus config changes if needed", "committedDate": "2020-10-19T20:55:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTczMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508059732", "bodyText": "nit: spelling mistake here: restartNucleusOnNucleusConfigChange", "author": "rbattle", "createdAt": "2020-10-19T21:01:27Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java", "diffHunk": "@@ -265,6 +265,20 @@ public int bootstrap() throws InterruptedException, TimeoutException {\n         return NO_OP;\n     }\n \n+    /**\n+     * Check if the proposed Nucleus config needs Nucleus to be restarted. Deployment workflow ill call this to decide\n+     * if nucleus restart is needed. Default is false, Greengrass services should override this method to check if\n+     * specific nucleus config keys have changed and if that should need a restart.\n+     *\n+     * @param newNucleusConfig new nucleus component config for the update\n+     * @return true if the proposed nucleus config should cause nucleus restart\n+     */\n+    public boolean restartNucleuslOnNucleusConfigChange(Map<String, Object> newNucleusConfig) {", "originalCommit": "88c709e228f0f63b4bf83efad1267895c1de80e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIzNjk0NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508236945", "bodyText": "sorry for jumping around - I'm moving the conversation there so it is easier to reply\n\n\nWe want to store a \"default\" user/group to run with as part of the nucleus configuration in DeviceConfiguration (see #537 )\nWhen this default changes, ideally only the services that are running with the default user/group would need to be restarted.\nI assume this would still be possible by having the GenericExternalService just listen for the config changes to the nucleus and not require to use this method?\nOr do we take the position that anytime the nucleus config changes, if you need to restart then everything should restart?\n\nIf you reuse what this PR does then it will end up restarting everything, but that's not ideal like you said.\nIt's possible to have GenericExternalService listen to the user/group config independently like you also said, but for that we would want to confirm that a bad config for user/group can fail the deployment and execute rollback. Let me know if you find that the change in this PR needs to be made more generic to handle that\n\nWhere would validation of the nucleus config change happen? For instance, if we change the default user, it needs to be validated see that the username exists on the system. I wouldn't want every external service to have to validate that change. Also, right now this is limited to internal services so the external services wouldn't even get notified.", "author": "rbattle", "createdAt": "2020-10-20T06:23:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTczMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY0MDkxMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508640910", "bodyText": "I haven't given it a lot of thought yet but was thinking this method can throw an exception if the changed nucleus config is invalid, I have a TODO for that below, so any builtin service can check - 1) if the config it's interested is changing value 2) if the changed value is valid , if invalid throw 3) if the changed value is valid, return if nucleus restart is needed. Another way to validate would be extend this validator  to invoke a validate method for builtin services that works with the nucleus component config which will also preemptively fail deployment. Either way the actual validation/evaluation logic lives in the appropriate builtin service's validate / restartNucleuslOnNucleusConfigChange method", "author": "shaguptashaikh", "createdAt": "2020-10-20T15:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTczMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY0NjcxNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508646715", "bodyText": "I know that there is configuration in the DeviceConfiguration that probably doesn't fall clearly in any builtin service's ownership, for example - deployment service can own deployment polling frequency config and authorization service can check auth policies when we add them in future but who checks more generic config like region/default user-group etc, so for that we probably need to make a best effort in assigning that responsibility", "author": "shaguptashaikh", "createdAt": "2020-10-20T15:59:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTczMg=="}], "type": "inlineReview", "revised_code": {"commit": "eca47aaf4816f215fcd7ca17870434ab6429771e", "chunk": "diff --git a/src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java b/src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java\nindex 341d364e47..bfae1922e4 100644\n--- a/src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java\n+++ b/src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java\n\n@@ -268,14 +271,14 @@ public class GreengrassService implements InjectionActions {\n     /**\n      * Check if the proposed Nucleus config needs Nucleus to be restarted. Deployment workflow ill call this to decide\n      * if nucleus restart is needed. Default is false, Greengrass services should override this method to check if\n-     * specific nucleus config keys have changed and if that should need a restart.\n+     * specific nucleus config keys have changed, validate them and return if the change needs a nucleus restart.\n      *\n      * @param newNucleusConfig new nucleus component config for the update\n      * @return true if the proposed nucleus config should cause nucleus restart\n+     * @throws ComponentConfigurationValidationException if the changed value for the nucleus configuration is invalid\n      */\n-    public boolean restartNucleuslOnNucleusConfigChange(Map<String, Object> newNucleusConfig) {\n-        // TODO : Add a checked exception for invalid config that this method can throw when overridden\n-        //  and handle it in the deployment workflow\n+    public boolean restartNucleuslOnNucleusConfigChange(Map<String, Object> newNucleusConfig)\n+            throws ComponentConfigurationValidationException {\n         return false;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTkwNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508059907", "bodyText": "nit: workflow will", "author": "rbattle", "createdAt": "2020-10-19T21:01:48Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java", "diffHunk": "@@ -265,6 +265,20 @@ public int bootstrap() throws InterruptedException, TimeoutException {\n         return NO_OP;\n     }\n \n+    /**\n+     * Check if the proposed Nucleus config needs Nucleus to be restarted. Deployment workflow ill call this to decide", "originalCommit": "88c709e228f0f63b4bf83efad1267895c1de80e2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eca47aaf4816f215fcd7ca17870434ab6429771e", "chunk": "diff --git a/src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java b/src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java\nindex 341d364e47..bfae1922e4 100644\n--- a/src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java\n+++ b/src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java\n\n@@ -268,14 +271,14 @@ public class GreengrassService implements InjectionActions {\n     /**\n      * Check if the proposed Nucleus config needs Nucleus to be restarted. Deployment workflow ill call this to decide\n      * if nucleus restart is needed. Default is false, Greengrass services should override this method to check if\n-     * specific nucleus config keys have changed and if that should need a restart.\n+     * specific nucleus config keys have changed, validate them and return if the change needs a nucleus restart.\n      *\n      * @param newNucleusConfig new nucleus component config for the update\n      * @return true if the proposed nucleus config should cause nucleus restart\n+     * @throws ComponentConfigurationValidationException if the changed value for the nucleus configuration is invalid\n      */\n-    public boolean restartNucleuslOnNucleusConfigChange(Map<String, Object> newNucleusConfig) {\n-        // TODO : Add a checked exception for invalid config that this method can throw when overridden\n-        //  and handle it in the deployment workflow\n+    public boolean restartNucleuslOnNucleusConfigChange(Map<String, Object> newNucleusConfig)\n+            throws ComponentConfigurationValidationException {\n         return false;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyMDQzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508120436", "bodyText": "What's the reasoning of adding a separate check instead of extending serviceBootstrapRequired? Is it to limit the restart option to builtins only?", "author": "hui-yang", "createdAt": "2020-10-19T23:30:53Z", "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -112,7 +116,40 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig) throws Service\n         logger.atInfo().kv(\"list\", dependencyFound).log(\"Found a list of bootstrap tasks in dependency order\");\n         dependencyFound.forEach(name -> bootstrapTaskStatusList.add(new BootstrapTaskStatus(name)));\n \n-        return !bootstrapTaskStatusList.isEmpty();\n+        if (bootstrapTaskStatusList.isEmpty()) {\n+            return nucleusConfigChangeNeedsRestart(newConfig);\n+        } else {\n+            return true;\n+        }\n+    }\n+\n+    private boolean nucleusConfigChangeNeedsRestart(Map<String, Object> deploymentConfig) {", "originalCommit": "88c709e228f0f63b4bf83efad1267895c1de80e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyOTQzNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508129434", "bodyText": "I did want to keep this limited to builtin services but that's probably not a hard requirement. I saw that serviceBootstrapRequired is to determine if there's any bootstrap task supposed to run for a particular service or not right? I don't want to queue any service specific bootstrap task but want to only evaluate if the kernel restart is needed, I might be missing something though", "author": "shaguptashaikh", "createdAt": "2020-10-19T23:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyMDQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "eca47aaf4816f215fcd7ca17870434ab6429771e", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java b/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\nindex e71bba5fd7..78c9526ff4 100644\n--- a/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\n+++ b/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\n\n@@ -116,14 +124,11 @@ public class BootstrapManager implements Iterator<BootstrapTaskStatus>  {\n         logger.atInfo().kv(\"list\", dependencyFound).log(\"Found a list of bootstrap tasks in dependency order\");\n         dependencyFound.forEach(name -> bootstrapTaskStatusList.add(new BootstrapTaskStatus(name)));\n \n-        if (bootstrapTaskStatusList.isEmpty()) {\n-            return nucleusConfigChangeNeedsRestart(newConfig);\n-        } else {\n-            return true;\n-        }\n+        return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n-    private boolean nucleusConfigChangeNeedsRestart(Map<String, Object> deploymentConfig) {\n+    private boolean nucleusConfigValidAndNeedsRestart(Map<String, Object> deploymentConfig)\n+            throws ComponentConfigurationValidationException {\n         boolean needsRestart = false;\n         Map<String, Object> proposedNucleusConfig = getProposedNucleusConfig(deploymentConfig);\n         for (GreengrassService s : kernel.orderedDependencies()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyMDk1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508120953", "bodyText": "curious, how many times will we try getting the config key for nucleus? Can this information be saved somewhere?", "author": "hui-yang", "createdAt": "2020-10-19T23:32:36Z", "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -112,7 +116,40 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig) throws Service\n         logger.atInfo().kv(\"list\", dependencyFound).log(\"Found a list of bootstrap tasks in dependency order\");\n         dependencyFound.forEach(name -> bootstrapTaskStatusList.add(new BootstrapTaskStatus(name)));\n \n-        return !bootstrapTaskStatusList.isEmpty();\n+        if (bootstrapTaskStatusList.isEmpty()) {\n+            return nucleusConfigChangeNeedsRestart(newConfig);\n+        } else {\n+            return true;\n+        }\n+    }\n+\n+    private boolean nucleusConfigChangeNeedsRestart(Map<String, Object> deploymentConfig) {\n+        boolean needsRestart = false;\n+        Map<String, Object> proposedNucleusConfig = getProposedNucleusConfig(deploymentConfig);\n+        for (GreengrassService s : kernel.orderedDependencies()) {\n+            // For now, only let builtin Greengrass services decide\n+            if (s.isBuiltin()) {\n+                needsRestart = needsRestart || s.restartNucleuslOnNucleusConfigChange(proposedNucleusConfig);\n+            }\n+        }\n+        return needsRestart;\n+    }\n+\n+    private Map<String, Object> getProposedNucleusConfig(Map<String, Object> deploymentConfig) {\n+        for (Map.Entry<String, Object> serviceConfig : deploymentConfig.entrySet()) {\n+            if (serviceConfig instanceof Map) {\n+                Map<String, Object> serviceConfigMap = (Map<String, Object>) serviceConfig;\n+                String componentType = Coerce.toString(serviceConfigMap.get(SERVICE_TYPE_TOPIC_KEY));\n+                Object componentConfiguration = serviceConfigMap.get(KernelConfigResolver.CONFIGURATION_CONFIG_KEY);\n+                // TODO : Use constant after rebasing on with PR 513\n+                //  And use enum from common component model when the new component type\n+                //  is available in common component model\n+                if (\"aws.greengrass.nucleus\".equals(componentType) && componentConfiguration instanceof Map) {", "originalCommit": "88c709e228f0f63b4bf83efad1267895c1de80e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyODI2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508128269", "bodyText": "This is for going over the map of service config for deployment and finding out which component is the nucleus component and getting its config, BootstrapManager::isBootstrapRequired method itself should only be called once per deployment right?", "author": "shaguptashaikh", "createdAt": "2020-10-19T23:55:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyMDk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ5MjU4MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r509492581", "bodyText": "Yes. It's called once per deployment", "author": "hui-yang", "createdAt": "2020-10-21T17:43:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyMDk1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "eca47aaf4816f215fcd7ca17870434ab6429771e", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java b/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\nindex e71bba5fd7..78c9526ff4 100644\n--- a/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\n+++ b/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\n\n@@ -116,14 +124,11 @@ public class BootstrapManager implements Iterator<BootstrapTaskStatus>  {\n         logger.atInfo().kv(\"list\", dependencyFound).log(\"Found a list of bootstrap tasks in dependency order\");\n         dependencyFound.forEach(name -> bootstrapTaskStatusList.add(new BootstrapTaskStatus(name)));\n \n-        if (bootstrapTaskStatusList.isEmpty()) {\n-            return nucleusConfigChangeNeedsRestart(newConfig);\n-        } else {\n-            return true;\n-        }\n+        return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n-    private boolean nucleusConfigChangeNeedsRestart(Map<String, Object> deploymentConfig) {\n+    private boolean nucleusConfigValidAndNeedsRestart(Map<String, Object> deploymentConfig)\n+            throws ComponentConfigurationValidationException {\n         boolean needsRestart = false;\n         Map<String, Object> proposedNucleusConfig = getProposedNucleusConfig(deploymentConfig);\n         for (GreengrassService s : kernel.orderedDependencies()) {\n"}}, {"oid": "eca47aaf4816f215fcd7ca17870434ab6429771e", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eca47aaf4816f215fcd7ca17870434ab6429771e", "message": "Add ability to restart nucleus on nucleus config changes if needed", "committedDate": "2020-10-21T16:53:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUxODA1MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r509518050", "bodyText": "nit on the comment. Right now we execute bootstrap tasks one by one, and then restart/reboot/do nothing, based on the return code. When the no more bootstrap tasks, we restart once regardless of the return code of last task. So we don't restart nucleus explicitly for nucleus config change, and we also don't consolidate the restart to once.", "author": "hui-yang", "createdAt": "2020-10-21T17:56:20Z", "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -88,6 +95,11 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig) throws Service\n                     \"No bootstrap tasks found: Deployment configuration is missing or has no service changes\");\n             return false;\n         }\n+\n+        // Validate nucleus config early, if it's valid, still proceed with evaluating if any bootstrap tasks\n+        // are needed such that we only need to restart nucleus once for all changes\n+        final boolean nucleusConfigValidAndNeedsRestart = nucleusConfigValidAndNeedsRestart(newConfig);", "originalCommit": "eca47aaf4816f215fcd7ca17870434ab6429771e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa5abfe76e2f41b7b6cb7def277d6ce944e20421", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java b/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\nindex 78c9526ff4..0d3db3bae9 100644\n--- a/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\n+++ b/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\n\n@@ -96,8 +97,7 @@ public class BootstrapManager implements Iterator<BootstrapTaskStatus>  {\n             return false;\n         }\n \n-        // Validate nucleus config early, if it's valid, still proceed with evaluating if any bootstrap tasks\n-        // are needed such that we only need to restart nucleus once for all changes\n+        // Validate nucleus config early, then proceed with evaluating bootstrap tasks\n         final boolean nucleusConfigValidAndNeedsRestart = nucleusConfigValidAndNeedsRestart(newConfig);\n \n         // Compare newConfig with kernel and find out all that changed\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzNDIxNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r509634216", "bodyText": "nit: have a static string for this?", "author": "nikkhilmuthye", "createdAt": "2020-10-21T19:59:31Z", "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -112,7 +124,37 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig) throws Service\n         logger.atInfo().kv(\"list\", dependencyFound).log(\"Found a list of bootstrap tasks in dependency order\");\n         dependencyFound.forEach(name -> bootstrapTaskStatusList.add(new BootstrapTaskStatus(name)));\n \n-        return !bootstrapTaskStatusList.isEmpty();\n+        return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n+    }\n+\n+    private boolean nucleusConfigValidAndNeedsRestart(Map<String, Object> deploymentConfig)\n+            throws ComponentConfigurationValidationException {\n+        boolean needsRestart = false;\n+        Map<String, Object> proposedNucleusConfig = getProposedNucleusConfig(deploymentConfig);\n+        for (GreengrassService s : kernel.orderedDependencies()) {\n+            // For now, only let builtin Greengrass services decide\n+            if (s.isBuiltin()) {\n+                needsRestart = needsRestart || s.restartNucleuslOnNucleusConfigChange(proposedNucleusConfig);\n+            }\n+        }\n+        return needsRestart;\n+    }\n+\n+    private Map<String, Object> getProposedNucleusConfig(Map<String, Object> deploymentConfig) {\n+        for (Map.Entry<String, Object> serviceConfig : deploymentConfig.entrySet()) {\n+            if (serviceConfig instanceof Map) {\n+                Map<String, Object> serviceConfigMap = (Map<String, Object>) serviceConfig;\n+                String componentType = Coerce.toString(serviceConfigMap.get(SERVICE_TYPE_TOPIC_KEY));\n+                Object componentConfiguration = serviceConfigMap.get(KernelConfigResolver.CONFIGURATION_CONFIG_KEY);\n+                // TODO : Use constant after rebasing on with PR 513\n+                //  And use enum from common component model when the new component type\n+                //  is available in common component model\n+                if (\"aws.greengrass.nucleus\".equals(componentType) && componentConfiguration instanceof Map) {", "originalCommit": "eca47aaf4816f215fcd7ca17870434ab6429771e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa5abfe76e2f41b7b6cb7def277d6ce944e20421", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java b/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\nindex 78c9526ff4..0d3db3bae9 100644\n--- a/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\n+++ b/src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java\n\n@@ -134,7 +134,7 @@ public class BootstrapManager implements Iterator<BootstrapTaskStatus>  {\n         for (GreengrassService s : kernel.orderedDependencies()) {\n             // For now, only let builtin Greengrass services decide\n             if (s.isBuiltin()) {\n-                needsRestart = needsRestart || s.restartNucleuslOnNucleusConfigChange(proposedNucleusConfig);\n+                needsRestart = needsRestart || s.restartNucleusOnNucleusConfigChange(proposedNucleusConfig);\n             }\n         }\n         return needsRestart;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzNTQ5Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r509635496", "bodyText": "nit: add License header.", "author": "nikkhilmuthye", "createdAt": "2020-10-21T20:00:19Z", "path": "src/main/java/com/aws/greengrass/deployment/exceptions/ComponentConfigurationValidationException.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.aws.greengrass.deployment.exceptions;", "originalCommit": "eca47aaf4816f215fcd7ca17870434ab6429771e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa5abfe76e2f41b7b6cb7def277d6ce944e20421", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/exceptions/ComponentConfigurationValidationException.java b/src/main/java/com/aws/greengrass/deployment/exceptions/ComponentConfigurationValidationException.java\nindex 0abdeaa378..2b4478e0be 100644\n--- a/src/main/java/com/aws/greengrass/deployment/exceptions/ComponentConfigurationValidationException.java\n+++ b/src/main/java/com/aws/greengrass/deployment/exceptions/ComponentConfigurationValidationException.java\n\n@@ -1,3 +1,8 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n package com.aws.greengrass.deployment.exceptions;\n \n public class ComponentConfigurationValidationException extends DeploymentException {\n"}}, {"oid": "fa5abfe76e2f41b7b6cb7def277d6ce944e20421", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fa5abfe76e2f41b7b6cb7def277d6ce944e20421", "message": "Add ability to restart nucleus on nucleus config changes if needed", "committedDate": "2020-10-22T22:23:23Z", "type": "forcePushed"}, {"oid": "46b4727c9c01a2f71d356a05d3213426ea589a44", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/46b4727c9c01a2f71d356a05d3213426ea589a44", "message": "Add ability to restart nucleus on nucleus config changes if needed", "committedDate": "2020-10-22T22:24:22Z", "type": "commit"}, {"oid": "46b4727c9c01a2f71d356a05d3213426ea589a44", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/46b4727c9c01a2f71d356a05d3213426ea589a44", "message": "Add ability to restart nucleus on nucleus config changes if needed", "committedDate": "2020-10-22T22:24:22Z", "type": "forcePushed"}, {"oid": "4da793a86d34cd11c1adca215fce4b5aa4743a27", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4da793a86d34cd11c1adca215fce4b5aa4743a27", "message": "Merge branch 'master' into system-setting-restarts-kernel", "committedDate": "2020-10-22T23:49:26Z", "type": "commit"}, {"oid": "687c6b3e65d5781b6b64f4d92a044194edef8ec0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/687c6b3e65d5781b6b64f4d92a044194edef8ec0", "message": "Merge branch 'master' into system-setting-restarts-kernel", "committedDate": "2020-10-23T09:34:25Z", "type": "commit"}]}