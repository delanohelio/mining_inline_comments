{"pr_number": 182, "pr_title": "Add first e2e test with evergreen cloud.", "pr_createdAt": "2020-04-14T22:26:34Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NzQ3Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408477472", "bodyText": "You don't need these if you put Test somewhere in the class name.", "author": "MikeDombo", "createdAt": "2020-04-14T22:40:07Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+// TODO: This test is not ready for CI/CD yet. Need to\n+// 1. update iotClient to assume role in evergreen-beta-iad account.\n+// 2. make the host running the test accessible to corp network.\n+@Tag(\"E2E\")\n+public class DeploymentE2EWithCloudService {\n+\n+    private static String CLOUD_SERVICE_URL = \"http://eg-deployment-beta.aka.corp.amazon.com:8080/deployments\";\n+    private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n+    private static List<String> createdIotJobIdList = new ArrayList<>();\n+\n+    private final ObjectMapper mapper = new ObjectMapper();\n+    private final HttpClient client = HttpClients.createDefault();\n+    private Kernel kernel;\n+\n+    @TempDir\n+    Path tempRootDir;\n+\n+    @AfterEach\n+    void cleanUp() {\n+        if (kernel != null) {\n+            kernel.shutdown();\n+        }\n+    }\n+\n+    @AfterAll\n+    static void cleanUpCloudResources() {\n+        Utils.cleanAllCreatedThings();\n+        Utils.cleanAllCreatedJobs();\n+        Utils.cleanAllCreatedThingGroups();\n+        createdIotJobIdList.forEach(Utils::cleanJob);\n+    }\n+\n+    // TODO: uncomment the @Test and remove @SuppressWarnings below once the test is ready for CI/CD.\n+    // @Test\n+    @SuppressWarnings({\"PMD.SignatureDeclareThrowsException\", \"PMD.MethodNamingConventions\"})", "originalCommit": "7a981b789366280fa0fc65daead5d23d7ae5b155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NDc5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r411754794", "bodyText": "Rename this class to DeploymentCloudServiceIntegTest and then you don't need these.", "author": "MikeDombo", "createdAt": "2020-04-20T23:17:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NzQ3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "62ad092bb4cd5966a15c62ad0ad235230bf86714", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\nindex 09f4f37ccb..460bdfb98a 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\n\n@@ -15,7 +15,7 @@ import static org.junit.jupiter.api.Assertions.assertEquals;\n import com.aws.iot.evergreen.dependency.State;\n import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n-import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.model.DeploymentRequest;\n import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n import com.aws.iot.evergreen.kernel.Kernel;\n import com.fasterxml.jackson.databind.JsonNode;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTExMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408481110", "bodyText": "this should be private static final", "author": "MikeDombo", "createdAt": "2020-04-14T22:50:19Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.amazonaws.services.iot.model.AbortConfig;\n+import com.amazonaws.services.iot.model.JobExecutionsRolloutConfig;\n+import com.amazonaws.services.iot.model.TimeoutConfig;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+import java.util.Map;\n+\n+//TODO: This class should be replaced by cloud deployment service model.\n+\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@Getter\n+@Setter\n+@ToString\n+public class DeploymentRequest {\n+\n+    @JsonProperty(\"targetArn\")\n+    private String targetArn;\n+\n+    @JsonProperty(\"description\")\n+    private String description;\n+\n+    // When deploy to a thing group, runtimeSpecification stores the iot job document for the deployment.\n+    // WHen deploy to a single thing, runtimeSpecification stores the desired shadow of the device.\n+    @JsonProperty(\"runtimeSpecification\")\n+    private String runtimeSpecification;\n+\n+    @JsonProperty(\"iotJobConfiguratons\")\n+    private IotJobConfigurations iotJobConfigurations;\n+\n+    /**\n+     * Construct DeploymentRequest from DeploymentDocument.\n+     * @param targetArn thingArn or thingGroupArn\n+     * @param description description of the deployment\n+     * @param doc DeploymentDocument\n+     * @param jobConfigurations iot job configuration for thing group deployment\n+     * @throws JsonProcessingException when fail to serialize doc\n+     */\n+    public DeploymentRequest(String targetArn, String description,\n+                             DeploymentDocument doc, IotJobConfigurations jobConfigurations)\n+            throws JsonProcessingException {\n+        this.targetArn = targetArn;\n+        this.description = description;\n+\n+        ObjectMapper mapper = new ObjectMapper();", "originalCommit": "7a981b789366280fa0fc65daead5d23d7ae5b155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUwMzE3Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408503176", "bodyText": "sure", "author": "ShirleyZheng92", "createdAt": "2020-04-14T23:58:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTExMA=="}], "type": "inlineReview", "revised_code": {"commit": "62ad092bb4cd5966a15c62ad0ad235230bf86714", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/model/DeploymentRequest.java\nsimilarity index 85%\nrename from src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java\nrename to src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/model/DeploymentRequest.java\nindex 730070a810..c60e5e3a29 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/model/DeploymentRequest.java\n\n@@ -1,8 +1,9 @@\n-package com.aws.iot.evergreen.deployment.model;\n+package com.aws.iot.evergreen.integrationtests.e2e.model;\n \n-import com.amazonaws.services.iot.model.AbortConfig;\n-import com.amazonaws.services.iot.model.JobExecutionsRolloutConfig;\n-import com.amazonaws.services.iot.model.TimeoutConfig;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import software.amazon.awssdk.services.iot.model.AbortConfig;\n+import software.amazon.awssdk.services.iot.model.TimeoutConfig;\n+import software.amazon.awssdk.services.iot.model.JobExecutionsRolloutConfig;\n import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.core.JsonProcessingException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTQ1NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408481454", "bodyText": "Looks like a good change, but where is this used, how did you find a problem?", "author": "MikeDombo", "createdAt": "2020-04-14T22:51:22Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -442,12 +442,15 @@ public void writeEffectiveConfigAsTransactionLog(Path transactionLogPath) throws\n      * @param w Writer to write config into\n      */\n     public void writeConfig(Writer w) {", "originalCommit": "7a981b789366280fa0fc65daead5d23d7ae5b155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUwMzcyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408503724", "bodyText": "I used it when verifying the demo and generated config change. We currently don't test this part.", "author": "ShirleyZheng92", "createdAt": "2020-04-15T00:00:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTQ1NA=="}], "type": "inlineReview", "revised_code": {"commit": "95649814946e8a551b1a8c4909d7ed80354ffed2", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java b/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java\nindex 809fe1b83e..d931674d34 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java\n\n@@ -445,129 +203,22 @@ public class Kernel extends Configuration /*implements Runnable*/ {\n         Map<String, Object> serviceMap = new LinkedHashMap<>();\n         orderedDependencies().forEach(l -> {\n             if (l != null) {\n-                serviceMap.put(l.getName(), l.config.toPOJO());\n+                serviceMap.put(l.getName(), l.getServiceConfig().toPOJO());\n             }\n         });\n \n-        Map<String, Object> h = new LinkedHashMap<>();\n-        h.put(EvergreenService.SERVICES_NAMESPACE_TOPIC, serviceMap);\n+        Map<String, Object> configMap = new HashMap<>();\n+        configMap.put(EvergreenService.SERVICES_NAMESPACE_TOPIC, serviceMap);\n         try {\n-            JSON.std.with(new YAMLFactory().disable(JsonGenerator.Feature.AUTO_CLOSE_TARGET)).write(h, w);\n+            JSON.std.with(new YAMLFactory().disable(JsonGenerator.Feature.AUTO_CLOSE_TARGET)).write(configMap, w);\n         } catch (IOException ex) {\n             logger.atError().setEventType(\"write-config-error\").setCause(ex).log();\n         }\n     }\n \n-    /**\n-     * Make all services startup in order.\n-     */\n-    public void startupAllServices() {\n-        orderedDependencies().forEach(l -> {\n-            logger.atInfo().setEventType(\"service-install\").addKeyValue(EvergreenService.SERVICE_NAME_KEY, l.getName())\n-                    .log();\n-            l.requestStart();\n-        });\n-    }\n-\n-    public void shutdown() {\n-        shutdown(30);\n-    }\n-\n-    /**\n-     * Shutdown all services and the kernel with given timeout.\n-     *\n-     * @param timeoutSeconds Timeout in seconds\n-     */\n-    @SuppressWarnings(\"PMD.AvoidCatchingThrowable\")\n-    public void shutdown(int timeoutSeconds) {\n-        if (!isShutdownInitiated.compareAndSet(false, true)) {\n-            logger.info(\"Shutdown already initiated, returning...\");\n-            return;\n-        }\n-        close(tlog);\n-        try {\n-            logger.atInfo().setEventType(\"system-shutdown\").addKeyValue(\"main\", getMain()).log();\n-            EvergreenService[] d = orderedDependencies().toArray(new EvergreenService[0]);\n-\n-            CompletableFuture[] arr = new CompletableFuture[d.length];\n-            for (int i = d.length - 1; i >= 0; --i) { // shutdown in reverse order\n-                String serviceName = d[i].getName();\n-                try {\n-                    arr[i] = (CompletableFuture) d[i].close();\n-                    arr[i].whenComplete((v, t) -> {\n-                        if (t != null) {\n-                            logger.atError().setEventType(\"service-shutdown-error\")\n-                                    .addKeyValue(\"serviceName\", serviceName)\n-                                    .setCause((Throwable) t).log();\n-                        }\n-\n-                    });\n-                } catch (Throwable t) {\n-                    logger.atError().setEventType(\"service-shutdown-error\")\n-                            .addKeyValue(EvergreenService.SERVICE_NAME_KEY, serviceName)\n-                            .setCause(t).log();\n-                    arr[i] = CompletableFuture.completedFuture(Optional.empty());\n-                }\n-            }\n-\n-            try {\n-                CompletableFuture<Void> combinedFuture = CompletableFuture.allOf(arr);\n-                combinedFuture.get(timeoutSeconds, TimeUnit.SECONDS);\n-            } catch (ExecutionException | InterruptedException | TimeoutException e) {\n-                logger.atError().setEventType(\"services-shutdown-errored\").setCause(e).log();\n-            }\n-\n-            // Wait for tasks in the executor to end.\n-            ScheduledExecutorService scheduledExecutorService = context.get(ScheduledExecutorService.class);\n-            ExecutorService executorService = context.get(ExecutorService.class);\n-            this.context.runOnPublishQueueAndWait(() -> {\n-                executorService.shutdown();\n-                scheduledExecutorService.shutdown();\n-                logger.atInfo().setEventType(\"executor-service-shutdown-initiated\").log();\n-            });\n-            // TODO: Timeouts should not be additive (ie. our timeout should be for this entire method, not\n-            //  each timeout-able part of the method.\n-            executorService.awaitTermination(timeoutSeconds, TimeUnit.SECONDS);\n-            scheduledExecutorService.awaitTermination(timeoutSeconds, TimeUnit.SECONDS);\n-            //TODO: this needs to be changed once state machine thread is using the shared executor\n-            logger.atInfo().setEventType(\"executor-service-shutdown-complete\").log();\n-        } catch (Throwable ex) {\n-            logger.atError().setEventType(\"system-shutdown-error\").setCause(ex).log();\n-        }\n-    }\n-\n-    public void shutdownNow() {\n-        shutdown(0);\n-    }\n-\n-    /**\n-     * Take a user-provided string which represents a path and resolve it to an absolute path.\n-     *\n-     * @param s String to resolve\n-     * @return resolved path\n-     */\n-    public String deTilde(String s) {\n-        if (s.startsWith(\"~/\")) {\n-            s = HOME_PATH.resolve(s.substring(2)).toString();\n-        }\n-        if (rootPath != null && s.startsWith(\"~root/\")) {\n-            s = rootPath.resolve(s.substring(6)).toString();\n-        }\n-        if (configPath != null && s.startsWith(\"~config/\")) {\n-            s = configPath.resolve(s.substring(8)).toString();\n-        }\n-        if (clitoolPath != null && s.startsWith(\"~bin/\")) {\n-            s = clitoolPath.resolve(s.substring(5)).toString();\n-        }\n-        return s;\n-    }\n-\n-    private String getArg() {\n-        return arg = args == null || argpos >= args.length ? done : args[argpos++];\n-    }\n-\n-    public Topics findServiceTopic(String name) {\n-        return this.findTopics(EvergreenService.SERVICES_NAMESPACE_TOPIC, name);\n+    @Nullable\n+    public Topics findServiceTopic(String serviceName) {\n+        return config.findTopics(EvergreenService.SERVICES_NAMESPACE_TOPIC, serviceName);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxNjI4NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408516285", "bodyText": "Use logger?", "author": "abanthiy", "createdAt": "2020-04-15T00:43:32Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+// TODO: This test is not ready for CI/CD yet. Need to\n+// 1. update iotClient to assume role in evergreen-beta-iad account.\n+// 2. make the host running the test accessible to corp network.\n+@Tag(\"E2E\")\n+public class DeploymentE2EWithCloudService {\n+\n+    private static String CLOUD_SERVICE_URL = \"http://eg-deployment-beta.aka.corp.amazon.com:8080/deployments\";\n+    private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n+    private static List<String> createdIotJobIdList = new ArrayList<>();\n+\n+    private final ObjectMapper mapper = new ObjectMapper();\n+    private final HttpClient client = HttpClients.createDefault();\n+    private Kernel kernel;\n+\n+    @TempDir\n+    Path tempRootDir;\n+\n+    @AfterEach\n+    void cleanUp() {\n+        if (kernel != null) {\n+            kernel.shutdown();\n+        }\n+    }\n+\n+    @AfterAll\n+    static void cleanUpCloudResources() {\n+        Utils.cleanAllCreatedThings();\n+        Utils.cleanAllCreatedJobs();\n+        Utils.cleanAllCreatedThingGroups();\n+        createdIotJobIdList.forEach(Utils::cleanJob);\n+    }\n+\n+    // TODO: uncomment the @Test and remove @SuppressWarnings below once the test is ready for CI/CD.\n+    // @Test\n+    @SuppressWarnings({\"PMD.SignatureDeclareThrowsException\", \"PMD.MethodNamingConventions\"})\n+    void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_deployed_and_job_is_successful() throws Exception {\n+        System.setProperty(\"root\", tempRootDir.toString());\n+        Kernel kernel = new Kernel().parseArgs(\"-i\", getClass().getResource(\"blank_config.yaml\").toString());\n+\n+        Path localStoreContentPath = Paths.get(getClass().getResource(\"local_store_content\").getPath());\n+        // pre-load contents to package store\n+        copyFolderRecursively(localStoreContentPath, kernel.packageStorePath);\n+\n+        Utils.ThingInfo thingInfo = Utils.createThing();\n+        Utils.injectIotResourcesIntoKernel(tempRootDir, kernel, thingInfo);\n+\n+        kernel.launch();\n+\n+        // Create thing group and deployment\n+        String thingGroupArn = Utils.createThingGroupAndAddThing(thingInfo);\n+        DeploymentDocument document = DeploymentDocument.builder().timestamp(System.currentTimeMillis())\n+                .deploymentId(UUID.randomUUID().toString()).rootPackages(Arrays.asList(\"CustomerApp\", \"SomeService\"))\n+                .deploymentPackageConfigurationList(Arrays.asList(\n+                        new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null, null, null),\n+                        new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null))).build();\n+\n+        String jobId1 = sendCreateDeploymentRequest(thingGroupArn, document);\n+\n+        // wait until deployment complete\n+        Utils.waitForJobToComplete(jobId1, thingInfo.thingName, Duration.ofMinutes(2));\n+\n+        assertEquals(State.FINISHED, kernel.getMain().getState());\n+        assertEquals(State.FINISHED, kernel.locate(\"CustomerApp\").getState());\n+        assertEquals(State.FINISHED, kernel.locate(\"SomeService\").getState());\n+    }\n+\n+    @SuppressWarnings({\"PMD.SystemPrintln\"})\n+    private String sendCreateDeploymentRequest(String targetThingGroupArn, DeploymentDocument document)\n+            throws IOException {\n+        // construct http request\n+        HttpPost request = new HttpPost(CLOUD_SERVICE_URL);\n+        request.setHeader(HTTP_HEADER_ETAG, UUID.randomUUID().toString());\n+\n+        String body = mapper.writeValueAsString(new DeploymentRequest(targetThingGroupArn,\n+                \"Thing deployment\", document, null));\n+        System.out.println(\"createDeployment request: \" + body);\n+\n+        HttpEntity entity = new StringEntity(body, ContentType.APPLICATION_JSON);\n+        request.setEntity(entity);\n+\n+        // Calling cloud service\n+        HttpResponse response = client.execute(request);\n+\n+        JsonNode responseJson = mapper.readTree(response.getEntity().getContent());\n+        System.out.println(\"createDeployment response: \" + response.getStatusLine());", "originalCommit": "7a981b789366280fa0fc65daead5d23d7ae5b155", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62ad092bb4cd5966a15c62ad0ad235230bf86714", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\nindex 09f4f37ccb..460bdfb98a 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\n\n@@ -15,7 +15,7 @@ import static org.junit.jupiter.api.Assertions.assertEquals;\n import com.aws.iot.evergreen.dependency.State;\n import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n-import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.model.DeploymentRequest;\n import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n import com.aws.iot.evergreen.kernel.Kernel;\n import com.fasterxml.jackson.databind.JsonNode;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxOTgxMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408519811", "bodyText": "It will be safer to do this after each test. If a particular test leaves a job in a non-terminal state then that might show up when kernel is spun up for next test", "author": "abanthiy", "createdAt": "2020-04-15T00:56:27Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+// TODO: This test is not ready for CI/CD yet. Need to\n+// 1. update iotClient to assume role in evergreen-beta-iad account.\n+// 2. make the host running the test accessible to corp network.\n+@Tag(\"E2E\")\n+public class DeploymentE2EWithCloudService {\n+\n+    private static String CLOUD_SERVICE_URL = \"http://eg-deployment-beta.aka.corp.amazon.com:8080/deployments\";\n+    private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n+    private static List<String> createdIotJobIdList = new ArrayList<>();\n+\n+    private final ObjectMapper mapper = new ObjectMapper();\n+    private final HttpClient client = HttpClients.createDefault();\n+    private Kernel kernel;\n+\n+    @TempDir\n+    Path tempRootDir;\n+\n+    @AfterEach\n+    void cleanUp() {\n+        if (kernel != null) {\n+            kernel.shutdown();\n+        }\n+    }\n+\n+    @AfterAll\n+    static void cleanUpCloudResources() {\n+        Utils.cleanAllCreatedThings();\n+        Utils.cleanAllCreatedJobs();\n+        Utils.cleanAllCreatedThingGroups();\n+        createdIotJobIdList.forEach(Utils::cleanJob);", "originalCommit": "7a981b789366280fa0fc65daead5d23d7ae5b155", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62ad092bb4cd5966a15c62ad0ad235230bf86714", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\nindex 09f4f37ccb..460bdfb98a 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\n\n@@ -15,7 +15,7 @@ import static org.junit.jupiter.api.Assertions.assertEquals;\n import com.aws.iot.evergreen.dependency.State;\n import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n-import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.model.DeploymentRequest;\n import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n import com.aws.iot.evergreen.kernel.Kernel;\n import com.fasterxml.jackson.databind.JsonNode;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMTMyMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408521323", "bodyText": "Similar method is being constructed in this PR - https://github.com/aws/aws-greengrass-kernel/pull/178/files#diff-150ba62b88e9461f4ecbac18d92cbae2R120\nAlso applied for the inject method in this file as well.\nIf possible sync with @hui-yang w.r.t that PR, so we use the more generic method and avoid resolving conflicts later on", "author": "abanthiy", "createdAt": "2020-04-15T01:02:05Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "diffHunk": "@@ -93,6 +112,45 @@ public static void waitForJobToComplete(String jobId, Duration timeout) throws T\n         throw new TimeoutException();\n     }\n \n+    public static void waitForJobToComplete(String jobId, String thingName, Duration timeout) throws TimeoutException {", "originalCommit": "7a981b789366280fa0fc65daead5d23d7ae5b155", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2bb37bfb54e442726354a117bf717dc683bcf96e", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java\nindex ffc3e6a185..14fc312a9a 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java\n\n@@ -112,7 +112,7 @@ public class Utils {\n         throw new TimeoutException();\n     }\n \n-    public static void waitForJobToComplete(String jobId, String thingName, Duration timeout) throws TimeoutException {\n+    public static void waitForJobExecutionToComplete(String jobId, String thingName, Duration timeout) throws TimeoutException {\n         Instant start = Instant.now();\n         // sleep a while so that the job execution is available in cloud.\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMTc1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408521753", "bodyText": "I would add some documentation to this method. Also would prefer changing name to something like updatingKernelConfigWithIotConfiguration.", "author": "abanthiy", "createdAt": "2020-04-15T01:03:42Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "diffHunk": "@@ -228,4 +293,25 @@ public static void downloadFileFromURL(String url, File f) throws IOException {\n         }\n         throw lastException;\n     }\n+\n+    public static void injectIotResourcesIntoKernel(Path rootDir, Kernel kernel, Utils.ThingInfo thing) throws IOException {", "originalCommit": "7a981b789366280fa0fc65daead5d23d7ae5b155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NDYzMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r409074633", "bodyText": "Ok", "author": "ShirleyZheng92", "createdAt": "2020-04-15T19:14:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMTc1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "95649814946e8a551b1a8c4909d7ed80354ffed2", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java\nindex ffc3e6a185..cf92e0918a 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java\n\n@@ -294,7 +294,9 @@ public class Utils {\n         throw lastException;\n     }\n \n-    public static void injectIotResourcesIntoKernel(Path rootDir, Kernel kernel, Utils.ThingInfo thing) throws IOException {\n+    // Update the kernel config with iot thing info, in specific CA, private Key and cert path.\n+    public static void updatingKernelConfigWithIotConfiguration(Kernel kernel, Utils.ThingInfo thing) throws IOException {\n+        Path rootDir = kernel.getRootPath();\n         String caFilePath = rootDir.resolve(\"rootCA.pem\").toString();\n         String privKeyFilePath = rootDir.resolve(\"privKey.key\").toString();\n         String certFilePath = rootDir.resolve(\"thingCert.crt\").toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMjE5MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408522190", "bodyText": "We will not need this class in the src right? This is only required in test, so can just put it under integrationtest directory? What documentation are we referring to create this model? Add a link to that documentation. It will be helpful till the time model is not available from cloud.", "author": "abanthiy", "createdAt": "2020-04-15T01:05:20Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.amazonaws.services.iot.model.AbortConfig;\n+import com.amazonaws.services.iot.model.JobExecutionsRolloutConfig;\n+import com.amazonaws.services.iot.model.TimeoutConfig;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+import java.util.Map;\n+\n+//TODO: This class should be replaced by cloud deployment service model.", "originalCommit": "7a981b789366280fa0fc65daead5d23d7ae5b155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NDcxNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r409074715", "bodyText": "Moved to test", "author": "ShirleyZheng92", "createdAt": "2020-04-15T19:14:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMjE5MA=="}], "type": "inlineReview", "revised_code": {"commit": "62ad092bb4cd5966a15c62ad0ad235230bf86714", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/model/DeploymentRequest.java\nsimilarity index 85%\nrename from src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java\nrename to src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/model/DeploymentRequest.java\nindex 730070a810..c60e5e3a29 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/model/DeploymentRequest.java\n\n@@ -1,8 +1,9 @@\n-package com.aws.iot.evergreen.deployment.model;\n+package com.aws.iot.evergreen.integrationtests.e2e.model;\n \n-import com.amazonaws.services.iot.model.AbortConfig;\n-import com.amazonaws.services.iot.model.JobExecutionsRolloutConfig;\n-import com.amazonaws.services.iot.model.TimeoutConfig;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import software.amazon.awssdk.services.iot.model.AbortConfig;\n+import software.amazon.awssdk.services.iot.model.TimeoutConfig;\n+import software.amazon.awssdk.services.iot.model.JobExecutionsRolloutConfig;\n import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.core.JsonProcessingException;\n"}}, {"oid": "62ad092bb4cd5966a15c62ad0ad235230bf86714", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/62ad092bb4cd5966a15c62ad0ad235230bf86714", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-15T17:33:27Z", "type": "forcePushed"}, {"oid": "95649814946e8a551b1a8c4909d7ed80354ffed2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/95649814946e8a551b1a8c4909d7ed80354ffed2", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-20T17:46:22Z", "type": "forcePushed"}, {"oid": "911b02fcc35f13d8aa5b5e10f80776853c59ea68", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/911b02fcc35f13d8aa5b5e10f80776853c59ea68", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-20T20:59:30Z", "type": "forcePushed"}, {"oid": "2bb37bfb54e442726354a117bf717dc683bcf96e", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2bb37bfb54e442726354a117bf717dc683bcf96e", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-20T22:52:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NDMzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r411754336", "bodyText": "updating doesn't make much sense, change to update?", "author": "MikeDombo", "createdAt": "2020-04-20T23:16:42Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -252,24 +236,11 @@ void GIVEN_deployment_fails_due_to_service_broken_WHEN_deploy_fix_THEN_service_r\n     }\n \n     private void setupIotResourcesAndInjectIntoKernel() throws IOException {\n-        Utils.downloadRootCAToFile(new File(rootCaFilePath));\n         thing = Utils.createThing();\n-        try (CommitableFile cf = CommitableFile.of(new File(privateKeyFilePath).toPath(), true)) {\n-            cf.write(thing.keyPair.privateKey().getBytes(StandardCharsets.UTF_8));\n-        }\n-        try (CommitableFile cf = CommitableFile.of(new File(certificateFilePath).toPath(), true)) {\n-            cf.write(thing.certificatePem.getBytes(StandardCharsets.UTF_8));\n-        }\n-\n-        Topics deploymentServiceTopics = kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, \"DeploymentService\");\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_THING_NAME).withValue(thing.thingName);\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_MQTT_CLIENT_ENDPOINT).withValue(thing.endpoint);\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_PRIVATE_KEY_PATH).withValue(privateKeyFilePath);\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_CERTIFICATE_FILE_PATH).withValue(certificateFilePath);\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_ROOT_CA_PATH).withValue(rootCaFilePath);\n+        Utils.updatingKernelConfigWithIotConfiguration(kernel, thing);", "originalCommit": "2bb37bfb54e442726354a117bf717dc683bcf96e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "07271bab1bbaf8d73e4b82e9a606de9a69e2d80f", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java\nindex ac4cf9872b..bca9c8dcc7 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java\n\n@@ -237,7 +237,7 @@ class DeploymentE2ETest {\n \n     private void setupIotResourcesAndInjectIntoKernel() throws IOException {\n         thing = Utils.createThing();\n-        Utils.updatingKernelConfigWithIotConfiguration(kernel, thing);\n+        Utils.updateKernelConfigWithIotConfiguration(kernel, thing);\n     }\n \n     public static void copyFolderRecursively(Path src, Path des) throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NDYwOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r411754609", "bodyText": "Remove todo if possible, otherwise we can't merge this, right? It would break all our tests.", "author": "MikeDombo", "createdAt": "2020-04-20T23:17:24Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.integrationtests.e2e.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+// TODO: This test is not ready for CI/CD yet. Need to", "originalCommit": "2bb37bfb54e442726354a117bf717dc683bcf96e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "07271bab1bbaf8d73e4b82e9a606de9a69e2d80f", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java\nsimilarity index 69%\nrename from src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\nrename to src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java\nindex 7c930890d6..9db6c4ce9a 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java\n\n@@ -29,18 +29,29 @@ import org.apache.http.client.methods.HttpPost;\n import org.apache.http.entity.ContentType;\n import org.apache.http.entity.StringEntity;\n import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.io.TempDir;\n+import software.amazon.awssdk.auth.credentials.AwsSessionCredentials;\n+import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.services.iot.IotClient;\n+import software.amazon.awssdk.services.sts.StsClient;\n+import software.amazon.awssdk.services.sts.model.AssumeRoleRequest;\n+import software.amazon.awssdk.services.sts.model.AssumeRoleResponse;\n+import software.amazon.awssdk.services.sts.model.Credentials;\n \n-// TODO: This test is not ready for CI/CD yet. Need to\n-// 1. update iotClient to assume role in evergreen-beta-iad account.\n-// 2. make the host running the test accessible to corp network.\n @Tag(\"E2E\")\n-public class DeploymentE2EWithCloudService {\n+public class DeploymentCloudServiceIntegTest {\n \n     private static String CLOUD_SERVICE_URL\n             = \"http://everg-everg-h5kz3uxz114v-1885244560.us-east-1.elb.amazonaws.com/deployments\";\n+\n+    //TODO: after cloud service support creating deployments for things in custom accounts, remove the assume role.\n+    private static String assumeRoleArn = \"arn:aws:iam::432173944312:role/EvergreenDeviceTestAssumeRole\";\n     private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n     private static List<String> createdIotJobIdList = new ArrayList<>();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NTI5OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r411755299", "bodyText": "This doesn't seem very good, use retry to get around this issue.", "author": "MikeDombo", "createdAt": "2020-04-20T23:19:20Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "diffHunk": "@@ -93,6 +112,45 @@ public static void waitForJobToComplete(String jobId, Duration timeout) throws T\n         throw new TimeoutException();\n     }\n \n+    public static void waitForJobExecutionToComplete(String jobId, String thingName, Duration timeout) throws TimeoutException {\n+        Instant start = Instant.now();\n+        // sleep a while so that the job execution is available in cloud.\n+        try {\n+            Thread.sleep(10_000);", "originalCommit": "2bb37bfb54e442726354a117bf717dc683bcf96e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyNDMzNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r412524335", "bodyText": "Can we remove the sleep please?", "author": "MikeDombo", "createdAt": "2020-04-21T22:06:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NTI5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU2NDcyMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r412564723", "bodyText": "If create-deployment is a synchronous API this wait should not be needed right? Anyway you are retrying on ResourceNotFound. Might have to adjust the backoff times to ensure this.", "author": "abanthiy", "createdAt": "2020-04-21T23:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NTI5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a5eaf00a03ecb34c9f41e17c3415e1c97a3a16f7", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java\nindex 14fc312a9a..6915793205 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java\n\n@@ -113,18 +130,23 @@ public class Utils {\n     }\n \n     public static void waitForJobExecutionToComplete(String jobId, String thingName, Duration timeout) throws TimeoutException {\n+        waitForJobExecutionToComplete(iotClient, jobId, thingName, timeout);\n+    }\n+\n+    public static void waitForJobExecutionToComplete(IotClient client, String jobId, String thingName, Duration timeout) throws TimeoutException {\n         Instant start = Instant.now();\n-        // sleep a while so that the job execution is available in cloud.\n-        try {\n-            Thread.sleep(10_000);\n-        } catch (InterruptedException ignored) {\n-        }\n         while (start.plusMillis(timeout.toMillis()).isAfter(Instant.now())) {\n-            JobExecutionStatus status = retryIot(() -> iotClient.describeJobExecution(\n-                            DescribeJobExecutionRequest.builder()\n-                                    .jobId(jobId)\n-                                    .thingName(thingName).build()))\n-                    .execution().status();\n+            JobExecutionStatus status = retry(DEFAULT_RETRIES, 500,\n+                        () -> client.describeJobExecution(\n+                                DescribeJobExecutionRequest.builder()\n+                                        .jobId(jobId)\n+                                        .thingName(thingName).build()),\n+                    ResourceNotFoundException.class,\n+                    ThrottlingException.class,\n+                    InternalException.class,\n+                    InternalFailureException.class,\n+                    LimitExceededException.class).execution().status();\n+\n             if (status.ordinal() > JobExecutionStatus.IN_PROGRESS.ordinal()) {\n                 return;\n             }\n"}}, {"oid": "07271bab1bbaf8d73e4b82e9a606de9a69e2d80f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/07271bab1bbaf8d73e4b82e9a606de9a69e2d80f", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-21T04:48:42Z", "type": "forcePushed"}, {"oid": "859f5b8d98dd68e873c2ef697f0e71b1c4b1acef", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/859f5b8d98dd68e873c2ef697f0e71b1c4b1acef", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-21T04:54:48Z", "type": "forcePushed"}, {"oid": "45daa24153f79eeb5997fd5b26900515eca71ac9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/45daa24153f79eeb5997fd5b26900515eca71ac9", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-21T17:52:46Z", "type": "forcePushed"}, {"oid": "99244427f333b802d78828457a740e7b5c93f7ca", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/99244427f333b802d78828457a740e7b5c93f7ca", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-21T22:34:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU1MzExNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r412553115", "bodyText": "Comment does not apply to what is happening here", "author": "abanthiy", "createdAt": "2020-04-21T23:10:30Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -0,0 +1,165 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.integrationtests.e2e.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+import software.amazon.awssdk.auth.credentials.AwsSessionCredentials;\n+import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.services.iot.IotClient;\n+import software.amazon.awssdk.services.sts.StsClient;\n+import software.amazon.awssdk.services.sts.model.AssumeRoleRequest;\n+import software.amazon.awssdk.services.sts.model.AssumeRoleResponse;\n+import software.amazon.awssdk.services.sts.model.Credentials;\n+\n+@Tag(\"E2E\")\n+public class DeploymentCloudServiceIntegTest {\n+\n+    private static String CLOUD_SERVICE_URL\n+            = \"http://everg-everg-h5kz3uxz114v-1885244560.us-east-1.elb.amazonaws.com/deployments\";\n+\n+    //TODO: after cloud service support creating deployments for things in custom accounts, remove the assume role.\n+    private static String assumeRoleArn = \"arn:aws:iam::432173944312:role/EvergreenDeviceTestAssumeRole\";\n+    private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n+    private static List<String> createdIotJobIdList = new ArrayList<>();\n+\n+    private final ObjectMapper mapper = new ObjectMapper();\n+    private final HttpClient client = HttpClients.createDefault();\n+    private final Logger logger = LogManager.getLogger(this.getClass());\n+    private Kernel kernel;\n+\n+    private static IotClient iotClient;\n+\n+    @TempDir\n+    Path tempRootDir;\n+\n+    @BeforeAll\n+    @SuppressWarnings(\"PMD.CloseResource\")\n+    static void setIotClient() {\n+        // create iot Thing in evergreen-beta-iad account", "originalCommit": "99244427f333b802d78828457a740e7b5c93f7ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5eaf00a03ecb34c9f41e17c3415e1c97a3a16f7", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java\nindex 9db6c4ce9a..f1a6943b0e 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java\n\n@@ -83,8 +83,6 @@ public class DeploymentCloudServiceIntegTest {\n \n         iotClient = IotClient.builder()\n                 .credentialsProvider(StaticCredentialsProvider.create(awsCreds)).region(Region.US_EAST_1).build();\n-\n-        Utils.setIotClient(iotClient);\n     }\n \n     @AfterAll\n"}}, {"oid": "a5eaf00a03ecb34c9f41e17c3415e1c97a3a16f7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a5eaf00a03ecb34c9f41e17c3415e1c97a3a16f7", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-22T01:53:07Z", "type": "forcePushed"}, {"oid": "c6ece2a039e7c66607beba627cd67aa059204cc6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c6ece2a039e7c66607beba627cd67aa059204cc6", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-22T20:10:24Z", "type": "commit"}, {"oid": "c6ece2a039e7c66607beba627cd67aa059204cc6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c6ece2a039e7c66607beba627cd67aa059204cc6", "message": "Add first e2e test with evergreen cloud.", "committedDate": "2020-04-22T20:10:24Z", "type": "forcePushed"}, {"oid": "df6be069ce00e9e7f6caaf06a9359a5e28dd398b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/df6be069ce00e9e7f6caaf06a9359a5e28dd398b", "message": "Merge branch 'master' into e2eDemo", "committedDate": "2020-04-22T20:30:04Z", "type": "commit"}]}