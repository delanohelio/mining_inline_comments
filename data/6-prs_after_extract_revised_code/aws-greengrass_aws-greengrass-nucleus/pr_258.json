{"pr_number": 258, "pr_title": "list components", "pr_createdAt": "2020-05-28T00:12:07Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258", "timeline": [{"oid": "70bbce2f6e8bed31b0916d7bdb518777b6c800a7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/70bbce2f6e8bed31b0916d7bdb518777b6c800a7", "message": "list components", "committedDate": "2020-05-28T00:08:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDQ3NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r431514474", "bodyText": "I wouldn't do this. Just list all the services.", "author": "MikeDombo", "createdAt": "2020-05-28T00:19:12Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +64,75 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()\n+                    .filter(evergreenService -> evergreenService instanceof GenericExternalService)", "originalCommit": "70bbce2f6e8bed31b0916d7bdb518777b6c800a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNjgxMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432006812", "bodyText": "I think the intention here is just to filter out the built-in services because we don't want users to be confused. We can discuss but I'm fine with initial revision as this.", "author": "leaf94", "createdAt": "2020-05-28T17:32:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5NDQ2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432094469", "bodyText": "Yes, the intention is to hide stuff the customer didn't start. From a local CLI perspective the customer just added two services but if list components returns 10, the customer has to ignore the 8 returned which is there by default.", "author": "fahadmohammed01", "createdAt": "2020-05-28T20:08:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5NTgyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432095824", "bodyText": "This is a bad assumption moving forward. Don't lie to the customer; just give all the components.\nThis is bad going forward because components like tes and shadow and more will be optional but run in our jvm. Thus they would fail your check, but should be listed.", "author": "MikeDombo", "createdAt": "2020-05-28T20:10:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyMDkwNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432120907", "bodyText": "Removed the check.", "author": "fahadmohammed01", "createdAt": "2020-05-28T21:01:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "5830ed4a5f46002ba1f6f3519d71bb078d18f646", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java b/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java\nindex e40933375..8e948f707 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java\n\n@@ -88,13 +89,14 @@ public class LocalDeploymentListener {\n                         }\n                         if (parameters != null) {\n                             componentInfoBuilder.runtimeParameters(parameters.children.entrySet().stream().collect(\n-                                    Collectors.toMap(e -> e.getKey(), e -> (String) ((Topic) e.getValue()).getOnce())));\n+                                    Collectors.toMap(e -> e.getKey(), e -> Coerce.toString(e.getValue()))));\n \n                         }\n                         return componentInfoBuilder.build();\n                     }).collect(Collectors.toList());\n \n-            return OBJECT_MAPPER.writeValueAsString(new ListComponentsResult(rootComponenetNames, componentInfo));\n+            return OBJECT_MAPPER.writerWithDefaultPrettyPrinter()\n+                    .writeValueAsString(new ListComponentsResult(rootComponenetNames, componentInfo));\n         } catch (JsonProcessingException e) {\n             //TODO: during IPC integration, change this to report internal error\n             throw new DeviceConfigurationException(\"Unable to list components\", e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDY3OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r431514678", "bodyText": "you can use Coerce.toString(e.getValue())", "author": "MikeDombo", "createdAt": "2020-05-28T00:19:58Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +64,75 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()\n+                    .filter(evergreenService -> evergreenService instanceof GenericExternalService)\n+                    .map(EvergreenService::getName).collect(Collectors.toList());\n+\n+            List<ComponentInfo> componentInfo = kernel.orderedDependencies().stream()\n+                    .filter(service -> service instanceof GenericExternalService)\n+                    .filter(service -> !service.getName().equals(kernel.getMain().getName()))\n+                    .map(service -> {\n+                        Topic version = service.getConfig().find(VERSION_CONFIG_KEY);\n+                        Topics parameters = service.getConfig().findTopics(PARAMETERS_CONFIG_KEY);\n+                        ComponentInfo.ComponentInfoBuilder componentInfoBuilder = ComponentInfo.builder()\n+                                .packageName(service.getName());\n+                        if (version != null) {\n+                            componentInfoBuilder.version(((Semver) version.getOnce()).getValue());\n+                        }\n+                        if (parameters != null) {\n+                            componentInfoBuilder.runtimeParameters(parameters.children.entrySet().stream().collect(\n+                                    Collectors.toMap(e -> e.getKey(), e -> (String) ((Topic) e.getValue()).getOnce())));", "originalCommit": "70bbce2f6e8bed31b0916d7bdb518777b6c800a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4NTUxOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r431585519", "bodyText": "Forgot abt that, updated!", "author": "fahadmohammed01", "createdAt": "2020-05-28T05:14:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDY3OA=="}], "type": "inlineReview", "revised_code": {"commit": "5830ed4a5f46002ba1f6f3519d71bb078d18f646", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java b/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java\nindex e40933375..8e948f707 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java\n\n@@ -88,13 +89,14 @@ public class LocalDeploymentListener {\n                         }\n                         if (parameters != null) {\n                             componentInfoBuilder.runtimeParameters(parameters.children.entrySet().stream().collect(\n-                                    Collectors.toMap(e -> e.getKey(), e -> (String) ((Topic) e.getValue()).getOnce())));\n+                                    Collectors.toMap(e -> e.getKey(), e -> Coerce.toString(e.getValue()))));\n \n                         }\n                         return componentInfoBuilder.build();\n                     }).collect(Collectors.toList());\n \n-            return OBJECT_MAPPER.writeValueAsString(new ListComponentsResult(rootComponenetNames, componentInfo));\n+            return OBJECT_MAPPER.writerWithDefaultPrettyPrinter()\n+                    .writeValueAsString(new ListComponentsResult(rootComponenetNames, componentInfo));\n         } catch (JsonProcessingException e) {\n             //TODO: during IPC integration, change this to report internal error\n             throw new DeviceConfigurationException(\"Unable to list components\", e);\n"}}, {"oid": "5830ed4a5f46002ba1f6f3519d71bb078d18f646", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5830ed4a5f46002ba1f6f3519d71bb078d18f646", "message": "use pretty print to format the json", "committedDate": "2020-05-28T05:13:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNzQ3NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432007474", "bodyText": "Remove this TODO. Doesn't apply here :)", "author": "leaf94", "createdAt": "2020-05-28T17:34:08Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +65,76 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()\n+                    .filter(evergreenService -> evergreenService instanceof GenericExternalService)\n+                    .map(EvergreenService::getName).collect(Collectors.toList());\n+\n+            List<ComponentInfo> componentInfo = kernel.orderedDependencies().stream()\n+                    .filter(service -> service instanceof GenericExternalService)\n+                    .filter(service -> !service.getName().equals(kernel.getMain().getName()))\n+                    .map(service -> {\n+                        Topic version = service.getConfig().find(VERSION_CONFIG_KEY);\n+                        Topics parameters = service.getConfig().findTopics(PARAMETERS_CONFIG_KEY);\n+                        ComponentInfo.ComponentInfoBuilder componentInfoBuilder = ComponentInfo.builder()\n+                                .packageName(service.getName());\n+                        if (version != null) {\n+                            componentInfoBuilder.version(((Semver) version.getOnce()).getValue());\n+                        }\n+                        if (parameters != null) {\n+                            componentInfoBuilder.runtimeParameters(parameters.children.entrySet().stream().collect(\n+                                    Collectors.toMap(e -> e.getKey(), e -> Coerce.toString(e.getValue()))));\n+\n+                        }\n+                        return componentInfoBuilder.build();\n+                    }).collect(Collectors.toList());\n+\n+            return OBJECT_MAPPER.writerWithDefaultPrettyPrinter()\n+                    .writeValueAsString(new ListComponentsResult(rootComponenetNames, componentInfo));\n+        } catch (JsonProcessingException e) {\n+            //TODO: during IPC integration, change this to report internal error\n+            throw new DeviceConfigurationException(\"Unable to list components\", e);\n+        }\n+    }\n+\n+    //TODO: move this data object to appropriate place during IPC integration.\n+    /**\n+     * Data object used to transfer currently running.\n+     */\n+    @AllArgsConstructor\n+    @NoArgsConstructor\n+    @Getter\n+    public static class ListComponentsResult {\n+        @JsonProperty(\"RootPackages\")\n+        private List<String> rootPackages;\n+\n+        @JsonProperty(\"Components\")\n+        private List<ComponentInfo> componentsInfo;\n+\n+    }\n+\n+    //TODO: move this data object to appropriate place during IPC integration.\n+    @Builder\n+    @AllArgsConstructor\n+    @NoArgsConstructor\n+    @Getter\n+    public static class ComponentInfo {\n+        @JsonProperty(\"Name\")\n+        private String packageName;\n+\n+        // TODO: change to versionRequirements which can be a pinned version or a version range", "originalCommit": "5830ed4a5f46002ba1f6f3519d71bb078d18f646", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5NTIxNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432095215", "bodyText": "done", "author": "fahadmohammed01", "createdAt": "2020-05-28T20:09:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNzQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "5d3b49027b5094fce2b64ead805fe5c49b2371e7", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java b/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java\nindex 8e948f707..557c57945 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java\n\n@@ -128,7 +128,6 @@ public class LocalDeploymentListener {\n         @JsonProperty(\"Name\")\n         private String packageName;\n \n-        // TODO: change to versionRequirements which can be a pinned version or a version range\n         @JsonProperty(\"Version\")\n         private String version;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNzk0NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432007945", "bodyText": "We need to consolidate the ObjectMapper... Maybe after both you and my PR gets merged in!", "author": "leaf94", "createdAt": "2020-05-28T17:34:59Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/LocalDeploymentListenerTest.java", "diffHunk": "@@ -15,10 +17,14 @@\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class LocalDeploymentListenerTest {\n \n+    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper()\n+            .configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, false)\n+            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);", "originalCommit": "5830ed4a5f46002ba1f6f3519d71bb078d18f646", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5NTQ4Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432095486", "bodyText": "Yes, that would be done during merge.", "author": "fahadmohammed01", "createdAt": "2020-05-28T20:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNzk0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "789cd3df5eabcd8a38fe502fbf6bd9eb03506077", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/LocalDeploymentListenerTest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/LocalDeploymentListenerTest.java\nindex a8706c8c7..6c751fe31 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/LocalDeploymentListenerTest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/LocalDeploymentListenerTest.java\n\n@@ -17,7 +17,10 @@ import java.nio.file.Paths;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n \n+import static com.aws.iot.evergreen.deployment.LocalDeploymentListener.ComponentInfo;\n+import static com.aws.iot.evergreen.deployment.LocalDeploymentListener.ListComponentsResult;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class LocalDeploymentListenerTest {\n"}}, {"oid": "5d3b49027b5094fce2b64ead805fe5c49b2371e7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5d3b49027b5094fce2b64ead805fe5c49b2371e7", "message": "removed outdated  comment", "committedDate": "2020-05-28T20:09:32Z", "type": "commit"}, {"oid": "789cd3df5eabcd8a38fe502fbf6bd9eb03506077", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/789cd3df5eabcd8a38fe502fbf6bd9eb03506077", "message": "addressed pr comments", "committedDate": "2020-05-28T21:00:26Z", "type": "commit"}, {"oid": "c0ada353c26431e1fabbb81ee2036c81e8d7c98f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c0ada353c26431e1fabbb81ee2036c81e8d7c98f", "message": "Merge branch 'master' into list_components", "committedDate": "2020-05-28T21:07:28Z", "type": "commit"}, {"oid": "394cad0d43edd49b3542d95560fe1867d0c33df2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/394cad0d43edd49b3542d95560fe1867d0c33df2", "message": "Merge branch 'master' into list_components", "committedDate": "2020-05-28T21:23:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzNzk1NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432137955", "bodyText": "Why DeviceConfigurationException? doesn't seem relevant here", "author": "shaguptashaikh", "createdAt": "2020-05-28T21:36:08Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +65,74 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()\n+                    .filter(evergreenService -> evergreenService instanceof GenericExternalService)\n+                    .map(EvergreenService::getName).collect(Collectors.toList());\n+\n+            List<ComponentInfo> componentInfo = kernel.orderedDependencies().stream()\n+                    .filter(service -> !service.getName().equals(kernel.getMain().getName()))\n+                    .map(service -> {\n+                        Topic version = service.getConfig().find(VERSION_CONFIG_KEY);\n+                        Topics parameters = service.getConfig().findTopics(PARAMETERS_CONFIG_KEY);\n+                        ComponentInfo.ComponentInfoBuilder componentInfoBuilder = ComponentInfo.builder()\n+                                .packageName(service.getName());\n+                        if (version != null) {\n+                            componentInfoBuilder.version(((Semver) version.getOnce()).getValue());\n+                        }\n+                        if (parameters != null) {\n+                            componentInfoBuilder.runtimeParameters(parameters.children.entrySet().stream().collect(\n+                                    Collectors.toMap(e -> e.getKey(), e -> Coerce.toString(e.getValue()))));\n+\n+                        }\n+                        return componentInfoBuilder.build();\n+                    }).collect(Collectors.toList());\n+\n+            return OBJECT_MAPPER.writerWithDefaultPrettyPrinter()\n+                    .writeValueAsString(new ListComponentsResult(rootComponenetNames, componentInfo));\n+        } catch (JsonProcessingException e) {\n+            //TODO: during IPC integration, change this to report internal error\n+            throw new DeviceConfigurationException(\"Unable to list components\", e);", "originalCommit": "394cad0d43edd49b3542d95560fe1867d0c33df2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzOTIxMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432139212", "bodyText": "typo : component", "author": "ShirleyZheng92", "createdAt": "2020-05-28T21:38:55Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +65,74 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()", "originalCommit": "394cad0d43edd49b3542d95560fe1867d0c33df2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}