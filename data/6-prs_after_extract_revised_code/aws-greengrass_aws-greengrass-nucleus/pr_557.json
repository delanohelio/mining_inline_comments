{"pr_number": 557, "pr_title": "updating the CLIEventStreamAgent to copy recipe files in parity with \u2026", "pr_createdAt": "2020-10-22T08:29:04Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/557", "timeline": [{"oid": "7c55a7b34545f43a4fe47675fed742b5f3f5efe8", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7c55a7b34545f43a4fe47675fed742b5f3f5efe8", "message": "updating the CLIEventStreamAgent to copy recipe files in parity with old agent", "committedDate": "2020-10-22T19:16:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzNDU5Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/557#discussion_r510434593", "bodyText": "Do you need to also change file permissions at this point?", "author": "prateek-y", "createdAt": "2020-10-22T20:23:35Z", "path": "src/main/java/com/aws/greengrass/builtin/services/cli/CLIEventStreamAgent.java", "diffHunk": "@@ -395,6 +395,43 @@ private void validateUpdateRecipesAndArtifactsRequest(UpdateRecipesAndArtifactsR\n                 throw new InvalidArgumentsError(\"Need to provide at least one of the directory paths to update\");\n             }\n         }\n+\n+        private void copyRecipes(Path from, Path to) throws IOException {\n+            for (Path r : Files.walk(from).collect(Collectors.toList())) {\n+                String ext = Utils.extension(r.toString());\n+                ComponentRecipe recipe = null;\n+                if (r.toFile().length() == 0) {\n+                    logger.atInfo().log(\"Skipping recipe file {} because it is empty\", r);\n+                    continue;\n+                }\n+                try {\n+                    switch (ext.toLowerCase()) {\n+                        case \"yaml\":\n+                        case \"yml\":\n+                            recipe = SerializerFactory.getRecipeSerializer().readValue(r.toFile(),\n+                                    ComponentRecipe.class);\n+                            break;\n+                        case \"json\":\n+                            recipe = SerializerFactory.getRecipeSerializerJson()\n+                                    .readValue(r.toFile(), ComponentRecipe.class);\n+                            break;\n+                        default:\n+                            break;\n+                    }\n+                } catch (IOException e) {\n+                    logger.atError().log(\"Error reading recipe file from {}\", r, e);\n+                }\n+\n+                if (recipe == null) {\n+                    continue;\n+                }\n+\n+                // Write the recipe as YAML with the proper filename into the store\n+                Path copyTo = to.resolve(String.format(RECIPE_FILE_NAME_FORMAT, recipe.getComponentName(),\n+                        recipe.getComponentVersion().getValue()));\n+                Files.write(copyTo, SerializerFactory.getRecipeSerializer().writeValueAsBytes(recipe));", "originalCommit": "33a718a85a936f390cdd487e7ee8d2b0506bdd94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzNTY4MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/557#discussion_r510435681", "bodyText": "No, the kernel is the thing doing the writing and permissions are set on the directory, so it is fine.", "author": "MikeDombo", "createdAt": "2020-10-22T20:25:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzNDU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzOTI4Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/557#discussion_r510439286", "bodyText": "what if the source file has 777. Destination will end up having the same? Also, what is the behavior if the file already exists with different permissions?", "author": "prateek-y", "createdAt": "2020-10-22T20:32:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzNDU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ0MDE1OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/557#discussion_r510440158", "bodyText": "nvm, I missed that we are reading in memory first.", "author": "prateek-y", "createdAt": "2020-10-22T20:34:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzNDU5Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0348f9d1bd06699e3d3cf6bafc89c2f17bba16ec", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0348f9d1bd06699e3d3cf6bafc89c2f17bba16ec", "message": "updating the CLIEventStreamAgent to copy recipe files in parity with old agent", "committedDate": "2020-10-22T20:28:06Z", "type": "commit"}, {"oid": "c974566a29195536f8ccf122b366643f057574ac", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c974566a29195536f8ccf122b366643f057574ac", "message": "Changing the crt version to 1.0.0-SNAPSHOT", "committedDate": "2020-10-22T20:28:06Z", "type": "commit"}, {"oid": "c974566a29195536f8ccf122b366643f057574ac", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c974566a29195536f8ccf122b366643f057574ac", "message": "Changing the crt version to 1.0.0-SNAPSHOT", "committedDate": "2020-10-22T20:28:06Z", "type": "forcePushed"}]}