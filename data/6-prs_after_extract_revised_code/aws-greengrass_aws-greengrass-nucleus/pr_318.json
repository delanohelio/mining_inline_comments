{"pr_number": 318, "pr_title": "Add validation for tes role", "pr_createdAt": "2020-07-16T16:24:07Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/318", "timeline": [{"oid": "970eb6a064c2c64578cea991acd05314f6de8e72", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/970eb6a064c2c64578cea991acd05314f6de8e72", "message": "Add validation for tes role\n\nTes server should error out if role alias is absent/empty. Also fix\na bug where server without port config was not setting env variable\ncorrectly.", "committedDate": "2020-07-16T16:22:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkxNTk3Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/318#discussion_r455915972", "bodyText": "this should be in a finally or afterEach I think. So that even if the test fails, it always stops.", "author": "MikeDombo", "createdAt": "2020-07-16T16:28:43Z", "path": "src/test/java/com/aws/iot/evergreen/tes/HttpServerImplTest.java", "diffHunk": "@@ -79,5 +81,6 @@ public void GIVEN_port_WHEN_server_started_THEN_requests_are_successful() throws\n             responseSingle = br.readLine();\n         }\n         assertEquals(mockResponse, response.toString());\n+        server.stop();", "originalCommit": "970eb6a064c2c64578cea991acd05314f6de8e72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMzQ4MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/318#discussion_r455933480", "bodyText": "done", "author": "prateek-y", "createdAt": "2020-07-16T16:57:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkxNTk3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "543c0d70ff1e39bb84faaa9765314919f8165760", "chunk": "diff --git a/src/test/java/com/aws/iot/evergreen/tes/HttpServerImplTest.java b/src/test/java/com/aws/iot/evergreen/tes/HttpServerImplTest.java\nindex 3ef877bea..a6499b0e3 100644\n--- a/src/test/java/com/aws/iot/evergreen/tes/HttpServerImplTest.java\n+++ b/src/test/java/com/aws/iot/evergreen/tes/HttpServerImplTest.java\n\n@@ -53,34 +53,37 @@ public class HttpServerImplTest {\n     @ValueSource(ints = {0, 1025, 65355})\n     public void GIVEN_port_WHEN_server_started_THEN_requests_are_successful(int port) throws Exception {\n         HttpServerImpl server = startServer(port);\n-        doAnswer(invocationArgs -> {\n-                HttpExchange args = (HttpExchange)invocationArgs.getArguments()[0];\n+        try {\n+            doAnswer(invocationArgs -> {\n+                HttpExchange args = (HttpExchange) invocationArgs.getArguments()[0];\n                 args.sendResponseHeaders(HttpURLConnection.HTTP_OK, mockResponse.length());\n                 args.getResponseBody().write(mockResponse.getBytes());\n                 args.close();\n                 return null; //void method\n-        }).when(mockHttpHandler).handle(any());\n-        if (port == 0) {\n-            port = server.getServerPort();\n-        }\n-        URL url = new URL(\"http://localhost:\" + port + HttpServerImpl.URL);\n-        HttpURLConnection con = (HttpURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.setDoOutput(true);\n-        OutputStream out = con.getOutputStream();\n-        out.flush();\n-        out.close();\n+            }).when(mockHttpHandler).handle(any());\n+            if (port == 0) {\n+                port = server.getServerPort();\n+            }\n+            URL url = new URL(\"http://localhost:\" + port + HttpServerImpl.URL);\n+            HttpURLConnection con = (HttpURLConnection) url.openConnection();\n+            con.setRequestMethod(\"GET\");\n+            con.setDoOutput(true);\n+            OutputStream out = con.getOutputStream();\n+            out.flush();\n+            out.close();\n \n-        InputStream ip = con.getInputStream();\n-        BufferedReader br = new BufferedReader(new InputStreamReader(ip));\n+            InputStream ip = con.getInputStream();\n+            BufferedReader br = new BufferedReader(new InputStreamReader(ip));\n \n-        StringBuilder response = new StringBuilder();\n-        String responseSingle = br.readLine();\n-        while (responseSingle != null) {\n-            response.append(responseSingle);\n-            responseSingle = br.readLine();\n+            StringBuilder response = new StringBuilder();\n+            String responseSingle = br.readLine();\n+            while (responseSingle != null) {\n+                response.append(responseSingle);\n+                responseSingle = br.readLine();\n+            }\n+            assertEquals(mockResponse, response.toString());\n+        } finally {\n+            stopServer(server);\n         }\n-        assertEquals(mockResponse, response.toString());\n-        server.stop();\n     }\n }\n"}}, {"oid": "543c0d70ff1e39bb84faaa9765314919f8165760", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/543c0d70ff1e39bb84faaa9765314919f8165760", "message": "Fix PMD violation", "committedDate": "2020-07-16T16:56:21Z", "type": "commit"}, {"oid": "55c8284f207b5e1c225975e7df471a8638233238", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/55c8284f207b5e1c225975e7df471a8638233238", "message": "Merge branch 'master' into tes_role_validation", "committedDate": "2020-07-16T19:00:55Z", "type": "commit"}]}