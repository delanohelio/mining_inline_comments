{"pr_number": 761, "pr_title": "Get Nucleus version from property file included in zip, deploy CLI version=nucleus version", "pr_createdAt": "2020-12-07T21:18:03Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0NjE3OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537846178", "bodyText": "I think here we should read from zip but then fall back to version in config file, instead of falling back to 2.0.0", "author": "hui-yang", "createdAt": "2020-12-07T21:29:10Z", "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -255,7 +254,9 @@ void performSetup() throws IOException, DeviceConfigurationException, URISyntaxE\n             return;\n         }\n         if (showVersion) {\n-            outStream.println(String.format(SHOW_VERSION_RESPONSE, KERNEL_VERSION));\n+            // Use getVersionFromZip so that we don't need to startup the kernel which is slow and will\n+            // start creating files and directories which may not be desired\n+            outStream.println(String.format(SHOW_VERSION_RESPONSE, DeviceConfiguration.getVersionFromZip()));", "originalCommit": "9432ce3e6e32079a849770d8360f78a832c906ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0OTA4MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537849081", "bodyText": "That's not possible. The config isn't loaded at this point", "author": "MikeDombo", "createdAt": "2020-12-07T21:34:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0NjE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg1NTU0Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537855543", "bodyText": "And we don't want to load it because that causes the nucleus to start up which is slow and causing a bunch of logs to output instead of simply just printing out the version.\nThe only time this could be a problem is if the nucleus isn't properly configured, which we'd want to discourage anyway.", "author": "MikeDombo", "createdAt": "2020-12-07T21:45:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0NjE3OA=="}], "type": "inlineReview", "revised_code": {"commit": "a13980ba6bcb8b76218edc07d252b47360a6ca3c", "chunk": "diff --git a/src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java b/src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java\nindex adcab954c4..c7d23c5643 100644\n--- a/src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java\n+++ b/src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java\n\n@@ -256,7 +256,7 @@ public class GreengrassSetup {\n         if (showVersion) {\n             // Use getVersionFromZip so that we don't need to startup the kernel which is slow and will\n             // start creating files and directories which may not be desired\n-            outStream.println(String.format(SHOW_VERSION_RESPONSE, DeviceConfiguration.getVersionFromZip()));\n+            outStream.println(String.format(SHOW_VERSION_RESPONSE, DeviceConfiguration.getVersionFromBuildMetadataFile()));\n             return;\n         }\n \n"}}, {"oid": "0f44cd62c4f01bc30b12ce73004b3c53bb652b32", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0f44cd62c4f01bc30b12ce73004b3c53bb652b32", "message": "Get Nucleus version from property file included in zip", "committedDate": "2020-12-07T21:37:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NTA3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537885070", "bodyText": "Post re:Invent review: lets review how InterruptedException is handled - it seems fine here if thread exists, but this is often handled incorrectly.", "author": "JamieHunter", "createdAt": "2020-12-07T22:35:03Z", "path": "src/main/java/com/aws/greengrass/dependency/Context.java", "diffHunk": "@@ -66,7 +66,7 @@ public void run() {\n                     Runnable task = serialized.takeFirst();\n                     task.run();\n                 } catch (InterruptedException ie) {\n-                    logger.atWarn().log(\"Interrupted while running tasks. Publish thread will exit now.\");\n+                    logger.atInfo().log(\"Interrupted while running tasks. Publish thread will exit now.\");", "originalCommit": "0f44cd62c4f01bc30b12ce73004b3c53bb652b32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5NDE3NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537894175", "bodyText": "In this case we handle it correctly. I'm just dropping it down from warn because we had some questions from beta users who were concerned. This log is entirely expected when the nucleus shutsdown and when doing a deployment.", "author": "MikeDombo", "createdAt": "2020-12-07T22:52:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NTA3MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NTcwMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537885701", "bodyText": "Echoing earlier comment - this can get confusing, in this case for someone viewing open source - what's properties and whats configuration - we need to be very explicit here.", "author": "JamieHunter", "createdAt": "2020-12-07T22:36:18Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -103,6 +107,7 @@\n     private Topics loggingTopics;\n     private LoggerConfiguration currentConfiguration;\n     private String nucleusComponentNameCache;\n+    private static final Properties NUCLEUS_PROPERTIES = new Properties();", "originalCommit": "0f44cd62c4f01bc30b12ce73004b3c53bb652b32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a13980ba6bcb8b76218edc07d252b47360a6ca3c", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex 8ea7c6a754..d453be54e7 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -107,7 +111,7 @@ public class DeviceConfiguration {\n     private Topics loggingTopics;\n     private LoggerConfiguration currentConfiguration;\n     private String nucleusComponentNameCache;\n-    private static final Properties NUCLEUS_PROPERTIES = new Properties();\n+    private static final Properties NUCLEUS_BUILD_PROPERTIES = new Properties();\n \n     /**\n      * Constructor used to read device configuration from the config store.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NzQwNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537887407", "bodyText": "Really bad name. I thought you was cracking open the zip file. You're getting version from ... really need a better name for this file.\ngetVersionFromVersionConfig\ngetVersionFromBuildMetadataFile\n...\nopen to other suggestions.", "author": "JamieHunter", "createdAt": "2020-12-07T22:39:22Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -463,6 +467,47 @@ private Topics getTopics(String parameterName) {\n                         CONFIGURATION_CONFIG_KEY, parameterName);\n     }\n \n+    /**\n+     * Get the nucleus version from the running configuration or nucleus zip.\n+     *\n+     * @return nucleus version\n+     */\n+    public String getNucleusVersion() {\n+        String version = null;\n+        // Prefer to get the version from the active config\n+        Topics componentTopic = kernel.findServiceTopic(getNucleusComponentName());\n+        if (componentTopic != null && componentTopic.find(VERSION_CONFIG_KEY) != null) {\n+            version = Coerce.toString(componentTopic.find(VERSION_CONFIG_KEY));\n+        }\n+        if (version == null) {\n+            return getVersionFromZip();\n+        } else {\n+            return version;\n+        }\n+    }\n+\n+    /**\n+     * Get the Nucleus version from the ZIP file.\n+     *\n+     * @return version from the zip file, or a default if the version can't be determined\n+     */\n+    public static String getVersionFromZip() {", "originalCommit": "0f44cd62c4f01bc30b12ce73004b3c53bb652b32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5NTAyMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537895023", "bodyText": "renamed to getVersionFromBuildMetadataFile", "author": "MikeDombo", "createdAt": "2020-12-07T22:54:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NzQwNw=="}], "type": "inlineReview", "revised_code": {"commit": "a13980ba6bcb8b76218edc07d252b47360a6ca3c", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex 8ea7c6a754..d453be54e7 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -480,7 +484,7 @@ public class DeviceConfiguration {\n             version = Coerce.toString(componentTopic.find(VERSION_CONFIG_KEY));\n         }\n         if (version == null) {\n-            return getVersionFromZip();\n+            return getVersionFromBuildMetadataFile();\n         } else {\n             return version;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NzgzNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537887835", "bodyText": "\"nucleus.version\" magic name ... let's put magic names into constant (static final) fields.", "author": "JamieHunter", "createdAt": "2020-12-07T22:40:00Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -463,6 +467,47 @@ private Topics getTopics(String parameterName) {\n                         CONFIGURATION_CONFIG_KEY, parameterName);\n     }\n \n+    /**\n+     * Get the nucleus version from the running configuration or nucleus zip.\n+     *\n+     * @return nucleus version\n+     */\n+    public String getNucleusVersion() {\n+        String version = null;\n+        // Prefer to get the version from the active config\n+        Topics componentTopic = kernel.findServiceTopic(getNucleusComponentName());\n+        if (componentTopic != null && componentTopic.find(VERSION_CONFIG_KEY) != null) {\n+            version = Coerce.toString(componentTopic.find(VERSION_CONFIG_KEY));\n+        }\n+        if (version == null) {\n+            return getVersionFromZip();\n+        } else {\n+            return version;\n+        }\n+    }\n+\n+    /**\n+     * Get the Nucleus version from the ZIP file.\n+     *\n+     * @return version from the zip file, or a default if the version can't be determined\n+     */\n+    public static String getVersionFromZip() {\n+        try {\n+            try (InputStream is = Files\n+                    .newInputStream(locateCurrentKernelUnpackDir().resolve(\"conf\").resolve(\"nucleus.properties\"))) {\n+                NUCLEUS_PROPERTIES.load(is);\n+            }\n+\n+            String version = NUCLEUS_PROPERTIES.getProperty(\"nucleus.version\");", "originalCommit": "0f44cd62c4f01bc30b12ce73004b3c53bb652b32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5NDg3MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537894871", "bodyText": "Updated all constant strings to be proper consts", "author": "MikeDombo", "createdAt": "2020-12-07T22:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NzgzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "a13980ba6bcb8b76218edc07d252b47360a6ca3c", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex 8ea7c6a754..d453be54e7 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -480,7 +484,7 @@ public class DeviceConfiguration {\n             version = Coerce.toString(componentTopic.find(VERSION_CONFIG_KEY));\n         }\n         if (version == null) {\n-            return getVersionFromZip();\n+            return getVersionFromBuildMetadataFile();\n         } else {\n             return version;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4ODAxNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537888017", "bodyText": "We should give an error any time we fall back to returning constant version (again, magic string inline of code, we need to avoid doing this) so, here - log the error (and it is an error). At the \"return \"2.0.0\" - log at least a warning - with more information why we went down that path.", "author": "JamieHunter", "createdAt": "2020-12-07T22:40:21Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -463,6 +467,47 @@ private Topics getTopics(String parameterName) {\n                         CONFIGURATION_CONFIG_KEY, parameterName);\n     }\n \n+    /**\n+     * Get the nucleus version from the running configuration or nucleus zip.\n+     *\n+     * @return nucleus version\n+     */\n+    public String getNucleusVersion() {\n+        String version = null;\n+        // Prefer to get the version from the active config\n+        Topics componentTopic = kernel.findServiceTopic(getNucleusComponentName());\n+        if (componentTopic != null && componentTopic.find(VERSION_CONFIG_KEY) != null) {\n+            version = Coerce.toString(componentTopic.find(VERSION_CONFIG_KEY));\n+        }\n+        if (version == null) {\n+            return getVersionFromZip();\n+        } else {\n+            return version;\n+        }\n+    }\n+\n+    /**\n+     * Get the Nucleus version from the ZIP file.\n+     *\n+     * @return version from the zip file, or a default if the version can't be determined\n+     */\n+    public static String getVersionFromZip() {\n+        try {\n+            try (InputStream is = Files\n+                    .newInputStream(locateCurrentKernelUnpackDir().resolve(\"conf\").resolve(\"nucleus.properties\"))) {\n+                NUCLEUS_PROPERTIES.load(is);\n+            }\n+\n+            String version = NUCLEUS_PROPERTIES.getProperty(\"nucleus.version\");\n+            if (version != null) {\n+                return version;\n+            }\n+        } catch (IOException | URISyntaxException e) {\n+            logger.atWarn().log(\"Unable to determine Greengrass version\", e);", "originalCommit": "0f44cd62c4f01bc30b12ce73004b3c53bb652b32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5NDc3OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r537894778", "bodyText": "Added error when we return the default.", "author": "MikeDombo", "createdAt": "2020-12-07T22:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4ODAxNw=="}], "type": "inlineReview", "revised_code": {"commit": "a13980ba6bcb8b76218edc07d252b47360a6ca3c", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex 8ea7c6a754..d453be54e7 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -480,7 +484,7 @@ public class DeviceConfiguration {\n             version = Coerce.toString(componentTopic.find(VERSION_CONFIG_KEY));\n         }\n         if (version == null) {\n-            return getVersionFromZip();\n+            return getVersionFromBuildMetadataFile();\n         } else {\n             return version;\n         }\n"}}, {"oid": "a13980ba6bcb8b76218edc07d252b47360a6ca3c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a13980ba6bcb8b76218edc07d252b47360a6ca3c", "message": "PR comments", "committedDate": "2020-12-07T22:49:59Z", "type": "forcePushed"}, {"oid": "0c1c4c90f9ba0889e53989287ec7e0dd04b57044", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0c1c4c90f9ba0889e53989287ec7e0dd04b57044", "message": "PR comments", "committedDate": "2020-12-07T22:56:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNjIyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538616224", "bodyText": "Shouldn't this be the default version constant? If we change it, this test will break.", "author": "JamieHunter", "createdAt": "2020-12-08T17:11:26Z", "path": "src/test/java/com/aws/greengrass/tes/TokenExchangeServiceTest.java", "diffHunk": "@@ -107,7 +106,7 @@ void setup() {\n         when(kernel.getConfig()).thenReturn(configuration);\n         Topics servicesTopics = Topics.of(context, SERVICES_NAMESPACE_TOPIC, null);\n         Topic componentTypeTopic = Topic.of(context, SERVICE_TYPE_TOPIC_KEY, ComponentType.NUCLEUS.name());\n-        Topic componentVersionTopic = Topic.of(context, VERSION_CONFIG_KEY, KernelVersion.KERNEL_VERSION);\n+        Topic componentVersionTopic = Topic.of(context, VERSION_CONFIG_KEY, \"2.0.0\");", "originalCommit": "493f5da6ec6b4d61fdf49a7a8c64cd25c3310a89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYyMjYyNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538622625", "bodyText": "This test doesn't verify the version. The version used here doesn't matter at all. We just need to return something so that DeviceConfiguration can be initialized.", "author": "MikeDombo", "createdAt": "2020-12-08T17:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNjIyNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNzU0Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538617542", "bodyText": "Feels iffy to me...", "author": "JamieHunter", "createdAt": "2020-12-08T17:12:39Z", "path": "src/test/java/com/aws/greengrass/testcommons/testutilities/ExceptionLogProtector.java", "diffHunk": "@@ -122,6 +122,7 @@ public void beforeEach(ExtensionContext context) throws Exception {\n         // Ignore error from MQTT during shutdown\n         ignoreExceptionUltimateCauseWithMessageSubstring(context, \"MQTT operation interrupted by connection shutdown\");\n         ignoreExceptionUltimateCauseWithMessageSubstring(context, \"Connection has started destroying process\");\n+        ignoreExceptionUltimateCauseWithMessage(context, \"Unable to locate the unpack directory of Kernel Jar file\");", "originalCommit": "493f5da6ec6b4d61fdf49a7a8c64cd25c3310a89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYyMzMwNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538623307", "bodyText": "Without this, I would need to ignore this exception in over 30 individual tests. This error will always occur during testing because it cannot find the directory structure that it wants.", "author": "MikeDombo", "createdAt": "2020-12-08T17:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNzU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxNTExMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538715112", "bodyText": "Can we have a comment why it's ok to ignore this?", "author": "JamieHunter", "createdAt": "2020-12-08T18:47:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNzU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "02ca9495bd8fd20f48bb64ea345bbf5d2bd6e495", "chunk": "diff --git a/src/test/java/com/aws/greengrass/testcommons/testutilities/ExceptionLogProtector.java b/src/test/java/com/aws/greengrass/testcommons/testutilities/ExceptionLogProtector.java\nindex adc4addbcb..275252834a 100644\n--- a/src/test/java/com/aws/greengrass/testcommons/testutilities/ExceptionLogProtector.java\n+++ b/src/test/java/com/aws/greengrass/testcommons/testutilities/ExceptionLogProtector.java\n\n@@ -122,6 +122,10 @@ public class ExceptionLogProtector implements BeforeEachCallback, AfterEachCallb\n         // Ignore error from MQTT during shutdown\n         ignoreExceptionUltimateCauseWithMessageSubstring(context, \"MQTT operation interrupted by connection shutdown\");\n         ignoreExceptionUltimateCauseWithMessageSubstring(context, \"Connection has started destroying process\");\n+        // This exception will occur because our tests are not running with the directory structure expected by\n+        // Greengrass. As such, it is safe to ignore since Greengrass will just fallback to a default version, which\n+        // doesn't matter for almost all tests. Tests which care about the version should override the version in the\n+        // config.\n         ignoreExceptionUltimateCauseWithMessage(context, \"Unable to locate the unpack directory of Kernel Jar file\");\n \n         // Ignore error from AWS ERROR\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3MDE4MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538670181", "bodyText": "Given that the version in the property file is not the preferred value and the real version can be overwritten by the version in the config (which I assume is from the nucleus recipe), is it correct to show the version in the property file here?", "author": "fengwang666", "createdAt": "2020-12-08T18:01:35Z", "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -255,7 +254,10 @@ void performSetup() throws IOException, DeviceConfigurationException, URISyntaxE\n             return;\n         }\n         if (showVersion) {\n-            outStream.println(String.format(SHOW_VERSION_RESPONSE, KERNEL_VERSION));\n+            // Use getVersionFromBuildMetadataFile so that we don't need to startup the kernel which is slow and will\n+            // start creating files and directories which may not be desired\n+            outStream.println(String.format(SHOW_VERSION_RESPONSE,\n+                    DeviceConfiguration.getVersionFromBuildMetadataFile()));", "originalCommit": "875f527690076da3cd813c4630175fba7b93364a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3MjA1NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538672055", "bodyText": "The \"real\" version in a production environment 100% will match. The only time this won't match is in our own local testing.", "author": "MikeDombo", "createdAt": "2020-12-08T18:03:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3MDE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxMjk5OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538712999", "bodyText": "Except when the customer does something themselves. Never say never.", "author": "JamieHunter", "createdAt": "2020-12-08T18:44:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3MDE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxNDI4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538714289", "bodyText": "I'm fine with this for re:Invent, but we should review for post re:Invent - but at that time, we may have solution that uses recipe file.", "author": "JamieHunter", "createdAt": "2020-12-08T18:45:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3MDE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxNTY4Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538715682", "bodyText": "What do you mean by reading from the recipe post reinvent? Unless the customer explicitly messes it up, then the recipe will match this version. So reading from the recipe/config shouldn't have different results.", "author": "MikeDombo", "createdAt": "2020-12-08T18:47:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3MDE4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "3003102b66c3623d4a60beb116731ae031f3eb3d", "chunk": "diff --git a/src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java b/src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java\nindex 00b7515d08..adcab954c4 100644\n--- a/src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java\n+++ b/src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java\n\n@@ -254,10 +254,9 @@ public class GreengrassSetup {\n             return;\n         }\n         if (showVersion) {\n-            // Use getVersionFromBuildMetadataFile so that we don't need to startup the kernel which is slow and will\n+            // Use getVersionFromZip so that we don't need to startup the kernel which is slow and will\n             // start creating files and directories which may not be desired\n-            outStream.println(String.format(SHOW_VERSION_RESPONSE,\n-                    DeviceConfiguration.getVersionFromBuildMetadataFile()));\n+            outStream.println(String.format(SHOW_VERSION_RESPONSE, DeviceConfiguration.getVersionFromZip()));\n             return;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NDc2Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538674767", "bodyText": "Is falling back to 2.0.0 desirable? I feel it can be even more dangerous. Let's say customers are running on 2.1.0, for some reason, the property file is deleted, now suddenly the device think the nucleus is 2.0.0, which can cause a lot of surprises.", "author": "fengwang666", "createdAt": "2020-12-08T18:06:15Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -463,6 +471,50 @@ private Topics getTopics(String parameterName) {\n                         CONFIGURATION_CONFIG_KEY, parameterName);\n     }\n \n+    /**\n+     * Get the nucleus version from the running configuration or nucleus zip.\n+     *\n+     * @return nucleus version\n+     */\n+    public String getNucleusVersion() {\n+        String version = null;\n+        // Prefer to get the version from the active config\n+        Topics componentTopic = kernel.findServiceTopic(getNucleusComponentName());\n+        if (componentTopic != null && componentTopic.find(VERSION_CONFIG_KEY) != null) {\n+            version = Coerce.toString(componentTopic.find(VERSION_CONFIG_KEY));\n+        }\n+        if (version == null) {\n+            return getVersionFromBuildMetadataFile();\n+        } else {\n+            return version;\n+        }\n+    }\n+\n+    /**\n+     * Get the Nucleus version from the ZIP file.\n+     *\n+     * @return version from the zip file, or a default if the version can't be determined\n+     */\n+    public static String getVersionFromBuildMetadataFile() {\n+        try {\n+            try (InputStream is = Files\n+                    .newInputStream(locateCurrentKernelUnpackDir().resolve(NUCLEUS_BUILD_METADATA_DIRECTORY)\n+                            .resolve(NUCLEUS_BUILD_METADATA_FILENAME))) {\n+                NUCLEUS_BUILD_PROPERTIES.load(is);\n+            }\n+\n+            String version = NUCLEUS_BUILD_PROPERTIES.getProperty(NUCLEUS_VERSION_BUILD_METADATA_KEY);\n+            if (version != null) {\n+                return version;\n+            }\n+        } catch (IOException | URISyntaxException e) {\n+            logger.atError().log(\"Unable to determine Greengrass version\", e);\n+        }\n+        logger.atError().log(\"Unable to determine Greengrass version from build metadata file. \"\n+                        + \"Build file not found, or version not found in file. Falling back to {}\", FALLBACK_VERSION);\n+        return FALLBACK_VERSION;", "originalCommit": "875f527690076da3cd813c4630175fba7b93364a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NjY0OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538676648", "bodyText": "The property file being deleted doesn't matter because the version is in the config so a running environment still has the correct version.", "author": "MikeDombo", "createdAt": "2020-12-08T18:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NDc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY4MjQ5OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538682498", "bodyText": "Then why do we need the fallback?", "author": "fengwang666", "createdAt": "2020-12-08T18:13:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NDc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY4Mzc4MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538683780", "bodyText": "We can't have no version, we need to have some fallback when literally everything else hasn't returned us an answer.", "author": "MikeDombo", "createdAt": "2020-12-08T18:15:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NDc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY5MDI3NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538690275", "bodyText": "Additionally our integ tests will be using this fallback since they aren't running through the zip method, so there's no property file to read. And the config they load doesn't contain a version.", "author": "MikeDombo", "createdAt": "2020-12-08T18:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NDc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxMjYwOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538712609", "bodyText": "I toyed with the idea of fallback to 0.0.0 when reviewing this - it would make it obvious that it's not getting a version.", "author": "JamieHunter", "createdAt": "2020-12-08T18:43:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NDc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxNzI1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/761#discussion_r538717253", "bodyText": "So, do you want me to change this to 0.0.0?", "author": "MikeDombo", "createdAt": "2020-12-08T18:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NDc2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3003102b66c3623d4a60beb116731ae031f3eb3d", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex fdcba3ae6c..8ea7c6a754 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -484,7 +480,7 @@ public class DeviceConfiguration {\n             version = Coerce.toString(componentTopic.find(VERSION_CONFIG_KEY));\n         }\n         if (version == null) {\n-            return getVersionFromBuildMetadataFile();\n+            return getVersionFromZip();\n         } else {\n             return version;\n         }\n"}}, {"oid": "3003102b66c3623d4a60beb116731ae031f3eb3d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3003102b66c3623d4a60beb116731ae031f3eb3d", "message": "Get Nucleus version from property file included in zip", "committedDate": "2020-12-08T18:14:23Z", "type": "commit"}, {"oid": "1b85874f8be2e1b27cbbe1bd9b0eb7b7953be8ac", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1b85874f8be2e1b27cbbe1bd9b0eb7b7953be8ac", "message": "Install CLI version equal to Nucleus version", "committedDate": "2020-12-08T18:14:23Z", "type": "commit"}, {"oid": "f9b36ee00cb74b79d2dc600c4816ce19a2558538", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f9b36ee00cb74b79d2dc600c4816ce19a2558538", "message": "PR comments", "committedDate": "2020-12-08T18:14:24Z", "type": "commit"}, {"oid": "86abb14afd67bdadca573adaf4fe99881b27208b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/86abb14afd67bdadca573adaf4fe99881b27208b", "message": "Remove GCS publish step", "committedDate": "2020-12-08T18:14:24Z", "type": "commit"}, {"oid": "513cba76536934e2f6c17860e40ce916f1f5a2f1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/513cba76536934e2f6c17860e40ce916f1f5a2f1", "message": "Rename nucleus.properties to nucleus-build.properties", "committedDate": "2020-12-08T18:14:24Z", "type": "commit"}, {"oid": "52c03137042e4da96f19db5c28436da4a5e6f8f2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/52c03137042e4da96f19db5c28436da4a5e6f8f2", "message": "Add 3p license file, remove some stuff from our jar", "committedDate": "2020-12-08T18:14:25Z", "type": "commit"}, {"oid": "28a66c262d505fae29ed3056ce7489092093f8dd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/28a66c262d505fae29ed3056ce7489092093f8dd", "message": "Remove publish to EG bucket", "committedDate": "2020-12-08T18:28:04Z", "type": "commit"}, {"oid": "02ca9495bd8fd20f48bb64ea345bbf5d2bd6e495", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/02ca9495bd8fd20f48bb64ea345bbf5d2bd6e495", "message": "PR comments", "committedDate": "2020-12-08T20:32:58Z", "type": "commit"}, {"oid": "02ca9495bd8fd20f48bb64ea345bbf5d2bd6e495", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/02ca9495bd8fd20f48bb64ea345bbf5d2bd6e495", "message": "PR comments", "committedDate": "2020-12-08T20:32:58Z", "type": "forcePushed"}]}