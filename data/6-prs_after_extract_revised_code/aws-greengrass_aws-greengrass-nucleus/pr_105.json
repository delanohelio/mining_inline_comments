{"pr_number": 105, "pr_title": "Add AbstractBaseITCase to make integration test consistent with the help of reading root from System Property", "pr_createdAt": "2020-03-11T02:27:30Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDUyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390714524", "bodyText": "Can we have multiple beforealls? Like if a class that extends this abstract test wants to use a beforeall, do both work?", "author": "MikeDombo", "createdAt": "2020-03-11T02:30:09Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.aws.iot.evergreen.integrationtests;\n+\n+\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.nio.file.Path;\n+\n+public abstract class AbstractItTestCase {\n+\n+    @TempDir\n+    protected static Path tempRootDir;\n+\n+    @BeforeAll", "originalCommit": "093125693449b8d1906f0231796a6a4050dfb462", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxODIwNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390718206", "bodyText": "Yes we can and subclasses's beforeAll runs after the base class's beforeAll. KernelTest overrides storage from console to a file since it currently relies on watching the file for verification", "author": "leaf94", "createdAt": "2020-03-11T02:45:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDUyNA=="}], "type": "inlineReview", "revised_code": {"commit": "19dd7d37fe4a1be12e3b2f11e2603253baa33b20", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractBaseITCase.java\nsimilarity index 92%\nrename from src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java\nrename to src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractBaseITCase.java\nindex d0b69d470..cfe5f9c9e 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractBaseITCase.java\n\n@@ -6,7 +6,7 @@ import org.junit.jupiter.api.io.TempDir;\n \n import java.nio.file.Path;\n \n-public abstract class AbstractItTestCase {\n+public abstract class AbstractBaseITCase {\n \n     @TempDir\n     protected static Path tempRootDir;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDg3Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390714876", "bodyText": "Get rid of the catch and fail. Just throw from the test.\nWhy did you make this change, maybe I'm missing something?", "author": "MikeDombo", "createdAt": "2020-03-11T02:31:35Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java", "diffHunk": "@@ -192,27 +170,29 @@ void testSomeMethod() throws Exception {\n         Thread thread = new Thread(runnable);\n         thread.start();\n \n-        Kernel kernel = new Kernel();\n-        kernel.parseArgs(\"-r\", tempRootDir.toString(), \"-log\", \"stdout\", \"-i\",\n-                KernelTest.class.getResource(\"config.yaml\").toString());\n-        kernel.launch();\n-        boolean ok = OK[0].await(200, TimeUnit.SECONDS);\n-        assertTrue(ok);\n-        testGroup(0);\n-        System.out.println(\"First phase passed, now for the harder stuff\");\n-\n-        kernel.find(\"main\", \"run\")\n-                .setValue(\"while true; do\\n\" + \"        date; sleep 5; echo NEWMAIN\\n\" + \"     \" + \"   done\");\n-        //            kernel.writeConfig(new OutputStreamWriter(System.out));\n-        testGroup(1);\n-\n-        System.out.println(\"Now merging delta.yaml\");\n-        kernel.mergeInNewConfig(\"ID\", System.currentTimeMillis(),\n-                (Map<Object, Object>) JSON.std.with(new YAMLFactory()).anyFrom(getClass().getResource(\"delta\"\n-                        + \".yaml\")))\n-                .get(60, TimeUnit.SECONDS);\n-        testGroup(2);\n-        kernel.shutdown();\n+        try {\n+            Kernel kernel = new Kernel();\n+            kernel.parseArgs(\"-i\", this.getClass().getResource(\"config.yaml\").toString());\n+            kernel.launch();\n+            boolean ok = OK[0].await(200, TimeUnit.SECONDS);\n+            assertTrue(ok);\n+            testGroup(0);\n+            System.out.println(\"First phase passed, now for the harder stuff\");\n+\n+            kernel.find(\"main\", \"run\").setValue(\"while true; do\\n\" + \"        date; sleep 5; echo NEWMAIN\\n\" + \"     \" +\n+                    \"   done\");\n+            //            kernel.writeConfig(new OutputStreamWriter(System.out));\n+            testGroup(1);\n+            System.out.println(\"Now merging delta.yaml\");\n+\n+            kernel.context.get(UpdateSystemSafelyService.class).addUpdateAction(\"test\",\n+                    () -> kernel.readMerge(this.getClass().getResource(\"delta.yaml\"), false));\n+            testGroup(2);\n+            kernel.shutdown();\n+        } catch (Throwable ex) {", "originalCommit": "093125693449b8d1906f0231796a6a4050dfb462", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxODczMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390718730", "bodyText": "Good catch. I think I copied the old version when changing it... Will get rid of it", "author": "leaf94", "createdAt": "2020-03-11T02:48:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDg3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "19dd7d37fe4a1be12e3b2f11e2603253baa33b20", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java\nindex ef8a44c47..6a67ad952 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java\n\n@@ -170,29 +170,26 @@ class KernelTest extends AbstractItTestCase {\n         Thread thread = new Thread(runnable);\n         thread.start();\n \n-        try {\n-            Kernel kernel = new Kernel();\n-            kernel.parseArgs(\"-i\", this.getClass().getResource(\"config.yaml\").toString());\n-            kernel.launch();\n-            boolean ok = OK[0].await(200, TimeUnit.SECONDS);\n-            assertTrue(ok);\n-            testGroup(0);\n-            System.out.println(\"First phase passed, now for the harder stuff\");\n-\n-            kernel.find(\"main\", \"run\").setValue(\"while true; do\\n\" + \"        date; sleep 5; echo NEWMAIN\\n\" + \"     \" +\n-                    \"   done\");\n-            //            kernel.writeConfig(new OutputStreamWriter(System.out));\n-            testGroup(1);\n-            System.out.println(\"Now merging delta.yaml\");\n-\n-            kernel.context.get(UpdateSystemSafelyService.class).addUpdateAction(\"test\",\n-                    () -> kernel.readMerge(this.getClass().getResource(\"delta.yaml\"), false));\n-            testGroup(2);\n-            kernel.shutdown();\n-        } catch (Throwable ex) {\n-            ex.printStackTrace(System.out);\n-            fail();\n-        }\n+        Kernel kernel = new Kernel();\n+        kernel.parseArgs(\"-i\", this.getClass().getResource(\"config.yaml\").toString());\n+        kernel.launch();\n+        boolean ok = OK[0].await(200, TimeUnit.SECONDS);\n+        assertTrue(ok);\n+        testGroup(0);\n+        System.out.println(\"First phase passed, now for the harder stuff\");\n+\n+        kernel.find( \"services\", \"main\", \"lifecycle\", \"run\")\n+                .setValue(\"while true; do\\n\" + \"        date; sleep 5; echo NEWMAIN\\n\" + \"     \" + \"   done\");\n+        //            kernel.writeConfig(new OutputStreamWriter(System.out));\n+        testGroup(1);\n+\n+        System.out.println(\"Now merging delta.yaml\");\n+        kernel.mergeInNewConfig(\"ID\", System.currentTimeMillis(),\n+                (Map<Object, Object>) JSON.std.with(new YAMLFactory()).anyFrom(getClass().getResource(\"delta\"\n+                        + \".yaml\")))\n+                .get(60, TimeUnit.SECONDS);\n+        testGroup(2);\n+        kernel.shutdown();\n     }\n \n     private void testGroup(int g) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTA0Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390715046", "bodyText": "quit? Since this is a property that can't be fixed by a deployment.", "author": "MikeDombo", "createdAt": "2020-03-11T02:32:28Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -133,6 +133,18 @@ public Kernel parseArgs(String... args) {\n                         ensureCreated(workPath);\n                     }\n                 });\n+\n+\n+        // Initialize root path from System Property/JVM argument\n+        String rootAbsolutePath = System.getProperty(\"root\");\n+        if (Utils.isEmpty(rootAbsolutePath) || !ensureCreated(Paths.get(rootAbsolutePath))) {\n+            System.err.println(rootAbsolutePath + \": not a valid root directory\");\n+            broken = true;", "originalCommit": "093125693449b8d1906f0231796a6a4050dfb462", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxODk0MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390718940", "bodyText": "Yeah, I thought about just System.exit(1) but there are other logic related to this broken so I didn't bother changing it now...", "author": "leaf94", "createdAt": "2020-03-11T02:49:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTA0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "20e73da1ffc0f61402431248831cb3ce4c0795c9", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java b/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java\nindex 45da6aa1f..50611b51f 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java\n\n@@ -142,8 +143,6 @@ public class Kernel extends Configuration /*implements Runnable*/ {\n             broken = true;\n         }\n         root.setValue(rootAbsolutePath);\n-        prefs.put(\"rootpath\", String.valueOf(root.getOnce())); // make root setting sticky\n-\n \n         while (!Objects.equals(getArg(), done)) {\n             switch (arg) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTUxMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390715512", "bodyText": "Seems like you should be setting the value as the dflt on line 121 from the system property?", "author": "MikeDombo", "createdAt": "2020-03-11T02:34:20Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -133,6 +133,18 @@ public Kernel parseArgs(String... args) {\n                         ensureCreated(workPath);\n                     }\n                 });", "originalCommit": "093125693449b8d1906f0231796a6a4050dfb462", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxODU5MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390718591", "bodyText": "Yeah. Line 144 sets it and Line 145 updates the prefs", "author": "leaf94", "createdAt": "2020-03-11T02:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTUxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxOTI4Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390719283", "bodyText": "Right, maybe just remove the dflt then? Since it will never be used.", "author": "MikeDombo", "createdAt": "2020-03-11T02:50:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTUxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczMzg1NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r394733855", "bodyText": "Removed. I also removed the \"stickiness\" with Preference, because now it is a required when starting JVM every time. But I'm not sure how James thinks about it....but I guess we can always add it back.", "author": "leaf94", "createdAt": "2020-03-19T01:10:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTUxMg=="}], "type": "inlineReview", "revised_code": {"commit": "20e73da1ffc0f61402431248831cb3ce4c0795c9", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java b/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java\nindex 45da6aa1f..50611b51f 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/Kernel.java\n\n@@ -142,8 +143,6 @@ public class Kernel extends Configuration /*implements Runnable*/ {\n             broken = true;\n         }\n         root.setValue(rootAbsolutePath);\n-        prefs.put(\"rootpath\", String.valueOf(root.getOnce())); // make root setting sticky\n-\n \n         while (!Objects.equals(getArg(), done)) {\n             switch (arg) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTYzMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390715632", "bodyText": "Not a big deal, but I don't like this class name. Can we just go with AbstractTest? or similar", "author": "MikeDombo", "createdAt": "2020-03-11T02:34:56Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.aws.iot.evergreen.integrationtests;\n+\n+\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.nio.file.Path;\n+\n+public abstract class AbstractItTestCase {", "originalCommit": "093125693449b8d1906f0231796a6a4050dfb462", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxODk4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390718989", "bodyText": "See the updated name!", "author": "leaf94", "createdAt": "2020-03-11T02:49:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTYzMg=="}], "type": "inlineReview", "revised_code": {"commit": "19dd7d37fe4a1be12e3b2f11e2603253baa33b20", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractBaseITCase.java\nsimilarity index 92%\nrename from src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java\nrename to src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractBaseITCase.java\nindex d0b69d470..cfe5f9c9e 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractBaseITCase.java\n\n@@ -6,7 +6,7 @@ import org.junit.jupiter.api.io.TempDir;\n \n import java.nio.file.Path;\n \n-public abstract class AbstractItTestCase {\n+public abstract class AbstractBaseITCase {\n \n     @TempDir\n     protected static Path tempRootDir;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTcyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390715724", "bodyText": "What is the IT in the name?", "author": "MikeDombo", "createdAt": "2020-03-11T02:35:28Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractBaseITCase.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.aws.iot.evergreen.integrationtests;\n+\n+\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.nio.file.Path;\n+\n+public abstract class AbstractBaseITCase {", "originalCommit": "f6a98184c4bddf9a8b734ada2fda7336d27c8459", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNzQxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390717418", "bodyText": "Great question. IT stands for \"Integration Test\" per maven's standard. Added this to the PR description!", "author": "leaf94", "createdAt": "2020-03-11T02:42:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTcyNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM3OTk4NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r392379984", "bodyText": "This can be refactored now after James added the log listener. But I'm fine with addressing this in a separate PR.", "author": "hui-yang", "createdAt": "2020-03-13T17:46:23Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java", "diffHunk": "@@ -44,44 +37,30 @@\n             new Expected(1, \"\\\"stdout\\\":\\\"NEWMAIN\\\"\", \"Assignment to 'run' script'\"),\n             new Expected(2, \"\\\"stdout\\\":\\\"JUSTME=fancy a spot of coffee?\\\"\", \"merge yaml\"),\n             new Expected(2, \"\\\"stdout\\\":\\\"I'm Frodo\\\"\", \"merge adding dependency\")};\n-    static final String LogFileName = \"test.log\";\n+    private static final String LOG_FILE_NAME = \"KernelTest.log\";\n+    private static final String LOG_FILE_PATH_NAME = tempRootDir.resolve(LOG_FILE_NAME).toAbsolutePath().toString();\n \n     static {\n         for (int i = gc.length; --i >= 0; ) {\n             OK[i] = new CountDownLatch(gc[i]);\n         }\n     }\n \n-    @TempDir\n-    Path tempRootDir;\n-\n     @BeforeAll\n-    static void setup() {\n+    static void beforeAll () {\n+        // TODO Migrate off verification through logging\n+        // override log store to a file for legacy kernel test to verify logs\n         System.setProperty(\"log.fmt\", \"JSON\");\n-        System.setProperty(\"log.storeName\", LogFileName);\n         System.setProperty(\"log.store\", \"FILE\");\n         System.setProperty(\"log.level\", \"INFO\");\n-        try {\n-            Files.deleteIfExists(Paths.get(LogFileName));\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n-    @AfterAll\n-    static void cleanup() {\n-        try {\n-            Files.deleteIfExists(Paths.get(LogFileName));\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n+        System.setProperty(\"log.storeName\", LOG_FILE_PATH_NAME);\n+        System.out.println(\"Storing log to: \" + LOG_FILE_PATH_NAME);", "originalCommit": "f6a98184c4bddf9a8b734ada2fda7336d27c8459", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczNDQ2MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r394734461", "bodyText": "Will be done in the next PR of \"Refactor KernelTest\"!", "author": "leaf94", "createdAt": "2020-03-19T01:12:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM3OTk4NA=="}], "type": "inlineReview", "revised_code": {"commit": "cba95723eb601a1133b215c2b4fb723735d99bd3", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java\nindex a9e056a9e..94f3d4b9e 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java\n\n@@ -47,8 +49,8 @@ class KernelTest extends AbstractBaseITCase {\n     }\n \n     @BeforeAll\n-    static void beforeAll () {\n-        // TODO Migrate off verification through logging\n+    static void beforeAll() {\n+        // TODO Refactor with Log Listener\n         // override log store to a file for legacy kernel test to verify logs\n         System.setProperty(\"log.fmt\", \"JSON\");\n         System.setProperty(\"log.store\", \"FILE\");\n"}}, {"oid": "19dd7d37fe4a1be12e3b2f11e2603253baa33b20", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/19dd7d37fe4a1be12e3b2f11e2603253baa33b20", "message": "Add AbstractBaseITCase to make integration test consistent with the help of reading root from System Property", "committedDate": "2020-03-18T22:24:44Z", "type": "commit"}, {"oid": "cba95723eb601a1133b215c2b4fb723735d99bd3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cba95723eb601a1133b215c2b4fb723735d99bd3", "message": "Add AbstractBaseITCase to make integration test consistent with the help of reading root from System Property", "committedDate": "2020-03-18T22:32:40Z", "type": "commit"}, {"oid": "cba95723eb601a1133b215c2b4fb723735d99bd3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cba95723eb601a1133b215c2b4fb723735d99bd3", "message": "Add AbstractBaseITCase to make integration test consistent with the help of reading root from System Property", "committedDate": "2020-03-18T22:32:40Z", "type": "forcePushed"}, {"oid": "20e73da1ffc0f61402431248831cb3ce4c0795c9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/20e73da1ffc0f61402431248831cb3ce4c0795c9", "message": "Remove default root path and stickiness with Preference", "committedDate": "2020-03-19T01:08:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczNjY5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r394736695", "bodyText": "When you rebase, I believe you'll have a lot of additional cleanup to remove all the -rs and -logs.", "author": "MikeDombo", "createdAt": "2020-03-19T01:21:46Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -37,8 +33,7 @@ void setup() {\n \n         // start kernel\n         kernel = new Kernel();\n-        kernel.parseArgs(\"-r\", tempRootDir.toString(), \"-i\",\n-                getClass().getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.parseArgs(\"-i\", this.getClass().getResource(\"ipc_aware_main.yaml\").toString());", "originalCommit": "20e73da1ffc0f61402431248831cb3ce4c0795c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczNzk4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r394737989", "bodyText": "I already rebased the latest master... around 5pm... So hopefully I don't have to...", "author": "leaf94", "createdAt": "2020-03-19T01:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczNjY5NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "c716446a1d41088912e470e69dd1e6780d560c1a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c716446a1d41088912e470e69dd1e6780d560c1a", "message": "Merge branch 'master' into root_as_jvm_arg", "committedDate": "2020-03-19T03:02:46Z", "type": "commit"}]}