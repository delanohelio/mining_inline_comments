{"pr_number": 685, "pr_title": "Synchronize access to mqtt connection, more thread safety", "pr_createdAt": "2020-11-14T03:04:37Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/685", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM2NjkxMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/685#discussion_r523366912", "bodyText": "Shouldn't this be removed from line 216?", "author": "shaguptashaikh", "createdAt": "2020-11-14T03:08:44Z", "path": "src/main/java/com/aws/greengrass/mqttclient/MqttClient.java", "diffHunk": "@@ -214,6 +217,12 @@ protected MqttClient(DeviceConfiguration deviceConfiguration,\n                     return;\n                 }\n \n+                // Only reconnect when the region changed if the proxy exists\n+                if (node.childOf(DEVICE_PARAM_AWS_REGION)", "originalCommit": "653d3fb820f8928033d2868e0be4aaf6d2bba085", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM2NzAzMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/685#discussion_r523367032", "bodyText": "No, otherwise it would skip all region changes", "author": "MikeDombo", "createdAt": "2020-11-14T03:09:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM2NjkxMg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "b959978b483192ed05d6422201cb78f379885363", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b959978b483192ed05d6422201cb78f379885363", "message": "Synchronize access to mqtt connection, more thread safety", "committedDate": "2020-11-14T03:17:03Z", "type": "forcePushed"}, {"oid": "d0ebb6a6d70dc737125c75d5eec6c60e1a7e7561", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d0ebb6a6d70dc737125c75d5eec6c60e1a7e7561", "message": "Synchronize access to mqtt connection, more thread safety", "committedDate": "2020-11-14T03:23:37Z", "type": "commit"}, {"oid": "d0ebb6a6d70dc737125c75d5eec6c60e1a7e7561", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d0ebb6a6d70dc737125c75d5eec6c60e1a7e7561", "message": "Synchronize access to mqtt connection, more thread safety", "committedDate": "2020-11-14T03:23:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM2ODU2OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/685#discussion_r523368568", "bodyText": "Does publish need to be synchronized?", "author": "fengwang666", "createdAt": "2020-11-14T03:27:06Z", "path": "src/main/java/com/aws/greengrass/mqttclient/AwsIotMqttClient.java", "diffHunk": "@@ -100,31 +99,46 @@ public void onConnectionResumed(boolean sessionPresent) {\n     CompletableFuture<Integer> subscribe(String topic, QualityOfService qos) {\n         return connect().thenCompose((b) -> {\n             logger.atDebug().kv(TOPIC_KEY, topic).kv(QOS_KEY, qos.name()).log(\"Subscribing to topic\");\n-            return connection.subscribe(topic, qos).thenApply((i) -> {\n-                subscriptionTopics.put(topic, qos);\n-                return i;\n-            });\n+            synchronized (this) {\n+                throwIfNotConnected();\n+                return connection.subscribe(topic, qos).thenApply((i) -> {\n+                    subscriptionTopics.put(topic, qos);\n+                    return i;\n+                });\n+            }\n         });\n     }\n \n     CompletableFuture<Integer> unsubscribe(String topic) {\n         return connect().thenCompose((b) -> {\n             logger.atDebug().kv(TOPIC_KEY, topic).log(\"Unsubscribing from topic\");\n-            return connection.unsubscribe(topic).thenApply((i) -> {\n-                subscriptionTopics.remove(topic);\n-                return i;\n-            });\n+            synchronized (this) {\n+                throwIfNotConnected();\n+                return connection.unsubscribe(topic).thenApply((i) -> {\n+                    subscriptionTopics.remove(topic);\n+                    return i;\n+                });\n+            }\n         });\n     }\n \n     CompletableFuture<Integer> publish(MqttMessage message, QualityOfService qos, boolean retain) {\n         return connect().thenCompose((b) -> {\n             logger.atTrace().kv(TOPIC_KEY, message.getTopic()).kv(QOS_KEY, qos.name()).kv(\"retain\", retain)\n                     .log(\"Publishing message\");\n-            return connection.publish(message, qos, retain);\n+            synchronized (this) {\n+                throwIfNotConnected();\n+                return connection.publish(message, qos, retain);\n+            }", "originalCommit": "d0ebb6a6d70dc737125c75d5eec6c60e1a7e7561", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM2ODY2Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/685#discussion_r523368662", "bodyText": "It is async so it won't block (for long). I'm synchronizing around usage of the connection", "author": "MikeDombo", "createdAt": "2020-11-14T03:28:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM2ODU2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM2ODg2OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/685#discussion_r523368868", "bodyText": "Not clear, but I think that one problem is that the connection could be closed before I had a chance to use it, so that's why I added this locking and the throwIfNotConnected", "author": "MikeDombo", "createdAt": "2020-11-14T03:30:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM2ODU2OA=="}], "type": "inlineReview", "revised_code": null}]}