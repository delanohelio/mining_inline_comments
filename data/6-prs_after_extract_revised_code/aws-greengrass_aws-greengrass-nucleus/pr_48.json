{"pr_number": 48, "pr_title": "Break out unit and integration tests", "pr_createdAt": "2020-01-31T00:08:52Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/48", "timeline": [{"oid": "75a2cbe4532c716654b36f97e5d0a306f356f6ec", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/75a2cbe4532c716654b36f97e5d0a306f356f6ec", "message": "Tag tests as integration, separate out test runs for unit and integration", "committedDate": "2020-01-31T00:08:27Z", "type": "commit"}, {"oid": "b9efec9d3165838b78d26e14ecab436946a3bdde", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b9efec9d3165838b78d26e14ecab436946a3bdde", "message": "Merge branch 'master' into integration_tests", "committedDate": "2020-01-31T00:15:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2MTgxMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/48#discussion_r373261813", "bodyText": "Like this!", "author": "leaf94", "createdAt": "2020-01-31T00:17:26Z", "path": "src/test/java/com/aws/iot/evergreen/util/CoerceTest.java", "diffHunk": "@@ -10,22 +10,24 @@\n import static com.aws.iot.evergreen.util.Coerce.toInt;\n import static com.aws.iot.evergreen.util.Coerce.toQuotedString;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class CoerceTest {\n \n     @Test\n     public void T1() {\n-        assertEquals(true, toBoolean(true));\n-        assertEquals(true, toBoolean(\"true\"));\n-        assertEquals(true, toBoolean(1));\n-        assertEquals(true, toBoolean(\"yes\"));\n-        assertEquals(true, toBoolean(99));\n-        assertEquals(false, toBoolean(false));\n-        assertEquals(false, toBoolean(\"false\"));\n-        assertEquals(false, toBoolean(\"bozo\"));\n-        assertEquals(false, toBoolean(null));\n-        assertEquals(false, toBoolean(0));\n+        assertTrue(toBoolean(true));\n+        assertTrue(toBoolean(\"true\"));\n+        assertTrue(toBoolean(1));\n+        assertTrue(toBoolean(\"yes\"));\n+        assertTrue(toBoolean(99));\n+        assertFalse(toBoolean(false));\n+        assertFalse(toBoolean(\"false\"));\n+        assertFalse(toBoolean(\"bozo\"));\n+        assertFalse(toBoolean(null));\n+        assertFalse(toBoolean(0));", "originalCommit": "75a2cbe4532c716654b36f97e5d0a306f356f6ec", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}