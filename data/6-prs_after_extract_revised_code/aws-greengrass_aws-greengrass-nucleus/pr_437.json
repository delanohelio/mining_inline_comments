{"pr_number": 437, "pr_title": "Renamed safeupdatepolicy to componentupdatepolicy", "pr_createdAt": "2020-09-14T23:41:41Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437", "timeline": [{"oid": "4ee6c77be97c3f76699b54668c5ce49c207b0602", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4ee6c77be97c3f76699b54668c5ce49c207b0602", "message": "renamed safeupdatepolicy to componentupdatepolicy", "committedDate": "2020-09-14T23:40:05Z", "type": "commit"}, {"oid": "af0f310a4e8468817cabdea4913b34d80483ec15", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/af0f310a4e8468817cabdea4913b34d80483ec15", "message": "Merge branch 'master' into componentUpdatePolicy", "committedDate": "2020-09-14T23:41:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NzczMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488297730", "bodyText": "Why aren't we just using the SDK's model?", "author": "MikeDombo", "createdAt": "2020-09-14T23:44:02Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/model/ComponentUpdatePolicy.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *   SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.AllArgsConstructor;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@Getter\n+@Setter\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@EqualsAndHashCode\n+@ToString\n+public class ComponentUpdatePolicy {", "originalCommit": "af0f310a4e8468817cabdea4913b34d80483ec15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0MzUzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488343536", "bodyText": "Updated to use the enum from the sdk's model.", "author": "fahadmohammed01", "createdAt": "2020-09-15T02:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NzczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NTUwMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488345502", "bodyText": "Is this class still needed if we're using the SDK model?", "author": "shaguptashaikh", "createdAt": "2020-09-15T02:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NzczMA=="}], "type": "inlineReview", "revised_code": {"commit": "8c4d89101ae7ff53dda0d05d6d1099ec0f3410bd", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/model/ComponentUpdatePolicy.java b/src/main/java/com/aws/iot/evergreen/deployment/model/ComponentUpdatePolicy.java\nindex 81fb7434..11af5ac4 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/model/ComponentUpdatePolicy.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/model/ComponentUpdatePolicy.java\n\n@@ -5,6 +5,7 @@\n \n package com.aws.iot.evergreen.deployment.model;\n \n+import com.amazonaws.services.evergreen.model.ComponentUpdatePolicyAction;\n import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import lombok.AllArgsConstructor;\n"}}, {"oid": "8e7687eab95e0cc6a1558e0ebabe28ea07bf8a8d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8e7687eab95e0cc6a1558e0ebabe28ea07bf8a8d", "message": "fixed benchmark test", "committedDate": "2020-09-15T00:29:51Z", "type": "commit"}, {"oid": "533e46f2b0becabde96aca179737992e0c13ecd1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/533e46f2b0becabde96aca179737992e0c13ecd1", "message": "removed import in benchmark test", "committedDate": "2020-09-15T00:49:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMDQzNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488320435", "bodyText": "It's weird that we don't use tag as key anymore but still use it here and in discardPendingUpdateAction.\nCan we have something like this?\nprivate final Map<String, Pair<DeploymentDocument, Crashable>> pendingActions = new LinkedHashMap<>();", "author": "hui-yang", "createdAt": "2020-09-15T01:02:07Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java", "diffHunk": "@@ -98,21 +102,27 @@ protected synchronized void runUpdateActions() {\n      * @return true if there is a pending action for specified tag\n      */\n     public boolean hasPendingUpdateAction(String tag) {", "originalCommit": "533e46f2b0becabde96aca179737992e0c13ecd1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0MzY1OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488343659", "bodyText": "updated to final Map<String, Pair<Long, Crashable>> pendingActions = new new LinkedHashMap<>();", "author": "fahadmohammed01", "createdAt": "2020-09-15T02:24:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMDQzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "8c4d89101ae7ff53dda0d05d6d1099ec0f3410bd", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java b/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\nindex ada26393..29d0533f 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\n\n@@ -102,14 +107,13 @@ public class UpdateSystemSafelyService extends EvergreenService {\n      * @return true if there is a pending action for specified tag\n      */\n     public boolean hasPendingUpdateAction(String tag) {\n-        return pendingActions.keySet().stream()\n-                .anyMatch(deploymentDocument -> deploymentDocument.getDeploymentId().equals(tag));\n+        return pendingActions.containsKey(tag);\n     }\n \n     /**\n      * Discard a pending action if update actions are not already running.\n      *\n-     * @param tag tag to identify an update action\n+     * @param  tag tag to identify an update action\n      * @return true if all update actions are pending and requested action could be discarded,\n      *         false if update actions were already in progress so it's not safe to discard the requested action\n      */\n"}}, {"oid": "8c4d89101ae7ff53dda0d05d6d1099ec0f3410bd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8c4d89101ae7ff53dda0d05d6d1099ec0f3410bd", "message": "addressed comments", "committedDate": "2020-09-15T02:23:42Z", "type": "commit"}, {"oid": "f7bd28e66e667729a35e4445fc399b2d955db4cc", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f7bd28e66e667729a35e4445fc399b2d955db4cc", "message": "Merge branch 'master' into componentUpdatePolicy", "committedDate": "2020-09-15T02:24:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NjUwMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488346502", "bodyText": "nit - a precomponent event, is it 'precomponent update event'?", "author": "shaguptashaikh", "createdAt": "2020-09-15T02:34:42Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java", "diffHunk": "@@ -40,13 +43,18 @@\n @ImplementsService(name = \"SafeSystemUpdate\", autostart = true)\n @Singleton\n public class UpdateSystemSafelyService extends EvergreenService {\n-    private final Map<String, Crashable> pendingActions = new LinkedHashMap<>();\n+    // String identifies the action, the pair consist of timeout and an action. The timeout\n+    // represents the value in seconds the kernel will wait for components to respond to\n+    // an Precomponent event", "originalCommit": "f7bd28e66e667729a35e4445fc399b2d955db4cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4NTYxNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488385615", "bodyText": "updated", "author": "fahadmohammed01", "createdAt": "2020-09-15T04:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NjUwMg=="}], "type": "inlineReview", "revised_code": {"commit": "36276a7ac17e28ab43ac4178d2f5363476269f54", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java b/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\nindex 29d0533f..459de42f 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\n\n@@ -45,7 +45,7 @@ import javax.inject.Singleton;\n public class UpdateSystemSafelyService extends EvergreenService {\n     // String identifies the action, the pair consist of timeout and an action. The timeout\n     // represents the value in seconds the kernel will wait for components to respond to\n-    // an Precomponent event\n+    // an precomponent update event\n     private final Map<String, Pair<Long, Crashable>> pendingActions = new LinkedHashMap<>();\n     private final AtomicBoolean runningUpdateActions = new AtomicBoolean(false);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NzAwMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488347000", "bodyText": "This comment seems to be incomplete", "author": "shaguptashaikh", "createdAt": "2020-09-15T02:36:34Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java", "diffHunk": "@@ -189,9 +169,43 @@ protected void startup() throws InterruptedException {\n         }\n     }\n \n-    //only for testing\n-    public void setDefaultTimeOutInMs(long defaultTimeOutInMs) {\n-        this.defaultTimeOutInMs = defaultTimeOutInMs;\n+    /*\n+     If multiple updates are present, get the max time-out. Currently", "originalCommit": "f7bd28e66e667729a35e4445fc399b2d955db4cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4NTYwMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488385602", "bodyText": "nice catch, updated.", "author": "fahadmohammed01", "createdAt": "2020-09-15T04:57:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NzAwMA=="}], "type": "inlineReview", "revised_code": {"commit": "36276a7ac17e28ab43ac4178d2f5363476269f54", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java b/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\nindex 29d0533f..459de42f 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\n\n@@ -170,7 +170,8 @@ public class UpdateSystemSafelyService extends EvergreenService {\n     }\n \n     /*\n-     If multiple updates are present, get the max time-out. Currently\n+     If multiple updates are present, get the max time-out. As of now, kernel does not process multiple\n+     deployments at the same time and pendingActions will have only one action to run at a time.\n      */\n     private long getMaxTimeoutInMillis() {\n         Optional<Long> maxTimeoutInSec = pendingActions.values().stream()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NzcwOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488347708", "bodyText": "Is it okay to fail silently when the component seems to have done its part by responding to the update event in a timely manner?", "author": "shaguptashaikh", "createdAt": "2020-09-15T02:39:08Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java", "diffHunk": "@@ -189,9 +169,43 @@ protected void startup() throws InterruptedException {\n         }\n     }\n \n-    //only for testing\n-    public void setDefaultTimeOutInMs(long defaultTimeOutInMs) {\n-        this.defaultTimeOutInMs = defaultTimeOutInMs;\n+    /*\n+     If multiple updates are present, get the max time-out. Currently\n+     */\n+    private long getMaxTimeoutInMillis() {\n+        Optional<Long> maxTimeoutInSec = pendingActions.values().stream()\n+                .map(pair -> pair.getLeft())\n+                .max(Long::compareTo);\n+        return TimeUnit.SECONDS.toMillis(maxTimeoutInSec.get());\n     }\n \n+    private long getTimeToReCheck(long timeout, List<Future<DeferUpdateRequest>> deferRequestFutures)\n+            throws InterruptedException {\n+        final long currentTimeMillis = clock.millis();\n+        long maxTimeToReCheck = currentTimeMillis;\n+        while ((clock.millis() - currentTimeMillis) < timeout && !deferRequestFutures.isEmpty()) {\n+            Iterator<Future<DeferUpdateRequest>> iterator = deferRequestFutures.iterator();\n+            while (iterator.hasNext()) {\n+                Future<DeferUpdateRequest> fut = iterator.next();\n+                if (fut.isDone()) {\n+                    try {\n+                        DeferUpdateRequest deferRequest = fut.get();\n+                        long timeToRecheck = currentTimeMillis + deferRequest.getRecheckTimeInMs();\n+                        if (timeToRecheck > maxTimeToReCheck) {\n+                            maxTimeToReCheck = timeToRecheck;\n+                            logger.atInfo().setEventType(\"service-update-deferred\")\n+                                    .log(\"deferred by {} for {} millis with message {}\",\n+                                            deferRequest.getMessage(), deferRequest.getRecheckTimeInMs(),\n+                                            deferRequest.getMessage());\n+                        }\n+                    } catch (ExecutionException e) {\n+                        logger.error(\"Failed to process component update request\", e);", "originalCommit": "f7bd28e66e667729a35e4445fc399b2d955db4cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4ODExMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488388113", "bodyText": "This should not happen as LifecycleIPCAgent does not complete this future exceptionally.", "author": "fahadmohammed01", "createdAt": "2020-09-15T05:06:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NzcwOA=="}], "type": "inlineReview", "revised_code": {"commit": "36276a7ac17e28ab43ac4178d2f5363476269f54", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java b/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\nindex 29d0533f..459de42f 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java\n\n@@ -170,7 +170,8 @@ public class UpdateSystemSafelyService extends EvergreenService {\n     }\n \n     /*\n-     If multiple updates are present, get the max time-out. Currently\n+     If multiple updates are present, get the max time-out. As of now, kernel does not process multiple\n+     deployments at the same time and pendingActions will have only one action to run at a time.\n      */\n     private long getMaxTimeoutInMillis() {\n         Optional<Long> maxTimeoutInSec = pendingActions.values().stream()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0ODUyNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488348525", "bodyText": "wildcard?", "author": "shaguptashaikh", "createdAt": "2020-09-15T02:41:47Z", "path": "src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java", "diffHunk": "@@ -39,6 +40,8 @@\n import java.util.HashMap;\n import java.util.List;\n \n+import static com.aws.iot.evergreen.deployment.model.ComponentUpdatePolicyAction.*;", "originalCommit": "f7bd28e66e667729a35e4445fc399b2d955db4cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4NTU1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488385556", "bodyText": "removed", "author": "fahadmohammed01", "createdAt": "2020-09-15T04:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0ODUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "36276a7ac17e28ab43ac4178d2f5363476269f54", "chunk": "diff --git a/src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java b/src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java\nindex 11b520b5..fc93e0d8 100644\n--- a/src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java\n+++ b/src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java\n\n@@ -40,7 +40,7 @@ import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n \n-import static com.aws.iot.evergreen.deployment.model.ComponentUpdatePolicyAction.*;\n+import static com.amazonaws.services.evergreen.model.ComponentUpdatePolicyAction.NOTIFY_COMPONENTS;\n \n public class DependencyResolverBenchmark {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0ODk2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488348969", "bodyText": "Should this fail? This import doesn't seem consistent with the other imports which use the sdk model class", "author": "shaguptashaikh", "createdAt": "2020-09-15T02:43:24Z", "path": "src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java", "diffHunk": "@@ -7,9 +7,10 @@\n \n import com.aws.iot.evergreen.config.Topics;\n import com.aws.iot.evergreen.deployment.DeploymentService;\n+import com.aws.iot.evergreen.deployment.model.ComponentUpdatePolicy;\n+import com.aws.iot.evergreen.deployment.model.ComponentUpdatePolicyAction;", "originalCommit": "f7bd28e66e667729a35e4445fc399b2d955db4cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4NTY0NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/437#discussion_r488385645", "bodyText": "Yes, missed this one in benchmark tests. updated", "author": "fahadmohammed01", "createdAt": "2020-09-15T04:57:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0ODk2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0df3628e5eee097accb720c7c2f296dcc0923b5f", "chunk": "diff --git a/src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java b/src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java\nindex 11b520b5..e79d4b52 100644\n--- a/src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java\n+++ b/src/test/evergreen-kernel-benchmark/src/main/java/com/aws/iot/evergreen/jmh/packagemanager/DependencyResolverBenchmark.java\n\n@@ -8,7 +8,6 @@ package com.aws.iot.evergreen.jmh.packagemanager;\n import com.aws.iot.evergreen.config.Topics;\n import com.aws.iot.evergreen.deployment.DeploymentService;\n import com.aws.iot.evergreen.deployment.model.ComponentUpdatePolicy;\n-import com.aws.iot.evergreen.deployment.model.ComponentUpdatePolicyAction;\n import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n import com.aws.iot.evergreen.deployment.model.FailureHandlingPolicy;\n"}}, {"oid": "36276a7ac17e28ab43ac4178d2f5363476269f54", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/36276a7ac17e28ab43ac4178d2f5363476269f54", "message": "addressed comments", "committedDate": "2020-09-15T04:59:40Z", "type": "commit"}, {"oid": "0df3628e5eee097accb720c7c2f296dcc0923b5f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0df3628e5eee097accb720c7c2f296dcc0923b5f", "message": "fixed benchmark test", "committedDate": "2020-09-15T07:35:56Z", "type": "commit"}, {"oid": "63ddffde7fbdbffcd19b4c41933ec1c84f33c003", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/63ddffde7fbdbffcd19b4c41933ec1c84f33c003", "message": "confirming to cloud model", "committedDate": "2020-09-15T17:45:59Z", "type": "commit"}]}