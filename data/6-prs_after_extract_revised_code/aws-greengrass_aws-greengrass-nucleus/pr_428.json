{"pr_number": 428, "pr_title": "Use Jackson instead of custom serializer in tlog", "pr_createdAt": "2020-09-11T01:47:30Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/428", "timeline": [{"oid": "bf467e14fbdb21949b7b1dee6d692ba7fc947170", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bf467e14fbdb21949b7b1dee6d692ba7fc947170", "message": "Use Jackson instead of custom serializer", "committedDate": "2020-09-11T01:58:39Z", "type": "forcePushed"}, {"oid": "a1faa509a8abb6e7d4b9bf73f6f3fad4b6016161", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a1faa509a8abb6e7d4b9bf73f6f3fad4b6016161", "message": "Use Jackson instead of custom serializer", "committedDate": "2020-09-14T22:13:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyNjMyMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/428#discussion_r488326321", "bodyText": "reuse objectmapper from utils?", "author": "hui-yang", "createdAt": "2020-09-15T01:23:46Z", "path": "src/main/java/com/aws/iot/evergreen/util/Coerce.java", "diffHunk": "@@ -4,32 +4,23 @@\n package com.aws.iot.evergreen.util;\n \n import com.aws.iot.evergreen.config.Topic;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n \n import java.io.IOException;\n import java.lang.reflect.Array;\n import java.util.Arrays;\n import java.util.List;\n-import java.util.Map;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n import static com.aws.iot.evergreen.util.Utils.isEmpty;\n \n public final class Coerce {\n-    public static final Object removed = new Object() {\n-        @Override\n-        public String toString() {\n-            return \"removed\";\n-        }\n-    };\n-    private static final Map<String, Object> specials =\n-            Utils.immutableMap(\"true\", true, \"false\", false, \"removed\", removed, \"Inf\", Double.POSITIVE_INFINITY,\n-                    \"+Inf\", Double.POSITIVE_INFINITY, \"-Inf\", Double.NEGATIVE_INFINITY, \"Nan\", Double.NaN, \"NaN\",\n-                    Double.NaN, \"inf\", Double.POSITIVE_INFINITY, \"+inf\", Double.POSITIVE_INFINITY, \"-inf\",\n-                    Double.NEGATIVE_INFINITY, \"nan\", Double.NaN);\n-    private static final char[] hex = \"0123456789ABCDEF\".toCharArray();\n-    private static final Pattern seperators = Pattern.compile(\" *, *\");\n+    private static final Pattern SEPARATORS = Pattern.compile(\" *, *\");\n     private static final Pattern unwrap = Pattern.compile(\" *\\\\[ *(.*) *\\\\] *\");\n+    private static final ObjectMapper MAPPER = new ObjectMapper();", "originalCommit": "a1faa509a8abb6e7d4b9bf73f6f3fad4b6016161", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyNjUwMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/428#discussion_r488326503", "bodyText": "Why do we still use comma separated line?", "author": "hui-yang", "createdAt": "2020-09-15T01:24:21Z", "path": "src/main/java/com/aws/iot/evergreen/config/Tlogline.java", "diffHunk": "@@ -49,16 +55,25 @@ static Tlogline fromStringInput(String l) throws InvalidLogException {\n         if (!m.matches()) {\n             throw new InvalidLogException(\"unrecognized log format: \" + l);\n         }\n-        long timestamp = parseLong(m.group(1));\n-        String topicString = m.group(2);\n         WhatHappened action = WhatHappened.valueOf(m.group(3).toLowerCase());", "originalCommit": "a1faa509a8abb6e7d4b9bf73f6f3fad4b6016161", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyNzM2MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/428#discussion_r488327360", "bodyText": "Because the whole line isn't json encoded, so we still need a field separator. We should probably switch to jackson for the whole thing.", "author": "MikeDombo", "createdAt": "2020-09-15T01:26:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyNjUwMw=="}], "type": "inlineReview", "revised_code": {"commit": "e68d0af088e8a523180bfb2511c294c8bd9f9869", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/config/Tlogline.java b/src/main/java/com/aws/iot/evergreen/config/Tlogline.java\nindex 56ba45238..e0d8cd1a7 100644\n--- a/src/main/java/com/aws/iot/evergreen/config/Tlogline.java\n+++ b/src/main/java/com/aws/iot/evergreen/config/Tlogline.java\n\n@@ -1,79 +1,18 @@\n package com.aws.iot.evergreen.config;\n \n-import com.aws.iot.evergreen.util.Coerce;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n import lombok.AllArgsConstructor;\n-import lombok.Getter;\n-\n-import java.io.IOException;\n-import java.io.Writer;\n-import java.util.regex.Pattern;\n-\n-import static com.aws.iot.evergreen.util.Utils.appendLong;\n-import static com.aws.iot.evergreen.util.Utils.parseLong;\n+import lombok.NoArgsConstructor;\n \n @AllArgsConstructor\n-@Getter\n+@NoArgsConstructor\n class Tlogline {\n-    private static final Pattern logLine =\n-            Pattern.compile(\"^([0-9]+),(\\\\[.*]),(changed|removed),([^\\n]*)\\n*$\", Pattern.DOTALL);\n-\n+    @JsonProperty(\"TS\")\n     long timestamp;\n+    @JsonProperty(\"TP\")\n     String[] topicPath;\n+    @JsonProperty(\"W\")\n     WhatHappened action;\n+    @JsonProperty(\"V\")\n     Object value;\n-\n-    static class InvalidLogException extends Exception {\n-        static final long serialVersionUID = -3387516993124229948L;\n-\n-        InvalidLogException(String message) {\n-            super(message);\n-        }\n-\n-        public InvalidLogException(Throwable e) {\n-            super(e);\n-        }\n-    }\n-\n-    void outputTo(Writer out) throws IOException {\n-        appendLong(timestamp, out);\n-        out.append(',');\n-        Coerce.appendParseableString(topicPath, out);\n-        out.append(',');\n-        out.append(this.action.toString());\n-        out.append(',');\n-        Coerce.appendParseableString(this.value, out);\n-        out.append('\\n');\n-    }\n-\n-    static Tlogline fromStringInput(String l) throws InvalidLogException {\n-        if (l == null) {\n-            throw new InvalidLogException(\"logline can't be null\");\n-        }\n-        java.util.regex.Matcher m = logLine.matcher(l);\n-        if (!m.matches()) {\n-            throw new InvalidLogException(\"unrecognized log format: \" + l);\n-        }\n-        WhatHappened action = WhatHappened.valueOf(m.group(3).toLowerCase());\n-\n-        Object value = null;\n-        if (action == WhatHappened.changed) {\n-            try {\n-                value = Coerce.toObject(m.group(4));\n-            } catch (JsonProcessingException e) {\n-                throw new InvalidLogException(e);\n-            }\n-        }\n-\n-        try {\n-            long timestamp = parseLong(m.group(1));\n-            String topicString = m.group(2);\n-            return new Tlogline(timestamp, Coerce.toObject(topicString, new TypeReference<String[]>() {}), action,\n-                    value);\n-        } catch (JsonProcessingException e) {\n-            throw new InvalidLogException(e);\n-        }\n-    }\n-\n }\n"}}, {"oid": "e68d0af088e8a523180bfb2511c294c8bd9f9869", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e68d0af088e8a523180bfb2511c294c8bd9f9869", "message": "Use Jackson instead of custom serializer", "committedDate": "2020-09-16T04:13:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjk0Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/428#discussion_r489602947", "bodyText": "Is this platform-safe?", "author": "hui-yang", "createdAt": "2020-09-16T17:26:41Z", "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationWriter.java", "diffHunk": "@@ -119,7 +120,8 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n         }\n \n         try {\n-            tlogline.outputTo(out);\n+            Coerce.appendParseableString(tlogline, out);\n+            out.write('\\n');", "originalCommit": "e68d0af088e8a523180bfb2511c294c8bd9f9869", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwNDgzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/428#discussion_r489604836", "bodyText": "Doesn't need to be, we just need to be consistent.", "author": "MikeDombo", "createdAt": "2020-09-16T17:30:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjk0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwNDkzNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/428#discussion_r489604935", "bodyText": "And it passes on Windows, so yes.", "author": "MikeDombo", "createdAt": "2020-09-16T17:30:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjk0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5MTEyNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/428#discussion_r489691126", "bodyText": "Will this corrupt the tlog if out.write('\\n') takes an exception?", "author": "jbutler", "createdAt": "2020-09-16T19:14:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjk0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "32e9d01389004a745d1f8b39f605dcacc21ee499", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/config/ConfigurationWriter.java b/src/main/java/com/aws/iot/evergreen/config/ConfigurationWriter.java\nindex b7cb1a876..6f2de52d9 100644\n--- a/src/main/java/com/aws/iot/evergreen/config/ConfigurationWriter.java\n+++ b/src/main/java/com/aws/iot/evergreen/config/ConfigurationWriter.java\n\n@@ -121,7 +121,6 @@ public class ConfigurationWriter implements Closeable, ChildChanged {\n \n         try {\n             Coerce.appendParseableString(tlogline, out);\n-            out.write('\\n');\n         } catch (IOException ex) {\n             logger.atError().setEventType(\"config-dump-error\").addKeyValue(\"configNode\", n.getFullName()).setCause(ex)\n                     .log();\n"}}, {"oid": "32e9d01389004a745d1f8b39f605dcacc21ee499", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/32e9d01389004a745d1f8b39f605dcacc21ee499", "message": "Use Jackson instead of custom serializer", "committedDate": "2020-09-16T19:43:05Z", "type": "commit"}, {"oid": "32e9d01389004a745d1f8b39f605dcacc21ee499", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/32e9d01389004a745d1f8b39f605dcacc21ee499", "message": "Use Jackson instead of custom serializer", "committedDate": "2020-09-16T19:43:05Z", "type": "forcePushed"}, {"oid": "27f2d3f70c7a00f7406fbe8406688d7b63212acf", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/27f2d3f70c7a00f7406fbe8406688d7b63212acf", "message": "Move E2E tests to separate workflow, add IamException as retryable for e2e failures", "committedDate": "2020-09-16T20:21:39Z", "type": "forcePushed"}, {"oid": "18a004644dd3708289548f0b50c1a5e9d9a01c35", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/18a004644dd3708289548f0b50c1a5e9d9a01c35", "message": "Move E2E tests to separate workflow, add IamException as retryable for e2e failures", "committedDate": "2020-09-16T20:34:32Z", "type": "commit"}, {"oid": "18a004644dd3708289548f0b50c1a5e9d9a01c35", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/18a004644dd3708289548f0b50c1a5e9d9a01c35", "message": "Move E2E tests to separate workflow, add IamException as retryable for e2e failures", "committedDate": "2020-09-16T20:34:32Z", "type": "forcePushed"}]}