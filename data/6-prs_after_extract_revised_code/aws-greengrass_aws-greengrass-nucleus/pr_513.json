{"pr_number": 513, "pr_title": "System settings as Nucleus component configuration", "pr_createdAt": "2020-10-09T17:01:21Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUzOTYyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r503539624", "bodyText": "Coerce.toLong here?", "author": "rbattle", "createdAt": "2020-10-12T21:25:24Z", "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -213,10 +213,14 @@ protected void startup() throws InterruptedException {\n                     createNewDeployment(deployment);\n                 }\n             }\n-            Thread.sleep(pollingFrequency);\n+            Thread.sleep(getPollingFrequency());\n         }\n     }\n \n+    private long getPollingFrequency() {\n+        return Duration.ofSeconds((Long) deviceConfiguration.getDeploymentPollingFrequency().getOnce()).toMillis();", "originalCommit": "6ee9c12f987c9bfec38b4ce8f78c361e16039482", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk5OTMyNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r503999325", "bodyText": "Done", "author": "shaguptashaikh", "createdAt": "2020-10-13T14:28:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUzOTYyNA=="}], "type": "inlineReview", "revised_code": {"commit": "612f506bfc16c05d67905f669c7bdb283bca4150", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeploymentService.java b/src/main/java/com/aws/greengrass/deployment/DeploymentService.java\nindex 01be4dd5c..82b410541 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeploymentService.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeploymentService.java\n\n@@ -213,12 +219,18 @@ public class DeploymentService extends GreengrassService {\n                     createNewDeployment(deployment);\n                 }\n             }\n-            Thread.sleep(getPollingFrequency());\n+            Thread.sleep(pollingFrequency.get());\n         }\n     }\n \n-    private long getPollingFrequency() {\n-        return Duration.ofSeconds((Long) deviceConfiguration.getDeploymentPollingFrequency().getOnce()).toMillis();\n+    private void subscribeToPollingFrequencyAndGet() {\n+        deviceConfiguration.onTopicChange(DEPLOYMENT_POLLING_FREQUENCY, (whatHappened, frequency) -> {\n+            pollingFrequency.set(getPollingFrequency(frequency));\n+        });\n+    }\n+\n+    private Long getPollingFrequency(Topic pollingFrequencyTopic) {\n+        return Duration.ofSeconds((Long) pollingFrequencyTopic.getOnce()).toMillis();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MDQzNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r503540437", "bodyText": "remove the comment if we don't need to set a default value here", "author": "rbattle", "createdAt": "2020-10-12T21:27:35Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -206,11 +248,14 @@ public boolean isDeviceConfiguredToTalkToCloud() {\n     }\n \n     private Topic getTopic(String parameterName) {\n-        return kernel.getConfig().lookup(SYSTEM_NAMESPACE_KEY, parameterName).dflt(\"\");\n+        return kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, KERNEL_COMPONENT_NAME, PARAMETERS_CONFIG_KEY, parameterName);\n+        //return topic.dflt(\"\");", "originalCommit": "6ee9c12f987c9bfec38b4ce8f78c361e16039482", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "612f506bfc16c05d67905f669c7bdb283bca4150", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex b15004983..d654fdd4e 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -247,15 +289,18 @@ public class DeviceConfiguration {\n \n     }\n \n+    private Topic getTopicWithDefault(String parameterName) {\n+        return getTopic(parameterName).dflt(\"\");\n+    }\n+\n     private Topic getTopic(String parameterName) {\n         return kernel.getConfig()\n-                .lookup(SERVICES_NAMESPACE_TOPIC, KERNEL_COMPONENT_NAME, PARAMETERS_CONFIG_KEY, parameterName);\n-        //return topic.dflt(\"\");\n+                .lookup(SERVICES_NAMESPACE_TOPIC, nucleusComponentName, CONFIGURATION_CONFIG_KEY, parameterName);\n     }\n \n     private Topics getTopics(String parameterName) {\n         return kernel.getConfig()\n-                .lookupTopics(SERVICES_NAMESPACE_TOPIC, KERNEL_COMPONENT_NAME, PARAMETERS_CONFIG_KEY, parameterName);\n+                .lookupTopics(SERVICES_NAMESPACE_TOPIC, nucleusComponentName, CONFIGURATION_CONFIG_KEY, parameterName);\n     }\n \n     private void validateDeviceConfiguration(String thingName, String certificateFilePath, String privateKeyPath,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MTEyNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r503541127", "bodyText": "is this bytes?", "author": "rbattle", "createdAt": "2020-10-12T21:29:19Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -32,17 +35,22 @@\n @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")\n public class DeviceConfiguration {\n \n+    public static final String KERNEL_COMPONENT_NAME = \"aws.greengrass.Nucleus\";\n     public static final String DEVICE_PARAM_THING_NAME = \"thingName\";\n     public static final String DEVICE_PARAM_IOT_DATA_ENDPOINT = \"iotDataEndpoint\";\n     public static final String DEVICE_PARAM_IOT_CRED_ENDPOINT = \"iotCredEndpoint\";\n     public static final String DEVICE_PARAM_PRIVATE_KEY_PATH = \"privateKeyPath\";\n     public static final String DEVICE_PARAM_CERTIFICATE_FILE_PATH = \"certificateFilePath\";\n     public static final String DEVICE_PARAM_ROOT_CA_PATH = \"rootCaPath\";\n-    public static final String SYSTEM_NAMESPACE_KEY = \"system\";\n     public static final String DEVICE_PARAM_AWS_REGION = \"awsRegion\";\n     public static final String DEVICE_MQTT_NAMESPACE = \"mqtt\";\n+    public static final String IOT_ROLE_ALIAS_TOPIC = \"iotRoleAlias\";\n+    public static final String COMPONENT_STORE_MAX_SIZE = \"componentStoreMaxSize\";", "originalCommit": "6ee9c12f987c9bfec38b4ce8f78c361e16039482", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "612f506bfc16c05d67905f669c7bdb283bca4150", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex b15004983..d654fdd4e 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -35,7 +43,9 @@ import static com.aws.greengrass.lifecyclemanager.GreengrassService.SETENV_CONFI\n @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")\n public class DeviceConfiguration {\n \n-    public static final String KERNEL_COMPONENT_NAME = \"aws.greengrass.Nucleus\";\n+    public static final String DEFAULT_NUCLEUS_COMPONENT_NAME = \"aws.greengrass.Nucleus\";\n+    public static final String NUCLEUS_COMPONENT_TYPE = \"aws.greengrass.nucleus\";\n+    public static final String NUCLEUS_ROOT_PATH = \"rootPath\";\n     public static final String DEVICE_PARAM_THING_NAME = \"thingName\";\n     public static final String DEVICE_PARAM_IOT_DATA_ENDPOINT = \"iotDataEndpoint\";\n     public static final String DEVICE_PARAM_IOT_CRED_ENDPOINT = \"iotCredEndpoint\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MTE5MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r503541190", "bodyText": "is this seconds?", "author": "rbattle", "createdAt": "2020-10-12T21:29:28Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -32,17 +35,22 @@\n @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")\n public class DeviceConfiguration {\n \n+    public static final String KERNEL_COMPONENT_NAME = \"aws.greengrass.Nucleus\";\n     public static final String DEVICE_PARAM_THING_NAME = \"thingName\";\n     public static final String DEVICE_PARAM_IOT_DATA_ENDPOINT = \"iotDataEndpoint\";\n     public static final String DEVICE_PARAM_IOT_CRED_ENDPOINT = \"iotCredEndpoint\";\n     public static final String DEVICE_PARAM_PRIVATE_KEY_PATH = \"privateKeyPath\";\n     public static final String DEVICE_PARAM_CERTIFICATE_FILE_PATH = \"certificateFilePath\";\n     public static final String DEVICE_PARAM_ROOT_CA_PATH = \"rootCaPath\";\n-    public static final String SYSTEM_NAMESPACE_KEY = \"system\";\n     public static final String DEVICE_PARAM_AWS_REGION = \"awsRegion\";\n     public static final String DEVICE_MQTT_NAMESPACE = \"mqtt\";\n+    public static final String IOT_ROLE_ALIAS_TOPIC = \"iotRoleAlias\";\n+    public static final String COMPONENT_STORE_MAX_SIZE = \"componentStoreMaxSize\";\n+    public static final String DEPLOYMENT_POLLING_FREQUENCY = \"deploymentPollingFrequency\";", "originalCommit": "6ee9c12f987c9bfec38b4ce8f78c361e16039482", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk5OTk2MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r503999960", "bodyText": "Yes, renamed to reflect that", "author": "shaguptashaikh", "createdAt": "2020-10-13T14:29:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MTE5MA=="}], "type": "inlineReview", "revised_code": {"commit": "612f506bfc16c05d67905f669c7bdb283bca4150", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex b15004983..d654fdd4e 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -35,7 +43,9 @@ import static com.aws.greengrass.lifecyclemanager.GreengrassService.SETENV_CONFI\n @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")\n public class DeviceConfiguration {\n \n-    public static final String KERNEL_COMPONENT_NAME = \"aws.greengrass.Nucleus\";\n+    public static final String DEFAULT_NUCLEUS_COMPONENT_NAME = \"aws.greengrass.Nucleus\";\n+    public static final String NUCLEUS_COMPONENT_TYPE = \"aws.greengrass.nucleus\";\n+    public static final String NUCLEUS_ROOT_PATH = \"rootPath\";\n     public static final String DEVICE_PARAM_THING_NAME = \"thingName\";\n     public static final String DEVICE_PARAM_IOT_DATA_ENDPOINT = \"iotDataEndpoint\";\n     public static final String DEVICE_PARAM_IOT_CRED_ENDPOINT = \"iotCredEndpoint\";\n"}}, {"oid": "612f506bfc16c05d67905f669c7bdb283bca4150", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/612f506bfc16c05d67905f669c7bdb283bca4150", "message": "System settings as Nuclues component configuration", "committedDate": "2020-10-13T14:09:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMjU3Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505132576", "bodyText": "use Coerce.toLong", "author": "MikeDombo", "createdAt": "2020-10-15T02:48:07Z", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java", "diffHunk": "@@ -388,6 +387,10 @@ void prepareArtifacts(ComponentIdentifier componentIdentifier, List<ComponentArt\n         }\n     }\n \n+    private long getConfiguredMaxSize() {\n+        return (long) deviceConfiguration.getComponentStoreMaxSizeBytes().getOnce();", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "chunk": "diff --git a/src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java b/src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java\nindex 58cd7c8a3..e26e59f1c 100644\n--- a/src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java\n+++ b/src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java\n\n@@ -388,7 +388,7 @@ public class ComponentManager implements InjectionActions {\n     }\n \n     private long getConfiguredMaxSize() {\n-        return (long) deviceConfiguration.getComponentStoreMaxSizeBytes().getOnce();\n+        return Coerce.toLong(deviceConfiguration.getComponentStoreMaxSizeBytes());\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMjc2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505132769", "bodyText": "how about all our other builtin components? It seems their configs are still deleted during deployment.", "author": "MikeDombo", "createdAt": "2020-10-15T02:48:55Z", "path": "src/main/java/com/aws/greengrass/componentmanager/KernelConfigResolver.java", "diffHunk": "@@ -170,7 +173,9 @@ public KernelConfigResolver(ComponentStore componentStore, Kernel kernel, Nucleu\n                     .put(SERVICE_LIFECYCLE_NAMESPACE_TOPIC, interpolatedLifecycle);\n         }\n \n-        servicesConfig.put(kernel.getMain().getName(), getMainConfig(rootPackages));\n+        String nucleusComponentName = getNucleusComponentName(servicesConfig);", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzQwNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505133404", "bodyText": "The type which is written into the config store is typically the short name plugin, lambda, and so on. Not the full name.", "author": "MikeDombo", "createdAt": "2020-10-15T02:50:57Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -76,25 +97,55 @@ public DeviceConfiguration(Kernel kernel) {\n      * @param certificateFilePath certificate location on device\n      * @param rootCaFilePath      downloaded RootCA location on device\n      * @param awsRegion           aws region for the device\n+     * @param tesRoleAliasName    aws region for the device\n      * @throws DeviceConfigurationException when the configuration parameters are not valid\n      */\n     public DeviceConfiguration(Kernel kernel, String thingName, String iotDataEndpoint, String iotCredEndpoint,\n                                String privateKeyPath, String certificateFilePath, String rootCaFilePath,\n-                               String awsRegion) throws DeviceConfigurationException {\n-        this.kernel = kernel;\n-        deTildeValidator = getDeTildeValidator();\n-        regionValidator = getRegionValidator();\n+                               String awsRegion, String tesRoleAliasName) throws DeviceConfigurationException {\n+        this(kernel);\n         getThingName().withValue(thingName);\n         getIotDataEndpoint().withValue(iotDataEndpoint);\n         getIotCredentialEndpoint().withValue(iotCredEndpoint);\n         getPrivateKeyFilePath().withValue(privateKeyPath);\n         getCertificateFilePath().withValue(certificateFilePath);\n         getRootCAFilePath().withValue(rootCaFilePath);\n         getAWSRegion().withValue(awsRegion);\n+        getIotRoleAlias().withValue(tesRoleAliasName);\n \n         validate();\n     }\n \n+    /**\n+     * Get the Nucleus component name to lookup the configuration in the right place. If no component of type Nucleus\n+     * exists, create service config for the default Nucleus component.\n+     */\n+    private String getNucleusComponentName() {\n+        Optional<CaseInsensitiveString> nucleusComponent =\n+                kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC).children.keySet().stream()\n+                        .filter(s -> NUCLEUS_COMPONENT_TYPE.equals(getComponentType(s.toString()))).findAny();", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex 79977a3f2..8652d2883 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -123,7 +131,7 @@ public class DeviceConfiguration {\n     private String getNucleusComponentName() {\n         Optional<CaseInsensitiveString> nucleusComponent =\n                 kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC).children.keySet().stream()\n-                        .filter(s -> NUCLEUS_COMPONENT_TYPE.equals(getComponentType(s.toString()))).findAny();\n+                        .filter(s -> NUCLEUS_COMPONENT_TYPE_SHORT.equals(getComponentType(s.toString()))).findAny();\n         if (nucleusComponent.isPresent()) {\n             return nucleusComponent.get().toString();\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505133705", "bodyText": "why add a dependency? doesn't seem helpful and may break stuff", "author": "MikeDombo", "createdAt": "2020-10-15T02:52:09Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -76,25 +97,55 @@ public DeviceConfiguration(Kernel kernel) {\n      * @param certificateFilePath certificate location on device\n      * @param rootCaFilePath      downloaded RootCA location on device\n      * @param awsRegion           aws region for the device\n+     * @param tesRoleAliasName    aws region for the device\n      * @throws DeviceConfigurationException when the configuration parameters are not valid\n      */\n     public DeviceConfiguration(Kernel kernel, String thingName, String iotDataEndpoint, String iotCredEndpoint,\n                                String privateKeyPath, String certificateFilePath, String rootCaFilePath,\n-                               String awsRegion) throws DeviceConfigurationException {\n-        this.kernel = kernel;\n-        deTildeValidator = getDeTildeValidator();\n-        regionValidator = getRegionValidator();\n+                               String awsRegion, String tesRoleAliasName) throws DeviceConfigurationException {\n+        this(kernel);\n         getThingName().withValue(thingName);\n         getIotDataEndpoint().withValue(iotDataEndpoint);\n         getIotCredentialEndpoint().withValue(iotCredEndpoint);\n         getPrivateKeyFilePath().withValue(privateKeyPath);\n         getCertificateFilePath().withValue(certificateFilePath);\n         getRootCAFilePath().withValue(rootCaFilePath);\n         getAWSRegion().withValue(awsRegion);\n+        getIotRoleAlias().withValue(tesRoleAliasName);\n \n         validate();\n     }\n \n+    /**\n+     * Get the Nucleus component name to lookup the configuration in the right place. If no component of type Nucleus\n+     * exists, create service config for the default Nucleus component.\n+     */\n+    private String getNucleusComponentName() {\n+        Optional<CaseInsensitiveString> nucleusComponent =\n+                kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC).children.keySet().stream()\n+                        .filter(s -> NUCLEUS_COMPONENT_TYPE.equals(getComponentType(s.toString()))).findAny();\n+        if (nucleusComponent.isPresent()) {\n+            return nucleusComponent.get().toString();\n+        } else {\n+            initializeNucleusComponentConfig();\n+            return DEFAULT_NUCLEUS_COMPONENT_NAME;\n+        }\n+    }\n+\n+    private void initializeNucleusComponentConfig() {\n+        this.kernel.getConfig().lookup(SERVICES_NAMESPACE_TOPIC, DEFAULT_NUCLEUS_COMPONENT_NAME, SERVICE_TYPE_TOPIC_KEY,\n+                NUCLEUS_COMPONENT_TYPE);\n+        ArrayList<String> mainDependencies = new ArrayList<>();\n+        mainDependencies.add(DEFAULT_NUCLEUS_COMPONENT_NAME);", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY5OTc0NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505699744", "bodyText": "We need to make sure it doesn't get wiped out on deployments", "author": "shaguptashaikh", "createdAt": "2020-10-15T17:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwMjIzMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505702232", "bodyText": "This isn't the way to fix it. We need a better fix to not remove builtin/nucleus components and their configurations. As I posted in the slack room, we still have topics getting removed during deployment. All CLI, Deployment, FSS, etc topics are removed which is very bad.", "author": "MikeDombo", "createdAt": "2020-10-15T17:05:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNDg2MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505704860", "bodyText": "Are all topics being removed for builtin/plugins or was it just parameters? Also, the nucleus is neither of them, so we still need a way to persist it", "author": "shaguptashaikh", "createdAt": "2020-10-15T17:08:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNTg2MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505705860", "bodyText": "The service root is being removed for builtins, so everything", "author": "MikeDombo", "createdAt": "2020-10-15T17:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNjU0Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505706547", "bodyText": "That's why I said \"builtin/nucleus\"", "author": "MikeDombo", "createdAt": "2020-10-15T17:11:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxMTQ4Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505711482", "bodyText": "That wasn't always happening, if service topics are removed shouldn't tests be failing?", "author": "shaguptashaikh", "createdAt": "2020-10-15T17:20:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxNzQzMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505717432", "bodyText": "You would think so... but apparently not. It is definitely still happening", "author": "MikeDombo", "createdAt": "2020-10-15T17:30:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxODA1NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505718055", "bodyText": "I think it may not fail because all our services create the node if it doesn't exist. I'd expect it to fail with something else, but again, apparently not", "author": "MikeDombo", "createdAt": "2020-10-15T17:31:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxODI4Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505718286", "bodyText": "Even if the service topics are being removed right now which we of course have to fix but all builtin/plugin services are dependencies of main aren't they? So even if we solve that doesn't mean persisting this nucleus component will just work", "author": "shaguptashaikh", "createdAt": "2020-10-15T17:31:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMTE1Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505721157", "bodyText": "the dependencies of main has nothing to do with persistence. They aren't in the new config map, so that's why they get removed", "author": "MikeDombo", "createdAt": "2020-10-15T17:36:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczMzEyMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505733121", "bodyText": "My understanding was that if something isn't a dependency of main it won't be started up on nucleus startup/restart, Nucleus component probably will never need service lifecycle so it might be okay for that but it's just useless to have anything else as a service but not in main's dependency tree", "author": "shaguptashaikh", "createdAt": "2020-10-15T17:56:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczNTEyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505735122", "bodyText": "Anyway, the way you're adding the dependency isn't correct. Main could already have a dependency list present which you aren't accounting for.", "author": "MikeDombo", "createdAt": "2020-10-15T17:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc0MDExNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505740114", "bodyText": "That I can address", "author": "shaguptashaikh", "createdAt": "2020-10-15T18:08:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzcwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex 79977a3f2..8652d2883 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -123,7 +131,7 @@ public class DeviceConfiguration {\n     private String getNucleusComponentName() {\n         Optional<CaseInsensitiveString> nucleusComponent =\n                 kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC).children.keySet().stream()\n-                        .filter(s -> NUCLEUS_COMPONENT_TYPE.equals(getComponentType(s.toString()))).findAny();\n+                        .filter(s -> NUCLEUS_COMPONENT_TYPE_SHORT.equals(getComponentType(s.toString()))).findAny();\n         if (nucleusComponent.isPresent()) {\n             return nucleusComponent.get().toString();\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzk5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505133994", "bodyText": "no default", "author": "MikeDombo", "createdAt": "2020-10-15T02:53:12Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -171,12 +222,44 @@ public Topics getMQTTNamespace() {\n         return getTopics(DEVICE_MQTT_NAMESPACE);\n     }\n \n+    public Topic getIotRoleAlias() {\n+        return getTopicWithDefault(IOT_ROLE_ALIAS_TOPIC);", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNTY2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505705669", "bodyText": "Do you mean there shouldn't be a default for this?", "author": "shaguptashaikh", "createdAt": "2020-10-15T17:10:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzk5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwODkxMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505708911", "bodyText": "Yes, there shouldn't be a default. If it isn't set, it should be null instead of empty string", "author": "MikeDombo", "createdAt": "2020-10-15T17:15:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzk5NA=="}], "type": "inlineReview", "revised_code": {"commit": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex 79977a3f2..8652d2883 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -222,12 +231,32 @@ public class DeviceConfiguration {\n         return getTopics(DEVICE_MQTT_NAMESPACE);\n     }\n \n-    public Topic getIotRoleAlias() {\n-        return getTopicWithDefault(IOT_ROLE_ALIAS_TOPIC);\n+    public Topics getNetworkProxyNamespace() {\n+        return getTopics(DEVICE_NETWORK_PROXY_NAMESPACE);\n+    }\n+\n+    public Topics getProxyNamespace() {\n+        return getNetworkProxyNamespace().lookupTopics(DEVICE_PROXY_NAMESPACE);\n+    }\n+\n+    public String getNoProxyAddresses() {\n+        return Coerce.toString(getNetworkProxyNamespace().findOrDefault(\"\", DEVICE_PARAM_NO_PROXY_ADDRESSES));\n+    }\n+\n+    public String getProxyUrl() {\n+        return Coerce.toString(getProxyNamespace().findOrDefault(\"\", DEVICE_PARAM_PROXY_URL));\n     }\n \n-    public Topic getRootPath() {\n-        return getTopic(NUCLEUS_ROOT_PATH);\n+    public String getProxyUsername() {\n+        return Coerce.toString(getProxyNamespace().findOrDefault(\"\", DEVICE_PARAM_PROXY_USERNAME));\n+    }\n+\n+    public String getProxyPassword() {\n+        return Coerce.toString(getProxyNamespace().findOrDefault(\"\", DEVICE_PARAM_PROXY_PASSWORD));\n+    }\n+\n+    public Topic getIotRoleAlias() {\n+        return getTopic(IOT_ROLE_ALIAS_TOPIC).dflt(\"\");\n     }\n \n     public Topic getComponentStoreMaxSizeBytes() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDAyMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505134021", "bodyText": "no default", "author": "MikeDombo", "createdAt": "2020-10-15T02:53:22Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -149,11 +200,11 @@ public Topic getIotDataEndpoint() {\n     }\n \n     public Topic getIotCredentialEndpoint() {\n-        return getTopic(DEVICE_PARAM_IOT_CRED_ENDPOINT);\n+        return getTopicWithDefault(DEVICE_PARAM_IOT_CRED_ENDPOINT);", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex 79977a3f2..8652d2883 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -200,11 +209,11 @@ public class DeviceConfiguration {\n     }\n \n     public Topic getIotCredentialEndpoint() {\n-        return getTopicWithDefault(DEVICE_PARAM_IOT_CRED_ENDPOINT);\n+        return getTopic(DEVICE_PARAM_IOT_CRED_ENDPOINT).dflt(\"\");\n     }\n \n     public Topic getAWSRegion() {\n-        return getTopicWithDefault(DEVICE_PARAM_AWS_REGION).addValidator(regionValidator);\n+        return getTopic(DEVICE_PARAM_AWS_REGION).dflt(\"\").addValidator(regionValidator);\n     }\n \n     // Why have this method as well as the one above? The reason is that the validator\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDA1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505134056", "bodyText": "no default", "author": "MikeDombo", "createdAt": "2020-10-15T02:53:30Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -149,11 +200,11 @@ public Topic getIotDataEndpoint() {\n     }\n \n     public Topic getIotCredentialEndpoint() {\n-        return getTopic(DEVICE_PARAM_IOT_CRED_ENDPOINT);\n+        return getTopicWithDefault(DEVICE_PARAM_IOT_CRED_ENDPOINT);\n     }\n \n     public Topic getAWSRegion() {\n-        return getTopic(DEVICE_PARAM_AWS_REGION).addValidator(regionValidator);\n+        return getTopicWithDefault(DEVICE_PARAM_AWS_REGION).addValidator(regionValidator);", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\nindex 79977a3f2..8652d2883 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java\n\n@@ -200,11 +209,11 @@ public class DeviceConfiguration {\n     }\n \n     public Topic getIotCredentialEndpoint() {\n-        return getTopicWithDefault(DEVICE_PARAM_IOT_CRED_ENDPOINT);\n+        return getTopic(DEVICE_PARAM_IOT_CRED_ENDPOINT).dflt(\"\");\n     }\n \n     public Topic getAWSRegion() {\n-        return getTopicWithDefault(DEVICE_PARAM_AWS_REGION).addValidator(regionValidator);\n+        return getTopic(DEVICE_PARAM_AWS_REGION).dflt(\"\").addValidator(regionValidator);\n     }\n \n     // Why have this method as well as the one above? The reason is that the validator\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDM4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505134389", "bodyText": "use NucleusPaths instead of using config store.\nWait why are we getting the modtime of the root path? The root shouldn't be changing ever.", "author": "MikeDombo", "createdAt": "2020-10-15T02:54:45Z", "path": "src/main/java/com/aws/greengrass/deployment/KernelUpdateDeploymentTask.java", "diffHunk": "@@ -50,8 +54,9 @@ public DeploymentResult call() {\n         Deployment.DeploymentStage stage = deployment.getDeploymentStage();\n         KernelAlternatives kernelAlts = kernel.getContext().get(KernelAlternatives.class);\n         try {\n-            DeploymentConfigMerger.waitForServicesToStart(kernel.orderedDependencies(),\n-                    kernel.getConfig().lookup(\"system\", \"rootpath\").getModtime());\n+            DeploymentConfigMerger.waitForServicesToStart(kernel.orderedDependencies(), kernel.getConfig()\n+                    .lookup(SERVICES_NAMESPACE_TOPIC, DEFAULT_NUCLEUS_COMPONENT_NAME, CONFIGURATION_CONFIG_KEY,\n+                            NUCLEUS_ROOT_PATH).getModtime());", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcwNjM2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505706369", "bodyText": "It was always like that, not sure why. Anyway this will be changed in the next revision and I'll need to move out rootpath and possibly some other configs from the Nucleus recipe per Jamie's recommendation", "author": "shaguptashaikh", "createdAt": "2020-10-15T17:11:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDM4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/KernelUpdateDeploymentTask.java b/src/main/java/com/aws/greengrass/deployment/KernelUpdateDeploymentTask.java\nindex f2c84f4d5..e645e36fa 100644\n--- a/src/main/java/com/aws/greengrass/deployment/KernelUpdateDeploymentTask.java\n+++ b/src/main/java/com/aws/greengrass/deployment/KernelUpdateDeploymentTask.java\n\n@@ -54,9 +50,8 @@ public class KernelUpdateDeploymentTask implements DeploymentTask {\n         Deployment.DeploymentStage stage = deployment.getDeploymentStage();\n         KernelAlternatives kernelAlts = kernel.getContext().get(KernelAlternatives.class);\n         try {\n-            DeploymentConfigMerger.waitForServicesToStart(kernel.orderedDependencies(), kernel.getConfig()\n-                    .lookup(SERVICES_NAMESPACE_TOPIC, DEFAULT_NUCLEUS_COMPONENT_NAME, CONFIGURATION_CONFIG_KEY,\n-                            NUCLEUS_ROOT_PATH).getModtime());\n+            DeploymentConfigMerger.waitForServicesToStart(kernel.orderedDependencies(),\n+                    kernel.getConfig().lookup(\"system\", \"rootpath\").getModtime());\n \n             DeploymentResult result = null;\n             if (KERNEL_ACTIVATION.equals(stage)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNTExNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505135116", "bodyText": "we should remove kernel root path. It shouldn't ever be used by components. They won't have permissions to read/write anyway", "author": "MikeDombo", "createdAt": "2020-10-15T02:57:21Z", "path": "src/test/java/com/aws/greengrass/componentmanager/KernelConfigResolverTest.java", "diffHunk": "@@ -66,10 +67,10 @@\n     private static final String LIFECYCLE_SCRIPT_KEY = \"script\";\n     private static final String LIFECYCLE_MOCK_INSTALL_COMMAND_FORMAT =\n             \"echo installing service in Package %s with param {{\" + KernelConfigResolver.PARAM_NAMESPACE + \":%s_Param_1\" + KernelConfigResolver.PARAM_VALUE_SUFFIX\n-                    + \"}}, kernel rootPath as {{\" + KernelConfigResolver.KERNEL_NAMESPACE + \":\" + KernelConfigResolver.KERNEL_ROOT_PATH + \"}} and \"\n+                    + \"}}, kernel rootPath as {{\" + KernelConfigResolver.KERNEL_NAMESPACE + \":\" + DeviceConfiguration.NUCLEUS_ROOT_PATH + \"}} and \"", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "chunk": "diff --git a/src/test/java/com/aws/greengrass/componentmanager/KernelConfigResolverTest.java b/src/test/java/com/aws/greengrass/componentmanager/KernelConfigResolverTest.java\nindex 4ecae6f3c..55c0eb9b8 100644\n--- a/src/test/java/com/aws/greengrass/componentmanager/KernelConfigResolverTest.java\n+++ b/src/test/java/com/aws/greengrass/componentmanager/KernelConfigResolverTest.java\n\n@@ -67,10 +66,10 @@ class KernelConfigResolverTest {\n     private static final String LIFECYCLE_SCRIPT_KEY = \"script\";\n     private static final String LIFECYCLE_MOCK_INSTALL_COMMAND_FORMAT =\n             \"echo installing service in Package %s with param {{\" + KernelConfigResolver.PARAM_NAMESPACE + \":%s_Param_1\" + KernelConfigResolver.PARAM_VALUE_SUFFIX\n-                    + \"}}, kernel rootPath as {{\" + KernelConfigResolver.KERNEL_NAMESPACE + \":\" + DeviceConfiguration.NUCLEUS_ROOT_PATH + \"}} and \"\n+                    + \"}}, kernel rootPath as {{\" + KernelConfigResolver.KERNEL_NAMESPACE + \":\" + KernelConfigResolver.KERNEL_ROOT_PATH + \"}} and \"\n                     + \"unpack dir as {{\" + KernelConfigResolver.ARTIFACTS_NAMESPACE + \":\" + KernelConfigResolver.DECOMPRESSED_PATH_KEY + \"}}\";\n     private static final String LIFECYCLE_INSTALL_COMMAND_FORMAT =\n-            \"echo installing service in Component %s with param {\" + KernelConfigResolver.CONFIGURATION_NAMESPACE + \":%s}, kernel rootPath as {\" + KernelConfigResolver.KERNEL_NAMESPACE + \":\" + DeviceConfiguration.NUCLEUS_ROOT_PATH + \"} and \"\n+            \"echo installing service in Component %s with param {\" + KernelConfigResolver.CONFIGURATION_NAMESPACE + \":%s}, kernel rootPath as {\" + KernelConfigResolver.KERNEL_NAMESPACE + \":\" + KernelConfigResolver.KERNEL_ROOT_PATH + \"} and \"\n                     + \"unpack dir as {\" + KernelConfigResolver.ARTIFACTS_NAMESPACE + \":\" + KernelConfigResolver.DECOMPRESSED_PATH_KEY + \"}\";\n \n     private static final String LIFECYCLE_MOCK_RUN_COMMAND_FORMAT =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNTM0NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505135345", "bodyText": "use const for name", "author": "MikeDombo", "createdAt": "2020-10-15T02:58:17Z", "path": "src/test/java/com/aws/greengrass/lifecyclemanager/KernelTest.java", "diffHunk": "@@ -115,42 +115,50 @@ void GIVEN_kernel_and_services_WHEN_orderedDependencies_THEN_dependencies_are_re\n         GreengrassService service2 = new GreengrassService(\n                 kernel.getConfig().lookupTopics(GreengrassService.SERVICES_NAMESPACE_TOPIC, \"service2\"));\n         service2.postInject();\n+        GreengrassService nucleus = kernel.locate(\"aws.greengrass.Nucleus\");", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a94df31475efb94813bf6906507d4cc52502199c", "chunk": "diff --git a/src/test/java/com/aws/greengrass/lifecyclemanager/KernelTest.java b/src/test/java/com/aws/greengrass/lifecyclemanager/KernelTest.java\nindex e646315d8..ea35d37fe 100644\n--- a/src/test/java/com/aws/greengrass/lifecyclemanager/KernelTest.java\n+++ b/src/test/java/com/aws/greengrass/lifecyclemanager/KernelTest.java\n\n@@ -115,7 +117,7 @@ class KernelTest {\n         GreengrassService service2 = new GreengrassService(\n                 kernel.getConfig().lookupTopics(GreengrassService.SERVICES_NAMESPACE_TOPIC, \"service2\"));\n         service2.postInject();\n-        GreengrassService nucleus = kernel.locate(\"aws.greengrass.Nucleus\");\n+        GreengrassService nucleus = kernel.locate(DEFAULT_NUCLEUS_COMPONENT_NAME);\n \n         List<GreengrassService> od = new ArrayList<>(kernel.orderedDependencies());\n         assertNotNull(od);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNTU3Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r505135577", "bodyText": "no getOnce when using coerce", "author": "MikeDombo", "createdAt": "2020-10-15T02:59:12Z", "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -213,10 +219,20 @@ protected void startup() throws InterruptedException {\n                     createNewDeployment(deployment);\n                 }\n             }\n-            Thread.sleep(pollingFrequency);\n+            Thread.sleep(pollingFrequency.get());\n         }\n     }\n \n+    private void subscribeToPollingFrequencyAndGet() {\n+        deviceConfiguration.onTopicChange(DEPLOYMENT_POLLING_FREQUENCY_SECONDS, (whatHappened, frequency) -> {\n+            pollingFrequency.set(getPollingFrequency(frequency));\n+        });\n+    }\n+\n+    private Long getPollingFrequency(Topic pollingFrequencyTopic) {\n+        return Duration.ofSeconds(Coerce.toLong(pollingFrequencyTopic.getOnce())).toMillis();", "originalCommit": "4704665b27370b81549a578922264806499ece1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "chunk": "diff --git a/src/main/java/com/aws/greengrass/deployment/DeploymentService.java b/src/main/java/com/aws/greengrass/deployment/DeploymentService.java\nindex 9450cfa23..1436584f5 100644\n--- a/src/main/java/com/aws/greengrass/deployment/DeploymentService.java\n+++ b/src/main/java/com/aws/greengrass/deployment/DeploymentService.java\n\n@@ -230,7 +230,7 @@ public class DeploymentService extends GreengrassService {\n     }\n \n     private Long getPollingFrequency(Topic pollingFrequencyTopic) {\n-        return Duration.ofSeconds(Coerce.toLong(pollingFrequencyTopic.getOnce())).toMillis();\n+        return Duration.ofSeconds(Coerce.toLong(pollingFrequencyTopic)).toMillis();\n     }\n \n     @Override\n"}}, {"oid": "2966f6ba0bd463de6b6aebc8f2bffa073387d612", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2966f6ba0bd463de6b6aebc8f2bffa073387d612", "message": "System settings as Nuclues component configuration", "committedDate": "2020-10-16T17:04:10Z", "type": "forcePushed"}, {"oid": "a94df31475efb94813bf6906507d4cc52502199c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a94df31475efb94813bf6906507d4cc52502199c", "message": "System settings as Nuclues component configuration", "committedDate": "2020-10-19T15:26:08Z", "type": "forcePushed"}, {"oid": "c01bc1de0aa4f321d0f826947ddb7e4103766e2d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c01bc1de0aa4f321d0f826947ddb7e4103766e2d", "message": "System settings as Nuclues component configuration", "committedDate": "2020-10-19T15:36:17Z", "type": "forcePushed"}, {"oid": "ef92ab1a74fb418de10b3dd05c7f31375629e7a2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ef92ab1a74fb418de10b3dd05c7f31375629e7a2", "message": "System settings as Nuclues component configuration", "committedDate": "2020-10-19T15:57:58Z", "type": "forcePushed"}, {"oid": "bf6310ed0bd9e58ab447ce53e88854a2db9ec718", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bf6310ed0bd9e58ab447ce53e88854a2db9ec718", "message": "System settings as Nuclues component configuration", "committedDate": "2020-10-19T16:59:37Z", "type": "forcePushed"}, {"oid": "2a3b44fe6410f1c4946fb1d1c08c0b62868fdcf3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2a3b44fe6410f1c4946fb1d1c08c0b62868fdcf3", "message": "System settings as Nucleus component configuration", "committedDate": "2020-10-19T17:07:01Z", "type": "forcePushed"}, {"oid": "bc8283d980d5bffe5c869ddabb61aa268fdb48d4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bc8283d980d5bffe5c869ddabb61aa268fdb48d4", "message": "System settings as Nucleus component configuration", "committedDate": "2020-10-19T17:44:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2Mjk2NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r507962965", "bodyText": "We don't need defaults for these two settings?", "author": "hui-yang", "createdAt": "2020-10-19T18:10:50Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -202,12 +255,40 @@ public String getProxyPassword() {\n         return Coerce.toString(getProxyNamespace().findOrDefault(\"\", DEVICE_PARAM_PROXY_PASSWORD));\n     }\n \n+    public Topic getIotRoleAlias() {\n+        return getTopic(IOT_ROLE_ALIAS_TOPIC).dflt(\"\");\n+    }\n+\n+    public Topic getComponentStoreMaxSizeBytes() {\n+        return getTopic(COMPONENT_STORE_MAX_SIZE_BYTES);\n+    }\n+\n+    public Topic getDeploymentPollingFrequencySeconds() {\n+        return getTopic(DEPLOYMENT_POLLING_FREQUENCY_SECONDS);\n+    }", "originalCommit": "bc8283d980d5bffe5c869ddabb61aa268fdb48d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ3MzcwNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r509473705", "bodyText": "No they're being initialized with their defaults in the constructor", "author": "shaguptashaikh", "createdAt": "2020-10-21T17:26:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2Mjk2NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "8dfb815a8d8f535e10e37a45bcaa4f4f26b8e310", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8dfb815a8d8f535e10e37a45bcaa4f4f26b8e310", "message": "Added new config key for runwithDefault to nucleus recipe", "committedDate": "2020-10-20T16:20:22Z", "type": "forcePushed"}, {"oid": "655e1f26d61825d33b07d64c30514415e0705e67", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/655e1f26d61825d33b07d64c30514415e0705e67", "message": "Added new config key for runwithDefault to nucleus recipe, fixed an integ test", "committedDate": "2020-10-20T16:50:51Z", "type": "forcePushed"}, {"oid": "e1aa58432f596e295fb5666df24400d8aebbe98a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e1aa58432f596e295fb5666df24400d8aebbe98a", "message": "Fix integ tests", "committedDate": "2020-10-21T00:13:29Z", "type": "forcePushed"}, {"oid": "75e78b58a908797fca25ee8408e1946873b6b644", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/75e78b58a908797fca25ee8408e1946873b6b644", "message": "Fix flaky unit test", "committedDate": "2020-10-21T17:15:02Z", "type": "forcePushed"}, {"oid": "41f2fa036bd02acbc25b5358cd3f76925f5a4f55", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/41f2fa036bd02acbc25b5358cd3f76925f5a4f55", "message": "Fix flaky unit test", "committedDate": "2020-10-21T17:32:33Z", "type": "forcePushed"}, {"oid": "400f20b759be0227794da7809067d286bde32f84", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/400f20b759be0227794da7809067d286bde32f84", "message": "System settings as Nucleus component configuration", "committedDate": "2020-10-22T21:57:11Z", "type": "commit"}, {"oid": "cb616d78099c4d7fd569eab084546c0b83974be2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cb616d78099c4d7fd569eab084546c0b83974be2", "message": "Fix bug with builtin service topics getting removed on deployments", "committedDate": "2020-10-22T21:57:11Z", "type": "commit"}, {"oid": "da00a651f8dcf6d1dcb3c36ae53e64f56d732093", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/da00a651f8dcf6d1dcb3c36ae53e64f56d732093", "message": "Added new config key for runwithDefault to nucleus recipe, fixed an integ test", "committedDate": "2020-10-22T21:57:11Z", "type": "commit"}, {"oid": "f58e79169b335bac0d29f101368b9ad4cc15e505", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f58e79169b335bac0d29f101368b9ad4cc15e505", "message": "Fix integ tests", "committedDate": "2020-10-22T21:57:11Z", "type": "commit"}, {"oid": "f2048772103e095612866a58b63ad7057f92c40c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f2048772103e095612866a58b63ad7057f92c40c", "message": "Fix flaky unit test", "committedDate": "2020-10-22T21:57:11Z", "type": "commit"}, {"oid": "36d65d004e83b16b5a184dca747152ab77a244ae", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/36d65d004e83b16b5a184dca747152ab77a244ae", "message": "Fixes for not breaking UATs", "committedDate": "2020-10-22T21:57:11Z", "type": "forcePushed"}, {"oid": "096ce9232d8f3738c7a4f59a64819e4db2981ef0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/096ce9232d8f3738c7a4f59a64819e4db2981ef0", "message": "Fixes for not breaking UATs", "committedDate": "2020-10-22T22:05:50Z", "type": "forcePushed"}, {"oid": "c2a8787758d98ba64a0bc41f869f3352cbfbeccb", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c2a8787758d98ba64a0bc41f869f3352cbfbeccb", "message": "Fixes for not breaking UATs", "committedDate": "2020-10-22T22:07:13Z", "type": "forcePushed"}, {"oid": "56250b7435a9907cfb19dd58a3dcdfbe7a10f9bd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/56250b7435a9907cfb19dd58a3dcdfbe7a10f9bd", "message": "Fixes for not breaking UATs", "committedDate": "2020-10-22T22:30:25Z", "type": "commit"}, {"oid": "56250b7435a9907cfb19dd58a3dcdfbe7a10f9bd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/56250b7435a9907cfb19dd58a3dcdfbe7a10f9bd", "message": "Fixes for not breaking UATs", "committedDate": "2020-10-22T22:30:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUxNDYyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/513#discussion_r510514622", "bodyText": "Thanks. With this, we can deprecate KernelVersion later", "author": "hui-yang", "createdAt": "2020-10-22T23:35:19Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -41,15 +43,16 @@\n public class DeviceConfiguration {\n \n     public static final String DEFAULT_NUCLEUS_COMPONENT_NAME = \"aws.greengrass.Nucleus\";\n-    // TODO : The type should come from common model, remove these once it's available\n-    public static final String NUCLEUS_COMPONENT_TYPE = \"aws.greengrass.nucleus\";\n-    public static final String NUCLEUS_COMPONENT_TYPE_SHORT = \"Nucleus\";\n+    // TODO : Version should come from the installer based on which nucleus version it installed\n+    public static final String NUCLEUS_COMPONENT_VERSION = \"0.0.0\";", "originalCommit": "56250b7435a9907cfb19dd58a3dcdfbe7a10f9bd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "7aad20c83ca6b0b6e1c39b381fa6270caa832de5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7aad20c83ca6b0b6e1c39b381fa6270caa832de5", "message": "Merge branch 'master' into system-settings", "committedDate": "2020-10-22T23:49:58Z", "type": "commit"}, {"oid": "6b9fd6b79747281495b94c1fe8c2e63503b496c6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6b9fd6b79747281495b94c1fe8c2e63503b496c6", "message": "Merge branch 'master' into system-settings", "committedDate": "2020-10-23T04:19:02Z", "type": "commit"}, {"oid": "aed96cd8dbd988ca5a07ba23d94373d6a978c439", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/aed96cd8dbd988ca5a07ba23d94373d6a978c439", "message": "Merge branch 'master' into system-settings", "committedDate": "2020-10-23T09:36:05Z", "type": "commit"}, {"oid": "046e86c14fe1aa3cd990c2c82c579df67c5723e2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/046e86c14fe1aa3cd990c2c82c579df67c5723e2", "message": "Merge branch 'master' into system-settings", "committedDate": "2020-10-23T15:20:45Z", "type": "commit"}, {"oid": "1936e15d92122616b9e16fb868ad367171732bfc", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1936e15d92122616b9e16fb868ad367171732bfc", "message": "Merge branch 'master' into system-settings", "committedDate": "2020-10-23T18:22:10Z", "type": "commit"}, {"oid": "7f4d11c12b64e094e0a6c6d3cf4c8d0b1d9624a0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7f4d11c12b64e094e0a6c6d3cf4c8d0b1d9624a0", "message": "Merge branch 'master' into system-settings", "committedDate": "2020-10-23T20:35:15Z", "type": "commit"}]}