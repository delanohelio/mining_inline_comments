{"pr_number": 179, "pr_title": "Make Flake Finder more debuggable, fix PMD running multiple times", "pr_createdAt": "2020-04-14T03:47:05Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/179", "timeline": [{"oid": "d1bff27bee38c00790dbb1d4027777ca392929e6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d1bff27bee38c00790dbb1d4027777ca392929e6", "message": "Make Flake Finder more debuggable", "committedDate": "2020-04-14T04:08:08Z", "type": "forcePushed"}, {"oid": "bec680a341170742cc4c3477113e06bceddb6f4a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bec680a341170742cc4c3477113e06bceddb6f4a", "message": "Make Flake Finder more debuggable", "committedDate": "2020-04-14T04:23:37Z", "type": "forcePushed"}, {"oid": "5b8cf8278a7d859dc4a8bd30368867cb837ab596", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5b8cf8278a7d859dc4a8bd30368867cb837ab596", "message": "Make Flake Finder more debuggable", "committedDate": "2020-04-14T04:28:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4MzcwNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/179#discussion_r408283707", "bodyText": "A quick reformat on this file, please!", "author": "leaf94", "createdAt": "2020-04-14T16:45:47Z", "path": "src/test/java/com/aws/iot/evergreen/kernel/EvergreenServiceTest.java", "diffHunk": "@@ -102,32 +103,34 @@ public void startup() {\n     }\n \n     @Test\n-    void GIVEN_a_service_WHEN_reportState_THEN_all_state_changes_are_notified() throws InterruptedException {\n+    void GIVEN_a_service_WHEN_reportState_THEN_all_state_changes_are_notified() throws InterruptedException,\n+            IOException {\n         ScheduledThreadPoolExecutor ses = new ScheduledThreadPoolExecutor(2);\n         ExecutorService cachedPool = Executors.newCachedThreadPool();\n         CountDownLatch cd = new CountDownLatch(2);\n \n-        Context context = new Context();\n-        context.put(ScheduledThreadPoolExecutor.class, ses);\n-        context.put(ScheduledExecutorService.class, ses);\n-        context.put(Executor.class, cachedPool);\n-        context.put(ExecutorService.class, cachedPool);\n-        context.put(ThreadPoolExecutor.class, ses);\n-        context.put(CountDownLatch.class, cd);\n-\n-        final AtomicInteger n = new AtomicInteger(0);\n-        context.addGlobalStateChangeListener((service, oldState, newState) -> {\n-            if (n.incrementAndGet() >= NUM * 2) {\n-                cd.countDown();\n-            }\n-        });\n+        try(Context context = new Context()) {\n+            context.put(ScheduledThreadPoolExecutor.class, ses);\n+            context.put(ScheduledExecutorService.class, ses);\n+            context.put(Executor.class, cachedPool);\n+            context.put(ExecutorService.class, cachedPool);\n+            context.put(ThreadPoolExecutor.class, ses);\n+            context.put(CountDownLatch.class, cd);\n+\n+            final AtomicInteger n = new AtomicInteger(0);\n+            context.addGlobalStateChangeListener((service, oldState, newState) -> {\n+                if (n.incrementAndGet() >= NUM * 2) {\n+                    cd.countDown();\n+                }\n+            });", "originalCommit": "5b8cf8278a7d859dc4a8bd30368867cb837ab596", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "abfa3c211a05cc46a2213f961a726d9e4f2bf625", "chunk": "diff --git a/src/test/java/com/aws/iot/evergreen/kernel/EvergreenServiceTest.java b/src/test/java/com/aws/iot/evergreen/kernel/EvergreenServiceTest.java\nindex 6dbe0feeed..458fcd0cb4 100644\n--- a/src/test/java/com/aws/iot/evergreen/kernel/EvergreenServiceTest.java\n+++ b/src/test/java/com/aws/iot/evergreen/kernel/EvergreenServiceTest.java\n\n@@ -103,13 +103,13 @@ public class EvergreenServiceTest extends EGServiceTestUtil {\n     }\n \n     @Test\n-    void GIVEN_a_service_WHEN_reportState_THEN_all_state_changes_are_notified() throws InterruptedException,\n-            IOException {\n+    void GIVEN_a_service_WHEN_reportState_THEN_all_state_changes_are_notified()\n+            throws InterruptedException, IOException {\n         ScheduledThreadPoolExecutor ses = new ScheduledThreadPoolExecutor(2);\n         ExecutorService cachedPool = Executors.newCachedThreadPool();\n         CountDownLatch cd = new CountDownLatch(2);\n \n-        try(Context context = new Context()) {\n+        try (Context context = new Context()) {\n             context.put(ScheduledThreadPoolExecutor.class, ses);\n             context.put(ScheduledExecutorService.class, ses);\n             context.put(Executor.class, cachedPool);\n"}}, {"oid": "abfa3c211a05cc46a2213f961a726d9e4f2bf625", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/abfa3c211a05cc46a2213f961a726d9e4f2bf625", "message": "Make Flake Finder more debuggable", "committedDate": "2020-04-14T17:43:29Z", "type": "commit"}, {"oid": "abfa3c211a05cc46a2213f961a726d9e4f2bf625", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/abfa3c211a05cc46a2213f961a726d9e4f2bf625", "message": "Make Flake Finder more debuggable", "committedDate": "2020-04-14T17:43:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzODE3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/179#discussion_r408338170", "bodyText": "Do we plan to live with this violation?", "author": "shaguptashaikh", "createdAt": "2020-04-14T18:12:46Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java", "diffHunk": "@@ -101,6 +101,7 @@ void GIVEN_expected_stdout_patterns_WHEN_kernel_launches_THEN_all_expected_patte\n         kernel.shutdown();\n     }\n \n+    @SuppressWarnings(\"PMD.AssignmentInOperand\")", "originalCommit": "abfa3c211a05cc46a2213f961a726d9e4f2bf625", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzOTEyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/179#discussion_r408339122", "bodyText": "Yes, assignment in operand isn't a big deal, especially in a test.", "author": "MikeDombo", "createdAt": "2020-04-14T18:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzODE3MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzODI5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/179#discussion_r408338294", "bodyText": "Same as above", "author": "shaguptashaikh", "createdAt": "2020-04-14T18:12:57Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -106,6 +106,7 @@ public void startup() throws InterruptedException {\n         }\n     }\n \n+    @SuppressWarnings(\"PMD.CloseResource\")", "originalCommit": "abfa3c211a05cc46a2213f961a726d9e4f2bf625", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzOTMyMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/179#discussion_r408339323", "bodyText": "Yes, it is a false flag, we do actually close the resource, so nothing to worry about.", "author": "MikeDombo", "createdAt": "2020-04-14T18:14:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzODI5NA=="}], "type": "inlineReview", "revised_code": null}]}