{"pr_number": 196, "pr_title": "[PMD] AvoidGettingFutureWithoutTimeout in removing/closing a service", "pr_createdAt": "2020-04-21T14:25:36Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196", "timeline": [{"oid": "6879f232db23a4473d1d3dcc9b0aa23d09a7abcb", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6879f232db23a4473d1d3dcc9b0aa23d09a7abcb", "message": "[PMD] AvoidGettingFutureWithoutTimeout in removing/closing a service", "committedDate": "2020-04-21T14:14:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNTIxMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412305211", "bodyText": "don't add the suppression because it is wrong. Please just delete the rule from the xml files since the rule is broken.", "author": "MikeDombo", "createdAt": "2020-04-21T16:26:32Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -202,6 +202,7 @@ private void enqueueStateEvent(Object event) {\n         }\n     }\n \n+    @SuppressWarnings(\"PMD.AvoidGettingFutureWithoutTimeout\")", "originalCommit": "6879f232db23a4473d1d3dcc9b0aa23d09a7abcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5MzU3Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412393576", "bodyText": "This does help to identify some occurrences of calling get().  But I do see false positive and false negative.\nI will remove the rule.", "author": "fufranci", "createdAt": "2020-04-21T18:29:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNTIxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "589c51896e133292c5c2890f7039f73cfe5aafba", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java b/src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java\nindex b4ef57d74b..f914b1ffa8 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java\n\n@@ -202,7 +202,6 @@ public class Lifecycle {\n         }\n     }\n \n-    @SuppressWarnings(\"PMD.AvoidGettingFutureWithoutTimeout\")\n     void startStateTransition() throws InterruptedException {\n         while (!(isClosed.get() && evergreenService.getState().isClosable())) {\n             Optional<State> desiredState;\n"}}, {"oid": "589c51896e133292c5c2890f7039f73cfe5aafba", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/589c51896e133292c5c2890f7039f73cfe5aafba", "message": "Remove the AvoidGettingFutureWithoutTimeout rule", "committedDate": "2020-04-21T18:34:13Z", "type": "commit"}, {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bda792f575d22e72ef644d567c6eeb83e042de1f", "message": "Merge remote-tracking branch 'origin/master' into AvoidGettingFutureWithoutTimeout", "committedDate": "2020-04-21T19:18:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412490993", "bodyText": "not sure we can put a timeout here.", "author": "MikeDombo", "createdAt": "2020-04-21T21:05:44Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -47,9 +51,7 @@ public Void call() throws NonRetryableDeploymentTaskFailureException, RetryableD\n \n             List<PackageIdentifier> desiredPackages = dependencyResolver\n                     .resolveDependencies(deploymentDocument, rootPackages);\n-            // Block this without timeout because a device can be offline and it can take quite a long time\n-            // to download a package.\n-            packageStore.preparePackages(desiredPackages).get();\n+            packageStore.preparePackages(desiredPackages).get(TIMEOUT_MINUTES, TimeUnit.MINUTES);", "originalCommit": "bda792f575d22e72ef644d567c6eeb83e042de1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwMTg3Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412501877", "bodyText": "I am not sure too. So I put a very long timeout (60 minutes) here. But I also I want to call out: If there is a timeout, it now translates into RetryableDeploymentTaskFailureException.\nSo two questions:\n\nDo we want some timeout?\nIf so, how long? Is 60 min enough?\n\n@fengwa-aws  I see that you made most of the changes here. Can you offer your opinion?", "author": "fufranci", "createdAt": "2020-04-21T21:24:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNjc0Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412506747", "bodyText": "Didn't the comment already explain? We don't need a timeout here.", "author": "fengwang666", "createdAt": "2020-04-21T21:32:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNDM2MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412514361", "bodyText": "Without any timeout, a thread could be blocked forever. Why would waiting forever better than a very long timeout?", "author": "fufranci", "createdAt": "2020-04-21T21:47:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNzM1MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412517350", "bodyText": "A deployment can take hours or even days, for example, if the device is offline and the packages cannot be downloaded, or if one of the services are performing critical tasks and cannot be interrupted.\nThe intention is the thread will be blocked until:\n\nthe future is finished;\nthe future is cancelled;\nthe thread is interrupted.\n\nThe caller can always cancel it or interrupt the thread if it decides not to wait any longer (e.g. a new deployment comes in).", "author": "fengwang666", "createdAt": "2020-04-21T21:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyOTcxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412529718", "bodyText": "I will undo this change.", "author": "fufranci", "createdAt": "2020-04-21T22:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "963b25f3a0b359e7c0c8b70229bce2dcfb4fcdb8", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java b/src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java\nindex fd110dec89..1caeeefa93 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java\n\n@@ -51,7 +47,9 @@ public class DeploymentTask implements Callable<Void> {\n \n             List<PackageIdentifier> desiredPackages = dependencyResolver\n                     .resolveDependencies(deploymentDocument, rootPackages);\n-            packageStore.preparePackages(desiredPackages).get(TIMEOUT_MINUTES, TimeUnit.MINUTES);\n+            // Block this without timeout because a device can be offline and it can take quite a long time\n+            // to download a package.\n+            packageStore.preparePackages(desiredPackages).get();\n \n             Map<Object, Object> newConfig = kernelConfigResolver.resolve(desiredPackages, deploymentDocument,\n                     rootPackages);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNTExMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412505110", "bodyText": "Why 30 seconds?", "author": "fengwang666", "createdAt": "2020-04-21T21:29:49Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java", "diffHunk": "@@ -35,6 +37,7 @@\n     public static final String MERGE_CONFIG_EVENT_KEY = \"merge-config\";\n \n     private static final Logger logger = LogManager.getLogger(DeploymentConfigMerger.class);\n+    private static final int TIMEOUT_SECONDS = 30;", "originalCommit": "bda792f575d22e72ef644d567c6eeb83e042de1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzMDc3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412530770", "bodyText": "I will undo this change.", "author": "fufranci", "createdAt": "2020-04-21T22:19:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNTExMA=="}], "type": "inlineReview", "revised_code": {"commit": "963b25f3a0b359e7c0c8b70229bce2dcfb4fcdb8", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java b/src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java\nindex b9a0e7f914..837725b23f 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java\n\n@@ -37,7 +35,6 @@ public class DeploymentConfigMerger {\n     public static final String MERGE_CONFIG_EVENT_KEY = \"merge-config\";\n \n     private static final Logger logger = LogManager.getLogger(DeploymentConfigMerger.class);\n-    private static final int TIMEOUT_SECONDS = 30;\n \n     @Inject\n     private Kernel kernel;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNTk2Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412505967", "bodyText": "The original comment already explain why timeout is not needed here. 30 second is very likely not sufficient for a deployment to finish.", "author": "fengwang666", "createdAt": "2020-04-21T21:31:19Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -215,14 +217,11 @@ private void connectToAWSIot() throws InterruptedException {\n \n     }\n \n-    @SuppressWarnings({\"PMD.NullAssignment\", \"PMD.AvoidGettingFutureWithoutTimeout\"})\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n     private void finishCurrentDeployment() throws InterruptedException {\n         logger.atInfo().kv(JOB_ID_LOG_KEY_NAME, currentJobId).log(\"Current deployment finished\");\n         try {\n-            //No timeout is set here. Detection of error is delegated to downstream components like\n-            // dependency resolver, package downloader, kernel which will have more visibility\n-            // if something is going wrong\n-            currentProcessStatus.get();\n+            currentProcessStatus.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);", "originalCommit": "bda792f575d22e72ef644d567c6eeb83e042de1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyODg4Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412528883", "bodyText": "i will undo this change.", "author": "fufranci", "createdAt": "2020-04-21T22:15:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNTk2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "963b25f3a0b359e7c0c8b70229bce2dcfb4fcdb8", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java b/src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java\nindex c549b4f075..eb8047d114 100644\n--- a/src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java\n+++ b/src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java\n\n@@ -221,7 +219,10 @@ public class DeploymentService extends EvergreenService {\n     private void finishCurrentDeployment() throws InterruptedException {\n         logger.atInfo().kv(JOB_ID_LOG_KEY_NAME, currentJobId).log(\"Current deployment finished\");\n         try {\n-            currentProcessStatus.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);\n+            //No timeout is set here. Detection of error is delegated to downstream components like\n+            // dependency resolver, package downloader, kernel which will have more visibility\n+            // if something is going wrong\n+            currentProcessStatus.get();\n             storeDeploymentStatusInConfig(currentJobId, JobStatus.SUCCEEDED, new HashMap<>());\n         } catch (ExecutionException e) {\n             logger.atError().kv(JOB_ID_LOG_KEY_NAME, currentJobId).setCause(e)\n"}}, {"oid": "963b25f3a0b359e7c0c8b70229bce2dcfb4fcdb8", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/963b25f3a0b359e7c0c8b70229bce2dcfb4fcdb8", "message": "Undo the timeout changes related to deployment", "committedDate": "2020-04-21T22:25:59Z", "type": "commit"}, {"oid": "3948df35725d3c65c01610c0499d0e119912c1c7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3948df35725d3c65c01610c0499d0e119912c1c7", "message": "Merge remote-tracking branch 'origin/master' into AvoidGettingFutureWithoutTimeout", "committedDate": "2020-04-21T22:26:41Z", "type": "commit"}, {"oid": "a9fd91262eb3166b49af893ca09bc4940a1488e8", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a9fd91262eb3166b49af893ca09bc4940a1488e8", "message": "Merge remote-tracking branch 'origin/master' into AvoidGettingFutureWithoutTimeout", "committedDate": "2020-04-22T04:02:42Z", "type": "commit"}]}