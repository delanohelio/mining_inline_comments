{"pr_number": 448, "pr_title": "Changing GGC to use Iot pre-prod if configured to do so", "pr_createdAt": "2020-09-17T22:31:20Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448", "timeline": [{"oid": "02c9bbc95e53eb0113a339c2017445102da67a99", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/02c9bbc95e53eb0113a339c2017445102da67a99", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-17T22:35:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5ODU4Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490598586", "bodyText": "now that the endpoints are combined we should be able to remove this \"FCS_ENDPOINT\" and instead get the endpoint when we create the client, based on region and stage", "author": "MikeDombo", "createdAt": "2020-09-17T22:33:13Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -97,7 +98,7 @@\n  */\n @ExtendWith(EGExtension.class)\n public class BaseE2ETestCase implements AutoCloseable {\n-    private static final String FCS_ENDPOINT = \"https://bp5p2uvbx6.execute-api.us-east-1.amazonaws.com/Gamma\";\n+    private static final String FCS_ENDPOINT = \"https://evergreen-gamma.us-east-1.amazonaws.com\";", "originalCommit": "8fa0d54fe587c255b4def368cfe5c1f5ce252448", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYwMTIxMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490601213", "bodyText": "We should update the endpoint that we use and make it configurable.", "author": "MikeDombo", "createdAt": "2020-09-17T22:40:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5ODU4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYwMjg2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490602864", "bodyText": "I thought this is the updated endpoint, took it from the document which Paul shared. Configurable from where?", "author": "abanthiy", "createdAt": "2020-09-17T22:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5ODU4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYwNDMwNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490604307", "bodyText": "I mean to update this one: https://github.com/aws/aws-greengrass-kernel/blob/5733d3c514f677ecf50bc7e00ba828368a7d22bc/src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java#L72\nAnd make that configurable through the DeviceConfiguration so that we can override it in the config.yaml during UATs. We definitely need this once the default is prod, but we still need to test in gamma.", "author": "MikeDombo", "createdAt": "2020-09-17T22:49:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5ODU4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5c3d1470a2ab773173dcaf4f9e5b07bce4e2be1d", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\nindex 52c8c032..4cc42e4c 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n\n@@ -98,7 +99,6 @@ import static org.junit.jupiter.api.Assertions.assertEquals;\n  */\n @ExtendWith(EGExtension.class)\n public class BaseE2ETestCase implements AutoCloseable {\n-    private static final String FCS_ENDPOINT = \"https://evergreen-gamma.us-east-1.amazonaws.com\";\n     protected static final Region GAMMA_REGION = Region.US_EAST_1;\n     protected static final String THING_GROUP_TARGET_TYPE = \"thinggroup\";\n     private static final String TES_ROLE_NAME = \"E2ETestsTesRole\" + UUID.randomUUID().toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYwMDk2NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490600965", "bodyText": "print the exception to stderr/stdout as well or rethrow. Otherwise it won't be clear because the logger will be going to files, but this should be user-facing.", "author": "MikeDombo", "createdAt": "2020-09-17T22:39:49Z", "path": "src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java", "diffHunk": "@@ -169,7 +178,13 @@ public EvergreenSetup(PrintStream outStream, PrintStream errStream, String... se\n     @SuppressWarnings(\n             {\"PMD.NullAssignment\", \"PMD.AvoidCatchingThrowable\", \"PMD.DoNotCallSystemExit\", \"PMD.SystemPrintln\"})\n     public static void main(String[] args) {\n-        EvergreenSetup evergreenSetup = new EvergreenSetup(System.out, System.err, args);\n+        EvergreenSetup evergreenSetup = null;\n+        try {\n+            evergreenSetup = new EvergreenSetup(System.out, System.err, args);\n+        } catch (URISyntaxException | InvalidEnvironmentStageException e) {\n+            logger.atError().setCause(e).log(\"Error while initializing Evergreen setup\");\n+            System.exit(1);", "originalCommit": "02c9bbc95e53eb0113a339c2017445102da67a99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f823bdc9c289c3192dd5b55744c0975b29a65f22", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\nindex 306e4cc6..3af012ac 100644\n--- a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n+++ b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n\n@@ -179,12 +181,7 @@ public class EvergreenSetup {\n             {\"PMD.NullAssignment\", \"PMD.AvoidCatchingThrowable\", \"PMD.DoNotCallSystemExit\", \"PMD.SystemPrintln\"})\n     public static void main(String[] args) {\n         EvergreenSetup evergreenSetup = null;\n-        try {\n-            evergreenSetup = new EvergreenSetup(System.out, System.err, args);\n-        } catch (URISyntaxException | InvalidEnvironmentStageException e) {\n-            logger.atError().setCause(e).log(\"Error while initializing Evergreen setup\");\n-            System.exit(1);\n-        }\n+        evergreenSetup = new EvergreenSetup(System.out, System.err, args);\n         try {\n             evergreenSetup.parseArgs();\n             evergreenSetup.performSetup();\n"}}, {"oid": "cbb39fa4a2081ef3db6651af53698dc7dbdd9188", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cbb39fa4a2081ef3db6651af53698dc7dbdd9188", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-17T22:42:33Z", "type": "forcePushed"}, {"oid": "f823bdc9c289c3192dd5b55744c0975b29a65f22", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f823bdc9c289c3192dd5b55744c0975b29a65f22", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-17T23:06:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNTYwNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490615604", "bodyText": "why?", "author": "MikeDombo", "createdAt": "2020-09-17T23:25:45Z", "path": "src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java", "diffHunk": "@@ -169,7 +180,8 @@ public EvergreenSetup(PrintStream outStream, PrintStream errStream, String... se\n     @SuppressWarnings(\n             {\"PMD.NullAssignment\", \"PMD.AvoidCatchingThrowable\", \"PMD.DoNotCallSystemExit\", \"PMD.SystemPrintln\"})\n     public static void main(String[] args) {\n-        EvergreenSetup evergreenSetup = new EvergreenSetup(System.out, System.err, args);\n+        EvergreenSetup evergreenSetup = null;\n+        evergreenSetup = new EvergreenSetup(System.out, System.err, args);", "originalCommit": "f823bdc9c289c3192dd5b55744c0975b29a65f22", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNjAxMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490626013", "bodyText": "Removed a try block as I refactored my own code, forgot to revert", "author": "abanthiy", "createdAt": "2020-09-18T00:01:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNTYwNA=="}], "type": "inlineReview", "revised_code": {"commit": "19c0c7077f430d4c654fd5ed6b82c7f7b8f2b61f", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\nindex 3af012ac..facb9a66 100644\n--- a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n+++ b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n\n@@ -180,8 +182,7 @@ public class EvergreenSetup {\n     @SuppressWarnings(\n             {\"PMD.NullAssignment\", \"PMD.AvoidCatchingThrowable\", \"PMD.DoNotCallSystemExit\", \"PMD.SystemPrintln\"})\n     public static void main(String[] args) {\n-        EvergreenSetup evergreenSetup = null;\n-        evergreenSetup = new EvergreenSetup(System.out, System.err, args);\n+        EvergreenSetup evergreenSetup = new EvergreenSetup(System.out, System.err, args);\n         try {\n             evergreenSetup.parseArgs();\n             evergreenSetup.performSetup();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNTgzMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490615833", "bodyText": "make package-private since it is only in tests?", "author": "MikeDombo", "createdAt": "2020-09-17T23:26:33Z", "path": "src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java", "diffHunk": "@@ -110,7 +118,8 @@\n     private static final Logger logger = LogManager.getLogger(EvergreenSetup.class);\n     private final String[] setupArgs;\n     private final List<String> kernelArgs = new ArrayList<>();\n-    private final DeviceProvisioningHelper deviceProvisioningHelper;\n+    @Setter", "originalCommit": "f823bdc9c289c3192dd5b55744c0975b29a65f22", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczMzQ4NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490733484", "bodyText": "Done", "author": "abanthiy", "createdAt": "2020-09-18T06:40:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNTgzMw=="}], "type": "inlineReview", "revised_code": {"commit": "19c0c7077f430d4c654fd5ed6b82c7f7b8f2b61f", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\nindex 3af012ac..facb9a66 100644\n--- a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n+++ b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n\n@@ -119,7 +121,7 @@ public class EvergreenSetup {\n     private final String[] setupArgs;\n     private final List<String> kernelArgs = new ArrayList<>();\n     @Setter\n-    private DeviceProvisioningHelper deviceProvisioningHelper;\n+    DeviceProvisioningHelper deviceProvisioningHelper;\n     private final PrintStream outStream;\n     private final PrintStream errStream;\n     private int argpos = 0;\n"}}, {"oid": "5c3d1470a2ab773173dcaf4f9e5b07bce4e2be1d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5c3d1470a2ab773173dcaf4f9e5b07bce4e2be1d", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-17T23:58:00Z", "type": "forcePushed"}, {"oid": "19c0c7077f430d4c654fd5ed6b82c7f7b8f2b61f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/19c0c7077f430d4c654fd5ed6b82c7f7b8f2b61f", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-18T00:02:15Z", "type": "forcePushed"}, {"oid": "ce4952544ef8297a439d25714f2f6e17fd815b01", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ce4952544ef8297a439d25714f2f6e17fd815b01", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-18T00:12:37Z", "type": "forcePushed"}, {"oid": "8afc20de873c76e6ead149a1668018126b48365f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8afc20de873c76e6ead149a1668018126b48365f", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-18T00:15:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYzMTUyNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490631527", "bodyText": "This probably isn't accurate for prod.", "author": "MikeDombo", "createdAt": "2020-09-18T00:21:18Z", "path": "src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -64,26 +70,42 @@\n  */\n @Getter\n public class DeviceProvisioningHelper {\n+\n+    //evergreen-<stage>.<region>.amazonaws.com\n+    public static final String GREENGRASS_ENDPOINT_FORMAT = \"evergreen-%s.%s.amazonaws.com\";", "originalCommit": "8afc20de873c76e6ead149a1668018126b48365f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2NDE0NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490664145", "bodyText": "Right. Updated", "author": "abanthiy", "createdAt": "2020-09-18T02:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYzMTUyNw=="}], "type": "inlineReview", "revised_code": {"commit": "ff2ba9864a2fab731a766d6b0bae0cb8fd806a6c", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java b/src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java\nindex 78a48317..f4168c95 100644\n--- a/src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java\n+++ b/src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java\n\n@@ -71,8 +71,11 @@ import static com.aws.iot.evergreen.tes.TokenExchangeService.TOKEN_EXCHANGE_SERV\n @Getter\n public class DeviceProvisioningHelper {\n \n-    //evergreen-<stage>.<region>.amazonaws.com\n-    public static final String GREENGRASS_ENDPOINT_FORMAT = \"evergreen-%s.%s.amazonaws.com\";\n+    public static final Map<EnvironmentStage, String> STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n+            EnvironmentStage.PROD, \"evergreen.%s.amazonaws.com\",\n+            EnvironmentStage.GAMMA, \"evergreen-gamma.%s.amazonaws.com\",\n+            EnvironmentStage.BETA, \"evergreen-beta.%s.amazonaws.com\"\n+    );\n \n     private static final String ROOT_CA_URL = \"https://www.amazontrust.com/repository/AmazonRootCA1.pem\";\n     private static final String IOT_ROLE_POLICY_NAME_PREFIX = \"EvergreenTESCertificatePolicy\";\n"}}, {"oid": "ff2ba9864a2fab731a766d6b0bae0cb8fd806a6c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ff2ba9864a2fab731a766d6b0bae0cb8fd806a6c", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-18T02:26:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2NzYzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490667636", "bodyText": "These 2 FCS and GCS clients can be the same now that we have a shared endpoint.", "author": "MikeDombo", "createdAt": "2020-09-18T02:40:58Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -145,13 +148,25 @@\n \n     protected Kernel kernel;\n \n-    protected static final IotClient iotClient = IotSdkClientFactory.getIotClient(GAMMA_REGION.toString(),\n-            new HashSet<>(Arrays.asList(InvalidRequestException.class, DeleteConflictException.class)));\n+    protected static IotClient iotClient;\n+\n+    static {\n+        try {\n+            iotClient = IotSdkClientFactory.getIotClient(GAMMA_REGION.toString(),\n+                        envStage,\n+                        new HashSet<>(Arrays.asList(InvalidRequestException.class, DeleteConflictException.class)));\n+        } catch (URISyntaxException e) {\n+            logger.atError().setCause(e).log(\"Caught exception while initializing Iot client\");\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    ;\n     private static AWSEvergreen fcsClient;\n     protected static final AWSEvergreen cmsClient = AWSEvergreenClientBuilder.standard()\n                                                                              .withEndpointConfiguration(\n                                                                                      new AwsClientBuilder.EndpointConfiguration(\n-                                                                                             DeviceProvisioningHelper.GCS_ENDPOINT,\n+                                                                                             String.format(STAGE_TO_ENDPOINT_FORMAT.get(envStage), GAMMA_REGION.toString()),\n                                                                                              GAMMA_REGION.toString()))\n                                                                              .build();", "originalCommit": "ff2ba9864a2fab731a766d6b0bae0cb8fd806a6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczMzU2Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490733563", "bodyText": "Done", "author": "abanthiy", "createdAt": "2020-09-18T06:40:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2NzYzNg=="}], "type": "inlineReview", "revised_code": {"commit": "1ca00e3898f660bbeb77430b6c05f6b3a0c97cc1", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\nindex 0f578379..9acffa3d 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n\n@@ -163,7 +163,7 @@ public class BaseE2ETestCase implements AutoCloseable {\n \n     ;\n     private static AWSEvergreen fcsClient;\n-    protected static final AWSEvergreen cmsClient = AWSEvergreenClientBuilder.standard()\n+    protected static final AWSEvergreen greengrassClient = AWSEvergreenClientBuilder.standard()\n                                                                              .withEndpointConfiguration(\n                                                                                      new AwsClientBuilder.EndpointConfiguration(\n                                                                                              String.format(STAGE_TO_ENDPOINT_FORMAT.get(envStage), GAMMA_REGION.toString()),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2Nzc3NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490667774", "bodyText": "this can be removed, just get the gcs client", "author": "MikeDombo", "createdAt": "2020-09-18T02:41:34Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -340,7 +357,8 @@ private static void cleanUpTestComponentArtifactsFromS3() {\n     private static synchronized AWSEvergreen getFcsClient() {", "originalCommit": "ff2ba9864a2fab731a766d6b0bae0cb8fd806a6c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ca00e3898f660bbeb77430b6c05f6b3a0c97cc1", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\nindex 0f578379..9acffa3d 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java\n\n@@ -354,20 +354,8 @@ public class BaseE2ETestCase implements AutoCloseable {\n         }\n     }\n \n-    private static synchronized AWSEvergreen getFcsClient() {\n-        if (fcsClient == null) {\n-            AwsClientBuilder.EndpointConfiguration endpointConfiguration = new AwsClientBuilder.EndpointConfiguration(\n-                    String.format(STAGE_TO_ENDPOINT_FORMAT.get(envStage), GAMMA_REGION.toString()),\n-                    GAMMA_REGION.toString());\n-            fcsClient = AWSEvergreenClientBuilder.standard()\n-                    .withEndpointConfiguration(endpointConfiguration).build();\n-        }\n-        return fcsClient;\n-    }\n-\n     @SuppressWarnings(\"PMD.LinguisticNaming\")\n     protected PublishConfigurationResult setAndPublishFleetConfiguration(SetConfigurationRequest setRequest) {\n-        AWSEvergreen client = getFcsClient();\n \n         // update package name with random suffix to avoid conflict in cloud\n         Map<String, PackageMetaData> updatedPkgMetadata = new HashMap<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2Nzk0Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490667943", "bodyText": "default should be east-1 because that's all that evergreen is deployed to", "author": "MikeDombo", "createdAt": "2020-09-18T02:42:26Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -51,6 +55,8 @@\n \n     @Getter\n     private String providedConfigPathName;\n+    private String awsRegion = \"us-west-2\";", "originalCommit": "ff2ba9864a2fab731a766d6b0bae0cb8fd806a6c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ca00e3898f660bbeb77430b6c05f6b3a0c97cc1", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java b/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\nindex 3f189aa5..478a5d0d 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\n\n@@ -55,7 +57,7 @@ public class KernelCommandLine {\n \n     @Getter\n     private String providedConfigPathName;\n-    private String awsRegion = \"us-west-2\";\n+    private String awsRegion = \"us-east-1\";\n     private String envStage = \"prod\";\n     private String[] args;\n     private String arg;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2ODkxMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490668911", "bodyText": "If the --region isn't specified, we should fallback to DeviceConfiguration.getRegion(). And if it is specified, then we should update the region in the DeviceConfiguration", "author": "MikeDombo", "createdAt": "2020-09-18T02:46:12Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -94,6 +100,14 @@ public void parseArgs(String... args) {\n                     rootAbsolutePath = getArg();\n                     Objects.requireNonNull(rootAbsolutePath, \"-r or --root requires an argument\");\n                     break;\n+                case \"--aws-region\":\n+                case \"-ar\":\n+                    awsRegion = getArg();", "originalCommit": "ff2ba9864a2fab731a766d6b0bae0cb8fd806a6c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ca00e3898f660bbeb77430b6c05f6b3a0c97cc1", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java b/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\nindex 3f189aa5..478a5d0d 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\n\n@@ -102,7 +105,7 @@ public class KernelCommandLine {\n                     break;\n                 case \"--aws-region\":\n                 case \"-ar\":\n-                    awsRegion = getArg();\n+                    deviceConfiguration.getAWSRegion().withValue(getArg());\n                     break;\n                 case \"--env-stage\":\n                 case \"-es\":\n"}}, {"oid": "1ca00e3898f660bbeb77430b6c05f6b3a0c97cc1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1ca00e3898f660bbeb77430b6c05f6b3a0c97cc1", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-18T06:09:21Z", "type": "forcePushed"}, {"oid": "6db99d993142919df9d118e5cccfc7e5da8cbce4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6db99d993142919df9d118e5cccfc7e5da8cbce4", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-18T06:10:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNjE4Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490736183", "bodyText": "does cloud prod actually work? We've only ever tested against gamma. Just wondering if the default should be gamma.", "author": "MikeDombo", "createdAt": "2020-09-18T06:46:46Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -51,6 +57,8 @@\n \n     @Getter\n     private String providedConfigPathName;\n+    private String awsRegion = \"us-east-1\";\n+    private String envStage = \"prod\";", "originalCommit": "6db99d993142919df9d118e5cccfc7e5da8cbce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA2NTM0MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r491065341", "bodyText": "It will eventually need to be prod, for all our testing we are configuring it so this should be fine", "author": "abanthiy", "createdAt": "2020-09-18T16:35:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNjE4Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNjYyMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490736623", "bodyText": "use kernel.getContext().get(DeviceConfiguration.class) (this may be problematic to call in the constructor though)? We should be using the same device configuration object everywhere", "author": "MikeDombo", "createdAt": "2020-09-18T06:47:40Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -68,6 +76,7 @@ public static void main(String[] args) {\n \n     public KernelCommandLine(Kernel kernel) {\n         this.kernel = kernel;\n+        this.deviceConfiguration = new DeviceConfiguration(kernel);", "originalCommit": "6db99d993142919df9d118e5cccfc7e5da8cbce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3NDExOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r491074118", "bodyText": "I think context will have the object when launch happens, but this (including parseArgs) will be hit before kernel launch.", "author": "abanthiy", "createdAt": "2020-09-18T16:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNjYyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3NTY2MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r491075660", "bodyText": "Context is created in the Kernel constructor.", "author": "MikeDombo", "createdAt": "2020-09-18T16:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNjYyMw=="}], "type": "inlineReview", "revised_code": {"commit": "f0bf8813701b1de4073700b42b7e1ca5c88054ed", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java b/src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java\nsimilarity index 84%\nrename from src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\nrename to src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java\nindex 478a5d0d..6e747f52 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\n+++ b/src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java\n\n@@ -76,7 +73,6 @@ public class KernelCommandLine {\n \n     public KernelCommandLine(Kernel kernel) {\n         this.kernel = kernel;\n-        this.deviceConfiguration = new DeviceConfiguration(kernel);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNzAxMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r490737013", "bodyText": "you don't need to nullcheck. It is never allowed to be null", "author": "MikeDombo", "createdAt": "2020-09-18T06:48:34Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -109,10 +126,18 @@ public void parseArgs(String... args) {\n         kernel.getConfig().lookup(\"system\", \"rootpath\").dflt(rootAbsolutePath)\n                 .subscribe((whatHappened, topic) -> initPaths(Coerce.toString(topic)));\n \n-        // Endpoint for Beta CMS in us-east-1\n-        // TODO: Once service is available in multiple regions, this should not be a static config and\n-        // use the region value to determine endpoint\n-        kernel.getContext().put(CONTEXT_COMPONENT_SERVICE_ENDPOINT, GCS_ENDPOINT);\n+        if (deviceConfiguration.getAWSRegion() != null) {", "originalCommit": "6db99d993142919df9d118e5cccfc7e5da8cbce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA2NjQ4Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r491066487", "bodyText": "This code should not rely on that.", "author": "abanthiy", "createdAt": "2020-09-18T16:38:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNzAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3MTQ2OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r491071468", "bodyText": "You're getting the Topic, not the value and that topic is guaranteed to not be null. This is part of the interface of the DeviceConfiguration.", "author": "MikeDombo", "createdAt": "2020-09-18T16:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNzAxMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExMDUzOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r491110538", "bodyText": "Do we have these 2 new throws?", "author": "hui-yang", "createdAt": "2020-09-18T18:06:21Z", "path": "src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java", "diffHunk": "@@ -136,12 +148,13 @@\n      * @param outStream writer to use to send text response to user\n      * @param errStream writer to use to send error response to user\n      * @param setupArgs CLI args for setup script\n+     * @throws URISyntaxException when IotEndpoint is malformed\n+     * @throws InvalidEnvironmentStageException when the environment stage configured is invalid", "originalCommit": "6db99d993142919df9d118e5cccfc7e5da8cbce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExMTMzOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r491111338", "bodyText": "Also do we need to update the other constructor below?\nEvergreenSetup(PrintStream outStream, PrintStream errStream, DeviceProvisioningHelper deviceProvisioningHelper, String... setupArgs)", "author": "hui-yang", "createdAt": "2020-09-18T18:07:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExMDUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzNjc1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r491136756", "bodyText": "Not needed any longer. Removed.", "author": "abanthiy", "createdAt": "2020-09-18T19:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExMDUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "87f27a6103b171a08283f00b981d37dc08d53d26", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\nindex facb9a66..6c84b630 100644\n--- a/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n+++ b/src/main/java/com/aws/iot/evergreen/easysetup/EvergreenSetup.java\n\n@@ -148,8 +148,6 @@ public class EvergreenSetup {\n      * @param outStream writer to use to send text response to user\n      * @param errStream writer to use to send error response to user\n      * @param setupArgs CLI args for setup script\n-     * @throws URISyntaxException when IotEndpoint is malformed\n-     * @throws InvalidEnvironmentStageException when the environment stage configured is invalid\n      */\n     public EvergreenSetup(PrintStream outStream, PrintStream errStream, String... setupArgs) {\n         this.setupArgs = setupArgs;\n"}}, {"oid": "87f27a6103b171a08283f00b981d37dc08d53d26", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/87f27a6103b171a08283f00b981d37dc08d53d26", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-18T19:03:11Z", "type": "forcePushed"}, {"oid": "f0bf8813701b1de4073700b42b7e1ca5c88054ed", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f0bf8813701b1de4073700b42b7e1ca5c88054ed", "message": "Changing GGC to use Iot pre-prod if configured to do so", "committedDate": "2020-09-20T03:42:47Z", "type": "commit"}, {"oid": "2669d4d3e37babb14e7509aed5d0c4dc721219f5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2669d4d3e37babb14e7509aed5d0c4dc721219f5", "message": "Ignore unknown recipe properties", "committedDate": "2020-09-20T03:43:11Z", "type": "forcePushed"}, {"oid": "3d0db1863abedaa38e896c3baf399532e7b2a741", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3d0db1863abedaa38e896c3baf399532e7b2a741", "message": "Ignore unknown recipe properties", "committedDate": "2020-09-20T03:51:45Z", "type": "commit"}, {"oid": "3d0db1863abedaa38e896c3baf399532e7b2a741", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3d0db1863abedaa38e896c3baf399532e7b2a741", "message": "Ignore unknown recipe properties", "committedDate": "2020-09-20T03:51:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5ODAzMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r492198031", "bodyText": "[No need to change]\nwhy?\nTo keep device/cloud consistency, I can add this into the common serializer instead of just device side.", "author": "leaf94", "createdAt": "2020-09-21T16:36:50Z", "path": "src/main/java/com/aws/greengrass/componentmanager/converter/RecipeLoader.java", "diffHunk": "@@ -46,7 +47,9 @@\n         com.amazon.aws.iot.greengrass.component.common.ComponentRecipe componentRecipe;\n         try {\n             componentRecipe =\n-                    SerializerFactory.getRecipeSerializer().readValue(recipeFileContent,\n+                    SerializerFactory.getRecipeSerializer()\n+                            .disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)", "originalCommit": "3d0db1863abedaa38e896c3baf399532e7b2a741", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwMDYxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/448#discussion_r492200618", "bodyText": "Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"componentDependencies\" (class com.amazon.aws.iot.greengrass.component.common.ComponentRecipe$ComponentRecipeBuilder), not marked as ignorable (8 known properties: \"recipeFormatVersion\", \"manifests\", \"componentType\", \"componentName\", \"componentVersion\", \"componentDescription\", \"componentSource\", \"componentPublisher\"])\n\nIs why. Cloud broke us.", "author": "MikeDombo", "createdAt": "2020-09-21T16:41:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5ODAzMQ=="}], "type": "inlineReview", "revised_code": null}]}