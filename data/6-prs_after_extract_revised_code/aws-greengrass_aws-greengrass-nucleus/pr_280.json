{"pr_number": 280, "pr_title": "Porting to Windows", "pr_createdAt": "2020-06-12T19:52:52Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280", "timeline": [{"oid": "fd00283aba13138ed46315722ec06c02798ab37b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fd00283aba13138ed46315722ec06c02798ab37b", "message": "Try on Windows", "committedDate": "2020-06-12T22:14:07Z", "type": "forcePushed"}, {"oid": "d4a0c210d9e8c8f05c55ee7b7cdf3f45520063a6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d4a0c210d9e8c8f05c55ee7b7cdf3f45520063a6", "message": "Try on Windows", "committedDate": "2020-06-12T22:32:05Z", "type": "forcePushed"}, {"oid": "0286d48605ca9c2a702e96ab526aa8f58ccc35b1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0286d48605ca9c2a702e96ab526aa8f58ccc35b1", "message": "Try on Windows", "committedDate": "2020-06-12T22:41:15Z", "type": "forcePushed"}, {"oid": "6897cdc9f6ce82ca9cf22737820530eed97a8b8d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6897cdc9f6ce82ca9cf22737820530eed97a8b8d", "message": "Try on Windows", "committedDate": "2020-06-12T22:46:15Z", "type": "forcePushed"}, {"oid": "0aaf95cefcb68ad79a620169c785e7ac74ff4f13", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0aaf95cefcb68ad79a620169c785e7ac74ff4f13", "message": "Try on Windows", "committedDate": "2020-06-12T22:50:05Z", "type": "forcePushed"}, {"oid": "146b16db7099cf14b92410ba2d8826c791832623", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/146b16db7099cf14b92410ba2d8826c791832623", "message": "Try on Windows", "committedDate": "2020-06-12T22:53:12Z", "type": "forcePushed"}, {"oid": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f", "message": "Try more", "committedDate": "2020-06-13T06:48:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2MDM3Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440360376", "bodyText": "On Windows:\n$ echo hi\nhi\n$ echo \"hi\"\n\"hi\"\nSo it depends on the actual command line. We could remove the double quote from the command line. I think that would work for both Windows and Linux.", "author": "fufranci", "createdAt": "2020-06-15T18:18:23Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "diffHunk": "@@ -145,7 +147,12 @@ void GIVEN_sample_deployment_doc_WHEN_submitted_to_deployment_task_THEN_services\n         Consumer<EvergreenStructuredLogMessage> listener = m -> {\n             Map<String, String> contexts = m.getContexts();\n             String messageOnStdout = contexts.get(\"stdout\");\n-            if (messageOnStdout != null && listOfExpectedMessages.contains(messageOnStdout)) {\n+            if (messageOnStdout == null) {\n+                return;\n+            }\n+            // Windows has quotes in the echo, so strip them", "originalCommit": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "52d61c335e6f0455fb944f0c6df84e3d21234a41", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java\nindex 6b9d0923..e790510f 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java\n\n@@ -147,12 +161,7 @@ class DeploymentTaskIntegrationTest {\n         Consumer<EvergreenStructuredLogMessage> listener = m -> {\n             Map<String, String> contexts = m.getContexts();\n             String messageOnStdout = contexts.get(\"stdout\");\n-            if (messageOnStdout == null) {\n-                return;\n-            }\n-            // Windows has quotes in the echo, so strip them\n-            messageOnStdout = messageOnStdout.replaceAll(\"\\\"\", \"\");\n-            if (listOfExpectedMessages.contains(messageOnStdout)) {\n+            if (messageOnStdout != null && listOfExpectedMessages.contains(messageOnStdout)) {\n                 //TODO: Deduping is needed, as currently kernel is running the GreenSignal and Mosquitto dependencies\n                 // multiple times before the CustomerApp runs. This should not be the expected behavior. Sim to\n                 // capture this https://sim.amazon.com/issues/P34042537\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2MjA1MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440362051", "bodyText": "the cmd command \"cd\" without any argument would also return the current directory.", "author": "fufranci", "createdAt": "2020-06-15T18:21:26Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/util/ExecTest.java", "diffHunk": "@@ -79,57 +79,61 @@ void GIVEN_exec_WHEN_command_outputs_THEN_output_captured() throws InterruptedEx\n         String command = \"echo \" + expectedOutput;\n         StringBuilder stdout = new StringBuilder();\n         StringBuilder stderr = new StringBuilder();\n-        Consumer<CharSequence> stdoutConsumer = c -> stdout.append(c);\n-        Consumer<CharSequence> stderrConsumer = c -> stderr.append(c);\n-        exec = exec.withShell(command).withOut(stdoutConsumer).withErr(stderrConsumer);\n+        Consumer<CharSequence> stdoutConsumer = stdout::append;\n+        Consumer<CharSequence> stderrConsumer = stderr::append;\n+        exec.withShell(command).withOut(stdoutConsumer).withErr(stderrConsumer);\n         assertTrue(exec.successful(false));\n         // new line for shell\n-        assertEquals(expectedOutput.length() + 1, stdout.length());\n+        assertEquals(expectedOutput.length() + System.lineSeparator().length(), stdout.length());\n         assertEquals(0, stderr.length());\n \n         // reinit consumers\n         stdout.setLength(0);\n         stderr.setLength(0);\n \n         String stdErrCommand = command + \" 1>&2\";\n-        exec = exec.withShell(stdErrCommand);\n+        exec.withShell(stdErrCommand);\n         assertFalse(exec.successful(false));\n         assertEquals(0, stdout.length());\n-        // new line for shell\n-        assertEquals(expectedOutput.length() + 1, stderr.length());\n+        // new line for shell and 1 more for windows because it actually includes the trailing space before the 1>&2\n+        assertEquals(expectedOutput.length() + System.lineSeparator().length() + (Exec.isWindows ? 1 : 0),\n+                stderr.length());\n         exec.close();\n     }\n \n     @Test\n     @SuppressWarnings(\"PMD.CloseResource\")\n     void GIVEN_exec_WHEN_changing_directories_THEN_success() throws InterruptedException, IOException {\n         Exec exec = new Exec();\n-        final String getWorkingDirCmd = \"pwd\";\n+        String getWorkingDirCmd = \"pwd\";\n+        if (Exec.isWindows) {\n+            getWorkingDirCmd = \"echo %cd%\";", "originalCommit": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d719126d63b0122e32e3208aeac0124b6ddb037f", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/util/ExecTest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/util/ExecTest.java\nindex 254c2bfa..e0b473a8 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/util/ExecTest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/util/ExecTest.java\n\n@@ -104,37 +105,34 @@ class ExecTest {\n     @Test\n     @SuppressWarnings(\"PMD.CloseResource\")\n     void GIVEN_exec_WHEN_changing_directories_THEN_success() throws InterruptedException, IOException {\n-        Exec exec = new Exec();\n-        String getWorkingDirCmd = \"pwd\";\n-        if (Exec.isWindows) {\n-            getWorkingDirCmd = \"echo %cd%\";\n-        }\n-        // By default Exec uses home current directory for exec\n-        String expectedDir = System.getProperty(\"user.dir\");\n+        final Exec exec = new Exec();\n+        final String getWorkingDirCmd = Exec.isWindows ? \"cd\" : \"pwd\";\n+\n+        // By default Exec uses home as current directory for exec\n+        Path expectedDir = Paths.get(System.getProperty(\"user.dir\"));\n         String defaultDir = exec.withShell(getWorkingDirCmd).execAndGetStringOutput();\n-        assertEquals(expectedDir, defaultDir);\n+        assertEquals(0, expectedDir.compareTo(Paths.get(defaultDir)));\n \n         // Now change it to some other directory\n-        // TODO: Change this to a proper root to work on all platforms\n-        expectedDir = \"/\";\n-        File expectedDirFile = Paths.get(expectedDir).toAbsolutePath().toFile();\n-        String changedDir = exec.cd(expectedDirFile).withShell(getWorkingDirCmd).execAndGetStringOutput();\n-        assertEquals(expectedDirFile.toPath().toAbsolutePath().toString(), changedDir);\n+        expectedDir = Paths.get(\"/\").toAbsolutePath();\n+        String changedDir = exec.cd(expectedDir.toString()).withShell(getWorkingDirCmd).execAndGetStringOutput();\n+        assertEquals(0, expectedDir.compareTo(Paths.get(changedDir)));\n \n         // Now use the file argument to change into another directory again\n         // File argument would use the current directory (\"/\") as base\n-        expectedDir = System.getProperty(\"user.home\");\n-        changedDir = exec.cd(expectedDir).withShell(getWorkingDirCmd).execAndGetStringOutput();\n-        assertEquals(expectedDir, changedDir);\n+        expectedDir = Paths.get(System.getProperty(\"user.home\")).toAbsolutePath();\n+        changedDir = exec.cd(expectedDir.toString()).withShell(getWorkingDirCmd).execAndGetStringOutput();\n+        assertEquals(0, expectedDir.compareTo(Paths.get(changedDir)));\n \n         // Now change it to root again\n-        changedDir = exec.cd(expectedDirFile).withShell(getWorkingDirCmd).execAndGetStringOutput();\n-        assertEquals(expectedDirFile.toString(), changedDir);\n+        expectedDir = Paths.get(\"/\").toAbsolutePath();\n+        changedDir = exec.cd(expectedDir.toString()).withShell(getWorkingDirCmd).execAndGetStringOutput();\n+        assertEquals(0, expectedDir.compareTo(Paths.get(changedDir)));\n \n         // by default cd change to home directory\n-        expectedDir = System.getProperty(\"user.home\");\n-        changedDir = exec.cd().withShell(getWorkingDirCmd).execAndGetStringOutput();\n-        assertEquals(expectedDir, changedDir);\n+        expectedDir = Paths.get(System.getProperty(\"user.home\"));\n+        changedDir = exec.cd(/* no argument */).withShell(getWorkingDirCmd).execAndGetStringOutput();\n+        assertEquals(0, expectedDir.compareTo(Paths.get(changedDir)));\n         exec.close();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NjY0NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440366645", "bodyText": "I was looking at:\nFileAttribute\nFileAttributeView\nsetAttribute\nto see if we can add a method in the Platform interface that returns a FileAttribute object.", "author": "fufranci", "createdAt": "2020-06-15T18:29:59Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -157,7 +157,9 @@ public void installCliTool(URL resource) {\n             try (InputStream is = resource.openStream()) {\n                 Files.copy(is, dest, StandardCopyOption.REPLACE_EXISTING);\n             }\n-            Files.setPosixFilePermissions(dest, PosixFilePermissions.fromString(\"r-xr-x---\"));\n+            if (!Exec.isWindows) {\n+                Files.setPosixFilePermissions(dest, PosixFilePermissions.fromString(\"r-xr-x---\"));\n+            }", "originalCommit": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "52d61c335e6f0455fb944f0c6df84e3d21234a41", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java b/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\nindex 954624d7..e36ae19f 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java\n\n@@ -157,9 +156,7 @@ public class KernelCommandLine {\n             try (InputStream is = resource.openStream()) {\n                 Files.copy(is, dest, StandardCopyOption.REPLACE_EXISTING);\n             }\n-            if (!Exec.isWindows) {\n-                Files.setPosixFilePermissions(dest, PosixFilePermissions.fromString(\"r-xr-x---\"));\n-            }\n+            // Files.setPosixFilePermissions(dest, PosixFilePermissions.fromString(\"r-xr-x---\"));\n         } catch (IOException t) {\n             logger.atError().setEventType(\"cli-install-error\").setCause(t).log();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2Nzk2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440367969", "bodyText": "We could add a method that returns FileAttribute in the Platform interface.", "author": "fufranci", "createdAt": "2020-06-15T18:32:25Z", "path": "src/main/java/com/aws/iot/evergreen/util/Utils.java", "diffHunk": "@@ -567,10 +567,14 @@ public static long parseLong(CharBuffer str, int radix) {\n      */\n     public static void createPaths(Path... paths) throws IOException {\n         for (Path p: paths) {\n-            // This only supports POSIX compliant file permission right now. We will need to\n-            // change this when trying to support Evergreen in Non-POSIX OS.\n-            Files.createDirectories(p,\n-                    PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwx------\")));\n+            if (Exec.isWindows) {\n+                Files.createDirectories(p);\n+            } else {\n+                // This only supports POSIX compliant file permission right now. We will need to\n+                // change this when trying to support Evergreen in Non-POSIX OS.\n+                Files.createDirectories(p,\n+                        PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwx------\")));", "originalCommit": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "52d61c335e6f0455fb944f0c6df84e3d21234a41", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/util/Utils.java b/src/main/java/com/aws/iot/evergreen/util/Utils.java\nindex 749c40ec..212d8869 100644\n--- a/src/main/java/com/aws/iot/evergreen/util/Utils.java\n+++ b/src/main/java/com/aws/iot/evergreen/util/Utils.java\n\n@@ -567,14 +567,10 @@ public final class Utils {\n      */\n     public static void createPaths(Path... paths) throws IOException {\n         for (Path p: paths) {\n-            if (Exec.isWindows) {\n-                Files.createDirectories(p);\n-            } else {\n-                // This only supports POSIX compliant file permission right now. We will need to\n-                // change this when trying to support Evergreen in Non-POSIX OS.\n-                Files.createDirectories(p,\n-                        PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwx------\")));\n-            }\n+            // This only supports POSIX compliant file permission right now. We will need to\n+            // change this when trying to support Evergreen in Non-POSIX OS.\n+            Files.createDirectories(p);\n+            //, PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwx------\")));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2OTc5OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440369798", "bodyText": "I remember I saw these errors too. I think it was caused by too many errors (not failures) in the tests. If you have fixed the unit tests, you may not need this anymore.", "author": "fufranci", "createdAt": "2020-06-15T18:35:40Z", "path": "src/test/java/com/aws/iot/evergreen/deployment/DeploymentTaskTest.java", "diffHunk": "@@ -39,13 +39,13 @@\n \n @ExtendWith({MockitoExtension.class, EGExtension.class})\n class DeploymentTaskTest {\n-    @Mock\n+    @Mock(lenient = true)", "originalCommit": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d719126d63b0122e32e3208aeac0124b6ddb037f", "chunk": "diff --git a/src/test/java/com/aws/iot/evergreen/deployment/DeploymentTaskTest.java b/src/test/java/com/aws/iot/evergreen/deployment/DeploymentTaskTest.java\nindex 1a6540f9..b42ca92f 100644\n--- a/src/test/java/com/aws/iot/evergreen/deployment/DeploymentTaskTest.java\n+++ b/src/test/java/com/aws/iot/evergreen/deployment/DeploymentTaskTest.java\n\n@@ -29,24 +29,29 @@ import java.util.concurrent.TimeUnit;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.isA;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.anyList;\n import static org.mockito.ArgumentMatchers.eq;\n-import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.timeout;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n @ExtendWith({MockitoExtension.class, EGExtension.class})\n class DeploymentTaskTest {\n-    @Mock(lenient = true)\n+    @Mock\n     private DependencyResolver mockDependencyResolver;\n-    @Mock(lenient = true)\n+    @Mock\n     private PackageManager mockPackageManager;\n-    @Mock(lenient = true)\n+    @Mock\n     private KernelConfigResolver mockKernelConfigResolver;\n-    @Mock(lenient = true)\n+    @Mock\n     private DeploymentConfigMerger mockDeploymentConfigMerger;\n+    @Mock\n+    private Future<Void> mockPreparePackagesFuture;\n+    @Mock\n+    private Future<DeploymentResult> mockMergeConfigFuture;\n     private final DeploymentDocument deploymentDocument =\n             DeploymentDocument.builder().deploymentId(\"TestDeployment\").timestamp(System.currentTimeMillis())\n                     .rootPackages(Collections.emptyList()).build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MDc0Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440370747", "bodyText": "Would java.nio.file.PathMatcher help here?  It may make building the expectation easier.", "author": "fufranci", "createdAt": "2020-06-15T18:37:30Z", "path": "src/test/java/com/aws/iot/evergreen/kernel/KernelCommandLineTest.java", "diffHunk": "@@ -107,11 +112,15 @@ void GIVEN_kernel_WHEN_deTilde_THEN_proper_path_is_returned() {\n \n         KernelCommandLine kcl = new KernelCommandLine(mockKernel);\n \n-        assertThat(kcl.deTilde(\"~/test\"), containsString(System.getProperty(\"user.name\")+ \"/test\"));\n-        assertThat(kcl.deTilde(\"~bin/test\"), is(tempRootDir.toString()+ \"/bin/test\"));\n-        assertThat(kcl.deTilde(\"~config/test\"), is(tempRootDir.toString()+ \"/config/test\"));\n-        assertThat(kcl.deTilde(\"~packages/test\"), is(tempRootDir.toString()+ \"/packages/test\"));\n-        assertThat(kcl.deTilde(\"~root/test\"), is(tempRootDir.toString()+ \"/root/test\"));\n+        assertThat(kcl.deTilde(\"~/test\"), containsString(System.getProperty(\"user.home\") + File.separator + \"test\"));", "originalCommit": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d719126d63b0122e32e3208aeac0124b6ddb037f", "chunk": "diff --git a/src/test/java/com/aws/iot/evergreen/kernel/KernelCommandLineTest.java b/src/test/java/com/aws/iot/evergreen/kernel/KernelCommandLineTest.java\nindex b20d75cf..7f6c6a4e 100644\n--- a/src/test/java/com/aws/iot/evergreen/kernel/KernelCommandLineTest.java\n+++ b/src/test/java/com/aws/iot/evergreen/kernel/KernelCommandLineTest.java\n\n@@ -112,15 +113,11 @@ class KernelCommandLineTest {\n \n         KernelCommandLine kcl = new KernelCommandLine(mockKernel);\n \n-        assertThat(kcl.deTilde(\"~/test\"), containsString(System.getProperty(\"user.home\") + File.separator + \"test\"));\n-        assertThat(kcl.deTilde(\"~bin/test\"),\n-                is(tempRootDir.toString() + File.separator + \"bin\" + File.separator + \"test\"));\n-        assertThat(kcl.deTilde(\"~config/test\"),\n-                is(tempRootDir.toString() + File.separator + \"config\" + File.separator + \"test\"));\n-        assertThat(kcl.deTilde(\"~packages/test\"),\n-                is(tempRootDir.toString() + File.separator + \"packages\" + File.separator + \"test\"));\n-        assertThat(kcl.deTilde(\"~root/test\"),\n-                is(tempRootDir.toString() + File.separator + \"root\" + File.separator + \"test\"));\n+        assertEquals(Paths.get(System.getProperty(\"user.home\"), \"test\").toString(), kcl.deTilde(\"~/test\"));\n+        assertEquals(tempRootDir.resolve(\"bin/test\").toString(), kcl.deTilde(\"~bin/test\"));\n+        assertEquals(tempRootDir.resolve(\"config/test\").toString(), kcl.deTilde(\"~config/test\"));\n+        assertEquals(tempRootDir.resolve(\"packages/test\").toString(), kcl.deTilde(\"~packages/test\"));\n+        assertEquals(tempRootDir.resolve(\"root/test\").toString(), kcl.deTilde(\"~root/test\"));\n     }\n \n     @Test\n"}}, {"oid": "fcf27b87dd6e4f4cec5e4efcd5e13ff8f60d8e9f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fcf27b87dd6e4f4cec5e4efcd5e13ff8f60d8e9f", "message": "Update maven.yml", "committedDate": "2020-06-18T18:11:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzE4Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r442947183", "bodyText": "Serialized listener processor is the main thread in Context. Technically it shouldn't continue running after the test as the test should have closed any Context that it opens.", "author": "MikeDombo", "createdAt": "2020-06-19T16:50:53Z", "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java", "diffHunk": "@@ -17,7 +17,14 @@\n \n @SuppressWarnings(\"PMD.SystemPrintln\")\n public class ThreadProtector implements AfterAllCallback {\n-    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\"main\", \"Monitor Ctrl-Break\"));\n+    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\n+            \"main\",\n+            \"Monitor Ctrl-Break\",\n+            \"surefire-forkedjvm-command-thread\",\n+            \"junit-jupiter-timeout-watcher\",\n+            \"Serialized listener processor\",", "originalCommit": "2f25d5b21ff14737ca0c506e31b590122ceb29ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAzNTMxNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443035316", "bodyText": "https://github.com/aws/aws-greengrass-kernel/blob/master/src/main/java/com/aws/iot/evergreen/dependency/Context.java#L61\nSo the above line should read:\nwhile (interrupted()) {\n\nSince during Context.close(), we call\npublishThread.interrupt();\n\nBut the loop is not checking the status. What do you think?", "author": "fufranci", "createdAt": "2020-06-19T20:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAzNjUyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443036522", "bodyText": "I think that the takeFirst should check and throw", "author": "MikeDombo", "createdAt": "2020-06-19T20:43:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMzI2OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443813268", "bodyText": "I am going to remove \"Serialized listener processor\" from the list. To investigate why the context thread is still running should be a different task.", "author": "fufranci", "createdAt": "2020-06-22T20:40:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzE4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "d719126d63b0122e32e3208aeac0124b6ddb037f", "chunk": "diff --git a/src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java b/src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java\nindex 89197d86..b41ed030 100644\n--- a/src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java\n+++ b/src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java\n\n@@ -22,7 +22,6 @@ public class ThreadProtector implements AfterAllCallback {\n             \"Monitor Ctrl-Break\",\n             \"surefire-forkedjvm-command-thread\",\n             \"junit-jupiter-timeout-watcher\",\n-            \"Serialized listener processor\",\n             \"idle-connection-reaper\",\n             \"java-sdk-http-connection-reaper\"));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443074932", "bodyText": "I don't think we should ignore this exception. We need to fix whatever the cause is.", "author": "MikeDombo", "createdAt": "2020-06-19T23:16:20Z", "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java", "diffHunk": "@@ -129,6 +131,9 @@ public void beforeEach(ExtensionContext context) throws Exception {\n         ignoreExceptionWithMessage(context, \"Unable to load region information from any provider in the chain\");\n         ignoreExceptionWithMessageSubstring(context, \"Failed to connect to service endpoint:\");\n         ignoreExceptionWithMessageSubstring(context, \"Forbidden (Service: null; Status Code: 403;\");\n+\n+        ignoreExceptionOfType(context, RejectedExecutionException.class);\n+        ignoreExceptionOfType(context, InvalidExitValueException.class);", "originalCommit": "4b336b4eabab33c35df8862f57960521f28590fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc3MTc3Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443771777", "bodyText": "I will remove InvalidExitValueException from this list. The 2 sec wait in ThreadProtector may help overall.", "author": "fufranci", "createdAt": "2020-06-22T19:15:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0NzE0MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443847141", "bodyText": "The exception is from:\norg.zeroturnaround.exec.InvalidExitValueException: Unexpected exit value: 255, allowed exit values: [0], executed command [taskkill, /T, /F, /PID, 6932]\n\tat org.zeroturnaround.exec.WaitForProcess.checkExit(WaitForProcess.java:147)\n\tat org.zeroturnaround.exec.WaitForProcess.call(WaitForProcess.java:116)\n\tat org.zeroturnaround.exec.ProcessExecutor.executeNoTimeout(ProcessExecutor.java:818)\n\tat org.zeroturnaround.process.WindowsProcess.taskkill(WindowsProcess.java:109)\n\tat org.zeroturnaround.process.WindowsProcess.destroy(WindowsProcess.java:93)\n\tat com.aws.iot.evergreen.util.platforms.WindowsPlatform.killProcessAndChildren(WindowsPlatform.java:21)\n\tat com.aws.iot.evergreen.util.Exec.close(Exec.java:407)\n\nI think it is safe to ignore at the global level, that is here. I think we only use zeroturnaround's kill process feature.", "author": "fufranci", "createdAt": "2020-06-22T21:53:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0NzY3NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443847674", "bodyText": "Yes, but this is telling us that it couldn't kill the process, or something. Whatever 255 means. This is a problem that we cannot ignore.", "author": "MikeDombo", "createdAt": "2020-06-22T21:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg1NDU3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443854570", "bodyText": "I think we should use our own process runner anyway instead of the zt runner. You can use the WindowsProcess to get the PID, then call the same command, but use our Exec. This way we can log the stdout and stderr. Maybe that will explain what is wrong.", "author": "MikeDombo", "createdAt": "2020-06-22T22:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMxMzUyNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r444313526", "bodyText": "It was quite hard to reprod.  But in one instance, we were trying to kill a process gracefully. Then waited for 2 sec and checked if the process was killed. If the process was not killed, we forcefully killed it again. The above stack was the error of a forceful kill. In this instance (maybe things were slower when debugging), the process was not there anymore the 2nd time when we tried to kill the process, resulting in an error. I made a change in WindowsPlatform.java to ignore such case.", "author": "fufranci", "createdAt": "2020-06-23T15:28:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "d719126d63b0122e32e3208aeac0124b6ddb037f", "chunk": "diff --git a/src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java b/src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java\nindex fa842635..c778cceb 100644\n--- a/src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java\n+++ b/src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java\n\n@@ -133,7 +132,6 @@ public class ExceptionLogProtector implements BeforeEachCallback, AfterEachCallb\n         ignoreExceptionWithMessageSubstring(context, \"Forbidden (Service: null; Status Code: 403;\");\n \n         ignoreExceptionOfType(context, RejectedExecutionException.class);\n-        ignoreExceptionOfType(context, InvalidExitValueException.class);\n     }\n \n     @Override\n"}}, {"oid": "d719126d63b0122e32e3208aeac0124b6ddb037f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d719126d63b0122e32e3208aeac0124b6ddb037f", "message": "Ignore InvalidExitValueException if the process is not alive anymore", "committedDate": "2020-06-23T16:38:08Z", "type": "forcePushed"}, {"oid": "a3e7c59bf899d864342ac93840d03df916956c81", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a3e7c59bf899d864342ac93840d03df916956c81", "message": "Ignore InvalidExitValueException if the process is not alive anymore", "committedDate": "2020-06-29T21:40:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg2MzMzNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r447863335", "bodyText": "Nice abstraction. Like it a lot.", "author": "leaf94", "createdAt": "2020-06-30T17:36:14Z", "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "diffHunk": "@@ -283,7 +286,7 @@ public Exec withExec(String... c) {\n     }\n \n     public Exec withShell(String s) {\n-        return withExec(\"sh\", \"-c\", s);\n+        return withExec(Platform.getInstance().getShellForCommand(s));", "originalCommit": "4aa0d1227cd83bf21533f1c2490590aaece8d82e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "52d61c335e6f0455fb944f0c6df84e3d21234a41", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/52d61c335e6f0455fb944f0c6df84e3d21234a41", "message": "Try on Windows", "committedDate": "2020-07-02T04:30:50Z", "type": "commit"}, {"oid": "28b6a0be0b7d5fa76b27434cd12812ca6d3fb218", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/28b6a0be0b7d5fa76b27434cd12812ca6d3fb218", "message": "Try on Windows", "committedDate": "2020-07-02T04:30:50Z", "type": "commit"}, {"oid": "2e1128db046a5a03c6ba7daf41ee156f654acd70", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2e1128db046a5a03c6ba7daf41ee156f654acd70", "message": "Add codestyle", "committedDate": "2020-07-02T04:30:50Z", "type": "commit"}, {"oid": "ad84e155f0c196bb3b123d9494c4f8b535b3f8a9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ad84e155f0c196bb3b123d9494c4f8b535b3f8a9", "message": "FIxing tests", "committedDate": "2020-07-02T04:30:50Z", "type": "commit"}, {"oid": "cee62e74279f620a35637cb41c743de47a977e0b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cee62e74279f620a35637cb41c743de47a977e0b", "message": "Test fixes", "committedDate": "2020-07-02T04:33:59Z", "type": "commit"}, {"oid": "940e33149911646547f3e8e640390ddd5120f38a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/940e33149911646547f3e8e640390ddd5120f38a", "message": "Fix more tests", "committedDate": "2020-07-02T04:34:08Z", "type": "commit"}, {"oid": "4ba3ccfaddf8cef8930dd43416d6d0125de82748", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4ba3ccfaddf8cef8930dd43416d6d0125de82748", "message": "More test fixes", "committedDate": "2020-07-02T04:34:08Z", "type": "commit"}, {"oid": "001bd31fec9217175c64e9514df9fd2b7c2af1b3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/001bd31fec9217175c64e9514df9fd2b7c2af1b3", "message": "More test fixes", "committedDate": "2020-07-02T04:34:08Z", "type": "commit"}, {"oid": "22c50602fc53e8d7cb7caa0dd96de3b89f28646b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/22c50602fc53e8d7cb7caa0dd96de3b89f28646b", "message": "All non-mocked, non-e2e tests passing", "committedDate": "2020-07-02T04:34:08Z", "type": "commit"}, {"oid": "206637dac4d3d9a03ff08b88749d6f3a0ba5eb76", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/206637dac4d3d9a03ff08b88749d6f3a0ba5eb76", "message": "All tests (non-e2e) passing", "committedDate": "2020-07-02T04:37:11Z", "type": "commit"}, {"oid": "5d37bf8628a730c87178b9d3628b752a333b1f72", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5d37bf8628a730c87178b9d3628b752a333b1f72", "message": "Fix checkstyle", "committedDate": "2020-07-02T04:37:16Z", "type": "commit"}, {"oid": "0ec3328a2385c95853f74d96aacddffaf3f97bbd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0ec3328a2385c95853f74d96aacddffaf3f97bbd", "message": "FIx pmd", "committedDate": "2020-07-02T04:37:16Z", "type": "commit"}, {"oid": "9ba6ac69faa89bc318c5a7710d0f2f793dda2768", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9ba6ac69faa89bc318c5a7710d0f2f793dda2768", "message": "Fix error", "committedDate": "2020-07-02T04:37:16Z", "type": "commit"}, {"oid": "5249a3a07119728cfdcd7eba22b0db1b33f75eff", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5249a3a07119728cfdcd7eba22b0db1b33f75eff", "message": "Try more", "committedDate": "2020-07-02T04:37:16Z", "type": "commit"}, {"oid": "3eda48542f2079a86fab7c2e46ba57d6c5d63f6b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3eda48542f2079a86fab7c2e46ba57d6c5d63f6b", "message": "Shutdown kernel lifecycle after each test\n\nIf we don't do that, there is a tlog file being kept open, resulting the temp dir can't be removed, causing test error.", "committedDate": "2020-07-02T04:37:16Z", "type": "commit"}, {"oid": "7ce2563b9d4637e385e969646039ff53586fee66", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7ce2563b9d4637e385e969646039ff53586fee66", "message": "Declare direct dependency on a newer version of jna\n\nzeroturnaround brings in an older version jna which tries to load msvcr100.dll.\nmsvcr100.dll is not shipped with recent Windows/VC redist.", "committedDate": "2020-07-02T04:37:16Z", "type": "commit"}, {"oid": "8489de10c5aa24e33f891e38f19ce9bca8c823a9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8489de10c5aa24e33f891e38f19ce9bca8c823a9", "message": "Update maven.yml", "committedDate": "2020-07-02T04:37:16Z", "type": "commit"}, {"oid": "63ae0662329d67c6e2a61bdda7685cf70c594914", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/63ae0662329d67c6e2a61bdda7685cf70c594914", "message": "Fix flaky tests on t3a.medium EC2\n\n* Ignore couple exceptions in ExceptionLogProtector\n* Ran into NPE in ThreadProtector. Add potential fix\n* Test coverage drop to 0.79 on Windows.", "committedDate": "2020-07-02T04:37:17Z", "type": "commit"}, {"oid": "6ed6fadf552204a0b520abb432481589b99567e1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6ed6fadf552204a0b520abb432481589b99567e1", "message": "Update maven.yml", "committedDate": "2020-07-02T04:37:17Z", "type": "commit"}, {"oid": "697d526cb87507fb911ff857864e52f55eb50138", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/697d526cb87507fb911ff857864e52f55eb50138", "message": "Update maven.yml", "committedDate": "2020-07-02T04:37:17Z", "type": "commit"}, {"oid": "ccc7405b167eed768135e87dba39556f574f2209", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ccc7405b167eed768135e87dba39556f574f2209", "message": "Update maven.yml", "committedDate": "2020-07-02T04:37:17Z", "type": "commit"}, {"oid": "5de8b3f0e0c4bdd295e57190b81e0806f581bb9c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5de8b3f0e0c4bdd295e57190b81e0806f581bb9c", "message": "Update maven.yml", "committedDate": "2020-07-02T04:37:17Z", "type": "commit"}, {"oid": "5b2dc2341f529c7616719964acf574c4394aa721", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5b2dc2341f529c7616719964acf574c4394aa721", "message": "Update maven.yml", "committedDate": "2020-07-02T04:37:17Z", "type": "commit"}, {"oid": "372d8e2896e02f67c48e6c9fabff13f352511907", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/372d8e2896e02f67c48e6c9fabff13f352511907", "message": "Update maven.yml", "committedDate": "2020-07-02T04:37:17Z", "type": "commit"}, {"oid": "ba842339752ef515a947b24654c44979eecb9b53", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ba842339752ef515a947b24654c44979eecb9b53", "message": "Update maven.yml", "committedDate": "2020-07-02T04:37:17Z", "type": "commit"}, {"oid": "5d685b1777ed917e41d24789366fb949d04dbfda", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5d685b1777ed917e41d24789366fb949d04dbfda", "message": "Update maven.yml", "committedDate": "2020-07-02T04:37:17Z", "type": "commit"}, {"oid": "edb2974f16069abbc7b7093280ed1e050136da26", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/edb2974f16069abbc7b7093280ed1e050136da26", "message": "Increase timeout for some flaky tests when running on Windows\n\n* Also sleep a little bit in ThreadProtector if there is some active threads.", "committedDate": "2020-07-02T04:41:20Z", "type": "commit"}, {"oid": "776b0e160e85d7833191cbbab3bbe47a3e890cc9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/776b0e160e85d7833191cbbab3bbe47a3e890cc9", "message": "Update maven.yml", "committedDate": "2020-07-02T04:41:26Z", "type": "commit"}, {"oid": "89757d9888c3bc7f3841a020e0a8dfb4a93b811f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/89757d9888c3bc7f3841a020e0a8dfb4a93b811f", "message": "Update maven.yml", "committedDate": "2020-07-02T04:41:26Z", "type": "commit"}, {"oid": "87ae215d5b9c642c380ef7ba2446175a727d8131", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/87ae215d5b9c642c380ef7ba2446175a727d8131", "message": "Run e2e only on Linux for now", "committedDate": "2020-07-02T04:41:26Z", "type": "commit"}, {"oid": "31976d35574c0e32ea4c8002408970dc18c656d3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/31976d35574c0e32ea4c8002408970dc18c656d3", "message": "Clean up\n\n* Remove lenient = true\n* Use Path.compareTo", "committedDate": "2020-07-02T04:43:13Z", "type": "commit"}, {"oid": "d97aa0bc8468fc44453a2778e95b1077d65678b3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d97aa0bc8468fc44453a2778e95b1077d65678b3", "message": "* Change more workflows to run on Linux only\n* Increase some timeouts to fix flakiness\n* Another attempt to fix NPE in ThreadProtector", "committedDate": "2020-07-02T04:44:44Z", "type": "commit"}, {"oid": "3ee3e94e4abcc4d35ea44b7791f0be2379d28749", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3ee3e94e4abcc4d35ea44b7791f0be2379d28749", "message": "Ignore InvalidExitValueException if the process is not alive anymore", "committedDate": "2020-07-02T04:44:47Z", "type": "commit"}, {"oid": "8dc0a600722204f76061ca4e58d3d5ac22973435", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8dc0a600722204f76061ca4e58d3d5ac22973435", "message": "Longer timeout", "committedDate": "2020-07-02T04:45:50Z", "type": "commit"}, {"oid": "3f92c023ecc67598a63e18042f370fdec44fe1a8", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3f92c023ecc67598a63e18042f370fdec44fe1a8", "message": "longer timeouts", "committedDate": "2020-07-02T04:45:54Z", "type": "commit"}, {"oid": "3651d2944a037dcbf540a034336e3302a44fc4a6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3651d2944a037dcbf540a034336e3302a44fc4a6", "message": "fix test", "committedDate": "2020-07-02T04:45:54Z", "type": "commit"}, {"oid": "dea1ea2ae85e85a8a89432aae71b7250ffda7c1d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dea1ea2ae85e85a8a89432aae71b7250ffda7c1d", "message": "rename code style file for Intellij\nFine adjust coverage limit", "committedDate": "2020-07-02T04:46:46Z", "type": "commit"}, {"oid": "662ebc6e28661c189a345ff04f80758255141f76", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/662ebc6e28661c189a345ff04f80758255141f76", "message": "* coverage adjustment\n* port new code - need to merge this quick!", "committedDate": "2020-07-02T05:36:25Z", "type": "commit"}, {"oid": "662ebc6e28661c189a345ff04f80758255141f76", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/662ebc6e28661c189a345ff04f80758255141f76", "message": "* coverage adjustment\n* port new code - need to merge this quick!", "committedDate": "2020-07-02T05:36:25Z", "type": "forcePushed"}, {"oid": "165ada26ba9a5555df135372e32962f130137ca8", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/165ada26ba9a5555df135372e32962f130137ca8", "message": "Clean up e2e-test to run on Linux only (revert back to same as master)", "committedDate": "2020-07-02T17:00:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2ODM0MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r449168340", "bodyText": "Can this be removed now? or will it be back after rebasing with Fahad's fix?", "author": "shaguptashaikh", "createdAt": "2020-07-02T17:29:10Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceDependencyLifecycleTest.java", "diffHunk": "@@ -52,6 +53,10 @@\n     private static final String SoftDependency = \"SoftDependency\";\n     private static final Logger logger = LogManager.getLogger(ServiceDependencyLifecycleTest.class);\n \n+    private static final int TEST_ROUTINE_SHORT_TIMEOUT = 15;\n+    private static final int TEST_ROUTINE_MEDIUM_TIMEOUT = 20;\n+    //private static final int TEST_ROUTINE_LONG_TIMEOUT = 30;", "originalCommit": "165ada26ba9a5555df135372e32962f130137ca8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4ODA0Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r451888043", "bodyText": "Could you remove this unused constant?", "author": "shaguptashaikh", "createdAt": "2020-07-08T23:56:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2ODM0MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "ca43475704a41dc21efe0e68ee9ba55f43247434", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ca43475704a41dc21efe0e68ee9ba55f43247434", "message": "Merge remote-tracking branch 'origin/master' into windows", "committedDate": "2020-07-08T22:54:08Z", "type": "commit"}, {"oid": "9dab52b1bc887762484027a148f5668087708e4a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9dab52b1bc887762484027a148f5668087708e4a", "message": "Merge remote-tracking branch 'origin/master' into windows", "committedDate": "2020-07-08T23:52:42Z", "type": "commit"}]}