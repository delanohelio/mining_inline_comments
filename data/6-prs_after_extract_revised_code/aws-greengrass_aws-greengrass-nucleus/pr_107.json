{"pr_number": 107, "pr_title": "Refactor kernel config to change requires to dependencies and use a list instead of csv", "pr_createdAt": "2020-03-11T18:04:47Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107", "timeline": [{"oid": "01b10ff835a04d207513868bb52d49f0928894a9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/01b10ff835a04d207513868bb52d49f0928894a9", "message": "Change requires config key to dependencies, Change dependencies config values type from csv to list of strings", "committedDate": "2020-03-11T20:40:57Z", "type": "forcePushed"}, {"oid": "b5f0bb9f5158c96c243aa30b64a43fe06af17ef9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b5f0bb9f5158c96c243aa30b64a43fe06af17ef9", "message": "Change requires config key to dependencies, Change dependencies config values type from csv to list of strings", "committedDate": "2020-03-12T04:55:56Z", "type": "forcePushed"}, {"oid": "1776577fd96a0d2a8f44081e52046d267927ff10", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1776577fd96a0d2a8f44081e52046d267927ff10", "message": "Add bin, config, work, metrics to .gitignore", "committedDate": "2020-03-12T05:09:57Z", "type": "commit"}, {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a", "message": "Change requires config key to dependencies, Change dependencies config values type from csv to list of strings", "committedDate": "2020-03-12T05:10:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwNzcwMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391807700", "bodyText": "Nit - Dep doesn't convey very well that it's dependency, maybe we could just name is newServiceDependencies", "author": "shaguptashaikh", "createdAt": "2020-03-12T18:18:38Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "diffHunk": "@@ -183,18 +188,22 @@ void GIVEN_kernel_running_single_service_WHEN_merge_change_adding_nested_depende\n             }\n         });\n \n-        List<String> originalRunningServices =\n+        List<String> serviceList =\n                 kernel.getMain().getDependencies().keySet().stream().map(EvergreenService::getName)\n                         .collect(Collectors.toList());\n+        serviceList.add(\"new_service\");\n+\n+        List<String> newServiceDepList = new ArrayList<String>();", "originalCommit": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzIxNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867216", "bodyText": "Removed due to other comments", "author": "chaurah", "createdAt": "2020-03-12T20:08:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwNzcwMA=="}], "type": "inlineReview", "revised_code": {"commit": "0e47201ce1b0d6b3d3e1f171fb7580cbdd3fbb11", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java\nindex 7b10d04b0..ee2d8c59d 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java\n\n@@ -193,8 +194,6 @@ class ServiceConfigMergingTest {\n                         .collect(Collectors.toList());\n         serviceList.add(\"new_service\");\n \n-        List<String> newServiceDepList = new ArrayList<String>();\n-        newServiceDepList.add(\"new_service2\");\n         kernel.mergeInNewConfig(\"id\", System.currentTimeMillis(), new HashMap<Object, Object>() {{\n             put(\"services\", new HashMap<Object, Object>() {{\n                 put(\"main\",new HashMap<Object, Object>() {{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MTQwNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391841407", "bodyText": "I prefer use Arrays.asList(\"new_service2\") instead of constructing the object outside.", "author": "ShirleyZheng92", "createdAt": "2020-03-12T19:23:34Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "diffHunk": "@@ -183,18 +188,22 @@ void GIVEN_kernel_running_single_service_WHEN_merge_change_adding_nested_depende\n             }\n         });\n \n-        List<String> originalRunningServices =\n+        List<String> serviceList =\n                 kernel.getMain().getDependencies().keySet().stream().map(EvergreenService::getName)\n                         .collect(Collectors.toList());\n+        serviceList.add(\"new_service\");\n+\n+        List<String> newServiceDepList = new ArrayList<String>();\n+        newServiceDepList.add(\"new_service2\");\n         kernel.mergeInNewConfig(\"id\", System.currentTimeMillis(), new HashMap<Object, Object>() {{\n             put(\"services\", new HashMap<Object, Object>() {{\n                 put(\"main\",new HashMap<Object, Object>() {{\n-                    put(\"requires\", String.join(\",\", originalRunningServices) + \",new_service\");\n+                    put(\"dependencies\", serviceList);\n                 }});\n \n                 put(\"new_service\",new HashMap<Object, Object>() {{\n                     put(\"run\", \"sleep 60\");\n-                    put(\"requires\", \"new_service2\");\n+                    put(\"dependencies\", newServiceDepList);", "originalCommit": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzM1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867356", "bodyText": "Done", "author": "chaurah", "createdAt": "2020-03-12T20:09:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MTQwNw=="}], "type": "inlineReview", "revised_code": {"commit": "0e47201ce1b0d6b3d3e1f171fb7580cbdd3fbb11", "chunk": "diff --git a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java\nindex 7b10d04b0..ee2d8c59d 100644\n--- a/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java\n+++ b/src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java\n\n@@ -193,8 +194,6 @@ class ServiceConfigMergingTest {\n                         .collect(Collectors.toList());\n         serviceList.add(\"new_service\");\n \n-        List<String> newServiceDepList = new ArrayList<String>();\n-        newServiceDepList.add(\"new_service2\");\n         kernel.mergeInNewConfig(\"id\", System.currentTimeMillis(), new HashMap<Object, Object>() {{\n             put(\"services\", new HashMap<Object, Object>() {{\n                 put(\"main\",new HashMap<Object, Object>() {{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MzU2MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391843560", "bodyText": "NIT: since you remove the comma-separated string, using regex parse may be too  much here. Just use String.split(\":\")", "author": "ShirleyZheng92", "createdAt": "2020-03-12T19:27:56Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -783,15 +788,17 @@ public void postInject() {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(String dependencyList) throws Exception {\n-        Matcher m = DEP_PARSE.matcher(dependencyList);\n+    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();\n-        while (m.find()) {\n-            Pair<EvergreenService, State> dep = parseSingleDependency(m.group(1), m.group(3));\n-            ret.put(dep.getLeft(), dep.getRight());\n-        }\n-        if (!m.hitEnd()) {\n-            throw new Exception(\"Bad dependency syntax\");\n+        for (String depName : dependencyList) {\n+            Matcher m = DEP_PARSE.matcher(depName);", "originalCommit": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzQ4NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867485", "bodyText": "Updated", "author": "chaurah", "createdAt": "2020-03-12T20:09:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MzU2MA=="}], "type": "inlineReview", "revised_code": {"commit": "0e47201ce1b0d6b3d3e1f171fb7580cbdd3fbb11", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java b/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java\nindex be24ebaf6..3a879e9cc 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java\n\n@@ -788,17 +784,17 @@ public class EvergreenService implements InjectionActions, Closeable {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n+    private Map<EvergreenService, State> getDependencyStateMap(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();\n-        for (String depName : dependencyList) {\n-            Matcher m = DEP_PARSE.matcher(depName);\n-            while (m.find()) {\n-                Pair<EvergreenService, State> dep = parseSingleDependency(m.group(1), m.group(3));\n-                ret.put(dep.getLeft(), dep.getRight());\n-            }\n-            if (!m.hitEnd()) {\n+        for (String dependency : dependencyList) {\n+            String [] dependencyInfo = dependency.split(\":\");\n+            if (dependencyInfo.length == 0 || dependencyInfo.length > 2) {\n                 throw new Exception(\"Bad dependency syntax\");\n             }\n+            Pair<EvergreenService, State> dep\n+                    = parseSingleDependency(dependencyInfo[0],\n+                                            dependencyInfo.length > 1 ? dependencyInfo[1] : null);\n+            ret.put(dep.getLeft(), dep.getRight());\n         }\n         return ret;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0OTM5Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391849396", "bodyText": "Pattern needs to change now? We don't expect \",;\" at the end of these strings now?", "author": "abanthiy", "createdAt": "2020-03-12T19:40:23Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -783,15 +788,17 @@ public void postInject() {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(String dependencyList) throws Exception {\n-        Matcher m = DEP_PARSE.matcher(dependencyList);\n+    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();\n-        while (m.find()) {\n-            Pair<EvergreenService, State> dep = parseSingleDependency(m.group(1), m.group(3));\n-            ret.put(dep.getLeft(), dep.getRight());\n-        }\n-        if (!m.hitEnd()) {\n-            throw new Exception(\"Bad dependency syntax\");\n+        for (String depName : dependencyList) {\n+            Matcher m = DEP_PARSE.matcher(depName);", "originalCommit": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzczNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867736", "bodyText": "Pattern has been replaced with split.", "author": "chaurah", "createdAt": "2020-03-12T20:09:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0OTM5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0e47201ce1b0d6b3d3e1f171fb7580cbdd3fbb11", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java b/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java\nindex be24ebaf6..3a879e9cc 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java\n\n@@ -788,17 +784,17 @@ public class EvergreenService implements InjectionActions, Closeable {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n+    private Map<EvergreenService, State> getDependencyStateMap(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();\n-        for (String depName : dependencyList) {\n-            Matcher m = DEP_PARSE.matcher(depName);\n-            while (m.find()) {\n-                Pair<EvergreenService, State> dep = parseSingleDependency(m.group(1), m.group(3));\n-                ret.put(dep.getLeft(), dep.getRight());\n-            }\n-            if (!m.hitEnd()) {\n+        for (String dependency : dependencyList) {\n+            String [] dependencyInfo = dependency.split(\":\");\n+            if (dependencyInfo.length == 0 || dependencyInfo.length > 2) {\n                 throw new Exception(\"Bad dependency syntax\");\n             }\n+            Pair<EvergreenService, State> dep\n+                    = parseSingleDependency(dependencyInfo[0],\n+                                            dependencyInfo.length > 1 ? dependencyInfo[1] : null);\n+            ret.put(dep.getLeft(), dep.getRight());\n         }\n         return ret;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0OTc0Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391849743", "bodyText": "Would prefer a better naming here. Just indicate what the map is", "author": "abanthiy", "createdAt": "2020-03-12T19:41:01Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -783,15 +788,17 @@ public void postInject() {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(String dependencyList) throws Exception {\n-        Matcher m = DEP_PARSE.matcher(dependencyList);\n+    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();", "originalCommit": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzkzMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867933", "bodyText": "Updated", "author": "chaurah", "createdAt": "2020-03-12T20:09:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0OTc0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0e47201ce1b0d6b3d3e1f171fb7580cbdd3fbb11", "chunk": "diff --git a/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java b/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java\nindex be24ebaf6..3a879e9cc 100644\n--- a/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java\n+++ b/src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java\n\n@@ -788,17 +784,17 @@ public class EvergreenService implements InjectionActions, Closeable {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n+    private Map<EvergreenService, State> getDependencyStateMap(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();\n-        for (String depName : dependencyList) {\n-            Matcher m = DEP_PARSE.matcher(depName);\n-            while (m.find()) {\n-                Pair<EvergreenService, State> dep = parseSingleDependency(m.group(1), m.group(3));\n-                ret.put(dep.getLeft(), dep.getRight());\n-            }\n-            if (!m.hitEnd()) {\n+        for (String dependency : dependencyList) {\n+            String [] dependencyInfo = dependency.split(\":\");\n+            if (dependencyInfo.length == 0 || dependencyInfo.length > 2) {\n                 throw new Exception(\"Bad dependency syntax\");\n             }\n+            Pair<EvergreenService, State> dep\n+                    = parseSingleDependency(dependencyInfo[0],\n+                                            dependencyInfo.length > 1 ? dependencyInfo[1] : null);\n+            ret.put(dep.getLeft(), dep.getRight());\n         }\n         return ret;\n     }\n"}}, {"oid": "0e47201ce1b0d6b3d3e1f171fb7580cbdd3fbb11", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0e47201ce1b0d6b3d3e1f171fb7580cbdd3fbb11", "message": "Change requires config key to dependencies, Change dependencies config values type from csv to list of strings", "committedDate": "2020-03-12T20:08:30Z", "type": "commit"}, {"oid": "0e47201ce1b0d6b3d3e1f171fb7580cbdd3fbb11", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0e47201ce1b0d6b3d3e1f171fb7580cbdd3fbb11", "message": "Change requires config key to dependencies, Change dependencies config values type from csv to list of strings", "committedDate": "2020-03-12T20:08:30Z", "type": "forcePushed"}]}