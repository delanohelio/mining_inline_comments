{"pr_number": 1825, "pr_title": "DataChunkInputStream can cause deadlock if handled by the same thread\u2026", "pr_createdAt": "2020-05-19T12:07:26Z", "pr_url": "https://github.com/oracle/helidon/pull/1825", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyODA3Nw==", "url": "https://github.com/oracle/helidon/pull/1825#discussion_r427328077", "bodyText": "It is DataChunk, not DataChunked", "author": "tomas-langer", "createdAt": "2020-05-19T14:05:12Z", "path": "tests/integration/webclient/src/test/java/io/helidon/tests/integration/webclient/MediaContextTest.java", "diffHunk": "@@ -161,7 +165,38 @@ public void testRequestSpecificReader() throws Exception {\n                 .get();\n     }\n \n+    @Test\n+    public void testInputStreamSameThread() throws ExecutionException, InterruptedException {\n+        try {\n+            webClient.get()\n+                    .request(InputStream.class)\n+                    .thenApply(it -> {\n+                        try {\n+                            it.readAllBytes();\n+                        } catch (IOException ignored) {\n+                        }\n+                        fail(\"This should have failed!\");\n+                        return CompletableFuture.completedFuture(it);\n+                    })\n+                    .toCompletableFuture()\n+                    .get();\n+        } catch (ExecutionException exception) {\n+            if (exception.getCause() instanceof IllegalStateException) {\n+                assertThat(exception.getCause().getMessage(),\n+                           is(\"DataChunkedInputStream needs to be handled in separate thread to prevent deadlock.\"));", "originalCommit": "72f725b0f3115d93960c63a259269e8a4e10eeca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyODQ3Nw==", "url": "https://github.com/oracle/helidon/pull/1825#discussion_r427328477", "bodyText": "Also use assertThrows", "author": "tomas-langer", "createdAt": "2020-05-19T14:05:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyODA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQwNjkzMw==", "url": "https://github.com/oracle/helidon/pull/1825#discussion_r427406933", "bodyText": "implemented", "author": "Verdent", "createdAt": "2020-05-19T15:46:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyODA3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7da764ba13ee425c7c52aa95718e35712bf13114", "chunk": "diff --git a/tests/integration/webclient/src/test/java/io/helidon/tests/integration/webclient/MediaContextTest.java b/tests/integration/webclient/src/test/java/io/helidon/tests/integration/webclient/MediaContextTest.java\nindex 698d6236c..5be06cfbf 100644\n--- a/tests/integration/webclient/src/test/java/io/helidon/tests/integration/webclient/MediaContextTest.java\n+++ b/tests/integration/webclient/src/test/java/io/helidon/tests/integration/webclient/MediaContextTest.java\n\n@@ -166,8 +167,8 @@ public class MediaContextTest extends TestParent {\n     }\n \n     @Test\n-    public void testInputStreamSameThread() throws ExecutionException, InterruptedException {\n-        try {\n+    public void testInputStreamSameThread() {\n+        ExecutionException exception = assertThrows(ExecutionException.class, () -> {\n             webClient.get()\n                     .request(InputStream.class)\n                     .thenApply(it -> {\n"}}, {"oid": "7da764ba13ee425c7c52aa95718e35712bf13114", "url": "https://github.com/oracle/helidon/commit/7da764ba13ee425c7c52aa95718e35712bf13114", "message": "DataChunkInputStream can cause deadlock if handled by the same thread as response\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-20T13:54:56Z", "type": "commit"}, {"oid": "7da764ba13ee425c7c52aa95718e35712bf13114", "url": "https://github.com/oracle/helidon/commit/7da764ba13ee425c7c52aa95718e35712bf13114", "message": "DataChunkInputStream can cause deadlock if handled by the same thread as response\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-20T13:54:56Z", "type": "forcePushed"}, {"oid": "e584f54cbb9c974e4f248ac96e33ad1f02177d06", "url": "https://github.com/oracle/helidon/commit/e584f54cbb9c974e4f248ac96e33ad1f02177d06", "message": "javadoc fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-20T14:22:28Z", "type": "commit"}, {"oid": "ea8ae51d7e20bc0c3a5d562e2a41ae5478316e9f", "url": "https://github.com/oracle/helidon/commit/ea8ae51d7e20bc0c3a5d562e2a41ae5478316e9f", "message": "javadoc change\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-21T10:49:52Z", "type": "commit"}]}