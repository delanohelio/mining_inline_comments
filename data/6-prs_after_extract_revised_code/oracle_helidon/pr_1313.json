{"pr_number": 1313, "pr_title": "Fixed issues with IDCS and OIDC provider.", "pr_createdAt": "2020-01-17T13:28:26Z", "pr_url": "https://github.com/oracle/helidon/pull/1313", "timeline": [{"oid": "fffc7dce15ac5c95bc0f59e0a63dbdc799798d1e", "url": "https://github.com/oracle/helidon/commit/fffc7dce15ac5c95bc0f59e0a63dbdc799798d1e", "message": "Fixed issues with IDCS and OIDC provider.\nCookie now configured to prevent infinite redirects.\nWebServer security for scopes works as it should.\nMP integration with WebServer security works as it should.\nExamples are clearly separated between SE and MP.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-01-17T13:47:54Z", "type": "forcePushed"}, {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3", "url": "https://github.com/oracle/helidon/commit/6c60358bfc2cbfe6705b9c97128174cc6723edb3", "message": "Fixed issues with IDCS and OIDC provider.\nCookie now configured to prevent infinite redirects.\nWebServer security for scopes works as it should.\nMP integration with WebServer security works as it should.\nExamples are clearly separated between SE and MP.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-01-17T13:53:14Z", "type": "commit"}, {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3", "url": "https://github.com/oracle/helidon/commit/6c60358bfc2cbfe6705b9c97128174cc6723edb3", "message": "Fixed issues with IDCS and OIDC provider.\nCookie now configured to prevent infinite redirects.\nWebServer security for scopes works as it should.\nMP integration with WebServer security works as it should.\nExamples are clearly separated between SE and MP.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-01-17T13:53:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTU3NQ==", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368219575", "bodyText": "shouldn't the string be rendered from the frontend URI in application.yaml?", "author": "FWiesner", "createdAt": "2020-01-18T10:22:30Z", "path": "examples/microprofile/idcs/src/main/java/io/helidon/examples/microprofile/security/idcs/IdcsMain.java", "diffHunk": "@@ -35,13 +34,16 @@ private IdcsMain() {\n      * @throws IOException when logging configuration fails\n      */\n     public static void main(String[] args) throws IOException {\n-        LogManager.getLogManager().readConfiguration(IdcsMain.class.getResourceAsStream(\"/logging.properties\"));\n         Server.create().start();\n \n         System.out.println(\"Endpoints:\");\n         System.out.println(\"Login\");\n         System.out.println(\"  http://localhost:7987/rest/login\");\n         System.out.println(\"Full security with scopes and roles (see IdcsResource.java)\");\n         System.out.println(\"  http://localhost:7987/rest/scopes\");\n+        System.out.println(\"A protected reactive service (see application.yaml - security.web-server)\");\n+        System.out.println(\"  http://localhost:7987/reactive\");\n+        System.out.println(\"A protected static resource (see application.yaml - security.web-server\");\n+        System.out.println(\"  http://localhost:7987/web/resource.html\");", "originalCommit": "6c60358bfc2cbfe6705b9c97128174cc6723edb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1NjUyNg==", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368456526", "bodyText": "That is a possibility, though these printouts are really for the sake of the example. In a real application sitting in a container, such messages are useless. So I expect them to be removed.", "author": "tomas-langer", "createdAt": "2020-01-20T09:55:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "da4547a51cb3025310d9fee2997b07222f7cdb32", "chunk": "diff --git a/examples/microprofile/idcs/src/main/java/io/helidon/examples/microprofile/security/idcs/IdcsMain.java b/examples/microprofile/idcs/src/main/java/io/helidon/examples/microprofile/security/idcs/IdcsMain.java\nindex 109e63d1fa..80b7a6a4b0 100644\n--- a/examples/microprofile/idcs/src/main/java/io/helidon/examples/microprofile/security/idcs/IdcsMain.java\n+++ b/examples/microprofile/idcs/src/main/java/io/helidon/examples/microprofile/security/idcs/IdcsMain.java\n\n@@ -31,9 +29,8 @@ public final class IdcsMain {\n      * Start the server and use the application picked up by CDI.\n      *\n      * @param args command line arguments, ignored\n-     * @throws IOException when logging configuration fails\n      */\n-    public static void main(String[] args) throws IOException {\n+    public static void main(String[] args) {\n         Server.create().start();\n \n         System.out.println(\"Endpoints:\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA==", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368219870", "bodyText": "I think the change in the defaults makes sense with Oracle-apps that use IDCS. Nevertheless I would add a textual warning on startup that the cookie policy is now Lax instead of Strict. The developer might then want to turn off the warning or change to Strict, if possible. I wouldn't do this as undocumented/unalerted change. Certainly this has to go into the release notes as well", "author": "FWiesner", "createdAt": "2020-01-18T10:31:35Z", "path": "security/providers/oidc-common/src/main/java/io/helidon/security/providers/oidc/common/OidcConfig.java", "diffHunk": "@@ -260,7 +262,7 @@\n     static final String DEFAULT_COOKIE_PATH = \"/\";\n     static final boolean DEFAULT_COOKIE_HTTP_ONLY = true;\n     static final boolean DEFAULT_COOKIE_SECURE = false;\n-    static final String DEFAULT_COOKIE_SAME_SITE = \"Strict\";\n+    static final String DEFAULT_COOKIE_SAME_SITE = \"Lax\";", "originalCommit": "6c60358bfc2cbfe6705b9c97128174cc6723edb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1NjgxOA==", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368456818", "bodyText": "You are right", "author": "tomas-langer", "createdAt": "2020-01-20T09:56:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1NzIxMg==", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368457212", "bodyText": "Although this problem is not specific to IDCS, it happens with any OIDC provider.", "author": "tomas-langer", "createdAt": "2020-01-20T09:56:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2MDY1Mw==", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368460653", "bodyText": "For version 2.0 I will document this in changelog. For version 1.x I will add a warning message.", "author": "tomas-langer", "createdAt": "2020-01-20T10:03:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2NjE1Mg==", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368466152", "bodyText": "Although this problem is not specific to IDCS, it happens with any OIDC provider.\n\nany OIDC provider that is on a separate domain", "author": "FWiesner", "createdAt": "2020-01-20T10:14:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0MDQ0Ng==", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368540446", "bodyText": "True. Maybe I should be more clever about it and just compare frontend host with the host of the OIDC provider?", "author": "tomas-langer", "createdAt": "2020-01-20T13:13:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2Mjg2OQ==", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368662869", "bodyText": "Done and logging an info in case this is triggered.", "author": "tomas-langer", "createdAt": "2020-01-20T17:32:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "da4547a51cb3025310d9fee2997b07222f7cdb32", "url": "https://github.com/oracle/helidon/commit/da4547a51cb3025310d9fee2997b07222f7cdb32", "message": "Review changes\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-01-20T10:35:25Z", "type": "commit"}, {"oid": "5baad3edd80d9055e0dd2c4cddda3ac766dd5610", "url": "https://github.com/oracle/helidon/commit/5baad3edd80d9055e0dd2c4cddda3ac766dd5610", "message": "Using strict Same-Site when frontend and identity hosts match.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-01-20T17:31:14Z", "type": "commit"}]}