{"pr_number": 1715, "pr_title": "Update examples", "pr_createdAt": "2020-05-01T23:18:10Z", "pr_url": "https://github.com/oracle/helidon/pull/1715", "timeline": [{"oid": "25b90a9b3cdc547a3159763229cbcf6599460ed8", "url": "https://github.com/oracle/helidon/commit/25b90a9b3cdc547a3159763229cbcf6599460ed8", "message": "Update examples to get rid of deprecated methods.\nDon't use Application classes when not needed\nRemove references to JDK8 in readmes\nAnd other minor changes", "committedDate": "2020-05-01T22:57:00Z", "type": "commit"}, {"oid": "89ee5100255d9244c9552525929e27f31ff47d56", "url": "https://github.com/oracle/helidon/commit/89ee5100255d9244c9552525929e27f31ff47d56", "message": "Fix copyrights", "committedDate": "2020-05-01T23:16:32Z", "type": "commit"}, {"oid": "3f6786dcdf7c271d9a4d3b2f48f74146f1516575", "url": "https://github.com/oracle/helidon/commit/3f6786dcdf7c271d9a4d3b2f48f74146f1516575", "message": "Checkstyle and copyright fixes", "committedDate": "2020-05-01T23:55:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDg3Ng==", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r418970876", "bodyText": "The message is wrong - this uses the MP Config, not Helidon config", "author": "tomas-langer", "createdAt": "2020-05-02T15:22:22Z", "path": "examples/microprofile/hello-world-explicit/src/main/java/io/helidon/microprofile/example/helloworld/explicit/Main.java", "diffHunk": "@@ -34,7 +34,6 @@ private Main() {\n      */\n     public static void main(String[] args) {\n         Server server = Server.builder()\n-                .addApplication(HelloWorldApplication.class)\n                 // using a customized helidon config instance (in this case the default...)", "originalCommit": "3f6786dcdf7c271d9a4d3b2f48f74146f1516575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNjk3MQ==", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r419616971", "bodyText": "Fixed", "author": "barchetta", "createdAt": "2020-05-04T17:51:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDg3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3de919442311720ea14e3e3f486a8c1323136b60", "chunk": "diff --git a/examples/microprofile/hello-world-explicit/src/main/java/io/helidon/microprofile/example/helloworld/explicit/Main.java b/examples/microprofile/hello-world-explicit/src/main/java/io/helidon/microprofile/example/helloworld/explicit/Main.java\nindex 5cab595e8..ad6d5f38d 100644\n--- a/examples/microprofile/hello-world-explicit/src/main/java/io/helidon/microprofile/example/helloworld/explicit/Main.java\n+++ b/examples/microprofile/hello-world-explicit/src/main/java/io/helidon/microprofile/example/helloworld/explicit/Main.java\n\n@@ -34,7 +34,7 @@ public class Main {\n      */\n     public static void main(String[] args) {\n         Server server = Server.builder()\n-                // using a customized helidon config instance (in this case the default...)\n+                // Provide a MicroProfile config instance (in this case the default...)\n                 .config(ConfigProviderResolver.instance()\n                                 .getBuilder()\n                                 .build())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDk1Nw==", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r418970957", "bodyText": "This main class seems to be useless.", "author": "tomas-langer", "createdAt": "2020-05-02T15:23:21Z", "path": "examples/microprofile/mp1_1-static-content/src/main/java/io/helidon/microprofile/example/staticc/Main.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020 Oracle and/or its affiliates.", "originalCommit": "3f6786dcdf7c271d9a4d3b2f48f74146f1516575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDk5NA==", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r418970994", "bodyText": "Also type in package name", "author": "tomas-langer", "createdAt": "2020-05-02T15:23:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxODA5Nw==", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r419618097", "bodyText": "staticc? I think that is short for static content. I will leave this as-is for now.", "author": "barchetta", "createdAt": "2020-05-04T17:53:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDk1Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "095d319f99d353f8f2242e9a12e69713d6d7252f", "url": "https://github.com/oracle/helidon/commit/095d319f99d353f8f2242e9a12e69713d6d7252f", "message": "Checkstyle fixes", "committedDate": "2020-05-02T17:32:56Z", "type": "commit"}, {"oid": "3de919442311720ea14e3e3f486a8c1323136b60", "url": "https://github.com/oracle/helidon/commit/3de919442311720ea14e3e3f486a8c1323136b60", "message": "Fix comment", "committedDate": "2020-05-04T17:51:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY2NTQ0OQ==", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r419665449", "bodyText": "That's a lot of empty lines :)", "author": "romain-grecourt", "createdAt": "2020-05-04T19:12:16Z", "path": "examples/webserver/basics/src/main/java/io/helidon/webserver/examples/basics/NameReader.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.webserver.examples.basics;\n+\n+import java.util.concurrent.Flow;\n+\n+import io.helidon.common.GenericType;\n+import io.helidon.common.http.DataChunk;\n+import io.helidon.common.http.MediaType;\n+import io.helidon.common.reactive.Single;\n+import io.helidon.media.common.ContentReaders;\n+import io.helidon.media.common.MessageBodyReader;\n+import io.helidon.media.common.MessageBodyReaderContext;\n+\n+public class NameReader implements MessageBodyReader<Name> {\n+\n+    private NameReader() {\n+    }\n+\n+    static NameReader create() {\n+        return new NameReader();\n+    }\n+\n+    @Override\n+    public <U extends Name> Single<U> read(Flow.Publisher<DataChunk> publisher, GenericType<U> type,\n+                                           MessageBodyReaderContext context) {\n+        return (Single<U>) ContentReaders.readString(publisher, context.charset()).map(Name::new);\n+    }\n+\n+    @Override\n+    public boolean accept(GenericType<?> type, MessageBodyReaderContext context) {\n+        return context.contentType()\n+                .map(ct -> MediaType.parse(\"application/name\").equals(ct))\n+                .map(acceptable -> acceptable && Name.class.isAssignableFrom(type.rawType()))\n+                .orElse(false);\n+    }\n+}\n+\n+", "originalCommit": "3de919442311720ea14e3e3f486a8c1323136b60", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}