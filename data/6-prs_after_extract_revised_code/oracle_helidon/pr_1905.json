{"pr_number": 1905, "pr_title": "Media support methods", "pr_createdAt": "2020-05-29T18:33:09Z", "pr_url": "https://github.com/oracle/helidon/pull/1905", "timeline": [{"oid": "a8cfb7db7e9b1b7b2c5343c14de81bc6d4f5554b", "url": "https://github.com/oracle/helidon/commit/a8cfb7db7e9b1b7b2c5343c14de81bc6d4f5554b", "message": "Get method removed from MessageBodyOperators\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-29T14:53:43Z", "type": "commit"}, {"oid": "06ed00c17b40487637cb7d308d93e02aa65c2d88", "url": "https://github.com/oracle/helidon/commit/06ed00c17b40487637cb7d308d93e02aa65c2d88", "message": "JSON-P support changed\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-29T18:29:57Z", "type": "commit"}, {"oid": "b983e5c04d1839dcfc4d445b64fe2d93675391ae", "url": "https://github.com/oracle/helidon/commit/b983e5c04d1839dcfc4d445b64fe2d93675391ae", "message": "JSON-B support changed\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-29T18:30:18Z", "type": "commit"}, {"oid": "426a6d83c5ffa4e011de73e3d8da87153944fe4c", "url": "https://github.com/oracle/helidon/commit/426a6d83c5ffa4e011de73e3d8da87153944fe4c", "message": "Jackson support changed\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-29T18:30:31Z", "type": "commit"}, {"oid": "16ea884f899660cc460c193f87c9567b4d4b8c91", "url": "https://github.com/oracle/helidon/commit/16ea884f899660cc460c193f87c9567b4d4b8c91", "message": "naming changes and tests fixes\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-29T19:00:28Z", "type": "commit"}, {"oid": "72f0da1bb84617d134379d0c5db6f3b6004ef4a5", "url": "https://github.com/oracle/helidon/commit/72f0da1bb84617d134379d0c5db6f3b6004ef4a5", "message": "writer fixes\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-05-29T19:23:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4OTk2MQ==", "url": "https://github.com/oracle/helidon/pull/1905#discussion_r432989961", "bodyText": "Inconsistency:\nreaderInstance() against newWriter() methods\nThe readerInstance() method is worse, as it prescribes implementation - it is expected to return the same instance every time.\nThe newWriter() method clearly says that it may be a different instance each time (and yet if implementation wants, it can return the same one).\nI would stay with the newXXX methods", "author": "tomas-langer", "createdAt": "2020-05-31T22:15:03Z", "path": "media/jackson/src/main/java/io/helidon/media/jackson/JacksonSupport.java", "diffHunk": "@@ -33,94 +34,114 @@\n /**\n  * Support for Jackson integration.\n  *\n- * For usage examples navigate to the {@link MediaSupport}\n+ * For usage examples navigate to the {@link MediaSupport}.\n  */\n public final class JacksonSupport implements MediaSupport {\n \n-    static {\n-        HelidonFeatures.register(HelidonFlavor.SE, \"Media\", \"Jackson\");\n-    }\n-\n     private static final ObjectMapper MAPPER = new ObjectMapper()\n             .registerModule(new ParameterNamesModule())\n             .registerModule(new Jdk8Module())\n             .registerModule(new JavaTimeModule());\n+    private static final LazyValue<JacksonSupport> DEFAULT = LazyValue.create(() -> new JacksonSupport(MAPPER));\n \n-    private static final JacksonSupport DEFAULT_JACKSON = new JacksonSupport(MAPPER);\n+    static {\n+        HelidonFeatures.register(HelidonFlavor.SE, \"Media\", \"Jackson\");\n+    }\n \n-    private final ObjectMapper objectMapper;\n+    private final JacksonBodyReader reader;\n+    private final JacksonBodyWriter writer;\n \n     private JacksonSupport(final ObjectMapper objectMapper) {\n-        this.objectMapper = objectMapper;\n+        this.reader = JacksonBodyReader.create(objectMapper);\n+        this.writer = JacksonBodyWriter.create(objectMapper);\n     }\n \n     /**\n-     * Creates new Jackson reader instance.\n+     * Creates a new {@link JacksonSupport}.\n      *\n-     * @return Jackson reader instance\n+     * @return a new {@link JacksonSupport}\n      */\n-    public static JacksonBodyReader reader() {\n-        return create().newReader();\n+    public static JacksonSupport create() {\n+        return DEFAULT.get();\n     }\n \n     /**\n-     * Creates new Jackson writer instance.\n+     * Creates a new {@link JacksonSupport}.\n      *\n-     * @return Jackson writer instance\n+     * @param objectMapper must not be {@code null}\n+     * @return a new {@link JacksonSupport}\n      */\n-    public static JacksonBodyWriter writer() {\n-        return create().newWriter();\n+    public static JacksonSupport create(ObjectMapper objectMapper) {\n+        Objects.requireNonNull(objectMapper);\n+        return new JacksonSupport(objectMapper);\n     }\n \n     /**\n-     * Creates new Jackson reader instance.\n+     * Return a default Jackson entity reader.\n      *\n-     * @return Jackson reader instance\n+     * @return default Jackson body writer instance\n      */\n-    public JacksonBodyReader newReader() {\n-        return JacksonBodyReader.create(objectMapper);\n+    public static MessageBodyReader<Object> reader() {\n+        return DEFAULT.get().reader;\n     }\n \n     /**\n-     * Creates new Jackson writer instance.\n+     * Create a new Jackson entity reader based on {@link ObjectMapper} instance.\n      *\n-     * @return Jackson writer instance\n+     * @param objectMapper object mapper instance\n+     * @return new Jackson body reader instance\n      */\n-    public JacksonBodyWriter newWriter() {\n-        return JacksonBodyWriter.create(objectMapper);\n+    public static MessageBodyReader<Object> reader(ObjectMapper objectMapper) {\n+        Objects.requireNonNull(objectMapper);\n+        return JacksonBodyReader.create(objectMapper);\n     }\n \n-    @Override\n-    public Collection<MessageBodyReader<?>> readers() {\n-        return List.of(newReader());\n+    /**\n+     * Return a default Jackson entity writer.\n+     *\n+     * @return default Jackson body writer instance\n+     */\n+    public static MessageBodyWriter<Object> writer() {\n+        return DEFAULT.get().writer;\n     }\n \n-    @Override\n-    public Collection<MessageBodyWriter<?>> writers() {\n-        return List.of(newWriter());\n+    /**\n+     * Create a new Jackson entity writer based on {@link ObjectMapper} instance.\n+     *\n+     * @param objectMapper object mapper instance\n+     * @return new Jackson body writer instance\n+     */\n+    public static MessageBodyWriter<Object> writer(ObjectMapper objectMapper) {\n+        Objects.requireNonNull(objectMapper);\n+        return JacksonBodyWriter.create(objectMapper);\n     }\n \n     /**\n-     * Creates a new {@link JacksonSupport}.\n+     * Return Jackson reader instance.\n      *\n-     * @param objectMapper must not be {@code null}\n-     * @return a new {@link JacksonSupport}\n-     *\n-     * @exception NullPointerException if {@code objectMapper}\n-     * is {@code null}\n+     * @return Jackson reader instance\n      */\n-    public static JacksonSupport create(ObjectMapper objectMapper) {\n-        Objects.requireNonNull(objectMapper);\n-        return new JacksonSupport(objectMapper);\n+    public MessageBodyReader<Object> readerInstance() {", "originalCommit": "72f0da1bb84617d134379d0c5db6f3b6004ef4a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA5MDYxMA==", "url": "https://github.com/oracle/helidon/pull/1905#discussion_r433090610", "bodyText": "Actually this method is not described by any interface, so it is basically up to every support class how it chooses to name it or even decides to have them. Since we are returning every time the same instance of the reader/writer, I think readerInstance() is actually better name here.", "author": "Verdent", "createdAt": "2020-06-01T07:49:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4OTk2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c8eb9ed2967c5eba6ecc684278905d0f8904830e", "chunk": "diff --git a/media/jackson/src/main/java/io/helidon/media/jackson/JacksonSupport.java b/media/jackson/src/main/java/io/helidon/media/jackson/JacksonSupport.java\nindex f68ea3e04..cdb22b995 100644\n--- a/media/jackson/src/main/java/io/helidon/media/jackson/JacksonSupport.java\n+++ b/media/jackson/src/main/java/io/helidon/media/jackson/JacksonSupport.java\n\n@@ -130,7 +130,7 @@ public final class JacksonSupport implements MediaSupport {\n      *\n      * @return Jackson writer instance\n      */\n-    public MessageBodyWriter<Object> newWriter() {\n+    public MessageBodyWriter<Object> writerInstance() {\n         return writer;\n     }\n \n"}}, {"oid": "c5be98be7ef388cb2e277f3c2a871b006c4f268f", "url": "https://github.com/oracle/helidon/commit/c5be98be7ef388cb2e277f3c2a871b006c4f268f", "message": "JsonpSupport import fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-06-01T09:45:15Z", "type": "commit"}, {"oid": "c8eb9ed2967c5eba6ecc684278905d0f8904830e", "url": "https://github.com/oracle/helidon/commit/c8eb9ed2967c5eba6ecc684278905d0f8904830e", "message": "Thomas suggestion implemented\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-06-01T12:10:54Z", "type": "commit"}, {"oid": "6b3fe6c98f7d7aa7269dfd0722b273c1250a5899", "url": "https://github.com/oracle/helidon/commit/6b3fe6c98f7d7aa7269dfd0722b273c1250a5899", "message": "Default operators made package private\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-06-01T12:16:10Z", "type": "commit"}, {"oid": "4f824f2af5d24d8f8c835deba9446f798be1b806", "url": "https://github.com/oracle/helidon/commit/4f824f2af5d24d8f8c835deba9446f798be1b806", "message": "DefaultsProvider fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-06-01T12:19:11Z", "type": "commit"}, {"oid": "eedfc151c40b65729077fc8b80b3bd535c947746", "url": "https://github.com/oracle/helidon/commit/eedfc151c40b65729077fc8b80b3bd535c947746", "message": "checkstyle fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-06-01T12:23:36Z", "type": "commit"}, {"oid": "84c489dda009a375b535deef27d6451544a293e4", "url": "https://github.com/oracle/helidon/commit/84c489dda009a375b535deef27d6451544a293e4", "message": "minor fixes\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-06-01T14:57:50Z", "type": "commit"}]}