{"pr_number": 2479, "pr_title": "MDC logging support", "pr_createdAt": "2020-10-22T08:45:13Z", "pr_url": "https://github.com/oracle/helidon/pull/2479", "timeline": [{"oid": "44d4104f9d4e2a37ff40e6fcdabd86c012dd5d4c", "url": "https://github.com/oracle/helidon/commit/44d4104f9d4e2a37ff40e6fcdabd86c012dd5d4c", "message": "MDC logging support\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T08:38:26Z", "type": "commit"}, {"oid": "8c95c36413efd983521fa8aa79e047ec32febddd", "url": "https://github.com/oracle/helidon/commit/8c95c36413efd983521fa8aa79e047ec32febddd", "message": "TODO removed\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T08:46:51Z", "type": "commit"}, {"oid": "9cdf7385b968ad5453afd8704efbfa12f6d9c651", "url": "https://github.com/oracle/helidon/commit/9cdf7385b968ad5453afd8704efbfa12f6d9c651", "message": "Module name changed\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T08:51:51Z", "type": "commit"}, {"oid": "c6f05c9631730e3efc39a479022dd1593dce62d7", "url": "https://github.com/oracle/helidon/commit/c6f05c9631730e3efc39a479022dd1593dce62d7", "message": "Checkstyle suggestions fixed and minor changes\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T13:12:50Z", "type": "commit"}, {"oid": "4edd19b9fa3a393d3ccacd3c9fbb94970d218192", "url": "https://github.com/oracle/helidon/commit/4edd19b9fa3a393d3ccacd3c9fbb94970d218192", "message": "Log4j added to the bom/pom.xml\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T13:16:10Z", "type": "commit"}, {"oid": "6091048b85d7e4df524f445cd8a63a61dd9f3004", "url": "https://github.com/oracle/helidon/commit/6091048b85d7e4df524f445cd8a63a61dd9f3004", "message": "checkstyle fixes second round\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T13:38:39Z", "type": "commit"}, {"oid": "728ff8ef1f5bdb555ddd634c8d7f88501fc43439", "url": "https://github.com/oracle/helidon/commit/728ff8ef1f5bdb555ddd634c8d7f88501fc43439", "message": "copyright\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T13:47:44Z", "type": "commit"}, {"oid": "4034137625c4cfde422a7de6168ce6fb8e322bc6", "url": "https://github.com/oracle/helidon/commit/4034137625c4cfde422a7de6168ce6fb8e322bc6", "message": "javadoc possible fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T13:59:23Z", "type": "commit"}, {"oid": "a6b1a98b52c540d3a30bb6d152a7821997089876", "url": "https://github.com/oracle/helidon/commit/a6b1a98b52c540d3a30bb6d152a7821997089876", "message": "javadoc fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T14:15:04Z", "type": "commit"}, {"oid": "5e532a90831686a6889463efbc069f6de25f575e", "url": "https://github.com/oracle/helidon/commit/5e532a90831686a6889463efbc069f6de25f575e", "message": "log4j core removed\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T15:58:16Z", "type": "commit"}, {"oid": "00ad5e2bfda4664a5bc3daf3cec012380304fa26", "url": "https://github.com/oracle/helidon/commit/00ad5e2bfda4664a5bc3daf3cec012380304fa26", "message": "scopes changed to provided\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T16:01:44Z", "type": "commit"}, {"oid": "7a4ebd016ac34c77b5a5de845f33e6fed1a311e9", "url": "https://github.com/oracle/helidon/commit/7a4ebd016ac34c77b5a5de845f33e6fed1a311e9", "message": "Javadoc generation disabled\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-22T17:58:31Z", "type": "commit"}, {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "url": "https://github.com/oracle/helidon/commit/e7186e2d4f8f5552fc4f7bc9126c222996727d93", "message": "removed magically appeared copyright\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-10-26T08:40:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzOTk3Nw==", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519939977", "bodyText": "Duplicate javadoc.", "author": "tomas-langer", "createdAt": "2020-11-09T16:22:44Z", "path": "logging/common/src/main/java/io/helidon/logging/package-info.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * Helidon MDC support for delegation of the MDC values to all of the logging frameworks.\n+ */\n+/**", "originalCommit": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "chunk": "diff --git a/logging/common/src/main/java/io/helidon/logging/package-info.java b/logging/common/src/main/java/io/helidon/logging/common/package-info.java\nsimilarity index 90%\nrename from logging/common/src/main/java/io/helidon/logging/package-info.java\nrename to logging/common/src/main/java/io/helidon/logging/common/package-info.java\nindex bb99dcacc..294c314c1 100644\n--- a/logging/common/src/main/java/io/helidon/logging/package-info.java\n+++ b/logging/common/src/main/java/io/helidon/logging/common/package-info.java\n\n@@ -17,7 +17,4 @@\n /**\n  * Helidon MDC support for delegation of the MDC values to all of the logging frameworks.\n  */\n-/**\n- * Helidon MDC logging common classes.\n- */\n-package io.helidon.logging;\n+package io.helidon.logging.common;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0MDM4NA==", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519940384", "bodyText": "Wrong constant name - this is not a loader, it is a list of providers", "author": "tomas-langer", "createdAt": "2020-11-09T16:23:20Z", "path": "logging/common/src/main/java/io/helidon/logging/HelidonMdc.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.ServiceLoader;\n+\n+import io.helidon.common.serviceloader.HelidonServiceLoader;\n+import io.helidon.logging.spi.MdcProvider;\n+\n+/**\n+ * Helidon MDC delegates values across all of the supported logging frameworks on the classpath.\n+ */\n+public class HelidonMdc {\n+\n+    private static final List<MdcProvider> SERVICE_LOADER = HelidonServiceLoader", "originalCommit": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "chunk": "diff --git a/logging/common/src/main/java/io/helidon/logging/HelidonMdc.java b/logging/common/src/main/java/io/helidon/logging/common/HelidonMdc.java\nsimilarity index 77%\nrename from logging/common/src/main/java/io/helidon/logging/HelidonMdc.java\nrename to logging/common/src/main/java/io/helidon/logging/common/HelidonMdc.java\nindex 02e2536df..d0936e960 100644\n--- a/logging/common/src/main/java/io/helidon/logging/HelidonMdc.java\n+++ b/logging/common/src/main/java/io/helidon/logging/common/HelidonMdc.java\n\n@@ -13,21 +13,22 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.helidon.logging;\n+package io.helidon.logging.common;\n \n import java.util.List;\n import java.util.Objects;\n+import java.util.Optional;\n import java.util.ServiceLoader;\n \n import io.helidon.common.serviceloader.HelidonServiceLoader;\n-import io.helidon.logging.spi.MdcProvider;\n+import io.helidon.logging.common.spi.MdcProvider;\n \n /**\n  * Helidon MDC delegates values across all of the supported logging frameworks on the classpath.\n  */\n public class HelidonMdc {\n \n-    private static final List<MdcProvider> SERVICE_LOADER = HelidonServiceLoader\n+    private static final List<MdcProvider> MDC_PROVIDERS = HelidonServiceLoader\n             .builder(ServiceLoader.load(MdcProvider.class)).build().asList();\n \n     private HelidonMdc() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0MjQ0NA==", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519942444", "bodyText": "Inconsistency between set and get operations - set uses Object, get returns String. Seems to me all implementations use String values.\nEither document that the value is coerced into a String, or change the signature.", "author": "tomas-langer", "createdAt": "2020-11-09T16:25:58Z", "path": "logging/common/src/main/java/io/helidon/logging/HelidonMdc.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.ServiceLoader;\n+\n+import io.helidon.common.serviceloader.HelidonServiceLoader;\n+import io.helidon.logging.spi.MdcProvider;\n+\n+/**\n+ * Helidon MDC delegates values across all of the supported logging frameworks on the classpath.\n+ */\n+public class HelidonMdc {\n+\n+    private static final List<MdcProvider> SERVICE_LOADER = HelidonServiceLoader\n+            .builder(ServiceLoader.load(MdcProvider.class)).build().asList();\n+\n+    private HelidonMdc() {\n+        throw new UnsupportedOperationException(\"This class cannot be instantiated\");\n+    }\n+\n+    /**\n+     * Propagate value to all of the {@link MdcProvider} registered via SPI.\n+     *\n+     * @param key entry key\n+     * @param value entry value\n+     */\n+    public static void set(String key, Object value) {", "originalCommit": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "chunk": "diff --git a/logging/common/src/main/java/io/helidon/logging/HelidonMdc.java b/logging/common/src/main/java/io/helidon/logging/common/HelidonMdc.java\nsimilarity index 77%\nrename from logging/common/src/main/java/io/helidon/logging/HelidonMdc.java\nrename to logging/common/src/main/java/io/helidon/logging/common/HelidonMdc.java\nindex 02e2536df..d0936e960 100644\n--- a/logging/common/src/main/java/io/helidon/logging/HelidonMdc.java\n+++ b/logging/common/src/main/java/io/helidon/logging/common/HelidonMdc.java\n\n@@ -13,21 +13,22 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.helidon.logging;\n+package io.helidon.logging.common;\n \n import java.util.List;\n import java.util.Objects;\n+import java.util.Optional;\n import java.util.ServiceLoader;\n \n import io.helidon.common.serviceloader.HelidonServiceLoader;\n-import io.helidon.logging.spi.MdcProvider;\n+import io.helidon.logging.common.spi.MdcProvider;\n \n /**\n  * Helidon MDC delegates values across all of the supported logging frameworks on the classpath.\n  */\n public class HelidonMdc {\n \n-    private static final List<MdcProvider> SERVICE_LOADER = HelidonServiceLoader\n+    private static final List<MdcProvider> MDC_PROVIDERS = HelidonServiceLoader\n             .builder(ServiceLoader.load(MdcProvider.class)).build().asList();\n \n     private HelidonMdc() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0MzQyNg==", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519943426", "bodyText": "Shouldn't this return an Optional? If there is no value, it should be clear (as empty string is a valid value, and null should never be returned in Helidon APIs)", "author": "tomas-langer", "createdAt": "2020-11-09T16:27:17Z", "path": "logging/common/src/main/java/io/helidon/logging/HelidonMdc.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.ServiceLoader;\n+\n+import io.helidon.common.serviceloader.HelidonServiceLoader;\n+import io.helidon.logging.spi.MdcProvider;\n+\n+/**\n+ * Helidon MDC delegates values across all of the supported logging frameworks on the classpath.\n+ */\n+public class HelidonMdc {\n+\n+    private static final List<MdcProvider> SERVICE_LOADER = HelidonServiceLoader\n+            .builder(ServiceLoader.load(MdcProvider.class)).build().asList();\n+\n+    private HelidonMdc() {\n+        throw new UnsupportedOperationException(\"This class cannot be instantiated\");\n+    }\n+\n+    /**\n+     * Propagate value to all of the {@link MdcProvider} registered via SPI.\n+     *\n+     * @param key entry key\n+     * @param value entry value\n+     */\n+    public static void set(String key, Object value) {\n+        SERVICE_LOADER.forEach(provider -> provider.put(key, value));\n+    }\n+\n+    /**\n+     * Remove value with the specific key from all of the instances of {@link MdcProvider}.\n+     *\n+     * @param key key\n+     */\n+    public static void remove(String key) {\n+        SERVICE_LOADER.forEach(provider -> provider.remove(key));\n+    }\n+\n+    /**\n+     * Remove all of the entries bound to the current thread from the instances of {@link MdcProvider}.\n+     */\n+    public static void clear() {\n+        SERVICE_LOADER.forEach(MdcProvider::clear);\n+    }\n+\n+    /**\n+     * Return the first value found to the specific key.\n+     *\n+     * @param key key\n+     * @return found value bound to key\n+     */\n+    public static String get(String key) {", "originalCommit": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "chunk": "diff --git a/logging/common/src/main/java/io/helidon/logging/HelidonMdc.java b/logging/common/src/main/java/io/helidon/logging/common/HelidonMdc.java\nsimilarity index 77%\nrename from logging/common/src/main/java/io/helidon/logging/HelidonMdc.java\nrename to logging/common/src/main/java/io/helidon/logging/common/HelidonMdc.java\nindex 02e2536df..d0936e960 100644\n--- a/logging/common/src/main/java/io/helidon/logging/HelidonMdc.java\n+++ b/logging/common/src/main/java/io/helidon/logging/common/HelidonMdc.java\n\n@@ -13,21 +13,22 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.helidon.logging;\n+package io.helidon.logging.common;\n \n import java.util.List;\n import java.util.Objects;\n+import java.util.Optional;\n import java.util.ServiceLoader;\n \n import io.helidon.common.serviceloader.HelidonServiceLoader;\n-import io.helidon.logging.spi.MdcProvider;\n+import io.helidon.logging.common.spi.MdcProvider;\n \n /**\n  * Helidon MDC delegates values across all of the supported logging frameworks on the classpath.\n  */\n public class HelidonMdc {\n \n-    private static final List<MdcProvider> SERVICE_LOADER = HelidonServiceLoader\n+    private static final List<MdcProvider> MDC_PROVIDERS = HelidonServiceLoader\n             .builder(ServiceLoader.load(MdcProvider.class)).build().asList();\n \n     private HelidonMdc() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0NDA2MA==", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519944060", "bodyText": "Module name should be io.helidon.logging.common", "author": "tomas-langer", "createdAt": "2020-11-09T16:28:10Z", "path": "logging/common/src/main/java/module-info.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * Helidon logging.\n+ */\n+module io.helidon.logging {", "originalCommit": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "chunk": "diff --git a/logging/common/src/main/java/module-info.java b/logging/common/src/main/java/module-info.java\nindex d08dc89b6..9a3a1fc1d 100644\n--- a/logging/common/src/main/java/module-info.java\n+++ b/logging/common/src/main/java/module-info.java\n\n@@ -17,12 +17,12 @@\n /**\n  * Helidon logging.\n  */\n-module io.helidon.logging {\n+module io.helidon.logging.common {\n     requires io.helidon.common.serviceloader;\n \n-    exports io.helidon.logging;\n-    exports io.helidon.logging.spi;\n+    exports io.helidon.logging.common;\n+    exports io.helidon.logging.common.spi;\n \n-    uses io.helidon.logging.spi.MdcProvider;\n+    uses io.helidon.logging.common.spi.MdcProvider;\n \n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0NTQ4Mg==", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519945482", "bodyText": "Javadoc should mark it as a service loader service, so people do not try to use it directly", "author": "tomas-langer", "createdAt": "2020-11-09T16:30:10Z", "path": "logging/jul/src/main/java/io/helidon/logging/jul/JulMdcPropagator.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging.jul;\n+\n+import java.util.Map;\n+\n+import io.helidon.common.context.spi.DataPropagationProvider;\n+\n+/**\n+ * This is propagator of JUL MDC values between different threads.", "originalCommit": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "chunk": "diff --git a/logging/jul/src/main/java/io/helidon/logging/jul/JulMdcPropagator.java b/logging/jul/src/main/java/io/helidon/logging/jul/JulMdcPropagator.java\nindex ec5c6449b..e87b65c15 100644\n--- a/logging/jul/src/main/java/io/helidon/logging/jul/JulMdcPropagator.java\n+++ b/logging/jul/src/main/java/io/helidon/logging/jul/JulMdcPropagator.java\n\n@@ -21,6 +21,7 @@ import io.helidon.common.context.spi.DataPropagationProvider;\n \n /**\n  * This is propagator of JUL MDC values between different threads.\n+ * This class is loaded and used via SPI.\n  */\n public class JulMdcPropagator implements DataPropagationProvider<Map<String, String>> {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0NTYwOQ==", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519945609", "bodyText": "Javadoc should mark it as a service loader service, so people do not try to use it directly", "author": "tomas-langer", "createdAt": "2020-11-09T16:30:18Z", "path": "logging/jul/src/main/java/io/helidon/logging/jul/JulMdcProvider.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging.jul;\n+\n+import io.helidon.logging.spi.MdcProvider;\n+\n+/**\n+ * Provider for setting MDC values to the Java Util Logging MDC support.", "originalCommit": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "chunk": "diff --git a/logging/jul/src/main/java/io/helidon/logging/jul/JulMdcProvider.java b/logging/jul/src/main/java/io/helidon/logging/jul/JulMdcProvider.java\nindex 004c1920f..2c29398a7 100644\n--- a/logging/jul/src/main/java/io/helidon/logging/jul/JulMdcProvider.java\n+++ b/logging/jul/src/main/java/io/helidon/logging/jul/JulMdcProvider.java\n\n@@ -15,15 +15,16 @@\n  */\n package io.helidon.logging.jul;\n \n-import io.helidon.logging.spi.MdcProvider;\n+import io.helidon.logging.common.spi.MdcProvider;\n \n /**\n  * Provider for setting MDC values to the Java Util Logging MDC support.\n+ * This class is loaded and used via SPI.\n  */\n public class JulMdcProvider implements MdcProvider {\n     @Override\n-    public void put(String key, Object value) {\n-        JulMdc.put(key, String.valueOf(value));\n+    public void put(String key, String value) {\n+        JulMdc.put(key, value);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0NjgxNw==", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519946817", "bodyText": "Javadoc should mark it as a service loader service, so people do not try to use it directly", "author": "tomas-langer", "createdAt": "2020-11-09T16:31:59Z", "path": "logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcPropagator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging.slf4j;\n+\n+import java.util.Map;\n+\n+import io.helidon.common.context.spi.DataPropagationProvider;\n+\n+import org.slf4j.MDC;\n+\n+/**\n+ * This is propagator of Slf4j MDC values between different threads.", "originalCommit": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "chunk": "diff --git a/logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcPropagator.java b/logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcPropagator.java\nindex 63f771188..28e5f0dfe 100644\n--- a/logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcPropagator.java\n+++ b/logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcPropagator.java\n\n@@ -23,6 +23,7 @@ import org.slf4j.MDC;\n \n /**\n  * This is propagator of Slf4j MDC values between different threads.\n+ * This class is loaded and used via SPI.\n  */\n public class Slf4jMdcPropagator implements DataPropagationProvider<Map<String, String>> {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0Njg5Mg==", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519946892", "bodyText": "Javadoc should mark it as a service loader service, so people do not try to use it directly", "author": "tomas-langer", "createdAt": "2020-11-09T16:32:05Z", "path": "logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging.slf4j;\n+\n+\n+import io.helidon.logging.spi.MdcProvider;\n+\n+import org.slf4j.MDC;\n+\n+/**\n+ * Provider for setting MDC values to the Slf4j MDC support.", "originalCommit": "e7186e2d4f8f5552fc4f7bc9126c222996727d93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "chunk": "diff --git a/logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcProvider.java b/logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcProvider.java\nindex ab27469d8..0f0695469 100644\n--- a/logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcProvider.java\n+++ b/logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcProvider.java\n\n@@ -16,18 +16,19 @@\n package io.helidon.logging.slf4j;\n \n \n-import io.helidon.logging.spi.MdcProvider;\n+import io.helidon.logging.common.spi.MdcProvider;\n \n import org.slf4j.MDC;\n \n /**\n  * Provider for setting MDC values to the Slf4j MDC support.\n+ * This class is loaded and used via SPI.\n  */\n public class Slf4jMdcProvider implements MdcProvider {\n \n     @Override\n-    public void put(String key, Object value) {\n-        MDC.put(key, String.valueOf(value));\n+    public void put(String key, String value) {\n+        MDC.put(key, value);\n     }\n \n     @Override\n"}}, {"oid": "743b7c0ebe76504cd81e99fc460f44e8f05810ca", "url": "https://github.com/oracle/helidon/commit/743b7c0ebe76504cd81e99fc460f44e8f05810ca", "message": "Tomas suggestions implemented\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-11-10T10:14:24Z", "type": "commit"}, {"oid": "e765430cb0de4ac26d8006469c5d46afd89a0192", "url": "https://github.com/oracle/helidon/commit/e765430cb0de4ac26d8006469c5d46afd89a0192", "message": "spi service files incorrectly refactored\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>", "committedDate": "2020-11-10T11:40:58Z", "type": "commit"}]}