{"pr_number": 1568, "pr_title": "[Reactive] Workaround for an RS 1.0.3 TCK bug", "pr_createdAt": "2020-03-23T20:47:26Z", "pr_url": "https://github.com/oracle/helidon/pull/1568", "timeline": [{"oid": "ae8da7197cf3027bfe1d1e0c11cc8d2135233970", "url": "https://github.com/oracle/helidon/commit/ae8da7197cf3027bfe1d1e0c11cc8d2135233970", "message": "[Reactive] Workaround for an RS 1.0.3 TCK bug", "committedDate": "2020-03-23T20:44:15Z", "type": "commit"}, {"oid": "79f0020f11cb4da48f0fd8426c3849b3b0886993", "url": "https://github.com/oracle/helidon/commit/79f0020f11cb4da48f0fd8426c3849b3b0886993", "message": "Rename the static field", "committedDate": "2020-03-23T20:51:04Z", "type": "commit"}, {"oid": "b415165da6ff745683fc56a966dc38156e9a54b1", "url": "https://github.com/oracle/helidon/commit/b415165da6ff745683fc56a966dc38156e9a54b1", "message": "Use execute()", "committedDate": "2020-03-23T22:08:19Z", "type": "commit"}, {"oid": "f1b021656fdfb039545e4675ab36552e96fa22e7", "url": "https://github.com/oracle/helidon/commit/f1b021656fdfb039545e4675ab36552e96fa22e7", "message": "Fix compile errors", "committedDate": "2020-03-23T22:58:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk4MjcwNw==", "url": "https://github.com/oracle/helidon/pull/1568#discussion_r396982707", "bodyText": "For future reference TCK fix: reactive-streams/reactive-streams-jvm#483", "author": "danielkec", "createdAt": "2020-03-24T08:42:51Z", "path": "microprofile/reactive-streams/src/main/java/io/helidon/microprofile/reactive/HelidonReactiveStreamsEngine.java", "diffHunk": "@@ -526,18 +527,32 @@ static Object build(Iterable<Stage> graph, Mode mode) throws UnsupportedStageExc\n     }\n \n     static void complete(CompletableFuture<Object> cf) {\n-        ForkJoinPool.commonPool().submit(() -> {\n+        coupledExecutor.execute(() -> {\n             cf.complete(null);\n-            return null;\n         });\n     }\n \n     static void fail(CompletableFuture<Object> cf, Throwable ex) {\n-        ForkJoinPool.commonPool().submit(() -> {\n+        coupledExecutor.execute(() -> {\n             cf.completeExceptionally(ex);\n-            return null;\n         });\n     }\n+\n+    // Workaround for a TCK bug when calling cancel() from any method named onComplete().\n+    private static volatile ExecutorService coupledExecutor = ForkJoinPool.commonPool();", "originalCommit": "f1b021656fdfb039545e4675ab36552e96fa22e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}