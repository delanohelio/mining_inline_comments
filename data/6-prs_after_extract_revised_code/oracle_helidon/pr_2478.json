{"pr_number": 2478, "pr_title": "Lays the groundwork for permitting other Netty transports while retaining Netty as an implementation-only concern.", "pr_createdAt": "2020-10-22T01:13:09Z", "pr_url": "https://github.com/oracle/helidon/pull/2478", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzODYxNg==", "url": "https://github.com/oracle/helidon/pull/2478#discussion_r519938616", "bodyText": "Why does the method return an optional, if you call .get on it? If this is mandatory, it should not return optional. If it is optional, you should check for the existence of value and throw a meaningful exception", "author": "tomas-langer", "createdAt": "2020-11-09T16:20:52Z", "path": "webserver/webserver/src/main/java/io/helidon/webserver/NettyWebServer.java", "diffHunk": "@@ -414,6 +417,66 @@ public int port(String name) {\n         return address instanceof InetSocketAddress ? ((InetSocketAddress) address).getPort() : -1;\n     }\n \n+    private Transport transport() {\n+        Transport transport = configuration.transport().orElse(new NioTransport());\n+        return transport.isAvailableFor(this) ? transport : new NioTransport();\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private EventLoopGroup bossGroup() {\n+        return transport().createTransportArtifact(EventLoopGroup.class, \"bossGroup\", configuration).get();", "originalCommit": "793657467a4ea288728565957ff7737217e691d0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15c5be137c1ff1d5604521bf8f99659d80cd3640", "chunk": "diff --git a/webserver/webserver/src/main/java/io/helidon/webserver/NettyWebServer.java b/webserver/webserver/src/main/java/io/helidon/webserver/NettyWebServer.java\nindex 10f6d4c19..6ad5a8b46 100644\n--- a/webserver/webserver/src/main/java/io/helidon/webserver/NettyWebServer.java\n+++ b/webserver/webserver/src/main/java/io/helidon/webserver/NettyWebServer.java\n\n@@ -417,24 +420,41 @@ class NettyWebServer implements WebServer {\n         return address instanceof InetSocketAddress ? ((InetSocketAddress) address).getPort() : -1;\n     }\n \n-    private Transport transport() {\n+    private Transport installTransport() {\n         Transport transport = configuration.transport().orElse(new NioTransport());\n         return transport.isAvailableFor(this) ? transport : new NioTransport();\n     }\n \n+    private Transport transport() {\n+        return transport;\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     private EventLoopGroup bossGroup() {\n-        return transport().createTransportArtifact(EventLoopGroup.class, \"bossGroup\", configuration).get();\n+        return transport()\n+            .createTransportArtifact(EventLoopGroup.class, \"bossGroup\", configuration)\n+            .orElseThrow(() -> noSuchTransportArtifact(\"bossGroup\"));\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private EventLoopGroup workerGroup() {\n-        return transport().createTransportArtifact(EventLoopGroup.class, \"workerGroup\", configuration).get();\n+        return transport()\n+            .createTransportArtifact(EventLoopGroup.class, \"workerGroup\", configuration)\n+            .orElseThrow(() -> noSuchTransportArtifact(\"workerGroup\"));\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private <T extends ServerChannel> ChannelFactory<T> serverChannelFactory() {\n-        return transport().createTransportArtifact(ChannelFactory.class, \"serverChannelFactory\", configuration).get();\n+        return transport()\n+            .createTransportArtifact(ChannelFactory.class, \"serverChannelFactory\", configuration)\n+            .orElseThrow(() -> noSuchTransportArtifact(\"serverChannelFactory\"));\n+    }\n+\n+    private NoSuchElementException noSuchTransportArtifact(String name) {\n+        return new NoSuchElementException(\"The current webserver transport, \"\n+                                          + transport() + \", could not supply \"\n+                                          + \"a transport artifact named \\\"\"\n+                                          + name + \"\\\"\");\n     }\n \n     private static final class NioTransport implements Transport {\n"}}, {"oid": "1a247d43b8de72d8ded765e851532d98e0746679", "url": "https://github.com/oracle/helidon/commit/1a247d43b8de72d8ded765e851532d98e0746679", "message": "Lays the groundwork for permitting other Netty transports while retaining Netty as an implementation-only concern.\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2021-01-05T17:39:22Z", "type": "commit"}, {"oid": "f895eafb3f6e05d2b5a06f215065cb49f2847e67", "url": "https://github.com/oracle/helidon/commit/f895eafb3f6e05d2b5a06f215065cb49f2847e67", "message": "Squashable commit; fixed Javadoc mistakes\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2021-01-05T17:39:22Z", "type": "commit"}, {"oid": "15c5be137c1ff1d5604521bf8f99659d80cd3640", "url": "https://github.com/oracle/helidon/commit/15c5be137c1ff1d5604521bf8f99659d80cd3640", "message": "Squashable commit; incorporating PR feedback and optimizing creation and installation of Transport\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2021-01-05T17:39:22Z", "type": "commit"}, {"oid": "7d488efece30248643a3860a631ae8d0640d6668", "url": "https://github.com/oracle/helidon/commit/7d488efece30248643a3860a631ae8d0640d6668", "message": "Squashable commit; added code comments\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2021-01-05T17:39:22Z", "type": "commit"}, {"oid": "7d488efece30248643a3860a631ae8d0640d6668", "url": "https://github.com/oracle/helidon/commit/7d488efece30248643a3860a631ae8d0640d6668", "message": "Squashable commit; added code comments\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2021-01-05T17:39:22Z", "type": "forcePushed"}, {"oid": "7ab27abd8b1a2ffd6e527f1f6cf2f3a0b6465ab1", "url": "https://github.com/oracle/helidon/commit/7ab27abd8b1a2ffd6e527f1f6cf2f3a0b6465ab1", "message": "Squashable commit; the copyright plugin wants the copyright in dependencies/pom.xml to go back to 2020\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2021-01-05T18:20:53Z", "type": "commit"}, {"oid": "fc049ed83509e684bd88cf11a3617faa78c01b14", "url": "https://github.com/oracle/helidon/commit/fc049ed83509e684bd88cf11a3617faa78c01b14", "message": "Squashable commit; as expected, now the copyright plugin wants the copyright to be 2021\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2021-01-05T18:28:25Z", "type": "commit"}, {"oid": "cc3a59e38780ba14ded3fd1ce0d45f6c88e0c52c", "url": "https://github.com/oracle/helidon/commit/cc3a59e38780ba14ded3fd1ce0d45f6c88e0c52c", "message": "Squashable commit; changed installTransport() to acquireTransport(); name is clearer\n\nSigned-off-by: Laird Nelson <laird.nelson@oracle.com>", "committedDate": "2021-01-05T19:55:30Z", "type": "commit"}]}