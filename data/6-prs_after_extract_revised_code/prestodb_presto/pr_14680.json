{"pr_number": 14680, "pr_title": "Replace FileSystemContext in presto-raptor by HdfsContext", "pr_createdAt": "2020-06-19T13:51:00Z", "pr_url": "https://github.com/prestodb/presto/pull/14680", "timeline": [{"oid": "59fd045de2a55b221ca75292014eebfa46d43216", "url": "https://github.com/prestodb/presto/commit/59fd045de2a55b221ca75292014eebfa46d43216", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-19T18:16:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5Njg2Nw==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443196867", "bodyText": "We also need all other information other than identity. Schema and table are available in handle. Same for all other places.", "author": "highker", "createdAt": "2020-06-21T08:43:42Z", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -59,7 +59,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorOutputTableHandle handle = (RaptorOutputTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "originalCommit": "59fd045de2a55b221ca75292014eebfa46d43216", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjE2Nw==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443276167", "bodyText": "Got it. I see that I can get schema and table names from RaptorOutputTableHandle:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            new HdfsContext(session.getIdentity()),\n          \n          \n            \n                            new HdfsContext(session, handle.getSchemaName(), handle.getTableName())", "author": "fvcortes", "createdAt": "2020-06-22T01:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5Njg2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "caec03f534e390a1d3acde1794b70bb295beea41", "chunk": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\nindex 5360b9ed27..1343c9aff0 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\n\n@@ -59,7 +59,7 @@ public class RaptorPageSinkProvider\n \n         RaptorOutputTableHandle handle = (RaptorOutputTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new HdfsContext(session.getIdentity()),\n+                new HdfsContext(session, handle.getSchemaName(), handle.getTableName()),\n                 pageSorter,\n                 storageManager,\n                 temporalFunction,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5NzA1Nw==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443197057", "bodyText": "leave an empty line between constants and variables", "author": "highker", "createdAt": "2020-06-21T08:46:06Z", "path": "presto-raptor/src/test/java/com/facebook/presto/raptor/storage/TestOrcStorageManager.java", "diffHunk": "@@ -140,7 +141,7 @@\n     private static final DataSize MAX_FILE_SIZE = new DataSize(1, MEGABYTE);\n     private static final Duration MISSING_SHARD_DISCOVERY = new Duration(5, TimeUnit.MINUTES);\n     private static final ReaderAttributes READER_ATTRIBUTES = new ReaderAttributes(new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), true, false);\n-", "originalCommit": "59fd045de2a55b221ca75292014eebfa46d43216", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "caec03f534e390a1d3acde1794b70bb295beea41", "chunk": "diff --git a/presto-raptor/src/test/java/com/facebook/presto/raptor/storage/TestOrcStorageManager.java b/presto-raptor/src/test/java/com/facebook/presto/raptor/storage/TestOrcStorageManager.java\nindex 165db12824..03235b172b 100644\n--- a/presto-raptor/src/test/java/com/facebook/presto/raptor/storage/TestOrcStorageManager.java\n+++ b/presto-raptor/src/test/java/com/facebook/presto/raptor/storage/TestOrcStorageManager.java\n\n@@ -142,6 +142,7 @@ public class TestOrcStorageManager\n     private static final Duration MISSING_SHARD_DISCOVERY = new Duration(5, TimeUnit.MINUTES);\n     private static final ReaderAttributes READER_ATTRIBUTES = new ReaderAttributes(new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), true, false);\n     private static final HdfsContext DEFAULT_RAPTOR_CONTEXT = new HdfsContext(new ConnectorIdentity(\"presto-raptor\", Optional.empty(), Optional.empty()));\n+\n     private final NodeManager nodeManager = new TestingNodeManager();\n     private Handle dummyHandle;\n     private File temporary;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5NzA3Mg==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443197072", "bodyText": "same", "author": "highker", "createdAt": "2020-06-21T08:46:17Z", "path": "presto-raptor/src/test/java/com/facebook/presto/raptor/storage/organization/TestShardCompactor.java", "diffHunk": "@@ -80,7 +81,7 @@\n     private static final int MAX_SHARD_ROWS = 1000;\n     private static final PagesIndexPageSorter PAGE_SORTER = new PagesIndexPageSorter(new PagesIndex.TestingFactory(false));\n     private static final ReaderAttributes READER_ATTRIBUTES = new ReaderAttributes(new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), true, false);\n-", "originalCommit": "59fd045de2a55b221ca75292014eebfa46d43216", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "caec03f534e390a1d3acde1794b70bb295beea41", "chunk": "diff --git a/presto-raptor/src/test/java/com/facebook/presto/raptor/storage/organization/TestShardCompactor.java b/presto-raptor/src/test/java/com/facebook/presto/raptor/storage/organization/TestShardCompactor.java\nindex 941392a1a1..2cbf820f16 100644\n--- a/presto-raptor/src/test/java/com/facebook/presto/raptor/storage/organization/TestShardCompactor.java\n+++ b/presto-raptor/src/test/java/com/facebook/presto/raptor/storage/organization/TestShardCompactor.java\n\n@@ -82,6 +82,7 @@ public class TestShardCompactor\n     private static final PagesIndexPageSorter PAGE_SORTER = new PagesIndexPageSorter(new PagesIndex.TestingFactory(false));\n     private static final ReaderAttributes READER_ATTRIBUTES = new ReaderAttributes(new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), true, false);\n     private static final HdfsContext DEFAULT_RAPTOR_CONTEXT = new HdfsContext(new ConnectorIdentity(\"presto-raptor\", Optional.empty(), Optional.empty()));\n+\n     private File temporary;\n     private IDBI dbi;\n     private Handle dummyHandle;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjQyOQ==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443276429", "bodyText": "But schema and table names are not available in RaptorInsertTableHandle.", "author": "fvcortes", "createdAt": "2020-06-22T01:03:33Z", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -82,7 +82,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "originalCommit": "59fd045de2a55b221ca75292014eebfa46d43216", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk5MzYzNw==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443993637", "bodyText": "We can ignore schema/table. But we should populate other fields.", "author": "highker", "createdAt": "2020-06-23T06:38:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjQyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "255ab5c70581db9d538d535cf94b3c6e514f0aec", "chunk": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\nindex 5360b9ed27..b650f3458d 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\n\n@@ -82,7 +82,7 @@ public class RaptorPageSinkProvider\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new HdfsContext(session.getIdentity()),\n+                new HdfsContext(session),\n                 pageSorter,\n                 storageManager,\n                 temporalFunction,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjczOA==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443276738", "bodyText": "So does here.", "author": "fvcortes", "createdAt": "2020-06-22T01:06:08Z", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java", "diffHunk": "@@ -69,7 +69,7 @@ public ConnectorPageSource createPageSource(\n         Optional<Map<String, Type>> columnTypes = raptorSplit.getColumnTypes();\n         boolean tableSupportsDeltaDelete = raptorSplit.isTableSupportsDeltaDelete();\n \n-        FileSystemContext context = new FileSystemContext(session);\n+        HdfsContext context = new HdfsContext(session.getIdentity());", "originalCommit": "59fd045de2a55b221ca75292014eebfa46d43216", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc3MjU1MQ==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443772551", "bodyText": "We can ignore schema and table for page source/sink provider at the moment", "author": "highker", "createdAt": "2020-06-22T19:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk5MzY3OQ==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443993679", "bodyText": "Same", "author": "highker", "createdAt": "2020-06-23T06:38:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjczOA=="}], "type": "inlineReview", "revised_code": {"commit": "255ab5c70581db9d538d535cf94b3c6e514f0aec", "chunk": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java\nindex 9ca3cf9406..89fed43be6 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java\n\n@@ -69,7 +69,7 @@ public class RaptorPageSourceProvider\n         Optional<Map<String, Type>> columnTypes = raptorSplit.getColumnTypes();\n         boolean tableSupportsDeltaDelete = raptorSplit.isTableSupportsDeltaDelete();\n \n-        HdfsContext context = new HdfsContext(session.getIdentity());\n+        HdfsContext context = new HdfsContext(session);\n \n         Map<UUID, UUID> shardDeltaMap = raptorSplit.getShardDeltaMap();\n         if (raptorSplit.getShardUuids().size() == 1) {\n"}}, {"oid": "caec03f534e390a1d3acde1794b70bb295beea41", "url": "https://github.com/prestodb/presto/commit/caec03f534e390a1d3acde1794b70bb295beea41", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-23T04:49:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444377363", "bodyText": "Could you address the comments https://github.com/prestodb/presto/pull/14680/files#r443993637? We need more than identity.", "author": "highker", "createdAt": "2020-06-23T17:07:35Z", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -82,7 +82,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "originalCommit": "caec03f534e390a1d3acde1794b70bb295beea41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MjQ1MQ==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444562451", "bodyText": "Should I populate the fields with an empty string?", "author": "fvcortes", "createdAt": "2020-06-23T23:27:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzExMA==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444563110", "bodyText": "Create a new interface public HdfsContext(ConnectorSession session) for HdfsContext", "author": "highker", "createdAt": "2020-06-23T23:29:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5MjgyNw==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444592827", "bodyText": "BTW, the constructors for HdfsContext is really bad. We should have something like this\n    public HdfsContext(ConnectorSession session)\n    {\n        this(session, Optional.empty(), Optional.empty());\n    }\n\n    public HdfsContext(ConnectorSession session, String schemaName)\n    {\n        this(session, Optional.of(schemaName), Optional.empty());\n    }\n\n    public HdfsContext(ConnectorSession session, String schemaName, String tableName)\n    {\n        this(session, Optional.of(schemaName), Optional.of(tableName));\n    }\n\n    private HdfsContext(ConnectorSession session, Optional<String> schemaName, Optional<String> tableName)\n    {\n        requireNonNull(session, \"session is null\");\n        this.identity = requireNonNull(session.getIdentity(), \"session.getIdentity() is null\");\n        this.source = requireNonNull(session.getSource(), \"session.getSource() is null\");\n        this.queryId = Optional.of(session.getQueryId());\n        this.schemaName = requireNonNull(schemaName, \"schemaName is null\");\n        this.tableName = requireNonNull(tableName, \"tableName is null\");\n        this.clientInfo = session.getClientInfo();\n    }", "author": "highker", "createdAt": "2020-06-24T01:23:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwMTg3MQ==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444601871", "bodyText": "Ok! Doing an explicit constructor invocation makes it clearer.", "author": "fvcortes", "createdAt": "2020-06-24T01:59:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "255ab5c70581db9d538d535cf94b3c6e514f0aec", "chunk": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\nindex 1343c9aff0..b650f3458d 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\n\n@@ -82,7 +82,7 @@ public class RaptorPageSinkProvider\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new HdfsContext(session.getIdentity()),\n+                new HdfsContext(session),\n                 pageSorter,\n                 storageManager,\n                 temporalFunction,\n"}}, {"oid": "255ab5c70581db9d538d535cf94b3c6e514f0aec", "url": "https://github.com/prestodb/presto/commit/255ab5c70581db9d538d535cf94b3c6e514f0aec", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-24T01:26:45Z", "type": "forcePushed"}, {"oid": "122ea18e8544a828bb6a8a05457192481b1a2cdd", "url": "https://github.com/prestodb/presto/commit/122ea18e8544a828bb6a8a05457192481b1a2cdd", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-24T02:01:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTYxNg==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445041616", "bodyText": "requireNonNull for schemaName and tableName", "author": "highker", "createdAt": "2020-06-24T17:02:57Z", "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java", "diffHunk": "@@ -40,28 +40,29 @@ public HdfsContext(ConnectorIdentity identity)\n         this.clientInfo = Optional.empty();\n     }\n \n+    public HdfsContext(ConnectorSession session)\n+    {\n+        this(session, Optional.empty(), Optional.empty());\n+    }\n+\n     public HdfsContext(ConnectorSession session, String schemaName)\n     {\n-        requireNonNull(session, \"session is null\");\n-        requireNonNull(schemaName, \"schemaName is null\");\n-        this.identity = requireNonNull(session.getIdentity(), \"session.getIdentity() is null\");\n-        this.source = requireNonNull(session.getSource(), \"session.getSource()\");\n-        this.queryId = Optional.of(session.getQueryId());\n-        this.schemaName = Optional.of(schemaName);\n-        this.tableName = Optional.empty();\n-        this.clientInfo = session.getClientInfo();\n+        this(session, Optional.of(schemaName), Optional.empty());\n     }\n \n     public HdfsContext(ConnectorSession session, String schemaName, String tableName)\n+    {\n+        this(session, Optional.of(schemaName), Optional.of(tableName));", "originalCommit": "122ea18e8544a828bb6a8a05457192481b1a2cdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI0OTc1Mg==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445249752", "bodyText": "Wouldn't requireNonNull already in the last constructor be enough?\nthis.schemaName = requireNonNull(schemaName, \"schemaName is null\");\nthis.tableName = requireNonNull(tableName, \"tableName is null\");", "author": "fvcortes", "createdAt": "2020-06-25T00:54:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTYxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1MDkxNg==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445250916", "bodyText": "They are completely different. This is of type String; the other is of type Optional<String>. A null input here will throw NPE.", "author": "highker", "createdAt": "2020-06-25T00:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTYxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1NDA1NA==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445254054", "bodyText": "Understood, thanks.", "author": "fvcortes", "createdAt": "2020-06-25T01:11:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTYxNg=="}], "type": "inlineReview", "revised_code": {"commit": "8ce0e39e510a64d7c8d5e1be1147802acadad461", "chunk": "diff --git a/presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java b/presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java\nindex b4ff33262e..1046b3f170 100644\n--- a/presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java\n+++ b/presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java\n\n@@ -47,12 +47,12 @@ public class HdfsContext\n \n     public HdfsContext(ConnectorSession session, String schemaName)\n     {\n-        this(session, Optional.of(schemaName), Optional.empty());\n+        this(session, Optional.of(requireNonNull(schemaName,\"schemaName is null\")), Optional.empty());\n     }\n \n     public HdfsContext(ConnectorSession session, String schemaName, String tableName)\n     {\n-        this(session, Optional.of(schemaName), Optional.of(tableName));\n+        this(session, Optional.of(requireNonNull(schemaName,\"schemaName is null\")), Optional.of(requireNonNull(tableName,\"tableName is null\")));\n     }\n \n     private HdfsContext(ConnectorSession session, Optional<String> schemaName, Optional<String> tableName)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTcwOA==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445041708", "bodyText": "requireNonNull for schemaName", "author": "highker", "createdAt": "2020-06-24T17:03:05Z", "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java", "diffHunk": "@@ -40,28 +40,29 @@ public HdfsContext(ConnectorIdentity identity)\n         this.clientInfo = Optional.empty();\n     }\n \n+    public HdfsContext(ConnectorSession session)\n+    {\n+        this(session, Optional.empty(), Optional.empty());\n+    }\n+\n     public HdfsContext(ConnectorSession session, String schemaName)\n     {\n-        requireNonNull(session, \"session is null\");\n-        requireNonNull(schemaName, \"schemaName is null\");\n-        this.identity = requireNonNull(session.getIdentity(), \"session.getIdentity() is null\");\n-        this.source = requireNonNull(session.getSource(), \"session.getSource()\");\n-        this.queryId = Optional.of(session.getQueryId());\n-        this.schemaName = Optional.of(schemaName);\n-        this.tableName = Optional.empty();\n-        this.clientInfo = session.getClientInfo();\n+        this(session, Optional.of(schemaName), Optional.empty());", "originalCommit": "122ea18e8544a828bb6a8a05457192481b1a2cdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ce0e39e510a64d7c8d5e1be1147802acadad461", "chunk": "diff --git a/presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java b/presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java\nindex b4ff33262e..1046b3f170 100644\n--- a/presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java\n+++ b/presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java\n\n@@ -47,12 +47,12 @@ public class HdfsContext\n \n     public HdfsContext(ConnectorSession session, String schemaName)\n     {\n-        this(session, Optional.of(schemaName), Optional.empty());\n+        this(session, Optional.of(requireNonNull(schemaName,\"schemaName is null\")), Optional.empty());\n     }\n \n     public HdfsContext(ConnectorSession session, String schemaName, String tableName)\n     {\n-        this(session, Optional.of(schemaName), Optional.of(tableName));\n+        this(session, Optional.of(requireNonNull(schemaName,\"schemaName is null\")), Optional.of(requireNonNull(tableName,\"tableName is null\")));\n     }\n \n     private HdfsContext(ConnectorSession session, Optional<String> schemaName, Optional<String> tableName)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MjM5Ng==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445042396", "bodyText": "Pass in schema and table as well from handle", "author": "highker", "createdAt": "2020-06-24T17:04:13Z", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -59,7 +59,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorOutputTableHandle handle = (RaptorOutputTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session),", "originalCommit": "122ea18e8544a828bb6a8a05457192481b1a2cdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ce0e39e510a64d7c8d5e1be1147802acadad461", "chunk": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\nindex b650f3458d..d5fb471f5d 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java\n\n@@ -59,7 +59,7 @@ public class RaptorPageSinkProvider\n \n         RaptorOutputTableHandle handle = (RaptorOutputTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new HdfsContext(session),\n+                new HdfsContext(session, handle.getSchemaName(), handle.getTableName()),\n                 pageSorter,\n                 storageManager,\n                 temporalFunction,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MzYyNQ==", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445043625", "bodyText": "move DEFAULT_RAPTOR_CONTEXT to FileSystemUtil", "author": "highker", "createdAt": "2020-06-24T17:06:25Z", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/filesystem/HdfsStorageService.java", "diffHunk": "@@ -118,7 +121,7 @@ private void createDirectory(Path directory)\n     {\n         boolean madeDirectory;\n         try {\n-            FileSystem fileSystem = environment.getFileSystem(FileSystemContext.DEFAULT_RAPTOR_CONTEXT);", "originalCommit": "122ea18e8544a828bb6a8a05457192481b1a2cdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d15022d2c0654ad496c32d8dd32d2d692fabc26d", "chunk": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/filesystem/HdfsStorageService.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/filesystem/HdfsStorageService.java\nindex 5bdbde53f4..b7be265596 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/filesystem/HdfsStorageService.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/filesystem/HdfsStorageService.java\n\n@@ -121,7 +122,7 @@ public class HdfsStorageService\n     {\n         boolean madeDirectory;\n         try {\n-            FileSystem fileSystem = environment.getFileSystem(new HdfsContext(new ConnectorIdentity(\"presto-raptor\", Optional.empty(), Optional.empty())));\n+            FileSystem fileSystem = environment.getFileSystem(DEFAULT_RAPTOR_CONTEXT);\n             madeDirectory = fileSystem.mkdirs(directory) && fileSystem.isDirectory(directory);\n         }\n         catch (IOException e) {\n"}}, {"oid": "8ce0e39e510a64d7c8d5e1be1147802acadad461", "url": "https://github.com/prestodb/presto/commit/8ce0e39e510a64d7c8d5e1be1147802acadad461", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-25T01:56:00Z", "type": "forcePushed"}, {"oid": "d15022d2c0654ad496c32d8dd32d2d692fabc26d", "url": "https://github.com/prestodb/presto/commit/d15022d2c0654ad496c32d8dd32d2d692fabc26d", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-25T01:59:55Z", "type": "forcePushed"}, {"oid": "850d7304befdbf760d52228b509a1df0c0634514", "url": "https://github.com/prestodb/presto/commit/850d7304befdbf760d52228b509a1df0c0634514", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-25T02:05:10Z", "type": "forcePushed"}, {"oid": "8d54787b75cbb69e9ffe116ee733345c3d611efc", "url": "https://github.com/prestodb/presto/commit/8d54787b75cbb69e9ffe116ee733345c3d611efc", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-25T04:52:31Z", "type": "forcePushed"}, {"oid": "e632665b28ea01ff12d929cd8872559f712aeae4", "url": "https://github.com/prestodb/presto/commit/e632665b28ea01ff12d929cd8872559f712aeae4", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-25T05:23:46Z", "type": "commit"}, {"oid": "e632665b28ea01ff12d929cd8872559f712aeae4", "url": "https://github.com/prestodb/presto/commit/e632665b28ea01ff12d929cd8872559f712aeae4", "message": "Replace FileSystemContext in presto-raptor by HdfsContext", "committedDate": "2020-06-25T05:23:46Z", "type": "forcePushed"}]}