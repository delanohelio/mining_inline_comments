{"pr_number": 15151, "pr_title": "Dynamic partition pruning on workers", "pr_createdAt": "2020-09-09T17:30:07Z", "pr_url": "https://github.com/prestodb/presto/pull/15151", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyNjE4NQ==", "url": "https://github.com/prestodb/presto/pull/15151#discussion_r485826185", "bodyText": "Merge with TestDynamicBucketPruning and call it TestDynamicPruning?", "author": "highker", "createdAt": "2020-09-09T18:25:55Z", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestDynamicPartitionPruning.java", "diffHunk": "@@ -0,0 +1,184 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.airlift.testing.TempFile;\n+import com.facebook.presto.common.predicate.TupleDomain;\n+import com.facebook.presto.common.type.StandardTypes;\n+import com.facebook.presto.common.type.TypeSignature;\n+import com.facebook.presto.hive.metastore.Column;\n+import com.facebook.presto.hive.metastore.Storage;\n+import com.facebook.presto.hive.metastore.StorageFormat;\n+import com.facebook.presto.spi.ColumnHandle;\n+import com.facebook.presto.spi.ConnectorId;\n+import com.facebook.presto.spi.ConnectorPageSource;\n+import com.facebook.presto.spi.SchemaTableName;\n+import com.facebook.presto.spi.SplitContext;\n+import com.facebook.presto.spi.TableHandle;\n+import com.facebook.presto.testing.TestingConnectorSession;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.OptionalInt;\n+\n+import static com.facebook.presto.common.predicate.Domain.singleValue;\n+import static com.facebook.presto.common.type.TypeSignature.parseTypeSignature;\n+import static com.facebook.presto.common.type.VarcharType.createVarcharType;\n+import static com.facebook.presto.expressions.LogicalRowExpressions.TRUE_CONSTANT;\n+import static com.facebook.presto.hive.BucketFunctionType.HIVE_COMPATIBLE;\n+import static com.facebook.presto.hive.CacheQuotaRequirement.NO_CACHE_REQUIREMENT;\n+import static com.facebook.presto.hive.HiveColumnHandle.ColumnType.PARTITION_KEY;\n+import static com.facebook.presto.hive.HiveQueryRunner.HIVE_CATALOG;\n+import static com.facebook.presto.hive.HiveTestUtils.ROW_EXPRESSION_SERVICE;\n+import static com.facebook.presto.hive.HiveTestUtils.TYPE_MANAGER;\n+import static com.facebook.presto.hive.HiveTestUtils.createTestHdfsEnvironment;\n+import static com.facebook.presto.hive.HiveTestUtils.getDefaultHiveBatchPageSourceFactories;\n+import static com.facebook.presto.hive.HiveTestUtils.getDefaultHiveRecordCursorProvider;\n+import static com.facebook.presto.hive.HiveTestUtils.getDefaultHiveSelectivePageSourceFactories;\n+import static com.facebook.presto.hive.HiveType.HIVE_STRING;\n+import static com.facebook.presto.hive.TestHivePageSink.getColumnHandles;\n+import static com.facebook.presto.spi.schedule.NodeSelectionStrategy.NO_PREFERENCE;\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static io.airlift.slice.Slices.utf8Slice;\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.fail;\n+\n+public class TestDynamicPartitionPruning", "originalCommit": "aa1c64feda84127102b9d7ec569606f914dbf064", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "chunk": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/TestDynamicPartitionPruning.java b/presto-hive/src/test/java/com/facebook/presto/hive/TestDynamicPruning.java\nsimilarity index 76%\nrename from presto-hive/src/test/java/com/facebook/presto/hive/TestDynamicPartitionPruning.java\nrename to presto-hive/src/test/java/com/facebook/presto/hive/TestDynamicPruning.java\nindex 4d8b64faff..f2dbdbe502 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/TestDynamicPartitionPruning.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/TestDynamicPruning.java\n\n@@ -14,6 +14,7 @@\n package com.facebook.presto.hive;\n \n import com.facebook.airlift.testing.TempFile;\n+import com.facebook.presto.common.predicate.Domain;\n import com.facebook.presto.common.predicate.TupleDomain;\n import com.facebook.presto.common.type.StandardTypes;\n import com.facebook.presto.common.type.TypeSignature;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMTA2MQ==", "url": "https://github.com/prestodb/presto/pull/15151#discussion_r485831061", "bodyText": "Move this out of the loop", "author": "highker", "createdAt": "2020-09-09T18:34:50Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java", "diffHunk": "@@ -505,6 +516,36 @@ private static boolean shouldSkipBucket(HiveTableLayoutHandle hiveLayout, HiveSp\n         return hiveBucketFilter.map(filter -> !filter.getBucketsToKeep().contains(hiveSplit.getReadBucketNumber().getAsInt())).orElse(false);\n     }\n \n+    private static boolean shouldSkipPartition(TypeManager typeManager, HiveTableLayoutHandle hiveLayout, DateTimeZone hiveStorageTimeZone, HiveSplit hiveSplit, SplitContext splitContext)\n+    {\n+        List<HiveColumnHandle> partitionColumns = hiveLayout.getPartitionColumns();\n+        List<Type> partitionTypes = partitionColumns.stream()\n+                .map(column -> typeManager.getType(column.getTypeSignature()))\n+                .collect(toList());\n+        List<HivePartitionKey> partitionKeys = hiveSplit.getPartitionKeys();\n+\n+        if (!splitContext.getDynamicFilterPredicate().isPresent()\n+                || hiveSplit.getPartitionKeys().isEmpty()\n+                || partitionColumns.isEmpty()\n+                || partitionColumns.size() != partitionKeys.size()) {\n+            return false;\n+        }\n+\n+        TupleDomain<ColumnHandle> dynamicFilter = splitContext.getDynamicFilterPredicate().get();\n+        for (int i = 0; i < partitionKeys.size(); i++) {\n+            Type type = partitionTypes.get(i);\n+            HivePartitionKey hivePartitionKey = partitionKeys.get(i);\n+            HiveColumnHandle hiveColumnHandle = partitionColumns.get(i);\n+            Map<ColumnHandle, Domain> domains = dynamicFilter.getDomains().get();", "originalCommit": "aa1c64feda84127102b9d7ec569606f914dbf064", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java b/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java\nindex 68ef1ba51d..441664e369 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java\n\n@@ -532,11 +532,11 @@ public class HivePageSourceProvider\n         }\n \n         TupleDomain<ColumnHandle> dynamicFilter = splitContext.getDynamicFilterPredicate().get();\n+        Map<ColumnHandle, Domain> domains = dynamicFilter.getDomains().get();\n         for (int i = 0; i < partitionKeys.size(); i++) {\n             Type type = partitionTypes.get(i);\n             HivePartitionKey hivePartitionKey = partitionKeys.get(i);\n             HiveColumnHandle hiveColumnHandle = partitionColumns.get(i);\n-            Map<ColumnHandle, Domain> domains = dynamicFilter.getDomains().get();\n             Domain allowedDomain = domains.get(hiveColumnHandle);\n             NullableValue value = parsePartitionValue(hivePartitionKey.getName(), hivePartitionKey.getValue(), type, hiveStorageTimeZone);\n             if (allowedDomain != null && !allowedDomain.includesNullableValue(value.getValue())) {\n"}}, {"oid": "21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "url": "https://github.com/prestodb/presto/commit/21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "message": "Dynamic partition pruning on workers", "committedDate": "2020-09-11T06:40:20Z", "type": "commit"}, {"oid": "21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "url": "https://github.com/prestodb/presto/commit/21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "message": "Dynamic partition pruning on workers", "committedDate": "2020-09-11T06:40:20Z", "type": "forcePushed"}]}