{"pr_number": 15214, "pr_title": "Fix order of dwrf encryption group stats", "pr_createdAt": "2020-09-23T16:48:04Z", "pr_url": "https://github.com/prestodb/presto/pull/15214", "timeline": [{"oid": "63cc58eb2080307edacee2be46107cddcaa83577", "url": "https://github.com/prestodb/presto/commit/63cc58eb2080307edacee2be46107cddcaa83577", "message": "Fix order of dwrf encryption group stats\n\nStats list should store encrypted stats in the order that nodes are\nlisted in the encryption group.", "committedDate": "2020-09-23T17:30:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5NzQwMQ==", "url": "https://github.com/prestodb/presto/pull/15214#discussion_r493797401", "bodyText": "You can optimize this piece a bit by extracting and moving encryptedStats.get(groupId) outside to line 621.", "author": "sdruzkin", "createdAt": "2020-09-23T18:21:25Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "diffHunk": "@@ -610,19 +610,22 @@ public void close()\n                 .collect(Collectors.toMap(Entry::getKey, entry -> utf8Slice(entry.getValue())));\n \n         List<ColumnStatistics> unencryptedStats = new ArrayList<>();\n-        Map<Integer, List<Slice>> encryptedStats = new HashMap<>();\n+        Map<Integer, Map<Integer, Slice>> encryptedStats = new HashMap<>();\n         addStatsRecursive(fileStats, 0, new HashMap<>(), unencryptedStats, encryptedStats);\n         Optional<DwrfEncryption> dwrfEncryption;\n         if (dwrfWriterEncryption.isPresent()) {\n             ImmutableList.Builder<EncryptionGroup> encryptionGroupBuilder = ImmutableList.builder();\n             List<WriterEncryptionGroup> writerEncryptionGroups = dwrfWriterEncryption.get().getWriterEncryptionGroups();\n             for (int i = 0; i < writerEncryptionGroups.size(); i++) {\n                 WriterEncryptionGroup group = writerEncryptionGroups.get(i);\n+                int groupId = i;\n                 encryptionGroupBuilder.add(\n                         new EncryptionGroup(\n                                 group.getNodes(),\n                                 Optional.empty(), // reader will just use key metadata from the stripe\n-                                encryptedStats.get(i)));\n+                                group.getNodes().stream()\n+                                        .map(nodeId -> encryptedStats.get(groupId).get(nodeId))", "originalCommit": "63cc58eb2080307edacee2be46107cddcaa83577", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04049b85bedc2ff75bcca6f9c5950f008cdb4f5b", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java b/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java\nindex 2533c1aaa8..37b62610a8 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java\n\n@@ -618,13 +618,13 @@ public class OrcWriter\n             List<WriterEncryptionGroup> writerEncryptionGroups = dwrfWriterEncryption.get().getWriterEncryptionGroups();\n             for (int i = 0; i < writerEncryptionGroups.size(); i++) {\n                 WriterEncryptionGroup group = writerEncryptionGroups.get(i);\n-                int groupId = i;\n+                Map<Integer, Slice> groupStats = encryptedStats.get(i);\n                 encryptionGroupBuilder.add(\n                         new EncryptionGroup(\n                                 group.getNodes(),\n                                 Optional.empty(), // reader will just use key metadata from the stripe\n                                 group.getNodes().stream()\n-                                        .map(nodeId -> encryptedStats.get(groupId).get(nodeId))\n+                                        .map(groupStats::get)\n                                         .collect(toList())));\n             }\n             dwrfEncryption = Optional.of(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwMDAyNQ==", "url": "https://github.com/prestodb/presto/pull/15214#discussion_r493800025", "bodyText": "Can we also add the same test but with the direct order? I briefly looked through other test cases, they all seems to have the same type for all columns.", "author": "sdruzkin", "createdAt": "2020-09-23T18:25:52Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java", "diffHunk": "@@ -311,6 +312,39 @@ public void testSingleEncryptionGroupRowType()\n                 outputColumns);\n     }\n \n+    @Test\n+    public void testEncryptionGroupWithReversedOrderNodes()", "originalCommit": "63cc58eb2080307edacee2be46107cddcaa83577", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwNzUyMw==", "url": "https://github.com/prestodb/presto/pull/15214#discussion_r493807523", "bodyText": "there are a couple tests that have multiple types (e.g. https://github.com/prestodb/presto/blob/master/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java#L315), but it's good to have a simple explicit test, so added that case.", "author": "rschlussel", "createdAt": "2020-09-23T18:38:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwMDAyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "04049b85bedc2ff75bcca6f9c5950f008cdb4f5b", "chunk": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java\nindex f106d7c153..d3e38e7a76 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java\n\n@@ -311,6 +311,39 @@ public class TestDecryption\n                 ImmutableMap.of(),\n                 outputColumns);\n     }\n+    @Test\n+    public void testEncryptionGroupWithMultipleTypes()\n+            throws Exception\n+    {\n+        Slice iek1 = Slices.utf8Slice(\"iek1\");\n+        DwrfWriterEncryption dwrfWriterEncryption = new DwrfWriterEncryption(\n+                UNKNOWN,\n+                ImmutableList.of(\n+                        new WriterEncryptionGroup(ImmutableList.of(1, 2), iek1)));\n+        List<Type> types = ImmutableList.of(BIGINT, VARCHAR);\n+        List<Long> intValues = ImmutableList.copyOf(intsBetween(0, 31_234)).stream()\n+                .map(Number::longValue)\n+                .collect(toImmutableList());\n+        List<String> varcharValues = ImmutableList.copyOf(intsBetween(0, 31_234)).stream()\n+                .map(String::valueOf)\n+                .collect(toImmutableList());\n+\n+        List<List<?>> values = ImmutableList.of(intValues, varcharValues);\n+        List<Integer> outputColumns = IntStream.range(0, types.size())\n+                .boxed()\n+                .collect(toImmutableList());\n+\n+        testDecryptionRoundTrip(\n+                types,\n+                values,\n+                values,\n+                Optional.of(dwrfWriterEncryption),\n+                ImmutableMap.of(1, iek1, 2, iek1),\n+                ImmutableMap.of(0, BIGINT, 1, VARCHAR),\n+                ImmutableMap.of(),\n+                outputColumns);\n+    }\n+\n \n     @Test\n     public void testEncryptionGroupWithReversedOrderNodes()\n"}}, {"oid": "04049b85bedc2ff75bcca6f9c5950f008cdb4f5b", "url": "https://github.com/prestodb/presto/commit/04049b85bedc2ff75bcca6f9c5950f008cdb4f5b", "message": "Fix order of dwrf encryption group stats\n\nStats list should store encrypted stats in the order that nodes are\nlisted in the encryption group.", "committedDate": "2020-09-23T18:36:09Z", "type": "forcePushed"}, {"oid": "f8b4101c4132c65a0f050942c45a72458b229010", "url": "https://github.com/prestodb/presto/commit/f8b4101c4132c65a0f050942c45a72458b229010", "message": "Fix order of dwrf encryption group stats\n\nStats list should store encrypted stats in the order that nodes are\nlisted in the encryption group.", "committedDate": "2020-09-23T19:59:57Z", "type": "commit"}, {"oid": "f8b4101c4132c65a0f050942c45a72458b229010", "url": "https://github.com/prestodb/presto/commit/f8b4101c4132c65a0f050942c45a72458b229010", "message": "Fix order of dwrf encryption group stats\n\nStats list should store encrypted stats in the order that nodes are\nlisted in the encryption group.", "committedDate": "2020-09-23T19:59:57Z", "type": "forcePushed"}]}