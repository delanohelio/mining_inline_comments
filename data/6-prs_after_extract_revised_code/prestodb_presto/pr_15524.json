{"pr_number": 15524, "pr_title": "Refactor AbstractTestQueryFramework to supply expectedQueryRunner", "pr_createdAt": "2020-12-15T23:46:24Z", "pr_url": "https://github.com/prestodb/presto/pull/15524", "timeline": [{"oid": "550de840febaf4431b8ce23674600ef69a91b16f", "url": "https://github.com/prestodb/presto/commit/550de840febaf4431b8ce23674600ef69a91b16f", "message": "Refactor AbstractTestQueryFramework to supply expectedQueryRunner", "committedDate": "2020-12-16T17:01:21Z", "type": "commit"}, {"oid": "550de840febaf4431b8ce23674600ef69a91b16f", "url": "https://github.com/prestodb/presto/commit/550de840febaf4431b8ce23674600ef69a91b16f", "message": "Refactor AbstractTestQueryFramework to supply expectedQueryRunner", "committedDate": "2020-12-16T17:01:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyNTY1Mg==", "url": "https://github.com/prestodb/presto/pull/15524#discussion_r544525652", "bodyText": "nit: Maybe ControlQueryRunner?", "author": "arhimondr", "createdAt": "2020-12-16T18:26:51Z", "path": "presto-main/src/main/java/com/facebook/presto/testing/ExpectedQueryRunner.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.testing;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.common.type.Type;\n+import org.intellij.lang.annotations.Language;\n+\n+import java.io.Closeable;\n+import java.util.List;\n+\n+public interface ExpectedQueryRunner", "originalCommit": "550de840febaf4431b8ce23674600ef69a91b16f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyOTE2MQ==", "url": "https://github.com/prestodb/presto/pull/15524#discussion_r544529161", "bodyText": "expected is the term used in the assert packages.  Is control used elsewhere in Presto?", "author": "jbroll", "createdAt": "2020-12-16T18:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyNTY1Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyNTc5MQ==", "url": "https://github.com/prestodb/presto/pull/15524#discussion_r544525791", "bodyText": "nit: space", "author": "arhimondr", "createdAt": "2020-12-16T18:27:05Z", "path": "presto-main/src/main/java/com/facebook/presto/testing/ExpectedQueryRunner.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.testing;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.common.type.Type;\n+import org.intellij.lang.annotations.Language;\n+\n+import java.io.Closeable;\n+import java.util.List;\n+\n+public interface ExpectedQueryRunner\n+        extends Closeable\n+{\n+    @Override\n+    void close();\n+    MaterializedResult execute(Session session, @Language(\"SQL\") String sql, List<? extends Type> resultTypes);", "originalCommit": "550de840febaf4431b8ce23674600ef69a91b16f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyNTk2MQ==", "url": "https://github.com/prestodb/presto/pull/15524#discussion_r544525961", "bodyText": "Does it have to be explicitly declared?", "author": "arhimondr", "createdAt": "2020-12-16T18:27:18Z", "path": "presto-main/src/main/java/com/facebook/presto/testing/ExpectedQueryRunner.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.testing;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.common.type.Type;\n+import org.intellij.lang.annotations.Language;\n+\n+import java.io.Closeable;\n+import java.util.List;\n+\n+public interface ExpectedQueryRunner\n+        extends Closeable\n+{\n+    @Override\n+    void close();", "originalCommit": "550de840febaf4431b8ce23674600ef69a91b16f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyNjY0Nw==", "url": "https://github.com/prestodb/presto/pull/15524#discussion_r544526647", "bodyText": "nit: control: ?", "author": "arhimondr", "createdAt": "2020-12-16T18:28:21Z", "path": "presto-tests/src/main/java/com/facebook/presto/tests/QueryAssertions.java", "diffHunk": "@@ -158,14 +159,14 @@ private static void assertQuery(\n         long expectedStart = System.nanoTime();\n         MaterializedResult expectedResults = null;\n         try {\n-            expectedResults = h2QueryRunner.execute(session, expected, actualResults.getTypes());\n+            expectedResults = expectedQueryRunner.execute(session, expected, actualResults.getTypes());\n         }\n         catch (RuntimeException ex) {\n             fail(\"Execution of 'expected' query failed: \" + expected, ex);\n         }\n         Duration totalTime = nanosSince(start);\n         if (totalTime.compareTo(Duration.succinctDuration(1, SECONDS)) > 0) {\n-            log.info(\"FINISHED in presto: %s, h2: %s, total: %s\", actualTime, nanosSince(expectedStart), totalTime);\n+            log.info(\"FINISHED in presto: %s, expected: %s, total: %s\", actualTime, nanosSince(expectedStart), totalTime);", "originalCommit": "550de840febaf4431b8ce23674600ef69a91b16f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}