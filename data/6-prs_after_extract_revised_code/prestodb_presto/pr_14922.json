{"pr_number": 14922, "pr_title": "Handle create page source for Druid segment on s3", "pr_createdAt": "2020-07-29T20:11:02Z", "pr_url": "https://github.com/prestodb/presto/pull/14922", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MjE4Ng==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r462672186", "bodyText": "Is there anything else we need escaping in the uri?  something like '?' and  '='.\nI'm thinking if we can use any existing '%' encoding function to do this.", "author": "beinan", "createdAt": "2020-07-30T00:56:39Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +114,41 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath() throws IOException\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        switch (type) {\n+            case \"s3_zip\":\n+                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";\n+                segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(\"bucket\"), loadSpec.get(\"key\")));\n+                break;\n+            case \"hdfs\":\n+                segmentLocURI = URI.create(loadSpec.get(\"path\"));\n+                break;\n+            case \"google\":\n+                segmentLocURI = URI.create(\n+                    format(\n+                        \"gs://%s/%s\",\n+                        loadSpec.get(\"bucket\"),\n+                        loadSpec.get(\"path\").replace(\":\", \"%3A\")));", "originalCommit": "0e1a62155e3e66d3d6868a9d5170272fc1e47559", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5MDUxNw==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463290517", "bodyText": "Changed to URLEncoder to process special chars in general.", "author": "jinyangli34", "createdAt": "2020-07-30T21:47:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MjE4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\nindex 86eefb0ba1..ca38860637 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n\n@@ -111,43 +130,40 @@ public class DruidSegmentInfo\n     {\n         Map<String, String> loadSpecification = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n+        return DeepStorageType.fromType(loadSpecification.get(DEEP_STORAGE_TYPE_KEY));\n     }\n \n-    public URI getDeepStoragePath() throws IOException\n+    public URI getDeepStoragePath()\n     {\n-        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n         final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n         final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n         final URI segmentLocURI;\n-        switch (type) {\n-            case \"s3_zip\":\n-                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";\n-                segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(\"bucket\"), loadSpec.get(\"key\")));\n-                break;\n-            case \"hdfs\":\n-                segmentLocURI = URI.create(loadSpec.get(\"path\"));\n-                break;\n-            case \"google\":\n-                segmentLocURI = URI.create(\n-                    format(\n-                        \"gs://%s/%s\",\n-                        loadSpec.get(\"bucket\"),\n-                        loadSpec.get(\"path\").replace(\":\", \"%3A\")));\n-                break;\n-            case \"local\":\n-                try {\n-                    segmentLocURI = new URI(\"file\", null, loadSpec.get(\"path\"), null, null);\n-                }\n-                catch (URISyntaxException e) {\n-                    throw new IOException(e);\n-                }\n-                break;\n-            default:\n-                throw new IOException(\"Unable to determine segment filesystem: \" + type);\n+        try {\n+            switch (DeepStorageType.fromType(type)) {\n+                case S3:\n+                    final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n+                    segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n+                    break;\n+                case HDFS:\n+                    segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n+                    break;\n+                case GCS:\n+                    segmentLocURI = URI.create(\n+                            format(\"gs://%s/%s\",\n+                                loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n+                                URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n+                    break;\n+                case LOCAL:\n+                    segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n+                    break;\n+                default:\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unsupported segment filesystem: %s\", type));\n+            }\n+        }\n+        catch (URISyntaxException | UnsupportedEncodingException e) {\n+            throw new PrestoException(DRUID_METADATA_ERROR, e);\n         }\n-\n         return segmentLocURI;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3NDY1Ng==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r462674656", "bodyText": "extract s3a, s3n, S2Schema and etc. as constants?", "author": "beinan", "createdAt": "2020-07-30T01:06:03Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +114,41 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath() throws IOException\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        switch (type) {\n+            case \"s3_zip\":\n+                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";", "originalCommit": "0e1a62155e3e66d3d6868a9d5170272fc1e47559", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5MDU1MQ==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463290551", "bodyText": "done", "author": "jinyangli34", "createdAt": "2020-07-30T21:48:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3NDY1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\nindex 86eefb0ba1..ca38860637 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n\n@@ -111,43 +130,40 @@ public class DruidSegmentInfo\n     {\n         Map<String, String> loadSpecification = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n+        return DeepStorageType.fromType(loadSpecification.get(DEEP_STORAGE_TYPE_KEY));\n     }\n \n-    public URI getDeepStoragePath() throws IOException\n+    public URI getDeepStoragePath()\n     {\n-        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n         final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n         final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n         final URI segmentLocURI;\n-        switch (type) {\n-            case \"s3_zip\":\n-                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";\n-                segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(\"bucket\"), loadSpec.get(\"key\")));\n-                break;\n-            case \"hdfs\":\n-                segmentLocURI = URI.create(loadSpec.get(\"path\"));\n-                break;\n-            case \"google\":\n-                segmentLocURI = URI.create(\n-                    format(\n-                        \"gs://%s/%s\",\n-                        loadSpec.get(\"bucket\"),\n-                        loadSpec.get(\"path\").replace(\":\", \"%3A\")));\n-                break;\n-            case \"local\":\n-                try {\n-                    segmentLocURI = new URI(\"file\", null, loadSpec.get(\"path\"), null, null);\n-                }\n-                catch (URISyntaxException e) {\n-                    throw new IOException(e);\n-                }\n-                break;\n-            default:\n-                throw new IOException(\"Unable to determine segment filesystem: \" + type);\n+        try {\n+            switch (DeepStorageType.fromType(type)) {\n+                case S3:\n+                    final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n+                    segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n+                    break;\n+                case HDFS:\n+                    segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n+                    break;\n+                case GCS:\n+                    segmentLocURI = URI.create(\n+                            format(\"gs://%s/%s\",\n+                                loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n+                                URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n+                    break;\n+                case LOCAL:\n+                    segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n+                    break;\n+                default:\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unsupported segment filesystem: %s\", type));\n+            }\n+        }\n+        catch (URISyntaxException | UnsupportedEncodingException e) {\n+            throw new PrestoException(DRUID_METADATA_ERROR, e);\n         }\n-\n         return segmentLocURI;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3NTc3Nw==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r462675777", "bodyText": "Is it better to throw a PrestoException(DRUID_METADATA_ERROR`, ...)?  also for line 144", "author": "beinan", "createdAt": "2020-07-30T01:10:18Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +114,41 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath() throws IOException\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        switch (type) {\n+            case \"s3_zip\":\n+                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";\n+                segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(\"bucket\"), loadSpec.get(\"key\")));\n+                break;\n+            case \"hdfs\":\n+                segmentLocURI = URI.create(loadSpec.get(\"path\"));\n+                break;\n+            case \"google\":\n+                segmentLocURI = URI.create(\n+                    format(\n+                        \"gs://%s/%s\",\n+                        loadSpec.get(\"bucket\"),\n+                        loadSpec.get(\"path\").replace(\":\", \"%3A\")));\n+                break;\n+            case \"local\":\n+                try {\n+                    segmentLocURI = new URI(\"file\", null, loadSpec.get(\"path\"), null, null);\n+                }\n+                catch (URISyntaxException e) {\n+                    throw new IOException(e);\n+                }\n+                break;\n+            default:\n+                throw new IOException(\"Unable to determine segment filesystem: \" + type);", "originalCommit": "0e1a62155e3e66d3d6868a9d5170272fc1e47559", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5MDU4OA==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463290588", "bodyText": "done", "author": "jinyangli34", "createdAt": "2020-07-30T21:48:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3NTc3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\nindex 86eefb0ba1..ca38860637 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n\n@@ -111,43 +130,40 @@ public class DruidSegmentInfo\n     {\n         Map<String, String> loadSpecification = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n+        return DeepStorageType.fromType(loadSpecification.get(DEEP_STORAGE_TYPE_KEY));\n     }\n \n-    public URI getDeepStoragePath() throws IOException\n+    public URI getDeepStoragePath()\n     {\n-        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n         final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n         final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n         final URI segmentLocURI;\n-        switch (type) {\n-            case \"s3_zip\":\n-                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";\n-                segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(\"bucket\"), loadSpec.get(\"key\")));\n-                break;\n-            case \"hdfs\":\n-                segmentLocURI = URI.create(loadSpec.get(\"path\"));\n-                break;\n-            case \"google\":\n-                segmentLocURI = URI.create(\n-                    format(\n-                        \"gs://%s/%s\",\n-                        loadSpec.get(\"bucket\"),\n-                        loadSpec.get(\"path\").replace(\":\", \"%3A\")));\n-                break;\n-            case \"local\":\n-                try {\n-                    segmentLocURI = new URI(\"file\", null, loadSpec.get(\"path\"), null, null);\n-                }\n-                catch (URISyntaxException e) {\n-                    throw new IOException(e);\n-                }\n-                break;\n-            default:\n-                throw new IOException(\"Unable to determine segment filesystem: \" + type);\n+        try {\n+            switch (DeepStorageType.fromType(type)) {\n+                case S3:\n+                    final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n+                    segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n+                    break;\n+                case HDFS:\n+                    segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n+                    break;\n+                case GCS:\n+                    segmentLocURI = URI.create(\n+                            format(\"gs://%s/%s\",\n+                                loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n+                                URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n+                    break;\n+                case LOCAL:\n+                    segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n+                    break;\n+                default:\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unsupported segment filesystem: %s\", type));\n+            }\n+        }\n+        catch (URISyntaxException | UnsupportedEncodingException e) {\n+            throw new PrestoException(DRUID_METADATA_ERROR, e);\n         }\n-\n         return segmentLocURI;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4ODY0Mg==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463388642", "bodyText": "Any chance to switch by the enum you just defined -- DeepStorageType ?", "author": "beinan", "createdAt": "2020-07-31T03:39:21Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -114,38 +123,37 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public URI getDeepStoragePath() throws IOException\n+    public URI getDeepStoragePath()\n     {\n         // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n         final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n         final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n         final URI segmentLocURI;\n-        switch (type) {\n-            case \"s3_zip\":\n-                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";\n-                segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(\"bucket\"), loadSpec.get(\"key\")));\n-                break;\n-            case \"hdfs\":\n-                segmentLocURI = URI.create(loadSpec.get(\"path\"));\n-                break;\n-            case \"google\":\n-                segmentLocURI = URI.create(\n-                    format(\n-                        \"gs://%s/%s\",\n-                        loadSpec.get(\"bucket\"),\n-                        loadSpec.get(\"path\").replace(\":\", \"%3A\")));\n-                break;\n-            case \"local\":\n-                try {\n-                    segmentLocURI = new URI(\"file\", null, loadSpec.get(\"path\"), null, null);\n-                }\n-                catch (URISyntaxException e) {\n-                    throw new IOException(e);\n-                }\n-                break;\n-            default:\n-                throw new IOException(\"Unable to determine segment filesystem: \" + type);\n+        try {\n+            switch (type) {\n+                case \"s3_zip\":", "originalCommit": "dcc401a95f24667b9ccbf815cd629f2f0fdda745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDE5Mw==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463454193", "bodyText": "Done", "author": "jinyangli34", "createdAt": "2020-07-31T07:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4ODY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\nindex 21317ef054..ca38860637 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n\n@@ -120,42 +130,40 @@ public class DruidSegmentInfo\n     {\n         Map<String, String> loadSpecification = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n+        return DeepStorageType.fromType(loadSpecification.get(DEEP_STORAGE_TYPE_KEY));\n     }\n \n     public URI getDeepStoragePath()\n     {\n-        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n         final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n         final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n         final URI segmentLocURI;\n         try {\n-            switch (type) {\n-                case \"s3_zip\":\n+            switch (DeepStorageType.fromType(type)) {\n+                case S3:\n                     final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n                     segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n                     break;\n-                case \"hdfs\":\n+                case HDFS:\n                     segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n                     break;\n-                case \"google\":\n+                case GCS:\n                     segmentLocURI = URI.create(\n                             format(\"gs://%s/%s\",\n                                 loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n                                 URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n                     break;\n-                case \"local\":\n+                case LOCAL:\n                     segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n                     break;\n                 default:\n-                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unable to determine segment filesystem: %s\", type));\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unsupported segment filesystem: %s\", type));\n             }\n         }\n         catch (URISyntaxException | UnsupportedEncodingException e) {\n             throw new PrestoException(DRUID_METADATA_ERROR, e);\n         }\n-\n         return segmentLocURI;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM5MTEzMg==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463391132", "bodyText": "Any document or github issue we can link here rather than a piece of source code?", "author": "beinan", "createdAt": "2020-07-31T03:50:51Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -114,38 +123,37 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public URI getDeepStoragePath() throws IOException\n+    public URI getDeepStoragePath()\n     {\n         // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776", "originalCommit": "dcc401a95f24667b9ccbf815cd629f2f0fdda745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDgwNw==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463454807", "bodyText": "I'm removing the link as current code looks self-explained after clean up. Let me know if you prefer a github issue link here.", "author": "jinyangli34", "createdAt": "2020-07-31T07:41:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM5MTEzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ3MjUwMA==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463472500", "bodyText": "Nice work, I think we can just remove the link.  Thanks!", "author": "beinan", "createdAt": "2020-07-31T08:20:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM5MTEzMg=="}], "type": "inlineReview", "revised_code": {"commit": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\nindex 21317ef054..ca38860637 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n\n@@ -120,42 +130,40 @@ public class DruidSegmentInfo\n     {\n         Map<String, String> loadSpecification = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n+        return DeepStorageType.fromType(loadSpecification.get(DEEP_STORAGE_TYPE_KEY));\n     }\n \n     public URI getDeepStoragePath()\n     {\n-        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n         final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n         final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n         final URI segmentLocURI;\n         try {\n-            switch (type) {\n-                case \"s3_zip\":\n+            switch (DeepStorageType.fromType(type)) {\n+                case S3:\n                     final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n                     segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n                     break;\n-                case \"hdfs\":\n+                case HDFS:\n                     segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n                     break;\n-                case \"google\":\n+                case GCS:\n                     segmentLocURI = URI.create(\n                             format(\"gs://%s/%s\",\n                                 loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n                                 URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n                     break;\n-                case \"local\":\n+                case LOCAL:\n                     segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n                     break;\n                 default:\n-                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unable to determine segment filesystem: %s\", type));\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unsupported segment filesystem: %s\", type));\n             }\n         }\n         catch (URISyntaxException | UnsupportedEncodingException e) {\n             throw new PrestoException(DRUID_METADATA_ERROR, e);\n         }\n-\n         return segmentLocURI;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMTczNQ==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463421735", "bodyText": "s/S3_ZIP/S3/g\nzip is the file format, we just use S3 for storage type", "author": "zhenxiao", "createdAt": "2020-07-31T06:05:37Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -42,7 +50,10 @@\n \n     public enum DeepStorageType\n     {\n-        HDFS(\"hdfs\");\n+        HDFS(\"hdfs\"),\n+        S3_ZIP(\"s3_zip\"),", "originalCommit": "dcc401a95f24667b9ccbf815cd629f2f0fdda745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NTQ2NA==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463455464", "bodyText": "Updated enum variable name, while keeping the type name as defined from Druid.", "author": "jinyangli34", "createdAt": "2020-07-31T07:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMTczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\nindex 21317ef054..ca38860637 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n\n@@ -51,8 +51,8 @@ public class DruidSegmentInfo\n     public enum DeepStorageType\n     {\n         HDFS(\"hdfs\"),\n-        S3_ZIP(\"s3_zip\"),\n-        GOOGLE(\"google\"),\n+        S3(\"s3_zip\"),\n+        GCS(\"google\"),\n         LOCAL(\"local\");\n \n         private final String type;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMTc4OQ==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463421789", "bodyText": "s/GOOGLE/GCS/g", "author": "zhenxiao", "createdAt": "2020-07-31T06:05:55Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -42,7 +50,10 @@\n \n     public enum DeepStorageType\n     {\n-        HDFS(\"hdfs\");\n+        HDFS(\"hdfs\"),\n+        S3_ZIP(\"s3_zip\"),\n+        GOOGLE(\"google\"),", "originalCommit": "dcc401a95f24667b9ccbf815cd629f2f0fdda745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NTUwNQ==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463455505", "bodyText": "Done", "author": "jinyangli34", "createdAt": "2020-07-31T07:42:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMTc4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\nindex 21317ef054..ca38860637 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n\n@@ -51,8 +51,8 @@ public class DruidSegmentInfo\n     public enum DeepStorageType\n     {\n         HDFS(\"hdfs\"),\n-        S3_ZIP(\"s3_zip\"),\n-        GOOGLE(\"google\"),\n+        S3(\"s3_zip\"),\n+        GCS(\"google\"),\n         LOCAL(\"local\");\n \n         private final String type;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMjkwOA==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463422908", "bodyText": "Unsupported segment filesystem", "author": "zhenxiao", "createdAt": "2020-07-31T06:10:01Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +123,40 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath()\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        try {\n+            switch (type) {\n+                case \"s3_zip\":\n+                    final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n+                    segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n+                    break;\n+                case \"hdfs\":\n+                    segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n+                    break;\n+                case \"google\":\n+                    segmentLocURI = URI.create(\n+                            format(\"gs://%s/%s\",\n+                                loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n+                                URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n+                    break;\n+                case \"local\":\n+                    segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n+                    break;\n+                default:\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unable to determine segment filesystem: %s\", type));", "originalCommit": "dcc401a95f24667b9ccbf815cd629f2f0fdda745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NTUyNw==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463455527", "bodyText": "Done", "author": "jinyangli34", "createdAt": "2020-07-31T07:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMjkwOA=="}], "type": "inlineReview", "revised_code": {"commit": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\nindex 21317ef054..ca38860637 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n\n@@ -120,42 +130,40 @@ public class DruidSegmentInfo\n     {\n         Map<String, String> loadSpecification = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n+        return DeepStorageType.fromType(loadSpecification.get(DEEP_STORAGE_TYPE_KEY));\n     }\n \n     public URI getDeepStoragePath()\n     {\n-        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n         final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n         final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n         final URI segmentLocURI;\n         try {\n-            switch (type) {\n-                case \"s3_zip\":\n+            switch (DeepStorageType.fromType(type)) {\n+                case S3:\n                     final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n                     segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n                     break;\n-                case \"hdfs\":\n+                case HDFS:\n                     segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n                     break;\n-                case \"google\":\n+                case GCS:\n                     segmentLocURI = URI.create(\n                             format(\"gs://%s/%s\",\n                                 loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n                                 URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n                     break;\n-                case \"local\":\n+                case LOCAL:\n                     segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n                     break;\n                 default:\n-                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unable to determine segment filesystem: %s\", type));\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unsupported segment filesystem: %s\", type));\n             }\n         }\n         catch (URISyntaxException | UnsupportedEncodingException e) {\n             throw new PrestoException(DRUID_METADATA_ERROR, e);\n         }\n-\n         return segmentLocURI;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMzA1Mw==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463423053", "bodyText": "remove this blank line", "author": "zhenxiao", "createdAt": "2020-07-31T06:10:36Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +123,40 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath()\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        try {\n+            switch (type) {\n+                case \"s3_zip\":\n+                    final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n+                    segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n+                    break;\n+                case \"hdfs\":\n+                    segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n+                    break;\n+                case \"google\":\n+                    segmentLocURI = URI.create(\n+                            format(\"gs://%s/%s\",\n+                                loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n+                                URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n+                    break;\n+                case \"local\":\n+                    segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n+                    break;\n+                default:\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unable to determine segment filesystem: %s\", type));\n+            }\n+        }\n+        catch (URISyntaxException | UnsupportedEncodingException e) {\n+            throw new PrestoException(DRUID_METADATA_ERROR, e);\n+        }\n+", "originalCommit": "dcc401a95f24667b9ccbf815cd629f2f0fdda745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NTU2Mg==", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463455562", "bodyText": "Done", "author": "jinyangli34", "createdAt": "2020-07-31T07:42:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMzA1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\nindex 21317ef054..ca38860637 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java\n\n@@ -120,42 +130,40 @@ public class DruidSegmentInfo\n     {\n         Map<String, String> loadSpecification = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n+        return DeepStorageType.fromType(loadSpecification.get(DEEP_STORAGE_TYPE_KEY));\n     }\n \n     public URI getDeepStoragePath()\n     {\n-        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n         final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n         final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n         final URI segmentLocURI;\n         try {\n-            switch (type) {\n-                case \"s3_zip\":\n+            switch (DeepStorageType.fromType(type)) {\n+                case S3:\n                     final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n                     segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n                     break;\n-                case \"hdfs\":\n+                case HDFS:\n                     segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n                     break;\n-                case \"google\":\n+                case GCS:\n                     segmentLocURI = URI.create(\n                             format(\"gs://%s/%s\",\n                                 loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n                                 URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n                     break;\n-                case \"local\":\n+                case LOCAL:\n                     segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n                     break;\n                 default:\n-                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unable to determine segment filesystem: %s\", type));\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unsupported segment filesystem: %s\", type));\n             }\n         }\n         catch (URISyntaxException | UnsupportedEncodingException e) {\n             throw new PrestoException(DRUID_METADATA_ERROR, e);\n         }\n-\n         return segmentLocURI;\n     }\n \n"}}, {"oid": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "url": "https://github.com/prestodb/presto/commit/680a43fc9becd4ec872a3f7ea75389e5bf864978", "message": "Handle create page source for Druid segment on s3", "committedDate": "2020-08-01T00:17:17Z", "type": "commit"}, {"oid": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "url": "https://github.com/prestodb/presto/commit/680a43fc9becd4ec872a3f7ea75389e5bf864978", "message": "Handle create page source for Druid segment on s3", "committedDate": "2020-08-01T00:17:17Z", "type": "forcePushed"}]}