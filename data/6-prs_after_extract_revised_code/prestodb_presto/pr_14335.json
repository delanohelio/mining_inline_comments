{"pr_number": 14335, "pr_title": "Add native parquet writer", "pr_createdAt": "2020-04-04T01:19:51Z", "pr_url": "https://github.com/prestodb/presto/pull/14335", "timeline": [{"oid": "8aac9c18c7169d4ffcdc34b1a9193c316047ca4a", "url": "https://github.com/prestodb/presto/commit/8aac9c18c7169d4ffcdc34b1a9193c316047ca4a", "message": "Add native parquet writer\n\nCherry-pick of https://github.com/prestosql/presto/commit/70b12894bc867c29491cf1eb6ac3da4935f91980\n\nCo-authored-by: Zhenxiao Luo <zluo@twitter.com>", "committedDate": "2020-04-04T01:06:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0NzUwNA==", "url": "https://github.com/prestodb/presto/pull/14335#discussion_r404247504", "bodyText": "No strong opinion, but have we considered using full name for this class, say, DefinitionLevelIterable?", "author": "shixuan-fan", "createdAt": "2020-04-06T17:01:06Z", "path": "presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.parquet.writer;\n+\n+import com.facebook.presto.parquet.writer.repdef.DefLevelIterable;\n+import com.facebook.presto.parquet.writer.repdef.RepLevelIterable;\n+import com.facebook.presto.spi.block.Block;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ColumnChunk\n+{\n+    private final Block block;\n+    private final List<DefLevelIterable> defLevelIterables;", "originalCommit": "8aac9c18c7169d4ffcdc34b1a9193c316047ca4a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c90c35464dd40cabccee8f75e3e978c58b08feed", "chunk": "diff --git a/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java b/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java\nindex 47ccac83d5..3091cf93bd 100644\n--- a/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java\n+++ b/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java\n\n@@ -13,8 +13,8 @@\n  */\n package com.facebook.presto.parquet.writer;\n \n-import com.facebook.presto.parquet.writer.repdef.DefLevelIterable;\n-import com.facebook.presto.parquet.writer.repdef.RepLevelIterable;\n+import com.facebook.presto.parquet.writer.levels.DefinitionLevelIterable;\n+import com.facebook.presto.parquet.writer.levels.RepetitionLevelIterable;\n import com.facebook.presto.spi.block.Block;\n import com.google.common.collect.ImmutableList;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0NzU4Nw==", "url": "https://github.com/prestodb/presto/pull/14335#discussion_r404247587", "bodyText": "ditto", "author": "shixuan-fan", "createdAt": "2020-04-06T17:01:14Z", "path": "presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.parquet.writer;\n+\n+import com.facebook.presto.parquet.writer.repdef.DefLevelIterable;\n+import com.facebook.presto.parquet.writer.repdef.RepLevelIterable;\n+import com.facebook.presto.spi.block.Block;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ColumnChunk\n+{\n+    private final Block block;\n+    private final List<DefLevelIterable> defLevelIterables;\n+    private final List<RepLevelIterable> repLevelIterables;", "originalCommit": "8aac9c18c7169d4ffcdc34b1a9193c316047ca4a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c90c35464dd40cabccee8f75e3e978c58b08feed", "chunk": "diff --git a/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java b/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java\nindex 47ccac83d5..3091cf93bd 100644\n--- a/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java\n+++ b/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java\n\n@@ -13,8 +13,8 @@\n  */\n package com.facebook.presto.parquet.writer;\n \n-import com.facebook.presto.parquet.writer.repdef.DefLevelIterable;\n-import com.facebook.presto.parquet.writer.repdef.RepLevelIterable;\n+import com.facebook.presto.parquet.writer.levels.DefinitionLevelIterable;\n+import com.facebook.presto.parquet.writer.levels.RepetitionLevelIterable;\n import com.facebook.presto.spi.block.Block;\n import com.google.common.collect.ImmutableList;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1MDI3NA==", "url": "https://github.com/prestodb/presto/pull/14335#discussion_r404250274", "bodyText": "Is this supposed to be WriterBuilder?", "author": "shixuan-fan", "createdAt": "2020-04-06T17:05:22Z", "path": "presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ParquetWriters.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.parquet.writer;\n+\n+import com.facebook.presto.parquet.writer.valuewriter.BigintValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.BooleanValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.CharValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.DateValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.DecimalValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.DoubleValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.IntegerValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.PrimitiveValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.RealValueWriter;\n+import com.facebook.presto.spi.PrestoException;\n+import com.facebook.presto.spi.type.CharType;\n+import com.facebook.presto.spi.type.DecimalType;\n+import com.facebook.presto.spi.type.RealType;\n+import com.facebook.presto.spi.type.Type;\n+import com.facebook.presto.spi.type.VarbinaryType;\n+import com.facebook.presto.spi.type.VarcharType;\n+import com.google.common.collect.ImmutableList;\n+import org.apache.parquet.column.ColumnDescriptor;\n+import org.apache.parquet.column.ParquetProperties;\n+import org.apache.parquet.column.values.ValuesWriter;\n+import org.apache.parquet.hadoop.metadata.CompressionCodecName;\n+import org.apache.parquet.schema.GroupType;\n+import org.apache.parquet.schema.MessageType;\n+import org.apache.parquet.schema.PrimitiveType;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.facebook.presto.spi.StandardErrorCode.NOT_SUPPORTED;\n+import static com.facebook.presto.spi.type.BigintType.BIGINT;\n+import static com.facebook.presto.spi.type.BooleanType.BOOLEAN;\n+import static com.facebook.presto.spi.type.DateType.DATE;\n+import static com.facebook.presto.spi.type.DoubleType.DOUBLE;\n+import static com.facebook.presto.spi.type.IntegerType.INTEGER;\n+import static com.facebook.presto.spi.type.SmallintType.SMALLINT;\n+import static com.facebook.presto.spi.type.TimestampType.TIMESTAMP;\n+import static com.facebook.presto.spi.type.TinyintType.TINYINT;\n+import static java.lang.String.format;\n+import static java.util.Objects.requireNonNull;\n+\n+class ParquetWriters\n+{\n+    private ParquetWriters() {}\n+\n+    static List<ColumnWriter> getColumnWriters(MessageType messageType, Map<List<String>, Type> prestoTypes, ParquetProperties parquetProperties, CompressionCodecName compressionCodecName)\n+    {\n+        WriteBuilder writeBuilder = new WriteBuilder(messageType, prestoTypes, parquetProperties, compressionCodecName);\n+        ParquetTypeVisitor.visit(messageType, writeBuilder);\n+        return writeBuilder.build();\n+    }\n+\n+    private static class WriteBuilder", "originalCommit": "8aac9c18c7169d4ffcdc34b1a9193c316047ca4a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c90c35464dd40cabccee8f75e3e978c58b08feed", "chunk": "diff --git a/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ParquetWriters.java b/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ParquetWriters.java\nindex 50af372b4c..ee893ae0b8 100644\n--- a/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ParquetWriters.java\n+++ b/presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ParquetWriters.java\n\n@@ -60,12 +60,12 @@ class ParquetWriters\n \n     static List<ColumnWriter> getColumnWriters(MessageType messageType, Map<List<String>, Type> prestoTypes, ParquetProperties parquetProperties, CompressionCodecName compressionCodecName)\n     {\n-        WriteBuilder writeBuilder = new WriteBuilder(messageType, prestoTypes, parquetProperties, compressionCodecName);\n+        WriterBuilder writeBuilder = new WriterBuilder(messageType, prestoTypes, parquetProperties, compressionCodecName);\n         ParquetTypeVisitor.visit(messageType, writeBuilder);\n         return writeBuilder.build();\n     }\n \n-    private static class WriteBuilder\n+    private static class WriterBuilder\n             extends ParquetTypeVisitor<ColumnWriter>\n     {\n         private final MessageType type;\n"}}, {"oid": "c90c35464dd40cabccee8f75e3e978c58b08feed", "url": "https://github.com/prestodb/presto/commit/c90c35464dd40cabccee8f75e3e978c58b08feed", "message": "Use full name for Parquet classes", "committedDate": "2020-04-06T22:17:27Z", "type": "commit"}]}