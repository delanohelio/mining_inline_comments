{"pr_number": 14227, "pr_title": "Remove workaround for ConcurrentMap.compute", "pr_createdAt": "2020-03-09T18:41:14Z", "pr_url": "https://github.com/prestodb/presto/pull/14227", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxMTA4MQ==", "url": "https://github.com/prestodb/presto/pull/14227#discussion_r397611081", "bodyText": "nit: instead of (key, value), what about (operatorId, accumulatedSum) ?", "author": "wenleix", "createdAt": "2020-03-25T05:03:42Z", "path": "presto-main/src/main/java/com/facebook/presto/operator/PipelineContext.java", "diffHunk": "@@ -195,19 +195,7 @@ public void driverFinished(DriverContext driverContext)\n         // merge the operator stats into the operator summary\n         List<OperatorStats> operators = driverStats.getOperatorStats();\n         for (OperatorStats operator : operators) {\n-            // TODO: replace with ConcurrentMap.compute() when we migrate to java 8\n-            OperatorStats updated;\n-            OperatorStats current;\n-            do {\n-                current = operatorSummaries.get(operator.getOperatorId());\n-                if (current != null) {\n-                    updated = current.add(operator);\n-                }\n-                else {\n-                    updated = operator;\n-                }\n-            }\n-            while (!compareAndSet(operatorSummaries, operator.getOperatorId(), current, updated));\n+            operatorSummaries.compute(operator.getOperatorId(), (key, value) -> value == null ? operator : value.add(operator));", "originalCommit": "c5ebd95d1ab4a47f83cbb3d393bfa1afbc99123b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a6e23410f465fcba8bbae6a70d744885c9c8c658", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/PipelineContext.java b/presto-main/src/main/java/com/facebook/presto/operator/PipelineContext.java\nindex 7e8a3774c6..860d6bcef1 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/PipelineContext.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/PipelineContext.java\n\n@@ -195,7 +195,7 @@ public class PipelineContext\n         // merge the operator stats into the operator summary\n         List<OperatorStats> operators = driverStats.getOperatorStats();\n         for (OperatorStats operator : operators) {\n-            operatorSummaries.compute(operator.getOperatorId(), (key, value) -> value == null ? operator : value.add(operator));\n+            operatorSummaries.compute(operator.getOperatorId(), (operatorId, summaryStats) -> summaryStats == null ? operator : summaryStats.add(operator));\n         }\n \n         rawInputDataSize.update(driverStats.getRawInputDataSize().toBytes());\n"}}, {"oid": "a6e23410f465fcba8bbae6a70d744885c9c8c658", "url": "https://github.com/prestodb/presto/commit/a6e23410f465fcba8bbae6a70d744885c9c8c658", "message": "Remove workaround for ConcurrentMap.compute\n\nWe have been using java 8 features for a long time, so we can remove this\nworkaround from PipelineContext.", "committedDate": "2020-07-01T15:04:39Z", "type": "commit"}, {"oid": "a6e23410f465fcba8bbae6a70d744885c9c8c658", "url": "https://github.com/prestodb/presto/commit/a6e23410f465fcba8bbae6a70d744885c9c8c658", "message": "Remove workaround for ConcurrentMap.compute\n\nWe have been using java 8 features for a long time, so we can remove this\nworkaround from PipelineContext.", "committedDate": "2020-07-01T15:04:39Z", "type": "forcePushed"}]}