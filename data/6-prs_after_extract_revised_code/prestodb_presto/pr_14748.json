{"pr_number": 14748, "pr_title": "Introduce CacheQuotaRequirementProvider", "pr_createdAt": "2020-06-29T19:14:53Z", "pr_url": "https://github.com/prestodb/presto/pull/14748", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIyNjQxMQ==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r447226411", "bodyText": "I don't think we need to send provider around?", "author": "shixuan-fan", "createdAt": "2020-06-29T20:14:23Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.cache.CacheConfig;\n+import com.facebook.presto.spi.PrestoException;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.inject.Inject;\n+import io.airlift.units.DataSize;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static com.facebook.presto.hive.CacheQuotaScope.GLOBAL;\n+import static com.facebook.presto.hive.CacheQuotaUtil.GLOBAL_PATH;\n+import static com.facebook.presto.hive.CacheQuotaUtil.completePartitionPath;\n+import static com.facebook.presto.hive.CacheQuotaUtil.completeTablePath;\n+import static com.facebook.presto.hive.HiveErrorCode.HIVE_UNKNOWN_ERROR;\n+import static java.lang.String.format;\n+import static java.util.Objects.requireNonNull;\n+\n+public class ConfigBasedCacheQuotaProvider\n+        implements CacheQuotaProvider\n+{\n+    public static final ConfigBasedCacheQuotaProvider NO_CACHE_REQUIREMENT = new ConfigBasedCacheQuotaProvider(GLOBAL, Optional.empty());\n+\n+    private final CacheQuotaScope cacheQuotaScope;\n+    private final Optional<DataSize> configuredCacheQuota;\n+\n+    @Inject\n+    public ConfigBasedCacheQuotaProvider(CacheConfig cacheConfig)\n+    {\n+        requireNonNull(cacheConfig, \"cacheConfig is null\");\n+        this.cacheQuotaScope = cacheConfig.getCacheQuotaScope();\n+        this.configuredCacheQuota = cacheConfig.getDefaultCacheQuota();\n+    }\n+\n+    @JsonCreator\n+    public ConfigBasedCacheQuotaProvider(", "originalCommit": "f421674c28cea7d180f4d63f48ce7bf79478dd00", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f288d72e22cdd34635b773f42403c24915639737", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java b/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java\nindex b7f0946f52..7d42550a66 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java\n\n@@ -15,18 +15,14 @@ package com.facebook.presto.hive;\n \n import com.facebook.presto.cache.CacheConfig;\n import com.facebook.presto.spi.PrestoException;\n-import com.fasterxml.jackson.annotation.JsonCreator;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.inject.Inject;\n import io.airlift.units.DataSize;\n \n-import java.util.Objects;\n import java.util.Optional;\n \n import static com.facebook.presto.hive.CacheQuotaScope.GLOBAL;\n-import static com.facebook.presto.hive.CacheQuotaUtil.GLOBAL_PATH;\n-import static com.facebook.presto.hive.CacheQuotaUtil.completePartitionPath;\n-import static com.facebook.presto.hive.CacheQuotaUtil.completeTablePath;\n+import static com.facebook.presto.hive.CacheQuotaScope.SCHEMA;\n+import static com.facebook.presto.hive.CacheQuotaScope.TABLE;\n import static com.facebook.presto.hive.HiveErrorCode.HIVE_UNKNOWN_ERROR;\n import static java.lang.String.format;\n import static java.util.Objects.requireNonNull;\n"}}, {"oid": "f288d72e22cdd34635b773f42403c24915639737", "url": "https://github.com/prestodb/presto/commit/f288d72e22cdd34635b773f42403c24915639737", "message": "Introduce cacheQuotaProvider and refactor", "committedDate": "2020-07-02T18:59:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0MzE0Ng==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r450343146", "bodyText": "nit: you could get this String by creating SchemaTableName and using SchemaTableName#toString", "author": "shixuan-fan", "createdAt": "2020-07-06T16:33:10Z", "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaUtil.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+public class CacheQuotaUtil\n+{\n+    private CacheQuotaUtil() {}\n+\n+    public static final String GLOBAL_PATH = \".\";\n+\n+    public static String completeTablePath(String schema, String table)", "originalCommit": "f288d72e22cdd34635b773f42403c24915639737", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "279053695c73a131f00d2af44237fb6739a16ee4", "chunk": "diff --git a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaUtil.java b/presto-orc/src/main/java/com/facebook/presto/orc/OrcEncryptionException.java\nsimilarity index 56%\nrename from presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaUtil.java\nrename to presto-orc/src/main/java/com/facebook/presto/orc/OrcEncryptionException.java\nindex f2157efccc..20093e9ab6 100644\n--- a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaUtil.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/OrcEncryptionException.java\n\n@@ -11,21 +11,15 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package com.facebook.presto.hive;\n+package com.facebook.presto.orc;\n \n-public class CacheQuotaUtil\n-{\n-    private CacheQuotaUtil() {}\n-\n-    public static final String GLOBAL_PATH = \".\";\n-\n-    public static String completeTablePath(String schema, String table)\n-    {\n-        return String.format(\"%s.%s\", schema, table);\n-    }\n+import static java.lang.String.format;\n \n-    public static String completePartitionPath(String schema, String table, String partition)\n+public class OrcEncryptionException\n+        extends RuntimeException\n+{\n+    public OrcEncryptionException(String messageFormat, Object... args)\n     {\n-        return String.format(\"%s.%s.%s\", schema, table, partition);\n+        super(format(messageFormat, args));\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0NDIyMw==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r450344223", "bodyText": "This function signature seems to be a bit conflict with the javadoc above, which mentions we could get quota on partition scope. Since we don't want to compute it for every split, the easiest way to move forward is to add comment here saying we don't support different partition quota within one table.\nOf course we could return a map or make CacheQuotaRequirement to be more sophisticated, but let's start with something simple.", "author": "shixuan-fan", "createdAt": "2020-07-06T16:34:55Z", "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaProvider.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+public interface CacheQuotaProvider\n+{\n+    /**\n+     * @return corresponding quota for specific schema, table, and partition\n+     * @param schema\n+     * @param table\n+     *\n+     */\n+    CacheQuotaRequirement getCacheQuota(String schema, String table);", "originalCommit": "f288d72e22cdd34635b773f42403c24915639737", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "279053695c73a131f00d2af44237fb6739a16ee4", "chunk": "diff --git a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaProvider.java b/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaProvider.java\nindex ac2a208592..b222e03d66 100644\n--- a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaProvider.java\n+++ b/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaProvider.java\n\n@@ -16,7 +16,9 @@ package com.facebook.presto.hive;\n public interface CacheQuotaProvider\n {\n     /**\n-     * @return corresponding quota for specific schema, table, and partition\n+     * @return corresponding quota for specific schema, table\n+     * Getting quota for a specific partition is not supported\n+     *\n      * @param schema\n      * @param table\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxMTk4OQ==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r450411989", "bodyText": "I don't see this class being used in open source. Maybe we should move this to where it resides?", "author": "shixuan-fan", "createdAt": "2020-07-06T18:42:22Z", "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaUtil.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+public class CacheQuotaUtil", "originalCommit": "f288d72e22cdd34635b773f42403c24915639737", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "279053695c73a131f00d2af44237fb6739a16ee4", "chunk": "diff --git a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaUtil.java b/presto-orc/src/main/java/com/facebook/presto/orc/OrcEncryptionException.java\nsimilarity index 56%\nrename from presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaUtil.java\nrename to presto-orc/src/main/java/com/facebook/presto/orc/OrcEncryptionException.java\nindex f2157efccc..20093e9ab6 100644\n--- a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaUtil.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/OrcEncryptionException.java\n\n@@ -11,21 +11,15 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package com.facebook.presto.hive;\n+package com.facebook.presto.orc;\n \n-public class CacheQuotaUtil\n-{\n-    private CacheQuotaUtil() {}\n-\n-    public static final String GLOBAL_PATH = \".\";\n-\n-    public static String completeTablePath(String schema, String table)\n-    {\n-        return String.format(\"%s.%s\", schema, table);\n-    }\n+import static java.lang.String.format;\n \n-    public static String completePartitionPath(String schema, String table, String partition)\n+public class OrcEncryptionException\n+        extends RuntimeException\n+{\n+    public OrcEncryptionException(String messageFormat, Object... args)\n     {\n-        return String.format(\"%s.%s.%s\", schema, table, partition);\n+        super(format(messageFormat, args));\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxMjQ5Mw==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r450412493", "bodyText": "I think for config based provider, we are still able to support PARTITION as a scope?", "author": "shixuan-fan", "createdAt": "2020-07-06T18:43:27Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.cache.CacheConfig;\n+import com.facebook.presto.spi.PrestoException;\n+import com.google.inject.Inject;\n+import io.airlift.units.DataSize;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.hive.CacheQuotaScope.GLOBAL;\n+import static com.facebook.presto.hive.CacheQuotaScope.SCHEMA;\n+import static com.facebook.presto.hive.CacheQuotaScope.TABLE;\n+import static com.facebook.presto.hive.HiveErrorCode.HIVE_UNKNOWN_ERROR;\n+import static java.lang.String.format;\n+import static java.util.Objects.requireNonNull;\n+\n+public class ConfigBasedCacheQuotaProvider\n+        implements CacheQuotaProvider\n+{\n+    private final CacheQuotaScope cacheQuotaScope;\n+    private final Optional<DataSize> configuredCacheQuota;\n+\n+    @Inject\n+    public ConfigBasedCacheQuotaProvider(CacheConfig cacheConfig)\n+    {\n+        requireNonNull(cacheConfig, \"cacheConfig is null\");\n+        this.cacheQuotaScope = cacheConfig.getCacheQuotaScope();\n+        this.configuredCacheQuota = cacheConfig.getDefaultCacheQuota();\n+    }\n+\n+    @Override\n+    public CacheQuotaRequirement getCacheQuota(String schema, String table)\n+    {\n+        switch (cacheQuotaScope) {\n+            case GLOBAL:\n+                return new CacheQuotaRequirement(GLOBAL, configuredCacheQuota);\n+            case SCHEMA:\n+                return new CacheQuotaRequirement(SCHEMA, configuredCacheQuota);\n+            case TABLE:\n+                return new CacheQuotaRequirement(TABLE, configuredCacheQuota);\n+            default:\n+                throw new PrestoException(HIVE_UNKNOWN_ERROR, format(\"%s is not supported\", configuredCacheQuota));", "originalCommit": "f288d72e22cdd34635b773f42403c24915639737", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0MzQxOA==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r450643418", "bodyText": "Since we're moving the calculation process from worker to coordinator, and on coordinator, in order to avoid calculation for every split, we then move the logic to HiveSplitManager.getSplits(), where we can only access Schema and Table info.\nSo basically we can only support those two for now.", "author": "kewang1024", "createdAt": "2020-07-07T06:43:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxMjQ5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk5Njc0Nw==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r450996747", "bodyText": "For config based, we don't use schema and table anyway and directly read from config, so we could still keep the same behavior I suppose?", "author": "shixuan-fan", "createdAt": "2020-07-07T16:35:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxMjQ5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "cdc13102c4a5ca27546a1e1dbf68830c3d7f1e48", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java b/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java\nindex 7d42550a66..621eef4370 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java\n\n@@ -14,17 +14,11 @@\n package com.facebook.presto.hive;\n \n import com.facebook.presto.cache.CacheConfig;\n-import com.facebook.presto.spi.PrestoException;\n import com.google.inject.Inject;\n import io.airlift.units.DataSize;\n \n import java.util.Optional;\n \n-import static com.facebook.presto.hive.CacheQuotaScope.GLOBAL;\n-import static com.facebook.presto.hive.CacheQuotaScope.SCHEMA;\n-import static com.facebook.presto.hive.CacheQuotaScope.TABLE;\n-import static com.facebook.presto.hive.HiveErrorCode.HIVE_UNKNOWN_ERROR;\n-import static java.lang.String.format;\n import static java.util.Objects.requireNonNull;\n \n public class ConfigBasedCacheQuotaProvider\n"}}, {"oid": "279053695c73a131f00d2af44237fb6739a16ee4", "url": "https://github.com/prestodb/presto/commit/279053695c73a131f00d2af44237fb6739a16ee4", "message": "Introduce cacheQuotaProvider and refactor", "committedDate": "2020-07-07T06:55:15Z", "type": "forcePushed"}, {"oid": "cdc13102c4a5ca27546a1e1dbf68830c3d7f1e48", "url": "https://github.com/prestodb/presto/commit/cdc13102c4a5ca27546a1e1dbf68830c3d7f1e48", "message": "Introduce cacheQuotaProvider and refactor", "committedDate": "2020-07-08T01:57:20Z", "type": "forcePushed"}, {"oid": "2ae42521cb95cc60d170213815bfdae92b9f18df", "url": "https://github.com/prestodb/presto/commit/2ae42521cb95cc60d170213815bfdae92b9f18df", "message": "Introduce cacheQuotaProvider and refactor", "committedDate": "2020-07-08T07:20:45Z", "type": "forcePushed"}, {"oid": "9d6500b5b805e7aec5f0234acf047ba4b9384880", "url": "https://github.com/prestodb/presto/commit/9d6500b5b805e7aec5f0234acf047ba4b9384880", "message": "Introduce cacheQuotaProvider and refactor", "committedDate": "2020-07-08T17:07:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5MTk1NQ==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r451691955", "bodyText": "nit: Cache quota requirement for given schema and table?", "author": "shixuan-fan", "createdAt": "2020-07-08T16:57:48Z", "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaProvider.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+public interface CacheQuotaProvider\n+{\n+    /**\n+     * @return corresponding quota for specific schema, table", "originalCommit": "2ae42521cb95cc60d170213815bfdae92b9f18df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b78a6c216fe856cf75fb715f9bb306d5ea053adc", "chunk": "diff --git a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaProvider.java b/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaRequirementProvider.java\nsimilarity index 86%\nrename from presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaProvider.java\nrename to presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaRequirementProvider.java\nindex 62958611bd..53e6e1da0e 100644\n--- a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaProvider.java\n+++ b/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaRequirementProvider.java\n\n@@ -13,10 +13,10 @@\n  */\n package com.facebook.presto.hive;\n \n-public interface CacheQuotaProvider\n+public interface CacheQuotaRequirementProvider\n {\n     /**\n-     * @return corresponding quota for specific schema, table\n+     * @return cache quota requirement for a given schema and table\n      *\n      * @param schema\n      * @param table\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwODIyNQ==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r451708225", "bodyText": "Actually maybe we should name this CacheQuotaRequirementProvider? We already have a CacheQuota class, so maybe not make it more confusing.", "author": "shixuan-fan", "createdAt": "2020-07-08T17:24:56Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.cache.CacheConfig;\n+import com.google.inject.Inject;\n+import io.airlift.units.DataSize;\n+\n+import java.util.Optional;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ConfigBasedCacheQuotaProvider\n+        implements CacheQuotaProvider", "originalCommit": "9d6500b5b805e7aec5f0234acf047ba4b9384880", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b78a6c216fe856cf75fb715f9bb306d5ea053adc", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java b/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaRequirementProvider.java\nsimilarity index 87%\nrename from presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java\nrename to presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaRequirementProvider.java\nindex 621eef4370..d932b5f6ff 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaProvider.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/ConfigBasedCacheQuotaRequirementProvider.java\n\n@@ -21,14 +21,14 @@ import java.util.Optional;\n \n import static java.util.Objects.requireNonNull;\n \n-public class ConfigBasedCacheQuotaProvider\n-        implements CacheQuotaProvider\n+public class ConfigBasedCacheQuotaRequirementProvider\n+        implements CacheQuotaRequirementProvider\n {\n     private final CacheQuotaScope cacheQuotaScope;\n     private final Optional<DataSize> configuredCacheQuota;\n \n     @Inject\n-    public ConfigBasedCacheQuotaProvider(CacheConfig cacheConfig)\n+    public ConfigBasedCacheQuotaRequirementProvider(CacheConfig cacheConfig)\n     {\n         requireNonNull(cacheConfig, \"cacheConfig is null\");\n         this.cacheQuotaScope = cacheConfig.getCacheQuotaScope();\n"}}, {"oid": "b78a6c216fe856cf75fb715f9bb306d5ea053adc", "url": "https://github.com/prestodb/presto/commit/b78a6c216fe856cf75fb715f9bb306d5ea053adc", "message": "Introduce cacheQuotaRequirementProvider", "committedDate": "2020-07-08T18:12:45Z", "type": "forcePushed"}, {"oid": "0602552c22c64e9b4e9ee85ea3a5ab5a358bfa7b", "url": "https://github.com/prestodb/presto/commit/0602552c22c64e9b4e9ee85ea3a5ab5a358bfa7b", "message": "Introduce CacheQuotaRequirementProvider", "committedDate": "2020-07-08T18:33:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3NzI4MA==", "url": "https://github.com/prestodb/presto/pull/14748#discussion_r452977280", "bodyText": "getCacheQuotaRequirement", "author": "shixuan-fan", "createdAt": "2020-07-10T17:28:55Z", "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaRequirementProvider.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+public interface CacheQuotaRequirementProvider\n+{\n+    /**\n+     * @return cache quota requirement for a given schema and table\n+     *\n+     * @param schema\n+     * @param table\n+     *\n+     */\n+    CacheQuotaRequirement getCacheQuota(String schema, String table);", "originalCommit": "0602552c22c64e9b4e9ee85ea3a5ab5a358bfa7b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2dc7f2b55d0aa8a1795c45a2dfe4b80a3f578587", "chunk": "diff --git a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaRequirementProvider.java b/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaRequirementProvider.java\nindex 53e6e1da0e..f202b18115 100644\n--- a/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaRequirementProvider.java\n+++ b/presto-hive-common/src/main/java/com/facebook/presto/hive/CacheQuotaRequirementProvider.java\n\n@@ -22,5 +22,5 @@ public interface CacheQuotaRequirementProvider\n      * @param table\n      *\n      */\n-    CacheQuotaRequirement getCacheQuota(String schema, String table);\n+    CacheQuotaRequirement getCacheQuotaRequirement(String schema, String table);\n }\n"}}, {"oid": "2dc7f2b55d0aa8a1795c45a2dfe4b80a3f578587", "url": "https://github.com/prestodb/presto/commit/2dc7f2b55d0aa8a1795c45a2dfe4b80a3f578587", "message": "Introduce CacheQuotaRequirementProvider", "committedDate": "2020-07-11T00:27:12Z", "type": "forcePushed"}, {"oid": "2be63317a84a0e68f79b0a8755074a4e1634d9d4", "url": "https://github.com/prestodb/presto/commit/2be63317a84a0e68f79b0a8755074a4e1634d9d4", "message": "Introduce CacheQuotaRequirementProvider", "committedDate": "2020-07-11T04:31:47Z", "type": "forcePushed"}, {"oid": "17b2d2560ab30eb94480c0956dead8456272acd6", "url": "https://github.com/prestodb/presto/commit/17b2d2560ab30eb94480c0956dead8456272acd6", "message": "Introduce CacheQuotaRequirementProvider", "committedDate": "2020-07-13T18:01:59Z", "type": "forcePushed"}, {"oid": "77a8bec50dd9ae890ab6609c7d1b3f1df47091b6", "url": "https://github.com/prestodb/presto/commit/77a8bec50dd9ae890ab6609c7d1b3f1df47091b6", "message": "Introduce CacheQuotaRequirementProvider", "committedDate": "2020-07-13T23:33:34Z", "type": "forcePushed"}, {"oid": "b996bb47e8e4dde907fe739355d766ed31d7834a", "url": "https://github.com/prestodb/presto/commit/b996bb47e8e4dde907fe739355d766ed31d7834a", "message": "Introduce CacheQuotaRequirementProvider", "committedDate": "2020-07-15T01:01:21Z", "type": "commit"}, {"oid": "b996bb47e8e4dde907fe739355d766ed31d7834a", "url": "https://github.com/prestodb/presto/commit/b996bb47e8e4dde907fe739355d766ed31d7834a", "message": "Introduce CacheQuotaRequirementProvider", "committedDate": "2020-07-15T01:01:21Z", "type": "forcePushed"}]}