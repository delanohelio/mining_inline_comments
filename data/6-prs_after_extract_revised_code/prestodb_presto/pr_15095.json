{"pr_number": 15095, "pr_title": "Implement pass through mode UNION ALL on Presto-on-Spark", "pr_createdAt": "2020-08-28T19:16:43Z", "pr_url": "https://github.com/prestodb/presto/pull/15095", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMDEzNg==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r480200136", "bodyText": "Do you think at this point we can simply remove the prefer-distributed-union property? As it was added as a hack originally.\nCC: @wenleix", "author": "arhimondr", "createdAt": "2020-08-31T15:17:30Z", "path": "presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java", "diffHunk": "@@ -204,7 +204,7 @@ public PrestoSparkQueryRunner(String defaultCatalog)\n                 ImmutableMap.of(\n                         \"presto.version\", \"testversion\",\n                         \"query.hash-partition-count\", Integer.toString(NODE_COUNT * 2),\n-                        \"prefer-distributed-union\", \"false\"),\n+                        \"prefer-distributed-union\", \"true\"),", "originalCommit": "540dd0a6d5e93c36cace99a59929f3ba010219ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI3NDQ2OA==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r480274468", "bodyText": "prefer-distributed-union can be removed. Let's do it later, because if this PR broke anything, we have an option to use single mode union", "author": "viczhang861", "createdAt": "2020-08-31T17:21:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMDEzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMwMzc5OQ==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r480303799", "bodyText": "Let's at least enable the prefer-distributed-union by default here: https://github.com/prestodb/presto/blob/master/presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkSettingsRequirements.java#L98", "author": "arhimondr", "createdAt": "2020-08-31T18:17:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMDEzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMwNDA5Ng==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r480304096", "bodyText": "Also remove the setting override in the integration tests: https://github.com/prestodb/presto/blob/master/presto-spark-testing/src/test/java/com/facebook/presto/spark/testing/TestPrestoSparkLauncherIntegrationSmokeTest.java#L151", "author": "arhimondr", "createdAt": "2020-08-31T18:17:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMDEzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc0OTg3Mw==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r493749873", "bodyText": "Yeah, sounds good to just remove it.", "author": "wenleix", "createdAt": "2020-09-23T17:02:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMDEzNg=="}], "type": "inlineReview", "revised_code": {"commit": "5867c3760d974645f9ec0076f2a933bad85a360a", "chunk": "diff --git a/presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java b/presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java\nindex 5cadd5fa51..b4a51b8a3f 100644\n--- a/presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java\n+++ b/presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java\n\n@@ -203,8 +203,7 @@ public class PrestoSparkQueryRunner\n                 DRIVER,\n                 ImmutableMap.of(\n                         \"presto.version\", \"testversion\",\n-                        \"query.hash-partition-count\", Integer.toString(NODE_COUNT * 2),\n-                        \"prefer-distributed-union\", \"true\"),\n+                        \"query.hash-partition-count\", Integer.toString(NODE_COUNT * 2)),\n                 ImmutableMap.of(),\n                 Optional.empty(),\n                 new SqlParserOptions(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMTMwMw==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r480201303", "bodyText": "This looks a little bit like a hack. Should we set it to real number of the output partitions (hashPartitionCount)?", "author": "arhimondr", "createdAt": "2020-08-31T15:19:26Z", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java", "diffHunk": "@@ -107,6 +123,31 @@ public int getPartition(Page page, int position)\n         }\n     }\n \n+    private static class PreDeterminedPartitionFunction\n+            implements PartitionFunction\n+    {\n+        private final int partitionId;\n+\n+        public PreDeterminedPartitionFunction(int partitionId)\n+        {\n+            this.partitionId = partitionId;\n+        }\n+\n+        @Override\n+        public int getPartitionCount()\n+        {\n+            // To be compatible with RowIndex in PrestoSparkRowBatchBuilder\n+            // where RowIndex requires an array size of at least partitionId + 1\n+            return partitionId + 1;", "originalCommit": "540dd0a6d5e93c36cace99a59929f3ba010219ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyMjEwNg==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r480322106", "bodyText": "Yes, we can use hashPartitionCount, the performance overhead (create a large unnecessary array for a small partitionId like 1) should be negligible.", "author": "viczhang861", "createdAt": "2020-08-31T18:50:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMTMwMw=="}], "type": "inlineReview", "revised_code": {"commit": "f6dedf84e1fe0815f8059d2ac4ca2d1f7357f814", "chunk": "diff --git a/presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java b/presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java\nindex c436a3a229..c6de4c7f9a 100644\n--- a/presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java\n+++ b/presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java\n\n@@ -123,22 +113,22 @@ public class PrestoSparkRowOutputOperator\n         }\n     }\n \n-    private static class PreDeterminedPartitionFunction\n+    public static class PreDeterminedPartitionFunction\n             implements PartitionFunction\n     {\n         private final int partitionId;\n+        private final int partitionCount;\n \n-        public PreDeterminedPartitionFunction(int partitionId)\n+        public PreDeterminedPartitionFunction(int partitionId, int partitionCount)\n         {\n             this.partitionId = partitionId;\n+            this.partitionCount = partitionCount;\n         }\n \n         @Override\n         public int getPartitionCount()\n         {\n-            // To be compatible with RowIndex in PrestoSparkRowBatchBuilder\n-            // where RowIndex requires an array size of at least partitionId + 1\n-            return partitionId + 1;\n+            return partitionCount;\n         }\n \n         @Override\n"}}, {"oid": "f6dedf84e1fe0815f8059d2ac4ca2d1f7357f814", "url": "https://github.com/prestodb/presto/commit/f6dedf84e1fe0815f8059d2ac4ca2d1f7357f814", "message": "Implement pass through mode UNION ALL on Presto-on-Spark\n\nInstead of round robin shuffle at row level for UNION ALL, all rows on\nthe same partition are passed through current partition and sent to\nnext fragment where partition id is determined by a modular hash\nfunction.", "committedDate": "2020-08-31T19:26:25Z", "type": "forcePushed"}, {"oid": "765b1e63cbf56ce73490c701cfd7cf71f2440b80", "url": "https://github.com/prestodb/presto/commit/765b1e63cbf56ce73490c701cfd7cf71f2440b80", "message": "Implement pass through mode UNION ALL on Presto-on-Spark\n\nInstead of round robin shuffle at row level for UNION ALL, all rows on\nthe same partition are passed through current partition and sent to\nnext fragment where partition id is determined by a modular hash\nfunction.", "committedDate": "2020-08-31T21:13:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQxMjk1OA==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r480412958", "bodyText": "Let's simply remove this override", "author": "arhimondr", "createdAt": "2020-08-31T21:36:04Z", "path": "presto-spark-testing/src/test/java/com/facebook/presto/spark/testing/TestPrestoSparkLauncherIntegrationSmokeTest.java", "diffHunk": "@@ -148,7 +148,7 @@ public void setUp()\n         configProperties = new File(tempDir, \"config.properties\");\n         storeProperties(configProperties, ImmutableMap.of(\n                 \"query.hash-partition-count\", \"10\",\n-                \"prefer-distributed-union\", \"false\"));\n+                \"prefer-distributed-union\", \"true\"));", "originalCommit": "765b1e63cbf56ce73490c701cfd7cf71f2440b80", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5867c3760d974645f9ec0076f2a933bad85a360a", "chunk": "diff --git a/presto-spark-testing/src/test/java/com/facebook/presto/spark/testing/TestPrestoSparkLauncherIntegrationSmokeTest.java b/presto-spark-testing/src/test/java/com/facebook/presto/spark/testing/TestPrestoSparkLauncherIntegrationSmokeTest.java\nindex 58d2aa8b57..f0159703c9 100644\n--- a/presto-spark-testing/src/test/java/com/facebook/presto/spark/testing/TestPrestoSparkLauncherIntegrationSmokeTest.java\n+++ b/presto-spark-testing/src/test/java/com/facebook/presto/spark/testing/TestPrestoSparkLauncherIntegrationSmokeTest.java\n\n@@ -147,8 +147,7 @@ public class TestPrestoSparkLauncherIntegrationSmokeTest\n \n         configProperties = new File(tempDir, \"config.properties\");\n         storeProperties(configProperties, ImmutableMap.of(\n-                \"query.hash-partition-count\", \"10\",\n-                \"prefer-distributed-union\", \"true\"));\n+                \"query.hash-partition-count\", \"10\"));\n         catalogDirectory = new File(tempDir, \"catalogs\");\n         createDirectories(catalogDirectory.toPath());\n         storeProperties(new File(catalogDirectory, \"hive.properties\"), ImmutableMap.of(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQxMzEwNg==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r480413106", "bodyText": "Let's simply remove this override (since it is default now)", "author": "arhimondr", "createdAt": "2020-08-31T21:36:21Z", "path": "presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java", "diffHunk": "@@ -204,7 +204,7 @@ public PrestoSparkQueryRunner(String defaultCatalog)\n                 ImmutableMap.of(\n                         \"presto.version\", \"testversion\",\n                         \"query.hash-partition-count\", Integer.toString(NODE_COUNT * 2),\n-                        \"prefer-distributed-union\", \"false\"),\n+                        \"prefer-distributed-union\", \"true\"),", "originalCommit": "765b1e63cbf56ce73490c701cfd7cf71f2440b80", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5867c3760d974645f9ec0076f2a933bad85a360a", "chunk": "diff --git a/presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java b/presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java\nindex 4eed99c545..b4a51b8a3f 100644\n--- a/presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java\n+++ b/presto-spark-base/src/test/java/com/facebook/presto/spark/PrestoSparkQueryRunner.java\n\n@@ -203,8 +203,7 @@ public class PrestoSparkQueryRunner\n                 DRIVER,\n                 ImmutableMap.of(\n                         \"presto.version\", \"testversion\",\n-                        \"query.hash-partition-count\", Integer.toString(NODE_COUNT * 2),\n-                        \"prefer-distributed-union\", \"true\"),\n+                        \"query.hash-partition-count\", Integer.toString(NODE_COUNT * 2)),\n                 ImmutableMap.of(),\n                 Optional.empty(),\n                 new SqlParserOptions(),\n"}}, {"oid": "5867c3760d974645f9ec0076f2a933bad85a360a", "url": "https://github.com/prestodb/presto/commit/5867c3760d974645f9ec0076f2a933bad85a360a", "message": "Implement pass through mode UNION ALL on Presto-on-Spark\n\nInstead of round robin shuffle at row level for UNION ALL, all rows on\nthe same partition are passed through current partition and sent to\nnext fragment where partition id is determined by a modular hash\nfunction.", "committedDate": "2020-08-31T21:39:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc1MDg3Nw==", "url": "https://github.com/prestodb/presto/pull/15095#discussion_r493750877", "bodyText": "nit: maybe add a check state about partitionId < partitionCount?", "author": "wenleix", "createdAt": "2020-09-23T17:03:43Z", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java", "diffHunk": "@@ -107,6 +113,31 @@ public int getPartition(Page page, int position)\n         }\n     }\n \n+    public static class PreDeterminedPartitionFunction\n+            implements PartitionFunction\n+    {\n+        private final int partitionId;\n+        private final int partitionCount;\n+\n+        public PreDeterminedPartitionFunction(int partitionId, int partitionCount)\n+        {\n+            this.partitionId = partitionId;\n+            this.partitionCount = partitionCount;", "originalCommit": "5867c3760d974645f9ec0076f2a933bad85a360a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e39525a3dc2c87d246744e899c39c179b42809b3", "chunk": "diff --git a/presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java b/presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java\nindex c6de4c7f9a..2abd50a41b 100644\n--- a/presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java\n+++ b/presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkRowOutputOperator.java\n\n@@ -121,6 +122,8 @@ public class PrestoSparkRowOutputOperator\n \n         public PreDeterminedPartitionFunction(int partitionId, int partitionCount)\n         {\n+            checkArgument(partitionId > 0 && partitionId < partitionCount,\n+                    \"partitionId should be non-negative and less than partitionCount\");\n             this.partitionId = partitionId;\n             this.partitionCount = partitionCount;\n         }\n"}}, {"oid": "e39525a3dc2c87d246744e899c39c179b42809b3", "url": "https://github.com/prestodb/presto/commit/e39525a3dc2c87d246744e899c39c179b42809b3", "message": "Implement pass through mode UNION ALL on Presto-on-Spark\n\nInstead of round robin shuffle at row level for UNION ALL, all rows on\nthe same partition are passed through current partition and sent to\nnext fragment where partition id is determined by a modular hash\nfunction.", "committedDate": "2020-09-23T18:54:49Z", "type": "forcePushed"}, {"oid": "62b150a97c7f8cf5105a61acecae1589c6c76370", "url": "https://github.com/prestodb/presto/commit/62b150a97c7f8cf5105a61acecae1589c6c76370", "message": "Implement pass through mode UNION ALL on Presto-on-Spark\n\nInstead of round robin shuffle at row level for UNION ALL, all rows on\nthe same partition are passed through current partition and sent to\nnext fragment where partition id is determined by a modular hash\nfunction.", "committedDate": "2020-09-23T19:10:53Z", "type": "commit"}, {"oid": "62b150a97c7f8cf5105a61acecae1589c6c76370", "url": "https://github.com/prestodb/presto/commit/62b150a97c7f8cf5105a61acecae1589c6c76370", "message": "Implement pass through mode UNION ALL on Presto-on-Spark\n\nInstead of round robin shuffle at row level for UNION ALL, all rows on\nthe same partition are passed through current partition and sent to\nnext fragment where partition id is determined by a modular hash\nfunction.", "committedDate": "2020-09-23T19:10:53Z", "type": "forcePushed"}]}