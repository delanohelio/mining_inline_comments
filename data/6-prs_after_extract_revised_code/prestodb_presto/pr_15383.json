{"pr_number": 15383, "pr_title": "Make encryption key explicit when reading DWRF stripes", "pr_createdAt": "2020-11-03T00:36:49Z", "pr_url": "https://github.com/prestodb/presto/pull/15383", "timeline": [{"oid": "4a879c2323ac227e1900995f0653f368feeef731", "url": "https://github.com/prestodb/presto/commit/4a879c2323ac227e1900995f0653f368feeef731", "message": "Cleanup unused variables in OrcReader", "committedDate": "2020-11-03T02:13:07Z", "type": "forcePushed"}, {"oid": "45b167f7aae3b21aeebac62d0bbe533449fb0a09", "url": "https://github.com/prestodb/presto/commit/45b167f7aae3b21aeebac62d0bbe533449fb0a09", "message": "Cleanup unused variables in OrcReader", "committedDate": "2020-11-03T23:32:00Z", "type": "commit"}, {"oid": "239978562be053390511400bc5de7485217308a9", "url": "https://github.com/prestodb/presto/commit/239978562be053390511400bc5de7485217308a9", "message": "Make encryption key explicit when reading DWRF stripes\n\nDWRF StripeInformation only contains keymetadata if the keymetadata for\nthis stripe would be different from the previous stripe.  However, when\nwe read stripes in the record reader, we exclude stripes that are not\npart of the split, so we may not have info about what the keys were in\nthe previous stripe.  Therefore, we explicitly set the implied key\ninformation.", "committedDate": "2020-11-03T23:35:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA1NjE2Nw==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517056167", "bodyText": "What does iek1 mean here?", "author": "yingsu00", "createdAt": "2020-11-04T01:58:28Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java", "diffHunk": "@@ -458,6 +467,65 @@ public void testEncryptionMultipleColumns()\n                 outputColumns);\n     }\n \n+    @Test\n+    public void testSkipFirstStripe()\n+            throws Exception\n+    {\n+        OrcDataSource orcDataSource = new FileOrcDataSource(\n+                new File(getResource(\"encrypted_2splits.dwrf\").getFile()),\n+                new DataSize(1, MEGABYTE),\n+                new DataSize(1, MEGABYTE),\n+                new DataSize(1, MEGABYTE),\n+                true);\n+        Slice iek1 = Slices.utf8Slice(\"key\");", "originalCommit": "239978562be053390511400bc5de7485217308a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5NTk1NQ==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517395955", "bodyText": "intermediate encryption key.  i'll just inline this, though.", "author": "rschlussel", "createdAt": "2020-11-04T14:45:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA1NjE2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c60264c8f9981da46ba4b6da6ab0abc75e25b100", "chunk": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java\nindex d0190be30e..1693e35832 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java\n\n@@ -477,7 +477,6 @@ public class TestDecryption\n                 new DataSize(1, MEGABYTE),\n                 new DataSize(1, MEGABYTE),\n                 true);\n-        Slice iek1 = Slices.utf8Slice(\"key\");\n         OrcReader orcReader = new OrcReader(\n                 orcDataSource,\n                 DWRF,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA1NzkxMw==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517057913", "bodyText": "Could you please explain why we needed this change?", "author": "sujay-jain", "createdAt": "2020-11-04T02:05:19Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/TestingEncryptionLibrary.java", "diffHunk": "@@ -35,7 +35,7 @@\n     @Override\n     public byte[] encryptKey(byte[] keyMetadata, byte[] input, int offset, int length)\n     {\n-        return encrypt(keyMetadata, input, offset, length);\n+        return keyMetadata;", "originalCommit": "239978562be053390511400bc5de7485217308a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MDE0MA==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517080140", "bodyText": "I guess this was because the key was not encrypted in the manually created dwrf file such that decrypting it would fail while reading. However, @rschlussel does this affect other tests in TestDecryption? The test coverage maybe reduced if encryptKey and decryptKey were not tested. Would it make sense to make a new TestingPlainKeyEncryptionLibrary that is a subclass of TestingEncryptionLibrary?\nIf you think this is not the case or can be fixed later it's also ok.", "author": "yingsu00", "createdAt": "2020-11-04T03:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA1NzkxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4OTU3MQ==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517389571", "bodyText": "That's fair. I changed it because I figured the loss in test coverage would be minimal, so why have 2 classes, but I think it is still some loss in coverage, so it makes sense to keep it as it was and introduce a new class.", "author": "rschlussel", "createdAt": "2020-11-04T14:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA1NzkxMw=="}], "type": "inlineReview", "revised_code": {"commit": "c60264c8f9981da46ba4b6da6ab0abc75e25b100", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/TestingEncryptionLibrary.java b/presto-orc/src/main/java/com/facebook/presto/orc/TestingEncryptionLibrary.java\nindex cdfc689520..1a096fbb88 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/TestingEncryptionLibrary.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/TestingEncryptionLibrary.java\n\n@@ -35,7 +35,7 @@ public class TestingEncryptionLibrary\n     @Override\n     public byte[] encryptKey(byte[] keyMetadata, byte[] input, int offset, int length)\n     {\n-        return keyMetadata;\n+        return encrypt(keyMetadata, input, offset, length);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA1ODk0MQ==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517058941", "bodyText": "nit: maybe stripeInformationList?  stripeInformations doesn't sound right.", "author": "sujay-jain", "createdAt": "2020-11-04T02:09:37Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java", "diffHunk": "@@ -248,22 +248,33 @@ private static KeyProvider toKeyProvider(DwrfProto.Encryption.KeyProvider keyPro\n         }\n     }\n \n-    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> types)\n-    {\n-        return ImmutableList.copyOf(Iterables.transform(types, DwrfMetadataReader::toStripeInformation));\n+    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> stripeInformations)", "originalCommit": "239978562be053390511400bc5de7485217308a9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c60264c8f9981da46ba4b6da6ab0abc75e25b100", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java b/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java\nindex 2844849e16..05c4d9f833 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java\n\n@@ -248,14 +248,14 @@ public class DwrfMetadataReader\n         }\n     }\n \n-    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> stripeInformations)\n+    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> stripeInformationList)\n     {\n         ImmutableList.Builder<StripeInformation> stripeInfoBuilder = ImmutableList.builder();\n-        List<byte[]> previousKeysMetadata = ImmutableList.of();\n-        for (DwrfProto.StripeInformation dwrfStripeInfo : stripeInformations) {\n-            StripeInformation prestoStripeInfo = toStripeInformation(dwrfStripeInfo, previousKeysMetadata);\n+        List<byte[]> previousKeyMetadata = ImmutableList.of();\n+        for (DwrfProto.StripeInformation dwrfStripeInfo : stripeInformationList) {\n+            StripeInformation prestoStripeInfo = toStripeInformation(dwrfStripeInfo, previousKeyMetadata);\n             stripeInfoBuilder.add(prestoStripeInfo);\n-            previousKeysMetadata = prestoStripeInfo.getKeyMetadata();\n+            previousKeyMetadata = prestoStripeInfo.getKeyMetadata();\n         }\n         return stripeInfoBuilder.build();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA1OTU0NA==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517059544", "bodyText": "For the first stripe, previousKeyMetadata will be empty. Could we hit some edge case there?", "author": "sujay-jain", "createdAt": "2020-11-04T02:12:04Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java", "diffHunk": "@@ -248,22 +248,33 @@ private static KeyProvider toKeyProvider(DwrfProto.Encryption.KeyProvider keyPro\n         }\n     }\n \n-    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> types)\n-    {\n-        return ImmutableList.copyOf(Iterables.transform(types, DwrfMetadataReader::toStripeInformation));\n+    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> stripeInformations)\n+    {\n+        ImmutableList.Builder<StripeInformation> stripeInfoBuilder = ImmutableList.builder();\n+        List<byte[]> previousKeysMetadata = ImmutableList.of();\n+        for (DwrfProto.StripeInformation dwrfStripeInfo : stripeInformations) {\n+            StripeInformation prestoStripeInfo = toStripeInformation(dwrfStripeInfo, previousKeysMetadata);\n+            stripeInfoBuilder.add(prestoStripeInfo);\n+            previousKeysMetadata = prestoStripeInfo.getKeyMetadata();\n+        }\n+        return stripeInfoBuilder.build();\n     }\n \n-    private static StripeInformation toStripeInformation(DwrfProto.StripeInformation stripeInformation)\n+    private static StripeInformation toStripeInformation(DwrfProto.StripeInformation stripeInformation, List<byte[]> previousKeyMetadata)\n     {\n+        List<byte[]> keyMetadata = stripeInformation.getKeyMetadataList().stream()\n+                .map(ByteString::toByteArray)\n+                .collect(toImmutableList());\n+        if (keyMetadata.size() == 0) {\n+            keyMetadata = previousKeyMetadata;", "originalCommit": "239978562be053390511400bc5de7485217308a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5NDI0Nw==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517394247", "bodyText": "For that case, if keyMetadata is empty, then keyMetadata and previousKeyMetadata are the same (both an empty list), so it doesn't really matter which one we use.", "author": "rschlussel", "createdAt": "2020-11-04T14:43:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA1OTU0NA=="}], "type": "inlineReview", "revised_code": {"commit": "c60264c8f9981da46ba4b6da6ab0abc75e25b100", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java b/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java\nindex 2844849e16..05c4d9f833 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java\n\n@@ -248,14 +248,14 @@ public class DwrfMetadataReader\n         }\n     }\n \n-    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> stripeInformations)\n+    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> stripeInformationList)\n     {\n         ImmutableList.Builder<StripeInformation> stripeInfoBuilder = ImmutableList.builder();\n-        List<byte[]> previousKeysMetadata = ImmutableList.of();\n-        for (DwrfProto.StripeInformation dwrfStripeInfo : stripeInformations) {\n-            StripeInformation prestoStripeInfo = toStripeInformation(dwrfStripeInfo, previousKeysMetadata);\n+        List<byte[]> previousKeyMetadata = ImmutableList.of();\n+        for (DwrfProto.StripeInformation dwrfStripeInfo : stripeInformationList) {\n+            StripeInformation prestoStripeInfo = toStripeInformation(dwrfStripeInfo, previousKeyMetadata);\n             stripeInfoBuilder.add(prestoStripeInfo);\n-            previousKeysMetadata = prestoStripeInfo.getKeyMetadata();\n+            previousKeyMetadata = prestoStripeInfo.getKeyMetadata();\n         }\n         return stripeInfoBuilder.build();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2MDE5Mg==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517060192", "bodyText": "nits: maybe currentStripeInfo instead of prestoStripeInfo and previousKeyMetadata instead of previousKeysMetadata", "author": "sujay-jain", "createdAt": "2020-11-04T02:14:34Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java", "diffHunk": "@@ -248,22 +248,33 @@ private static KeyProvider toKeyProvider(DwrfProto.Encryption.KeyProvider keyPro\n         }\n     }\n \n-    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> types)\n-    {\n-        return ImmutableList.copyOf(Iterables.transform(types, DwrfMetadataReader::toStripeInformation));\n+    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> stripeInformations)\n+    {\n+        ImmutableList.Builder<StripeInformation> stripeInfoBuilder = ImmutableList.builder();\n+        List<byte[]> previousKeysMetadata = ImmutableList.of();\n+        for (DwrfProto.StripeInformation dwrfStripeInfo : stripeInformations) {\n+            StripeInformation prestoStripeInfo = toStripeInformation(dwrfStripeInfo, previousKeysMetadata);", "originalCommit": "239978562be053390511400bc5de7485217308a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5MTYzMA==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517391630", "bodyText": "for currentStripeInfo vs. prestoStripeInfo, I was trying to capture that we were converting from DwrfProto.StripeInformation object to Presto's stripeInformation logic, so I'll leave that name as is.  Changed previousKeyMetadata though.", "author": "rschlussel", "createdAt": "2020-11-04T14:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2MDE5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c60264c8f9981da46ba4b6da6ab0abc75e25b100", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java b/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java\nindex 2844849e16..05c4d9f833 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java\n\n@@ -248,14 +248,14 @@ public class DwrfMetadataReader\n         }\n     }\n \n-    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> stripeInformations)\n+    private static List<StripeInformation> toStripeInformation(List<DwrfProto.StripeInformation> stripeInformationList)\n     {\n         ImmutableList.Builder<StripeInformation> stripeInfoBuilder = ImmutableList.builder();\n-        List<byte[]> previousKeysMetadata = ImmutableList.of();\n-        for (DwrfProto.StripeInformation dwrfStripeInfo : stripeInformations) {\n-            StripeInformation prestoStripeInfo = toStripeInformation(dwrfStripeInfo, previousKeysMetadata);\n+        List<byte[]> previousKeyMetadata = ImmutableList.of();\n+        for (DwrfProto.StripeInformation dwrfStripeInfo : stripeInformationList) {\n+            StripeInformation prestoStripeInfo = toStripeInformation(dwrfStripeInfo, previousKeyMetadata);\n             stripeInfoBuilder.add(prestoStripeInfo);\n-            previousKeysMetadata = prestoStripeInfo.getKeyMetadata();\n+            previousKeyMetadata = prestoStripeInfo.getKeyMetadata();\n         }\n         return stripeInfoBuilder.build();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MDM5OA==", "url": "https://github.com/prestodb/presto/pull/15383#discussion_r517080398", "bodyText": "Move this private function to be after all public tests.", "author": "yingsu00", "createdAt": "2020-11-04T03:38:16Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java", "diffHunk": "@@ -458,6 +467,65 @@ public void testEncryptionMultipleColumns()\n                 outputColumns);\n     }\n \n+    @Test\n+    public void testSkipFirstStripe()\n+            throws Exception\n+    {\n+        OrcDataSource orcDataSource = new FileOrcDataSource(\n+                new File(getResource(\"encrypted_2splits.dwrf\").getFile()),\n+                new DataSize(1, MEGABYTE),\n+                new DataSize(1, MEGABYTE),\n+                new DataSize(1, MEGABYTE),\n+                true);\n+        Slice iek1 = Slices.utf8Slice(\"key\");\n+        OrcReader orcReader = new OrcReader(\n+                orcDataSource,\n+                DWRF,\n+                new StorageOrcFileTailSource(),\n+                new StorageStripeMetadataSource(),\n+                NOOP_ORC_AGGREGATED_MEMORY_CONTEXT,\n+                new OrcReaderOptions(\n+                        new DataSize(1, MEGABYTE),\n+                        new DataSize(1, MEGABYTE),\n+                        MAX_BLOCK_SIZE,\n+                        false,\n+                        false,\n+                        false),\n+                false,\n+                new DwrfEncryptionProvider(new UnsupportedEncryptionLibrary(), new TestingEncryptionLibrary()),\n+                DwrfKeyProvider.of(ImmutableMap.of(0, iek1)));\n+\n+        int offset = 10;\n+        try (OrcSelectiveRecordReader recordReader = getSelectiveRecordReader(orcDataSource, orcReader, offset)) {\n+            assertFileContentsPresto(\n+                    ImmutableList.of(BIGINT),\n+                    recordReader,\n+                    ImmutableList.of(ImmutableList.of(1L)),\n+                    ImmutableList.of(0));\n+        }\n+    }\n+\n+    private OrcSelectiveRecordReader getSelectiveRecordReader(OrcDataSource orcDataSource, OrcReader orcReader, int offset)", "originalCommit": "239978562be053390511400bc5de7485217308a9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c60264c8f9981da46ba4b6da6ab0abc75e25b100", "chunk": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java\nindex d0190be30e..1693e35832 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java\n\n@@ -477,7 +477,6 @@ public class TestDecryption\n                 new DataSize(1, MEGABYTE),\n                 new DataSize(1, MEGABYTE),\n                 true);\n-        Slice iek1 = Slices.utf8Slice(\"key\");\n         OrcReader orcReader = new OrcReader(\n                 orcDataSource,\n                 DWRF,\n"}}, {"oid": "c60264c8f9981da46ba4b6da6ab0abc75e25b100", "url": "https://github.com/prestodb/presto/commit/c60264c8f9981da46ba4b6da6ab0abc75e25b100", "message": "Make encryption key explicit when reading DWRF stripes\n\nDWRF StripeInformation only contains keymetadata if the keymetadata for\nthis stripe would be different from the previous stripe.  However, when\nwe read stripes in the record reader, we exclude stripes that are not\npart of the split, so we may not have info about what the keys were in\nthe previous stripe.  Therefore, we explicitly set the implied key\ninformation.", "committedDate": "2020-11-04T14:49:42Z", "type": "commit"}, {"oid": "c60264c8f9981da46ba4b6da6ab0abc75e25b100", "url": "https://github.com/prestodb/presto/commit/c60264c8f9981da46ba4b6da6ab0abc75e25b100", "message": "Make encryption key explicit when reading DWRF stripes\n\nDWRF StripeInformation only contains keymetadata if the keymetadata for\nthis stripe would be different from the previous stripe.  However, when\nwe read stripes in the record reader, we exclude stripes that are not\npart of the split, so we may not have info about what the keys were in\nthe previous stripe.  Therefore, we explicitly set the implied key\ninformation.", "committedDate": "2020-11-04T14:49:42Z", "type": "forcePushed"}]}