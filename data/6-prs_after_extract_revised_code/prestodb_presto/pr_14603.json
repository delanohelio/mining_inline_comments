{"pr_number": 14603, "pr_title": "Retry and resubmit certain query failures", "pr_createdAt": "2020-06-04T00:33:03Z", "pr_url": "https://github.com/prestodb/presto/pull/14603", "timeline": [{"oid": "c70cff7f5d2744d84b34233e70e63371c9360043", "url": "https://github.com/prestodb/presto/commit/c70cff7f5d2744d84b34233e70e63371c9360043", "message": "Use Builder to construct PrestoExceptionClassifier", "committedDate": "2020-06-04T01:05:30Z", "type": "forcePushed"}, {"oid": "34e4a529e4fd6a93918f0f8a1ea752b3761e9f62", "url": "https://github.com/prestodb/presto/commit/34e4a529e4fd6a93918f0f8a1ea752b3761e9f62", "message": "Support marking Exception as retryable conditionally", "committedDate": "2020-06-04T04:04:31Z", "type": "forcePushed"}, {"oid": "5a8b4b9000a7790492f6483dc8e6a80778ec4612", "url": "https://github.com/prestodb/presto/commit/5a8b4b9000a7790492f6483dc8e6a80778ec4612", "message": "Retry DESCRIBE query failure due to TIME_LIMIT_EXCEEDED\n\nTo achieve this, support determining whether a query is retryable\nnot only by error code, but also other factors such as QueryStage\nand error message.", "committedDate": "2020-06-04T04:11:59Z", "type": "forcePushed"}, {"oid": "0a0e41ba6077592faa02a80ac4e626cdf263f3b5", "url": "https://github.com/prestodb/presto/commit/0a0e41ba6077592faa02a80ac4e626cdf263f3b5", "message": "Allow resubmitted errors to be configured\n\nMake PrestoExcepttionClassifier.shouldResubmit an instance method.", "committedDate": "2020-06-04T04:39:28Z", "type": "forcePushed"}, {"oid": "0884ec018af0efc0d327efeb6da7d77d82038dfe", "url": "https://github.com/prestodb/presto/commit/0884ec018af0efc0d327efeb6da7d77d82038dfe", "message": "Resubmit query for CLUSTER_OUT_OF_MEMORY and ADMINISTRATIVELY_PREEMPTED\n\nCLUSTER_OUT_OF_MEMORY on test cluster may happen when the concurrency\non the test cluster is too high given the size of the cluster.\n\nADMINISTRATIVELY_PREEMPTED should also be resubmitted at a later time.\n\nAlso, improve readability for TestPrestoExceptionClassifier.", "committedDate": "2020-06-04T04:53:28Z", "type": "forcePushed"}, {"oid": "77276984590a4c2a003b8da04f70162111ba6c74", "url": "https://github.com/prestodb/presto/commit/77276984590a4c2a003b8da04f70162111ba6c74", "message": "Resubmit query for CLUSTER_OUT_OF_MEMORY and ADMINISTRATIVELY_PREEMPTED\n\nCLUSTER_OUT_OF_MEMORY on test cluster may happen when the concurrency\non the test cluster is too high given the size of the cluster.\n\nADMINISTRATIVELY_PREEMPTED should also be resubmitted at a later time.\n\nAlso, improve readability for TestPrestoExceptionClassifier.", "committedDate": "2020-06-04T04:55:26Z", "type": "forcePushed"}, {"oid": "028a037e79e60e3cc0577dd97b61945c684e6edb", "url": "https://github.com/prestodb/presto/commit/028a037e79e60e3cc0577dd97b61945c684e6edb", "message": "Resubmit query for CLUSTER_OUT_OF_MEMORY and ADMINISTRATIVELY_PREEMPTED\n\nCLUSTER_OUT_OF_MEMORY on test cluster may happen when the concurrency\non the test cluster is too high given the size of the cluster.\n\nADMINISTRATIVELY_PREEMPTED should also be resubmitted at a later time.\n\nAlso, improve readability for TestPrestoExceptionClassifier.", "committedDate": "2020-06-04T04:55:59Z", "type": "forcePushed"}, {"oid": "fa150b00477407b091e3bd44b7e4f29baca50baa", "url": "https://github.com/prestodb/presto/commit/fa150b00477407b091e3bd44b7e4f29baca50baa", "message": "Resubmit query for CLUSTER_OUT_OF_MEMORY and ADMINISTRATIVELY_PREEMPTED\n\nCLUSTER_OUT_OF_MEMORY on test cluster may happen when the concurrency\non the test cluster is too high given the size of the cluster.\n\nADMINISTRATIVELY_PREEMPTED should also be resubmitted at a later time.\n\nAlso, improve readability for TestPrestoExceptionClassifier.", "committedDate": "2020-06-04T04:59:41Z", "type": "forcePushed"}, {"oid": "6738c8bf29a8c011bbf6678ebd40f737ca251e26", "url": "https://github.com/prestodb/presto/commit/6738c8bf29a8c011bbf6678ebd40f737ca251e26", "message": "Resubmit query for CLUSTER_OUT_OF_MEMORY and ADMINISTRATIVELY_PREEMPTED\n\nCLUSTER_OUT_OF_MEMORY on test cluster may happen when the concurrency\non the test cluster is too high given the size of the cluster.\n\nADMINISTRATIVELY_PREEMPTED should also be resubmitted at a later time.\n\nAlso, improve readability for TestPrestoExceptionClassifier.", "committedDate": "2020-06-04T19:53:42Z", "type": "forcePushed"}, {"oid": "e99a1e4d5e3f4ba60d9b3f992769c5012932967d", "url": "https://github.com/prestodb/presto/commit/e99a1e4d5e3f4ba60d9b3f992769c5012932967d", "message": "Use Builder to construct PrestoExceptionClassifier", "committedDate": "2020-06-05T20:38:32Z", "type": "commit"}, {"oid": "292eec8d4f20e6e962805a837491f72812ff92bf", "url": "https://github.com/prestodb/presto/commit/292eec8d4f20e6e962805a837491f72812ff92bf", "message": "Resubmit query for CLUSTER_OUT_OF_MEMORY and ADMINISTRATIVELY_PREEMPTED\n\nCLUSTER_OUT_OF_MEMORY on test cluster may happen when the concurrency\non the test cluster is too high given the size of the cluster.\n\nADMINISTRATIVELY_PREEMPTED should also be resubmitted at a later time.\n\nAlso, improve readability for TestPrestoExceptionClassifier.", "committedDate": "2020-06-05T20:41:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMDMwMw==", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436530303", "bodyText": "Do they have to be public? They're only used in PrestoExceptionClassifier.", "author": "yingsu00", "createdAt": "2020-06-08T08:23:14Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -179,4 +168,34 @@ private static boolean isTargetTableAlreadyExistsException(PrestoQueryException\n                 && queryException.getQueryStage().isSetup()\n                 && TABLE_ALREADY_EXISTS_PATTERN.matcher(queryException.getMessage()).find();\n     }\n+\n+    public static class Builder\n+    {\n+        private final ImmutableSet.Builder<ErrorCodeSupplier> recognizedErrors = ImmutableSet.builder();\n+        private final ImmutableSet.Builder<ErrorCodeSupplier> retryableErrors = ImmutableSet.builder();\n+\n+        private Builder()\n+        {\n+        }\n+\n+        public Builder addRecognizedErrors(Iterable<ErrorCodeSupplier> errors)", "originalCommit": "e99a1e4d5e3f4ba60d9b3f992769c5012932967d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4MTAxOQ==", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436981019", "bodyText": "They are also used in PrestoFacebookExceptionClassifier in presto-facebook/presto-facebook-verifier. Verifier is designed in a way so that components can be extended.", "author": "caithagoras", "createdAt": "2020-06-08T20:29:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMDMwMw=="}], "type": "inlineReview", "revised_code": {"commit": "a97ff1837fda79ff1889914663757e5f3cfa70c2", "chunk": "diff --git a/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java b/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java\nindex 4c7569bc7f..a4b625e731 100644\n--- a/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java\n+++ b/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java\n\n@@ -173,6 +186,7 @@ public class PrestoExceptionClassifier\n     {\n         private final ImmutableSet.Builder<ErrorCodeSupplier> recognizedErrors = ImmutableSet.builder();\n         private final ImmutableSet.Builder<ErrorCodeSupplier> retryableErrors = ImmutableSet.builder();\n+        private final ImmutableSet.Builder<ErrorMatcher> conditionalRetryableErrors = ImmutableSet.builder();\n \n         private Builder()\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzODIyNQ==", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436538225", "bodyText": "nit: The parentheses in (obj == null)  and (getClass() != obj.getClass()) are not needed", "author": "yingsu00", "createdAt": "2020-06-08T08:37:44Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -190,12 +206,81 @@ public Builder addRetryableError(ErrorCodeSupplier error)\n             return this;\n         }\n \n+        public Builder addRetryableError(ErrorCodeSupplier errorCode, Optional<QueryStage> queryStage, Optional<Pattern> errorMessagePattern)\n+        {\n+            this.conditionalRetryableErrors.add(new ErrorMatcher(errorCode, queryStage, errorMessagePattern));\n+            return this;\n+        }\n+\n         public PrestoExceptionClassifier build()\n         {\n             Set<ErrorCodeSupplier> recognizedErrors = this.recognizedErrors.build();\n             Set<ErrorCodeSupplier> retryableErrors = this.retryableErrors.build();\n+            Set<ErrorMatcher> conditionalRetryableErrors = this.conditionalRetryableErrors.build();\n             retryableErrors.forEach(error -> checkArgument(recognizedErrors.contains(error), \"Error not recognized: %s\", error));\n-            return new PrestoExceptionClassifier(recognizedErrors, retryableErrors);\n+            conditionalRetryableErrors.forEach(\n+                    errorMatcher -> checkArgument(recognizedErrors.contains(errorMatcher.getErrorCode()), \"Error not recognized: %s\", errorMatcher.getErrorCode()));\n+            return new PrestoExceptionClassifier(recognizedErrors, retryableErrors, conditionalRetryableErrors);\n+        }\n+    }\n+\n+    private static class ErrorMatcher\n+    {\n+        private final ErrorCodeSupplier errorCode;\n+        private final Optional<QueryStage> queryStage;\n+        private final Optional<Pattern> errorMessagePattern;\n+\n+        public ErrorMatcher(\n+                ErrorCodeSupplier errorCode,\n+                Optional<QueryStage> queryStage,\n+                Optional<Pattern> errorMessagePattern)\n+        {\n+            this.errorCode = requireNonNull(errorCode, \"errorCode is null\");\n+            this.queryStage = requireNonNull(queryStage, \"queryStage is null\");\n+            this.errorMessagePattern = requireNonNull(errorMessagePattern, \"errorMessagePattern is null\");\n+        }\n+\n+        public ErrorCodeSupplier getErrorCode()\n+        {\n+            return errorCode;\n+        }\n+\n+        public boolean matches(ErrorCodeSupplier errorCode, QueryStage queryStage, String errorMessage)\n+        {\n+            return this.errorCode.equals(errorCode)\n+                    && (!this.queryStage.isPresent() || this.queryStage.get().equals(queryStage))\n+                    && (!this.errorMessagePattern.isPresent() || this.errorMessagePattern.get().matcher(errorMessage).find());\n+        }\n+\n+        @Override\n+        public boolean equals(Object obj)\n+        {\n+            if (this == obj) {\n+                return true;\n+            }\n+            if ((obj == null) || (getClass() != obj.getClass())) {", "originalCommit": "539b7acb7cc1768f0c619fc49cea6aab03d23a15", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a97ff1837fda79ff1889914663757e5f3cfa70c2", "chunk": "diff --git a/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java b/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java\nindex fd5a0f056f..a4b625e731 100644\n--- a/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java\n+++ b/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java\n\n@@ -258,7 +256,7 @@ public class PrestoExceptionClassifier\n             if (this == obj) {\n                 return true;\n             }\n-            if ((obj == null) || (getClass() != obj.getClass())) {\n+            if (obj == null || getClass() != obj.getClass()) {\n                 return false;\n             }\n             ErrorMatcher o = (ErrorMatcher) obj;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1NjY0OA==", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436556648", "bodyText": "I think line 133-139 should belong to the next commit", "author": "yingsu00", "createdAt": "2020-06-08T09:09:58Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -128,7 +130,13 @@ public static Builder defaultBuilder()\n                 // From ThriftErrorCode\n                 .addRetryableError(THRIFT_SERVICE_CONNECTION_ERROR)\n                 // Conditional Retryable Errors\n-                .addRetryableError(EXCEEDED_TIME_LIMIT, Optional.of(DESCRIBE), Optional.empty());\n+                .addRetryableError(EXCEEDED_TIME_LIMIT, Optional.of(DESCRIBE), Optional.empty())", "originalCommit": "bd533abd37e0ada1f71f45154f2ec6205fd16a62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4MzQ4MQ==", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436983481", "bodyText": "This commit is refactoring by converting shouldResubmit from a static method to an instance method. The behavior of the function should not change.\nBefore, this commit, shouldResubmit would return true for certain cases, including  HIVE_PARTITION_DROPPED_DURING_QUERY , HIVE_TABLE_DROPPED_DURING_QUERY, and \"table already exists\" errors. Line 134 - 139 is only to keep the behavior unchanged for this refactoring.", "author": "caithagoras", "createdAt": "2020-06-08T20:33:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1NjY0OA=="}], "type": "inlineReview", "revised_code": {"commit": "a97ff1837fda79ff1889914663757e5f3cfa70c2", "chunk": "diff --git a/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java b/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java\nindex d75164205f..a4b625e731 100644\n--- a/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java\n+++ b/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java\n\n@@ -130,13 +126,7 @@ public class PrestoExceptionClassifier\n                 // From ThriftErrorCode\n                 .addRetryableError(THRIFT_SERVICE_CONNECTION_ERROR)\n                 // Conditional Retryable Errors\n-                .addRetryableError(EXCEEDED_TIME_LIMIT, Optional.of(DESCRIBE), Optional.empty())\n-                // Resubmitted Errors\n-                .addResubmittedError(HIVE_PARTITION_DROPPED_DURING_QUERY)\n-                .addResubmittedError(HIVE_TABLE_DROPPED_DURING_QUERY)\n-                // Conditional Resubmitted Errors\n-                .addResubmittedError(SYNTAX_ERROR, Optional.of(CONTROL_SETUP), Optional.of(TABLE_ALREADY_EXISTS_PATTERN))\n-                .addResubmittedError(SYNTAX_ERROR, Optional.of(TEST_SETUP), Optional.of(TABLE_ALREADY_EXISTS_PATTERN));\n+                .addRetryableError(EXCEEDED_TIME_LIMIT, Optional.of(DESCRIBE), Optional.empty());\n     }\n \n     public QueryException createException(QueryStage queryStage, Optional<QueryStats> queryStats, SQLException cause)\n"}}, {"oid": "a97ff1837fda79ff1889914663757e5f3cfa70c2", "url": "https://github.com/prestodb/presto/commit/a97ff1837fda79ff1889914663757e5f3cfa70c2", "message": "Retry DESCRIBE query failure due to TIME_LIMIT_EXCEEDED\n\nTo achieve this, support determining whether a query is retryable\nnot only by error code, but also other factors such as QueryStage\nand error message.", "committedDate": "2020-06-08T20:37:09Z", "type": "commit"}, {"oid": "a018d2b658595f1a6b20aabcbc5056d07e441335", "url": "https://github.com/prestodb/presto/commit/a018d2b658595f1a6b20aabcbc5056d07e441335", "message": "Make PrestoExceptionClassifier.shouldResubmit an instance method\n\nThis allows resubmitted errors to be configured the same way as\nretryable errors.", "committedDate": "2020-06-08T20:37:09Z", "type": "commit"}, {"oid": "07f910cb356ba262e2954543a184b20b47f65eeb", "url": "https://github.com/prestodb/presto/commit/07f910cb356ba262e2954543a184b20b47f65eeb", "message": "Resubmit query for CLUSTER_OUT_OF_MEMORY and ADMINISTRATIVELY_PREEMPTED\n\nCLUSTER_OUT_OF_MEMORY on test cluster may happen when the concurrency\non the test cluster is too high given the size of the cluster.\n\nADMINISTRATIVELY_PREEMPTED should also be resubmitted at a later time.\n\nAlso, improve readability for TestPrestoExceptionClassifier.", "committedDate": "2020-06-08T20:37:10Z", "type": "commit"}, {"oid": "07f910cb356ba262e2954543a184b20b47f65eeb", "url": "https://github.com/prestodb/presto/commit/07f910cb356ba262e2954543a184b20b47f65eeb", "message": "Resubmit query for CLUSTER_OUT_OF_MEMORY and ADMINISTRATIVELY_PREEMPTED\n\nCLUSTER_OUT_OF_MEMORY on test cluster may happen when the concurrency\non the test cluster is too high given the size of the cluster.\n\nADMINISTRATIVELY_PREEMPTED should also be resubmitted at a later time.\n\nAlso, improve readability for TestPrestoExceptionClassifier.", "committedDate": "2020-06-08T20:37:10Z", "type": "forcePushed"}]}