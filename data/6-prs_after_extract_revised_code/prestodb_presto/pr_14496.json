{"pr_number": 14496, "pr_title": "Presto on Spark small refactorings and bug fixes", "pr_createdAt": "2020-05-07T14:21:32Z", "pr_url": "https://github.com/prestodb/presto/pull/14496", "timeline": [{"oid": "bb88251d29367e1b1a8d7b978ae7b70ffaa6de4c", "url": "https://github.com/prestodb/presto/commit/bb88251d29367e1b1a8d7b978ae7b70ffaa6de4c", "message": "Ensure only single SparkContext exist per jvm\n\nMore than one active spark context per jvm is not supported", "committedDate": "2020-05-07T14:25:29Z", "type": "forcePushed"}, {"oid": "cb93ec2eebb7c1a9c18a0a1806d62078bf9a4019", "url": "https://github.com/prestodb/presto/commit/cb93ec2eebb7c1a9c18a0a1806d62078bf9a4019", "message": "Fix PrestoSparkOutputOperator\n\nIn case of 0 columns row the output can be empty. Empty output\ndoes not contain byte array.", "committedDate": "2020-05-11T16:12:04Z", "type": "commit"}, {"oid": "52e140206eefd3b41d7ff01ae65b1e9aa1219c31", "url": "https://github.com/prestodb/presto/commit/52e140206eefd3b41d7ff01ae65b1e9aa1219c31", "message": "Ensure only single SparkContext exist per jvm\n\nMore than one active spark context per jvm is not supported", "committedDate": "2020-05-11T16:12:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzNjI2NA==", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423236264", "bodyText": "nit: maybe this should be a static field instead?", "author": "shixuan-fan", "createdAt": "2020-05-11T18:29:52Z", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/node/PrestoSparkInternalNodeManager.java", "diffHunk": "@@ -38,30 +38,34 @@\n     public Set<InternalNode> getActiveConnectorNodes(ConnectorId connectorId)\n     {\n         // TODO: Hack to make TPCH connector work\n-        return ImmutableSet.of(\n-                new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:60041\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark2\", URI.create(\"http://127.0.0.1:60042\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark3\", URI.create(\"http://127.0.0.1:60043\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark4\", URI.create(\"http://127.0.0.1:60044\"), NodeVersion.UNKNOWN, false));\n+        return getAllNodes().getActiveNodes();\n     }\n \n     @Override\n     public InternalNode getCurrentNode()\n     {\n         // TODO: Hack to make TPCH connector work\n-        return new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:1111\"), NodeVersion.UNKNOWN, false);\n+        return new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:1111\"), NodeVersion.UNKNOWN, true);\n     }\n \n     @Override\n     public Set<InternalNode> getCoordinators()\n     {\n-        throw new UnsupportedOperationException();\n+        return ImmutableSet.of(getCurrentNode());\n     }\n \n     @Override\n     public AllNodes getAllNodes()\n     {\n-        throw new UnsupportedOperationException();\n+        return new AllNodes(", "originalCommit": "a1c81a1d72d1c643f683a3f8925d6574b6df6727", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4NzgwOQ==", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423287809", "bodyText": "It is not going to be called on production anyway. It's pretty much a hack just to make TPCH / System connectors happy. Hopefully we will refactor presto-main a little bit and decouple it from the node management.", "author": "arhimondr", "createdAt": "2020-05-11T20:06:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzNjI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NDIzNQ==", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423294235", "bodyText": "Extracted static constants", "author": "arhimondr", "createdAt": "2020-05-11T20:18:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzNjI2NA=="}], "type": "inlineReview", "revised_code": {"commit": "9c9243e6e99d2620816ea9129c7ba156b6ef7c53", "chunk": "diff --git a/presto-spark-base/src/main/java/com/facebook/presto/spark/node/PrestoSparkInternalNodeManager.java b/presto-spark-base/src/main/java/com/facebook/presto/spark/node/PrestoSparkInternalNodeManager.java\nindex 3b3001cbf5..4ae1909958 100644\n--- a/presto-spark-base/src/main/java/com/facebook/presto/spark/node/PrestoSparkInternalNodeManager.java\n+++ b/presto-spark-base/src/main/java/com/facebook/presto/spark/node/PrestoSparkInternalNodeManager.java\n\n@@ -38,34 +51,28 @@ public class PrestoSparkInternalNodeManager\n     public Set<InternalNode> getActiveConnectorNodes(ConnectorId connectorId)\n     {\n         // TODO: Hack to make TPCH connector work\n-        return getAllNodes().getActiveNodes();\n+        return ALL_NODES.getActiveNodes();\n     }\n \n     @Override\n     public InternalNode getCurrentNode()\n     {\n         // TODO: Hack to make TPCH connector work\n-        return new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:1111\"), NodeVersion.UNKNOWN, true);\n+        return CURRENT_NODE;\n     }\n \n     @Override\n     public Set<InternalNode> getCoordinators()\n     {\n-        return ImmutableSet.of(getCurrentNode());\n+        // TODO: Hack to make System connector work\n+        return ImmutableSet.of(CURRENT_NODE);\n     }\n \n     @Override\n     public AllNodes getAllNodes()\n     {\n-        return new AllNodes(\n-                ImmutableSet.of(\n-                        new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:60041\"), NodeVersion.UNKNOWN, false),\n-                        new InternalNode(\"spark2\", URI.create(\"http://127.0.0.1:60042\"), NodeVersion.UNKNOWN, false),\n-                        new InternalNode(\"spark3\", URI.create(\"http://127.0.0.1:60043\"), NodeVersion.UNKNOWN, false),\n-                        new InternalNode(\"spark4\", URI.create(\"http://127.0.0.1:60044\"), NodeVersion.UNKNOWN, false)),\n-                ImmutableSet.of(),\n-                ImmutableSet.of(),\n-                ImmutableSet.of());\n+        // TODO: Hack to make System connector work\n+        return ALL_NODES;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1NTA1NA==", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423255054", "bodyText": "I'm not particularly sure if we should have two separate constructors, but I don't have strong opinion on this.", "author": "shixuan-fan", "createdAt": "2020-05-11T19:03:45Z", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkInjectorFactory.java", "diffHunk": "@@ -44,13 +45,27 @@\n     private final Map<String, String> configProperties;\n     private final Map<String, Map<String, String>> catalogProperties;\n     private final List<Module> additionalModules;\n+    private final Optional<Module> accessControlModuleOverride;\n \n-    public PrestoSparkInjectorFactory(Map<String, String> configProperties, Map<String, Map<String, String>> catalogProperties, List<Module> additionalModules)\n+    public PrestoSparkInjectorFactory(\n+            Map<String, String> configProperties,\n+            Map<String, Map<String, String>> catalogProperties,\n+            List<Module> additionalModules)\n+    {\n+        this(configProperties, catalogProperties, additionalModules, Optional.empty());\n+    }\n+\n+    public PrestoSparkInjectorFactory(\n+            Map<String, String> configProperties,\n+            Map<String, Map<String, String>> catalogProperties,\n+            List<Module> additionalModules,\n+            Optional<Module> accessControlModuleOverride)", "originalCommit": "300735d5d41669da4807039d6fdff8a958211015", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4ODU0MA==", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423288540", "bodyText": "Just wanted to keep the main non testing call site clean. Having an extra optional might be confusing.", "author": "arhimondr", "createdAt": "2020-05-11T20:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1NTA1NA=="}], "type": "inlineReview", "revised_code": {"commit": "9c9243e6e99d2620816ea9129c7ba156b6ef7c53", "chunk": "diff --git a/presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkInjectorFactory.java b/presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkInjectorFactory.java\nindex a63a59cb5c..b9a3488370 100644\n--- a/presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkInjectorFactory.java\n+++ b/presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkInjectorFactory.java\n\n@@ -45,27 +44,13 @@ public class PrestoSparkInjectorFactory\n     private final Map<String, String> configProperties;\n     private final Map<String, Map<String, String>> catalogProperties;\n     private final List<Module> additionalModules;\n-    private final Optional<Module> accessControlModuleOverride;\n \n-    public PrestoSparkInjectorFactory(\n-            Map<String, String> configProperties,\n-            Map<String, Map<String, String>> catalogProperties,\n-            List<Module> additionalModules)\n-    {\n-        this(configProperties, catalogProperties, additionalModules, Optional.empty());\n-    }\n-\n-    public PrestoSparkInjectorFactory(\n-            Map<String, String> configProperties,\n-            Map<String, Map<String, String>> catalogProperties,\n-            List<Module> additionalModules,\n-            Optional<Module> accessControlModuleOverride)\n+    public PrestoSparkInjectorFactory(Map<String, String> configProperties, Map<String, Map<String, String>> catalogProperties, List<Module> additionalModules)\n     {\n         this.configProperties = ImmutableMap.copyOf(requireNonNull(configProperties, \"configProperties is null\"));\n         this.catalogProperties = requireNonNull(catalogProperties, \"catalogProperties is null\").entrySet().stream()\n                 .collect(toImmutableMap(Entry::getKey, entry -> ImmutableMap.copyOf(entry.getValue())));\n         this.additionalModules = ImmutableList.copyOf(requireNonNull(additionalModules, \"additionalModules is null\"));\n-        this.accessControlModuleOverride = requireNonNull(accessControlModuleOverride, \"accessControlModuleOverride is null\");\n     }\n \n     public Injector create()\n"}}, {"oid": "9c9243e6e99d2620816ea9129c7ba156b6ef7c53", "url": "https://github.com/prestodb/presto/commit/9c9243e6e99d2620816ea9129c7ba156b6ef7c53", "message": "Register system catalog for Presto on Spark\n\nIt is generally useful to provide the same set of system table as convetional\nPresto does. But the main reson here is that AbstractTestQueries expects this\ncatalog to exist.", "committedDate": "2020-05-11T20:16:34Z", "type": "commit"}, {"oid": "258d6499fdd35728d7a3bb7b5b758f31c267ea82", "url": "https://github.com/prestodb/presto/commit/258d6499fdd35728d7a3bb7b5b758f31c267ea82", "message": "Improve PrestoSparkQueryRunner\n\nMake it ready to run AbstractTestQueries:\n\n- Setup TestingAccessControlManager in PrestoSparkQueryRunner\n- Register testing functions in PrestoSparkQueryRunner\n- Register testing session properties for PrestoSparkQueryRunner", "committedDate": "2020-05-11T20:16:34Z", "type": "commit"}, {"oid": "eb5cc8dec223f4c4756a511c123dc326aa1892a8", "url": "https://github.com/prestodb/presto/commit/eb5cc8dec223f4c4756a511c123dc326aa1892a8", "message": "Use Hive connector in PrestoSparkQueryRunner", "committedDate": "2020-05-11T20:16:34Z", "type": "commit"}, {"oid": "f4f717536655734d8ca93991d2ea1edad3dc6dfa", "url": "https://github.com/prestodb/presto/commit/f4f717536655734d8ca93991d2ea1edad3dc6dfa", "message": "Decrease logging in PrestoSparkQueryRunner", "committedDate": "2020-05-11T20:16:34Z", "type": "commit"}, {"oid": "94ced3c4d1323f47b68fe3098fde1736b3c8b472", "url": "https://github.com/prestodb/presto/commit/94ced3c4d1323f47b68fe3098fde1736b3c8b472", "message": "Run presto-spark-base tests in a separate travis job", "committedDate": "2020-05-11T20:16:35Z", "type": "commit"}, {"oid": "fed2784eb9e113781a8c615bf3ada5d3e533e1f1", "url": "https://github.com/prestodb/presto/commit/fed2784eb9e113781a8c615bf3ada5d3e533e1f1", "message": "Ensure only single SparkContext exist per jvm\n\nMore than one active spark context per jvm is not supported", "committedDate": "2020-05-11T20:16:35Z", "type": "commit"}, {"oid": "fed2784eb9e113781a8c615bf3ada5d3e533e1f1", "url": "https://github.com/prestodb/presto/commit/fed2784eb9e113781a8c615bf3ada5d3e533e1f1", "message": "Ensure only single SparkContext exist per jvm\n\nMore than one active spark context per jvm is not supported", "committedDate": "2020-05-11T20:16:35Z", "type": "forcePushed"}]}