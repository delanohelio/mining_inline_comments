{"pr_number": 15057, "pr_title": "Fix multi-join dynamic filtering", "pr_createdAt": "2020-08-20T07:30:04Z", "pr_url": "https://github.com/prestodb/presto/pull/15057", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY5Njg0NQ==", "url": "https://github.com/prestodb/presto/pull/15057#discussion_r473696845", "bodyText": "TRUE_CONSTANT. I assume this is cherry picked from prestosql? Do you have a reference?", "author": "highker", "createdAt": "2020-08-20T07:32:59Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -123,6 +125,9 @@ public PlanWithConsumedDynamicFilters visitJoin(JoinNode node, Set<String> allow\n         {\n             JoinDynamicFilterResult joinDynamicFilterResult = extractDynamicFilterFromJoin(node, allowedDynamicFilterIds);\n             if (!joinDynamicFilterResult.getProbe().equals(node.getLeft()) || !joinDynamicFilterResult.getBuild().equals(node.getRight()) || !joinDynamicFilterResult.getDynamicFilters().equals(node.getDynamicFilters())) {\n+                Optional<RowExpression> filter = node\n+                        .getFilter().map(this::removeAllDynamicFilters)  // dynamic filtering is not supported for LookupJoinOperators\n+                        .filter(expression -> !expression.equals(TRUE_LITERAL));", "originalCommit": "134e29593a9acc781cfe7eb94c8f61a384cb1b40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY5ODgyMg==", "url": "https://github.com/prestodb/presto/pull/15057#discussion_r473698822", "bodyText": "trinodb/trino#2659", "author": "kewang1024", "createdAt": "2020-08-20T07:34:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY5Njg0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d48a77d0a49e0b6f64d1040b2a9903e6f14407f2", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveUnsupportedDynamicFilters.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveUnsupportedDynamicFilters.java\nindex 9f0e05a83d..20474ed79b 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveUnsupportedDynamicFilters.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveUnsupportedDynamicFilters.java\n\n@@ -127,7 +127,7 @@ public class RemoveUnsupportedDynamicFilters\n             if (!joinDynamicFilterResult.getProbe().equals(node.getLeft()) || !joinDynamicFilterResult.getBuild().equals(node.getRight()) || !joinDynamicFilterResult.getDynamicFilters().equals(node.getDynamicFilters())) {\n                 Optional<RowExpression> filter = node\n                         .getFilter().map(this::removeAllDynamicFilters)  // dynamic filtering is not supported for LookupJoinOperators\n-                        .filter(expression -> !expression.equals(TRUE_LITERAL));\n+                        .filter(expression -> !expression.equals(TRUE_CONSTANT));\n                 return new PlanWithConsumedDynamicFilters(\n                         new JoinNode(\n                             node.getId(),\n"}}, {"oid": "d48a77d0a49e0b6f64d1040b2a9903e6f14407f2", "url": "https://github.com/prestodb/presto/commit/d48a77d0a49e0b6f64d1040b2a9903e6f14407f2", "message": "Fix multi-join dynamic filtering\n\ncherry pick from https://github.com/prestosql/presto/pull/2659\n\nCo-Authored-By: Roman Zeyde <zeyde@varada.io>", "committedDate": "2020-08-20T09:10:21Z", "type": "forcePushed"}, {"oid": "f1641331271d4574541ba22eecfbbc69003d61cc", "url": "https://github.com/prestodb/presto/commit/f1641331271d4574541ba22eecfbbc69003d61cc", "message": "Fix multi-join dynamic filtering\n\ncherry pick from https://github.com/prestosql/presto/pull/2659\n\nCo-Authored-By: Roman Zeyde <zeyde@varada.io>", "committedDate": "2020-08-20T09:26:19Z", "type": "forcePushed"}, {"oid": "e4cac0424cb03d7bfc458718ab6862ec4bfdd7c1", "url": "https://github.com/prestodb/presto/commit/e4cac0424cb03d7bfc458718ab6862ec4bfdd7c1", "message": "Fix multi-join dynamic filtering\n\ncherry pick from https://github.com/prestosql/presto/pull/2659\n\nCo-Authored-By: Roman Zeyde <zeyde@varada.io>", "committedDate": "2020-08-20T16:48:39Z", "type": "forcePushed"}, {"oid": "9b1636e64f558be39421559620d24f1b6bd6bb2d", "url": "https://github.com/prestodb/presto/commit/9b1636e64f558be39421559620d24f1b6bd6bb2d", "message": "Fix multi-join dynamic filtering\n\ncherry pick from https://github.com/prestosql/presto/pull/2659\n\nCo-Authored-By: Roman Zeyde <zeyde@varada.io>", "committedDate": "2020-08-20T17:23:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNTAzNA==", "url": "https://github.com/prestodb/presto/pull/15057#discussion_r474315034", "bodyText": "same line or one param per line", "author": "highker", "createdAt": "2020-08-20T22:53:36Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java", "diffHunk": "@@ -86,14 +94,14 @@ public void validate(PlanNode plan, Session session, Metadata metadata, SqlParse\n             {\n                 Set<String> currentJoinDynamicFilters = node.getDynamicFilters().keySet();\n                 Set<String> consumedProbeSide = node.getProbe().accept(this, context);\n-                verify(\n-                        difference(currentJoinDynamicFilters, consumedProbeSide).isEmpty(),\n-                        \"Dynamic filters present in join were not fully consumed by its probe side.\");\n+                Set<String> unconsumedByProbeSide = difference(currentJoinDynamicFilters, consumedProbeSide);\n+                verify(unconsumedByProbeSide.isEmpty(),\n+                        \"Dynamic filters %s present in join were not fully consumed by its probe side.\", unconsumedByProbeSide);", "originalCommit": "9b1636e64f558be39421559620d24f1b6bd6bb2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91c9b4bc76dc33118a4b2373f1bbcb8ff599d693", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java\nindex 978708b941..101fa1044a 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java\n\n@@ -95,13 +95,11 @@ public class DynamicFiltersChecker\n                 Set<String> currentJoinDynamicFilters = node.getDynamicFilters().keySet();\n                 Set<String> consumedProbeSide = node.getProbe().accept(this, context);\n                 Set<String> unconsumedByProbeSide = difference(currentJoinDynamicFilters, consumedProbeSide);\n-                verify(unconsumedByProbeSide.isEmpty(),\n-                        \"Dynamic filters %s present in join were not fully consumed by its probe side.\", unconsumedByProbeSide);\n+                verify(unconsumedByProbeSide.isEmpty(), \"Dynamic filters %s present in join were not fully consumed by its probe side.\", unconsumedByProbeSide);\n \n                 Set<String> consumedBuildSide = node.getBuild().accept(this, context);\n                 Set<String> unconsumedByBuildSide = intersection(currentJoinDynamicFilters, consumedBuildSide);\n-                verify(unconsumedByBuildSide.isEmpty(),\n-                        \"Dynamic filters %s present in join were consumed by its build side.\", unconsumedByBuildSide);\n+                verify(unconsumedByBuildSide.isEmpty(), \"Dynamic filters %s present in join were consumed by its build side.\", unconsumedByBuildSide);\n \n                 Set<String> unmatched = new HashSet<>(consumedBuildSide);\n                 unmatched.addAll(consumedProbeSide);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNTA1OQ==", "url": "https://github.com/prestodb/presto/pull/15057#discussion_r474315059", "bodyText": "same line or one param per line", "author": "highker", "createdAt": "2020-08-20T22:53:41Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java", "diffHunk": "@@ -86,14 +94,14 @@ public void validate(PlanNode plan, Session session, Metadata metadata, SqlParse\n             {\n                 Set<String> currentJoinDynamicFilters = node.getDynamicFilters().keySet();\n                 Set<String> consumedProbeSide = node.getProbe().accept(this, context);\n-                verify(\n-                        difference(currentJoinDynamicFilters, consumedProbeSide).isEmpty(),\n-                        \"Dynamic filters present in join were not fully consumed by its probe side.\");\n+                Set<String> unconsumedByProbeSide = difference(currentJoinDynamicFilters, consumedProbeSide);\n+                verify(unconsumedByProbeSide.isEmpty(),\n+                        \"Dynamic filters %s present in join were not fully consumed by its probe side.\", unconsumedByProbeSide);\n \n                 Set<String> consumedBuildSide = node.getBuild().accept(this, context);\n-                verify(\n-                        intersection(currentJoinDynamicFilters, consumedBuildSide).isEmpty(),\n-                        \"Dynamic filters present in join were consumed by its build side.\");\n+                Set<String> unconsumedByBuildSide = intersection(currentJoinDynamicFilters, consumedBuildSide);\n+                verify(unconsumedByBuildSide.isEmpty(),\n+                        \"Dynamic filters %s present in join were consumed by its build side.\", unconsumedByBuildSide);", "originalCommit": "9b1636e64f558be39421559620d24f1b6bd6bb2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91c9b4bc76dc33118a4b2373f1bbcb8ff599d693", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java\nindex 978708b941..101fa1044a 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/DynamicFiltersChecker.java\n\n@@ -95,13 +95,11 @@ public class DynamicFiltersChecker\n                 Set<String> currentJoinDynamicFilters = node.getDynamicFilters().keySet();\n                 Set<String> consumedProbeSide = node.getProbe().accept(this, context);\n                 Set<String> unconsumedByProbeSide = difference(currentJoinDynamicFilters, consumedProbeSide);\n-                verify(unconsumedByProbeSide.isEmpty(),\n-                        \"Dynamic filters %s present in join were not fully consumed by its probe side.\", unconsumedByProbeSide);\n+                verify(unconsumedByProbeSide.isEmpty(), \"Dynamic filters %s present in join were not fully consumed by its probe side.\", unconsumedByProbeSide);\n \n                 Set<String> consumedBuildSide = node.getBuild().accept(this, context);\n                 Set<String> unconsumedByBuildSide = intersection(currentJoinDynamicFilters, consumedBuildSide);\n-                verify(unconsumedByBuildSide.isEmpty(),\n-                        \"Dynamic filters %s present in join were consumed by its build side.\", unconsumedByBuildSide);\n+                verify(unconsumedByBuildSide.isEmpty(), \"Dynamic filters %s present in join were consumed by its build side.\", unconsumedByBuildSide);\n \n                 Set<String> unmatched = new HashSet<>(consumedBuildSide);\n                 unmatched.addAll(consumedProbeSide);\n"}}, {"oid": "91c9b4bc76dc33118a4b2373f1bbcb8ff599d693", "url": "https://github.com/prestodb/presto/commit/91c9b4bc76dc33118a4b2373f1bbcb8ff599d693", "message": "Fix multi-join dynamic filtering\n\ncherry pick from https://github.com/prestosql/presto/pull/2659\n\nCo-Authored-By: Roman Zeyde <zeyde@varada.io>", "committedDate": "2020-08-21T00:17:17Z", "type": "commit"}, {"oid": "91c9b4bc76dc33118a4b2373f1bbcb8ff599d693", "url": "https://github.com/prestodb/presto/commit/91c9b4bc76dc33118a4b2373f1bbcb8ff599d693", "message": "Fix multi-join dynamic filtering\n\ncherry pick from https://github.com/prestosql/presto/pull/2659\n\nCo-Authored-By: Roman Zeyde <zeyde@varada.io>", "committedDate": "2020-08-21T00:17:17Z", "type": "forcePushed"}]}