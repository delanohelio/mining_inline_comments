{"pr_number": 15401, "pr_title": "Add Local Revocable Memory Limit", "pr_createdAt": "2020-11-05T16:59:29Z", "pr_url": "https://github.com/prestodb/presto/pull/15401", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwOTIzMQ==", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r518209231", "bodyText": "Default value is a placeholder! I will adjust this depending on how testing goes.", "author": "sachdevs", "createdAt": "2020-11-05T17:00:55Z", "path": "presto-main/src/main/java/com/facebook/presto/spiller/NodeSpillConfig.java", "diffHunk": "@@ -21,6 +21,7 @@\n public class NodeSpillConfig\n {\n     private DataSize maxSpillPerNode = new DataSize(100, DataSize.Unit.GIGABYTE);\n+    private DataSize maxRevocableMemoryPerNode = new DataSize(8, DataSize.Unit.GIGABYTE);", "originalCommit": "8f9b11235c653f79f2e2a4c30b178c48f687c010", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1dcafe956a67ddb2af8d56411aa19e26f8bc67cd", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/spiller/NodeSpillConfig.java b/presto-main/src/main/java/com/facebook/presto/spiller/NodeSpillConfig.java\nindex 19839c3158..5b8d2afa7e 100644\n--- a/presto-main/src/main/java/com/facebook/presto/spiller/NodeSpillConfig.java\n+++ b/presto-main/src/main/java/com/facebook/presto/spiller/NodeSpillConfig.java\n\n@@ -21,7 +21,7 @@ import javax.validation.constraints.NotNull;\n public class NodeSpillConfig\n {\n     private DataSize maxSpillPerNode = new DataSize(100, DataSize.Unit.GIGABYTE);\n-    private DataSize maxRevocableMemoryPerNode = new DataSize(8, DataSize.Unit.GIGABYTE);\n+    private DataSize maxRevocableMemoryPerNode = new DataSize(16, DataSize.Unit.GIGABYTE);\n     private DataSize queryMaxSpillPerNode = new DataSize(100, DataSize.Unit.GIGABYTE);\n     private DataSize tempStorageBufferSize = new DataSize(4, DataSize.Unit.KILOBYTE);\n \n"}}, {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195", "url": "https://github.com/prestodb/presto/commit/d1f44d2d48111d48cfa3f9a59319e402d9c57195", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory.", "committedDate": "2020-11-05T18:55:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwNTkwNQ==", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r519005905", "bodyText": "seems like an accidental change", "author": "highker", "createdAt": "2020-11-06T21:08:19Z", "path": "presto-benchmark/src/main/java/com/facebook/presto/benchmark/AbstractOperatorBenchmark.java", "diffHunk": "@@ -225,7 +225,8 @@ protected final OperatorFactory createHashProjectOperator(int operatorId, PlanNo\n         RowExpression translatedHashExpression = translate(hashExpression.get(), variableToInputMapping.build());\n \n         PageFunctionCompiler functionCompiler = new PageFunctionCompiler(localQueryRunner.getMetadata(), 0);\n-        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {types.size()}));\n+        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {", "originalCommit": "d1f44d2d48111d48cfa3f9a59319e402d9c57195", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMzMDM5NQ==", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r522330395", "bodyText": "It was auto fixed by checkstyle due to changing this file on save since line is too long.", "author": "sachdevs", "createdAt": "2020-11-12T18:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwNTkwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3454f748714230ce7a77b198ed34356f2b666a6", "chunk": "diff --git a/presto-benchmark/src/main/java/com/facebook/presto/benchmark/AbstractOperatorBenchmark.java b/presto-benchmark/src/main/java/com/facebook/presto/benchmark/AbstractOperatorBenchmark.java\nindex c4b00a2674..ccb23434f4 100644\n--- a/presto-benchmark/src/main/java/com/facebook/presto/benchmark/AbstractOperatorBenchmark.java\n+++ b/presto-benchmark/src/main/java/com/facebook/presto/benchmark/AbstractOperatorBenchmark.java\n\n@@ -225,8 +225,7 @@ public abstract class AbstractOperatorBenchmark\n         RowExpression translatedHashExpression = translate(hashExpression.get(), variableToInputMapping.build());\n \n         PageFunctionCompiler functionCompiler = new PageFunctionCompiler(localQueryRunner.getMetadata(), 0);\n-        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {\n-                types.size()}));\n+        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {types.size()}));\n \n         return new FilterAndProjectOperator.FilterAndProjectOperatorFactory(\n                 operatorId,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxMDAxNw==", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r519010017", "bodyText": "put the first param to its own line. Unfortunately, the other part of the code followed our old coding style.", "author": "highker", "createdAt": "2020-11-06T21:18:53Z", "path": "presto-main/src/main/java/com/facebook/presto/ExceededMemoryLimitException.java", "diffHunk": "@@ -52,6 +53,12 @@ public static ExceededMemoryLimitException exceededLocalTotalMemoryLimit(DataSiz\n                 format(\"Query exceeded per-node total memory limit of %s [%s]\", maxMemory, additionalFailureInfo));\n     }\n \n+    public static ExceededMemoryLimitException exceededLocalRevocableMemoryLimit(DataSize maxMemory, String additionalFailureInfo)\n+    {\n+        return new ExceededMemoryLimitException(EXCEEDED_REVOCABLE_MEMORY_LIMIT,", "originalCommit": "d1f44d2d48111d48cfa3f9a59319e402d9c57195", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f3454f748714230ce7a77b198ed34356f2b666a6", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/ExceededMemoryLimitException.java b/presto-main/src/main/java/com/facebook/presto/ExceededMemoryLimitException.java\nindex 8523676cb8..9b56acebdc 100644\n--- a/presto-main/src/main/java/com/facebook/presto/ExceededMemoryLimitException.java\n+++ b/presto-main/src/main/java/com/facebook/presto/ExceededMemoryLimitException.java\n\n@@ -55,7 +55,8 @@ public class ExceededMemoryLimitException\n \n     public static ExceededMemoryLimitException exceededLocalRevocableMemoryLimit(DataSize maxMemory, String additionalFailureInfo)\n     {\n-        return new ExceededMemoryLimitException(EXCEEDED_REVOCABLE_MEMORY_LIMIT,\n+        return new ExceededMemoryLimitException(\n+                EXCEEDED_REVOCABLE_MEMORY_LIMIT,\n                 format(\"Query exceeded per-node revocable memory limit of %s [%s]\", maxMemory, additionalFailureInfo));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxMzAwOA==", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r519013008", "bodyText": "Maybe just make it long. No need to be optional if we set a large number for non-spilling case.", "author": "highker", "createdAt": "2020-11-06T21:25:56Z", "path": "presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java", "diffHunk": "@@ -81,6 +82,9 @@\n     @GuardedBy(\"this\")\n     private long peakNodeTotalMemory;\n \n+    @GuardedBy(\"this\")\n+    private Optional<Long> maxRevocableMemory;", "originalCommit": "d1f44d2d48111d48cfa3f9a59319e402d9c57195", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f3454f748714230ce7a77b198ed34356f2b666a6", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java b/presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java\nindex 09b79e2ce7..cbae799bc7 100644\n--- a/presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java\n+++ b/presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java\n\n@@ -83,7 +83,7 @@ public class QueryContext\n     private long peakNodeTotalMemory;\n \n     @GuardedBy(\"this\")\n-    private Optional<Long> maxRevocableMemory;\n+    private long maxRevocableMemory;\n \n     @GuardedBy(\"this\")\n     private long broadcastUsed;\n"}}, {"oid": "f3454f748714230ce7a77b198ed34356f2b666a6", "url": "https://github.com/prestodb/presto/commit/f3454f748714230ce7a77b198ed34356f2b666a6", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory.", "committedDate": "2020-11-12T18:38:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExODY1MA==", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r523118650", "bodyText": "this will cause compilation error", "author": "highker", "createdAt": "2020-11-13T17:40:43Z", "path": "presto-benchmark/src/test/java/com/facebook/presto/benchmark/MemoryLocalQueryRunner.java", "diffHunk": "@@ -80,6 +80,7 @@ public void installPlugin(Plugin plugin)\n                 new DataSize(1, GIGABYTE),\n                 new DataSize(2, GIGABYTE),\n                 new DataSize(1, GIGABYTE),\n+                Optional.empty(),", "originalCommit": "f3454f748714230ce7a77b198ed34356f2b666a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyNjM4Nw==", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r523126387", "bodyText": "Yeah let me fix, just found a couple of these. My maven has been acting up all week, I just cleaned out .m2. Let me push again.", "author": "sachdevs", "createdAt": "2020-11-13T17:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExODY1MA=="}], "type": "inlineReview", "revised_code": {"commit": "1dcafe956a67ddb2af8d56411aa19e26f8bc67cd", "chunk": "diff --git a/presto-benchmark/src/test/java/com/facebook/presto/benchmark/MemoryLocalQueryRunner.java b/presto-benchmark/src/test/java/com/facebook/presto/benchmark/MemoryLocalQueryRunner.java\nindex b869c13e64..f1bb5e78a7 100644\n--- a/presto-benchmark/src/test/java/com/facebook/presto/benchmark/MemoryLocalQueryRunner.java\n+++ b/presto-benchmark/src/test/java/com/facebook/presto/benchmark/MemoryLocalQueryRunner.java\n\n@@ -80,7 +80,7 @@ public class MemoryLocalQueryRunner\n                 new DataSize(1, GIGABYTE),\n                 new DataSize(2, GIGABYTE),\n                 new DataSize(1, GIGABYTE),\n-                Optional.empty(),\n+                new DataSize(2, GIGABYTE),\n                 memoryPool,\n                 new TestingGcMonitor(),\n                 localQueryRunner.getExecutor(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExOTYxNQ==", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r523119615", "bodyText": "Make it final and put it with private final constants. Maybe add a TODO to say this will be tunable from session properties in the future.", "author": "highker", "createdAt": "2020-11-13T17:42:38Z", "path": "presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java", "diffHunk": "@@ -81,6 +82,9 @@\n     @GuardedBy(\"this\")\n     private long peakNodeTotalMemory;\n \n+    @GuardedBy(\"this\")\n+    private long maxRevocableMemory;", "originalCommit": "f3454f748714230ce7a77b198ed34356f2b666a6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1dcafe956a67ddb2af8d56411aa19e26f8bc67cd", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java b/presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java\nindex cbae799bc7..88d28d56bf 100644\n--- a/presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java\n+++ b/presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java\n\n@@ -82,8 +82,9 @@ public class QueryContext\n     @GuardedBy(\"this\")\n     private long peakNodeTotalMemory;\n \n+    // TODO: Make max revocable memory be configurable by session property.\n     @GuardedBy(\"this\")\n-    private long maxRevocableMemory;\n+    private final long maxRevocableMemory;\n \n     @GuardedBy(\"this\")\n     private long broadcastUsed;\n"}}, {"oid": "1dcafe956a67ddb2af8d56411aa19e26f8bc67cd", "url": "https://github.com/prestodb/presto/commit/1dcafe956a67ddb2af8d56411aa19e26f8bc67cd", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory.", "committedDate": "2020-11-13T18:16:07Z", "type": "forcePushed"}, {"oid": "b20c805777784c7022d04113c0bd59c34b122061", "url": "https://github.com/prestodb/presto/commit/b20c805777784c7022d04113c0bd59c34b122061", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory.", "committedDate": "2020-11-13T22:32:55Z", "type": "commit"}, {"oid": "b20c805777784c7022d04113c0bd59c34b122061", "url": "https://github.com/prestodb/presto/commit/b20c805777784c7022d04113c0bd59c34b122061", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory.", "committedDate": "2020-11-13T22:32:55Z", "type": "forcePushed"}]}