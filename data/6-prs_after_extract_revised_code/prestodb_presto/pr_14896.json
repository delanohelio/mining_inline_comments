{"pr_number": 14896, "pr_title": "Add bing_tile_children and bing_tile_parent functions", "pr_createdAt": "2020-07-26T15:21:15Z", "pr_url": "https://github.com/prestodb/presto/pull/14896", "timeline": [{"oid": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4", "url": "https://github.com/prestodb/presto/commit/2757cbdc8a2ecd7c6d72032f661be5c502a378a4", "message": "Add BingTile.findChildren() and findParent()\n\nSmall helper functions to find the children and parent of a BingTile.", "committedDate": "2020-07-27T21:52:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0ODEwMg==", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461648102", "bodyText": "please add a message in case it ever fails, e.g.: checkArgument(newZoom <= MAX_ZOOM_LEVEL, \"newZoom must be less than or equal to %s: %s\", MAX_ZOOM_LEVEL, newZoom), same for other checks", "author": "arhimondr", "createdAt": "2020-07-28T14:55:51Z", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTile.java", "diffHunk": "@@ -155,11 +157,55 @@ public String toQuadKey()\n         return String.valueOf(quadKey);\n     }\n \n+    public List<BingTile> findChildren()\n+    {\n+        return findChildren(zoomLevel + 1);\n+    }\n+\n+    public List<BingTile> findChildren(int newZoom)\n+    {\n+        if (newZoom == zoomLevel) {\n+            return ImmutableList.of(this);\n+        }\n+\n+        checkArgument(newZoom <= MAX_ZOOM_LEVEL);", "originalCommit": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d021da8b0f04fdfd2a1e24f9bcccb0945dd7856", "chunk": "diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTile.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTile.java\nindex 1000b507e8..371e572a31 100644\n--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTile.java\n+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTile.java\n\n@@ -168,8 +168,8 @@ public final class BingTile\n             return ImmutableList.of(this);\n         }\n \n-        checkArgument(newZoom <= MAX_ZOOM_LEVEL);\n-        checkArgument(newZoom >= zoomLevel);\n+        checkArgument(newZoom <= MAX_ZOOM_LEVEL, \"newZoom must be less than or equal to %s: %s\", MAX_ZOOM_LEVEL, newZoom);\n+        checkArgument(newZoom >= zoomLevel, \"newZoom must be greater than or equal to current zoom %s: %s\", zoomLevel, newZoom);\n \n         int zoomDelta = newZoom - zoomLevel;\n         int xNew = x << zoomDelta;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0OTI4NQ==", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461649285", "bodyText": "Add the original exception as a cause. Propagate original message. Same for other methods", "author": "arhimondr", "createdAt": "2020-07-28T14:57:12Z", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "diffHunk": "@@ -375,6 +378,72 @@ public static Slice bingTilePolygon(@SqlType(BingTileType.NAME) long input)\n         return serialize(tileToEnvelope(tile));\n     }\n \n+    @Description(\"Return the parent for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent().encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,", "originalCommit": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d021da8b0f04fdfd2a1e24f9bcccb0945dd7856", "chunk": "diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\nindex c44b57ab40..84c4717952 100644\n--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n\n@@ -388,8 +388,7 @@ public class BingTileFunctions\n             return tile.findParent().encode();\n         }\n         catch (IllegalArgumentException e) {\n-            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n-                    \"Invalid parent zoom level.\");\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT, e.getMessage(), e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0OTk3MA==", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461649970", "bodyText": "Return children ...", "author": "arhimondr", "createdAt": "2020-07-28T14:58:00Z", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "diffHunk": "@@ -375,6 +378,72 @@ public static Slice bingTilePolygon(@SqlType(BingTileType.NAME) long input)\n         return serialize(tileToEnvelope(tile));\n     }\n \n+    @Description(\"Return the parent for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent().encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid parent zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for the given zoom level for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input, @SqlType(StandardTypes.INTEGER) long newZoom)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent(toIntExact(newZoom)).encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid parent zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for a Bing tile\")", "originalCommit": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d021da8b0f04fdfd2a1e24f9bcccb0945dd7856", "chunk": "diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\nindex c44b57ab40..84c4717952 100644\n--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n\n@@ -388,8 +388,7 @@ public class BingTileFunctions\n             return tile.findParent().encode();\n         }\n         catch (IllegalArgumentException e) {\n-            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n-                    \"Invalid parent zoom level.\");\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT, e.getMessage(), e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MDE2NA==", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461650164", "bodyText": "ditto", "author": "arhimondr", "createdAt": "2020-07-28T14:58:13Z", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "diffHunk": "@@ -375,6 +378,72 @@ public static Slice bingTilePolygon(@SqlType(BingTileType.NAME) long input)\n         return serialize(tileToEnvelope(tile));\n     }\n \n+    @Description(\"Return the parent for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent().encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid parent zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for the given zoom level for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input, @SqlType(StandardTypes.INTEGER) long newZoom)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent(toIntExact(newZoom)).encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid parent zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_children\")\n+    @SqlType(\"array(\" + BingTileType.NAME + \")\")\n+    public static Block bingTileChildren(@SqlType(BingTileType.NAME) long input)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            List<BingTile> children = tile.findChildren();\n+            BlockBuilder blockBuilder = BIGINT.createBlockBuilder(null, children.size());\n+            children.stream().forEach(child -> BIGINT.writeLong(blockBuilder, child.encode()));\n+            return blockBuilder.build();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid child zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for the given zoom level for a Bing tile\")", "originalCommit": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d021da8b0f04fdfd2a1e24f9bcccb0945dd7856", "chunk": "diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\nindex c44b57ab40..84c4717952 100644\n--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n\n@@ -388,8 +388,7 @@ public class BingTileFunctions\n             return tile.findParent().encode();\n         }\n         catch (IllegalArgumentException e) {\n-            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n-                    \"Invalid parent zoom level.\");\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT, e.getMessage(), e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MTMxNA==", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461651314", "bodyText": "assertThatThrownBy(() -> { ... }).hasMessage(...);\nSame for other exception checks.\nYou can also check the exception type and exception fields. Generally the assertThatThrownBy construct is very powerful", "author": "arhimondr", "createdAt": "2020-07-28T14:59:32Z", "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java", "diffHunk": "@@ -90,4 +95,82 @@ public void testTileYToLatitude()\n             assertEquals(tileYToLatitude(1 << zoom, zoom), MIN_LATITUDE, delta);\n         }\n     }\n+\n+    @Test\n+    public void testFindChildren()\n+    {\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren()),\n+                ImmutableList.of(\"0\", \"1\", \"2\", \"3\"));\n+\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"0123\").findChildren()),\n+                ImmutableList.of(\"01230\", \"01231\", \"01232\", \"01233\"));\n+\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren(2)),\n+                ImmutableList.of(\"00\", \"01\", \"02\", \"03\", \"10\", \"11\", \"12\", \"13\", \"20\", \"21\", \"22\", \"23\", \"30\", \"31\", \"32\", \"33\"));\n+\n+        try {\n+            BingTile.fromCoordinates(0, 0, MAX_ZOOM_LEVEL).findChildren();", "originalCommit": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d021da8b0f04fdfd2a1e24f9bcccb0945dd7856", "chunk": "diff --git a/presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java b/presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java\nindex 997836bab9..5994fd96e2 100644\n--- a/presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java\n+++ b/presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java\n\n@@ -111,29 +112,14 @@ public class TestBingTile\n                 toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren(2)),\n                 ImmutableList.of(\"00\", \"01\", \"02\", \"03\", \"10\", \"11\", \"12\", \"13\", \"20\", \"21\", \"22\", \"23\", \"30\", \"31\", \"32\", \"33\"));\n \n-        try {\n-            BingTile.fromCoordinates(0, 0, MAX_ZOOM_LEVEL).findChildren();\n-            fail(\"findChildren should fail when newZoom > MAX_ZOOM_LEVEL\");\n-        }\n-        catch (IllegalArgumentException e) {\n-            // Pass\n-        }\n+        assertThatThrownBy(() -> BingTile.fromCoordinates(0, 0, MAX_ZOOM_LEVEL).findChildren())\n+                .hasMessage(format(\"newZoom must be less than or equal to %s: %s\", MAX_ZOOM_LEVEL, MAX_ZOOM_LEVEL + 1));\n \n-        try {\n-            BingTile.fromCoordinates(0, 0, 13).findChildren(MAX_ZOOM_LEVEL + 1);\n-            fail(\"findChildren should fail when newZoom > MAX_ZOOM_LEVEL\");\n-        }\n-        catch (IllegalArgumentException e) {\n-            // Pass\n-        }\n+        assertThatThrownBy(() -> BingTile.fromCoordinates(0, 0, 13).findChildren(MAX_ZOOM_LEVEL + 1))\n+                .hasMessage(format(\"newZoom must be less than or equal to %s: %s\", MAX_ZOOM_LEVEL, MAX_ZOOM_LEVEL + 1));\n \n-        try {\n-            BingTile.fromCoordinates(0, 0, 13).findChildren(12);\n-            fail(\"findChildren should fail when newZoom < zoomLevel\");\n-        }\n-        catch (IllegalArgumentException e) {\n-            // Pass\n-        }\n+        assertThatThrownBy(() -> BingTile.fromCoordinates(0, 0, 13).findChildren(12))\n+                .hasMessage(format(\"newZoom must be greater than or equal to current zoom %s: %s\", 13, 12));\n     }\n \n     private List<String> toSortedQuadkeys(List<BingTile> tiles)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MjU0Nw==", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461652547", "bodyText": "nit: maybe wrap, e.g.:\ntiles.stream()\n  .map(BingTile::toQuadKey)\n  .sorted()\n  .collect(Collectors.toList())\n\nAlso toImmutableList (statically imported)", "author": "arhimondr", "createdAt": "2020-07-28T15:01:07Z", "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java", "diffHunk": "@@ -90,4 +95,82 @@ public void testTileYToLatitude()\n             assertEquals(tileYToLatitude(1 << zoom, zoom), MIN_LATITUDE, delta);\n         }\n     }\n+\n+    @Test\n+    public void testFindChildren()\n+    {\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren()),\n+                ImmutableList.of(\"0\", \"1\", \"2\", \"3\"));\n+\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"0123\").findChildren()),\n+                ImmutableList.of(\"01230\", \"01231\", \"01232\", \"01233\"));\n+\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren(2)),\n+                ImmutableList.of(\"00\", \"01\", \"02\", \"03\", \"10\", \"11\", \"12\", \"13\", \"20\", \"21\", \"22\", \"23\", \"30\", \"31\", \"32\", \"33\"));\n+\n+        try {\n+            BingTile.fromCoordinates(0, 0, MAX_ZOOM_LEVEL).findChildren();\n+            fail(\"findChildren should fail when newZoom > MAX_ZOOM_LEVEL\");\n+        }\n+        catch (IllegalArgumentException e) {\n+            // Pass\n+        }\n+\n+        try {\n+            BingTile.fromCoordinates(0, 0, 13).findChildren(MAX_ZOOM_LEVEL + 1);\n+            fail(\"findChildren should fail when newZoom > MAX_ZOOM_LEVEL\");\n+        }\n+        catch (IllegalArgumentException e) {\n+            // Pass\n+        }\n+\n+        try {\n+            BingTile.fromCoordinates(0, 0, 13).findChildren(12);\n+            fail(\"findChildren should fail when newZoom < zoomLevel\");\n+        }\n+        catch (IllegalArgumentException e) {\n+            // Pass\n+        }\n+    }\n+\n+    private List<String> toSortedQuadkeys(List<BingTile> tiles)\n+    {\n+        return tiles.stream().map(BingTile::toQuadKey).sorted().collect(Collectors.toList());", "originalCommit": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d021da8b0f04fdfd2a1e24f9bcccb0945dd7856", "chunk": "diff --git a/presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java b/presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java\nindex 997836bab9..5994fd96e2 100644\n--- a/presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java\n+++ b/presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java\n\n@@ -111,29 +112,14 @@ public class TestBingTile\n                 toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren(2)),\n                 ImmutableList.of(\"00\", \"01\", \"02\", \"03\", \"10\", \"11\", \"12\", \"13\", \"20\", \"21\", \"22\", \"23\", \"30\", \"31\", \"32\", \"33\"));\n \n-        try {\n-            BingTile.fromCoordinates(0, 0, MAX_ZOOM_LEVEL).findChildren();\n-            fail(\"findChildren should fail when newZoom > MAX_ZOOM_LEVEL\");\n-        }\n-        catch (IllegalArgumentException e) {\n-            // Pass\n-        }\n+        assertThatThrownBy(() -> BingTile.fromCoordinates(0, 0, MAX_ZOOM_LEVEL).findChildren())\n+                .hasMessage(format(\"newZoom must be less than or equal to %s: %s\", MAX_ZOOM_LEVEL, MAX_ZOOM_LEVEL + 1));\n \n-        try {\n-            BingTile.fromCoordinates(0, 0, 13).findChildren(MAX_ZOOM_LEVEL + 1);\n-            fail(\"findChildren should fail when newZoom > MAX_ZOOM_LEVEL\");\n-        }\n-        catch (IllegalArgumentException e) {\n-            // Pass\n-        }\n+        assertThatThrownBy(() -> BingTile.fromCoordinates(0, 0, 13).findChildren(MAX_ZOOM_LEVEL + 1))\n+                .hasMessage(format(\"newZoom must be less than or equal to %s: %s\", MAX_ZOOM_LEVEL, MAX_ZOOM_LEVEL + 1));\n \n-        try {\n-            BingTile.fromCoordinates(0, 0, 13).findChildren(12);\n-            fail(\"findChildren should fail when newZoom < zoomLevel\");\n-        }\n-        catch (IllegalArgumentException e) {\n-            // Pass\n-        }\n+        assertThatThrownBy(() -> BingTile.fromCoordinates(0, 0, 13).findChildren(12))\n+                .hasMessage(format(\"newZoom must be greater than or equal to current zoom %s: %s\", 13, 12));\n     }\n \n     private List<String> toSortedQuadkeys(List<BingTile> tiles)\n"}}, {"oid": "8d021da8b0f04fdfd2a1e24f9bcccb0945dd7856", "url": "https://github.com/prestodb/presto/commit/8d021da8b0f04fdfd2a1e24f9bcccb0945dd7856", "message": "Add BingTile.findChildren() and findParent()\n\nSmall helper functions to find the children and parent of a BingTile.", "committedDate": "2020-07-28T22:17:59Z", "type": "forcePushed"}, {"oid": "03ff03716f3c1e96e7a7ef20fa09edfdb74286f1", "url": "https://github.com/prestodb/presto/commit/03ff03716f3c1e96e7a7ef20fa09edfdb74286f1", "message": "Add BingTile.findChildren() and findParent()\n\nSmall helper functions to find the children and parent of a BingTile.", "committedDate": "2020-07-28T22:56:47Z", "type": "commit"}, {"oid": "03ff03716f3c1e96e7a7ef20fa09edfdb74286f1", "url": "https://github.com/prestodb/presto/commit/03ff03716f3c1e96e7a7ef20fa09edfdb74286f1", "message": "Add BingTile.findChildren() and findParent()\n\nSmall helper functions to find the children and parent of a BingTile.", "committedDate": "2020-07-28T22:56:47Z", "type": "forcePushed"}]}