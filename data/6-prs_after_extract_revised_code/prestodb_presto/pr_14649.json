{"pr_number": 14649, "pr_title": "Adding a config to retry on pinot exceptions", "pr_createdAt": "2020-06-15T05:54:36Z", "pr_url": "https://github.com/prestodb/presto/pull/14649", "timeline": [{"oid": "0f148662e7239a56a26bc064ee8279972a75b7f5", "url": "https://github.com/prestodb/presto/commit/0f148662e7239a56a26bc064ee8279972a75b7f5", "message": "Adding a config to retry on pinot exceptions", "committedDate": "2020-06-15T06:14:15Z", "type": "forcePushed"}, {"oid": "71f4b52479b23210aa8557561995d63fceadda17", "url": "https://github.com/prestodb/presto/commit/71f4b52479b23210aa8557561995d63fceadda17", "message": "Adding a config to retry on pinot exceptions", "committedDate": "2020-06-15T07:52:09Z", "type": "forcePushed"}, {"oid": "dacf91d9f810357b5b808870d9d9acc93b1eb600", "url": "https://github.com/prestodb/presto/commit/dacf91d9f810357b5b808870d9d9acc93b1eb600", "message": "Adding a config to retry on pinot exceptions", "committedDate": "2020-06-15T08:54:46Z", "type": "forcePushed"}, {"oid": "51f977b2f83a3974cffdf1ab9a72ead9453113bb", "url": "https://github.com/prestodb/presto/commit/51f977b2f83a3974cffdf1ab9a72ead9453113bb", "message": "Adding a config to retry on pinot exceptions", "committedDate": "2020-06-15T11:04:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMDg2MA==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441030860", "bodyText": "I believe we don't use the this. for member variables.", "author": "agrawaldevesh", "createdAt": "2020-06-16T17:44:47Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java", "diffHunk": "@@ -315,6 +316,12 @@ public int populateFromPqlResults(\n         if (exceptions != null && exceptions.isArray() && exceptions.size() > 0) {\n             // Pinot is known to return exceptions with benign errorcodes like 200\n             // so we treat any exception as an error\n+            if (this.pinotConfig.isRetryPinotException()) {", "originalCommit": "51f977b2f83a3974cffdf1ab9a72ead9453113bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e", "chunk": "diff --git a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java\nindex 9f0979959d..840032b368 100644\n--- a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java\n+++ b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java\n\n@@ -316,9 +316,9 @@ public class PinotBrokerPageSource\n         if (exceptions != null && exceptions.isArray() && exceptions.size() > 0) {\n             // Pinot is known to return exceptions with benign errorcodes like 200\n             // so we treat any exception as an error\n-            if (this.pinotConfig.isRetryPinotException()) {\n+            if (PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session)) {\n                 throw new PinotException(\n-                    PINOT_RETRIABLE_EXCEPTION,\n+                    PINOT_DATA_FETCH_EXCEPTION,\n                     Optional.of(pql),\n                     String.format(\"Query %s encountered retriable exception %s\", pql, exceptions.get(0)));\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMzQ3OQ==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441033479", "bodyText": "My understanding is that you intend to retry on 'fetch' exceptions in the broker and segment page source codepaths.\nIf so, how about having a special exception for the 'fetch' exceptions. I don't quite like the idea of having a retriable exception, if what you really want to denote is: a fetch exception that is optionally marked as retriable.", "author": "agrawaldevesh", "createdAt": "2020-06-16T17:49:07Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java", "diffHunk": "@@ -34,6 +34,7 @@\n     PINOT_DECODE_ERROR(8, EXTERNAL),\n     PINOT_INVALID_PQL_GENERATED(9, INTERNAL_ERROR),\n     PINOT_INVALID_CONFIGURATION(10, INTERNAL_ERROR),\n+    PINOT_RETRIABLE_EXCEPTION(11, EXTERNAL, true),", "originalCommit": "51f977b2f83a3974cffdf1ab9a72ead9453113bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0OTUzNw==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441349537", "bodyText": "Yes, this is for data fetch request to pinot broker/server. Retry will happen if the query got timeout or server is not responding etc.", "author": "xiangfu0", "createdAt": "2020-06-17T07:49:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMzQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e", "chunk": "diff --git a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java\nindex 77740cdec6..5fce7e7412 100644\n--- a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java\n+++ b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java\n\n@@ -34,7 +34,7 @@ public enum PinotErrorCode\n     PINOT_DECODE_ERROR(8, EXTERNAL),\n     PINOT_INVALID_PQL_GENERATED(9, INTERNAL_ERROR),\n     PINOT_INVALID_CONFIGURATION(10, INTERNAL_ERROR),\n-    PINOT_RETRIABLE_EXCEPTION(11, EXTERNAL, true),\n+    PINOT_DATA_FETCH_EXCEPTION(11, EXTERNAL, true),\n     PINOT_UNCLASSIFIED_ERROR(100, EXTERNAL);\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNDE2Nw==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441034167", "bodyText": "RetryPinotException conveys to me that the pinot exception would be retried.\nHow about the name: isMarkDataFetchExceptionsAsRetriable ?", "author": "agrawaldevesh", "createdAt": "2020-06-16T17:50:14Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotConfig.java", "diffHunk": "@@ -442,4 +443,16 @@ public PinotConfig setInferTimestampTypeInSchema(boolean inferTimestampTypeInSch\n         this.inferTimestampTypeInSchema = inferTimestampTypeInSchema;\n         return this;\n     }\n+\n+    public boolean isRetryPinotException()", "originalCommit": "51f977b2f83a3974cffdf1ab9a72ead9453113bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e", "chunk": "diff --git a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotConfig.java b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotConfig.java\nindex e653d69aed..0fcdd48ffa 100644\n--- a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotConfig.java\n+++ b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotConfig.java\n\n@@ -444,15 +444,15 @@ public class PinotConfig\n         return this;\n     }\n \n-    public boolean isRetryPinotException()\n+    public boolean isMarkDataFetchExceptionsAsRetriable()\n     {\n-        return retryPinotException;\n+        return markDataFetchExceptionsAsRetriable;\n     }\n \n-    @Config(\"pinot.retry-pinot-exception\")\n-    public PinotConfig setRetryPinotException(boolean retryPinotException)\n+    @Config(\"pinot.mark-data-fetch-exceptions-as-retriable\")\n+    public PinotConfig setMarkDataFetchExceptionsAsRetriable(boolean markDataFetchExceptionsAsRetriable)\n     {\n-        this.retryPinotException = retryPinotException;\n+        this.markDataFetchExceptionsAsRetriable = markDataFetchExceptionsAsRetriable;\n         return this;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNDUyMQ==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441034521", "bodyText": "I think presto does not use the this. notation for instance variables", "author": "agrawaldevesh", "createdAt": "2020-06-16T17:50:51Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java", "diffHunk": "@@ -211,7 +218,7 @@ private void fetchPinotData()\n                     .filter(table -> table != null && table.getNumberOfRows() > 0)\n                     .forEach(dataTable ->\n                     {\n-                        checkExceptions(dataTable, split);\n+                        checkExceptions(dataTable, split, this.pinotConfig.isRetryPinotException());", "originalCommit": "51f977b2f83a3974cffdf1ab9a72ead9453113bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e", "chunk": "diff --git a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java\nindex a4135acc80..8a8f209bbf 100644\n--- a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java\n+++ b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java\n\n@@ -218,7 +218,7 @@ public class PinotSegmentPageSource\n                     .filter(table -> table != null && table.getNumberOfRows() > 0)\n                     .forEach(dataTable ->\n                     {\n-                        checkExceptions(dataTable, split, this.pinotConfig.isRetryPinotException());\n+                        checkExceptions(dataTable, split, PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session));\n                         // Store each dataTable which will later be constructed into Pages.\n                         // Also update estimatedMemoryUsage, mostly represented by the size of all dataTables, using numberOfRows and fieldTypes combined as an estimate\n                         int estimatedTableSizeInBytes = IntStream.rangeClosed(0, dataTable.getDataSchema().size() - 1)\n"}}, {"oid": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e", "url": "https://github.com/prestodb/presto/commit/5a1406d698ee4a2a778ce6f8c0987dff106caa0e", "message": "Address comments", "committedDate": "2020-06-17T08:02:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NDQyNQ==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441654425", "bodyText": "Is it possible to use the config isMarkDataFetchExceptionsAsRetriable here as the third param (retriable or not) ?", "author": "agrawaldevesh", "createdAt": "2020-06-17T15:57:07Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java", "diffHunk": "@@ -34,6 +34,7 @@\n     PINOT_DECODE_ERROR(8, EXTERNAL),\n     PINOT_INVALID_PQL_GENERATED(9, INTERNAL_ERROR),\n     PINOT_INVALID_CONFIGURATION(10, INTERNAL_ERROR),\n+    PINOT_DATA_FETCH_EXCEPTION(11, EXTERNAL, true),", "originalCommit": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3MjIzNQ==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441872235", "bodyText": "Those are enums, I don't think we can set it with the pinotConfig.", "author": "xiangfu0", "createdAt": "2020-06-17T22:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NDQyNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTIwNw==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441655207", "bodyText": "I think we can unconditionally throw PINOT_DATA_FETCH_EXCEPTION here, if it is optionally marked as retriable elsewhere. ie, you can just make that change on line 319/326 below", "author": "agrawaldevesh", "createdAt": "2020-06-17T15:58:19Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java", "diffHunk": "@@ -315,6 +316,12 @@ public int populateFromPqlResults(\n         if (exceptions != null && exceptions.isArray() && exceptions.size() > 0) {\n             // Pinot is known to return exceptions with benign errorcodes like 200\n             // so we treat any exception as an error\n+            if (PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session)) {\n+                throw new PinotException(\n+                    PINOT_DATA_FETCH_EXCEPTION,\n+                    Optional.of(pql),\n+                    String.format(\"Query %s encountered retriable exception %s\", pql, exceptions.get(0)));\n+            }\n             throw new PinotException(", "originalCommit": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3Mjg3OQ==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441872879", "bodyText": "I wish I could set it accordingly, but cannot find a way.\nAlso I prefer making this config as a session config, so user can turn it on/off along with retry count without restart presto.", "author": "xiangfu0", "createdAt": "2020-06-17T22:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTIwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3NDQ5MA==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441874490", "bodyText": "Fair enough. Can we do this on line 319/326 then ? It would be nice to keep as much of the code common if possible :-)\nthrow new PinotException(\n      PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session) ? PINOT_DATA_FETCH_EXCEPTION : PINOT_EXCEPTION,\n                    Optional.of(pql),\n                    String.format(\"Query %s encountered exception %s\", pql, exceptions.get(0)));", "author": "agrawaldevesh", "createdAt": "2020-06-17T22:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTIwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4MDUzOA==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441880538", "bodyText": "done", "author": "xiangfu0", "createdAt": "2020-06-17T23:06:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTIwNw=="}], "type": "inlineReview", "revised_code": {"commit": "40d944b1efaeb34db44150a9b465a43d703d2994", "chunk": "diff --git a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java\nindex 840032b368..4b69b82d40 100644\n--- a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java\n+++ b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java\n\n@@ -316,16 +316,10 @@ public class PinotBrokerPageSource\n         if (exceptions != null && exceptions.isArray() && exceptions.size() > 0) {\n             // Pinot is known to return exceptions with benign errorcodes like 200\n             // so we treat any exception as an error\n-            if (PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session)) {\n-                throw new PinotException(\n-                    PINOT_DATA_FETCH_EXCEPTION,\n-                    Optional.of(pql),\n-                    String.format(\"Query %s encountered retriable exception %s\", pql, exceptions.get(0)));\n-            }\n             throw new PinotException(\n-                    PINOT_EXCEPTION,\n-                    Optional.of(pql),\n-                    String.format(\"Query %s encountered exception %s\", pql, exceptions.get(0)));\n+                PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session) ? PINOT_DATA_FETCH_EXCEPTION : PINOT_EXCEPTION,\n+                Optional.of(pql),\n+                String.format(\"Query %s encountered exception %s\", pql, exceptions.get(0)));\n         }\n \n         JsonNode aggregationResults = jsonBody.get(\"aggregationResults\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTM5OA==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441655398", "bodyText": "same here.", "author": "agrawaldevesh", "createdAt": "2020-06-17T15:58:38Z", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java", "diffHunk": "@@ -104,6 +105,12 @@ private static void checkExceptions(DataTable dataTable, PinotSplit split)\n             }\n         });\n         if (!exceptions.isEmpty()) {\n+            if (markDataFetchExceptionsAsRetriable) {\n+                throw new PinotException(\n+                    PINOT_DATA_FETCH_EXCEPTION,\n+                    split.getSegmentPql(),\n+                    String.format(\"Encountered %d retriable pinot exceptions for split %s: %s\", exceptions.size(), split, exceptions));\n+            }\n             throw new PinotException(", "originalCommit": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4MDUwNw==", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441880507", "bodyText": "done", "author": "xiangfu0", "createdAt": "2020-06-17T23:06:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTM5OA=="}], "type": "inlineReview", "revised_code": {"commit": "40d944b1efaeb34db44150a9b465a43d703d2994", "chunk": "diff --git a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java\nindex 8a8f209bbf..6f6b84e520 100644\n--- a/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java\n+++ b/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java\n\n@@ -105,16 +105,10 @@ public class PinotSegmentPageSource\n             }\n         });\n         if (!exceptions.isEmpty()) {\n-            if (markDataFetchExceptionsAsRetriable) {\n-                throw new PinotException(\n-                    PINOT_DATA_FETCH_EXCEPTION,\n-                    split.getSegmentPql(),\n-                    String.format(\"Encountered %d retriable pinot exceptions for split %s: %s\", exceptions.size(), split, exceptions));\n-            }\n             throw new PinotException(\n-                    PINOT_EXCEPTION,\n-                    split.getSegmentPql(),\n-                    String.format(\"Encountered %d pinot exceptions for split %s: %s\", exceptions.size(), split, exceptions));\n+                markDataFetchExceptionsAsRetriable ? PINOT_DATA_FETCH_EXCEPTION : PINOT_EXCEPTION,\n+                split.getSegmentPql(),\n+                String.format(\"Encountered %d pinot exceptions for split %s: %s\", exceptions.size(), split, exceptions));\n         }\n         int numColumnsExpected = split.getExpectedColumnHandles().size();\n         int numColumnsActual = dataTable.getDataSchema().size();\n"}}, {"oid": "63d7a0761b5e7ff18584ef0c5e1a5dce8eecad54", "url": "https://github.com/prestodb/presto/commit/63d7a0761b5e7ff18584ef0c5e1a5dce8eecad54", "message": "Address comments", "committedDate": "2020-06-17T22:48:44Z", "type": "forcePushed"}, {"oid": "40d944b1efaeb34db44150a9b465a43d703d2994", "url": "https://github.com/prestodb/presto/commit/40d944b1efaeb34db44150a9b465a43d703d2994", "message": "Address comments", "committedDate": "2020-06-17T22:52:54Z", "type": "forcePushed"}, {"oid": "b6e73decb0a33a93e04c431142e97946a7a4725a", "url": "https://github.com/prestodb/presto/commit/b6e73decb0a33a93e04c431142e97946a7a4725a", "message": "Address comments", "committedDate": "2020-06-17T23:14:25Z", "type": "forcePushed"}, {"oid": "9d1ddde887ca79007e6f7b9c5e207cfefbfe0c25", "url": "https://github.com/prestodb/presto/commit/9d1ddde887ca79007e6f7b9c5e207cfefbfe0c25", "message": "Address comments", "committedDate": "2020-06-18T00:21:41Z", "type": "forcePushed"}, {"oid": "8c1426db40f594b925c93cf8176534915cbc74c8", "url": "https://github.com/prestodb/presto/commit/8c1426db40f594b925c93cf8176534915cbc74c8", "message": "Adding a config to retry on pinot exceptions", "committedDate": "2020-06-18T05:32:14Z", "type": "forcePushed"}, {"oid": "53cefa44cf78e9752c70c2a8dc0f72d7265aa690", "url": "https://github.com/prestodb/presto/commit/53cefa44cf78e9752c70c2a8dc0f72d7265aa690", "message": "Adding a config to retry on pinot exceptions", "committedDate": "2020-06-18T07:29:07Z", "type": "forcePushed"}, {"oid": "40a0de8414c6f1ea48894e522557b669070f2c6c", "url": "https://github.com/prestodb/presto/commit/40a0de8414c6f1ea48894e522557b669070f2c6c", "message": "Adding a config to retry on pinot exceptions", "committedDate": "2020-06-18T09:12:50Z", "type": "forcePushed"}, {"oid": "3c5de6a9c8430ea5ea0b37778a747320c86a2959", "url": "https://github.com/prestodb/presto/commit/3c5de6a9c8430ea5ea0b37778a747320c86a2959", "message": "Adding a config to retry on pinot exceptions", "committedDate": "2020-06-18T17:39:17Z", "type": "commit"}, {"oid": "3c5de6a9c8430ea5ea0b37778a747320c86a2959", "url": "https://github.com/prestodb/presto/commit/3c5de6a9c8430ea5ea0b37778a747320c86a2959", "message": "Adding a config to retry on pinot exceptions", "committedDate": "2020-06-18T17:39:17Z", "type": "forcePushed"}]}