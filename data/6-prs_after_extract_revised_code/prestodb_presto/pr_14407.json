{"pr_number": 14407, "pr_title": "Add config for orc compression codec", "pr_createdAt": "2020-04-18T20:59:44Z", "pr_url": "https://github.com/prestodb/presto/pull/14407", "timeline": [{"oid": "86fdd77fd4adcd7cad2d0041001f61b7bd5af781", "url": "https://github.com/prestodb/presto/commit/86fdd77fd4adcd7cad2d0041001f61b7bd5af781", "message": "Add config for orc compression codec\n\nAdding a configuration to handle compression codec for handling orc\nand dwrf storage format. Use hive.orc_compression_codec to override\nthe generic compression codec for orc and dwrf storage format. The\nreason to add an extra configuration was the unavailability of uniform\nsupport of all compression codec across all storage formats. The ZSTD\ncompression codec is only available for orc and dwrf storage format.", "committedDate": "2020-04-18T21:01:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgxMTkyOQ==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r410811929", "bodyText": "nit getOrcCompressionCodec", "author": "highker", "createdAt": "2020-04-19T04:28:21Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java", "diffHunk": "@@ -510,6 +511,18 @@ public HiveClientConfig setCompressionCodec(HiveCompressionCodec compressionCode\n         return this;\n     }\n \n+    public HiveCompressionCodec getORCCompressionCodec()", "originalCommit": "86fdd77fd4adcd7cad2d0041001f61b7bd5af781", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb941843626143c779c881ee782036b6207b7555", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java\nindex bf636bb052..b21f75887a 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java\n\n@@ -511,7 +511,7 @@ public class HiveClientConfig\n         return this;\n     }\n \n-    public HiveCompressionCodec getORCCompressionCodec()\n+    public HiveCompressionCodec getOrcCompressionCodec()\n     {\n         return orcCompressionCodec;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgxMjg1OQ==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r410812859", "bodyText": "What other storage format cannot have zstd?", "author": "highker", "createdAt": "2020-04-19T04:35:25Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1545,6 +1554,17 @@ public HiveInsertTableHandle beginInsert(ConnectorSession session, ConnectorTabl\n         return result;\n     }\n \n+    private HiveCompressionCodec getHiveCompressionCodec(ConnectorSession session, boolean isTemporaryTable, HiveStorageFormat storageFormat)\n+    {\n+        if (isTemporaryTable) {\n+            return getTemporaryTableCompressionCodec(session);\n+        }\n+        if (storageFormat.equals(ORC) || storageFormat.equals(DWRF)) {\n+            return getORCCompressionCodec(session);\n+        }\n+        return getCompressionCodec(session);", "originalCommit": "86fdd77fd4adcd7cad2d0041001f61b7bd5af781", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgyMzg4MA==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r410823880", "bodyText": "Anything other than ORC and DWRF.", "author": "jainxrohit", "createdAt": "2020-04-19T05:46:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgxMjg1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "eedcc3268d877e509e49faaf54a78fc524fcb91b", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\nindex 53bc1a3d49..311c2d4311 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n\n@@ -1560,7 +1560,7 @@ public class HiveMetadata\n             return getTemporaryTableCompressionCodec(session);\n         }\n         if (storageFormat.equals(ORC) || storageFormat.equals(DWRF)) {\n-            return getORCCompressionCodec(session);\n+            return getOrcCompressionCodec(session);\n         }\n         return getCompressionCodec(session);\n     }\n"}}, {"oid": "eb941843626143c779c881ee782036b6207b7555", "url": "https://github.com/prestodb/presto/commit/eb941843626143c779c881ee782036b6207b7555", "message": "Add config for orc compression codec\n\nAdding a configuration to handle compression codec for handling orc\nand dwrf storage format. Use hive.orc_compression_codec to override\nthe generic compression codec for orc and dwrf storage format. The\nreason to add an extra configuration was the unavailability of uniform\nsupport of all compression codec across all storage formats. The ZSTD\ncompression codec is only available for orc and dwrf storage format.", "committedDate": "2020-04-19T05:49:49Z", "type": "forcePushed"}, {"oid": "eedcc3268d877e509e49faaf54a78fc524fcb91b", "url": "https://github.com/prestodb/presto/commit/eedcc3268d877e509e49faaf54a78fc524fcb91b", "message": "Add config for orc compression codec\n\nAdding a configuration to handle compression codec for handling orc\nand dwrf storage format. Use hive.orc_compression_codec to override\nthe generic compression codec for orc and dwrf storage format. The\nreason to add an extra configuration was the unavailability of uniform\nsupport of all compression codec across all storage formats. The ZSTD\ncompression codec is only available for orc and dwrf storage format.", "committedDate": "2020-04-20T03:47:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MzA1NA==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r412373054", "bodyText": "use \"==\"", "author": "bhhari", "createdAt": "2020-04-21T17:59:46Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1545,6 +1554,17 @@ public HiveInsertTableHandle beginInsert(ConnectorSession session, ConnectorTabl\n         return result;\n     }\n \n+    private HiveCompressionCodec getHiveCompressionCodec(ConnectorSession session, boolean isTemporaryTable, HiveStorageFormat storageFormat)\n+    {\n+        if (isTemporaryTable) {\n+            return getTemporaryTableCompressionCodec(session);\n+        }\n+        if (storageFormat.equals(ORC) || storageFormat.equals(DWRF)) {", "originalCommit": "eedcc3268d877e509e49faaf54a78fc524fcb91b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMzMjkwOA==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413332908", "bodyText": "@jainxrohit Would you address this comment?", "author": "mbasmanova", "createdAt": "2020-04-22T21:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MzA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0ODIzOQ==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413348239", "bodyText": "@bhhari I don't have a strong preference on equals vs == for enums, even though both do the same job. I find equals method less distracting as its the one gets used for other types. Let me know if you have strong preference.", "author": "jainxrohit", "createdAt": "2020-04-22T21:32:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MzA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1ODMyOQ==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413358329", "bodyText": "@jainxrohit I think this should use == as other places in that file use that.", "author": "mbasmanova", "createdAt": "2020-04-22T21:52:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MzA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM2MTEzNg==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413361136", "bodyText": "Ah, make sense, I will change it.", "author": "jainxrohit", "createdAt": "2020-04-22T21:57:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MzA1NA=="}], "type": "inlineReview", "revised_code": {"commit": "1e37d6ef1795ed2b1164fcfe5e55fe0448234f85", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\nindex 311c2d4311..763a6da795 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n\n@@ -1559,7 +1562,7 @@ public class HiveMetadata\n         if (isTemporaryTable) {\n             return getTemporaryTableCompressionCodec(session);\n         }\n-        if (storageFormat.equals(ORC) || storageFormat.equals(DWRF)) {\n+        if (storageFormat == ORC || storageFormat == DWRF) {\n             return getOrcCompressionCodec(session);\n         }\n         return getCompressionCodec(session);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5NDc0Mw==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r412694743", "bodyText": "I'm curious, why do we still set the default codec to be gzip for orc? As I saw from the note, ZSTD is better than GZIP in both compression ratio and CPU.", "author": "yingsu00", "createdAt": "2020-04-22T06:06:09Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java", "diffHunk": "@@ -85,6 +85,7 @@\n \n     private HiveStorageFormat hiveStorageFormat = ORC;\n     private HiveCompressionCodec compressionCodec = HiveCompressionCodec.GZIP;\n+    private HiveCompressionCodec orcCompressionCodec = HiveCompressionCodec.GZIP;", "originalCommit": "eedcc3268d877e509e49faaf54a78fc524fcb91b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5NjkzMQ==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r412696931", "bodyText": "@yingsu00 The plan is to roll out this change cluster by cluster. Thats why a config has been added in this PR.", "author": "jainxrohit", "createdAt": "2020-04-22T06:11:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5NDc0Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "8b29635d5557e4b330ac4ba58703307476ac4ca7", "url": "https://github.com/prestodb/presto/commit/8b29635d5557e4b330ac4ba58703307476ac4ca7", "message": "Add config for orc compression codec\n\nAdding a configuration to handle compression codec for handling orc\nand dwrf storage format. Use hive.orc_compression_codec to override\nthe generic compression codec for orc and dwrf storage format. The\nreason to add an extra configuration was the unavailability of uniform\nsupport of all compression codec across all storage formats. The ZSTD\ncompression codec is only available for orc and dwrf storage format.", "committedDate": "2020-04-22T19:59:10Z", "type": "forcePushed"}, {"oid": "c2de6b26b1156ecada97d803eefd3c33f20f3fc4", "url": "https://github.com/prestodb/presto/commit/c2de6b26b1156ecada97d803eefd3c33f20f3fc4", "message": "Add config for orc compression codec\n\nAdding a configuration to handle compression codec for handling orc\nand dwrf storage format. Use hive.orc_compression_codec to override\nthe generic compression codec for orc and dwrf storage format. The\nreason to add an extra configuration was the unavailability of uniform\nsupport of all compression codec across all storage formats. The ZSTD\ncompression codec is only available for orc and dwrf storage format.", "committedDate": "2020-04-22T20:36:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMzMzQzMQ==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413333431", "bodyText": "nit: drop @return actualStorageFormat - it doesn't add any information", "author": "mbasmanova", "createdAt": "2020-04-22T21:07:16Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java", "diffHunk": "@@ -120,18 +121,33 @@ public LocationHandle getLocationHandle()\n         return preferredOrderingColumns;\n     }\n \n+    /* This field is deprecated and clients should switch to {@link #getActualStorageFormat()}*/\n+    @Deprecated\n     @JsonProperty\n     public HiveStorageFormat getTableStorageFormat()\n     {\n         return tableStorageFormat;\n     }\n \n+    /* This field is deprecated and clients should switch to {@link #getActualStorageFormat()}*/\n+    @Deprecated\n     @JsonProperty\n     public HiveStorageFormat getPartitionStorageFormat()\n     {\n         return partitionStorageFormat;\n     }\n \n+    /**\n+     * The actualStorageFormat is the real storage format that gets used later in the pipeline.\n+     * It could be either representing tableStorageFormat, or partitionStorageFormat.\n+     * @return actualStorageFormat", "originalCommit": "c2de6b26b1156ecada97d803eefd3c33f20f3fc4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d17d9fc959482260ef083cc6ea48e3357d0c6956", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java\nindex 723d2726d6..4c80a2a92f 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java\n\n@@ -121,7 +121,7 @@ public class HiveWritableTableHandle\n         return preferredOrderingColumns;\n     }\n \n-    /* This field is deprecated and clients should switch to {@link #getActualStorageFormat()}*/\n+    /* Use {@link #getActualStorageFormat()}*/\n     @Deprecated\n     @JsonProperty\n     public HiveStorageFormat getTableStorageFormat()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMzNDA4MQ==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413334081", "bodyText": "nit: perhaps,  shorten to Use  {@link #getActualStorageFormat()}; @deprecated annotation already says \"This field is deprecated\"", "author": "mbasmanova", "createdAt": "2020-04-22T21:08:19Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java", "diffHunk": "@@ -120,18 +121,33 @@ public LocationHandle getLocationHandle()\n         return preferredOrderingColumns;\n     }\n \n+    /* This field is deprecated and clients should switch to {@link #getActualStorageFormat()}*/\n+    @Deprecated\n     @JsonProperty\n     public HiveStorageFormat getTableStorageFormat()\n     {\n         return tableStorageFormat;\n     }\n \n+    /* This field is deprecated and clients should switch to {@link #getActualStorageFormat()}*/", "originalCommit": "c2de6b26b1156ecada97d803eefd3c33f20f3fc4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d17d9fc959482260ef083cc6ea48e3357d0c6956", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java\nindex 723d2726d6..4c80a2a92f 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java\n\n@@ -121,7 +121,7 @@ public class HiveWritableTableHandle\n         return preferredOrderingColumns;\n     }\n \n-    /* This field is deprecated and clients should switch to {@link #getActualStorageFormat()}*/\n+    /* Use {@link #getActualStorageFormat()}*/\n     @Deprecated\n     @JsonProperty\n     public HiveStorageFormat getTableStorageFormat()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMzNDE0MA==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413334140", "bodyText": "nit: perhaps, shorten to Use {@link #getActualStorageFormat()}; @deprecated annotation already says \"This field is deprecated\"", "author": "mbasmanova", "createdAt": "2020-04-22T21:08:26Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java", "diffHunk": "@@ -120,18 +121,33 @@ public LocationHandle getLocationHandle()\n         return preferredOrderingColumns;\n     }\n \n+    /* This field is deprecated and clients should switch to {@link #getActualStorageFormat()}*/", "originalCommit": "c2de6b26b1156ecada97d803eefd3c33f20f3fc4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d17d9fc959482260ef083cc6ea48e3357d0c6956", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java\nindex 723d2726d6..4c80a2a92f 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveWritableTableHandle.java\n\n@@ -121,7 +121,7 @@ public class HiveWritableTableHandle\n         return preferredOrderingColumns;\n     }\n \n-    /* This field is deprecated and clients should switch to {@link #getActualStorageFormat()}*/\n+    /* Use {@link #getActualStorageFormat()}*/\n     @Deprecated\n     @JsonProperty\n     public HiveStorageFormat getTableStorageFormat()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMzNjI2MQ==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413336261", "bodyText": "For the purpose of checking compatibility between StorageFormat and HiveCompressionCodec, you can use HiveCompressionCodec::isSupportedStorageFormat\n\n\nFor the purpose of getting ORC specific compression method,  you can use HiveCompressionCodec::orcCompressionKind\n\n\nI didn't quite understand why existing hive.compression-codec is not good enough.", "author": "viczhang861", "createdAt": "2020-04-22T21:12:00Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1548,6 +1557,17 @@ public HiveInsertTableHandle beginInsert(ConnectorSession session, ConnectorTabl\n         return result;\n     }\n \n+    private HiveCompressionCodec getHiveCompressionCodec(ConnectorSession session, boolean isTemporaryTable, HiveStorageFormat storageFormat)\n+    {\n+        if (isTemporaryTable) {\n+            return getTemporaryTableCompressionCodec(session);\n+        }\n+        if (storageFormat.equals(ORC) || storageFormat.equals(DWRF)) {", "originalCommit": "c2de6b26b1156ecada97d803eefd3c33f20f3fc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0OTk4MA==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413349980", "bodyText": "@viczhang861 We are already using copressionKind and isSupportedStorageFormat.\nThe reason to add an extra configuration was the unavailability of uniform support of all compression codec across all storage formats. The ZSTD compression codec is only available for orc and dwrf storage format.\nWe wanted to roll out the ZSTD configuration for orc/dwrf storage formats. And without a dedicated compression codec for these storage formats, we would have enabled this compression for all storage format. Which would have failed the pipeline as ZSTD is not supported for other storage formats.", "author": "jainxrohit", "createdAt": "2020-04-22T21:35:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMzNjI2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM2NDIzNg==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413364236", "bodyText": "I see, another way to do this is to add a default compression codec into HiveStorageFomat, to avoid configuring all combinations between storage format and compression.\nJust curious,  what are other storage formats in production that rely on hive.compression-codec  ?", "author": "viczhang861", "createdAt": "2020-04-22T22:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMzNjI2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxNjQ5MQ==", "url": "https://github.com/prestodb/presto/pull/14407#discussion_r413416491", "bodyText": "hive.compression-codec is used to configure compression for all storage format. I am not sure how many clients are using this config.\nHardcoding default in the HiveStorageFormat would not be flexible. Using the configurations we can rollout the change as we need.", "author": "jainxrohit", "createdAt": "2020-04-23T00:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMzNjI2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "1e37d6ef1795ed2b1164fcfe5e55fe0448234f85", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\nindex fa57b19fd7..763a6da795 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n\n@@ -1562,7 +1562,7 @@ public class HiveMetadata\n         if (isTemporaryTable) {\n             return getTemporaryTableCompressionCodec(session);\n         }\n-        if (storageFormat.equals(ORC) || storageFormat.equals(DWRF)) {\n+        if (storageFormat == ORC || storageFormat == DWRF) {\n             return getOrcCompressionCodec(session);\n         }\n         return getCompressionCodec(session);\n"}}, {"oid": "d17d9fc959482260ef083cc6ea48e3357d0c6956", "url": "https://github.com/prestodb/presto/commit/d17d9fc959482260ef083cc6ea48e3357d0c6956", "message": "Add config for orc compression codec\n\nAdding a configuration to handle compression codec for handling orc\nand dwrf storage format. Use hive.orc_compression_codec to override\nthe generic compression codec for orc and dwrf storage format. The\nreason to add an extra configuration was the unavailability of uniform\nsupport of all compression codec across all storage formats. The ZSTD\ncompression codec is only available for orc and dwrf storage format.", "committedDate": "2020-04-22T21:36:55Z", "type": "forcePushed"}, {"oid": "1e37d6ef1795ed2b1164fcfe5e55fe0448234f85", "url": "https://github.com/prestodb/presto/commit/1e37d6ef1795ed2b1164fcfe5e55fe0448234f85", "message": "Add config for orc compression codec\n\nAdding a configuration to handle compression codec for handling orc\nand dwrf storage format. Use hive.orc_compression_codec to override\nthe generic compression codec for orc and dwrf storage format. The\nreason to add an extra configuration was the unavailability of uniform\nsupport of all compression codec across all storage formats. The ZSTD\ncompression codec is only available for orc and dwrf storage format.", "committedDate": "2020-04-22T21:59:57Z", "type": "commit"}, {"oid": "1e37d6ef1795ed2b1164fcfe5e55fe0448234f85", "url": "https://github.com/prestodb/presto/commit/1e37d6ef1795ed2b1164fcfe5e55fe0448234f85", "message": "Add config for orc compression codec\n\nAdding a configuration to handle compression codec for handling orc\nand dwrf storage format. Use hive.orc_compression_codec to override\nthe generic compression codec for orc and dwrf storage format. The\nreason to add an extra configuration was the unavailability of uniform\nsupport of all compression codec across all storage formats. The ZSTD\ncompression codec is only available for orc and dwrf storage format.", "committedDate": "2020-04-22T21:59:57Z", "type": "forcePushed"}]}