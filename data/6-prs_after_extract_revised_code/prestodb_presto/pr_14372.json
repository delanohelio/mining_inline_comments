{"pr_number": 14372, "pr_title": "count distinct pushdown for druid connector", "pr_createdAt": "2020-04-10T07:06:27Z", "pr_url": "https://github.com/prestodb/presto/pull/14372", "timeline": [{"oid": "7ce9b92f46ac0cac89ddd1147121f4cd543f6351", "url": "https://github.com/prestodb/presto/commit/7ce9b92f46ac0cac89ddd1147121f4cd543f6351", "message": "count distinct pushdown for druid connector", "committedDate": "2020-04-10T07:05:05Z", "type": "commit"}, {"oid": "da066aa6b5d552ba157cec892f58001b8ad78d6d", "url": "https://github.com/prestodb/presto/commit/da066aa6b5d552ba157cec892f58001b8ad78d6d", "message": "Fix druid connector segment scan\n\nCaused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.joda.time.Interval", "committedDate": "2020-04-10T22:09:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5NTAzMA==", "url": "https://github.com/prestodb/presto/pull/14372#discussion_r406995030", "bodyText": "not used?", "author": "highker", "createdAt": "2020-04-11T00:46:45Z", "path": "presto-druid/src/test/java/com/facebook/presto/druid/TestDruidQueryBase.java", "diffHunk": "@@ -128,11 +129,16 @@ public Session getSession()\n         }\n     }\n \n-    protected VariableReferenceExpression v(String name)\n+    protected VariableReferenceExpression variable(String name)\n     {\n         return testInput.keySet().stream().filter(v -> v.getName().equals(name)).findFirst().orElseThrow(() -> new IllegalArgumentException(\"Cannot find variable \" + name));\n     }\n \n+    protected MarkDistinctNode markDistinct(PlanBuilder planBuilder, VariableReferenceExpression markerVariable, List<VariableReferenceExpression> distinctVariables, PlanNode source)", "originalCommit": "da066aa6b5d552ba157cec892f58001b8ad78d6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5NjQ3Mg==", "url": "https://github.com/prestodb/presto/pull/14372#discussion_r406996472", "bodyText": "get it, will remove", "author": "zhenxiao", "createdAt": "2020-04-11T00:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5NTAzMA=="}], "type": "inlineReview", "revised_code": {"commit": "54423da2a3c1363cbe0a70b016e8a2d3babdfcdd", "chunk": "diff --git a/presto-druid/src/test/java/com/facebook/presto/druid/TestDruidQueryBase.java b/presto-druid/src/test/java/com/facebook/presto/druid/TestDruidQueryBase.java\nindex 666f1d6c5d..af39431228 100644\n--- a/presto-druid/src/test/java/com/facebook/presto/druid/TestDruidQueryBase.java\n+++ b/presto-druid/src/test/java/com/facebook/presto/druid/TestDruidQueryBase.java\n\n@@ -134,11 +133,6 @@ public class TestDruidQueryBase\n         return testInput.keySet().stream().filter(v -> v.getName().equals(name)).findFirst().orElseThrow(() -> new IllegalArgumentException(\"Cannot find variable \" + name));\n     }\n \n-    protected MarkDistinctNode markDistinct(PlanBuilder planBuilder, VariableReferenceExpression markerVariable, List<VariableReferenceExpression> distinctVariables, PlanNode source)\n-    {\n-        return planBuilder.markDistinct(markerVariable, distinctVariables, source);\n-    }\n-\n     protected TableScanNode tableScan(PlanBuilder planBuilder, DruidTableHandle connectorTableHandle, DruidColumnHandle... columnHandles)\n     {\n         List<VariableReferenceExpression> variables = Arrays.stream(columnHandles).map(ch -> new VariableReferenceExpression(ch.getColumnName().toLowerCase(ENGLISH), ch.getColumnType())).collect(toImmutableList());\n"}}, {"oid": "54423da2a3c1363cbe0a70b016e8a2d3babdfcdd", "url": "https://github.com/prestodb/presto/commit/54423da2a3c1363cbe0a70b016e8a2d3babdfcdd", "message": "Remove unused methods in TestDruidQueryBase", "committedDate": "2020-04-11T00:56:02Z", "type": "commit"}]}