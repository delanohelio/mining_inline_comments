{"pr_number": 14751, "pr_title": "Parquet: Handle missing struct columns as part of the nested column pruning", "pr_createdAt": "2020-06-30T19:28:59Z", "pr_url": "https://github.com/prestodb/presto/pull/14751", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ4NzE1NA==", "url": "https://github.com/prestodb/presto/pull/14751#discussion_r448487154", "bodyText": "@vkorukanti could we merge this into testSubfieldWithSchemaChanges? or have a new name? testSubfieldWithSchemaChanges2 seems bad naming", "author": "zhenxiao", "createdAt": "2020-07-01T16:40:10Z", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestParquetDistributedQueries.java", "diffHunk": "@@ -93,6 +93,31 @@ public void testSubfieldWithSchemaChanges()\n         }\n     }\n \n+    @Test\n+    public void testSubfieldWithSchemaChanges2()", "originalCommit": "742a64c3895b5e2fd1f0b8777a9d5926b657f6b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNTEyOA==", "url": "https://github.com/prestodb/presto/pull/14751#discussion_r448525128", "bodyText": "done.", "author": "vkorukanti", "createdAt": "2020-07-01T17:52:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ4NzE1NA=="}], "type": "inlineReview", "revised_code": {"commit": "b92ef6c48670abb60c21156b22337328b38e969f", "chunk": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/TestParquetDistributedQueries.java b/presto-hive/src/test/java/com/facebook/presto/hive/TestParquetDistributedQueries.java\nindex 52c9883039..6c2edf3276 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/TestParquetDistributedQueries.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/TestParquetDistributedQueries.java\n\n@@ -75,46 +75,32 @@ public class TestParquetDistributedQueries\n         getQueryRunner().execute(\"CREATE TABLE test_subfield_multilevel_pruning AS \" +\n                 \"SELECT \" +\n                 \"   1 as orderkey,\" +\n-                \"   CAST(ROW('N', ROW(5, 7)) AS ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER))) as info \");\n+                \"   CAST(ROW('N', ROW(5, 7)) AS ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER))) as nestedColumnLevelUpdates,\" +\n+                \"   CAST(ROW('N', ROW(5, 7)) AS ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER))) as colLevelUpdates\");\n \n-        getQueryRunner().execute(\"ALTER TABLE test_subfield_multilevel_pruning DROP COLUMN info\");\n+        // update the schema of the nested column\n+        getQueryRunner().execute(\"ALTER TABLE test_subfield_multilevel_pruning DROP COLUMN nestedColumnLevelUpdates\");\n         getQueryRunner().execute(\"ALTER TABLE test_subfield_multilevel_pruning ADD COLUMN \" +\n-                \"info ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER, ship_year INTEGER))\");\n+                \"nestedColumnLevelUpdates ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER, ship_year INTEGER))\");\n+\n+        // delete the entire struct column (colLevelUpdates) and add a new struct column with different name (colLevelUpdates2)\n+        getQueryRunner().execute(\"ALTER TABLE test_subfield_multilevel_pruning DROP COLUMN colLevelUpdates\");\n+        getQueryRunner().execute(\"ALTER TABLE test_subfield_multilevel_pruning ADD COLUMN \" +\n+                \"colLevelUpdates2 ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER, ship_year INTEGER))\");\n \n         getQueryRunner().execute(\"INSERT INTO test_subfield_multilevel_pruning \" +\n-                \"SELECT 2, cast(row('Y', ROW(5, 7, 2020)) as ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER, ship_year INTEGER)))\");\n+                \"SELECT 2, cast(row('Y', ROW(5, 7, 2020)) as ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER, ship_year INTEGER))),\" +\n+                \"cast(row('Y', ROW(5, 7, 2020)) as ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER, ship_year INTEGER)))\");\n \n         try {\n-            assertQuery(\"SELECT orderkey, info.shipdate.ship_day, info.shipdate.ship_month, info.shipdate.ship_year FROM test_subfield_multilevel_pruning\",\n+            assertQuery(\"SELECT orderkey, nestedColumnLevelUpdates.shipdate.ship_day, nestedColumnLevelUpdates.shipdate.ship_month, nestedColumnLevelUpdates.shipdate.ship_year FROM test_subfield_multilevel_pruning\",\n                     \"SELECT * from (VALUES(1, 5, 7, null), (2, 5, 7, 2020))\");\n-        }\n-        finally {\n-            getQueryRunner().execute(\"DROP TABLE test_subfield_multilevel_pruning\");\n-        }\n-    }\n-\n-    @Test\n-    public void testSubfieldWithSchemaChanges2()\n-    {\n-        getQueryRunner().execute(\"CREATE TABLE test_subfield_schemachanges2 AS \" +\n-                \"SELECT \" +\n-                \"   1 as orderkey,\" +\n-                \"   CAST(ROW('N', ROW(5, 7)) AS ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER))) as info \");\n \n-        // delete the struct column (info) and add a new struct column with different name (info2)\n-        getQueryRunner().execute(\"ALTER TABLE test_subfield_schemachanges2 DROP COLUMN info\");\n-        getQueryRunner().execute(\"ALTER TABLE test_subfield_schemachanges2 ADD COLUMN \" +\n-                \"info2 ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER, ship_year INTEGER))\");\n-\n-        getQueryRunner().execute(\"INSERT INTO test_subfield_schemachanges2 \" +\n-                \"SELECT 2, cast(row('Y', ROW(5, 7, 2020)) as ROW(returnflag CHAR(1), shipdate ROW(ship_day INTEGER, ship_month INTEGER, ship_year INTEGER)))\");\n-\n-        try {\n-            assertQuery(\"SELECT orderkey, info2.shipdate.ship_day, info2.shipdate.ship_month, info2.shipdate.ship_year FROM test_subfield_schemachanges2\",\n+            assertQuery(\"SELECT orderkey, colLevelUpdates2.shipdate.ship_day, colLevelUpdates2.shipdate.ship_month, colLevelUpdates2.shipdate.ship_year FROM test_subfield_multilevel_pruning\",\n                     \"SELECT * from (VALUES (1, null, null, null), (2, 5, 7, 2020))\");\n         }\n         finally {\n-            getQueryRunner().execute(\"DROP TABLE test_subfield_schemachanges2\");\n+            getQueryRunner().execute(\"DROP TABLE test_subfield_multilevel_pruning\");\n         }\n     }\n \n"}}, {"oid": "b92ef6c48670abb60c21156b22337328b38e969f", "url": "https://github.com/prestodb/presto/commit/b92ef6c48670abb60c21156b22337328b38e969f", "message": "Parquet: Handle missing struct columns as part of the nested column pruning", "committedDate": "2020-07-01T17:51:08Z", "type": "commit"}, {"oid": "b92ef6c48670abb60c21156b22337328b38e969f", "url": "https://github.com/prestodb/presto/commit/b92ef6c48670abb60c21156b22337328b38e969f", "message": "Parquet: Handle missing struct columns as part of the nested column pruning", "committedDate": "2020-07-01T17:51:08Z", "type": "forcePushed"}]}