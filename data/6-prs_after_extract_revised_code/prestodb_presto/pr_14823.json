{"pr_number": 14823, "pr_title": "Support customizable ways of launching Presto queries in Verifier", "pr_createdAt": "2020-07-10T08:20:09Z", "pr_url": "https://github.com/prestodb/presto/pull/14823", "timeline": [{"oid": "22da654856bda783982fadd3f43bf05c4bc1a9bc", "url": "https://github.com/prestodb/presto/commit/22da654856bda783982fadd3f43bf05c4bc1a9bc", "message": "Add all QueryStats information to verification results", "committedDate": "2020-07-10T08:20:52Z", "type": "forcePushed"}, {"oid": "3f61b1d757077142690e3c0bff5a98af472cc4db", "url": "https://github.com/prestodb/presto/commit/3f61b1d757077142690e3c0bff5a98af472cc4db", "message": "Add all QueryStats information to verification results", "committedDate": "2020-07-10T08:24:27Z", "type": "forcePushed"}, {"oid": "be26ad58d78559200d3190b29efaac151eb61948", "url": "https://github.com/prestodb/presto/commit/be26ad58d78559200d3190b29efaac151eb61948", "message": "Add all QueryStats information to verification results", "committedDate": "2020-07-10T08:26:16Z", "type": "forcePushed"}, {"oid": "4b6319ec2e0f49e773e1e036eb9cc82abb0fb035", "url": "https://github.com/prestodb/presto/commit/4b6319ec2e0f49e773e1e036eb9cc82abb0fb035", "message": "Add all QueryStats information to verification results", "committedDate": "2020-07-10T08:49:10Z", "type": "forcePushed"}, {"oid": "d81fea21018de980a508a93abc24edf879864c46", "url": "https://github.com/prestodb/presto/commit/d81fea21018de980a508a93abc24edf879864c46", "message": "Support customizable ways of launching Presto queries in Verifier\n\nThere are use cases to launch control and test Presto queries through a\ndifferent way other than JDBC. This commit provides a way to write\ncustomized QueryAction and plug it into the Verifer.\n\n- Introduce QueryAction-related interfaces.\n- Support specifying a \"helper\" cluster, a cluster to run helper\n  queries (describe, checksum, etc.). By default, help cluster is\n  the control cluster. If the control QueryAction does not support\n  data fetching, a separate helper cluster must be specified.\n- Replace RoutingPrestoAction with QueryActions.\n- Add an option to specify whether to run setup/teardown queries on\n  the control/test clusters or on the helper cluster.", "committedDate": "2020-07-10T08:54:35Z", "type": "forcePushed"}, {"oid": "d1ef51b4fa4c774142dcac3ae06f934f26350871", "url": "https://github.com/prestodb/presto/commit/d1ef51b4fa4c774142dcac3ae06f934f26350871", "message": "Support customizable ways of launching Presto queries in Verifier\n\nThere are use cases to launch control and test Presto queries through a\ndifferent way other than JDBC. This commit provides a way to write\ncustomized QueryAction and plug it into the Verifer.\n\n- Introduce QueryAction-related interfaces.\n- Support specifying a \"helper\" cluster, a cluster to run helper\n  queries (describe, checksum, etc.). By default, help cluster is\n  the control cluster. If the control QueryAction does not support\n  data fetching, a separate helper cluster must be specified.\n- Replace RoutingPrestoAction with QueryActions.\n- Add an option to specify whether to run setup/teardown queries on\n  the control/test clusters or on the helper cluster.", "committedDate": "2020-07-10T08:56:22Z", "type": "forcePushed"}, {"oid": "899498aba40b16e107cb88ae41ddf9fbf49c44ad", "url": "https://github.com/prestodb/presto/commit/899498aba40b16e107cb88ae41ddf9fbf49c44ad", "message": "Use a single metadata-timeout and checksum-timeout\n\nmetadata-timeout and checksum-timeout can be defined for control\ncluster and test cluster separately. Now that we have 3 different\ncluster types, this could be confusing.\n\nMove both config to QueryActionsConfig so that there is only one\ntop level config for metadata-timeout and checksum-timeout.", "committedDate": "2020-07-10T09:48:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzMDkwMw==", "url": "https://github.com/prestodb/presto/pull/14823#discussion_r453030903", "bodyText": "Should it be called JdbcPrestoActionConfig?", "author": "arhimondr", "createdAt": "2020-07-10T19:10:57Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoActionConfig.java", "diffHunk": "@@ -26,20 +26,18 @@\n \n import java.io.IOException;\n import java.util.Map;\n+import java.util.Optional;\n \n import static java.util.concurrent.TimeUnit.MINUTES;\n \n-public class PrestoClusterConfig\n+public class PrestoActionConfig", "originalCommit": "899498aba40b16e107cb88ae41ddf9fbf49c44ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d7018f4586411d3ae1b1bc46153899d15b1ef637", "chunk": "diff --git a/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoActionConfig.java b/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoClusterConfig.java\nsimilarity index 68%\nrename from presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoActionConfig.java\nrename to presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoClusterConfig.java\nindex deef2f7b5a..01f061ca54 100644\n--- a/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoActionConfig.java\n+++ b/presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoClusterConfig.java\n\n@@ -26,18 +26,20 @@ import javax.validation.constraints.NotNull;\n \n import java.io.IOException;\n import java.util.Map;\n-import java.util.Optional;\n \n import static java.util.concurrent.TimeUnit.MINUTES;\n \n-public class PrestoActionConfig\n+public class PrestoClusterConfig\n         implements PrestoAddress\n {\n     private String host;\n     private int jdbcPort;\n-    private Optional<Integer> httpPort = Optional.empty();\n+    private int httpPort;\n     private Map<String, String> jdbcUrlParameters = ImmutableMap.of();\n+\n     private Duration queryTimeout = new Duration(60, MINUTES);\n+    private Duration metadataTimeout = new Duration(3, MINUTES);\n+    private Duration checksumTimeout = new Duration(30, MINUTES);\n \n     @Override\n     @NotNull\n"}}, {"oid": "9b789a778dc9b48aacfe7515a990120ee3b6b490", "url": "https://github.com/prestodb/presto/commit/9b789a778dc9b48aacfe7515a990120ee3b6b490", "message": "Use a single metadata-timeout and checksum-timeout\n\nmetadata-timeout and checksum-timeout can be defined for control\ncluster and test cluster separately. Now that we have 3 different\ncluster types, this could be confusing.\n\nMove both config to QueryActionsConfig so that there is only one\ntop level config for metadata-timeout and checksum-timeout.", "committedDate": "2020-07-16T19:56:03Z", "type": "forcePushed"}, {"oid": "fcfd450dcab26298583aae2ec639e2e94490b105", "url": "https://github.com/prestodb/presto/commit/fcfd450dcab26298583aae2ec639e2e94490b105", "message": "Use a single metadata-timeout and checksum-timeout\n\nmetadata-timeout and checksum-timeout can be defined for control\ncluster and test cluster separately. Now that we have 3 different\ncluster types, this could be confusing.\n\nMove both config to QueryActionsConfig so that there is only one\ntop level config for metadata-timeout and checksum-timeout.", "committedDate": "2020-07-17T21:55:37Z", "type": "forcePushed"}, {"oid": "c081b59f90f6cf153db064c1dd110cd2b00c5228", "url": "https://github.com/prestodb/presto/commit/c081b59f90f6cf153db064c1dd110cd2b00c5228", "message": "Use a single metadata-timeout and checksum-timeout\n\nmetadata-timeout and checksum-timeout can be defined for control\ncluster and test cluster separately. Now that we have 3 different\ncluster types, this could be confusing.\n\nMove both config to QueryActionsConfig so that there is only one\ntop level config for metadata-timeout and checksum-timeout.", "committedDate": "2020-07-17T21:56:40Z", "type": "forcePushed"}, {"oid": "679e52f18be2b27c0fd3d9e251ba60e4ef8bccd8", "url": "https://github.com/prestodb/presto/commit/679e52f18be2b27c0fd3d9e251ba60e4ef8bccd8", "message": "Use a single metadata-timeout and checksum-timeout\n\nmetadata-timeout and checksum-timeout can be defined for control\ncluster and test cluster separately. Now that we have 3 different\ncluster types, this could be confusing.\n\nMove both config to QueryActionsConfig so that there is only one\ntop level config for metadata-timeout and checksum-timeout.", "committedDate": "2020-07-17T21:57:55Z", "type": "forcePushed"}, {"oid": "4f8364e1ca8192f4e1d775e7132430a40b3a2247", "url": "https://github.com/prestodb/presto/commit/4f8364e1ca8192f4e1d775e7132430a40b3a2247", "message": "Use a single metadata-timeout and checksum-timeout\n\nmetadata-timeout and checksum-timeout can be defined for control\ncluster and test cluster separately. Now that we have 3 different\ncluster types, this could be confusing.\n\nMove both config to QueryActionsConfig so that there is only one\ntop level config for metadata-timeout and checksum-timeout.", "committedDate": "2020-07-17T22:02:06Z", "type": "forcePushed"}, {"oid": "dabde7b32751729a3ef19e50a41b04324a5568fb", "url": "https://github.com/prestodb/presto/commit/dabde7b32751729a3ef19e50a41b04324a5568fb", "message": "Move the logic of mangling session properties into a utility method", "committedDate": "2020-07-17T23:41:29Z", "type": "forcePushed"}, {"oid": "8345cf36c19c903e7495940be7a9f4d1906774da", "url": "https://github.com/prestodb/presto/commit/8345cf36c19c903e7495940be7a9f4d1906774da", "message": "test", "committedDate": "2020-07-23T18:36:30Z", "type": "forcePushed"}, {"oid": "55727ca59eb059db11cb02b466cfea74b1b4bfb7", "url": "https://github.com/prestodb/presto/commit/55727ca59eb059db11cb02b466cfea74b1b4bfb7", "message": "test", "committedDate": "2020-07-23T18:42:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY4Mzg3OA==", "url": "https://github.com/prestodb/presto/pull/14823#discussion_r459683878", "bodyText": "wow. why not using OptionalLong/OptionalDouble?  -- this is irrelevant to this PR though", "author": "wenleix", "createdAt": "2020-07-23T19:38:46Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/event/QueryInfo.java", "diffHunk": "@@ -67,7 +68,8 @@ public QueryInfo(\n             Optional<Double> cpuTimeSecs,\n             Optional<Double> wallTimeSecs,\n             Optional<Long> peakTotalMemoryBytes,\n-            Optional<Long> peakTaskTotalMemoryBytes)\n+            Optional<Long> peakTaskTotalMemoryBytes,", "originalCommit": "eda70357dd12623b0eed56ced97705dfdc48dd92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMjYyNQ==", "url": "https://github.com/prestodb/presto/pull/14823#discussion_r459712625", "bodyText": "Since we have everything in the QueryStatsEvent, we'll eventually deprecate those fields.", "author": "caithagoras", "createdAt": "2020-07-23T20:35:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY4Mzg3OA=="}], "type": "inlineReview", "revised_code": {"commit": "d7018f4586411d3ae1b1bc46153899d15b1ef637", "chunk": "diff --git a/presto-verifier/src/main/java/com/facebook/presto/verifier/event/QueryInfo.java b/presto-verifier/src/main/java/com/facebook/presto/verifier/event/QueryInfo.java\nindex a56c337cf7..781057ff08 100644\n--- a/presto-verifier/src/main/java/com/facebook/presto/verifier/event/QueryInfo.java\n+++ b/presto-verifier/src/main/java/com/facebook/presto/verifier/event/QueryInfo.java\n\n@@ -68,8 +67,7 @@ public class QueryInfo\n             Optional<Double> cpuTimeSecs,\n             Optional<Double> wallTimeSecs,\n             Optional<Long> peakTotalMemoryBytes,\n-            Optional<Long> peakTaskTotalMemoryBytes,\n-            Optional<QueryStatsEvent> queryStats)\n+            Optional<Long> peakTaskTotalMemoryBytes)\n     {\n         this.catalog = requireNonNull(catalog, \"catalog is null\");\n         this.schema = requireNonNull(schema, \"schema is null\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY4NTg3MA==", "url": "https://github.com/prestodb/presto/pull/14823#discussion_r459685870", "bodyText": "what's this? ;)", "author": "wenleix", "createdAt": "2020-07-23T19:42:51Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/event/QueryStatsEvent.java", "diffHunk": "@@ -19,17 +19,26 @@\n \n import javax.annotation.concurrent.Immutable;\n \n+import java.util.Optional;\n+\n import static java.util.Objects.requireNonNull;\n \n @Immutable\n @EventType(\"QueryStatsEvent\")\n public class QueryStatsEvent\n {\n     private final QueryStats queryStats;\n+    private final String extraData;", "originalCommit": "e9f23a78a6be458c949b797e3fdac246b532aad4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d7018f4586411d3ae1b1bc46153899d15b1ef637", "chunk": "diff --git a/presto-verifier/src/main/java/com/facebook/presto/verifier/event/QueryStatsEvent.java b/presto-verifier/src/main/java/com/facebook/presto/verifier/event/QueryStatsEvent.java\ndeleted file mode 100644\nindex 972e54f5e1..0000000000\n--- a/presto-verifier/src/main/java/com/facebook/presto/verifier/event/QueryStatsEvent.java\n+++ /dev/null\n\n@@ -1,157 +0,0 @@\n-/*\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.facebook.presto.verifier.event;\n-\n-import com.facebook.airlift.event.client.EventField;\n-import com.facebook.airlift.event.client.EventType;\n-import com.facebook.presto.jdbc.QueryStats;\n-\n-import javax.annotation.concurrent.Immutable;\n-\n-import java.util.Optional;\n-\n-import static java.util.Objects.requireNonNull;\n-\n-@Immutable\n-@EventType(\"QueryStatsEvent\")\n-public class QueryStatsEvent\n-{\n-    private final QueryStats queryStats;\n-    private final String extraData;\n-\n-    public QueryStatsEvent(QueryStats queryStats)\n-    {\n-        this(queryStats, Optional.empty());\n-    }\n-\n-    public QueryStatsEvent(QueryStats queryStats, Optional<String> extraData)\n-    {\n-        this.queryStats = requireNonNull(queryStats, \"queryStats is null\");\n-        this.extraData = extraData.orElse(null);\n-    }\n-\n-    @EventField\n-    public String getQueryId()\n-    {\n-        return queryStats.getQueryId();\n-    }\n-\n-    @EventField\n-    public String getState()\n-    {\n-        return queryStats.getState();\n-    }\n-\n-    @EventField\n-    public boolean isQueued()\n-    {\n-        return queryStats.isQueued();\n-    }\n-\n-    @EventField\n-    public boolean isScheduled()\n-    {\n-        return queryStats.isScheduled();\n-    }\n-\n-    @EventField\n-    public int getNodes()\n-    {\n-        return queryStats.getNodes();\n-    }\n-\n-    @EventField\n-    public int getTotalSplits()\n-    {\n-        return queryStats.getTotalSplits();\n-    }\n-\n-    @EventField\n-    public int getQueuedSplits()\n-    {\n-        return queryStats.getQueuedSplits();\n-    }\n-\n-    @EventField\n-    public int getRunningSplits()\n-    {\n-        return queryStats.getRunningSplits();\n-    }\n-\n-    @EventField\n-    public int getCompletedSplits()\n-    {\n-        return queryStats.getCompletedSplits();\n-    }\n-\n-    @EventField\n-    public long getCpuTimeMillis()\n-    {\n-        return queryStats.getCpuTimeMillis();\n-    }\n-\n-    @EventField\n-    public long getWallTimeMillis()\n-    {\n-        return queryStats.getWallTimeMillis();\n-    }\n-\n-    @EventField\n-    public long getQueuedTimeMillis()\n-    {\n-        return queryStats.getQueuedTimeMillis();\n-    }\n-\n-    @EventField\n-    public long getElapsedTimeMillis()\n-    {\n-        return queryStats.getElapsedTimeMillis();\n-    }\n-\n-    @EventField\n-    public long getProcessedRows()\n-    {\n-        return queryStats.getProcessedRows();\n-    }\n-\n-    @EventField\n-    public long getProcessedBytes()\n-    {\n-        return queryStats.getProcessedBytes();\n-    }\n-\n-    @EventField\n-    public long getPeakMemoryBytes()\n-    {\n-        return queryStats.getPeakMemoryBytes();\n-    }\n-\n-    @EventField\n-    public long getPeakTotalMemoryBytes()\n-    {\n-        return queryStats.getPeakTotalMemoryBytes();\n-    }\n-\n-    @EventField\n-    public long getPeakTaskTotalMemoryBytes()\n-    {\n-        return queryStats.getPeakTaskTotalMemoryBytes();\n-    }\n-\n-    @EventField\n-    public String getExtraData()\n-    {\n-        return extraData;\n-    }\n-}\n"}}, {"oid": "27f5add31ce2cc427af0eddaf9d4014f0e5f4316", "url": "https://github.com/prestodb/presto/commit/27f5add31ce2cc427af0eddaf9d4014f0e5f4316", "message": "test", "committedDate": "2020-07-23T20:24:33Z", "type": "forcePushed"}, {"oid": "e597cab650679b5a9d6cf702a31ea7bf99464386", "url": "https://github.com/prestodb/presto/commit/e597cab650679b5a9d6cf702a31ea7bf99464386", "message": "test", "committedDate": "2020-07-27T21:00:57Z", "type": "forcePushed"}, {"oid": "29e1fb2c13ce2015548e041dcc533c1e925e8435", "url": "https://github.com/prestodb/presto/commit/29e1fb2c13ce2015548e041dcc533c1e925e8435", "message": "test", "committedDate": "2020-07-27T21:49:41Z", "type": "forcePushed"}, {"oid": "980c245ab84b8487cd022e278e5e20a46934fe9d", "url": "https://github.com/prestodb/presto/commit/980c245ab84b8487cd022e278e5e20a46934fe9d", "message": "test", "committedDate": "2020-07-27T21:51:19Z", "type": "forcePushed"}, {"oid": "a790064deec281d5acac24484b86996b8bcfd47a", "url": "https://github.com/prestodb/presto/commit/a790064deec281d5acac24484b86996b8bcfd47a", "message": "test", "committedDate": "2020-07-28T22:03:01Z", "type": "forcePushed"}, {"oid": "5fc6527a3e693d195bd88d5188875b0bbe46d8f2", "url": "https://github.com/prestodb/presto/commit/5fc6527a3e693d195bd88d5188875b0bbe46d8f2", "message": "test", "committedDate": "2020-07-28T22:03:45Z", "type": "forcePushed"}, {"oid": "8fa301ce7e220874317475d7815b3f58f1ca5592", "url": "https://github.com/prestodb/presto/commit/8fa301ce7e220874317475d7815b3f58f1ca5592", "message": "test", "committedDate": "2020-07-28T22:25:23Z", "type": "forcePushed"}, {"oid": "10596aa76d9fd26ae2e2352e5ebc8a12e1c03e99", "url": "https://github.com/prestodb/presto/commit/10596aa76d9fd26ae2e2352e5ebc8a12e1c03e99", "message": "test", "committedDate": "2020-07-29T19:34:11Z", "type": "forcePushed"}, {"oid": "a751ecbcc16f2479aa1249a1f7779c475b91c433", "url": "https://github.com/prestodb/presto/commit/a751ecbcc16f2479aa1249a1f7779c475b91c433", "message": "test", "committedDate": "2020-07-29T20:29:22Z", "type": "forcePushed"}, {"oid": "985d029e93869f1d01a166b540f7cd650d962550", "url": "https://github.com/prestodb/presto/commit/985d029e93869f1d01a166b540f7cd650d962550", "message": "test", "committedDate": "2020-07-29T20:32:07Z", "type": "forcePushed"}, {"oid": "753c4f77b5060774c9eac8cb5a473893814000d0", "url": "https://github.com/prestodb/presto/commit/753c4f77b5060774c9eac8cb5a473893814000d0", "message": "test", "committedDate": "2020-07-29T20:34:26Z", "type": "forcePushed"}, {"oid": "d7018f4586411d3ae1b1bc46153899d15b1ef637", "url": "https://github.com/prestodb/presto/commit/d7018f4586411d3ae1b1bc46153899d15b1ef637", "message": "Style improvments in DeterminismAnalyzer\n\nMake fields final and remove unused fields.", "committedDate": "2020-07-29T20:38:01Z", "type": "commit"}, {"oid": "34a6906b29caedf86f551f098b9889707f80bbf4", "url": "https://github.com/prestodb/presto/commit/34a6906b29caedf86f551f098b9889707f80bbf4", "message": "Make control.http-port optional\n\nhttp-port is used for fetching cluster size via /v1/node.\nWe only need it when TooManyOpenPartitionsFailureResolver\nrequires the test cluster size. Hence:\n- Make control.http-port optional\n- Make test.http-port required if the specific failure\n  resolver is enabled, else optional.\n\nChanges also needed in this commit:\n- Convert NodeResourceClient to ClusterSizeSupplier.\n- Convert HttpNodeResourceClient to ClusterSizeFetcher.", "committedDate": "2020-07-29T20:38:01Z", "type": "commit"}, {"oid": "c7c9cafb414d9bf19903d67008f3cff637dd6bc3", "url": "https://github.com/prestodb/presto/commit/c7c9cafb414d9bf19903d67008f3cff637dd6bc3", "message": "test", "committedDate": "2020-07-29T20:38:02Z", "type": "forcePushed"}, {"oid": "dbb17963fb6bc690e465dcb8713e3944b54ed635", "url": "https://github.com/prestodb/presto/commit/dbb17963fb6bc690e465dcb8713e3944b54ed635", "message": "Make the entire JDBC QueryStats available in verification results", "committedDate": "2020-07-29T20:44:55Z", "type": "commit"}, {"oid": "93fb5c52eb109a1957deb30d971130d556748f0c", "url": "https://github.com/prestodb/presto/commit/93fb5c52eb109a1957deb30d971130d556748f0c", "message": "Support customizable ways of launching Presto queries in Verifier\n\nThere are use cases to launch control and test Presto queries through a\ndifferent way other than JDBC. This commit provides a way to write\ncustomized QueryAction and plug it into the Verifer.\n\n- Introduce QueryAction-related interfaces.\n- Support specifying a \"helper\" cluster, a cluster to run helper\n  queries (describe, checksum, etc.). By default, help cluster is\n  the control cluster. If the control QueryAction does not support\n  data fetching, a separate helper cluster must be specified.\n- Replace RoutingPrestoAction with QueryActions.\n- Add an option to specify whether to run setup/teardown queries on\n  the control/test clusters or on the helper cluster.", "committedDate": "2020-07-29T20:44:59Z", "type": "commit"}, {"oid": "043832a988e3786835d16d226e893e03b3379e33", "url": "https://github.com/prestodb/presto/commit/043832a988e3786835d16d226e893e03b3379e33", "message": "test", "committedDate": "2020-07-29T20:46:07Z", "type": "forcePushed"}, {"oid": "3f99da3c9e5ceaa1aafe9e82bad1030532022b99", "url": "https://github.com/prestodb/presto/commit/3f99da3c9e5ceaa1aafe9e82bad1030532022b99", "message": "test", "committedDate": "2020-07-29T21:25:48Z", "type": "forcePushed"}, {"oid": "8e9b86f9a0be04dfb12e89743af208127b817110", "url": "https://github.com/prestodb/presto/commit/8e9b86f9a0be04dfb12e89743af208127b817110", "message": "Allow additional data to be emitted in QueryStatsEvent", "committedDate": "2020-07-29T21:46:54Z", "type": "commit"}, {"oid": "a38463c8f289f281a814c54bc17280783d540380", "url": "https://github.com/prestodb/presto/commit/a38463c8f289f281a814c54bc17280783d540380", "message": "Use a single metadata-timeout and checksum-timeout\n\nmetadata-timeout and checksum-timeout can be defined for control\ncluster and test cluster separately. Now that we have 3 different\ncluster types, this could be confusing.\n\nMove both config to QueryActionsConfig so that there is only one\ntop level config for metadata-timeout and checksum-timeout.", "committedDate": "2020-07-29T21:46:54Z", "type": "commit"}, {"oid": "8f3754cfea4d93fcd7561fe633ee253f0f5eb1ba", "url": "https://github.com/prestodb/presto/commit/8f3754cfea4d93fcd7561fe633ee253f0f5eb1ba", "message": "Move the logic of mangling session properties into a utility method", "committedDate": "2020-07-29T21:46:54Z", "type": "commit"}, {"oid": "84ad4a4bbfa88e9baa156851b6e89d5293113bb3", "url": "https://github.com/prestodb/presto/commit/84ad4a4bbfa88e9baa156851b6e89d5293113bb3", "message": "Fix binding failure when failure resolver is disabled", "committedDate": "2020-07-29T21:46:54Z", "type": "commit"}, {"oid": "b31e88ab57b0733cca78b66cf7c9457382a4a751", "url": "https://github.com/prestodb/presto/commit/b31e88ab57b0733cca78b66cf7c9457382a4a751", "message": "Move Query#toStatementStats to a utility class", "committedDate": "2020-07-29T21:46:54Z", "type": "commit"}, {"oid": "2f85b495e17ed90e8ae1371395c0cd0ec0db298c", "url": "https://github.com/prestodb/presto/commit/2f85b495e17ed90e8ae1371395c0cd0ec0db298c", "message": "Introduce additional methods in SqlExceptionClassifier interface\n\nAlso, add a constructor in QueryException to take message", "committedDate": "2020-07-29T21:46:55Z", "type": "commit"}, {"oid": "2f85b495e17ed90e8ae1371395c0cd0ec0db298c", "url": "https://github.com/prestodb/presto/commit/2f85b495e17ed90e8ae1371395c0cd0ec0db298c", "message": "Introduce additional methods in SqlExceptionClassifier interface\n\nAlso, add a constructor in QueryException to take message", "committedDate": "2020-07-29T21:46:55Z", "type": "forcePushed"}]}