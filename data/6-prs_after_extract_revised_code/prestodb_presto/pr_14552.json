{"pr_number": 14552, "pr_title": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions", "pr_createdAt": "2020-05-19T00:56:56Z", "pr_url": "https://github.com/prestodb/presto/pull/14552", "timeline": [{"oid": "cb8935ebf31ce635acb573be682adaa56d50ce25", "url": "https://github.com/prestodb/presto/commit/cb8935ebf31ce635acb573be682adaa56d50ce25", "message": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions\n\nWith the introduction of SQL function, we might find new lambdas while processing SQL functions.\nSince we are adding the compiled lambda function to the same class as the expression containing lambda,\nwe need to update the compiledLambdaMap to make sure it always has all the previous compiled lambdas\nand do not try to create the same method again.", "committedDate": "2020-05-19T18:06:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc0NDEzMg==", "url": "https://github.com/prestodb/presto/pull/14552#discussion_r427744132", "bodyText": "nit: what about something like alreadyCompiledLambdas ?", "author": "wenleix", "createdAt": "2020-05-20T05:08:52Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java", "diffHunk": "@@ -101,6 +102,19 @@ private LambdaBytecodeGenerator()\n         return generateMethodsForLambda(containerClassDefinition, callSiteBinder, cachedInstanceBinder, ImmutableList.of(expression), metadata, sqlFunctionProperties, methodNamePrefix);\n     }\n \n+    public static Map<LambdaDefinitionExpression, CompiledLambda> generateMethodsForLambda(\n+            ClassDefinition containerClassDefinition,\n+            CallSiteBinder callSiteBinder,\n+            CachedInstanceBinder cachedInstanceBinder,\n+            RowExpression expression,\n+            Metadata metadata,\n+            SqlFunctionProperties sqlFunctionProperties,\n+            String methodNamePrefix,\n+            Set<LambdaDefinitionExpression> compiledLambdas)", "originalCommit": "cb8935ebf31ce635acb573be682adaa56d50ce25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MzQ0NQ==", "url": "https://github.com/prestodb/presto/pull/14552#discussion_r431443445", "bodyText": "Renamed to existingCompiledLambdas. \"Compiled\" kinda implied \"already\" so it's a little weird.", "author": "rongrong", "createdAt": "2020-05-27T21:08:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc0NDEzMg=="}], "type": "inlineReview", "revised_code": {"commit": "fcac7ca60e21f70f2cb0591031096aef60e205b8", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java\nindex 6f38a9de61..1c86360189 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java\n\n@@ -110,9 +110,9 @@ public class LambdaBytecodeGenerator\n             Metadata metadata,\n             SqlFunctionProperties sqlFunctionProperties,\n             String methodNamePrefix,\n-            Set<LambdaDefinitionExpression> compiledLambdas)\n+            Set<LambdaDefinitionExpression> existingCompiledLambdas)\n     {\n-        return generateMethodsForLambda(containerClassDefinition, callSiteBinder, cachedInstanceBinder, ImmutableList.of(expression), metadata, sqlFunctionProperties, methodNamePrefix, compiledLambdas);\n+        return generateMethodsForLambda(containerClassDefinition, callSiteBinder, cachedInstanceBinder, ImmutableList.of(expression), metadata, sqlFunctionProperties, methodNamePrefix, existingCompiledLambdas);\n     }\n \n     public static Map<LambdaDefinitionExpression, CompiledLambda> generateMethodsForLambda(\n"}}, {"oid": "fcac7ca60e21f70f2cb0591031096aef60e205b8", "url": "https://github.com/prestodb/presto/commit/fcac7ca60e21f70f2cb0591031096aef60e205b8", "message": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions\n\nWith the introduction of SQL function, we might find new lambdas while processing SQL functions.\nSince we are adding the compiled lambda function to the same class as the expression containing lambda,\nwe need to update the compiledLambdaMap to make sure it always has all the previous compiled lambdas\nand do not try to create the same method again.", "committedDate": "2020-05-27T21:09:10Z", "type": "commit"}, {"oid": "fcac7ca60e21f70f2cb0591031096aef60e205b8", "url": "https://github.com/prestodb/presto/commit/fcac7ca60e21f70f2cb0591031096aef60e205b8", "message": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions\n\nWith the introduction of SQL function, we might find new lambdas while processing SQL functions.\nSince we are adding the compiled lambda function to the same class as the expression containing lambda,\nwe need to update the compiledLambdaMap to make sure it always has all the previous compiled lambdas\nand do not try to create the same method again.", "committedDate": "2020-05-27T21:09:10Z", "type": "forcePushed"}]}