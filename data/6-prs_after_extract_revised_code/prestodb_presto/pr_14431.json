{"pr_number": 14431, "pr_title": "Fix query client timeout", "pr_createdAt": "2020-04-24T05:16:32Z", "pr_url": "https://github.com/prestodb/presto/pull/14431", "timeline": [{"oid": "f05292c4bab0687f78692bec82a42d7e26eaf2af", "url": "https://github.com/prestodb/presto/commit/f05292c4bab0687f78692bec82a42d7e26eaf2af", "message": "Fix query client timeout", "committedDate": "2020-04-24T05:18:29Z", "type": "forcePushed"}, {"oid": "0769cac3bb940fd02117222c08aa08a505c6486a", "url": "https://github.com/prestodb/presto/commit/0769cac3bb940fd02117222c08aa08a505c6486a", "message": "Fix query client timeout", "committedDate": "2020-04-24T05:22:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjI5Mg==", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414796292", "bodyText": "Why do we need to recreate the server for each method? Starting and stopping a server is usually slow and prone to memory leaks", "author": "arhimondr", "createdAt": "2020-04-24T18:59:07Z", "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -44,48 +49,38 @@\n     private final HttpClient client = new JettyHttpClient();\n     private TestingPrestoServer server;\n \n-    public TestQueryResource()\n-            throws Exception\n-    {\n-        server = new TestingPrestoServer();\n-    }\n-\n-    @BeforeClass\n+    @BeforeMethod", "originalCommit": "0769cac3bb940fd02117222c08aa08a505c6486a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwMTc1NA==", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414801754", "bodyText": "I see why is it needed. Basically you need to recreate the server to reset the counters.\nWhat do you think about simply moving the runToCompletion  statements to the test itself? Then you can simply add the runToQueued and adjust the counters.", "author": "arhimondr", "createdAt": "2020-04-24T19:09:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjI5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwNjcwOQ==", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414806709", "bodyText": "Sounds reasonable", "author": "tdcmeehan", "createdAt": "2020-04-24T19:18:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjI5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "12a0c5ebfbd95d115307e10c8f1c0679f90c9f5f", "chunk": "diff --git a/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java b/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java\nindex fd5bfd8662..e98954d79f 100644\n--- a/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java\n+++ b/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java\n\n@@ -40,50 +38,55 @@ import static com.facebook.airlift.json.JsonCodec.listJsonCodec;\n import static com.facebook.airlift.testing.Closeables.closeQuietly;\n import static com.facebook.presto.client.PrestoHeaders.PRESTO_USER;\n import static com.facebook.presto.testing.assertions.Assert.assertEquals;\n+import static java.lang.Thread.sleep;\n import static java.nio.charset.StandardCharsets.UTF_8;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n import static org.testng.Assert.fail;\n \n @Test(singleThreaded = true)\n public class TestQueryResource\n {\n-    private final HttpClient client = new JettyHttpClient();\n+    private HttpClient client;\n     private TestingPrestoServer server;\n \n-    @BeforeMethod\n+    @BeforeClass\n     public void setup()\n             throws Exception\n     {\n+        client = new JettyHttpClient();\n         server = new TestingPrestoServer(\n                 true,\n-                ImmutableMap.of(\"query.client.timeout\", \"30s\"),\n+                ImmutableMap.of(\"query.client.timeout\", \"10s\"),\n                 \"testing\",\n                 null,\n                 new SqlParserOptions(),\n                 ImmutableList.of());\n     }\n \n-    @AfterMethod(alwaysRun = true)\n+    @AfterClass(alwaysRun = true)\n     public void teardown()\n     {\n         closeQuietly(server);\n-    }\n-\n-    @AfterClass(alwaysRun = true)\n-    public void teardownClass()\n-    {\n         closeQuietly(client);\n+        server = null;\n+        client = null;\n     }\n \n-    @Test\n+    @Test(timeOut = 60_000, invocationCount = 100)\n     public void testGetQueryInfos()\n+            throws Exception\n     {\n         runToCompletion(\"SELECT 1\");\n         runToCompletion(\"SELECT 2\");\n         runToCompletion(\"SELECT x FROM y\");\n+        runToQueued(\"SELECT 3\");\n+\n+        // Sleep to trigger client query expiration\n+        sleep(SECONDS.toMillis(5));\n \n         List<BasicQueryInfo> infos = getQueryInfos(\"/v1/query\");\n-        assertEquals(infos.size(), 3);\n-        assertStateCounts(infos, 2, 1, 0);\n+        assertEquals(infos.size(), 4);\n+        assertStateCounts(infos, 2, 1, 1);\n \n         infos = getQueryInfos(\"/v1/query?state=finished\");\n         assertEquals(infos.size(), 2);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjUzMw==", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414796533", "bodyText": "We should initialize it in setup and close and nullify it in teardown to avoid memory leaks", "author": "arhimondr", "createdAt": "2020-04-24T18:59:32Z", "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -44,48 +49,38 @@\n     private final HttpClient client = new JettyHttpClient();", "originalCommit": "0769cac3bb940fd02117222c08aa08a505c6486a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwNTg4MA==", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414805880", "bodyText": "I close it in teardownClass, will nullify too", "author": "tdcmeehan", "createdAt": "2020-04-24T19:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjUzMw=="}], "type": "inlineReview", "revised_code": {"commit": "12a0c5ebfbd95d115307e10c8f1c0679f90c9f5f", "chunk": "diff --git a/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java b/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java\nindex fd5bfd8662..e98954d79f 100644\n--- a/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java\n+++ b/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java\n\n@@ -40,50 +38,55 @@ import static com.facebook.airlift.json.JsonCodec.listJsonCodec;\n import static com.facebook.airlift.testing.Closeables.closeQuietly;\n import static com.facebook.presto.client.PrestoHeaders.PRESTO_USER;\n import static com.facebook.presto.testing.assertions.Assert.assertEquals;\n+import static java.lang.Thread.sleep;\n import static java.nio.charset.StandardCharsets.UTF_8;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n import static org.testng.Assert.fail;\n \n @Test(singleThreaded = true)\n public class TestQueryResource\n {\n-    private final HttpClient client = new JettyHttpClient();\n+    private HttpClient client;\n     private TestingPrestoServer server;\n \n-    @BeforeMethod\n+    @BeforeClass\n     public void setup()\n             throws Exception\n     {\n+        client = new JettyHttpClient();\n         server = new TestingPrestoServer(\n                 true,\n-                ImmutableMap.of(\"query.client.timeout\", \"30s\"),\n+                ImmutableMap.of(\"query.client.timeout\", \"10s\"),\n                 \"testing\",\n                 null,\n                 new SqlParserOptions(),\n                 ImmutableList.of());\n     }\n \n-    @AfterMethod(alwaysRun = true)\n+    @AfterClass(alwaysRun = true)\n     public void teardown()\n     {\n         closeQuietly(server);\n-    }\n-\n-    @AfterClass(alwaysRun = true)\n-    public void teardownClass()\n-    {\n         closeQuietly(client);\n+        server = null;\n+        client = null;\n     }\n \n-    @Test\n+    @Test(timeOut = 60_000, invocationCount = 100)\n     public void testGetQueryInfos()\n+            throws Exception\n     {\n         runToCompletion(\"SELECT 1\");\n         runToCompletion(\"SELECT 2\");\n         runToCompletion(\"SELECT x FROM y\");\n+        runToQueued(\"SELECT 3\");\n+\n+        // Sleep to trigger client query expiration\n+        sleep(SECONDS.toMillis(5));\n \n         List<BasicQueryInfo> infos = getQueryInfos(\"/v1/query\");\n-        assertEquals(infos.size(), 3);\n-        assertStateCounts(infos, 2, 1, 0);\n+        assertEquals(infos.size(), 4);\n+        assertStateCounts(infos, 2, 1, 1);\n \n         infos = getQueryInfos(\"/v1/query?state=finished\");\n         assertEquals(infos.size(), 2);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NzUxMQ==", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414797511", "bodyText": "Can we have lover timeouts? e.g.: 10s / 20s?", "author": "arhimondr", "createdAt": "2020-04-24T19:01:18Z", "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -103,12 +98,64 @@ public void testGetQueryInfos()\n         assertStateCounts(infos, 0, 0, 0);\n     }\n \n+    @Test(timeOut = 60_000)\n+    public void testExpiredQueryInfo()\n+            throws Exception\n+    {\n+        runToQueued(\"SELECT 1\");\n+\n+        Thread.sleep(TimeUnit.SECONDS.toMillis(40));", "originalCommit": "0769cac3bb940fd02117222c08aa08a505c6486a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwNjgyNw==", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414806827", "bodyText": "Sure", "author": "tdcmeehan", "createdAt": "2020-04-24T19:18:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NzUxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgyNzk1OQ==", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414827959", "bodyText": "nit: static import Thread.sleep and TimeUnit.SECONDS", "author": "caithagoras", "createdAt": "2020-04-24T19:58:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NzUxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "12a0c5ebfbd95d115307e10c8f1c0679f90c9f5f", "chunk": "diff --git a/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java b/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java\nindex fd5bfd8662..e98954d79f 100644\n--- a/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java\n+++ b/presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java\n\n@@ -94,21 +97,15 @@ public class TestQueryResource\n         assertStateCounts(infos, 0, 1, 0);\n \n         infos = getQueryInfos(\"/v1/query?state=running\");\n-        assertEquals(infos.size(), 0);\n-        assertStateCounts(infos, 0, 0, 0);\n-    }\n-\n-    @Test(timeOut = 60_000)\n-    public void testExpiredQueryInfo()\n-            throws Exception\n-    {\n-        runToQueued(\"SELECT 1\");\n+        assertEquals(infos.size(), 1);\n+        assertStateCounts(infos, 0, 0, 1);\n \n-        Thread.sleep(TimeUnit.SECONDS.toMillis(40));\n+        // Sleep to trigger client query expiration\n+        sleep(SECONDS.toMillis(10));\n \n-        List<BasicQueryInfo> infos = getQueryInfos(\"/v1/query?state=failed\");\n-        assertEquals(infos.size(), 1);\n-        assertStateCounts(infos, 0, 1, 0);\n+        infos = getQueryInfos(\"/v1/query?state=failed\");\n+        assertEquals(infos.size(), 2);\n+        assertStateCounts(infos, 0, 2, 0);\n     }\n \n     private List<BasicQueryInfo> getQueryInfos(String path)\n"}}, {"oid": "12a0c5ebfbd95d115307e10c8f1c0679f90c9f5f", "url": "https://github.com/prestodb/presto/commit/12a0c5ebfbd95d115307e10c8f1c0679f90c9f5f", "message": "Fix query client timeout", "committedDate": "2020-04-24T20:03:50Z", "type": "forcePushed"}, {"oid": "d377421aed3a65346cdb334cce06cef5c80c636c", "url": "https://github.com/prestodb/presto/commit/d377421aed3a65346cdb334cce06cef5c80c636c", "message": "Fix query client timeout", "committedDate": "2020-04-24T20:05:55Z", "type": "forcePushed"}, {"oid": "d393ac0c89af26e9d8a086befa163aa604311015", "url": "https://github.com/prestodb/presto/commit/d393ac0c89af26e9d8a086befa163aa604311015", "message": "Fix query client timeout", "committedDate": "2020-04-24T20:07:29Z", "type": "forcePushed"}, {"oid": "c7dda1b8f3964692e9e4d8f4c8f05b87792759fb", "url": "https://github.com/prestodb/presto/commit/c7dda1b8f3964692e9e4d8f4c8f05b87792759fb", "message": "Fix query client timeout", "committedDate": "2020-04-25T13:55:16Z", "type": "commit"}, {"oid": "c7dda1b8f3964692e9e4d8f4c8f05b87792759fb", "url": "https://github.com/prestodb/presto/commit/c7dda1b8f3964692e9e4d8f4c8f05b87792759fb", "message": "Fix query client timeout", "committedDate": "2020-04-25T13:55:16Z", "type": "forcePushed"}]}