{"pr_number": 15165, "pr_title": "Disallow partial aggregation pushdown in more cases", "pr_createdAt": "2020-09-12T17:59:14Z", "pr_url": "https://github.com/prestodb/presto/pull/15165", "timeline": [{"oid": "2e2794b86176e5a3ccef6c933ecdd9efcf33a6d5", "url": "https://github.com/prestodb/presto/commit/2e2794b86176e5a3ccef6c933ecdd9efcf33a6d5", "message": "Disallow partial aggregation pushdown when\n1. Filters are pushed into tableScan\n2. Storage format metadata is inconsistent with the file format", "committedDate": "2020-09-13T07:24:41Z", "type": "forcePushed"}, {"oid": "61331882a526b8a5e6184a88af07d41573b55280", "url": "https://github.com/prestodb/presto/commit/61331882a526b8a5e6184a88af07d41573b55280", "message": "Disallow partial aggregation pushdown when\n1. Filters are pushed into tableScan\n2. Storage format metadata is inconsistent with the file format", "committedDate": "2020-09-13T19:29:16Z", "type": "forcePushed"}, {"oid": "252a16b2cca070972044d8a85e26844b1c3b3436", "url": "https://github.com/prestodb/presto/commit/252a16b2cca070972044d8a85e26844b1c3b3436", "message": "Disallow partial aggregation pushdown when\n1. Filters are pushed into tableScan\n2. Storage format metadata is inconsistent with the file format", "committedDate": "2020-09-13T19:32:30Z", "type": "forcePushed"}, {"oid": "c8600e19b9a8f2ea15dcd1e29185fa977380c8b4", "url": "https://github.com/prestodb/presto/commit/c8600e19b9a8f2ea15dcd1e29185fa977380c8b4", "message": "Disallow partial aggregation pushdown when\n1. Filters are pushed into tableScan\n2. Storage format metadata is inconsistent with the file format", "committedDate": "2020-09-13T19:33:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwNzc0OQ==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r489707749", "bodyText": "get confuse here. if hiveColumns only have one AGGREGATED column, is it valid?", "author": "zhenxiao", "createdAt": "2020-09-16T19:35:08Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java", "diffHunk": "@@ -422,6 +422,10 @@ protected static CacheQuota generateCacheQuota(HiveSplit hiveSplit)\n             }\n         }\n \n+        if (!hiveColumns.isEmpty() && hiveColumns.get(0).getColumnType() == AGGREGATED) {", "originalCommit": "c8600e19b9a8f2ea15dcd1e29185fa977380c8b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5Njk0NA==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r490596944", "bodyText": "Either all columns are aggregate or none is. So we just check the first", "author": "ClarenceThreepwood", "createdAt": "2020-09-17T22:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwNzc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3MDQ5Mw==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r490670493", "bodyText": "get it. shall we use allMatch to make sure all are AGGREGATED?\nI think we also need to update the message", "author": "zhenxiao", "createdAt": "2020-09-18T02:52:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwNzc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2NDIzMw==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r490764233", "bodyText": "Converted to allMatch. What is your suggestion for error message? It reads ok to me", "author": "ClarenceThreepwood", "createdAt": "2020-09-18T07:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwNzc0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "17f6ca0015bf541385a2bbf31fbdb2ecc5c23b5e", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java b/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java\nindex 8f3eadd5e5..49356a273c 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java\n\n@@ -422,7 +422,7 @@ public class HivePageSourceProvider\n             }\n         }\n \n-        if (!hiveColumns.isEmpty() && hiveColumns.get(0).getColumnType() == AGGREGATED) {\n+        if (!hiveColumns.isEmpty() && hiveColumns.stream().allMatch(hiveColumnHandle -> hiveColumnHandle.getColumnType() == AGGREGATED)) {\n             throw new UnsupportedOperationException(\"Partial aggregation pushdown only supported for ORC/Parquet files. Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\");\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwNzk4OA==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r489707988", "bodyText": "static import ORC and PARQUET", "author": "zhenxiao", "createdAt": "2020-09-16T19:35:36Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HivePartialAggregationPushdown.java", "diffHunk": "@@ -125,8 +122,31 @@ public Visitor(VariableAllocator variableAllocator, ConnectorSession session, Pl\n             this.variableAllocator = variableAllocator;\n         }\n \n-        private boolean isAggregationPushdownSupported(AggregationNode partialAggregationNode, HiveStorageFormat hiveStorageFormat)\n+        private boolean isAggregationPushdownSupported(AggregationNode partialAggregationNode)\n         {\n+            if (partialAggregationNode.hasNonEmptyGroupingSet()) {\n+                return false;\n+            }\n+\n+            TableScanNode tableScanNode = (TableScanNode) partialAggregationNode.getSource();\n+            ConnectorTableMetadata connectorTableMetadata = metadataFactory.get().getTableMetadata(session, tableScanNode.getTable().getConnectorHandle());\n+            Optional<Object> rawFormat = Optional.ofNullable(connectorTableMetadata.getProperties().get(HiveTableProperties.STORAGE_FORMAT_PROPERTY));\n+            if (!rawFormat.isPresent()) {\n+                return false;\n+            }\n+\n+            final HiveStorageFormat hiveStorageFormat = HiveStorageFormat.valueOf(rawFormat.get().toString());\n+            if (hiveStorageFormat != HiveStorageFormat.ORC && hiveStorageFormat != HiveStorageFormat.PARQUET) {", "originalCommit": "c8600e19b9a8f2ea15dcd1e29185fa977380c8b4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eaf291752fff567c9a7a8c5ef5c4e113103903cd", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HivePartialAggregationPushdown.java b/presto-hive/src/main/java/com/facebook/presto/hive/HivePartialAggregationPushdown.java\nindex d98f7c46e7..f4e7e7cddb 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HivePartialAggregationPushdown.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HivePartialAggregationPushdown.java\n\n@@ -136,7 +138,7 @@ public class HivePartialAggregationPushdown\n             }\n \n             final HiveStorageFormat hiveStorageFormat = HiveStorageFormat.valueOf(rawFormat.get().toString());\n-            if (hiveStorageFormat != HiveStorageFormat.ORC && hiveStorageFormat != HiveStorageFormat.PARQUET) {\n+            if (hiveStorageFormat != ORC && hiveStorageFormat != PARQUET) {\n                 return false;\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwODc3MQ==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r489708771", "bodyText": "s/noMinMaxMessage/OrcNoMinMaxMessage/g", "author": "zhenxiao", "createdAt": "2020-09-16T19:36:59Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/AggregatedOrcPageSource.java", "diffHunk": "@@ -138,13 +138,14 @@ private void writeMinMax(int columnIndex, Type type, HiveType hiveType, BlockBui\n             completedBytes += ((FixedWidthType) type).getFixedSize();\n         }\n \n+        String noMinMaxMessage = \"No min/max found for orc file. Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\";", "originalCommit": "c8600e19b9a8f2ea15dcd1e29185fa977380c8b4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eaf291752fff567c9a7a8c5ef5c4e113103903cd", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/orc/AggregatedOrcPageSource.java b/presto-hive/src/main/java/com/facebook/presto/hive/orc/AggregatedOrcPageSource.java\nindex c41fe75ad4..64665bbbb0 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/orc/AggregatedOrcPageSource.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/orc/AggregatedOrcPageSource.java\n\n@@ -138,14 +138,14 @@ public class AggregatedOrcPageSource\n             completedBytes += ((FixedWidthType) type).getFixedSize();\n         }\n \n-        String noMinMaxMessage = \"No min/max found for orc file. Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\";\n+        String orcNoMinMaxMessage = \"No min/max found for orc file. Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\";\n         switch (orcType.getOrcTypeKind()) {\n             case SHORT:\n             case INT:\n             case LONG: {\n                 Long value = isMin ? columnStatistics.getIntegerStatistics().getMin() : columnStatistics.getIntegerStatistics().getMax();\n                 if (value == null) {\n-                    throw new UnsupportedOperationException(noMinMaxMessage);\n+                    throw new UnsupportedOperationException(orcNoMinMaxMessage);\n                 }\n                 else {\n                     blockBuilder.writeLong(value);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcxMDE1Ng==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r489710156", "bodyText": "test_file_format_orc is Orc table, right? why partial aggregation pushdown now supported?", "author": "zhenxiao", "createdAt": "2020-09-16T19:39:32Z", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java", "diffHunk": "@@ -1034,7 +1039,8 @@ private void assertFileFormat(HiveStorageFormat storageFormat)\n             // no filter\n             assertQueryUsingH2Cte(\"SELECT * FROM test_file_format_orc\", cte);\n             assertQueryUsingH2Cte(\"SELECT comment FROM test_file_format_orc\", cte);\n-            assertQueryUsingH2Cte(\"SELECT COUNT(*) FROM test_file_format_orc\", cte);\n+            assertQueryFails(\"SELECT COUNT(*) FROM test_file_format_orc\", \"Partial aggregation pushdown only supported for ORC/Parquet files. Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\");", "originalCommit": "c8600e19b9a8f2ea15dcd1e29185fa977380c8b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5ODEyMw==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r490598123", "bodyText": "The table is defined as orc - but the files are in RC or text. Surprisingly Presto supports this use case - but we cannot perform partial agg pushdown on all formats so we throw an error here", "author": "ClarenceThreepwood", "createdAt": "2020-09-17T22:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcxMDE1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3MDg0OA==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r490670848", "bodyText": "ah... maybe add a comment, describe the case?", "author": "zhenxiao", "createdAt": "2020-09-18T02:53:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcxMDE1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "242f5de6aeaf0236181f31138743dca8eeeaab36", "chunk": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java b/presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java\nindex 4d297e1ed3..fa2f4281b6 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java\n\n@@ -1039,7 +1039,7 @@ public class TestHivePushdownFilterQueries\n             // no filter\n             assertQueryUsingH2Cte(\"SELECT * FROM test_file_format_orc\", cte);\n             assertQueryUsingH2Cte(\"SELECT comment FROM test_file_format_orc\", cte);\n-            assertQueryFails(\"SELECT COUNT(*) FROM test_file_format_orc\", \"Partial aggregation pushdown only supported for ORC/Parquet files. Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\");\n+            assertQueryFails(\"SELECT COUNT(*) FROM test_file_format_orc\", \"Partial aggregation pushdown only supported for ORC/Parquet files. Table tpch.test_file_format_orc has file ((.*?)) of format (.*?). Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\");\n             assertQueryUsingH2Cte(noPartialAggregationPushdown(queryRunner.getDefaultSession()), \"SELECT COUNT(*) FROM test_file_format_orc\", cte, Function.identity());\n \n             // filter on partition column\n"}}, {"oid": "eaf291752fff567c9a7a8c5ef5c4e113103903cd", "url": "https://github.com/prestodb/presto/commit/eaf291752fff567c9a7a8c5ef5c4e113103903cd", "message": "Disallow partial aggregation pushdown when\n1. Filters are pushed into tableScan\n2. Storage format metadata is inconsistent with the file format", "committedDate": "2020-09-17T22:27:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3MDYyOQ==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r490670629", "bodyText": "same", "author": "zhenxiao", "createdAt": "2020-09-18T02:52:47Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/rcfile/RcFilePageSourceFactory.java", "diffHunk": "@@ -110,6 +111,10 @@ public RcFilePageSourceFactory(TypeManager typeManager, HdfsEnvironment hdfsEnvi\n             HiveFileContext hiveFileContext,\n             Optional<EncryptionInformation> encryptionInformation)\n     {\n+        if (!columns.isEmpty() && columns.get(0).getColumnType() == AGGREGATED) {", "originalCommit": "eaf291752fff567c9a7a8c5ef5c4e113103903cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17f6ca0015bf541385a2bbf31fbdb2ecc5c23b5e", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/rcfile/RcFilePageSourceFactory.java b/presto-hive/src/main/java/com/facebook/presto/hive/rcfile/RcFilePageSourceFactory.java\nindex c801e8025d..09acd35c2d 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/rcfile/RcFilePageSourceFactory.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/rcfile/RcFilePageSourceFactory.java\n\n@@ -111,7 +111,7 @@ public class RcFilePageSourceFactory\n             HiveFileContext hiveFileContext,\n             Optional<EncryptionInformation> encryptionInformation)\n     {\n-        if (!columns.isEmpty() && columns.get(0).getColumnType() == AGGREGATED) {\n+        if (!columns.isEmpty() && columns.stream().allMatch(hiveColumnHandle -> hiveColumnHandle.getColumnType() == AGGREGATED)) {\n             throw new UnsupportedOperationException(\"Partial aggregation pushdown only supported for ORC/Parquet files. Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\");\n         }\n \n"}}, {"oid": "17f6ca0015bf541385a2bbf31fbdb2ecc5c23b5e", "url": "https://github.com/prestodb/presto/commit/17f6ca0015bf541385a2bbf31fbdb2ecc5c23b5e", "message": "Disallow partial aggregation pushdown when\n1. Filters are pushed into tableScan\n2. Storage format metadata is inconsistent with the file format", "committedDate": "2020-09-18T07:45:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2Njc3MA==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r491266770", "bodyText": "if all column handles are AGGREGATED, we should not enter HivePageSourceProvider, right?\nHow about use checkState, with error message like:\nInvalid processing state. Partial aggregation should be processed in AggregatedParquetPageSource or AggregatedOrcPageSource", "author": "zhenxiao", "createdAt": "2020-09-19T04:18:02Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java", "diffHunk": "@@ -422,6 +422,10 @@ protected static CacheQuota generateCacheQuota(HiveSplit hiveSplit)\n             }\n         }\n \n+        if (!hiveColumns.isEmpty() && hiveColumns.stream().allMatch(hiveColumnHandle -> hiveColumnHandle.getColumnType() == AGGREGATED)) {", "originalCommit": "17f6ca0015bf541385a2bbf31fbdb2ecc5c23b5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ4MTY5MA==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r491481690", "bodyText": "Right - this error can happen when the metadata defines the table as orc/parquet, but there is at least one file that is in text/rc format. This is potentially a user-facing error message and I wouldn't expect a user to know about AggregatedParquetPageSource or AggregatedOrcPageSource. IMO it makes more sense to point out that the file format here is not supported and suggest one way to work around this. Let me know if you disagree", "author": "ClarenceThreepwood", "createdAt": "2020-09-19T18:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2Njc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0NzI1MA==", "url": "https://github.com/prestodb/presto/pull/15165#discussion_r491647250", "bodyText": "get it. how about some error message like:\ntable $table input format is: $inputformat, but this file is: $filetype", "author": "zhenxiao", "createdAt": "2020-09-20T03:33:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2Njc3MA=="}], "type": "inlineReview", "revised_code": {"commit": "242f5de6aeaf0236181f31138743dca8eeeaab36", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java b/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java\nindex 49356a273c..d3fe9b248a 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java\n\n@@ -423,7 +423,9 @@ public class HivePageSourceProvider\n         }\n \n         if (!hiveColumns.isEmpty() && hiveColumns.stream().allMatch(hiveColumnHandle -> hiveColumnHandle.getColumnType() == AGGREGATED)) {\n-            throw new UnsupportedOperationException(\"Partial aggregation pushdown only supported for ORC/Parquet files. Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\");\n+            throw new UnsupportedOperationException(\"Partial aggregation pushdown only supported for ORC/Parquet files. \" +\n+                    \"Table \" + tableName.toString() + \" has file (\" + path.toString() + \") of format \" + storage.getStorageFormat().getOutputFormat() +\n+                    \". Set session property hive.pushdown_partial_aggregations_into_scan=false and execute query again\");\n         }\n \n         for (HiveRecordCursorProvider provider : cursorProviders) {\n"}}, {"oid": "242f5de6aeaf0236181f31138743dca8eeeaab36", "url": "https://github.com/prestodb/presto/commit/242f5de6aeaf0236181f31138743dca8eeeaab36", "message": "Disallow partial aggregation pushdown when\n1. Filters are pushed into tableScan\n2. Storage format metadata is inconsistent with the file format", "committedDate": "2020-09-21T04:57:57Z", "type": "commit"}, {"oid": "242f5de6aeaf0236181f31138743dca8eeeaab36", "url": "https://github.com/prestodb/presto/commit/242f5de6aeaf0236181f31138743dca8eeeaab36", "message": "Disallow partial aggregation pushdown when\n1. Filters are pushed into tableScan\n2. Storage format metadata is inconsistent with the file format", "committedDate": "2020-09-21T04:57:57Z", "type": "forcePushed"}]}