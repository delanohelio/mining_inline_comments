{"pr_number": 15094, "pr_title": "Add config property for min spark partition count", "pr_createdAt": "2020-08-28T01:44:05Z", "pr_url": "https://github.com/prestodb/presto/pull/15094", "timeline": [{"oid": "6fbecde62fd8edb30e7408c9fd7cbe5d7551ce7e", "url": "https://github.com/prestodb/presto/commit/6fbecde62fd8edb30e7408c9fd7cbe5d7551ce7e", "message": "Update Presto on Spark splits assignment test\n\nAssertion does not hold after introducing property\n`max_spark_input_partition_count_for_auto_tune` for auto tune.", "committedDate": "2020-08-28T06:34:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgxNjI5NQ==", "url": "https://github.com/prestodb/presto/pull/15094#discussion_r479816295", "bodyText": "nit: perhaps also check minPartitionCount is at least 1?", "author": "wenleix", "createdAt": "2020-08-30T21:13:27Z", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java", "diffHunk": "@@ -437,13 +438,18 @@ private PrestoSparkTaskSourceRdd createTaskSourcesRdd(\n         int partitionCount = 0;\n         boolean autoTunePartitionCount = isSparkPartitionCountAutoTuneEnabled(session);\n         if (autoTunePartitionCount) {\n+            int minPartitionCount = getMinSparkInputPartitionCountForAutoTune(session);\n             int maxPartitionCount = getMaxSparkInputPartitionCountForAutoTune(session);\n+            checkArgument(minPartitionCount <= maxPartitionCount,", "originalCommit": "93ecc884e18a35404098f87fe4b8fdfec787f6f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c7df5e23dc09a4a83a8a0cee2ef03cd1807bc3ae", "chunk": "diff --git a/presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java b/presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java\nindex c821e7c9a0..7df3c467f8 100644\n--- a/presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java\n+++ b/presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java\n\n@@ -440,8 +440,8 @@ public class PrestoSparkRddFactory\n         if (autoTunePartitionCount) {\n             int minPartitionCount = getMinSparkInputPartitionCountForAutoTune(session);\n             int maxPartitionCount = getMaxSparkInputPartitionCountForAutoTune(session);\n-            checkArgument(minPartitionCount <= maxPartitionCount,\n-                    \"Min partition count for auto tune %s, cannot be larger than max partition count %s\",\n+            checkArgument(minPartitionCount >= 1 && minPartitionCount <= maxPartitionCount,\n+                    \"Min partition count for auto tune (%s) should be a positive integer and not larger than max partition count (%s)\",\n                     minPartitionCount,\n                     maxPartitionCount);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgxNjY5Mw==", "url": "https://github.com/prestodb/presto/pull/15094#discussion_r479816693", "bodyText": "I see. This essentially says, we only want to append to the existing partition if partitionCount is already large than minPartitionCount... Otherwise always create new partition.", "author": "wenleix", "createdAt": "2020-08-30T21:17:24Z", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java", "diffHunk": "@@ -437,13 +438,18 @@ private PrestoSparkTaskSourceRdd createTaskSourcesRdd(\n         int partitionCount = 0;\n         boolean autoTunePartitionCount = isSparkPartitionCountAutoTuneEnabled(session);\n         if (autoTunePartitionCount) {\n+            int minPartitionCount = getMinSparkInputPartitionCountForAutoTune(session);\n             int maxPartitionCount = getMaxSparkInputPartitionCountForAutoTune(session);\n+            checkArgument(minPartitionCount <= maxPartitionCount,\n+                    \"Min partition count for auto tune %s, cannot be larger than max partition count %s\",\n+                    minPartitionCount,\n+                    maxPartitionCount);\n \n             for (int splitIndex = 0; splitIndex < splits.size(); splitIndex++) {\n                 int partitionId;\n                 long splitSizeInBytes = splits.get(splitIndex).getSplit().getConnectorSplit().getSplitSizeInBytes().getAsLong();\n \n-                if ((!queue.isEmpty() && queue.peek().getSplitsInBytes() + splitSizeInBytes <= maxSplitsSizeInBytesPerPartition)\n+                if ((partitionCount >= minPartitionCount && queue.peek().getSplitsInBytes() + splitSizeInBytes <= maxSplitsSizeInBytesPerPartition)", "originalCommit": "6fbecde62fd8edb30e7408c9fd7cbe5d7551ce7e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c7df5e23dc09a4a83a8a0cee2ef03cd1807bc3ae", "chunk": "diff --git a/presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java b/presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java\nindex c821e7c9a0..7df3c467f8 100644\n--- a/presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java\n+++ b/presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java\n\n@@ -440,8 +440,8 @@ public class PrestoSparkRddFactory\n         if (autoTunePartitionCount) {\n             int minPartitionCount = getMinSparkInputPartitionCountForAutoTune(session);\n             int maxPartitionCount = getMaxSparkInputPartitionCountForAutoTune(session);\n-            checkArgument(minPartitionCount <= maxPartitionCount,\n-                    \"Min partition count for auto tune %s, cannot be larger than max partition count %s\",\n+            checkArgument(minPartitionCount >= 1 && minPartitionCount <= maxPartitionCount,\n+                    \"Min partition count for auto tune (%s) should be a positive integer and not larger than max partition count (%s)\",\n                     minPartitionCount,\n                     maxPartitionCount);\n \n"}}, {"oid": "c7df5e23dc09a4a83a8a0cee2ef03cd1807bc3ae", "url": "https://github.com/prestodb/presto/commit/c7df5e23dc09a4a83a8a0cee2ef03cd1807bc3ae", "message": "Add config property for min spark partition count", "committedDate": "2020-08-31T14:23:32Z", "type": "commit"}, {"oid": "7c6ad16d947f47930d1c44b1ccfa9b1ac22da13a", "url": "https://github.com/prestodb/presto/commit/7c6ad16d947f47930d1c44b1ccfa9b1ac22da13a", "message": "Update Presto on Spark splits assignment test\n\nAssertion does not hold after introducing property\n`max_spark_input_partition_count_for_auto_tune` for auto tune.", "committedDate": "2020-08-31T14:23:55Z", "type": "commit"}, {"oid": "7c6ad16d947f47930d1c44b1ccfa9b1ac22da13a", "url": "https://github.com/prestodb/presto/commit/7c6ad16d947f47930d1c44b1ccfa9b1ac22da13a", "message": "Update Presto on Spark splits assignment test\n\nAssertion does not hold after introducing property\n`max_spark_input_partition_count_for_auto_tune` for auto tune.", "committedDate": "2020-08-31T14:23:55Z", "type": "forcePushed"}]}