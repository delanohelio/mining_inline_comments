{"pr_number": 14276, "pr_title": "Fix bucket pruning when value is null and the predicate is 'IS NULL'.", "pr_createdAt": "2020-03-22T17:13:55Z", "pr_url": "https://github.com/prestodb/presto/pull/14276", "timeline": [{"oid": "8f17ad11e26b256766d48cc69d8c515bd861854a", "url": "https://github.com/prestodb/presto/commit/8f17ad11e26b256766d48cc69d8c515bd861854a", "message": "Fix bucket pruning when value is null and the predicate is 'IS NULL'.", "committedDate": "2020-03-22T21:01:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0NjM4MQ==", "url": "https://github.com/prestodb/presto/pull/14276#discussion_r396146381", "bodyText": "nit: static import", "author": "caithagoras", "createdAt": "2020-03-22T22:03:10Z", "path": "presto-spi/src/main/java/com/facebook/presto/spi/predicate/TupleDomain.java", "diffHunk": "@@ -144,6 +144,11 @@ private TupleDomain(Optional<Map<T, Domain>> domains)\n \n     private static Optional<Set<NullableValue>> extractFixedValueSet(Domain domain)\n     {\n+        if (domain.isNullableSingleValue()) {\n+            return Optional.of(Collections.singleton(", "originalCommit": "8f17ad11e26b256766d48cc69d8c515bd861854a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE1MjM1MA==", "url": "https://github.com/prestodb/presto/pull/14276#discussion_r396152350", "bodyText": "done", "author": "kaikalur", "createdAt": "2020-03-22T22:44:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0NjM4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "b40b1519dd61f6915a0f13513ce63ddd9f1ed713", "chunk": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/predicate/TupleDomain.java b/presto-spi/src/main/java/com/facebook/presto/spi/predicate/TupleDomain.java\nindex 0fa1907d07..1bdfdb3307 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/predicate/TupleDomain.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/predicate/TupleDomain.java\n\n@@ -145,7 +146,7 @@ public final class TupleDomain<T>\n     private static Optional<Set<NullableValue>> extractFixedValueSet(Domain domain)\n     {\n         if (domain.isNullableSingleValue()) {\n-            return Optional.of(Collections.singleton(\n+            return Optional.of(singleton(\n                     new NullableValue(domain.getType(), domain.getNullableSingleValue())));\n         }\n \n"}}, {"oid": "b40b1519dd61f6915a0f13513ce63ddd9f1ed713", "url": "https://github.com/prestodb/presto/commit/b40b1519dd61f6915a0f13513ce63ddd9f1ed713", "message": "Fix bucket pruning when value is null and the predicate is 'IS NULL'.", "committedDate": "2020-03-22T22:43:16Z", "type": "forcePushed"}, {"oid": "84ac3c65d0913162a1f0b0519b39f288ceb03815", "url": "https://github.com/prestodb/presto/commit/84ac3c65d0913162a1f0b0519b39f288ceb03815", "message": "Fix bucket pruning when value is null and the predicate is 'IS NULL'.", "committedDate": "2020-03-23T17:08:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYzMTE1MA==", "url": "https://github.com/prestodb/presto/pull/14276#discussion_r396631150", "bodyText": "nits: space after comma in NULL,1.", "author": "rongrong", "createdAt": "2020-03-23T17:34:05Z", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveIntegrationSmokeTest.java", "diffHunk": "@@ -2102,6 +2102,29 @@ public void testBucketPruning()\n         }\n     }\n \n+    @Test\n+    public void testNullBucket()\n+    {\n+        Session session = getSession();\n+        QueryRunner queryRunner = getQueryRunner();\n+        queryRunner.execute(\"CREATE TABLE table_with_null_buckets WITH (bucket_count=2, bucketed_by = ARRAY['key']) AS \" +\n+                \"SELECT 10 x, CAST(NULL AS INTEGER) AS key UNION ALL SELECT 20 x, 1 key\");\n+\n+        try {\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IS NULL\", \"SELECT 1\");\n+            assertQuery(session, \"SELECT x FROM table_with_null_buckets WHERE key IS NULL\", \"SELECT 10\");\n+            assertQuery(session, \"SELECT key FROM table_with_null_buckets WHERE x = 10\", \"SELECT NULL\");\n+            assertQuery(session, \"SELECT x FROM table_with_null_buckets WHERE key = 1\", \"SELECT 20\");\n+            assertQuery(session, \"SELECT key FROM table_with_null_buckets WHERE key IS NULL AND x = 10\", \"SELECT NULL\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IS NULL AND x = 1\", \"SELECT 0\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key = 10\", \"SELECT 0\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IN (NULL,1)\", \"SELECT 1\");", "originalCommit": "84ac3c65d0913162a1f0b0519b39f288ceb03815", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY1NDU1Mw==", "url": "https://github.com/prestodb/presto/pull/14276#discussion_r396654553", "bodyText": "fixed", "author": "kaikalur", "createdAt": "2020-03-23T18:09:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYzMTE1MA=="}], "type": "inlineReview", "revised_code": {"commit": "eff8c76b62e82800c0c761f49c6bc62f951815f2", "chunk": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveIntegrationSmokeTest.java b/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveIntegrationSmokeTest.java\nindex 7d8f86bc9e..0c82d47704 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveIntegrationSmokeTest.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveIntegrationSmokeTest.java\n\n@@ -2118,7 +2118,8 @@ public class TestHiveIntegrationSmokeTest\n             assertQuery(session, \"SELECT key FROM table_with_null_buckets WHERE key IS NULL AND x = 10\", \"SELECT NULL\");\n             assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IS NULL AND x = 1\", \"SELECT 0\");\n             assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key = 10\", \"SELECT 0\");\n-            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IN (NULL,1)\", \"SELECT 1\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IN (NULL, 1)\", \"SELECT 1\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IS NULL OR key = 1\", \"SELECT 2\");\n         }\n         finally {\n             queryRunner.execute(\"DROP TABLE table_with_null_buckets\");\n"}}, {"oid": "eff8c76b62e82800c0c761f49c6bc62f951815f2", "url": "https://github.com/prestodb/presto/commit/eff8c76b62e82800c0c761f49c6bc62f951815f2", "message": "Fix bucket pruning when value is null and the predicate is 'IS NULL'.", "committedDate": "2020-03-23T20:11:02Z", "type": "forcePushed"}, {"oid": "973b1b1e1db896aadac9948e807de0960822546b", "url": "https://github.com/prestodb/presto/commit/973b1b1e1db896aadac9948e807de0960822546b", "message": "Fix bucket pruning when value is null and the predicate is 'IS NULL'.", "committedDate": "2020-03-23T22:10:50Z", "type": "commit"}, {"oid": "973b1b1e1db896aadac9948e807de0960822546b", "url": "https://github.com/prestodb/presto/commit/973b1b1e1db896aadac9948e807de0960822546b", "message": "Fix bucket pruning when value is null and the predicate is 'IS NULL'.", "committedDate": "2020-03-23T22:10:50Z", "type": "forcePushed"}]}