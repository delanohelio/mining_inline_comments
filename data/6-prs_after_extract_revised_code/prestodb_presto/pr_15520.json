{"pr_number": 15520, "pr_title": "Replace Joda-Time libraries with java.time in Presto MongoDB", "pr_createdAt": "2020-12-14T19:57:42Z", "pr_url": "https://github.com/prestodb/presto/pull/15520", "timeline": [{"oid": "213d489b44ab8362126ad5695904c159de4e72c5", "url": "https://github.com/prestodb/presto/commit/213d489b44ab8362126ad5695904c159de4e72c5", "message": "Deprecating Joda library in Presto MongoDB\n\nFrom https://www.joda.org/joda-time/\n> Note that from Java SE 8 onwards, users are asked to migrate to java.time (JSR-310) - a core part of the JDK which replaces this project.", "committedDate": "2020-12-14T21:36:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MzYxMw==", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r543743613", "bodyText": "can you test the same with the old code to ensure that it is the same, since this path was not getting tested previously.", "author": "ajaygeorge", "createdAt": "2020-12-15T22:48:45Z", "path": "presto-mongodb/src/test/java/com/facebook/presto/mongodb/TestMongoIntegrationSmokeTest.java", "diffHunk": "@@ -132,6 +135,7 @@ public void testInsertWithEveryType()\n         assertEquals(row.getField(4), true);\n         assertEquals(row.getField(5), LocalDate.of(1980, 5, 7));\n         assertEquals(row.getField(6), LocalDateTime.of(1980, 5, 7, 11, 22, 33, 456_000_000));\n+        assertEquals(row.getField(7), LocalTime.of(11, 22, 33, 456_000_000));", "originalCommit": "213d489b44ab8362126ad5695904c159de4e72c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MTg2OQ==", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r543751869", "bodyText": "I validated this test before and after removing the Joda-time library. You think I should split this into two commits/PRs for clarity?", "author": "sstoiana", "createdAt": "2020-12-15T23:05:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MzYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2MTIyNQ==", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r543761225", "bodyText": "I think that is fine since this test is related to this refactoring.", "author": "ajaygeorge", "createdAt": "2020-12-15T23:25:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MzYxMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "d02426fe018406f5d6faa8b4e4c8c6c7480146fc", "url": "https://github.com/prestodb/presto/commit/d02426fe018406f5d6faa8b4e4c8c6c7480146fc", "message": "Replace Joda-Time libraries with java.time in Presto MongoDB\n\nSince Java 8 we have java.time packages which are equivalent to Joda and\nthe recommendation from the author of the Joda-Time is to migrate to\njava.time(JSR-310) library.", "committedDate": "2020-12-16T00:04:32Z", "type": "commit"}, {"oid": "d02426fe018406f5d6faa8b4e4c8c6c7480146fc", "url": "https://github.com/prestodb/presto/commit/d02426fe018406f5d6faa8b4e4c8c6c7480146fc", "message": "Replace Joda-Time libraries with java.time in Presto MongoDB\n\nSince Java 8 we have java.time packages which are equivalent to Joda and\nthe recommendation from the author of the Joda-Time is to migrate to\njava.time(JSR-310) library.", "committedDate": "2020-12-16T00:04:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0ODgyMA==", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r544548820", "bodyText": "Can we directly create an instant from the long instead of casting to a date and then converting it to an instant?   e.g. Instant.ofEpochMilli(value)", "author": "rschlussel", "createdAt": "2020-12-16T19:02:27Z", "path": "presto-mongodb/src/main/java/com/facebook/presto/mongodb/MongoPageSource.java", "diffHunk": "@@ -164,7 +166,7 @@ else if (type.equals(DATE)) {\n                     type.writeLong(output, TimeUnit.MILLISECONDS.toDays(utcMillis));\n                 }\n                 else if (type.equals(TIME)) {\n-                    type.writeLong(output, UTC_CHRONOLOGY.millisOfDay().get(((Date) value).getTime()));\n+                    type.writeLong(output, ZonedDateTime.ofInstant(((Date) value).toInstant(), UTC_ZONE_ID).get(ChronoField.MILLI_OF_DAY));", "originalCommit": "d02426fe018406f5d6faa8b4e4c8c6c7480146fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY1MTUzNQ==", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r544651535", "bodyText": "It looks like value is a Date not a long, at least for the scenario tested.", "author": "sstoiana", "createdAt": "2020-12-16T21:56:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0ODgyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2NjMzMw==", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r544666333", "bodyText": "makes sense.  Thanks", "author": "rschlussel", "createdAt": "2020-12-16T22:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0ODgyMA=="}], "type": "inlineReview", "revised_code": null}]}