{"pr_number": 14669, "pr_title": "Treat SQL function parameter case-insensitive", "pr_createdAt": "2020-06-18T01:01:49Z", "pr_url": "https://github.com/prestodb/presto/pull/14669", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyMzMyMw==", "url": "https://github.com/prestodb/presto/pull/14669#discussion_r441923323", "bodyText": "May be one more test for using non-params (like columns outside) and also the function name case insensitively like:\nSELECT array_APPEND(Array, iTem) from (SELECT array[1] array, 2 ITEM)", "author": "kaikalur", "createdAt": "2020-06-18T01:49:38Z", "path": "presto-tests/src/test/java/com/facebook/presto/tests/TestSqlFunctions.java", "diffHunk": "@@ -267,4 +267,20 @@ public void testShowCreateFunctions()\n         assertQueryFails(\"SHOW CREATE FUNCTION array_agg\", \"SHOW CREATE FUNCTION is only supported for SQL functions\");\n         assertQueryFails(\"SHOW CREATE FUNCTION presto.default.array_agg\", \"SHOW CREATE FUNCTION is only supported for SQL functions\");\n     }\n+\n+    @Test\n+    void testParameterCaseInsensitive()\n+    {\n+        @Language(\"SQL\") String createFunctionInt = \"CREATE FUNCTION testing.common.array_append(input array<int>, x int)\\n\" +\n+                \"RETURNS array<int>\\n\" +\n+                \"RETURN concat(inPut, array[x])\";\n+        @Language(\"SQL\") String createFunctionDouble = \"CREATE FUNCTION testing.common.array_append(inPut array<bigint>, x bigint)\\n\" +\n+                \"RETURNS array<bigint>\\n\" +\n+                \"RETURN concat(input, array[x])\";\n+        assertQuerySucceeds(createFunctionInt);\n+        assertQuerySucceeds(createFunctionDouble);\n+\n+        assertQuery(\"SELECT testing.common.array_append(array[1, 2, 3], 4)\", \"VALUES array[1, 2, 3, 4]\");\n+        assertQuery(\"SELECT testing.common.array_append(array[bigint'1', bigint'2', bigint'3'], bigint'4')\", \"VALUES array[1L, 2L, 3L, 4L]\");\n+    }", "originalCommit": "d6a3a291678b4dd81557a979acff7c2484085189", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "329d3560b1d21ca3a05d3d139f51dc4961a868a0", "chunk": "diff --git a/presto-tests/src/test/java/com/facebook/presto/tests/TestSqlFunctions.java b/presto-tests/src/test/java/com/facebook/presto/tests/TestSqlFunctions.java\nindex d000ff38e5..d574369e09 100644\n--- a/presto-tests/src/test/java/com/facebook/presto/tests/TestSqlFunctions.java\n+++ b/presto-tests/src/test/java/com/facebook/presto/tests/TestSqlFunctions.java\n\n@@ -282,5 +282,6 @@ public class TestSqlFunctions\n \n         assertQuery(\"SELECT testing.common.array_append(array[1, 2, 3], 4)\", \"VALUES array[1, 2, 3, 4]\");\n         assertQuery(\"SELECT testing.common.array_append(array[bigint'1', bigint'2', bigint'3'], bigint'4')\", \"VALUES array[1L, 2L, 3L, 4L]\");\n+        assertQuery(\"SELECT testing.common.ARRAY_APPEND(Array, ITEM) FROM (VALUES (array[1, 2, 3], 4), (array[2, 3, 4], 5)) t(array, item)\", \"VALUES array[1, 2, 3, 4], array[2, 3, 4, 5]\");\n     }\n }\n"}}, {"oid": "329d3560b1d21ca3a05d3d139f51dc4961a868a0", "url": "https://github.com/prestodb/presto/commit/329d3560b1d21ca3a05d3d139f51dc4961a868a0", "message": "Treat SQL function parameter case-insensitive\n\nFunction parameters should be case-insensitive.\nAlso fixing:\n* Store the parameter names as originally provided by users\n* Use identifier default setting for delimited", "committedDate": "2020-06-18T01:56:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyNTAyNQ==", "url": "https://github.com/prestodb/presto/pull/14669#discussion_r441925025", "bodyText": "nit: \"argument names ...\"", "author": "caithagoras", "createdAt": "2020-06-18T01:56:02Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/relational/SqlFunctionUtils.java", "diffHunk": "@@ -62,13 +64,16 @@ public static Expression getSqlFunctionExpression(FunctionMetadata functionMetad\n     {\n         checkArgument(functionMetadata.getImplementationType().equals(SQL), format(\"Expect SQL function, get %s\", functionMetadata.getImplementationType()));\n         checkArgument(functionMetadata.getArgumentNames().isPresent(), \"Argument name is missing\");\n-        Expression expression = parseSqlFunctionExpression(implementation, sqlFunctionProperties);\n+        Expression expression = normalizeParameters(functionMetadata.getArgumentNames().get(), parseSqlFunctionExpression(implementation, sqlFunctionProperties));\n         return SqlFunctionArgumentBinder.bindFunctionArguments(expression, functionMetadata.getArgumentNames().get(), arguments);\n     }\n \n     public static RowExpression getSqlFunctionRowExpression(FunctionMetadata functionMetadata, SqlInvokedScalarFunctionImplementation functionImplementation, Metadata metadata, SqlFunctionProperties sqlFunctionProperties, List<RowExpression> arguments)\n     {\n-        Expression expression = coerceIfNecessary(functionMetadata, parseSqlFunctionExpression(functionImplementation, sqlFunctionProperties), sqlFunctionProperties, metadata);\n+        checkArgument(functionMetadata.getImplementationType().equals(SQL), format(\"Expect SQL function, get %s\", functionMetadata.getImplementationType()));\n+        checkArgument(functionMetadata.getArgumentNames().isPresent(), \"Argument name is missing\");", "originalCommit": "d6a3a291678b4dd81557a979acff7c2484085189", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzNjM1OA==", "url": "https://github.com/prestodb/presto/pull/14669#discussion_r441936358", "bodyText": "I copied from the other function. \ud83d\ude02", "author": "rongrong", "createdAt": "2020-06-18T02:41:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyNTAyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2d13c892c76c81cac380dd120fbc80c8e0f6ae29", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlFunctionUtils.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlFunctionUtils.java\nindex 9733feeeea..1cd3561653 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlFunctionUtils.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlFunctionUtils.java\n\n@@ -63,7 +63,7 @@ public final class SqlFunctionUtils\n     public static Expression getSqlFunctionExpression(FunctionMetadata functionMetadata, SqlInvokedScalarFunctionImplementation implementation, SqlFunctionProperties sqlFunctionProperties, List<Expression> arguments)\n     {\n         checkArgument(functionMetadata.getImplementationType().equals(SQL), format(\"Expect SQL function, get %s\", functionMetadata.getImplementationType()));\n-        checkArgument(functionMetadata.getArgumentNames().isPresent(), \"Argument name is missing\");\n+        checkArgument(functionMetadata.getArgumentNames().isPresent(), \"ArgumentNames is missing\");\n         Expression expression = normalizeParameters(functionMetadata.getArgumentNames().get(), parseSqlFunctionExpression(implementation, sqlFunctionProperties));\n         return SqlFunctionArgumentBinder.bindFunctionArguments(expression, functionMetadata.getArgumentNames().get(), arguments);\n     }\n"}}, {"oid": "2d13c892c76c81cac380dd120fbc80c8e0f6ae29", "url": "https://github.com/prestodb/presto/commit/2d13c892c76c81cac380dd120fbc80c8e0f6ae29", "message": "Treat SQL function parameter case-insensitive\n\nFunction parameters should be case-insensitive.\nAlso fixing:\n* Store the parameter names as originally provided by users\n* Use identifier default setting for delimited", "committedDate": "2020-06-18T02:43:34Z", "type": "forcePushed"}, {"oid": "2dc5a95ae5006aca064e43b4e25cd6b9c10321e0", "url": "https://github.com/prestodb/presto/commit/2dc5a95ae5006aca064e43b4e25cd6b9c10321e0", "message": "Treat SQL function parameter case-insensitive\n\nFunction parameters should be case-insensitive.\nAlso fixing:\n* Store the parameter names as originally provided by users\n* Use identifier default setting for delimited", "committedDate": "2020-06-19T17:22:59Z", "type": "forcePushed"}, {"oid": "d33c3133689531ea6c5f45be1be9fd75bb3a4591", "url": "https://github.com/prestodb/presto/commit/d33c3133689531ea6c5f45be1be9fd75bb3a4591", "message": "Treat SQL function parameter case-insensitive\n\nFunction parameters should be case-insensitive.\nAlso fixing:\n* Store the parameter names as originally provided by users\n* Use identifier default setting for delimited", "committedDate": "2020-06-19T19:24:02Z", "type": "forcePushed"}, {"oid": "4733368303d36bf339e88db37314bd3a501e81b3", "url": "https://github.com/prestodb/presto/commit/4733368303d36bf339e88db37314bd3a501e81b3", "message": "Treat SQL function parameter case-insensitive\n\nFunction parameters should be case-insensitive.\nAlso fixing:\n* Store the parameter names as originally provided by users\n* Use identifier default setting for delimited", "committedDate": "2020-06-25T01:46:02Z", "type": "commit"}, {"oid": "4733368303d36bf339e88db37314bd3a501e81b3", "url": "https://github.com/prestodb/presto/commit/4733368303d36bf339e88db37314bd3a501e81b3", "message": "Treat SQL function parameter case-insensitive\n\nFunction parameters should be case-insensitive.\nAlso fixing:\n* Store the parameter names as originally provided by users\n* Use identifier default setting for delimited", "committedDate": "2020-06-25T01:46:02Z", "type": "forcePushed"}]}