{"pr_number": 14193, "pr_title": "Improve scale writer creation based on producer buffer", "pr_createdAt": "2020-03-02T23:56:24Z", "pr_url": "https://github.com/prestodb/presto/pull/14193", "timeline": [{"oid": "71656d0f3dd76f1600bb28daee0b05428ea4f374", "url": "https://github.com/prestodb/presto/commit/71656d0f3dd76f1600bb28daee0b05428ea4f374", "message": "Improve scale writer creation based on producer buffer\n\nWe observe two cases in production cause current scale writer heuristics\nnot able to scale:\n\n1. When there is skew on the producer side and more than half of the\nproducer buffer is not overutilized.\n2. When grouped execution is enabled and each bucket doesn't make the\nbuffer to be overutilized.\n\nThis commit tries to improve the situation by considering overall\nproducer buffer utilization when deciding scale the writers.", "committedDate": "2020-03-03T01:57:40Z", "type": "forcePushed"}, {"oid": "dd448d33bc7a229eca4b7a8554fae1e289e9d7db", "url": "https://github.com/prestodb/presto/commit/dd448d33bc7a229eca4b7a8554fae1e289e9d7db", "message": "Improve scale writer creation based on producer buffer\n\nWe observe two cases in production cause current scale writer heuristics\nnot able to scale:\n\n1. When there is skew on the producer side and more than half of the\nproducer buffer is not overutilized.\n2. When grouped execution is enabled and each bucket doesn't make the\nbuffer to be overutilized.\n\nThis commit tries to improve the situation by considering overall\nproducer buffer utilization when deciding scale the writers.", "committedDate": "2020-03-03T05:08:27Z", "type": "forcePushed"}, {"oid": "46691e3d9de6e5728d43f6d1779db9e69d4cc498", "url": "https://github.com/prestodb/presto/commit/46691e3d9de6e5728d43f6d1779db9e69d4cc498", "message": "Improve scale writer creation based on producer buffer\n\nWe observe two cases in production cause current scale writer heuristics\nnot able to scale:\n\n1. When there is skew on the producer side and more than half of the\nproducer buffer is not overutilized.\n2. When grouped execution is enabled and each bucket doesn't make the\nbuffer to be overutilized.\n\nThis commit tries to improve the situation by considering overall\nproducer buffer utilization when deciding scale the writers.", "committedDate": "2020-03-03T05:57:02Z", "type": "forcePushed"}, {"oid": "fc453bbef90212cba976c7d22f10720867745567", "url": "https://github.com/prestodb/presto/commit/fc453bbef90212cba976c7d22f10720867745567", "message": "Improve scale writer creation based on producer buffer\n\nWe observe two cases in production cause current scale writer heuristics\nnot able to scale:\n\n1. When there is skew on the producer side and more than half of the\nproducer buffer is not overutilized.\n2. When grouped execution is enabled and each bucket doesn't make the\nbuffer to be overutilized.\n\nThis commit tries to improve the situation by considering overall\nproducer buffer utilization when deciding scale the writers.", "committedDate": "2020-03-03T06:38:08Z", "type": "forcePushed"}, {"oid": "b4b40869383a9d71aac7eea6cd169fade4587643", "url": "https://github.com/prestodb/presto/commit/b4b40869383a9d71aac7eea6cd169fade4587643", "message": "Improve scale writer creation based on producer buffer\n\nWe observe two cases in production cause current scale writer heuristics\nnot able to scale:\n\n1. When there is skew on the producer side and more than half of the\nproducer buffer is not overutilized.\n2. When grouped execution is enabled and each bucket doesn't make the\nbuffer to be overutilized.\n\nThis commit tries to improve the situation by considering overall\nproducer buffer utilization when deciding scale the writers.", "committedDate": "2020-03-04T19:44:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNjI0OQ==", "url": "https://github.com/prestodb/presto/pull/14193#discussion_r387916249", "bodyText": "I'm a little bit confused about this loging. I was thinking more about changing the condition to something like if 50% overutilized OR 90% non empty - add more writer. Thoughts?", "author": "arhimondr", "createdAt": "2020-03-04T20:29:21Z", "path": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java", "diffHunk": "@@ -105,15 +116,30 @@ private int getNewTaskCount()\n             return 1;\n         }\n \n+        if (optimizedScaleWriterProducerBuffer) {\n+            double totalProducerBufferUtilization = sourceTasksProvider.get().stream()", "originalCommit": "b4b40869383a9d71aac7eea6cd169fade4587643", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4Mjg5OA==", "url": "https://github.com/prestodb/presto/pull/14193#discussion_r388582898", "bodyText": "@arhimondr : Addressed the comments per offline discussion. Basically now we add more writers if the overall buffer utilization is more than the number of writers.\nWe don't need to worry about accidentally open too many writers since overall writtenBytes has to be more than writerMinSizeBytes * scheduledNodes.size()\n            writtenBytes >= writerMinSizeBytes * scheduledNodes.size())", "author": "wenleix", "createdAt": "2020-03-05T21:42:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNjI0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "40fa3031e6f9d8f57efdac347891a23589bcc083", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java b/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java\nindex 42b08391a4..829a7a15c2 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java\n\n@@ -122,8 +119,7 @@ public class ScaledWriterScheduler\n                     .mapToDouble(TaskStatus::getOutputBufferUtilization)\n                     .sum();\n \n-            if (noMoreTaskScheduledRoundCount >= SCHEDULED_ROUND_REQUIRED_FOR_EQUILIBRIUM &&\n-                    totalProducerBufferUtilization >= scheduledNodes.size() * MAX_PRODUCER_BUFFER_UTILIZATION_TO_CONSUMER_RATIO &&\n+            if (totalProducerBufferUtilization >= scheduledNodes.size() &&\n                     writtenBytes >= writerMinSizeBytes * scheduledNodes.size()) {\n                 return 1;\n             }\n"}}, {"oid": "40fa3031e6f9d8f57efdac347891a23589bcc083", "url": "https://github.com/prestodb/presto/commit/40fa3031e6f9d8f57efdac347891a23589bcc083", "message": "Improve scale writer creation based on producer buffer\n\nWe observe two cases in production cause current scale writer heuristics\nnot able to scale:\n\n1. When there is skew on the producer side and more than half of the\nproducer buffer is not overutilized.\n2. When grouped execution is enabled and each bucket doesn't make the\nbuffer to be overutilized.\n\nThis commit tries to improve the situation by considering overall\nproducer buffer utilization when deciding scale the writers.", "committedDate": "2020-03-05T21:22:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4NDYyOQ==", "url": "https://github.com/prestodb/presto/pull/14193#discussion_r388584629", "bodyText": "This is unused now", "author": "arhimondr", "createdAt": "2020-03-05T21:46:17Z", "path": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java", "diffHunk": "@@ -40,13 +40,19 @@\n public class ScaledWriterScheduler\n         implements StageScheduler\n {\n+    private static final int SCHEDULED_ROUND_REQUIRED_FOR_EQUILIBRIUM = 5;", "originalCommit": "40fa3031e6f9d8f57efdac347891a23589bcc083", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2124d5e3dae1229e724a0c8bfe92877db993cde1", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java b/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java\nindex 829a7a15c2..b93617747d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/scheduler/ScaledWriterScheduler.java\n\n@@ -40,8 +40,6 @@ import static java.util.concurrent.TimeUnit.MILLISECONDS;\n public class ScaledWriterScheduler\n         implements StageScheduler\n {\n-    private static final int SCHEDULED_ROUND_REQUIRED_FOR_EQUILIBRIUM = 5;\n-\n     private final SqlStageExecution stage;\n     private final Supplier<Collection<TaskStatus>> sourceTasksProvider;\n     private final Supplier<Collection<TaskStatus>> writerTasksProvider;\n"}}, {"oid": "2124d5e3dae1229e724a0c8bfe92877db993cde1", "url": "https://github.com/prestodb/presto/commit/2124d5e3dae1229e724a0c8bfe92877db993cde1", "message": "Improve scale writer creation based on producer buffer\n\nWe observe two cases in production cause current scale writer heuristics\nnot able to scale:\n\n1. When there is skew on the producer side and more than half of the\nproducer buffer is not overutilized.\n2. When grouped execution is enabled and each bucket doesn't make the\nbuffer to be overutilized.\n\nThis commit tries to improve the situation by considering overall\nproducer buffer utilization when deciding scale the writers.", "committedDate": "2020-03-05T22:13:12Z", "type": "commit"}, {"oid": "2124d5e3dae1229e724a0c8bfe92877db993cde1", "url": "https://github.com/prestodb/presto/commit/2124d5e3dae1229e724a0c8bfe92877db993cde1", "message": "Improve scale writer creation based on producer buffer\n\nWe observe two cases in production cause current scale writer heuristics\nnot able to scale:\n\n1. When there is skew on the producer side and more than half of the\nproducer buffer is not overutilized.\n2. When grouped execution is enabled and each bucket doesn't make the\nbuffer to be overutilized.\n\nThis commit tries to improve the situation by considering overall\nproducer buffer utilization when deciding scale the writers.", "committedDate": "2020-03-05T22:13:12Z", "type": "forcePushed"}]}