{"pr_number": 15276, "pr_title": "Add local cache for Parquet Metadata", "pr_createdAt": "2020-10-06T22:41:02Z", "pr_url": "https://github.com/prestodb/presto/pull/15276", "timeline": [{"oid": "c9949d50756a6b152d41a00aa9a3cc4d8f55ac52", "url": "https://github.com/prestodb/presto/commit/c9949d50756a6b152d41a00aa9a3cc4d8f55ac52", "message": "Add local cache for Parquet Metadata", "committedDate": "2020-10-07T23:09:29Z", "type": "forcePushed"}, {"oid": "8aa1f04f883227213964b004010a67f8dd97224f", "url": "https://github.com/prestodb/presto/commit/8aa1f04f883227213964b004010a67f8dd97224f", "message": "Add local cache for Parquet Metadata", "committedDate": "2020-10-08T18:39:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MDQxOA==", "url": "https://github.com/prestodb/presto/pull/15276#discussion_r502560418", "bodyText": "nit: isMetadataCacheEnabled()", "author": "shixuan-fan", "createdAt": "2020-10-09T17:00:06Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java", "diffHunk": "@@ -293,4 +299,23 @@ public StripeMetadataSource createStripeMetadataSource(OrcCacheConfig orcCacheCo\n         }\n         return stripeMetadataSource;\n     }\n+\n+    @Singleton\n+    @Provides\n+    public ParquetMetadataSource createParquetMetadataSource(ParquetCacheConfig parquetCacheConfig, MBeanExporter exporter)\n+    {\n+        ParquetMetadataSource parquetMetadataSource = new MetadataReader();\n+        if (parquetCacheConfig.ismetadataCacheEnabled()) {", "originalCommit": "8aa1f04f883227213964b004010a67f8dd97224f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fb6d69a195908f38612750d163a93da0fc5a2eb3", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java\nindex 838dafdc34..d734191125 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java\n\n@@ -307,9 +307,9 @@ public class HiveClientModule\n         ParquetMetadataSource parquetMetadataSource = new MetadataReader();\n         if (parquetCacheConfig.ismetadataCacheEnabled()) {\n             Cache<ParquetDataSourceId, ParquetFileMetadata> cache = CacheBuilder.newBuilder()\n-                    .maximumWeight(parquetCacheConfig.getmetadataCacheSize().toBytes())\n+                    .maximumWeight(parquetCacheConfig.getMetadataCacheSize().toBytes())\n                     .weigher((id, metadata) -> ((ParquetFileMetadata) metadata).getMetadataSize())\n-                    .expireAfterAccess(parquetCacheConfig.getmetadataCacheTtlSinceLastAccess().toMillis(), TimeUnit.MILLISECONDS)\n+                    .expireAfterAccess(parquetCacheConfig.getMetadataCacheTtlSinceLastAccess().toMillis(), MILLISECONDS)\n                     .recordStats()\n                     .build();\n             CacheStatsMBean cacheStatsMBean = new CacheStatsMBean(cache);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MDYwMg==", "url": "https://github.com/prestodb/presto/pull/15276#discussion_r502560602", "bodyText": "nit: getMetadataCacheSize()", "author": "shixuan-fan", "createdAt": "2020-10-09T17:00:25Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java", "diffHunk": "@@ -293,4 +299,23 @@ public StripeMetadataSource createStripeMetadataSource(OrcCacheConfig orcCacheCo\n         }\n         return stripeMetadataSource;\n     }\n+\n+    @Singleton\n+    @Provides\n+    public ParquetMetadataSource createParquetMetadataSource(ParquetCacheConfig parquetCacheConfig, MBeanExporter exporter)\n+    {\n+        ParquetMetadataSource parquetMetadataSource = new MetadataReader();\n+        if (parquetCacheConfig.ismetadataCacheEnabled()) {\n+            Cache<ParquetDataSourceId, ParquetFileMetadata> cache = CacheBuilder.newBuilder()\n+                    .maximumWeight(parquetCacheConfig.getmetadataCacheSize().toBytes())", "originalCommit": "8aa1f04f883227213964b004010a67f8dd97224f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fb6d69a195908f38612750d163a93da0fc5a2eb3", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java\nindex 838dafdc34..d734191125 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java\n\n@@ -307,9 +307,9 @@ public class HiveClientModule\n         ParquetMetadataSource parquetMetadataSource = new MetadataReader();\n         if (parquetCacheConfig.ismetadataCacheEnabled()) {\n             Cache<ParquetDataSourceId, ParquetFileMetadata> cache = CacheBuilder.newBuilder()\n-                    .maximumWeight(parquetCacheConfig.getmetadataCacheSize().toBytes())\n+                    .maximumWeight(parquetCacheConfig.getMetadataCacheSize().toBytes())\n                     .weigher((id, metadata) -> ((ParquetFileMetadata) metadata).getMetadataSize())\n-                    .expireAfterAccess(parquetCacheConfig.getmetadataCacheTtlSinceLastAccess().toMillis(), TimeUnit.MILLISECONDS)\n+                    .expireAfterAccess(parquetCacheConfig.getMetadataCacheTtlSinceLastAccess().toMillis(), MILLISECONDS)\n                     .recordStats()\n                     .build();\n             CacheStatsMBean cacheStatsMBean = new CacheStatsMBean(cache);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MjIwNQ==", "url": "https://github.com/prestodb/presto/pull/15276#discussion_r502562205", "bodyText": "nit: getMetadataCacheTtlSinceLastAccess", "author": "shixuan-fan", "createdAt": "2020-10-09T17:03:30Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java", "diffHunk": "@@ -293,4 +299,23 @@ public StripeMetadataSource createStripeMetadataSource(OrcCacheConfig orcCacheCo\n         }\n         return stripeMetadataSource;\n     }\n+\n+    @Singleton\n+    @Provides\n+    public ParquetMetadataSource createParquetMetadataSource(ParquetCacheConfig parquetCacheConfig, MBeanExporter exporter)\n+    {\n+        ParquetMetadataSource parquetMetadataSource = new MetadataReader();\n+        if (parquetCacheConfig.ismetadataCacheEnabled()) {\n+            Cache<ParquetDataSourceId, ParquetFileMetadata> cache = CacheBuilder.newBuilder()\n+                    .maximumWeight(parquetCacheConfig.getmetadataCacheSize().toBytes())\n+                    .weigher((id, metadata) -> ((ParquetFileMetadata) metadata).getMetadataSize())\n+                    .expireAfterAccess(parquetCacheConfig.getmetadataCacheTtlSinceLastAccess().toMillis(), TimeUnit.MILLISECONDS)", "originalCommit": "8aa1f04f883227213964b004010a67f8dd97224f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4ODE2Mw==", "url": "https://github.com/prestodb/presto/pull/15276#discussion_r502688163", "bodyText": "static import MILLISECONDS", "author": "zhenxiao", "createdAt": "2020-10-09T22:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MjIwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "fb6d69a195908f38612750d163a93da0fc5a2eb3", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java\nindex 838dafdc34..d734191125 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java\n\n@@ -307,9 +307,9 @@ public class HiveClientModule\n         ParquetMetadataSource parquetMetadataSource = new MetadataReader();\n         if (parquetCacheConfig.ismetadataCacheEnabled()) {\n             Cache<ParquetDataSourceId, ParquetFileMetadata> cache = CacheBuilder.newBuilder()\n-                    .maximumWeight(parquetCacheConfig.getmetadataCacheSize().toBytes())\n+                    .maximumWeight(parquetCacheConfig.getMetadataCacheSize().toBytes())\n                     .weigher((id, metadata) -> ((ParquetFileMetadata) metadata).getMetadataSize())\n-                    .expireAfterAccess(parquetCacheConfig.getmetadataCacheTtlSinceLastAccess().toMillis(), TimeUnit.MILLISECONDS)\n+                    .expireAfterAccess(parquetCacheConfig.getMetadataCacheTtlSinceLastAccess().toMillis(), MILLISECONDS)\n                     .recordStats()\n                     .build();\n             CacheStatsMBean cacheStatsMBean = new CacheStatsMBean(cache);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2NTY1Mw==", "url": "https://github.com/prestodb/presto/pull/15276#discussion_r502565653", "bodyText": "nit: Capitalize the first letter after get and set in this class", "author": "shixuan-fan", "createdAt": "2020-10-09T17:10:24Z", "path": "presto-parquet/src/main/java/com/facebook/presto/parquet/cache/ParquetCacheConfig.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.parquet.cache;\n+\n+import com.facebook.airlift.configuration.Config;\n+import com.facebook.airlift.configuration.ConfigDescription;\n+import io.airlift.units.DataSize;\n+import io.airlift.units.Duration;\n+import io.airlift.units.MinDataSize;\n+import io.airlift.units.MinDuration;\n+\n+import static io.airlift.units.DataSize.Unit.BYTE;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+\n+public class ParquetCacheConfig\n+{\n+    private boolean metadataCacheEnabled;\n+    private DataSize metadataCacheSize = new DataSize(0, BYTE);\n+    private Duration metadataCacheTtlSinceLastAccess = new Duration(0, SECONDS);\n+\n+    public boolean ismetadataCacheEnabled()\n+    {\n+        return metadataCacheEnabled;\n+    }\n+\n+    @Config(\"parquet.metadata-cache-enabled\")\n+    @ConfigDescription(\"Enable cache for parquet metadata\")\n+    public ParquetCacheConfig setmetadataCacheEnabled(boolean metadataCacheEnabled)", "originalCommit": "8aa1f04f883227213964b004010a67f8dd97224f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fb6d69a195908f38612750d163a93da0fc5a2eb3", "chunk": "diff --git a/presto-parquet/src/main/java/com/facebook/presto/parquet/cache/ParquetCacheConfig.java b/presto-parquet/src/main/java/com/facebook/presto/parquet/cache/ParquetCacheConfig.java\nindex 40aaf02e2b..8b59c6c94f 100644\n--- a/presto-parquet/src/main/java/com/facebook/presto/parquet/cache/ParquetCacheConfig.java\n+++ b/presto-parquet/src/main/java/com/facebook/presto/parquet/cache/ParquetCacheConfig.java\n\n@@ -36,35 +36,35 @@ public class ParquetCacheConfig\n \n     @Config(\"parquet.metadata-cache-enabled\")\n     @ConfigDescription(\"Enable cache for parquet metadata\")\n-    public ParquetCacheConfig setmetadataCacheEnabled(boolean metadataCacheEnabled)\n+    public ParquetCacheConfig setMetadataCacheEnabled(boolean metadataCacheEnabled)\n     {\n         this.metadataCacheEnabled = metadataCacheEnabled;\n         return this;\n     }\n \n     @MinDataSize(\"0B\")\n-    public DataSize getmetadataCacheSize()\n+    public DataSize getMetadataCacheSize()\n     {\n         return metadataCacheSize;\n     }\n \n     @Config(\"parquet.metadata-cache-size\")\n     @ConfigDescription(\"Size of the parquet metadata cache\")\n-    public ParquetCacheConfig setmetadataCacheSize(DataSize metadataCacheSize)\n+    public ParquetCacheConfig setMetadataCacheSize(DataSize metadataCacheSize)\n     {\n         this.metadataCacheSize = metadataCacheSize;\n         return this;\n     }\n \n     @MinDuration(\"0s\")\n-    public Duration getmetadataCacheTtlSinceLastAccess()\n+    public Duration getMetadataCacheTtlSinceLastAccess()\n     {\n         return metadataCacheTtlSinceLastAccess;\n     }\n \n     @Config(\"parquet.metadata-cache-ttl-since-last-access\")\n     @ConfigDescription(\"Time-to-live for parquet metadata cache entry after last access\")\n-    public ParquetCacheConfig setmetadataCacheTtlSinceLastAccess(Duration metadataCacheTtlSinceLastAccess)\n+    public ParquetCacheConfig setmMtadataCacheTtlSinceLastAccess(Duration metadataCacheTtlSinceLastAccess)\n     {\n         this.metadataCacheTtlSinceLastAccess = metadataCacheTtlSinceLastAccess;\n         return this;\n"}}, {"oid": "fb6d69a195908f38612750d163a93da0fc5a2eb3", "url": "https://github.com/prestodb/presto/commit/fb6d69a195908f38612750d163a93da0fc5a2eb3", "message": "Add local cache for Parquet Metadata", "committedDate": "2020-10-09T23:00:32Z", "type": "forcePushed"}, {"oid": "36876ac30fbd4bdb9f1f8e8ddc4418aa5e29f836", "url": "https://github.com/prestodb/presto/commit/36876ac30fbd4bdb9f1f8e8ddc4418aa5e29f836", "message": "Add local cache for Parquet Metadata", "committedDate": "2020-10-09T23:07:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxMDk4Mg==", "url": "https://github.com/prestodb/presto/pull/15276#discussion_r502710982", "bodyText": "duplicate line?", "author": "zhenxiao", "createdAt": "2020-10-09T23:27:12Z", "path": "presto-hive/src/test/java/com/facebook/presto/hive/parquet/AbstractTestParquetReader.java", "diffHunk": "@@ -1517,6 +1532,7 @@ private void setParquetLogging()\n     {\n         Logger.getLogger(ParquetOutputFormat.class.getName()).setLevel(Level.WARNING);\n         Logger.getLogger(CodecConfig.class.getName()).setLevel(Level.WARNING);\n+        Logger.getLogger(CodecConfig.class.getName()).setLevel(Level.WARNING);", "originalCommit": "36876ac30fbd4bdb9f1f8e8ddc4418aa5e29f836", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6d862516ff850646dd98fabebbd2921851f36741", "chunk": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/parquet/AbstractTestParquetReader.java b/presto-hive/src/test/java/com/facebook/presto/hive/parquet/AbstractTestParquetReader.java\nindex 67a5e955d4..7947b6398d 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/parquet/AbstractTestParquetReader.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/parquet/AbstractTestParquetReader.java\n\n@@ -1532,7 +1532,6 @@ public abstract class AbstractTestParquetReader\n     {\n         Logger.getLogger(ParquetOutputFormat.class.getName()).setLevel(Level.WARNING);\n         Logger.getLogger(CodecConfig.class.getName()).setLevel(Level.WARNING);\n-        Logger.getLogger(CodecConfig.class.getName()).setLevel(Level.WARNING);\n         // these logging classes are not public, use class name directly\n         Logger.getLogger(\"parquet.hadoop.InternalParquetRecordWriter\").setLevel(Level.WARNING);\n         Logger.getLogger(\"parquet.hadoop.ColumnChunkPageWriteStore\").setLevel(Level.WARNING);\n"}}, {"oid": "6d862516ff850646dd98fabebbd2921851f36741", "url": "https://github.com/prestodb/presto/commit/6d862516ff850646dd98fabebbd2921851f36741", "message": "Add local cache for Parquet Metadata", "committedDate": "2020-10-12T17:22:36Z", "type": "forcePushed"}, {"oid": "90443df4c160ecc57d5b3590adca05d9ae4947c0", "url": "https://github.com/prestodb/presto/commit/90443df4c160ecc57d5b3590adca05d9ae4947c0", "message": "Add local cache for Parquet Metadata", "committedDate": "2020-10-12T19:38:33Z", "type": "forcePushed"}, {"oid": "b26a4543e1c571adaa3aefa9296d2a6381db36c6", "url": "https://github.com/prestodb/presto/commit/b26a4543e1c571adaa3aefa9296d2a6381db36c6", "message": "Add local cache for Parquet Metadata", "committedDate": "2020-10-13T19:11:57Z", "type": "forcePushed"}, {"oid": "b8958a3dd7920575b3350cb1ddbcac805a6ad1f5", "url": "https://github.com/prestodb/presto/commit/b8958a3dd7920575b3350cb1ddbcac805a6ad1f5", "message": "Add local cache for Parquet Metadata", "committedDate": "2020-10-13T21:08:02Z", "type": "commit"}, {"oid": "b8958a3dd7920575b3350cb1ddbcac805a6ad1f5", "url": "https://github.com/prestodb/presto/commit/b8958a3dd7920575b3350cb1ddbcac805a6ad1f5", "message": "Add local cache for Parquet Metadata", "committedDate": "2020-10-13T21:08:02Z", "type": "forcePushed"}]}