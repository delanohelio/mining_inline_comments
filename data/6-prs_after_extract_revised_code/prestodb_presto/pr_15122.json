{"pr_number": 15122, "pr_title": "Add HiveMetadataUpdater to handle metadata updates", "pr_createdAt": "2020-09-04T02:40:17Z", "pr_url": "https://github.com/prestodb/presto/pull/15122", "timeline": [{"oid": "11e2113917499893017943e878f6736e3de425e7", "url": "https://github.com/prestodb/presto/commit/11e2113917499893017943e878f6736e3de425e7", "message": "Rename PageSinkProperties to PageSinkContext", "committedDate": "2020-09-03T21:01:23Z", "type": "commit"}, {"oid": "6e20474729e64eb742a6fc74fa63b15d1673ee02", "url": "https://github.com/prestodb/presto/commit/6e20474729e64eb742a6fc74fa63b15d1673ee02", "message": "Add ConnectorMetadataUpdateHandle resolver\n\nConnectorMetadataUpdateHandle will be used in communication\nbetween workers and coordinator. So we need handle resolver\nto assist in serialization/deserialization.", "committedDate": "2020-09-04T03:02:08Z", "type": "forcePushed"}, {"oid": "c8cf1c495f4b667fdcd58b21848f5cb04742c03d", "url": "https://github.com/prestodb/presto/commit/c8cf1c495f4b667fdcd58b21848f5cb04742c03d", "message": "Add ConnectorMetadataUpdateHandle resolver\n\nConnectorMetadataUpdateHandle will be used in communication\nbetween workers and coordinator. So we need handle resolver\nto assist in serialization/deserialization.", "committedDate": "2020-09-04T05:08:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ1ODI3Ng==", "url": "https://github.com/prestodb/presto/pull/15122#discussion_r483458276", "bodyText": "What I meant was to use SchemaTableName type from SPI", "author": "highker", "createdAt": "2020-09-04T08:08:16Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdateHandle.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.spi.ConnectorMetadataUpdateHandle;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.UUID;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class HiveMetadataUpdateHandle\n+        implements ConnectorMetadataUpdateHandle\n+{\n+    private final UUID requestId;\n+    private final String schemaName;\n+    private final String schemaTableName;", "originalCommit": "6bfedf135757649a7d24caa6cfabe1b9a006b5f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0OTY1OQ==", "url": "https://github.com/prestodb/presto/pull/15122#discussion_r483749659", "bodyText": "oops...didnt know it existed. Made the suggested change.", "author": "NikhilCollooru", "createdAt": "2020-09-04T17:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ1ODI3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "cfec721e13af0de62a8dd49de66838cbaf88af71", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdateHandle.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdateHandle.java\nindex 99a4d08c63..7ca53e1e6a 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdateHandle.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdateHandle.java\n\n@@ -14,6 +14,7 @@\n package com.facebook.presto.hive;\n \n import com.facebook.presto.spi.ConnectorMetadataUpdateHandle;\n+import com.facebook.presto.spi.SchemaTableName;\n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonProperty;\n \n"}}, {"oid": "cfec721e13af0de62a8dd49de66838cbaf88af71", "url": "https://github.com/prestodb/presto/commit/cfec721e13af0de62a8dd49de66838cbaf88af71", "message": "Add ConnectorMetadataUpdateHandle resolver\n\nConnectorMetadataUpdateHandle will be used in communication\nbetween workers and coordinator. So we need handle resolver\nto assist in serialization/deserialization.", "committedDate": "2020-09-04T16:56:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MTk3OQ==", "url": "https://github.com/prestodb/presto/pull/15122#discussion_r483851979", "bodyText": "Add to TODO: this class requires visit to make it more robust", "author": "highker", "createdAt": "2020-09-04T21:32:51Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdater.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.airlift.concurrent.MoreFutures;\n+import com.facebook.presto.spi.ConnectorMetadataUpdateHandle;\n+import com.facebook.presto.spi.SchemaTableName;\n+import com.facebook.presto.spi.connector.ConnectorMetadataUpdater;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.util.concurrent.SettableFuture;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Queue;\n+import java.util.UUID;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.concurrent.Executor;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class HiveMetadataUpdater", "originalCommit": "895a14ccb3a2754e44915956f1eb3fa5d38d2220", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9bc0fadf4b9db0cef6b00a31c563268081f9c38", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdater.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdater.java\nindex 062103775f..473b3eae9c 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdater.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdater.java\n\n@@ -32,6 +32,7 @@ import java.util.concurrent.Executor;\n \n import static java.util.Objects.requireNonNull;\n \n+// TODO: Revisit and make this class more robust\n public class HiveMetadataUpdater\n         implements ConnectorMetadataUpdater\n {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MzEzOA==", "url": "https://github.com/prestodb/presto/pull/15122#discussion_r483853138", "bodyText": "static", "author": "highker", "createdAt": "2020-09-04T21:36:39Z", "path": "presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java", "diffHunk": "@@ -136,6 +162,19 @@ private ConnectorPageSink createPageSink()\n             throw new UnsupportedOperationException(\"Unhandled target type: \" + target.getClass().getName());\n         }\n \n+        private ConnectorId getConnectorId(ExecutionWriterTarget handle)", "originalCommit": "895a14ccb3a2754e44915956f1eb3fa5d38d2220", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9bc0fadf4b9db0cef6b00a31c563268081f9c38", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java\nindex d0d5db93c0..d57b7580cd 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java\n\n@@ -136,33 +136,26 @@ public class TableWriterOperator\n         private ConnectorPageSink createPageSink()\n         {\n             ConnectorId connectorId = getConnectorId(target);\n-            TaskMetadataContext metadataContext;\n             Optional<ConnectorMetadataUpdater> metadataUpdater = metadataUpdaterManager.getMetadataUpdater(connectorId);\n             if (metadataUpdater.isPresent()) {\n-                if (!taskContext.getTaskMetadataContext().isPresent()) {\n-                    metadataContext = new TaskMetadataContext(connectorId);\n-                    taskContext.setTaskMetadataContext(metadataContext);\n-                }\n-\n-                metadataContext = taskContext.getTaskMetadataContext().get();\n-                metadataContext.addMetadataUpdater(metadataUpdater.get());\n+                taskMetadataContext.setConnectorId(connectorId);\n+                taskMetadataContext.addMetadataUpdater(metadataUpdater.get());\n             }\n \n-            PageSinkContext pageSinkContext = PageSinkContext.builder()\n-                    .setCommitRequired(pageSinkCommitStrategy.isCommitRequired())\n-                    .setConnectorMetadataUpdater(metadataUpdater.orElse(null))\n-                    .build();\n+            PageSinkContext.Builder pageSinkContextBuilder = PageSinkContext.builder()\n+                    .setCommitRequired(pageSinkCommitStrategy.isCommitRequired());\n+            metadataUpdater.ifPresent(pageSinkContextBuilder::setConnectorMetadataUpdater);\n \n             if (target instanceof CreateHandle) {\n-                return pageSinkManager.createPageSink(session, ((CreateHandle) target).getHandle(), pageSinkContext);\n+                return pageSinkManager.createPageSink(session, ((CreateHandle) target).getHandle(), pageSinkContextBuilder.build());\n             }\n             if (target instanceof InsertHandle) {\n-                return pageSinkManager.createPageSink(session, ((InsertHandle) target).getHandle(), pageSinkContext);\n+                return pageSinkManager.createPageSink(session, ((InsertHandle) target).getHandle(), pageSinkContextBuilder.build());\n             }\n             throw new UnsupportedOperationException(\"Unhandled target type: \" + target.getClass().getName());\n         }\n \n-        private ConnectorId getConnectorId(ExecutionWriterTarget handle)\n+        private static ConnectorId getConnectorId(ExecutionWriterTarget handle)\n         {\n             if (handle instanceof CreateHandle) {\n                 return ((CreateHandle) handle).getHandle().getConnectorId();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1OTQ1NQ==", "url": "https://github.com/prestodb/presto/pull/15122#discussion_r483859455", "bodyText": "Not a big fan of having setter and getter here. If we have to have something mutable, I would say make metadataContext in taskContext immutable and connectorId in metadataContext mutable. That will make this cleaner.", "author": "highker", "createdAt": "2020-09-04T21:52:36Z", "path": "presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java", "diffHunk": "@@ -124,9 +135,24 @@ public Operator createOperator(DriverContext driverContext)\n \n         private ConnectorPageSink createPageSink()\n         {\n+            ConnectorId connectorId = getConnectorId(target);\n+            TaskMetadataContext metadataContext;\n+            Optional<ConnectorMetadataUpdater> metadataUpdater = metadataUpdaterManager.getMetadataUpdater(connectorId);\n+            if (metadataUpdater.isPresent()) {\n+                if (!taskContext.getTaskMetadataContext().isPresent()) {\n+                    metadataContext = new TaskMetadataContext(connectorId);\n+                    taskContext.setTaskMetadataContext(metadataContext);\n+                }\n+\n+                metadataContext = taskContext.getTaskMetadataContext().get();\n+                metadataContext.addMetadataUpdater(metadataUpdater.get());", "originalCommit": "895a14ccb3a2754e44915956f1eb3fa5d38d2220", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg4MDk4NQ==", "url": "https://github.com/prestodb/presto/pull/15122#discussion_r483880985", "bodyText": "Done. Made the ConnectorId in TaskMetadataContext mutable", "author": "NikhilCollooru", "createdAt": "2020-09-04T23:34:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1OTQ1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e9bc0fadf4b9db0cef6b00a31c563268081f9c38", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java\nindex d0d5db93c0..d57b7580cd 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java\n\n@@ -136,33 +136,26 @@ public class TableWriterOperator\n         private ConnectorPageSink createPageSink()\n         {\n             ConnectorId connectorId = getConnectorId(target);\n-            TaskMetadataContext metadataContext;\n             Optional<ConnectorMetadataUpdater> metadataUpdater = metadataUpdaterManager.getMetadataUpdater(connectorId);\n             if (metadataUpdater.isPresent()) {\n-                if (!taskContext.getTaskMetadataContext().isPresent()) {\n-                    metadataContext = new TaskMetadataContext(connectorId);\n-                    taskContext.setTaskMetadataContext(metadataContext);\n-                }\n-\n-                metadataContext = taskContext.getTaskMetadataContext().get();\n-                metadataContext.addMetadataUpdater(metadataUpdater.get());\n+                taskMetadataContext.setConnectorId(connectorId);\n+                taskMetadataContext.addMetadataUpdater(metadataUpdater.get());\n             }\n \n-            PageSinkContext pageSinkContext = PageSinkContext.builder()\n-                    .setCommitRequired(pageSinkCommitStrategy.isCommitRequired())\n-                    .setConnectorMetadataUpdater(metadataUpdater.orElse(null))\n-                    .build();\n+            PageSinkContext.Builder pageSinkContextBuilder = PageSinkContext.builder()\n+                    .setCommitRequired(pageSinkCommitStrategy.isCommitRequired());\n+            metadataUpdater.ifPresent(pageSinkContextBuilder::setConnectorMetadataUpdater);\n \n             if (target instanceof CreateHandle) {\n-                return pageSinkManager.createPageSink(session, ((CreateHandle) target).getHandle(), pageSinkContext);\n+                return pageSinkManager.createPageSink(session, ((CreateHandle) target).getHandle(), pageSinkContextBuilder.build());\n             }\n             if (target instanceof InsertHandle) {\n-                return pageSinkManager.createPageSink(session, ((InsertHandle) target).getHandle(), pageSinkContext);\n+                return pageSinkManager.createPageSink(session, ((InsertHandle) target).getHandle(), pageSinkContextBuilder.build());\n             }\n             throw new UnsupportedOperationException(\"Unhandled target type: \" + target.getClass().getName());\n         }\n \n-        private ConnectorId getConnectorId(ExecutionWriterTarget handle)\n+        private static ConnectorId getConnectorId(ExecutionWriterTarget handle)\n         {\n             if (handle instanceof CreateHandle) {\n                 return ((CreateHandle) handle).getHandle().getConnectorId();\n"}}, {"oid": "e9bc0fadf4b9db0cef6b00a31c563268081f9c38", "url": "https://github.com/prestodb/presto/commit/e9bc0fadf4b9db0cef6b00a31c563268081f9c38", "message": "Add ConnectorMetadataUpdater to handle worker's metadata updates\n\nConnectorMetadataUpdater is tunneled to PageSink, so that it\ncan create and send metadata update requests to coordinator.", "committedDate": "2020-09-04T23:19:42Z", "type": "commit"}, {"oid": "ee5d4621f5ea55077b5e70fdfaa72f981bb675da", "url": "https://github.com/prestodb/presto/commit/ee5d4621f5ea55077b5e70fdfaa72f981bb675da", "message": "Add ConnectorMetadataUpdateHandle resolver\n\nConnectorMetadataUpdateHandle will be used in communication\nbetween workers and coordinator. So we need handle resolver\nto assist in serialization/deserialization.", "committedDate": "2020-09-04T23:20:02Z", "type": "commit"}, {"oid": "ee5d4621f5ea55077b5e70fdfaa72f981bb675da", "url": "https://github.com/prestodb/presto/commit/ee5d4621f5ea55077b5e70fdfaa72f981bb675da", "message": "Add ConnectorMetadataUpdateHandle resolver\n\nConnectorMetadataUpdateHandle will be used in communication\nbetween workers and coordinator. So we need handle resolver\nto assist in serialization/deserialization.", "committedDate": "2020-09-04T23:20:02Z", "type": "forcePushed"}]}