{"pr_number": 15058, "pr_title": "Improve PrestoSparkRunner capabilities", "pr_createdAt": "2020-08-20T22:19:11Z", "pr_url": "https://github.com/prestodb/presto/pull/15058", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA==", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r474383900", "bodyText": "This is updateRowCount.", "author": "viczhang861", "createdAt": "2020-08-21T03:09:57Z", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -698,7 +785,27 @@ else if (executionException instanceof PrestoSparkExecutionException) {\n                     result.add(unmodifiableList(columns));\n                 }\n             }\n-            return result.build();\n+            List<List<Object>> results = result.build();\n+\n+            // Based on com.facebook.presto.server.protocol.Query#getNextResult\n+            OptionalLong updateCount = OptionalLong.empty();", "originalCommit": "1d23871b17dad2d27628c051de9a485b22e9b195", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc1MTE2NQ==", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r474751165", "bodyText": "I wanted to be compatible with the QueryResults, where this field is called updateCount. So I would prefer not to rename it in the PrestoSparkQueryInfo at least.\nBut since this field is called this way in the PrestoSparkQueryInfo I wanted to be consistent with naming. Do you think there's still a value of renaming the variables in the PrestoSparkQueryExecutionFactory?", "author": "arhimondr", "createdAt": "2020-08-21T14:56:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzMDI5NQ==", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r474830295", "bodyText": "We can keep it consistent,  it is fine.", "author": "viczhang861", "createdAt": "2020-08-21T17:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk4Mzk2NA==", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r475983964", "bodyText": "Yeah I am wondering whether this class should still be called PrestoSparkQueryInfo -- it's based on QueryInfo at beginning but now we have remodel it to more like QueryResults.. \ud83d\ude04\nNot QueryResults in Presto classic implements two interface: QueryData and QueryStatusInfo. Does it resembles QueryStatusInfo more now?", "author": "wenleix", "createdAt": "2020-08-25T00:05:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2NzM0MQ==", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r476567341", "bodyText": "Yeah. Let me rename it to PrestoSparkQueryStatusInfo. I would love to keep the updateCount as is to keep it binary compatible with QueryResults, so we can reuse the tools that process it.", "author": "arhimondr", "createdAt": "2020-08-25T16:09:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA=="}], "type": "inlineReview", "revised_code": {"commit": "ab9233e11726b940432b356a44c5447773fce4e5", "chunk": "diff --git a/presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java b/presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java\nindex 1d313a9282..6fa4ebd08d 100644\n--- a/presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java\n+++ b/presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java\n\n@@ -805,6 +815,13 @@ public class PrestoSparkQueryExecutionFactory\n                 log.error(eventFailure, \"Error publishing query completed event\");\n             }\n \n+            queryResultsOutputPath.ifPresent(path -> writeJsonFile(\n+                    path,\n+                    new PrestoSparkQueryResults(\n+                            getOutputColumns(planAndMore),\n+                            results),\n+                    queryResultsJsonCodec));\n+\n             return results;\n         }\n \n"}}, {"oid": "ab9233e11726b940432b356a44c5447773fce4e5", "url": "https://github.com/prestodb/presto/commit/ab9233e11726b940432b356a44c5447773fce4e5", "message": "Allow to store query results into a file in Presto on Spark", "committedDate": "2020-08-21T14:56:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2NjMxMw==", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r475966313", "bodyText": "Curious about the usage of principal, extraCredentials and traceToken? -- probably relate to security story?", "author": "wenleix", "createdAt": "2020-08-24T23:40:03Z", "path": "presto-spark-launcher/src/main/java/com/facebook/presto/spark/launcher/PrestoSparkRunner.java", "diffHunk": "@@ -63,26 +63,39 @@ public PrestoSparkRunner(PrestoSparkDistribution distribution)\n     }\n \n     public void run(\n+            String user,\n+            Optional<Principal> principal,", "originalCommit": "32dbce345f85c8754f460bfeea9c876ef563c924", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2NDY0Mg==", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r476564642", "bodyText": "Yeah. I just wanted to expose all required parameters since I'm already modifying the interface.", "author": "arhimondr", "createdAt": "2020-08-25T16:05:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2NjMxMw=="}], "type": "inlineReview", "revised_code": {"commit": "a8457ca3dc60050c65c5fdd9a68d2ffb55b5698a", "chunk": "diff --git a/presto-spark-launcher/src/main/java/com/facebook/presto/spark/launcher/PrestoSparkRunner.java b/presto-spark-launcher/src/main/java/com/facebook/presto/spark/launcher/PrestoSparkRunner.java\nindex 4e9479012f..7788634d6a 100644\n--- a/presto-spark-launcher/src/main/java/com/facebook/presto/spark/launcher/PrestoSparkRunner.java\n+++ b/presto-spark-launcher/src/main/java/com/facebook/presto/spark/launcher/PrestoSparkRunner.java\n\n@@ -77,7 +77,7 @@ public class PrestoSparkRunner\n             Optional<String> traceToken,\n             String query,\n             Optional<String> sparkQueueName,\n-            Optional<Path> queryInfoOutputPath)\n+            Optional<Path> queryStatusInfoOutputPath)\n     {\n         IPrestoSparkQueryExecutionFactory queryExecutionFactory = driverPrestoSparkService.getQueryExecutionFactory();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk3Nzc1NA==", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r475977754", "bodyText": "Note QueryResults in Presto classic implements two interface: QueryData and QueryStatusInfo. This seems more like QueryData, so maybe PrestoSparkQueryData?", "author": "wenleix", "createdAt": "2020-08-24T23:56:22Z", "path": "presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryResults.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spark;\n+\n+import com.facebook.presto.client.Column;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class PrestoSparkQueryResults\n+{\n+    private final List<Column> columns;\n+    private final List<List<Object>> data;\n+\n+    @JsonCreator\n+    public PrestoSparkQueryResults(", "originalCommit": "ab9233e11726b940432b356a44c5447773fce4e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "99f6cdde75933156f621cd0fbda82de208276a6e", "chunk": "diff --git a/presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryResults.java b/presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryResults.java\ndeleted file mode 100644\nindex 4866764184..0000000000\n--- a/presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryResults.java\n+++ /dev/null\n\n@@ -1,50 +0,0 @@\n-/*\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.facebook.presto.spark;\n-\n-import com.facebook.presto.client.Column;\n-import com.fasterxml.jackson.annotation.JsonCreator;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.google.common.collect.ImmutableList;\n-\n-import java.util.List;\n-\n-import static java.util.Objects.requireNonNull;\n-\n-public class PrestoSparkQueryResults\n-{\n-    private final List<Column> columns;\n-    private final List<List<Object>> data;\n-\n-    @JsonCreator\n-    public PrestoSparkQueryResults(\n-            @JsonProperty(\"columns\") List<Column> columns,\n-            @JsonProperty(\"data\") List<List<Object>> data)\n-    {\n-        this.columns = ImmutableList.copyOf(requireNonNull(columns, \"columns is null\"));\n-        this.data = ImmutableList.copyOf(requireNonNull(data, \"data is null\"));\n-    }\n-\n-    @JsonProperty\n-    public List<Column> getColumns()\n-    {\n-        return columns;\n-    }\n-\n-    @JsonProperty\n-    public List<List<Object>> getData()\n-    {\n-        return data;\n-    }\n-}\n"}}, {"oid": "99f6cdde75933156f621cd0fbda82de208276a6e", "url": "https://github.com/prestodb/presto/commit/99f6cdde75933156f621cd0fbda82de208276a6e", "message": "Expose more session parameters in PrestoSparkRunner", "committedDate": "2020-08-25T16:04:54Z", "type": "commit"}, {"oid": "a8457ca3dc60050c65c5fdd9a68d2ffb55b5698a", "url": "https://github.com/prestodb/presto/commit/a8457ca3dc60050c65c5fdd9a68d2ffb55b5698a", "message": "Restructure PrestoSparkQueryInfo to resemble QueryResults", "committedDate": "2020-08-25T16:27:11Z", "type": "commit"}, {"oid": "c9b6c1523345dc4d05c006b0474df6c7d589b0c7", "url": "https://github.com/prestodb/presto/commit/c9b6c1523345dc4d05c006b0474df6c7d589b0c7", "message": "Allow to store query results into a file in Presto on Spark", "committedDate": "2020-08-25T16:32:24Z", "type": "commit"}, {"oid": "c9b6c1523345dc4d05c006b0474df6c7d589b0c7", "url": "https://github.com/prestodb/presto/commit/c9b6c1523345dc4d05c006b0474df6c7d589b0c7", "message": "Allow to store query results into a file in Presto on Spark", "committedDate": "2020-08-25T16:32:24Z", "type": "forcePushed"}]}