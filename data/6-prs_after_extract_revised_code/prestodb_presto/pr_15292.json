{"pr_number": 15292, "pr_title": "Add syntax support for CREATE MATERIALIZED VIEW", "pr_createdAt": "2020-10-08T22:55:24Z", "pr_url": "https://github.com/prestodb/presto/pull/15292", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3NDQ2NA==", "url": "https://github.com/prestodb/presto/pull/15292#discussion_r508974464", "bodyText": "break a line after this.", "author": "highker", "createdAt": "2020-10-21T03:56:31Z", "path": "presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java", "diffHunk": "@@ -558,6 +559,25 @@ protected Void visitCreateView(CreateView node, Integer indent)\n             return null;\n         }\n \n+        @Override\n+        protected Void visitCreateMaterializedView(CreateMaterializedView node, Integer indent)\n+        {\n+            builder.append(\"CREATE MATERIALIZED VIEW \");\n+            if (node.isNotExists()) {\n+                builder.append(\"IF NOT EXISTS \");\n+            }\n+            builder.append(formatName(node.getName()));", "originalCommit": "a95b356ed30889688f20ae88e972306c6271a907", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad159ab64663c79e397de04ed82e82206a5cc58d", "chunk": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java b/presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java\nindex b9a7a92866..e1c991fb46 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java\n\n@@ -567,12 +568,14 @@ public final class SqlFormatter\n                 builder.append(\"IF NOT EXISTS \");\n             }\n             builder.append(formatName(node.getName()));\n+\n             if (node.getComment().isPresent()) {\n                 builder.append(\"\\nCOMMENT \" + formatStringLiteral(node.getComment().get()));\n             }\n+\n             builder.append(formatPropertiesMultiLine(node.getProperties()));\n \n-            builder.append(\" AS\\n\");\n+            builder.append(\" AS \");\n             process(node.getQuery(), indent);\n \n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3NDc4OA==", "url": "https://github.com/prestodb/presto/pull/15292#discussion_r508974788", "bodyText": "builder.append(\" AS \");", "author": "highker", "createdAt": "2020-10-21T03:57:56Z", "path": "presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java", "diffHunk": "@@ -558,6 +559,25 @@ protected Void visitCreateView(CreateView node, Integer indent)\n             return null;\n         }\n \n+        @Override\n+        protected Void visitCreateMaterializedView(CreateMaterializedView node, Integer indent)\n+        {\n+            builder.append(\"CREATE MATERIALIZED VIEW \");\n+            if (node.isNotExists()) {\n+                builder.append(\"IF NOT EXISTS \");\n+            }\n+            builder.append(formatName(node.getName()));\n+            if (node.getComment().isPresent()) {\n+                builder.append(\"\\nCOMMENT \" + formatStringLiteral(node.getComment().get()));\n+            }\n+            builder.append(formatPropertiesMultiLine(node.getProperties()));\n+\n+            builder.append(\" AS\\n\");", "originalCommit": "a95b356ed30889688f20ae88e972306c6271a907", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad159ab64663c79e397de04ed82e82206a5cc58d", "chunk": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java b/presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java\nindex b9a7a92866..e1c991fb46 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/SqlFormatter.java\n\n@@ -567,12 +568,14 @@ public final class SqlFormatter\n                 builder.append(\"IF NOT EXISTS \");\n             }\n             builder.append(formatName(node.getName()));\n+\n             if (node.getComment().isPresent()) {\n                 builder.append(\"\\nCOMMENT \" + formatStringLiteral(node.getComment().get()));\n             }\n+\n             builder.append(formatPropertiesMultiLine(node.getProperties()));\n \n-            builder.append(\" AS\\n\");\n+            builder.append(\" AS \");\n             process(node.getQuery(), indent);\n \n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NDYxMA==", "url": "https://github.com/prestodb/presto/pull/15292#discussion_r508984610", "bodyText": "remove this as we don't use it", "author": "highker", "createdAt": "2020-10-21T04:38:06Z", "path": "presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.tree;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.util.Objects.requireNonNull;\n+\n+public class CreateMaterializedView\n+        extends Statement\n+{\n+    private final QualifiedName name;\n+    private final Query query;\n+    private final boolean notExists;\n+    private final List<Property> properties;\n+    private final Optional<String> comment;\n+\n+    public CreateMaterializedView(QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n+    {\n+        this(Optional.empty(), name, query, notExists, properties, comment);\n+    }\n+\n+    public CreateMaterializedView(NodeLocation location, QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)", "originalCommit": "a95b356ed30889688f20ae88e972306c6271a907", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad159ab64663c79e397de04ed82e82206a5cc58d", "chunk": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java\nindex 460e31688b..699bb952de 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java\n\n@@ -31,16 +31,6 @@ public class CreateMaterializedView\n     private final List<Property> properties;\n     private final Optional<String> comment;\n \n-    public CreateMaterializedView(QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n-    {\n-        this(Optional.empty(), name, query, notExists, properties, comment);\n-    }\n-\n-    public CreateMaterializedView(NodeLocation location, QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n-    {\n-        this(Optional.of(location), name, query, notExists, properties, comment);\n-    }\n-\n     public CreateMaterializedView(Optional<NodeLocation> location, QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n     {\n         super(location);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NDczMg==", "url": "https://github.com/prestodb/presto/pull/15292#discussion_r508984732", "bodyText": "I would move this to a static helper in the test", "author": "highker", "createdAt": "2020-10-21T04:38:37Z", "path": "presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.tree;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.util.Objects.requireNonNull;\n+\n+public class CreateMaterializedView\n+        extends Statement\n+{\n+    private final QualifiedName name;\n+    private final Query query;\n+    private final boolean notExists;\n+    private final List<Property> properties;\n+    private final Optional<String> comment;\n+\n+    public CreateMaterializedView(QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n+    {\n+        this(Optional.empty(), name, query, notExists, properties, comment);\n+    }", "originalCommit": "a95b356ed30889688f20ae88e972306c6271a907", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad159ab64663c79e397de04ed82e82206a5cc58d", "chunk": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java\nindex 460e31688b..699bb952de 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java\n\n@@ -31,16 +31,6 @@ public class CreateMaterializedView\n     private final List<Property> properties;\n     private final Optional<String> comment;\n \n-    public CreateMaterializedView(QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n-    {\n-        this(Optional.empty(), name, query, notExists, properties, comment);\n-    }\n-\n-    public CreateMaterializedView(NodeLocation location, QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n-    {\n-        this(Optional.of(location), name, query, notExists, properties, comment);\n-    }\n-\n     public CreateMaterializedView(Optional<NodeLocation> location, QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n     {\n         super(location);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NDg4Mg==", "url": "https://github.com/prestodb/presto/pull/15292#discussion_r508984882", "bodyText": "requireNonNull", "author": "highker", "createdAt": "2020-10-21T04:39:09Z", "path": "presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.tree;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.util.Objects.requireNonNull;\n+\n+public class CreateMaterializedView\n+        extends Statement\n+{\n+    private final QualifiedName name;\n+    private final Query query;\n+    private final boolean notExists;\n+    private final List<Property> properties;\n+    private final Optional<String> comment;\n+\n+    public CreateMaterializedView(QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n+    {\n+        this(Optional.empty(), name, query, notExists, properties, comment);\n+    }\n+\n+    public CreateMaterializedView(NodeLocation location, QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n+    {\n+        this(Optional.of(location), name, query, notExists, properties, comment);\n+    }\n+\n+    public CreateMaterializedView(Optional<NodeLocation> location, QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n+    {\n+        super(location);\n+        this.name = requireNonNull(name, \"name is null\");\n+        this.query = requireNonNull(query, \"query is null\");\n+        this.notExists = notExists;\n+        this.properties = ImmutableList.copyOf(requireNonNull(properties, \"properties is null\"));\n+        this.comment = comment;", "originalCommit": "a95b356ed30889688f20ae88e972306c6271a907", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad159ab64663c79e397de04ed82e82206a5cc58d", "chunk": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java\nindex 460e31688b..699bb952de 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/CreateMaterializedView.java\n\n@@ -31,16 +31,6 @@ public class CreateMaterializedView\n     private final List<Property> properties;\n     private final Optional<String> comment;\n \n-    public CreateMaterializedView(QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n-    {\n-        this(Optional.empty(), name, query, notExists, properties, comment);\n-    }\n-\n-    public CreateMaterializedView(NodeLocation location, QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n-    {\n-        this(Optional.of(location), name, query, notExists, properties, comment);\n-    }\n-\n     public CreateMaterializedView(Optional<NodeLocation> location, QualifiedName name, Query query, boolean notExists, List<Property> properties, Optional<String> comment)\n     {\n         super(location);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NTM0OA==", "url": "https://github.com/prestodb/presto/pull/15292#discussion_r508985348", "bodyText": "Use ImmutableList.of() instead of new ArrayList<>(); same for other places", "author": "highker", "createdAt": "2020-10-21T04:40:56Z", "path": "presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java", "diffHunk": "@@ -1485,6 +1487,43 @@ public void testCreateView()\n         assertStatement(\"CREATE VIEW \\\"awesome schema\\\".\\\"awesome view\\\" AS SELECT * FROM t\", new CreateView(QualifiedName.of(\"awesome schema\", \"awesome view\"), query, false, Optional.empty()));\n     }\n \n+    @Test\n+    public void testCreateMaterializedView()\n+    {\n+        Query query = simpleQuery(selectList(new AllColumns()), table(QualifiedName.of(\"t\")));\n+        assertStatement(\n+                \"CREATE MATERIALIZED VIEW mv\" +\n+                        \" AS SELECT * FROM t\",\n+                new CreateMaterializedView(QualifiedName.of(\"mv\"), query, false, new ArrayList<>(), Optional.empty()));", "originalCommit": "a95b356ed30889688f20ae88e972306c6271a907", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad159ab64663c79e397de04ed82e82206a5cc58d", "chunk": "diff --git a/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java b/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java\nindex 9235c0a4e7..f2784289a6 100644\n--- a/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java\n+++ b/presto-parser/src/test/java/com/facebook/presto/sql/parser/TestSqlParser.java\n\n@@ -1494,17 +1494,17 @@ public class TestSqlParser\n         assertStatement(\n                 \"CREATE MATERIALIZED VIEW mv\" +\n                         \" AS SELECT * FROM t\",\n-                new CreateMaterializedView(QualifiedName.of(\"mv\"), query, false, new ArrayList<>(), Optional.empty()));\n+                new CreateMaterializedView(Optional.empty(), QualifiedName.of(\"mv\"), query, false, ImmutableList.of(), Optional.empty()));\n \n         assertStatement(\n                 \"CREATE MATERIALIZED VIEW mv COMMENT 'A simple materialized view'\" +\n                         \" AS SELECT * FROM t\",\n-                new CreateMaterializedView(QualifiedName.of(\"mv\"), query, false, new ArrayList<>(), Optional.of(\"A simple materialized view\")));\n+                new CreateMaterializedView(Optional.empty(), QualifiedName.of(\"mv\"), query, false, ImmutableList.of(), Optional.of(\"A simple materialized view\")));\n \n         assertStatement(\n                 \"CREATE MATERIALIZED VIEW IF NOT EXISTS mv COMMENT 'A simple materialized view'\" +\n                         \" AS SELECT * FROM t\",\n-                new CreateMaterializedView(QualifiedName.of(\"mv\"), query, true, new ArrayList<>(), Optional.of(\"A simple materialized view\")));\n+                new CreateMaterializedView(Optional.empty(), QualifiedName.of(\"mv\"), query, true, ImmutableList.of(), Optional.of(\"A simple materialized view\")));\n \n         List<Property> properties = ImmutableList.of(\n                 new Property(new Identifier(\"partitioned_by\"), new ArrayConstructor(ImmutableList.of(new StringLiteral(\"ds\")))));\n"}}, {"oid": "6b4055ec35557661cb47eef37c32fb6ef849bd67", "url": "https://github.com/prestodb/presto/commit/6b4055ec35557661cb47eef37c32fb6ef849bd67", "message": "Add syntax support for CREATE MATERIALIZED VIEW\n\nMake Presto parser support CREATE MATERIALIZED VIEW syntax, ex.\n\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv\nCOMMENT 'A simple materialized view'\nWITH (\n\tpartitioned_by = ARRAY['ds'],\n\tretention_days = 90\n)\nAS SELECT * FROM t\n\nWe do not support REPLACE MATERIALIZED VIEW at the moment,\nsince that is possible to trigger the entire view refresh.\nUsers could use DROP and CREATE a new materialzied view instead.\n\nThis commit rewrites a subset of\nhttps://github.com/prestosql/presto/commit/88116a4a3fda92f0caa725d9b1a83e9b22f7dcf4\ndue to above reason.\n\nCo-Authored-By: Anjali Norwood <52180099+anjalinorwood@users.noreply.github.com>", "committedDate": "2020-10-22T18:48:37Z", "type": "forcePushed"}, {"oid": "051f7b658c6b28ba4cbb248a7ad3d9d9f2f01d9c", "url": "https://github.com/prestodb/presto/commit/051f7b658c6b28ba4cbb248a7ad3d9d9f2f01d9c", "message": "Add syntax support for CREATE MATERIALIZED VIEW\n\nMake Presto parser support CREATE MATERIALIZED VIEW syntax, ex.\n\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv\nCOMMENT 'A simple materialized view'\nWITH (\n\tpartitioned_by = ARRAY['ds'],\n\tretention_days = 90\n)\nAS SELECT * FROM t\n\nWe do not support REPLACE MATERIALIZED VIEW at the moment,\nsince that is possible to trigger the entire view refresh.\nUsers could use DROP and CREATE a new materialzied view instead.\n\nThis commit rewrites a subset of\nhttps://github.com/prestosql/presto/commit/88116a4a3fda92f0caa725d9b1a83e9b22f7dcf4\ndue to above reason.\n\nCo-Authored-By: Anjali Norwood <52180099+anjalinorwood@users.noreply.github.com>", "committedDate": "2020-10-23T03:37:59Z", "type": "forcePushed"}, {"oid": "ad159ab64663c79e397de04ed82e82206a5cc58d", "url": "https://github.com/prestodb/presto/commit/ad159ab64663c79e397de04ed82e82206a5cc58d", "message": "Add syntax support for CREATE MATERIALIZED VIEW\n\nMake Presto parser support CREATE MATERIALIZED VIEW syntax, ex.\n\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv\nCOMMENT 'A simple materialized view'\nWITH (\n\tpartitioned_by = ARRAY['ds'],\n\tretention_days = 90\n)\nAS SELECT * FROM t\n\nWe do not support REPLACE MATERIALIZED VIEW at the moment,\nsince that is possible to trigger the entire view refresh.\nUsers could use DROP and CREATE a new materialzied view instead.\n\nThis commit rewrites a subset of\nhttps://github.com/prestosql/presto/commit/88116a4a3fda92f0caa725d9b1a83e9b22f7dcf4\ndue to above reason.\n\nCo-Authored-By: Anjali Norwood <52180099+anjalinorwood@users.noreply.github.com>", "committedDate": "2020-10-23T06:20:32Z", "type": "forcePushed"}, {"oid": "2a57d24feec19ce09f5042fa8d10afd4f0edb287", "url": "https://github.com/prestodb/presto/commit/2a57d24feec19ce09f5042fa8d10afd4f0edb287", "message": "Add syntax support for CREATE MATERIALIZED VIEW\n\nMake Presto parser support CREATE MATERIALIZED VIEW syntax, ex.\n\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv\nCOMMENT 'A simple materialized view'\nWITH (\n\tpartitioned_by = ARRAY['ds'],\n\tretention_days = 90\n)\nAS SELECT * FROM t\n\nWe do not support REPLACE MATERIALIZED VIEW at the moment,\nsince that is possible to trigger the entire view refresh.\nUsers could use DROP and CREATE a new materialzied view instead.\n\nThis commit rewrites a subset of\nhttps://github.com/prestosql/presto/commit/88116a4a3fda92f0caa725d9b1a83e9b22f7dcf4\ndue to above reason.\n\nCo-Authored-By: Anjali Norwood <52180099+anjalinorwood@users.noreply.github.com>", "committedDate": "2020-10-23T06:24:55Z", "type": "commit"}, {"oid": "2a57d24feec19ce09f5042fa8d10afd4f0edb287", "url": "https://github.com/prestodb/presto/commit/2a57d24feec19ce09f5042fa8d10afd4f0edb287", "message": "Add syntax support for CREATE MATERIALIZED VIEW\n\nMake Presto parser support CREATE MATERIALIZED VIEW syntax, ex.\n\nCREATE MATERIALIZED VIEW IF NOT EXISTS mv\nCOMMENT 'A simple materialized view'\nWITH (\n\tpartitioned_by = ARRAY['ds'],\n\tretention_days = 90\n)\nAS SELECT * FROM t\n\nWe do not support REPLACE MATERIALIZED VIEW at the moment,\nsince that is possible to trigger the entire view refresh.\nUsers could use DROP and CREATE a new materialzied view instead.\n\nThis commit rewrites a subset of\nhttps://github.com/prestosql/presto/commit/88116a4a3fda92f0caa725d9b1a83e9b22f7dcf4\ndue to above reason.\n\nCo-Authored-By: Anjali Norwood <52180099+anjalinorwood@users.noreply.github.com>", "committedDate": "2020-10-23T06:24:55Z", "type": "forcePushed"}]}