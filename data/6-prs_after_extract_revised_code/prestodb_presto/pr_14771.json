{"pr_number": 14771, "pr_title": "Allow configure SQL invoked function implementation type", "pr_createdAt": "2020-07-01T23:56:16Z", "pr_url": "https://github.com/prestodb/presto/pull/14771", "timeline": [{"oid": "6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4", "url": "https://github.com/prestodb/presto/commit/6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4", "message": "Allow configure SQL invoked function implementation type", "committedDate": "2020-07-02T01:37:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg5ODEzNg==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r448898136", "bodyText": "Can we static import? You can ask IntelliJ to do this for you by pressing option + return and select the 1st option \"Add on-demand static import\" ...", "author": "caithagoras", "createdAt": "2020-07-02T10:14:37Z", "path": "presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/SqlInvokedFunctionNamespaceManagerConfig.java", "diffHunk": "@@ -14,25 +14,28 @@\n package com.facebook.presto.functionNamespace;\n \n import com.facebook.airlift.configuration.Config;\n+import com.facebook.airlift.json.JsonCodec;\n+import com.facebook.presto.spi.function.FunctionImplementationType;\n import com.facebook.presto.spi.function.RoutineCharacteristics;\n-import com.google.common.base.Splitter;\n-import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableMap;\n import io.airlift.units.Duration;\n import io.airlift.units.MinDuration;\n \n-import java.util.Set;\n+import java.util.Map;\n \n+import static com.facebook.airlift.json.JsonCodec.mapJsonCodec;\n+import static com.facebook.presto.spi.function.FunctionImplementationType.BUILTIN;\n import static com.facebook.presto.spi.function.RoutineCharacteristics.Language.SQL;\n import static java.util.concurrent.TimeUnit.HOURS;\n import static java.util.concurrent.TimeUnit.MINUTES;\n \n public class SqlInvokedFunctionNamespaceManagerConfig\n {\n-    private static final Splitter LANGUAGE_SPLITTER = Splitter.on(',').omitEmptyStrings().trimResults();\n+    private static final JsonCodec<Map<RoutineCharacteristics.Language, FunctionImplementationType>> FUNCTION_LANGUAGES_CODEC = mapJsonCodec(RoutineCharacteristics.Language.class, FunctionImplementationType.class);", "originalCommit": "6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyNTA5OA==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r449225098", "bodyText": "That would import \".*\" for me. How to avoid that?", "author": "rongrong", "createdAt": "2020-07-02T19:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg5ODEzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIzODc0MQ==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r449238741", "bodyText": "You can use ctrl + option + o on this file to optimize imports.", "author": "caithagoras", "createdAt": "2020-07-02T20:00:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg5ODEzNg=="}], "type": "inlineReview", "revised_code": {"commit": "181c313707d29f7312c26fd616b07c395d2b7b0f", "chunk": "diff --git a/presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/SqlInvokedFunctionNamespaceManagerConfig.java b/presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/SqlInvokedFunctionNamespaceManagerConfig.java\nindex db5db8dc0c..9846694999 100644\n--- a/presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/SqlInvokedFunctionNamespaceManagerConfig.java\n+++ b/presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/SqlInvokedFunctionNamespaceManagerConfig.java\n\n@@ -16,7 +16,6 @@ package com.facebook.presto.functionNamespace;\n import com.facebook.airlift.configuration.Config;\n import com.facebook.airlift.json.JsonCodec;\n import com.facebook.presto.spi.function.FunctionImplementationType;\n-import com.facebook.presto.spi.function.RoutineCharacteristics;\n import com.google.common.collect.ImmutableMap;\n import io.airlift.units.Duration;\n import io.airlift.units.MinDuration;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkwMTE5OA==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r448901198", "bodyText": "Are we going to remove getFunctionImplementationType this method now that it does not have any callers?", "author": "caithagoras", "createdAt": "2020-07-02T10:20:12Z", "path": "presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/AbstractSqlInvokedFunctionNamespaceManager.java", "diffHunk": "@@ -219,14 +219,20 @@ protected static FunctionMetadata sqlInvokedFunctionToMetadata(SqlInvokedFunctio\n                         .collect(toImmutableList())),\n                 function.getSignature().getReturnType(),\n                 SCALAR,\n-                function.getFunctionImplementationType(),", "originalCommit": "6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyMzczOQ==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r449223739", "bodyText": "It is removed.", "author": "rongrong", "createdAt": "2020-07-02T19:24:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkwMTE5OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "181c313707d29f7312c26fd616b07c395d2b7b0f", "url": "https://github.com/prestodb/presto/commit/181c313707d29f7312c26fd616b07c395d2b7b0f", "message": "Allow configure SQL invoked function implementation type", "committedDate": "2020-07-02T19:28:26Z", "type": "forcePushed"}, {"oid": "26585f21ba06615e027f776a797d07c54a30a789", "url": "https://github.com/prestodb/presto/commit/26585f21ba06615e027f776a797d07c54a30a789", "message": "Allow configure SQL invoked function implementation type", "committedDate": "2020-07-06T19:16:28Z", "type": "commit"}, {"oid": "26585f21ba06615e027f776a797d07c54a30a789", "url": "https://github.com/prestodb/presto/commit/26585f21ba06615e027f776a797d07c54a30a789", "message": "Allow configure SQL invoked function implementation type", "committedDate": "2020-07-06T19:16:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MTgyNA==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r450471824", "bodyText": "It seems a bit awkward to me that a json map needs to be specified in config, and also only string-to-string json map is allowed here. Since the engine does need to understand the enums, what about changing the config properties to\nremote-thrift-languages=language1,language2\n\nThis way, json is avoided, and user also don't need to specify the redundant entry for Language=SQL.\nEven if we want to support implementation type http, the enum value needs to be added to spi and we can support that in FNM by adding a new config like\nremote-http-languages=language3,language4", "author": "caithagoras", "createdAt": "2020-07-06T20:48:36Z", "path": "presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/SqlInvokedFunctionNamespaceManagerConfig.java", "diffHunk": "@@ -60,17 +62,15 @@ public SqlInvokedFunctionNamespaceManagerConfig setFunctionInstanceCacheExpirati\n         return this;\n     }\n \n-    public Set<RoutineCharacteristics.Language> getSupportedFunctionLanguages()\n+    public Map<Language, FunctionImplementationType> getSupportedFunctionLanguages()\n     {\n         return supportedFunctionLanguages;\n     }\n \n     @Config(\"supported-function-languages\")\n     public SqlInvokedFunctionNamespaceManagerConfig setSupportedFunctionLanguages(String languages)\n     {\n-        ImmutableSet.Builder<RoutineCharacteristics.Language> languageBuilder = ImmutableSet.builder();\n-        Splitter.on(',').omitEmptyStrings().trimResults().split(languages).forEach(language -> languageBuilder.add(new RoutineCharacteristics.Language(language)));\n-        this.supportedFunctionLanguages = languageBuilder.build();\n+        this.supportedFunctionLanguages = FUNCTION_LANGUAGES_CODEC.fromJson(languages);", "originalCommit": "26585f21ba06615e027f776a797d07c54a30a789", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MjQ1Nw==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r450472457", "bodyText": "Since it's a simple change, if we choose to do it, we might want to do it now to avoid changing the way config properties is specified in the future.", "author": "caithagoras", "createdAt": "2020-07-06T20:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MTgyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNjAzMA==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r450506030", "bodyText": "Running SQL remotely is a valid potential option. It's a little strange to disallow it. The downside of your proposal is now we have to cross validate whether all languages has implementation type configured and all implementation type configuration is in the configured languages and a language doesn't have multiple implementation type configured... So cumbersome JSON doesn't sound like a terrible idea anymore in comparison. If this gets more annoying I think we should change this to a json file and have the json in a separate file (similar to file based resource groups configuration). Currently it's not annoying enough so I didn't bother. I can change to that if you prefer.", "author": "rongrong", "createdAt": "2020-07-06T22:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MTgyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUxOTg0Mw==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r450519843", "bodyText": "The simplicity with JSON is due to the use of codec, which means we're not getting user-friendly error messages, but I don't have strong opinions here.", "author": "caithagoras", "createdAt": "2020-07-06T22:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MTgyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUyMzY2OQ==", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r450523669", "bodyText": "The simplicity with JSON is due to the use of codec, which means we're not getting user-friendly error messages, but I don't have strong opinions here.\n\nAlso that is's a map so we don't need to validate all keys have values or each value is only for 1 key. But ya, JSON codec is cool. ;)", "author": "rongrong", "createdAt": "2020-07-06T23:06:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MTgyNA=="}], "type": "inlineReview", "revised_code": null}]}