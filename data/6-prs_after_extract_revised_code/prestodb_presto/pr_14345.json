{"pr_number": 14345, "pr_title": " Drop presto-orc's dependency on presto-memory-context", "pr_createdAt": "2020-04-06T03:36:07Z", "pr_url": "https://github.com/prestodb/presto/pull/14345", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMDY5OA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404230698", "bodyText": "private", "author": "highker", "createdAt": "2020-04-06T16:35:41Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.memory.context.AggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcAggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcLocalMemoryContext;\n+\n+import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+\n+public class HiveOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    private AggregatedMemoryContext delegate;\n+\n+    public HiveOrcAggregatedMemoryContext()\n+    {\n+        this.delegate = newSimpleAggregatedMemoryContext();\n+    }\n+\n+    public HiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\nindex 4d2daeda43..3dc24140ec 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\n\n@@ -18,20 +18,21 @@ import com.facebook.presto.orc.OrcAggregatedMemoryContext;\n import com.facebook.presto.orc.OrcLocalMemoryContext;\n \n import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+import static java.util.Objects.requireNonNull;\n \n public class HiveOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n-    private AggregatedMemoryContext delegate;\n+    private final AggregatedMemoryContext delegate;\n \n     public HiveOrcAggregatedMemoryContext()\n     {\n         this.delegate = newSimpleAggregatedMemoryContext();\n     }\n \n-    public HiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n+    private HiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n     {\n-        this.delegate = delegate;\n+        this.delegate = requireNonNull(delegate, \"delegate is null\");\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMDgzMw==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404230833", "bodyText": "requireNonNull", "author": "highker", "createdAt": "2020-04-06T16:35:53Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.memory.context.AggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcAggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcLocalMemoryContext;\n+\n+import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+\n+public class HiveOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    private AggregatedMemoryContext delegate;\n+\n+    public HiveOrcAggregatedMemoryContext()\n+    {\n+        this.delegate = newSimpleAggregatedMemoryContext();\n+    }\n+\n+    public HiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n+    {\n+        this.delegate = delegate;", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\nindex 4d2daeda43..3dc24140ec 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\n\n@@ -18,20 +18,21 @@ import com.facebook.presto.orc.OrcAggregatedMemoryContext;\n import com.facebook.presto.orc.OrcLocalMemoryContext;\n \n import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+import static java.util.Objects.requireNonNull;\n \n public class HiveOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n-    private AggregatedMemoryContext delegate;\n+    private final AggregatedMemoryContext delegate;\n \n     public HiveOrcAggregatedMemoryContext()\n     {\n         this.delegate = newSimpleAggregatedMemoryContext();\n     }\n \n-    public HiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n+    private HiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n     {\n-        this.delegate = delegate;\n+        this.delegate = requireNonNull(delegate, \"delegate is null\");\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMTE0OQ==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404231149", "bodyText": "final", "author": "highker", "createdAt": "2020-04-06T16:36:25Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.memory.context.AggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcAggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcLocalMemoryContext;\n+\n+import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+\n+public class HiveOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    private AggregatedMemoryContext delegate;", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\nindex 4d2daeda43..3dc24140ec 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\n\n@@ -18,20 +18,21 @@ import com.facebook.presto.orc.OrcAggregatedMemoryContext;\n import com.facebook.presto.orc.OrcLocalMemoryContext;\n \n import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+import static java.util.Objects.requireNonNull;\n \n public class HiveOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n-    private AggregatedMemoryContext delegate;\n+    private final AggregatedMemoryContext delegate;\n \n     public HiveOrcAggregatedMemoryContext()\n     {\n         this.delegate = newSimpleAggregatedMemoryContext();\n     }\n \n-    public HiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n+    private HiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n     {\n-        this.delegate = delegate;\n+        this.delegate = requireNonNull(delegate, \"delegate is null\");\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMTIwMg==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404231202", "bodyText": "final", "author": "highker", "createdAt": "2020-04-06T16:36:30Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.memory.context.LocalMemoryContext;\n+import com.facebook.presto.orc.OrcLocalMemoryContext;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+public class HiveOrcLocalMemoryContext\n+        implements OrcLocalMemoryContext\n+{\n+    private LocalMemoryContext delegate;", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java\nindex 56d5f23206..e29f229995 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java\n\n@@ -17,14 +17,16 @@ import com.facebook.presto.memory.context.LocalMemoryContext;\n import com.facebook.presto.orc.OrcLocalMemoryContext;\n import com.google.common.util.concurrent.ListenableFuture;\n \n+import static java.util.Objects.requireNonNull;\n+\n public class HiveOrcLocalMemoryContext\n         implements OrcLocalMemoryContext\n {\n-    private LocalMemoryContext delegate;\n+    private final LocalMemoryContext delegate;\n \n-    public HiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n+    HiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n     {\n-        this.delegate = delegate;\n+        this.delegate = requireNonNull(delegate, \"delegate is null\");\n     }\n \n     public ListenableFuture<?> setBytes(long bytes)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMTMzMQ==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404231331", "bodyText": "requireNonNull", "author": "highker", "createdAt": "2020-04-06T16:36:41Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.memory.context.LocalMemoryContext;\n+import com.facebook.presto.orc.OrcLocalMemoryContext;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+public class HiveOrcLocalMemoryContext\n+        implements OrcLocalMemoryContext\n+{\n+    private LocalMemoryContext delegate;\n+\n+    public HiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n+    {\n+        this.delegate = delegate;", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java\nindex 56d5f23206..e29f229995 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java\n\n@@ -17,14 +17,16 @@ import com.facebook.presto.memory.context.LocalMemoryContext;\n import com.facebook.presto.orc.OrcLocalMemoryContext;\n import com.google.common.util.concurrent.ListenableFuture;\n \n+import static java.util.Objects.requireNonNull;\n+\n public class HiveOrcLocalMemoryContext\n         implements OrcLocalMemoryContext\n {\n-    private LocalMemoryContext delegate;\n+    private final LocalMemoryContext delegate;\n \n-    public HiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n+    HiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n     {\n-        this.delegate = delegate;\n+        this.delegate = requireNonNull(delegate, \"delegate is null\");\n     }\n \n     public ListenableFuture<?> setBytes(long bytes)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMTY0Ng==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404231646", "bodyText": "package-private", "author": "highker", "createdAt": "2020-04-06T16:37:13Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.memory.context.LocalMemoryContext;\n+import com.facebook.presto.orc.OrcLocalMemoryContext;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+public class HiveOrcLocalMemoryContext\n+        implements OrcLocalMemoryContext\n+{\n+    private LocalMemoryContext delegate;\n+\n+    public HiveOrcLocalMemoryContext(LocalMemoryContext delegate)", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java\nindex 56d5f23206..e29f229995 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcLocalMemoryContext.java\n\n@@ -17,14 +17,16 @@ import com.facebook.presto.memory.context.LocalMemoryContext;\n import com.facebook.presto.orc.OrcLocalMemoryContext;\n import com.google.common.util.concurrent.ListenableFuture;\n \n+import static java.util.Objects.requireNonNull;\n+\n public class HiveOrcLocalMemoryContext\n         implements OrcLocalMemoryContext\n {\n-    private LocalMemoryContext delegate;\n+    private final LocalMemoryContext delegate;\n \n-    public HiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n+    HiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n     {\n-        this.delegate = delegate;\n+        this.delegate = requireNonNull(delegate, \"delegate is null\");\n     }\n \n     public ListenableFuture<?> setBytes(long bytes)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMjMyNQ==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404232325", "bodyText": "nit: OrcAggregatedMemoryContext. Use interfaces whenever possible on declaration. Same for all other places.", "author": "highker", "createdAt": "2020-04-06T16:38:14Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcBatchPageSourceFactory.java", "diffHunk": "@@ -236,9 +235,9 @@ public static OrcBatchPageSource createOrcPageSource(\n             throw new PrestoException(HIVE_CANNOT_OPEN_SPLIT, splitError(e, path, start, length), e);\n         }\n \n-        AggregatedMemoryContext systemMemoryUsage = newSimpleAggregatedMemoryContext();\n+        HiveOrcAggregatedMemoryContext systemMemoryUsage = new HiveOrcAggregatedMemoryContext();", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcBatchPageSourceFactory.java b/presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcBatchPageSourceFactory.java\nindex 370dc6b053..bf17bad138 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcBatchPageSourceFactory.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcBatchPageSourceFactory.java\n\n@@ -235,9 +236,9 @@ public class OrcBatchPageSourceFactory\n             throw new PrestoException(HIVE_CANNOT_OPEN_SPLIT, splitError(e, path, start, length), e);\n         }\n \n-        HiveOrcAggregatedMemoryContext systemMemoryUsage = new HiveOrcAggregatedMemoryContext();\n+        OrcAggregatedMemoryContext systemMemoryUsage = new HiveOrcAggregatedMemoryContext();\n         try {\n-            OrcReader reader = new OrcReader(orcDataSource, orcEncoding, orcFileTailSource, stripeMetadataSource, orcReaderOptions, hiveFileContext.isCacheable(), new HiveOrcAggregatedMemoryContext());\n+            OrcReader reader = new OrcReader(orcDataSource, orcEncoding, orcFileTailSource, stripeMetadataSource, new HiveOrcAggregatedMemoryContext(), orcReaderOptions, hiveFileContext.isCacheable());\n \n             List<HiveColumnHandle> physicalColumns = getPhysicalHiveColumnHandles(columns, useOrcColumnNames, reader, path);\n             ImmutableMap.Builder<Integer, Type> includedColumns = ImmutableMap.builder();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNDg3Mw==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404234873", "bodyText": "Move this above orcReaderOptions", "author": "highker", "createdAt": "2020-04-06T16:42:00Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java", "diffHunk": "@@ -72,10 +70,11 @@ public OrcReader(\n             OrcFileTailSource orcFileTailSource,\n             StripeMetadataSource stripeMetadataSource,\n             OrcReaderOptions orcReaderOptions,\n-            boolean cacheable)\n+            boolean cacheable,\n+            OrcAggregatedMemoryContext aggregatedMemoryContext)", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java b/presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java\nindex 3ffecbcade..9ac25702fd 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java\n\n@@ -69,12 +70,12 @@ public class OrcReader\n             OrcEncoding orcEncoding,\n             OrcFileTailSource orcFileTailSource,\n             StripeMetadataSource stripeMetadataSource,\n+            OrcAggregatedMemoryContext aggregatedMemoryContext,\n             OrcReaderOptions orcReaderOptions,\n-            boolean cacheable,\n-            OrcAggregatedMemoryContext aggregatedMemoryContext)\n+            boolean cacheable)\n             throws IOException\n     {\n-        this(orcDataSource, orcEncoding, orcFileTailSource, stripeMetadataSource, Optional.empty(), orcReaderOptions, cacheable, aggregatedMemoryContext);\n+        this(orcDataSource, orcEncoding, orcFileTailSource, stripeMetadataSource, Optional.empty(), aggregatedMemoryContext, orcReaderOptions, cacheable);\n     }\n \n     OrcReader(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNjA5Mw==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404236093", "bodyText": "Nah, we cannot return null. We should return another no-op memory context.", "author": "highker", "createdAt": "2020-04-06T16:43:48Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+public class NoopOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    public OrcAggregatedMemoryContext newOrcAggregatedMemoryContext()\n+    {\n+        return null;", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\nindex de13485497..380fb349b8 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n\n@@ -16,14 +16,16 @@ package com.facebook.presto.orc;\n public class NoopOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n+    public static final NoopOrcAggregatedMemoryContext NOOP_ORC_AGGREGATED_MEMORY_CONTEXT = new NoopOrcAggregatedMemoryContext();\n+\n     public OrcAggregatedMemoryContext newOrcAggregatedMemoryContext()\n     {\n-        return null;\n+        return new NoopOrcAggregatedMemoryContext();\n     }\n \n     public OrcLocalMemoryContext newOrcLocalMemoryContext(String allocationTag)\n     {\n-        return null;\n+        return new NoopOrcLocalMemoryContext();\n     }\n \n     public long getBytes()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNjIyNQ==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404236225", "bodyText": "same", "author": "highker", "createdAt": "2020-04-06T16:43:59Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+public class NoopOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    public OrcAggregatedMemoryContext newOrcAggregatedMemoryContext()\n+    {\n+        return null;\n+    }\n+\n+    public OrcLocalMemoryContext newOrcLocalMemoryContext(String allocationTag)\n+    {\n+        return null;", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\nindex de13485497..380fb349b8 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n\n@@ -16,14 +16,16 @@ package com.facebook.presto.orc;\n public class NoopOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n+    public static final NoopOrcAggregatedMemoryContext NOOP_ORC_AGGREGATED_MEMORY_CONTEXT = new NoopOrcAggregatedMemoryContext();\n+\n     public OrcAggregatedMemoryContext newOrcAggregatedMemoryContext()\n     {\n-        return null;\n+        return new NoopOrcAggregatedMemoryContext();\n     }\n \n     public OrcLocalMemoryContext newOrcLocalMemoryContext(String allocationTag)\n     {\n-        return null;\n+        return new NoopOrcLocalMemoryContext();\n     }\n \n     public long getBytes()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNjg1NA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404236854", "bodyText": "make a static final variable in class NoopOrcAggregatedMemoryContext so we don't have to \"new\" it every time.", "author": "highker", "createdAt": "2020-04-06T16:44:54Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java", "diffHunk": "@@ -285,12 +285,13 @@ static void validateFile(\n                     new StorageStripeMetadataSource(),\n                     Optional.of(writeValidation),\n                     orcReaderOptions,\n-                    false);\n+                    false,\n+                    new NoopOrcAggregatedMemoryContext());\n             try (OrcBatchRecordReader orcRecordReader = orcReader.createBatchRecordReader(\n                     readTypes.build(),\n                     OrcPredicate.TRUE,\n                     hiveStorageTimeZone,\n-                    newSimpleAggregatedMemoryContext(),\n+                    new NoopOrcAggregatedMemoryContext(),", "originalCommit": "6fd87a84f33a0b67cee895dfe4498c75895775c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNTk0Mg==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404315942", "bodyText": "I am not sure if Noop is a valid argument here. Because its not equivalent of newSimpleAggregatedMemoryContext(). Should we instead use the OrcAggregatedMemoryContext  sent to OrcReader ?\nAlso looks like tests in TestOrcReaderMemoryUsage expect a valid memory context rather than a noop one as they assert on reader.getCurrentStripeRetainedSizeInBytes().  Let me know your comments.", "author": "NikhilCollooru", "createdAt": "2020-04-06T18:54:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNjg1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyMTU4NQ==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404321585", "bodyText": "You need to pass the HiveOrc memory context rather than NOOP_ORC_AGGREGATED_MEMORY_CONTEXT in the test right?", "author": "highker", "createdAt": "2020-04-06T19:04:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNjg1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzNTUxNA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404335514", "bodyText": "This test is in presto-orc module", "author": "NikhilCollooru", "createdAt": "2020-04-06T19:29:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNjg1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzOTU5Nw==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404339597", "bodyText": "That is OK, presto-orc can depend on anything (e.g., presto-main) as long as they are in test scope. In this case, (I guess we cannot even depend on presto-hive for test scope because we will have circular dependency), we can either\n\nMove the test to presto-hive, or\n(1) copy HiveOrc..Context to presto-orc as TestingHiveOrc..Context and use that and (2) make presto-orc depending on presto-memory-context with test scope.", "author": "highker", "createdAt": "2020-04-06T19:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNjg1NA=="}], "type": "inlineReview", "revised_code": {"commit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java b/presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java\nindex 3ffecbcade..9ac25702fd 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/OrcReader.java\n\n@@ -284,14 +285,14 @@ public class OrcReader\n                     new StorageOrcFileTailSource(),\n                     new StorageStripeMetadataSource(),\n                     Optional.of(writeValidation),\n+                    NOOP_ORC_AGGREGATED_MEMORY_CONTEXT,\n                     orcReaderOptions,\n-                    false,\n-                    new NoopOrcAggregatedMemoryContext());\n+                    false);\n             try (OrcBatchRecordReader orcRecordReader = orcReader.createBatchRecordReader(\n                     readTypes.build(),\n                     OrcPredicate.TRUE,\n                     hiveStorageTimeZone,\n-                    new NoopOrcAggregatedMemoryContext(),\n+                    NOOP_ORC_AGGREGATED_MEMORY_CONTEXT,\n                     INITIAL_BATCH_SIZE)) {\n                 while (orcRecordReader.nextBatch() >= 0) {\n                     // ignored\n"}}, {"oid": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "url": "https://github.com/prestodb/presto/commit/8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "message": " Drop presto-orc's dependency on presto-memory-context", "committedDate": "2020-04-06T18:41:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNTk4MA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404315980", "bodyText": "return a completed future; note that we almost never pass null objects in our codebase", "author": "highker", "createdAt": "2020-04-06T18:54:23Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+public class NoopOrcLocalMemoryContext\n+        implements OrcLocalMemoryContext\n+{\n+    @Override\n+    public ListenableFuture<?> setBytes(long bytes)\n+    {\n+        return null;", "originalCommit": "8ac95f81ddea2b48d46ae214bb2d99ce403e57de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzNjM1OA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404336358", "bodyText": "Oh okay. will keep in mind.", "author": "NikhilCollooru", "createdAt": "2020-04-06T19:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNTk4MA=="}], "type": "inlineReview", "revised_code": {"commit": "58e25b4dfde6e4876ca29916198fc7dad4443206", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java\nindex ee40359115..c560d3452c 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java\n\n@@ -13,6 +13,7 @@\n  */\n package com.facebook.presto.orc;\n \n+import com.google.common.util.concurrent.Futures;\n import com.google.common.util.concurrent.ListenableFuture;\n \n public class NoopOrcLocalMemoryContext\n"}}, {"oid": "58e25b4dfde6e4876ca29916198fc7dad4443206", "url": "https://github.com/prestodb/presto/commit/58e25b4dfde6e4876ca29916198fc7dad4443206", "message": " Drop presto-orc's dependency on presto-memory-context", "committedDate": "2020-04-07T08:21:39Z", "type": "forcePushed"}, {"oid": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "url": "https://github.com/prestodb/presto/commit/d036521b41d80c9adaf7f474055239a51c4c5ce7", "message": " Drop presto-orc's dependency on presto-memory-context", "committedDate": "2020-04-07T08:42:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NzIwNA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r404987204", "bodyText": "this(this.delegate = newSimpleAggregatedMemoryContext());", "author": "highker", "createdAt": "2020-04-07T17:30:02Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.presto.memory.context.AggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcAggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcLocalMemoryContext;\n+\n+import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+import static java.util.Objects.requireNonNull;\n+\n+public class HiveOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    private final AggregatedMemoryContext delegate;\n+\n+    public HiveOrcAggregatedMemoryContext()\n+    {\n+        this.delegate = newSimpleAggregatedMemoryContext();", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE2MjIxMw==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405162213", "bodyText": "i think you meant this(newSimpleAggregatedMemoryContext()). Done.", "author": "NikhilCollooru", "createdAt": "2020-04-07T22:58:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NzIwNA=="}], "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\nindex 3dc24140ec..174978ed8d 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveOrcAggregatedMemoryContext.java\n\n@@ -27,7 +27,7 @@ public class HiveOrcAggregatedMemoryContext\n \n     public HiveOrcAggregatedMemoryContext()\n     {\n-        this.delegate = newSimpleAggregatedMemoryContext();\n+        this(newSimpleAggregatedMemoryContext());\n     }\n \n     private HiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0MDQ5Ng==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405040496", "bodyText": "return NOOP_ORC_AGGREGATED_MEMORY_CONTEXT", "author": "highker", "createdAt": "2020-04-07T18:56:39Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+public class NoopOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    public static final NoopOrcAggregatedMemoryContext NOOP_ORC_AGGREGATED_MEMORY_CONTEXT = new NoopOrcAggregatedMemoryContext();\n+\n+    public OrcAggregatedMemoryContext newOrcAggregatedMemoryContext()\n+    {\n+        return new NoopOrcAggregatedMemoryContext();", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\nindex 380fb349b8..b411746a6e 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n\n@@ -13,26 +13,32 @@\n  */\n package com.facebook.presto.orc;\n \n+import static com.facebook.presto.orc.NoopOrcLocalMemoryContext.NOOP_ORC_LOCAL_MEMORY_CONTEXT;\n+\n public class NoopOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n     public static final NoopOrcAggregatedMemoryContext NOOP_ORC_AGGREGATED_MEMORY_CONTEXT = new NoopOrcAggregatedMemoryContext();\n \n+    @Override\n     public OrcAggregatedMemoryContext newOrcAggregatedMemoryContext()\n     {\n-        return new NoopOrcAggregatedMemoryContext();\n+        return NOOP_ORC_AGGREGATED_MEMORY_CONTEXT;\n     }\n \n+    @Override\n     public OrcLocalMemoryContext newOrcLocalMemoryContext(String allocationTag)\n     {\n-        return new NoopOrcLocalMemoryContext();\n+        return NOOP_ORC_LOCAL_MEMORY_CONTEXT;\n     }\n \n+    @Override\n     public long getBytes()\n     {\n         return 0;\n     }\n \n+    @Override\n     public void close()\n     {\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0MDcyMg==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405040722", "bodyText": "Make a public static const on NoopOrcLocalMemoryContext as well", "author": "highker", "createdAt": "2020-04-07T18:57:02Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+import com.google.common.util.concurrent.Futures;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+public class NoopOrcLocalMemoryContext", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java\nindex c560d3452c..662cb29a78 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcLocalMemoryContext.java\n\n@@ -19,6 +19,8 @@ import com.google.common.util.concurrent.ListenableFuture;\n public class NoopOrcLocalMemoryContext\n         implements OrcLocalMemoryContext\n {\n+    public static final NoopOrcLocalMemoryContext NOOP_ORC_LOCAL_MEMORY_CONTEXT = new NoopOrcLocalMemoryContext();\n+\n     @Override\n     public ListenableFuture<?> setBytes(long bytes)\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0MDgwOA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405040808", "bodyText": "refer to the const.", "author": "highker", "createdAt": "2020-04-07T18:57:12Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+public class NoopOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    public static final NoopOrcAggregatedMemoryContext NOOP_ORC_AGGREGATED_MEMORY_CONTEXT = new NoopOrcAggregatedMemoryContext();\n+\n+    public OrcAggregatedMemoryContext newOrcAggregatedMemoryContext()\n+    {\n+        return new NoopOrcAggregatedMemoryContext();\n+    }\n+\n+    public OrcLocalMemoryContext newOrcLocalMemoryContext(String allocationTag)\n+    {\n+        return new NoopOrcLocalMemoryContext();", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\nindex 380fb349b8..b411746a6e 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n\n@@ -13,26 +13,32 @@\n  */\n package com.facebook.presto.orc;\n \n+import static com.facebook.presto.orc.NoopOrcLocalMemoryContext.NOOP_ORC_LOCAL_MEMORY_CONTEXT;\n+\n public class NoopOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n     public static final NoopOrcAggregatedMemoryContext NOOP_ORC_AGGREGATED_MEMORY_CONTEXT = new NoopOrcAggregatedMemoryContext();\n \n+    @Override\n     public OrcAggregatedMemoryContext newOrcAggregatedMemoryContext()\n     {\n-        return new NoopOrcAggregatedMemoryContext();\n+        return NOOP_ORC_AGGREGATED_MEMORY_CONTEXT;\n     }\n \n+    @Override\n     public OrcLocalMemoryContext newOrcLocalMemoryContext(String allocationTag)\n     {\n-        return new NoopOrcLocalMemoryContext();\n+        return NOOP_ORC_LOCAL_MEMORY_CONTEXT;\n     }\n \n+    @Override\n     public long getBytes()\n     {\n         return 0;\n     }\n \n+    @Override\n     public void close()\n     {\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0MTU3Mw==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405041573", "bodyText": "Add @Override to all the methods in this class", "author": "highker", "createdAt": "2020-04-07T18:58:27Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+public class NoopOrcAggregatedMemoryContext", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\nindex 380fb349b8..b411746a6e 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/NoopOrcAggregatedMemoryContext.java\n\n@@ -13,26 +13,32 @@\n  */\n package com.facebook.presto.orc;\n \n+import static com.facebook.presto.orc.NoopOrcLocalMemoryContext.NOOP_ORC_LOCAL_MEMORY_CONTEXT;\n+\n public class NoopOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n     public static final NoopOrcAggregatedMemoryContext NOOP_ORC_AGGREGATED_MEMORY_CONTEXT = new NoopOrcAggregatedMemoryContext();\n \n+    @Override\n     public OrcAggregatedMemoryContext newOrcAggregatedMemoryContext()\n     {\n-        return new NoopOrcAggregatedMemoryContext();\n+        return NOOP_ORC_AGGREGATED_MEMORY_CONTEXT;\n     }\n \n+    @Override\n     public OrcLocalMemoryContext newOrcLocalMemoryContext(String allocationTag)\n     {\n-        return new NoopOrcLocalMemoryContext();\n+        return NOOP_ORC_LOCAL_MEMORY_CONTEXT;\n     }\n \n+    @Override\n     public long getBytes()\n     {\n         return 0;\n     }\n \n+    @Override\n     public void close()\n     {\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0Mjg5OQ==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405042899", "bodyText": "Use this(...)", "author": "highker", "createdAt": "2020-04-07T19:00:28Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+import com.facebook.presto.memory.context.AggregatedMemoryContext;\n+\n+import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+import static java.util.Objects.requireNonNull;\n+\n+public class TestingHiveOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    private final AggregatedMemoryContext delegate;\n+\n+    public TestingHiveOrcAggregatedMemoryContext()\n+    {\n+        this.delegate = newSimpleAggregatedMemoryContext();", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java\nindex 23b85ccad8..0e5ab74c09 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java\n\n@@ -21,11 +21,16 @@ import static java.util.Objects.requireNonNull;\n public class TestingHiveOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n+    /*\n+     * This class is a copy of HiveOrcAggregatedMemoryContext.\n+     * Any changes made to HiveOrcAggregatedMemoryContext should be made here as well\n+     */\n+\n     private final AggregatedMemoryContext delegate;\n \n     public TestingHiveOrcAggregatedMemoryContext()\n     {\n-        this.delegate = newSimpleAggregatedMemoryContext();\n+        this(newSimpleAggregatedMemoryContext());\n     }\n \n     private TestingHiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0MzE1NA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405043154", "bodyText": "Make a javadoc to explain this is copy of HiveOrc...", "author": "highker", "createdAt": "2020-04-07T19:00:55Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+import com.facebook.presto.memory.context.AggregatedMemoryContext;\n+\n+import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+import static java.util.Objects.requireNonNull;\n+\n+public class TestingHiveOrcAggregatedMemoryContext", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java\nindex 23b85ccad8..0e5ab74c09 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java\n\n@@ -21,11 +21,16 @@ import static java.util.Objects.requireNonNull;\n public class TestingHiveOrcAggregatedMemoryContext\n         implements OrcAggregatedMemoryContext\n {\n+    /*\n+     * This class is a copy of HiveOrcAggregatedMemoryContext.\n+     * Any changes made to HiveOrcAggregatedMemoryContext should be made here as well\n+     */\n+\n     private final AggregatedMemoryContext delegate;\n \n     public TestingHiveOrcAggregatedMemoryContext()\n     {\n-        this.delegate = newSimpleAggregatedMemoryContext();\n+        this(newSimpleAggregatedMemoryContext());\n     }\n \n     private TestingHiveOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0Mzg4NA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405043884", "bodyText": "@Override", "author": "highker", "createdAt": "2020-04-07T19:02:13Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+import com.facebook.presto.memory.context.LocalMemoryContext;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class TestingHiveOrcLocalMemoryContext\n+        implements OrcLocalMemoryContext\n+{\n+    private final LocalMemoryContext delegate;\n+\n+    TestingHiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n+    {\n+        this.delegate = requireNonNull(delegate, \"delegate is null\");\n+    }\n+", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java\nindex 9a5eaf219a..f58208da7f 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java\n\n@@ -21,6 +21,11 @@ import static java.util.Objects.requireNonNull;\n public class TestingHiveOrcLocalMemoryContext\n         implements OrcLocalMemoryContext\n {\n+    /*\n+     * This class is a copy of HiveOrcLocalMemoryContext.\n+     * Any changes made to HiveOrcLocalMemoryContext should be made here as well\n+     */\n+\n     private final LocalMemoryContext delegate;\n \n     TestingHiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0MzkxNw==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405043917", "bodyText": "@Override", "author": "highker", "createdAt": "2020-04-07T19:02:16Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+import com.facebook.presto.memory.context.LocalMemoryContext;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class TestingHiveOrcLocalMemoryContext\n+        implements OrcLocalMemoryContext\n+{\n+    private final LocalMemoryContext delegate;\n+\n+    TestingHiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n+    {\n+        this.delegate = requireNonNull(delegate, \"delegate is null\");\n+    }\n+\n+    public ListenableFuture<?> setBytes(long bytes)\n+    {\n+        return delegate.setBytes(bytes);\n+    }\n+", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java\nindex 9a5eaf219a..f58208da7f 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java\n\n@@ -21,6 +21,11 @@ import static java.util.Objects.requireNonNull;\n public class TestingHiveOrcLocalMemoryContext\n         implements OrcLocalMemoryContext\n {\n+    /*\n+     * This class is a copy of HiveOrcLocalMemoryContext.\n+     * Any changes made to HiveOrcLocalMemoryContext should be made here as well\n+     */\n+\n     private final LocalMemoryContext delegate;\n \n     TestingHiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0NDY3OA==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405044678", "bodyText": "same", "author": "highker", "createdAt": "2020-04-07T19:03:34Z", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.raptor;\n+\n+import com.facebook.presto.memory.context.AggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcAggregatedMemoryContext;\n+import com.facebook.presto.orc.OrcLocalMemoryContext;\n+\n+import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+import static java.util.Objects.requireNonNull;\n+\n+public class RaptorOrcAggregatedMemoryContext\n+        implements OrcAggregatedMemoryContext\n+{\n+    private final AggregatedMemoryContext delegate;\n+\n+    public RaptorOrcAggregatedMemoryContext()\n+    {\n+        this.delegate = newSimpleAggregatedMemoryContext();", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcAggregatedMemoryContext.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcAggregatedMemoryContext.java\nindex 2746fc5e47..36a26948fa 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcAggregatedMemoryContext.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcAggregatedMemoryContext.java\n\n@@ -27,7 +27,7 @@ public class RaptorOrcAggregatedMemoryContext\n \n     public RaptorOrcAggregatedMemoryContext()\n     {\n-        this.delegate = newSimpleAggregatedMemoryContext();\n+        this(newSimpleAggregatedMemoryContext());\n     }\n \n     private RaptorOrcAggregatedMemoryContext(AggregatedMemoryContext delegate)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0NDg3Mw==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405044873", "bodyText": "same", "author": "highker", "createdAt": "2020-04-07T19:03:52Z", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcLocalMemoryContext.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.raptor;\n+\n+import com.facebook.presto.memory.context.LocalMemoryContext;\n+import com.facebook.presto.orc.OrcLocalMemoryContext;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class RaptorOrcLocalMemoryContext\n+        implements OrcLocalMemoryContext\n+{\n+    private final LocalMemoryContext delegate;\n+\n+    RaptorOrcLocalMemoryContext(LocalMemoryContext delegate)\n+    {\n+        this.delegate = requireNonNull(delegate, \"delegate is null\");\n+    }\n+", "originalCommit": "d036521b41d80c9adaf7f474055239a51c4c5ce7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bd3f2387c27a9584306a075632abde24a096d0f", "chunk": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcLocalMemoryContext.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcLocalMemoryContext.java\nindex 1d0cd0e7f8..36cfdf3db3 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcLocalMemoryContext.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorOrcLocalMemoryContext.java\n\n@@ -29,11 +29,13 @@ public class RaptorOrcLocalMemoryContext\n         this.delegate = requireNonNull(delegate, \"delegate is null\");\n     }\n \n+    @Override\n     public ListenableFuture<?> setBytes(long bytes)\n     {\n         return delegate.setBytes(bytes);\n     }\n \n+    @Override\n     public void close()\n     {\n         delegate.close();\n"}}, {"oid": "8bd3f2387c27a9584306a075632abde24a096d0f", "url": "https://github.com/prestodb/presto/commit/8bd3f2387c27a9584306a075632abde24a096d0f", "message": " Drop presto-orc's dependency on presto-memory-context", "committedDate": "2020-04-07T22:32:06Z", "type": "forcePushed"}, {"oid": "b9e4849604ca9d50d74ef6d313723620c78f997b", "url": "https://github.com/prestodb/presto/commit/b9e4849604ca9d50d74ef6d313723620c78f997b", "message": " Drop presto-orc's dependency on presto-memory-context", "committedDate": "2020-04-07T23:35:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3OTgyMw==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405179823", "bodyText": "javadoc (staring with /**) is usually place right before the class definition without a line break. e.g.\n/**\n * This class is a copy of HiveOrcLocalMemoryContext.\n * Any changes made to HiveOrcLocalMemoryContext should be made here as well\n */\npublic class TestingHiveOrcLocalMemoryContext\n...", "author": "highker", "createdAt": "2020-04-07T23:52:39Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+import com.facebook.presto.memory.context.LocalMemoryContext;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class TestingHiveOrcLocalMemoryContext\n+        implements OrcLocalMemoryContext\n+{\n+    /*", "originalCommit": "b9e4849604ca9d50d74ef6d313723620c78f997b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "034e00ec15fdbb72c2ca103c1388c89522f1a07e", "chunk": "diff --git a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java\nindex f58208da7f..7d91ab52e5 100644\n--- a/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java\n+++ b/presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcLocalMemoryContext.java\n\n@@ -18,14 +18,13 @@ import com.google.common.util.concurrent.ListenableFuture;\n \n import static java.util.Objects.requireNonNull;\n \n+/*\n+ * This class is a copy of HiveOrcLocalMemoryContext.\n+ * Any changes made to HiveOrcLocalMemoryContext should be made here as well\n+ */\n public class TestingHiveOrcLocalMemoryContext\n         implements OrcLocalMemoryContext\n {\n-    /*\n-     * This class is a copy of HiveOrcLocalMemoryContext.\n-     * Any changes made to HiveOrcLocalMemoryContext should be made here as well\n-     */\n-\n     private final LocalMemoryContext delegate;\n \n     TestingHiveOrcLocalMemoryContext(LocalMemoryContext delegate)\n"}}, {"oid": "034e00ec15fdbb72c2ca103c1388c89522f1a07e", "url": "https://github.com/prestodb/presto/commit/034e00ec15fdbb72c2ca103c1388c89522f1a07e", "message": " Drop presto-orc's dependency on presto-memory-context", "committedDate": "2020-04-08T00:01:04Z", "type": "commit"}, {"oid": "034e00ec15fdbb72c2ca103c1388c89522f1a07e", "url": "https://github.com/prestodb/presto/commit/034e00ec15fdbb72c2ca103c1388c89522f1a07e", "message": " Drop presto-orc's dependency on presto-memory-context", "committedDate": "2020-04-08T00:01:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyMTQ1MQ==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405221451", "bodyText": "Javadoc starts with /** rather than /*", "author": "highker", "createdAt": "2020-04-08T02:24:02Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestingHiveOrcAggregatedMemoryContext.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.orc;\n+\n+import com.facebook.presto.memory.context.AggregatedMemoryContext;\n+\n+import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+import static java.util.Objects.requireNonNull;\n+\n+/*", "originalCommit": "034e00ec15fdbb72c2ca103c1388c89522f1a07e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyNTQ3Ng==", "url": "https://github.com/prestodb/presto/pull/14345#discussion_r405225476", "bodyText": "Sorry missed that extra * :(", "author": "NikhilCollooru", "createdAt": "2020-04-08T02:40:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyMTQ1MQ=="}], "type": "inlineReview", "revised_code": null}]}