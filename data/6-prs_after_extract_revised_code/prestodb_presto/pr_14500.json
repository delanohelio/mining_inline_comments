{"pr_number": 14500, "pr_title": "Improve presto-druid escaping special chars in column and table name ", "pr_createdAt": "2020-05-08T18:10:33Z", "pr_url": "https://github.com/prestodb/presto/pull/14500", "timeline": [{"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4", "url": "https://github.com/prestodb/presto/commit/6dfe89a20423c973d6e1a6338153474e041f36a4", "message": "Escaping variable name and the column name inside distinct count.\nFix unit test", "committedDate": "2020-05-09T02:00:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDA0OQ==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464049", "bodyText": "private?", "author": "zhenxiao", "createdAt": "2020-05-09T07:30:14Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody", "originalCommit": "6dfe89a20423c973d6e1a6338153474e041f36a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mjc4OQ==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422552789", "bodyText": "private?\n\nYep", "author": "beinan", "createdAt": "2020-05-09T22:14:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDA0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "050c7d4c0756521d69e93e0133b9425d239b0684", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java b/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\nindex e2507d1813..20bb766fc4 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\n\n@@ -185,44 +183,4 @@ public class DruidClient\n             }\n         }\n     }\n-    public static class DruidRequestBody\n-    {\n-        private String query;\n-        private String resultFormat;\n-        private boolean queryHeader;\n-        @JsonCreator\n-        public DruidRequestBody(\n-                @JsonProperty(\"query\") String query,\n-                @JsonProperty(\"resultFormat\") String resultFormat,\n-                @JsonProperty(\"queryHeader\") boolean queryHeader)\n-        {\n-            requireNonNull(query);\n-            this.query = query;\n-            this.resultFormat = resultFormat;\n-            this.queryHeader = queryHeader;\n-        }\n-\n-        @JsonProperty(\"query\")\n-        public String getQuery()\n-        {\n-            return query;\n-        }\n-\n-        @JsonProperty(\"resultFormat\")\n-        public String getResultFormat()\n-        {\n-            return resultFormat;\n-        }\n-\n-        @JsonProperty(\"queryHeader\")\n-        public boolean isQueryHeader()\n-        {\n-            return queryHeader;\n-        }\n-\n-        public String toJson()\n-        {\n-            return JsonCodec.jsonCodec(DruidRequestBody.class).toJson(this);\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDA2MA==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464060", "bodyText": "add blank line below", "author": "zhenxiao", "createdAt": "2020-05-09T07:30:28Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;", "originalCommit": "6dfe89a20423c973d6e1a6338153474e041f36a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mjk1MA==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422552950", "bodyText": "added", "author": "beinan", "createdAt": "2020-05-09T22:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDA2MA=="}], "type": "inlineReview", "revised_code": {"commit": "050c7d4c0756521d69e93e0133b9425d239b0684", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java b/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\nindex e2507d1813..20bb766fc4 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\n\n@@ -185,44 +183,4 @@ public class DruidClient\n             }\n         }\n     }\n-    public static class DruidRequestBody\n-    {\n-        private String query;\n-        private String resultFormat;\n-        private boolean queryHeader;\n-        @JsonCreator\n-        public DruidRequestBody(\n-                @JsonProperty(\"query\") String query,\n-                @JsonProperty(\"resultFormat\") String resultFormat,\n-                @JsonProperty(\"queryHeader\") boolean queryHeader)\n-        {\n-            requireNonNull(query);\n-            this.query = query;\n-            this.resultFormat = resultFormat;\n-            this.queryHeader = queryHeader;\n-        }\n-\n-        @JsonProperty(\"query\")\n-        public String getQuery()\n-        {\n-            return query;\n-        }\n-\n-        @JsonProperty(\"resultFormat\")\n-        public String getResultFormat()\n-        {\n-            return resultFormat;\n-        }\n-\n-        @JsonProperty(\"queryHeader\")\n-        public boolean isQueryHeader()\n-        {\n-            return queryHeader;\n-        }\n-\n-        public String toJson()\n-        {\n-            return JsonCodec.jsonCodec(DruidRequestBody.class).toJson(this);\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDE1NQ==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464155", "bodyText": "this.query = requireNonNull(query);", "author": "zhenxiao", "createdAt": "2020-05-09T07:31:20Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;\n+        @JsonCreator\n+        public DruidRequestBody(\n+                @JsonProperty(\"query\") String query,\n+                @JsonProperty(\"resultFormat\") String resultFormat,\n+                @JsonProperty(\"queryHeader\") boolean queryHeader)\n+        {\n+            requireNonNull(query);", "originalCommit": "6dfe89a20423c973d6e1a6338153474e041f36a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mjk4NQ==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422552985", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-09T22:16:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwMDAxNg==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422600016", "bodyText": "remove line 200?", "author": "zhenxiao", "createdAt": "2020-05-10T07:12:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDE1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "050c7d4c0756521d69e93e0133b9425d239b0684", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java b/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\nindex e2507d1813..20bb766fc4 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\n\n@@ -185,44 +183,4 @@ public class DruidClient\n             }\n         }\n     }\n-    public static class DruidRequestBody\n-    {\n-        private String query;\n-        private String resultFormat;\n-        private boolean queryHeader;\n-        @JsonCreator\n-        public DruidRequestBody(\n-                @JsonProperty(\"query\") String query,\n-                @JsonProperty(\"resultFormat\") String resultFormat,\n-                @JsonProperty(\"queryHeader\") boolean queryHeader)\n-        {\n-            requireNonNull(query);\n-            this.query = query;\n-            this.resultFormat = resultFormat;\n-            this.queryHeader = queryHeader;\n-        }\n-\n-        @JsonProperty(\"query\")\n-        public String getQuery()\n-        {\n-            return query;\n-        }\n-\n-        @JsonProperty(\"resultFormat\")\n-        public String getResultFormat()\n-        {\n-            return resultFormat;\n-        }\n-\n-        @JsonProperty(\"queryHeader\")\n-        public boolean isQueryHeader()\n-        {\n-            return queryHeader;\n-        }\n-\n-        public String toJson()\n-        {\n-            return JsonCodec.jsonCodec(DruidRequestBody.class).toJson(this);\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDQwNA==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464404", "bodyText": "this. resultFormat = requireNonNull(resultFormat);", "author": "zhenxiao", "createdAt": "2020-05-09T07:34:13Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;\n+        @JsonCreator\n+        public DruidRequestBody(\n+                @JsonProperty(\"query\") String query,\n+                @JsonProperty(\"resultFormat\") String resultFormat,\n+                @JsonProperty(\"queryHeader\") boolean queryHeader)\n+        {\n+            requireNonNull(query);\n+            this.query = query;\n+            this.resultFormat = resultFormat;", "originalCommit": "6dfe89a20423c973d6e1a6338153474e041f36a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mjk4OA==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422552988", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-09T22:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDQwNA=="}], "type": "inlineReview", "revised_code": {"commit": "050c7d4c0756521d69e93e0133b9425d239b0684", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java b/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\nindex e2507d1813..20bb766fc4 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java\n\n@@ -185,44 +183,4 @@ public class DruidClient\n             }\n         }\n     }\n-    public static class DruidRequestBody\n-    {\n-        private String query;\n-        private String resultFormat;\n-        private boolean queryHeader;\n-        @JsonCreator\n-        public DruidRequestBody(\n-                @JsonProperty(\"query\") String query,\n-                @JsonProperty(\"resultFormat\") String resultFormat,\n-                @JsonProperty(\"queryHeader\") boolean queryHeader)\n-        {\n-            requireNonNull(query);\n-            this.query = query;\n-            this.resultFormat = resultFormat;\n-            this.queryHeader = queryHeader;\n-        }\n-\n-        @JsonProperty(\"query\")\n-        public String getQuery()\n-        {\n-            return query;\n-        }\n-\n-        @JsonProperty(\"resultFormat\")\n-        public String getResultFormat()\n-        {\n-            return resultFormat;\n-        }\n-\n-        @JsonProperty(\"queryHeader\")\n-        public boolean isQueryHeader()\n-        {\n-            return queryHeader;\n-        }\n-\n-        public String toJson()\n-        {\n-            return JsonCodec.jsonCodec(DruidRequestBody.class).toJson(this);\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDYwMw==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464603", "bodyText": "create a private function to add quotes to column names. could be used here and below", "author": "zhenxiao", "createdAt": "2020-05-09T07:36:15Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "diffHunk": "@@ -168,7 +168,7 @@ public DruidQueryGeneratorContext withAggregation(\n                     String definition = entry.getValue().getDefinition();\n                     int start = definition.indexOf(\"(\");\n                     int end = definition.indexOf(\")\");\n-                    String countDistinctClause = \"count ( distinct \" + definition.substring(start + 1, end) + \")\";\n+                    String countDistinctClause = \"count ( distinct \\\"\" + definition.substring(start + 1, end) + \"\\\")\";", "originalCommit": "6dfe89a20423c973d6e1a6338153474e041f36a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mzk0Mw==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422553943", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-09T22:26:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDYwMw=="}], "type": "inlineReview", "revised_code": {"commit": "050c7d4c0756521d69e93e0133b9425d239b0684", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java b/presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java\nindex d0462a1204..9b4031b899 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java\n\n@@ -168,7 +168,7 @@ public class DruidQueryGeneratorContext\n                     String definition = entry.getValue().getDefinition();\n                     int start = definition.indexOf(\"(\");\n                     int end = definition.indexOf(\")\");\n-                    String countDistinctClause = \"count ( distinct \\\"\" + definition.substring(start + 1, end) + \"\\\")\";\n+                    String countDistinctClause = \"count ( distinct \" + definition.substring(start + 1, end) + \")\";\n                     Selection countDistinctSelection = new Selection(countDistinctClause, entry.getValue().getOrigin());\n                     builder.put(entry.getKey(), countDistinctSelection);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDYzOA==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464638", "bodyText": "private function to add quotes to table or column names. could be used here", "author": "zhenxiao", "createdAt": "2020-05-09T07:36:43Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "diffHunk": "@@ -244,14 +244,14 @@ private boolean hasAggregation()\n         }\n \n         String expressions = selections.entrySet().stream()\n-                .map(s -> s.getValue().getDefinition())\n+                .map(s -> s.getValue().getEscapedDefinition())\n                 .collect(Collectors.joining(\", \"));\n         if (expressions.isEmpty()) {\n             throw new PrestoException(DRUID_QUERY_GENERATOR_FAILURE, \"Empty Druid query\");\n         }\n \n         String tableName = from.orElseThrow(() -> new PrestoException(DRUID_QUERY_GENERATOR_FAILURE, \"Table name missing in Druid query\"));\n-        String query = \"SELECT \" + expressions + \" FROM \" + tableName;\n+        String query = \"SELECT \" + expressions + \" FROM \\\"\" + tableName + \"\\\"\";", "originalCommit": "6dfe89a20423c973d6e1a6338153474e041f36a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1MzkzNw==", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422553937", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-09T22:26:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDYzOA=="}], "type": "inlineReview", "revised_code": {"commit": "050c7d4c0756521d69e93e0133b9425d239b0684", "chunk": "diff --git a/presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java b/presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java\nindex d0462a1204..9b4031b899 100644\n--- a/presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java\n+++ b/presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java\n\n@@ -244,14 +244,14 @@ public class DruidQueryGeneratorContext\n         }\n \n         String expressions = selections.entrySet().stream()\n-                .map(s -> s.getValue().getEscapedDefinition())\n+                .map(s -> s.getValue().getDefinition())\n                 .collect(Collectors.joining(\", \"));\n         if (expressions.isEmpty()) {\n             throw new PrestoException(DRUID_QUERY_GENERATOR_FAILURE, \"Empty Druid query\");\n         }\n \n         String tableName = from.orElseThrow(() -> new PrestoException(DRUID_QUERY_GENERATOR_FAILURE, \"Table name missing in Druid query\"));\n-        String query = \"SELECT \" + expressions + \" FROM \\\"\" + tableName + \"\\\"\";\n+        String query = \"SELECT \" + expressions + \" FROM \" + tableName;\n         boolean pushdown = false;\n         if (filter.isPresent()) {\n             // this is hack!!!. Ideally we want to clone the scan pipeline and create/update the filter in the scan pipeline to contain this filter and\n"}}, {"oid": "050c7d4c0756521d69e93e0133b9425d239b0684", "url": "https://github.com/prestodb/presto/commit/050c7d4c0756521d69e93e0133b9425d239b0684", "message": "Fix json type deserialization issue on DruidSegmentInfo", "committedDate": "2020-05-10T01:54:29Z", "type": "commit"}, {"oid": "782d922b0abcbb0579781f6472044f7688722318", "url": "https://github.com/prestodb/presto/commit/782d922b0abcbb0579781f6472044f7688722318", "message": "Escaping special characters in druid table name and column name.", "committedDate": "2020-05-10T01:54:29Z", "type": "commit"}, {"oid": "95e122477cf1e7e800eedf878b21770dffff9c85", "url": "https://github.com/prestodb/presto/commit/95e122477cf1e7e800eedf878b21770dffff9c85", "message": "Fix the exception of 'Internal file \\\"column_name\\\" doesn't exist'", "committedDate": "2020-05-10T01:54:30Z", "type": "commit"}, {"oid": "00e665dcf8fcdcb892d2c7a7e18b639e681e2f90", "url": "https://github.com/prestodb/presto/commit/00e665dcf8fcdcb892d2c7a7e18b639e681e2f90", "message": "Improve JSON serialization for the http requests to Druid", "committedDate": "2020-05-10T01:54:30Z", "type": "commit"}, {"oid": "1551daa98ced40845277aafb2734f4e5aa3eed27", "url": "https://github.com/prestodb/presto/commit/1551daa98ced40845277aafb2734f4e5aa3eed27", "message": "Escaping variable name and the column name inside distinct count.\nFix unit test", "committedDate": "2020-05-10T01:54:30Z", "type": "commit"}, {"oid": "39cc7ccd729914324a4d3b22e67161f0ae51387f", "url": "https://github.com/prestodb/presto/commit/39cc7ccd729914324a4d3b22e67161f0ae51387f", "message": "Refactoring and fix code reivew issue", "committedDate": "2020-05-10T01:54:31Z", "type": "forcePushed"}, {"oid": "184ad6a3982085ba531bde378803f6cb5b97f9bf", "url": "https://github.com/prestodb/presto/commit/184ad6a3982085ba531bde378803f6cb5b97f9bf", "message": "Refactoring and fix code reivew issue", "committedDate": "2020-05-12T05:34:23Z", "type": "commit"}, {"oid": "184ad6a3982085ba531bde378803f6cb5b97f9bf", "url": "https://github.com/prestodb/presto/commit/184ad6a3982085ba531bde378803f6cb5b97f9bf", "message": "Refactoring and fix code reivew issue", "committedDate": "2020-05-12T05:34:23Z", "type": "forcePushed"}]}