{"pr_number": 14428, "pr_title": "Remove positionCount check in createRandomLongDecimalsBlock", "pr_createdAt": "2020-04-23T08:08:18Z", "pr_url": "https://github.com/prestodb/presto/pull/14428", "timeline": [{"oid": "f2be5d8c90d1108066006958d4dd4af2568d1e27", "url": "https://github.com/prestodb/presto/commit/f2be5d8c90d1108066006958d4dd4af2568d1e27", "message": "Fix \"bound must be positive\" exception when creating DictionaryBlock", "committedDate": "2020-04-23T21:03:05Z", "type": "commit"}, {"oid": "5a684268c1bc6eab55f0cf602ecfb5a847df742a", "url": "https://github.com/prestodb/presto/commit/5a684268c1bc6eab55f0cf602ecfb5a847df742a", "message": "Remove positionCount check in createRandomLongDecimalsBlock\n\nTestRowBasedSerialization sometimes fails calling\ncreateRandomLongDecimalsBlock with less than 10 positions. We should\nallow blocks with less than 10 positions to be created if there are\nsuch needs. This commit removes the check to enforce the positionCount\ncheck, and comments were added to suggest the user use a larger\npositinCount when desired nullRate > 0.", "committedDate": "2020-04-23T21:03:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMTExNg==", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r414601116", "bodyText": "@yingsu00\nnit: consider shortening to Use positionCount >= 10 when nullRate > 0...\nWhat does nullRate can be close to the desired value mean?", "author": "mbasmanova", "createdAt": "2020-04-24T14:03:17Z", "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "diffHunk": "@@ -265,6 +265,7 @@ public static Block createBooleansBlock(Iterable<Boolean> values)\n         return builder.build();\n     }\n \n+    // It is recommended to have positionCount >= 10 when nullRate > 0, so that the nullRate can be close to the desired value.", "originalCommit": "5a684268c1bc6eab55f0cf602ecfb5a847df742a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc2ODMyNA==", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r414768324", "bodyText": "@mbasmanova thanks for the suggestion. By nullRate can be close to the desired value, I meant that the actual null rate would be more accurate(close to the specified nullRate) when positionCount is larger.", "author": "yingsu00", "createdAt": "2020-04-24T18:10:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMTExNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc2OTU0NQ==", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r414769545", "bodyText": "@yingsu00 Maybe write it like Make sure positionCount is sufficiently large if nullRate is small.", "author": "mbasmanova", "createdAt": "2020-04-24T18:13:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMTExNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE2NTc5OQ==", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r415165799", "bodyText": "Thanks @mbasmanova. I updated the comment to be\n// Note: Make sure positionCount is sufficiently large if nullRate is greater than 0", "author": "yingsu00", "createdAt": "2020-04-25T23:20:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMTExNg=="}], "type": "inlineReview", "revised_code": {"commit": "61ea3b30b593ad3c03278a87157af746aa53c889", "chunk": "diff --git a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\nindex 14a64dba98..77219b298c 100644\n--- a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n+++ b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n\n@@ -265,7 +265,7 @@ public final class BlockAssertions\n         return builder.build();\n     }\n \n-    // It is recommended to have positionCount >= 10 when nullRate > 0, so that the nullRate can be close to the desired value.\n+    // Note: Make sure positionCount is sufficiently large if nullRate is greater than 0\n     public static Block createRandomBooleansBlock(int positionCount, float nullRate)\n     {\n         ValuesWithNullsGenerator<Boolean> generator = new ValuesWithNullsGenerator(nullRate, () -> ThreadLocalRandom.current().nextBoolean());\n"}}, {"oid": "61ea3b30b593ad3c03278a87157af746aa53c889", "url": "https://github.com/prestodb/presto/commit/61ea3b30b593ad3c03278a87157af746aa53c889", "message": "Remove positionCount check in createRandomLongDecimalsBlock\n\nTestRowBasedSerialization sometimes fails calling\ncreateRandomLongDecimalsBlock with less than 10 positions. We should\nallow blocks with less than 10 positions to be created if there are\nsuch needs. This commit removes the check to enforce the positionCount\ncheck, and comments were added to suggest the user use a larger\npositinCount when desired nullRate > 0.", "committedDate": "2020-04-25T23:19:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1NDg3Ng==", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r415854876", "bodyText": "@yingsu00 should this comment be updated to match the rest?", "author": "mbasmanova", "createdAt": "2020-04-27T14:21:36Z", "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "diffHunk": "@@ -708,15 +713,18 @@ public static DictionaryBlock createRandomDictionaryBlock(Block dictionary, int\n \n     public static DictionaryBlock createRandomDictionaryBlock(Block dictionary, int positionCount, boolean isView)\n     {\n+        checkArgument(dictionary.getPositionCount() > 0, format(\"dictionary's positionCount %d is less than or equal to 0\", dictionary.getPositionCount()));\n+\n         int idsOffset = 0;\n         if (isView) {\n             idsOffset = min(ThreadLocalRandom.current().nextInt(dictionary.getPositionCount()), 1);\n         }\n \n-        int[] ids = IntStream.range(0, positionCount + idsOffset).map(i -> ThreadLocalRandom.current().nextInt(dictionary.getPositionCount() / 10)).toArray();\n+        int[] ids = IntStream.range(0, positionCount + idsOffset).map(i -> ThreadLocalRandom.current().nextInt(max(dictionary.getPositionCount() / 10, 1))).toArray();\n         return new DictionaryBlock(idsOffset, positionCount, dictionary, ids, false, randomDictionaryId());\n     }\n \n+    // It is recommended to have positionCount >= (10 / nestedNullRate) when nestedNullRate > 0, so that the nullRate can be close to the desired value.", "originalCommit": "61ea3b30b593ad3c03278a87157af746aa53c889", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyNjYyMw==", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r416226623", "bodyText": "@mbasmanova   Sorry missed this one. I have updated it to be\n// Note: Make sure positionCount is sufficiently large if nestedNullRate or primitiveNullRate is greater than 0\npublic static Block createRandomBlockForType(", "author": "yingsu00", "createdAt": "2020-04-27T23:50:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1NDg3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "2dae0dafc4cc28928127556d7708f7950b6bb9d1", "chunk": "diff --git a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\nindex 77219b298c..d809419b2d 100644\n--- a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n+++ b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n\n@@ -724,7 +724,7 @@ public final class BlockAssertions\n         return new DictionaryBlock(idsOffset, positionCount, dictionary, ids, false, randomDictionaryId());\n     }\n \n-    // It is recommended to have positionCount >= (10 / nestedNullRate) when nestedNullRate > 0, so that the nullRate can be close to the desired value.\n+    // Note: Make sure positionCount is sufficiently large if nestedNullRate or primitiveNullRate is greater than 0\n     public static Block createRandomBlockForType(\n             Type type,\n             int positionCount,\n"}}, {"oid": "2dae0dafc4cc28928127556d7708f7950b6bb9d1", "url": "https://github.com/prestodb/presto/commit/2dae0dafc4cc28928127556d7708f7950b6bb9d1", "message": "Remove positionCount check in createRandomLongDecimalsBlock\n\nTestRowBasedSerialization sometimes fails calling\ncreateRandomLongDecimalsBlock with less than 10 positions. We should\nallow blocks with less than 10 positions to be created if there are\nsuch needs. This commit removes the check to enforce the positionCount\ncheck, and comments were added to suggest the user use a larger\npositinCount when desired nullRate > 0.", "committedDate": "2020-04-27T23:49:32Z", "type": "commit"}, {"oid": "2dae0dafc4cc28928127556d7708f7950b6bb9d1", "url": "https://github.com/prestodb/presto/commit/2dae0dafc4cc28928127556d7708f7950b6bb9d1", "message": "Remove positionCount check in createRandomLongDecimalsBlock\n\nTestRowBasedSerialization sometimes fails calling\ncreateRandomLongDecimalsBlock with less than 10 positions. We should\nallow blocks with less than 10 positions to be created if there are\nsuch needs. This commit removes the check to enforce the positionCount\ncheck, and comments were added to suggest the user use a larger\npositinCount when desired nullRate > 0.", "committedDate": "2020-04-27T23:49:32Z", "type": "forcePushed"}]}