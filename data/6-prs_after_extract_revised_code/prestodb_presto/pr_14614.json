{"pr_number": 14614, "pr_title": "Add session property to disable warnings, or treat warnings as errors", "pr_createdAt": "2020-06-05T00:32:33Z", "pr_url": "https://github.com/prestodb/presto/pull/14614", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyOTQ1Nw==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436129457", "bodyText": "Hmm, here you want to wrap the warning in the PrestoException so you will get better context.", "author": "kaikalur", "createdAt": "2020-06-05T19:47:52Z", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -43,9 +45,18 @@ public DefaultWarningCollector(WarningCollectorConfig config)\n     public synchronized void add(PrestoWarning warning)\n     {\n         requireNonNull(warning, \"warning is null\");\n-        if (warnings.size() < config.getMaxWarnings()) {\n-            warnings.putIfAbsent(warning.getWarningCode(), warning);\n+        switch(config.getWarningHandlingLevel()) {\n+            case SUPPRESS:\n+                break;\n+            case NORMAL:\n+                if (warnings.size() < config.getMaxWarnings()) {\n+                    warnings.putIfAbsent(warning.getWarningCode(), warning);\n+                }\n+                break;\n+            case AS_ERROR:\n+                throw new PrestoException(StandardErrorCode.WARNING_AS_ERROR, warning.toString());", "originalCommit": "b546483fbf40cb0ecf9861eead57bb0dfd543934", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NDk4MA==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436954980", "bodyText": "In this case, after speaking with @kaikalur, we agreed that as of now, stack traces are not useful, but we may add the stack trace context in the future for future warnings.", "author": "prithvip", "createdAt": "2020-06-08T19:38:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyOTQ1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "29018f2123184ebd96552ecbc236f0a969f10e19", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java b/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\nindex dd128306c8..dddaec05c0 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\n\n@@ -35,28 +38,35 @@ public class DefaultWarningCollector\n     @GuardedBy(\"this\")\n     private final Map<WarningCode, PrestoWarning> warnings = new LinkedHashMap<>();\n     private final WarningCollectorConfig config;\n+    private final Session session;\n \n-    public DefaultWarningCollector(WarningCollectorConfig config)\n+    public DefaultWarningCollector(WarningCollectorConfig config, Session session)\n     {\n         this.config = requireNonNull(config, \"config is null\");\n+        this.session = session;\n     }\n \n     @Override\n     public synchronized void add(PrestoWarning warning)\n     {\n         requireNonNull(warning, \"warning is null\");\n-        switch(config.getWarningHandlingLevel()) {\n+        switch (SystemSessionProperties.getWarningHandlingLevel(session)) {\n             case SUPPRESS:\n                 break;\n             case NORMAL:\n-                if (warnings.size() < config.getMaxWarnings()) {\n-                    warnings.putIfAbsent(warning.getWarningCode(), warning);\n-                }\n+                addWarningIfNumWarningsLessThanConfig(warning);\n                 break;\n             case AS_ERROR:\n-                throw new PrestoException(StandardErrorCode.WARNING_AS_ERROR, warning.toString());\n+                /* Parser warnings must be handled differently since we should not throw an exception when parsing.\n+                 * Warnings are collected and an exception with all warnings is thrown in {@link QueryPreparer#prepareQuery}\n+                 */\n+                if (warning.getWarningCode() == StandardWarningCode.PARSER_WARNING.toWarningCode()) {\n+                    addWarningIfNumWarningsLessThanConfig(warning);\n+                }\n+                else {\n+                    throw new PrestoException(StandardErrorCode.WARNING_AS_ERROR, warning.toString());\n+                }\n         }\n-\n     }\n \n     @Override\n"}}, {"oid": "29018f2123184ebd96552ecbc236f0a969f10e19", "url": "https://github.com/prestodb/presto/commit/29018f2123184ebd96552ecbc236f0a969f10e19", "message": "Add session property to disable warnings, or treat warnings as errors", "committedDate": "2020-06-08T19:08:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NDIzNg==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436974236", "bodyText": "Static import.", "author": "rongrong", "createdAt": "2020-06-08T20:16:28Z", "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java", "diffHunk": "@@ -54,6 +60,12 @@ public PreparedQuery prepareQuery(Session session, String query, WarningCollecto\n             throws ParsingException, PrestoException, SemanticException\n     {\n         Statement wrappedStatement = sqlParser.createStatement(query, createParsingOptions(session, warningCollector));\n+        if (SystemSessionProperties.getWarningHandlingLevel(session) == WarningHandlingLevel.AS_ERROR) {", "originalCommit": "29018f2123184ebd96552ecbc236f0a969f10e19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NTYzOQ==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436975639", "bodyText": "Should you check whether there are warnings before throwing exception?", "author": "rongrong", "createdAt": "2020-06-08T20:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NDIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4NzA0Mg==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436987042", "bodyText": "Yes I should be checking. I will fix that. Whats the issue with the static import?", "author": "prithvip", "createdAt": "2020-06-08T20:39:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NDIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMDM0Mg==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437020342", "bodyText": "It's just convention. We always do static import unless the function name / constant by itself is too confusing.", "author": "rongrong", "createdAt": "2020-06-08T21:48:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NDIzNg=="}], "type": "inlineReview", "revised_code": {"commit": "25170b737c0ee901ff416c25f9393b89058e008a", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java b/presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java\nindex 0e37400786..a4c8a1ca8c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java\n\n@@ -60,7 +60,7 @@ public class QueryPreparer\n             throws ParsingException, PrestoException, SemanticException\n     {\n         Statement wrappedStatement = sqlParser.createStatement(query, createParsingOptions(session, warningCollector));\n-        if (SystemSessionProperties.getWarningHandlingLevel(session) == WarningHandlingLevel.AS_ERROR) {\n+        if (warningCollector.hasWarnings() && SystemSessionProperties.getWarningHandlingLevel(session) == WarningHandlingLevel.AS_ERROR) {\n             throw new PrestoException(WARNING_AS_ERROR, format(\"Warning handling level set to AS_ERROR. Warnings: %n %s\",\n                     warningCollector.getWarnings().stream()\n                             .map(PrestoWarning::getMessage)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NjI4NQ==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436976285", "bodyText": "I'll probably only keep the WarningHandlingLevel as member variable rather than the whole session.", "author": "rongrong", "createdAt": "2020-06-08T20:20:22Z", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -33,18 +38,34 @@\n     @GuardedBy(\"this\")\n     private final Map<WarningCode, PrestoWarning> warnings = new LinkedHashMap<>();\n     private final WarningCollectorConfig config;\n+    private final Session session;\n \n-    public DefaultWarningCollector(WarningCollectorConfig config)\n+    public DefaultWarningCollector(WarningCollectorConfig config, Session session)\n     {\n         this.config = requireNonNull(config, \"config is null\");\n+        this.session = session;", "originalCommit": "29018f2123184ebd96552ecbc236f0a969f10e19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4NzE5MA==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436987190", "bodyText": "Ok will change this.", "author": "prithvip", "createdAt": "2020-06-08T20:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NjI4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "25170b737c0ee901ff416c25f9393b89058e008a", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java b/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\nindex dddaec05c0..6f6cef8b9f 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\n\n@@ -38,19 +36,19 @@ public class DefaultWarningCollector\n     @GuardedBy(\"this\")\n     private final Map<WarningCode, PrestoWarning> warnings = new LinkedHashMap<>();\n     private final WarningCollectorConfig config;\n-    private final Session session;\n+    private final WarningHandlingLevel warningHandlingLevel;\n \n-    public DefaultWarningCollector(WarningCollectorConfig config, Session session)\n+    public DefaultWarningCollector(WarningCollectorConfig config, WarningHandlingLevel warningHandlingLevel)\n     {\n         this.config = requireNonNull(config, \"config is null\");\n-        this.session = session;\n+        this.warningHandlingLevel = warningHandlingLevel;\n     }\n \n     @Override\n     public synchronized void add(PrestoWarning warning)\n     {\n         requireNonNull(warning, \"warning is null\");\n-        switch (SystemSessionProperties.getWarningHandlingLevel(session)) {\n+        switch (warningHandlingLevel) {\n             case SUPPRESS:\n                 break;\n             case NORMAL:\n"}}, {"oid": "333cc2c9c2ad58c5448976fe918ba595eae7ae8a", "url": "https://github.com/prestodb/presto/commit/333cc2c9c2ad58c5448976fe918ba595eae7ae8a", "message": "Add session property to disable warnings, or treat warnings as errors", "committedDate": "2020-06-08T21:40:46Z", "type": "forcePushed"}, {"oid": "25170b737c0ee901ff416c25f9393b89058e008a", "url": "https://github.com/prestodb/presto/commit/25170b737c0ee901ff416c25f9393b89058e008a", "message": "Add session property to disable warnings, or treat warnings as errors", "committedDate": "2020-06-08T21:45:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMDY1MA==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437020650", "bodyText": "Static import here as well ;)", "author": "rongrong", "createdAt": "2020-06-08T21:48:53Z", "path": "presto-main/src/main/java/com/facebook/presto/dispatcher/DispatchManager.java", "diffHunk": "@@ -178,7 +179,7 @@ public QueryId createQueryId()\n             session = sessionSupplier.createSession(queryId, sessionContext);\n \n             // prepare query\n-            WarningCollector warningCollector = warningCollectorFactory.create();\n+            WarningCollector warningCollector = warningCollectorFactory.create(SystemSessionProperties.getWarningHandlingLevel(session));", "originalCommit": "25170b737c0ee901ff416c25f9393b89058e008a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ada497c134136e419e66d304723d00dccf71b53", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/dispatcher/DispatchManager.java b/presto-main/src/main/java/com/facebook/presto/dispatcher/DispatchManager.java\nindex dee922c934..7667da3054 100644\n--- a/presto-main/src/main/java/com/facebook/presto/dispatcher/DispatchManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/dispatcher/DispatchManager.java\n\n@@ -179,7 +179,7 @@ public class DispatchManager\n             session = sessionSupplier.createSession(queryId, sessionContext);\n \n             // prepare query\n-            WarningCollector warningCollector = warningCollectorFactory.create(SystemSessionProperties.getWarningHandlingLevel(session));\n+            WarningCollector warningCollector = warningCollectorFactory.create(getWarningHandlingLevel(session));\n             preparedQuery = queryPreparer.prepareQuery(session, query, warningCollector);\n \n             // select resource group\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMDk0Ng==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437020946", "bodyText": "Static import", "author": "rongrong", "createdAt": "2020-06-08T21:49:37Z", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -33,18 +36,34 @@\n     @GuardedBy(\"this\")\n     private final Map<WarningCode, PrestoWarning> warnings = new LinkedHashMap<>();\n     private final WarningCollectorConfig config;\n+    private final WarningHandlingLevel warningHandlingLevel;\n \n-    public DefaultWarningCollector(WarningCollectorConfig config)\n+    public DefaultWarningCollector(WarningCollectorConfig config, WarningHandlingLevel warningHandlingLevel)\n     {\n         this.config = requireNonNull(config, \"config is null\");\n+        this.warningHandlingLevel = warningHandlingLevel;\n     }\n \n     @Override\n     public synchronized void add(PrestoWarning warning)\n     {\n         requireNonNull(warning, \"warning is null\");\n-        if (warnings.size() < config.getMaxWarnings()) {\n-            warnings.putIfAbsent(warning.getWarningCode(), warning);\n+        switch (warningHandlingLevel) {\n+            case SUPPRESS:\n+                break;\n+            case NORMAL:\n+                addWarningIfNumWarningsLessThanConfig(warning);\n+                break;\n+            case AS_ERROR:\n+                /* Parser warnings must be handled differently since we should not throw an exception when parsing.\n+                 * Warnings are collected and an exception with all warnings is thrown in {@link QueryPreparer#prepareQuery}\n+                 */\n+                if (warning.getWarningCode() == StandardWarningCode.PARSER_WARNING.toWarningCode()) {", "originalCommit": "25170b737c0ee901ff416c25f9393b89058e008a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ada497c134136e419e66d304723d00dccf71b53", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java b/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\nindex 6f6cef8b9f..74ec9353c6 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\n\n@@ -58,11 +58,11 @@ public class DefaultWarningCollector\n                 /* Parser warnings must be handled differently since we should not throw an exception when parsing.\n                  * Warnings are collected and an exception with all warnings is thrown in {@link QueryPreparer#prepareQuery}\n                  */\n-                if (warning.getWarningCode() == StandardWarningCode.PARSER_WARNING.toWarningCode()) {\n+                if (warning.getWarningCode() == PARSER_WARNING.toWarningCode()) {\n                     addWarningIfNumWarningsLessThanConfig(warning);\n                 }\n                 else {\n-                    throw new PrestoException(StandardErrorCode.WARNING_AS_ERROR, warning.toString());\n+                    throw new PrestoException(WARNING_AS_ERROR, warning.toString());\n                 }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMTA0OA==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437021048", "bodyText": "Same here.", "author": "rongrong", "createdAt": "2020-06-08T21:49:46Z", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -33,18 +36,34 @@\n     @GuardedBy(\"this\")\n     private final Map<WarningCode, PrestoWarning> warnings = new LinkedHashMap<>();\n     private final WarningCollectorConfig config;\n+    private final WarningHandlingLevel warningHandlingLevel;\n \n-    public DefaultWarningCollector(WarningCollectorConfig config)\n+    public DefaultWarningCollector(WarningCollectorConfig config, WarningHandlingLevel warningHandlingLevel)\n     {\n         this.config = requireNonNull(config, \"config is null\");\n+        this.warningHandlingLevel = warningHandlingLevel;\n     }\n \n     @Override\n     public synchronized void add(PrestoWarning warning)\n     {\n         requireNonNull(warning, \"warning is null\");\n-        if (warnings.size() < config.getMaxWarnings()) {\n-            warnings.putIfAbsent(warning.getWarningCode(), warning);\n+        switch (warningHandlingLevel) {\n+            case SUPPRESS:\n+                break;\n+            case NORMAL:\n+                addWarningIfNumWarningsLessThanConfig(warning);\n+                break;\n+            case AS_ERROR:\n+                /* Parser warnings must be handled differently since we should not throw an exception when parsing.\n+                 * Warnings are collected and an exception with all warnings is thrown in {@link QueryPreparer#prepareQuery}\n+                 */\n+                if (warning.getWarningCode() == StandardWarningCode.PARSER_WARNING.toWarningCode()) {\n+                    addWarningIfNumWarningsLessThanConfig(warning);\n+                }\n+                else {\n+                    throw new PrestoException(StandardErrorCode.WARNING_AS_ERROR, warning.toString());", "originalCommit": "25170b737c0ee901ff416c25f9393b89058e008a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ada497c134136e419e66d304723d00dccf71b53", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java b/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\nindex 6f6cef8b9f..74ec9353c6 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java\n\n@@ -58,11 +58,11 @@ public class DefaultWarningCollector\n                 /* Parser warnings must be handled differently since we should not throw an exception when parsing.\n                  * Warnings are collected and an exception with all warnings is thrown in {@link QueryPreparer#prepareQuery}\n                  */\n-                if (warning.getWarningCode() == StandardWarningCode.PARSER_WARNING.toWarningCode()) {\n+                if (warning.getWarningCode() == PARSER_WARNING.toWarningCode()) {\n                     addWarningIfNumWarningsLessThanConfig(warning);\n                 }\n                 else {\n-                    throw new PrestoException(StandardErrorCode.WARNING_AS_ERROR, warning.toString());\n+                    throw new PrestoException(WARNING_AS_ERROR, warning.toString());\n                 }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMTE3MQ==", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437021171", "bodyText": "Static import", "author": "rongrong", "createdAt": "2020-06-08T21:50:04Z", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/WarningCollectorConfig.java", "diffHunk": "@@ -20,6 +20,7 @@\n public class WarningCollectorConfig\n {\n     private int maxWarnings = Integer.MAX_VALUE;\n+    private WarningHandlingLevel warningHandlingLevel = WarningHandlingLevel.NORMAL;", "originalCommit": "25170b737c0ee901ff416c25f9393b89058e008a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ada497c134136e419e66d304723d00dccf71b53", "chunk": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/warnings/WarningCollectorConfig.java b/presto-main/src/main/java/com/facebook/presto/execution/warnings/WarningCollectorConfig.java\nindex ee8221310f..a76a32130c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/warnings/WarningCollectorConfig.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/warnings/WarningCollectorConfig.java\n\n@@ -15,12 +15,13 @@ package com.facebook.presto.execution.warnings;\n \n import com.facebook.airlift.configuration.Config;\n \n+import static com.facebook.presto.execution.warnings.WarningHandlingLevel.NORMAL;\n import static com.google.common.base.Preconditions.checkArgument;\n \n public class WarningCollectorConfig\n {\n     private int maxWarnings = Integer.MAX_VALUE;\n-    private WarningHandlingLevel warningHandlingLevel = WarningHandlingLevel.NORMAL;\n+    private WarningHandlingLevel warningHandlingLevel = NORMAL;\n \n     @Config(\"warning-collector.max-warnings\")\n     public WarningCollectorConfig setMaxWarnings(int maxWarnings)\n"}}, {"oid": "0ada497c134136e419e66d304723d00dccf71b53", "url": "https://github.com/prestodb/presto/commit/0ada497c134136e419e66d304723d00dccf71b53", "message": "Add session property to disable warnings, or treat warnings as errors", "committedDate": "2020-06-08T22:02:17Z", "type": "forcePushed"}, {"oid": "ad1c62e053918e69f2cb6216a6028aed6af9c57f", "url": "https://github.com/prestodb/presto/commit/ad1c62e053918e69f2cb6216a6028aed6af9c57f", "message": "Add session property to disable warnings, or treat warnings as errors", "committedDate": "2020-06-08T23:15:22Z", "type": "forcePushed"}, {"oid": "bd38273d6dbadb06e5110bb5b00fad90d7c6364f", "url": "https://github.com/prestodb/presto/commit/bd38273d6dbadb06e5110bb5b00fad90d7c6364f", "message": "Add session property to disable warnings, or treat warnings as errors", "committedDate": "2020-06-09T00:29:39Z", "type": "forcePushed"}, {"oid": "4bee6284555fa0e74423f58bdb3c0fe828e6f347", "url": "https://github.com/prestodb/presto/commit/4bee6284555fa0e74423f58bdb3c0fe828e6f347", "message": "Add session property to disable warnings, or treat warnings as errors", "committedDate": "2020-06-09T00:49:23Z", "type": "commit"}, {"oid": "4bee6284555fa0e74423f58bdb3c0fe828e6f347", "url": "https://github.com/prestodb/presto/commit/4bee6284555fa0e74423f58bdb3c0fe828e6f347", "message": "Add session property to disable warnings, or treat warnings as errors", "committedDate": "2020-06-09T00:49:23Z", "type": "forcePushed"}]}