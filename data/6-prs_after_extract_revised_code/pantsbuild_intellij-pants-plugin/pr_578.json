{"pr_number": 578, "pr_title": "Bump to IntelliJ 2020.3", "pr_createdAt": "2020-10-06T15:21:06Z", "pr_url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/578", "timeline": [{"oid": "7f8be889b415bbdd338a758b317a2c2dcfae18f0", "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/7f8be889b415bbdd338a758b317a2c2dcfae18f0", "message": "Switch host pants to a custom one with updated Zinc\n\nThe pants version we've been using was using an old Zinc version that did not support Scala 2.13.\nSince this commit, we build by ourselves pants with bumped Zinc version, so upgrade to 2.13 is\npossible.", "committedDate": "2021-01-22T11:28:47Z", "type": "commit"}, {"oid": "bbd8f4216d932b7af919036696a89f18dcaf0d8d", "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/bbd8f4216d932b7af919036696a89f18dcaf0d8d", "message": "Bump to IntelliJ 2020.3\n\n* Scala Plugin 2020.3 is based on Scala 2.13, so we need to bump it, too\n* `isBspProject` required reimplementation (same as in scala plugin)\n* `OpenProjectTask` constructor signature has changed in 2020.3 (new argument)\n* Module setOption/getOption methods are deprecated, so it was required to\n  `module.setOption(EXTERNAL_SYSTEM_ID_KEY, ...)` manually. IJ Core not doing it\n  any more\n* `allowRootAccess` doesn't allow `/` argument any more\n* Test Fixtures sometimes add `MockSDK`s so it was needed to clean it manually\n* 2.13 contains new collection converters - we needed to adapt\n* Do not call `isPythonModule` which has been removed from IJ Core\n\n    Luckily, we have been using this method only to get facets from the modules, and it turns out that `isPythonModule` was returning `true` fore every module that contained at least one python facet.\n    https://github.com/JetBrains/intellij-community/commit/3d31f690f38ff0fab4435f48d0f2d70d64684b4a#diff-73e06f16dda15376df16c70a1a1c60d93da0cb09bbf000b3d6706d1655293134\n* Right scala plugin link and checksum checks\n* Clean cache\n* Use external-system-etst-api.jar built in CI instead of local machine", "committedDate": "2021-01-22T12:57:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjg0NTA2Mg==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/578#discussion_r562845062", "bodyText": "I think the previous style is much more readable. It could be still better if all these variables had been final.\nIt's a shame that Java doesn't support named arguments.", "author": "odisseus", "createdAt": "2021-01-22T19:01:45Z", "path": "src/com/twitter/intellij/pants/service/project/PantsOpenProjectProvider.java", "diffHunk": "@@ -82,38 +82,27 @@ public Project openProject(@NotNull VirtualFile projectFile, @Nullable Project p\n   }\n \n   public static OpenProjectTask openTask(Project projectToClose, Project project, boolean forceOpenInNewFrame) {\n-    boolean useDefaultTemplate = false;\n-    boolean isNewProject = true;\n-    boolean sendFrameBack = false;\n-    boolean showWelcomeScreen = false;\n-    ProjectOpenedCallback callback = null;\n-    String projectWorkspaceId = null;\n-    FrameInfo frame = null;\n-    boolean runConfigurators = false;\n-    boolean runConversionsBeforeOpen = false;\n-    boolean isProjectCreatedWithWizard = false;\n-    boolean isRefreshVfsNeeded = false;\n     return new OpenProjectTask(\n       forceOpenInNewFrame,\n       projectToClose,\n-      isNewProject,\n-      useDefaultTemplate,\n+      true, // isNewProject", "originalCommit": "bbd8f4216d932b7af919036696a89f18dcaf0d8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY0ODMwOA==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/578#discussion_r563648308", "bodyText": "@lukaszwawrzyk what do you think?", "author": "tpasternak", "createdAt": "2021-01-25T11:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjg0NTA2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzcxNTM1NQ==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/578#discussion_r563715355", "bodyText": "Named values were ok. People often tend to put scala style named arguments as block comments: /* isNewProject= */true, but there are people who don't like it. Generally either way is ok, the change here isn't an improvement in my opinion though.", "author": "lukaszwawrzyk", "createdAt": "2021-01-25T13:17:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjg0NTA2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDY3NTIyMg==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/578#discussion_r564675222", "bodyText": "The problem with comments is that forgetting to update them is extremely easy.\nSuppose somebody else renames this argument in the constructor's definition, but keeps its type. Suddenly the comment here becomes incorrect, even though the code will compile and probably will work as previously.\nMoreover, the person making change to the constructor might be totally unaware that this comment exists and needs to be updated manually.", "author": "odisseus", "createdAt": "2021-01-26T17:00:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjg0NTA2Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "15874cc7e0653275a3fafca8b4243bb444621a28", "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/15874cc7e0653275a3fafca8b4243bb444621a28", "message": "Remove commented-out code", "committedDate": "2021-01-25T10:58:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY4NDExNw==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/578#discussion_r563684117", "bodyText": "Perhaps it is safer to define it as \"ProjectSystemId.findById(\"BSP\")\". I am not sure if the identity of project id is compared by the id value (string) or object reference. The actual object for project system id is created in scala plugin.", "author": "lukaszwawrzyk", "createdAt": "2021-01-25T12:25:03Z", "path": "common/com/twitter/intellij/pants/util/PantsConstants.java", "diffHunk": "@@ -15,6 +15,7 @@\n \n   @NotNull\n   public static final ProjectSystemId SYSTEM_ID = new ProjectSystemId(PANTS);\n+  public static final ProjectSystemId BSP_SYSTEM_ID = new ProjectSystemId(\"BSP\");", "originalCommit": "15874cc7e0653275a3fafca8b4243bb444621a28", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY4NDQzOQ==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/578#discussion_r563684439", "bodyText": "why was that wrong?", "author": "lukaszwawrzyk", "createdAt": "2021-01-25T12:25:35Z", "path": "common/com/twitter/intellij/pants/util/PantsUtil.java", "diffHunk": "@@ -673,9 +673,13 @@ else if (isBspProject(project)) {\n     }\n   }\n \n+  public static boolean isBspModule(Module module) {\n+    return ExternalSystemApiUtil.isExternalSystemAwareModule(PantsConstants.BSP_SYSTEM_ID, module);\n+  }\n+\n+\n   public static boolean isBspProject(Project project) {\n-    ProjectSystemId id = ProjectSystemId.findById(\"BSP\");\n-    return id != null && ExternalProjectUtil.isExternalProject(project, id);", "originalCommit": "15874cc7e0653275a3fafca8b4243bb444621a28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc1MzkzNA==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/578#discussion_r563753934", "bodyText": "afaik scala plugin just does not set this any more", "author": "tpasternak", "createdAt": "2021-01-25T14:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY4NDQzOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDY3MDU4MQ==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/578#discussion_r564670581", "bodyText": "Why is this cast required?", "author": "odisseus", "createdAt": "2021-01-26T16:54:29Z", "path": "src/com/twitter/intellij/pants/service/project/FastpassOpenProjectProvider.java", "diffHunk": "@@ -97,7 +97,8 @@ private Project link(@NotNull VirtualFile projectFile) {\n         public void run(@NotNull ProgressIndicator indicator) {\n           BspProjectImportBuilder builder = new BspProjectImportBuilder();\n           try {\n-            Try<FastpassConfigSetup> fastpassConfigSetup = FastpassConfigSetup.create(new File(projectFile.getPath()));\n+            Try<FastpassConfigSetup> fastpassConfigSetup = FastpassConfigSetup.create(new File(projectFile.getPath()))\n+              .map(x -> (FastpassConfigSetup) x);", "originalCommit": "15874cc7e0653275a3fafca8b4243bb444621a28", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}