{"pr_number": 881, "pr_title": "Introduce AuthorizationFragment", "pr_createdAt": "2020-01-01T13:17:05Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/881", "timeline": [{"oid": "a8990b6fabde11c1b32f3f455c49cf609a5ecb0d", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/a8990b6fabde11c1b32f3f455c49cf609a5ecb0d", "message": "Add fragment support. Remove AuthenticationActivity.", "committedDate": "2020-01-01T13:02:38Z", "type": "commit"}, {"oid": "b7134e515b76c2abdc65b8287982f7004c44d7c6", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/b7134e515b76c2abdc65b8287982f7004c44d7c6", "message": "Update common", "committedDate": "2020-01-01T13:03:05Z", "type": "commit"}, {"oid": "dcd89729718338d6a62c5f02e8194ed3d1dd9ef6", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/dcd89729718338d6a62c5f02e8194ed3d1dd9ef6", "message": "Merge branch 'dev' into rapong/supportFragment", "committedDate": "2020-01-02T19:36:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMTAzMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/881#discussion_r362611033", "bodyText": "Why add new overloads ? I personally prefer to add  overloads only if it's must,  else too many methods would effect the readability of public api's . We spent a lot of time cleaning up the overloads already and we introduced AcquireTokenParameters for this reason . Since we expose Fragment through AcquireTokenParameters the developers should be able to use that.", "author": "kreedula", "createdAt": "2020-01-02T20:05:06Z", "path": "msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java", "diffHunk": "@@ -115,6 +116,31 @@ void acquireToken(@NonNull final Activity activity,\n                       @NonNull final AuthenticationCallback callback\n     );\n \n+    /**\n+     * Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup.\n+     * Default value for {@link Prompt} is {@link Prompt#SELECT_ACCOUNT}.\n+     *\n+     * @param fragment Non-null {@link Fragment} that will be replaced by {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationFragment}.\n+     *                 NOTE: Only when the following conditions in the config file are satisfied, MSAL UI will be displayed as a fragment.\n+     *                 1. \"broker_redirect_uri_registered\" : \"FALSE\"\n+     *                 2. \"authorization_user_agent\" : \"WEBVIEW\"\n+     *                 Otherwise, it will be displayed as an {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity}.\n+     * @param scopes   The non-null array of scopes to be requested for the access token.\n+     *                 MSAL always sends the scopes 'openid profile offline_access'.  Do not include any of these scopes in the scope parameter.\n+     * @param callback The {@link AuthenticationCallback} to receive the result back.\n+     *                 1) If user cancels the flow by pressing the device back button, the result will be sent\n+     *                 back via {@link AuthenticationCallback#onCancel()}.\n+     *                 2) If the sdk successfully receives the token back, result will be sent back via\n+     *                 {@link AuthenticationCallback#onSuccess(IAuthenticationResult)}\n+     *                 3) All the other errors will be sent back via\n+     *                 {@link AuthenticationCallback#onError(MsalException)}.\n+     */\n+    void acquireToken(@NonNull final Fragment fragment,", "originalCommit": "dcd89729718338d6a62c5f02e8194ed3d1dd9ef6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYyMjU4Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/881#discussion_r362622582", "bodyText": "removed.", "author": "rpdome", "createdAt": "2020-01-02T20:42:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMTAzMw=="}], "type": "inlineReview", "revised_code": {"commit": "bbb2272f2626f67495bc5cb7f71a6b2f504e2539", "chunk": "diff --git a/msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java b/msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java\nindex 3ae19fab..c350579f 100644\n--- a/msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java\n+++ b/msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java\n\n@@ -116,31 +116,6 @@ public interface IMultipleAccountPublicClientApplication extends IPublicClientAp\n                       @NonNull final AuthenticationCallback callback\n     );\n \n-    /**\n-     * Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup.\n-     * Default value for {@link Prompt} is {@link Prompt#SELECT_ACCOUNT}.\n-     *\n-     * @param fragment Non-null {@link Fragment} that will be replaced by {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationFragment}.\n-     *                 NOTE: Only when the following conditions in the config file are satisfied, MSAL UI will be displayed as a fragment.\n-     *                 1. \"broker_redirect_uri_registered\" : \"FALSE\"\n-     *                 2. \"authorization_user_agent\" : \"WEBVIEW\"\n-     *                 Otherwise, it will be displayed as an {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity}.\n-     * @param scopes   The non-null array of scopes to be requested for the access token.\n-     *                 MSAL always sends the scopes 'openid profile offline_access'.  Do not include any of these scopes in the scope parameter.\n-     * @param callback The {@link AuthenticationCallback} to receive the result back.\n-     *                 1) If user cancels the flow by pressing the device back button, the result will be sent\n-     *                 back via {@link AuthenticationCallback#onCancel()}.\n-     *                 2) If the sdk successfully receives the token back, result will be sent back via\n-     *                 {@link AuthenticationCallback#onSuccess(IAuthenticationResult)}\n-     *                 3) All the other errors will be sent back via\n-     *                 {@link AuthenticationCallback#onError(MsalException)}.\n-     */\n-    void acquireToken(@NonNull final Fragment fragment,\n-                      @NonNull final String[] scopes,\n-                      @Nullable final String loginHint,\n-                      @NonNull final AuthenticationCallback callback\n-    );\n-\n     /**\n      * Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If\n      * no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist\n"}}, {"oid": "bbb2272f2626f67495bc5cb7f71a6b2f504e2539", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/bbb2272f2626f67495bc5cb7f71a6b2f504e2539", "message": "Address comments", "committedDate": "2020-01-02T20:41:17Z", "type": "commit"}, {"oid": "945c5852f24eadf8b68e082a44a284710b803b14", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/945c5852f24eadf8b68e082a44a284710b803b14", "message": "Update common", "committedDate": "2020-01-03T03:40:03Z", "type": "commit"}, {"oid": "eae8c61cb09aa8921b6917c3602cdec6ff519f19", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/eae8c61cb09aa8921b6917c3602cdec6ff519f19", "message": "Merge branch 'dev' into rapong/supportFragment", "committedDate": "2020-01-03T03:40:14Z", "type": "commit"}]}