{"pr_number": 944, "pr_title": "Update test app", "pr_createdAt": "2020-02-24T01:21:09Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/944", "timeline": [{"oid": "48b1f4276396fbfff9ee441a4b92247bc1ebe3f7", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/48b1f4276396fbfff9ee441a4b92247bc1ebe3f7", "message": "WIP", "committedDate": "2020-02-22T01:43:10Z", "type": "commit"}, {"oid": "3c125afa94c1521c8c9b576c30ba6f03644799bb", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/3c125afa94c1521c8c9b576c30ba6f03644799bb", "message": "WIP - need to register app in each cloud", "committedDate": "2020-02-22T06:53:18Z", "type": "commit"}, {"oid": "c4d5150c1d3a0b168268c77790cf958428d0d90e", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/c4d5150c1d3a0b168268c77790cf958428d0d90e", "message": "Add app registration", "committedDate": "2020-02-22T07:58:11Z", "type": "commit"}, {"oid": "2f37a276239317c7fa383af814ae22a1003d074b", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/2f37a276239317c7fa383af814ae22a1003d074b", "message": "Add copy button", "committedDate": "2020-02-22T08:48:14Z", "type": "commit"}, {"oid": "391c76390aee7aee36d255cba885594367454f98", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/391c76390aee7aee36d255cba885594367454f98", "message": "Add clarity on UI", "committedDate": "2020-02-24T01:07:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5NjM5Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/944#discussion_r383396397", "bodyText": "This is great \ud83d\udc4d", "author": "kreedula", "createdAt": "2020-02-24T17:09:57Z", "path": "testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/ResultFragment.java", "diffHunk": "@@ -69,6 +74,18 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe\n         mTextView.setMovementMethod(new ScrollingMovementMethod());\n \n         previousAccessToken = accessToken;\n+\n+        mCopyAuthResultButton = (Button) view.findViewById(R.id.btn_copyAuthResult);\n+        mCopyAuthResultButton.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                ClipboardManager clipboard = (ClipboardManager)\n+                        getActivity().getSystemService(Context.CLIPBOARD_SERVICE);\n+                ClipData clip = ClipData.newPlainText(\"Auth Result\", mTextView.getText());\n+                clipboard.setPrimaryClip(clip);", "originalCommit": "391c76390aee7aee36d255cba885594367454f98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "865f3de59dabacd09e6815ea4619859869b0ff52", "chunk": "diff --git a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/ResultFragment.java b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/ResultFragment.java\nindex 43134073..f966b66b 100644\n--- a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/ResultFragment.java\n+++ b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/ResultFragment.java\n\n@@ -75,13 +76,13 @@ public class ResultFragment extends Fragment {\n \n         previousAccessToken = accessToken;\n \n-        mCopyAuthResultButton = (Button) view.findViewById(R.id.btn_copyAuthResult);\n+        mCopyAuthResultButton = view.findViewById(R.id.btn_copyAuthResult);\n         mCopyAuthResultButton.setOnClickListener(new View.OnClickListener() {\n             @Override\n             public void onClick(View v) {\n-                ClipboardManager clipboard = (ClipboardManager)\n+                final ClipboardManager clipboard = (ClipboardManager)\n                         getActivity().getSystemService(Context.CLIPBOARD_SERVICE);\n-                ClipData clip = ClipData.newPlainText(\"Auth Result\", mTextView.getText());\n+                final ClipData clip = ClipData.newPlainText(\"Auth Result\", mTextView.getText());\n                 clipboard.setPrimaryClip(clip);\n             }\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5NjYzNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/944#discussion_r383396635", "bodyText": "Copyright", "author": "kreedula", "createdAt": "2020-02-24T17:10:25Z", "path": "testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/RequestOptions.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package com.microsoft.identity.client.testapp;", "originalCommit": "391c76390aee7aee36d255cba885594367454f98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83ab262a0995e53b5a0fd3ffb54605f31a618794", "chunk": "diff --git a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/RequestOptions.java b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/RequestOptions.java\nindex e973722e..73eafcbe 100644\n--- a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/RequestOptions.java\n+++ b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/RequestOptions.java\n\n@@ -1,3 +1,25 @@\n+//   Copyright (c) Microsoft Corporation.\n+//   All rights reserved.\n+//\n+//   This code is licensed under the MIT License.\n+//\n+//   Permission is hereby granted, free of charge, to any person obtaining a copy\n+//   of this software and associated documentation files(the \"Software\"), to deal\n+//   in the Software without restriction, including without limitation the rights\n+//   to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//   copies of the Software, and to permit persons to whom the Software is\n+//   furnished to do so, subject to the following conditions :\n+//\n+//   The above copyright notice and this permission notice shall be included in\n+//   all copies or substantial portions of the Software.\n+//\n+//   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//   THE SOFTWARE.\n package com.microsoft.identity.client.testapp;\n \n import com.microsoft.identity.client.IAccount;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5NzE2MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/944#discussion_r383397160", "bodyText": "Copyright here and everywhere else", "author": "kreedula", "createdAt": "2020-02-24T17:11:18Z", "path": "testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MultipleAccountModeWrapper.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.microsoft.identity.client.testapp;", "originalCommit": "391c76390aee7aee36d255cba885594367454f98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83ab262a0995e53b5a0fd3ffb54605f31a618794", "chunk": "diff --git a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MultipleAccountModeWrapper.java b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MultipleAccountModeWrapper.java\nindex 63e4de95..ea61eda0 100644\n--- a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MultipleAccountModeWrapper.java\n+++ b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MultipleAccountModeWrapper.java\n\n@@ -1,3 +1,25 @@\n+//   Copyright (c) Microsoft Corporation.\n+//   All rights reserved.\n+//\n+//   This code is licensed under the MIT License.\n+//\n+//   Permission is hereby granted, free of charge, to any person obtaining a copy\n+//   of this software and associated documentation files(the \"Software\"), to deal\n+//   in the Software without restriction, including without limitation the rights\n+//   to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//   copies of the Software, and to permit persons to whom the Software is\n+//   furnished to do so, subject to the following conditions :\n+//\n+//   The above copyright notice and this permission notice shall be included in\n+//   all copies or substantial portions of the Software.\n+//\n+//   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//   THE SOFTWARE.\n package com.microsoft.identity.client.testapp;\n \n import androidx.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwMTc5MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/944#discussion_r383401791", "bodyText": "nit : trim to \"default: account's authority\"", "author": "kreedula", "createdAt": "2020-02-24T17:19:46Z", "path": "testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/AcquireTokenFragment.java", "diffHunk": "@@ -90,103 +99,128 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe\n         mAcquireTokenSilent = view.findViewById(R.id.btn_acquiretokensilent);\n         mAcquireTokenWithResource = view.findViewById(R.id.btn_acquiretokenWithResource);\n         mAcquireTokenSilentWithResource = view.findViewById(R.id.btn_acquiretokensilentWithResource);\n-        mAADEnvironments = view.findViewById(R.id.environment);\n+        mConfigFileSpinner = view.findViewById(R.id.configFile);\n+        mAuthScheme = view.findViewById(R.id.authentication_scheme);\n         mPublicApplicationMode = view.findViewById(R.id.public_application_mode);\n+        mDefaultBrowser = view.findViewById(R.id.default_browser);\n \n-        bindSpinnerChoice(mPrompt, Prompt.class);\n-        bindSpinnerChoice(mUserAgent, Constants.UserAgent.class);\n-        bindSpinnerChoice(mAADEnvironments, Constants.AzureActiveDirectoryEnvironment.class);\n+        bindSelectAccountSpinner(mSelectAccount, null);\n+        mSelectAccount.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n+            @Override\n+            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n+                // If an account is selected.\n+                //  - Gray out mLoginhint.\n+                //  - Set hint in mAuthority.\n+                if (position == mLoadedAccounts.size()) {\n+                    // If an account is selected, grey out this option.\n+                    mLoginhint.setHint(\"\");\n+                    mLoginhint.setCursorVisible(true);\n+                    mLoginhint.setEnabled(true);\n+\n+                    mAuthority.setHint(\"\");\n+                } else {\n+                    mLoginhint.setText(\"\");\n+                    mLoginhint.setHint(\"Disabled\");\n+                    mLoginhint.setCursorVisible(false);\n+                    mLoginhint.setEnabled(false);\n+\n+                    mAuthority.setHint(\"For ATS: Selected account's authority will be used if nothing is provided here\");", "originalCommit": "391c76390aee7aee36d255cba885594367454f98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83ab262a0995e53b5a0fd3ffb54605f31a618794", "chunk": "diff --git a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/AcquireTokenFragment.java b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/AcquireTokenFragment.java\nindex 84989155..1af5a45d 100644\n--- a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/AcquireTokenFragment.java\n+++ b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/AcquireTokenFragment.java\n\n@@ -124,7 +123,7 @@ public class AcquireTokenFragment extends Fragment {\n                     mLoginhint.setCursorVisible(false);\n                     mLoginhint.setEnabled(false);\n \n-                    mAuthority.setHint(\"For ATS: Selected account's authority will be used if nothing is provided here\");\n+                    mAuthority.setHint(\"Default: account's authority\");\n                 }\n             }\n \n"}}, {"oid": "83ab262a0995e53b5a0fd3ffb54605f31a618794", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/83ab262a0995e53b5a0fd3ffb54605f31a618794", "message": "Address comments", "committedDate": "2020-02-24T21:55:45Z", "type": "commit"}, {"oid": "865f3de59dabacd09e6815ea4619859869b0ff52", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/865f3de59dabacd09e6815ea4619859869b0ff52", "message": "Clean up code", "committedDate": "2020-02-24T21:56:47Z", "type": "commit"}, {"oid": "931023245c35d70ebaf682579f5ccb391f98285a", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/931023245c35d70ebaf682579f5ccb391f98285a", "message": "Add instance_aware_organization:", "committedDate": "2020-02-24T22:05:08Z", "type": "commit"}, {"oid": "fcc2e8f0d3cc40856c4583c8892e42e20694a689", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/fcc2e8f0d3cc40856c4583c8892e42e20694a689", "message": "Fix backstack issue", "committedDate": "2020-02-24T22:46:46Z", "type": "commit"}, {"oid": "a2ec49864e80ce47a28653f0ceb1ec736e9d8998", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/a2ec49864e80ce47a28653f0ceb1ec736e9d8998", "message": "Use class name as tag", "committedDate": "2020-02-24T23:05:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU4MjE4NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/944#discussion_r383582184", "bodyText": "Can we add another Spinner and EditText to accept the HttpMethod and Resource URL? These could optionally be shown only when the Auth Scheme Spinner indicates PoP", "author": "iambmelt", "createdAt": "2020-02-24T23:49:35Z", "path": "testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MsalWrapper.java", "diffHunk": "@@ -166,9 +85,13 @@ public void acquireToken(final Activity activity,\n                                         .split(\" \")\n                         )\n                 )\n-                .withCallback(getAuthenticationCallback(notifyCallback));\n+                .withCallback(getAuthenticationCallback(callback));\n \n-        if (USE_POP) {\n+        if (requestOptions.getAuthority() != null && !requestOptions.getAuthority().isEmpty()) {\n+            builder.fromAuthority(requestOptions.getAuthority());\n+        }\n+\n+        if (requestOptions.getAuthScheme() == Constants.AuthScheme.POP) {\n             try {\n                 builder.withAuthenticationScheme(\n                         PoPAuthenticationScheme.builder()", "originalCommit": "a2ec49864e80ce47a28653f0ceb1ec736e9d8998", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEyMjkwNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/944#discussion_r384122904", "bodyText": "sure np", "author": "rpdome", "createdAt": "2020-02-25T21:00:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU4MjE4NA=="}], "type": "inlineReview", "revised_code": {"commit": "95328ce91a62f78b2fb35e89e96844fada139458", "chunk": "diff --git a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MsalWrapper.java b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MsalWrapper.java\nindex 3a65b8c2..0eeb2176 100644\n--- a/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MsalWrapper.java\n+++ b/testapps/testapp/src/main/java/com/microsoft/identity/client/testapp/MsalWrapper.java\n\n@@ -71,39 +70,16 @@ abstract class MsalWrapper {\n                              @NonNull final RequestOptions requestOptions,\n                              @NonNull final INotifyOperationResultCallback<IAuthenticationResult> callback) {\n \n-        final AcquireTokenParameters.Builder builder = new AcquireTokenParameters.Builder();\n-        builder.startAuthorizationFromActivity(activity)\n-                .withScopes(Arrays.asList(requestOptions.getScopes().toLowerCase().split(\" \")))\n-                .withLoginHint(requestOptions.getLoginHint())\n-                .forAccount(requestOptions.getAccount())\n-                .withPrompt(requestOptions.getPrompt())\n-                .withOtherScopesToAuthorize(\n-                        Arrays.asList(\n-                                requestOptions\n-                                        .getExtraScopesToConsent()\n-                                        .toLowerCase()\n-                                        .split(\" \")\n-                        )\n+        final AcquireTokenParameters.Builder builder = getAcquireTokenParametersBuilder(activity, requestOptions, callback);\n+        builder.withScopes(Arrays.asList(requestOptions.getScopes().toLowerCase().split(\" \")));\n+        builder.withOtherScopesToAuthorize(\n+                Arrays.asList(\n+                        requestOptions\n+                                .getExtraScopesToConsent()\n+                                .toLowerCase()\n+                                .split(\" \")\n                 )\n-                .withCallback(getAuthenticationCallback(callback));\n-\n-        if (requestOptions.getAuthority() != null && !requestOptions.getAuthority().isEmpty()) {\n-            builder.fromAuthority(requestOptions.getAuthority());\n-        }\n-\n-        if (requestOptions.getAuthScheme() == Constants.AuthScheme.POP) {\n-            try {\n-                builder.withAuthenticationScheme(\n-                        PoPAuthenticationScheme.builder()\n-                                .withHttpMethod(HttpMethod.GET)\n-                                .withUrl(\n-                                        new URL(\"https://signedhttprequest.azurewebsites.net/api/validateSHR\")\n-                                ).build()\n-                );\n-            } catch (MalformedURLException e) {\n-                throw new RuntimeException(e);\n-            }\n-        }\n+        );\n \n         final AcquireTokenParameters parameters = builder.build();\n         acquireTokenAsyncInternal(parameters);\n"}}, {"oid": "95328ce91a62f78b2fb35e89e96844fada139458", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/95328ce91a62f78b2fb35e89e96844fada139458", "message": "Add POP options", "committedDate": "2020-02-25T21:47:58Z", "type": "commit"}]}