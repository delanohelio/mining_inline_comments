{"pr_number": 1186, "pr_title": "automating test case 832430", "pr_createdAt": "2020-10-12T05:33:33Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186", "timeline": [{"oid": "79de77aa9e12a40013327a83bb9d93673b16ac4c", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/79de77aa9e12a40013327a83bb9d93673b16ac4c", "message": "automating test case 832430", "committedDate": "2020-10-12T05:32:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc2NTg5Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r506765896", "bodyText": "Add license", "author": "shahzaibj", "createdAt": "2020-10-16T23:52:05Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;", "originalCommit": "79de77aa9e12a40013327a83bb9d93673b16ac4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MDcxMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508470712", "bodyText": "Added license", "author": "kkrishnareddy", "createdAt": "2020-10-20T12:47:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc2NTg5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5a8d5363fb084fac4efdc6494373aaca094bbae5", "chunk": "diff --git a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\nindex 491a15d5..82a8c9fa 100644\n--- a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n+++ b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n\n@@ -1,3 +1,25 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n \n import androidx.annotation.NonNull;\n"}}, {"oid": "45afc7e4997f942637310793840d1efccfccd3d9", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/45afc7e4997f942637310793840d1efccfccd3d9", "message": "Merge branch 'dev' into kkoppart-TestCase832430", "committedDate": "2020-10-16T23:53:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MDc1Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507190756", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            //https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n          \n          \n            \n            //https://identitydivision.visualstudio.com/DevEx/_workitems/edit/832430", "author": "shahzaibj", "createdAt": "2020-10-18T17:37:00Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430", "originalCommit": "45afc7e4997f942637310793840d1efccfccd3d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MzE5Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508473196", "bodyText": "corrected the link.", "author": "kkrishnareddy", "createdAt": "2020-10-20T12:51:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MDc1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5a8d5363fb084fac4efdc6494373aaca094bbae5", "chunk": "diff --git a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\nindex 491a15d5..82a8c9fa 100644\n--- a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n+++ b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n\n@@ -1,3 +1,25 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n \n import androidx.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTAyNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191026", "bodyText": "Why true here?", "author": "shahzaibj", "createdAt": "2020-10-18T17:39:39Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)\n+                                .registerPageExpected(true)\n+                                .build();\n+\n+                        new AadPromptHandler(promptHandlerParameters)\n+                                .handlePrompt(username, password);\n+                    }\n+                }\n+        );\n+\n+        interactiveRequest.execute();\n+        latch.await();\n+\n+        final IAccount account = getAccount();\n+\n+        //acquiring token silently\n+        final CountDownLatch silentLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters silentParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(false)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(silentLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(silentParameters);\n+        silentLatch.await();\n+\n+        //forwarding time 1 day\n+        TestContext.getTestContext().getTestDevice().getSettings().forwardDeviceTimeForOneDay();\n+\n+        // acquiring token silently after expiring AT\n+        final CountDownLatch refreshTokenLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters refreshTokenParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(true)", "originalCommit": "45afc7e4997f942637310793840d1efccfccd3d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3Mjk0MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508472940", "bodyText": "removed the statement forceRefresh(true)", "author": "kkrishnareddy", "createdAt": "2020-10-20T12:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTAyNg=="}], "type": "inlineReview", "revised_code": {"commit": "5a8d5363fb084fac4efdc6494373aaca094bbae5", "chunk": "diff --git a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\nindex 491a15d5..82a8c9fa 100644\n--- a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n+++ b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n\n@@ -1,3 +1,25 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n \n import androidx.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTM1NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191354", "bodyText": "This can be false", "author": "shahzaibj", "createdAt": "2020-10-18T17:42:21Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)", "originalCommit": "45afc7e4997f942637310793840d1efccfccd3d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MjY5NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508472694", "bodyText": "changed to false.", "author": "kkrishnareddy", "createdAt": "2020-10-20T12:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTM1NA=="}], "type": "inlineReview", "revised_code": {"commit": "5a8d5363fb084fac4efdc6494373aaca094bbae5", "chunk": "diff --git a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\nindex 491a15d5..82a8c9fa 100644\n--- a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n+++ b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n\n@@ -1,3 +1,25 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n \n import androidx.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTM4Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191383", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            .broker(getBroker())\n          \n          \n            \n                                            .broker(mBroker)", "author": "shahzaibj", "createdAt": "2020-10-18T17:42:44Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())", "originalCommit": "45afc7e4997f942637310793840d1efccfccd3d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MjQwNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508472404", "bodyText": "updated to mBroker", "author": "kkrishnareddy", "createdAt": "2020-10-20T12:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTM4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5a8d5363fb084fac4efdc6494373aaca094bbae5", "chunk": "diff --git a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\nindex 491a15d5..82a8c9fa 100644\n--- a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n+++ b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n\n@@ -1,3 +1,25 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n \n import androidx.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTQ1Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191453", "bodyText": "You no longer need to override this", "author": "shahzaibj", "createdAt": "2020-10-18T17:43:31Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)\n+                                .registerPageExpected(true)\n+                                .build();\n+\n+                        new AadPromptHandler(promptHandlerParameters)\n+                                .handlePrompt(username, password);\n+                    }\n+                }\n+        );\n+\n+        interactiveRequest.execute();\n+        latch.await();\n+\n+        final IAccount account = getAccount();\n+\n+        //acquiring token silently\n+        final CountDownLatch silentLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters silentParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(false)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(silentLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(silentParameters);\n+        silentLatch.await();\n+\n+        //forwarding time 1 day\n+        TestContext.getTestContext().getTestDevice().getSettings().forwardDeviceTimeForOneDay();\n+\n+        // acquiring token silently after expiring AT\n+        final CountDownLatch refreshTokenLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters refreshTokenParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(true)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(refreshTokenLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(refreshTokenParameters);\n+        refreshTokenLatch.await();\n+    }\n+\n+    @Override\n+    public LabUserQuery getLabUserQuery() {\n+        final LabUserQuery query = new LabUserQuery();\n+        query.azureEnvironment = LabConstants.AzureEnvironment.AZURE_CLOUD;\n+        query.protectionPolicy = LabConstants.ProtectionPolicy.MAM_CA;\n+        return query;\n+    }\n+\n+    @Override\n+    public String getTempUserType() {\n+        return null;\n+    }\n+\n+    @Override\n+    public String[] getScopes() {\n+        return new String[]{\"00000003-0000-0ff1-ce00-000000000000\"};\n+    }\n+\n+    @Override\n+    public String getAuthority() {\n+        return mApplication.getConfiguration().getDefaultAuthority().toString();\n+    }\n+\n+    @NonNull\n+    @Override\n+    public ITestBroker getBroker() {\n+        return new BrokerMicrosoftAuthenticator();\n+    }", "originalCommit": "45afc7e4997f942637310793840d1efccfccd3d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MjIyNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508472225", "bodyText": "removed the getBroker() function.", "author": "kkrishnareddy", "createdAt": "2020-10-20T12:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTQ1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5a8d5363fb084fac4efdc6494373aaca094bbae5", "chunk": "diff --git a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\nindex 491a15d5..82a8c9fa 100644\n--- a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n+++ b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n\n@@ -1,3 +1,25 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n \n import androidx.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTUxNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191514", "bodyText": "Let's add a Thread.sleep for 30 seconds here to expire the in-memory throttling cache", "author": "shahzaibj", "createdAt": "2020-10-18T17:44:04Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)\n+                                .registerPageExpected(true)\n+                                .build();\n+\n+                        new AadPromptHandler(promptHandlerParameters)\n+                                .handlePrompt(username, password);\n+                    }\n+                }\n+        );\n+\n+        interactiveRequest.execute();\n+        latch.await();\n+\n+        final IAccount account = getAccount();\n+\n+        //acquiring token silently\n+        final CountDownLatch silentLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters silentParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(false)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(silentLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(silentParameters);\n+        silentLatch.await();\n+\n+        //forwarding time 1 day\n+        TestContext.getTestContext().getTestDevice().getSettings().forwardDeviceTimeForOneDay();\n+", "originalCommit": "45afc7e4997f942637310793840d1efccfccd3d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MTk3MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508471970", "bodyText": "added thread.sleep for 30 seconds.", "author": "kkrishnareddy", "createdAt": "2020-10-20T12:49:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTUxNA=="}], "type": "inlineReview", "revised_code": {"commit": "5a8d5363fb084fac4efdc6494373aaca094bbae5", "chunk": "diff --git a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\nindex 491a15d5..82a8c9fa 100644\n--- a/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n+++ b/msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java\n\n@@ -1,3 +1,25 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n \n import androidx.annotation.NonNull;\n"}}, {"oid": "5a8d5363fb084fac4efdc6494373aaca094bbae5", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/5a8d5363fb084fac4efdc6494373aaca094bbae5", "message": "resolving PR commits", "committedDate": "2020-10-20T12:45:58Z", "type": "commit"}, {"oid": "5163fb1df88a8264fa9abdea61881e1322e1788a", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/5163fb1df88a8264fa9abdea61881e1322e1788a", "message": "Merge branch 'kkoppart-TestCase832430' of https://github.com/AzureAD/microsoft-authentication-library-for-android into kkoppart-TestCase832430", "committedDate": "2020-10-20T12:46:13Z", "type": "commit"}, {"oid": "eb3bdcf83d3dd1a7179f7eadda6ceb54cdc4e104", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/eb3bdcf83d3dd1a7179f7eadda6ceb54cdc4e104", "message": "Merge branch 'dev' into kkoppart-TestCase832430", "committedDate": "2020-10-23T16:56:00Z", "type": "commit"}, {"oid": "24b2d5b485a1569fd242ed4b0e4722a42d355614", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/24b2d5b485a1569fd242ed4b0e4722a42d355614", "message": "Merge branch 'dev' into kkoppart-TestCase832430", "committedDate": "2020-10-26T21:15:05Z", "type": "commit"}, {"oid": "9aa6303dcdc9f7bc39093b1a7d2d1bd92c635712", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/9aa6303dcdc9f7bc39093b1a7d2d1bd92c635712", "message": "Merge branch 'dev' into kkoppart-TestCase832430", "committedDate": "2020-10-26T23:06:27Z", "type": "commit"}]}