{"pr_number": 2342, "pr_title": "CorfuStore: Add epoch, CLEAR to streaming API", "pr_createdAt": "2020-01-31T20:28:22Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2342", "timeline": [{"oid": "283ff9d6e3c8177ffa8251aa0d4185e6d5c69943", "url": "https://github.com/CorfuDB/CorfuDB/commit/283ff9d6e3c8177ffa8251aa0d4185e6d5c69943", "message": "CorfuStore: Add epoch, CLEAR to streaming API\n\nConsumers of the streaming api need the epoch to\nreconstruct the token that represents a Corfu snapshot.\nSo modify streaming api to support epoch info too.\n\nTable.clear() is a supported UFO operation.\nThis must be sent to streaming api too so that it can\nbe handled appropriately.", "committedDate": "2020-02-01T01:23:19Z", "type": "forcePushed"}, {"oid": "cb6c616b6f13e81c4d38f2c09517eb6bd9994020", "url": "https://github.com/CorfuDB/CorfuDB/commit/cb6c616b6f13e81c4d38f2c09517eb6bd9994020", "message": "CorfuStore: Add epoch, CLEAR to streaming API\n\nConsumers of the streaming api need the epoch to\nreconstruct the token that represents a Corfu snapshot.\nSo modify streaming api to support epoch info too.\n\nTable.clear() is a supported UFO operation.\nThis must be sent to streaming api too so that it can\nbe handled appropriately.", "committedDate": "2020-02-01T01:45:29Z", "type": "forcePushed"}, {"oid": "2c882b892bcd7bb65af29389e095e1c264e13711", "url": "https://github.com/CorfuDB/CorfuDB/commit/2c882b892bcd7bb65af29389e095e1c264e13711", "message": "CorfuStore: Add epoch, CLEAR to streaming API\n\nConsumers of the streaming api need the epoch to\nreconstruct the token that represents a Corfu snapshot.\nSo modify streaming api to support epoch info too.\n\nTable.clear() is a supported UFO operation.\nThis must be sent to streaming api too so that it can\nbe handled appropriately.", "committedDate": "2020-02-01T01:47:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0ODg1OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2342#discussion_r373748858", "bodyText": "You might want to throw an exception on the default path, and have an explicit delete.", "author": "vjeko", "createdAt": "2020-02-01T01:49:00Z", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuStreamEntry.java", "diffHunk": "@@ -68,12 +75,26 @@ public CorfuStreamEntry(K key, V payload, M metadata, long address, OperationTyp\n      * Convert a given SMREntry to CorfuStreamEntry.\n      */\n     public static <K extends Message, V extends Message, M extends Message>\n-        CorfuStreamEntry<K, V, M> fromSMREntry(SMREntry entry, @Nonnull final Class<K> keyClass,\n-            @Nonnull final Class<V> payloadClass, @Nullable final Class<M> metadataClass) {\n+        CorfuStreamEntry<K, V, M> fromSMREntry(SMREntry entry, @Nonnull final long epoch,\n+                                               @Nonnull final Class<K> keyClass,\n+                                               @Nonnull final Class<V> payloadClass,\n+                                               @Nullable final Class<M> metadataClass) {\n \n         long address = entry.getGlobalAddress();\n \n-        OperationType operationType = (entry.getSMRMethod().equals(\"put\")) ? OperationType.UPDATE : OperationType.DELETE;\n+        OperationType operationType;\n+        log.trace(\"fromSRMEntry: Table {} streamer got SMR {}\", keyClass.getName(), entry.getSMRMethod());\n+        switch(entry.getSMRMethod()) {\n+            case \"put\":\n+                operationType = OperationType.UPDATE;\n+                break;\n+            case \"clear\":\n+                operationType = OperationType.CLEAR;\n+                break;\n+            default:", "originalCommit": "2c882b892bcd7bb65af29389e095e1c264e13711", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI4MTI1MQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2342#discussion_r374281251", "bodyText": "good point, done!", "author": "hisundar", "createdAt": "2020-02-03T19:00:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0ODg1OA=="}], "type": "inlineReview", "revised_code": {"commit": "23ea43d5716f24183048833dca547099665b0255", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/runtime/collections/CorfuStreamEntry.java b/runtime/src/main/java/org/corfudb/runtime/collections/CorfuStreamEntry.java\nindex 12825c0a784..8c558bc6faa 100644\n--- a/runtime/src/main/java/org/corfudb/runtime/collections/CorfuStreamEntry.java\n+++ b/runtime/src/main/java/org/corfudb/runtime/collections/CorfuStreamEntry.java\n\n@@ -75,26 +68,12 @@ public class CorfuStreamEntry<K extends Message, V extends Message, M extends Me\n      * Convert a given SMREntry to CorfuStreamEntry.\n      */\n     public static <K extends Message, V extends Message, M extends Message>\n-        CorfuStreamEntry<K, V, M> fromSMREntry(SMREntry entry, @Nonnull final long epoch,\n-                                               @Nonnull final Class<K> keyClass,\n-                                               @Nonnull final Class<V> payloadClass,\n-                                               @Nullable final Class<M> metadataClass) {\n+        CorfuStreamEntry<K, V, M> fromSMREntry(SMREntry entry, @Nonnull final Class<K> keyClass,\n+            @Nonnull final Class<V> payloadClass, @Nullable final Class<M> metadataClass) {\n \n         long address = entry.getGlobalAddress();\n \n-        OperationType operationType;\n-        log.trace(\"fromSRMEntry: Table {} streamer got SMR {}\", keyClass.getName(), entry.getSMRMethod());\n-        switch(entry.getSMRMethod()) {\n-            case \"put\":\n-                operationType = OperationType.UPDATE;\n-                break;\n-            case \"clear\":\n-                operationType = OperationType.CLEAR;\n-                break;\n-            default:\n-                operationType = OperationType.DELETE;\n-                break;\n-        }\n+        OperationType operationType = (entry.getSMRMethod().equals(\"put\")) ? OperationType.UPDATE : OperationType.DELETE;\n         // TODO[sneginhal]: Need a way to differentiate between update and create.\n         Object[] args = entry.getSMRArguments();\n \n"}}, {"oid": "23ea43d5716f24183048833dca547099665b0255", "url": "https://github.com/CorfuDB/CorfuDB/commit/23ea43d5716f24183048833dca547099665b0255", "message": "CorfuStore: fix StreamListner's hashCode() for recognition in Java collections", "committedDate": "2020-02-03T19:14:25Z", "type": "commit"}, {"oid": "9a940d0fecc766647018c7a438a9871b0989c9aa", "url": "https://github.com/CorfuDB/CorfuDB/commit/9a940d0fecc766647018c7a438a9871b0989c9aa", "message": "CorfuStore: Add epoch, CLEAR to streaming API\n\nConsumers of the streaming api need the epoch to\nreconstruct the token that represents a Corfu snapshot.\nSo modify streaming api to support epoch info too.\n\nTable.clear() is a supported UFO operation.\nThis must be sent to streaming api too so that it can\nbe handled appropriately.", "committedDate": "2020-02-03T20:07:54Z", "type": "commit"}, {"oid": "9a940d0fecc766647018c7a438a9871b0989c9aa", "url": "https://github.com/CorfuDB/CorfuDB/commit/9a940d0fecc766647018c7a438a9871b0989c9aa", "message": "CorfuStore: Add epoch, CLEAR to streaming API\n\nConsumers of the streaming api need the epoch to\nreconstruct the token that represents a Corfu snapshot.\nSo modify streaming api to support epoch info too.\n\nTable.clear() is a supported UFO operation.\nThis must be sent to streaming api too so that it can\nbe handled appropriately.", "committedDate": "2020-02-03T20:07:54Z", "type": "forcePushed"}, {"oid": "813ec61daa79fc524fb3259769a1646a0c366a53", "url": "https://github.com/CorfuDB/CorfuDB/commit/813ec61daa79fc524fb3259769a1646a0c366a53", "message": "Merge branch 'master' into hashCodeStreamer", "committedDate": "2020-02-03T20:23:36Z", "type": "commit"}]}