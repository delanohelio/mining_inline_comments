{"pr_number": 2365, "pr_title": "Retain caller's context when unwrapping exceptions", "pr_createdAt": "2020-02-05T19:00:22Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2365", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ4NjQzNA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2365#discussion_r375486434", "bodyText": "Please put a Java Doc comment.", "author": "vjeko", "createdAt": "2020-02-05T20:19:44Z", "path": "runtime/src/main/java/org/corfudb/util/Utils.java", "diffHunk": "@@ -239,6 +240,20 @@ public static StreamsAddressResponse getLogAddressSpace(Layout layout, CorfuRunt\n         return aggregateLogAddressSpace(luResponses);\n     }\n \n+    public static Throwable extractCauseWithCompleteStacktrace(Throwable throwable) {", "originalCommit": "771f106d88c22a95739dd17b901c1254808c7285", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE5Mzg0NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2365#discussion_r382193844", "bodyText": "done", "author": "optimol", "createdAt": "2020-02-20T18:57:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ4NjQzNA=="}], "type": "inlineReview", "revised_code": {"commit": "d86321716334211804bfc242a10847dfeb15d283", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/util/Utils.java b/runtime/src/main/java/org/corfudb/util/Utils.java\nindex d35923bd838..ef4f652b3dd 100644\n--- a/runtime/src/main/java/org/corfudb/util/Utils.java\n+++ b/runtime/src/main/java/org/corfudb/util/Utils.java\n\n@@ -240,17 +242,35 @@ public class Utils {\n         return aggregateLogAddressSpace(luResponses);\n     }\n \n+    /**\n+     * Get exception.getCause() with its stacktrace modified to include the outer\n+     * exception's stack trace. Prevents losing caller context\n+     *\n+     * @param throwable the Throwable to extract the causing Throwable from\n+     * @return causing Throwable of the input {@code throwable} with the outer throwable's stack trace prepended,\n+     *         {@code null} if no causing exception\n+     */\n     public static Throwable extractCauseWithCompleteStacktrace(Throwable throwable) {\n         final Throwable cause = throwable.getCause();\n         if (cause == null) {\n             return cause;\n         }\n \n-        final StackTraceElement[] entireStackTrace = ArrayUtils.addAll(\n-            throwable.getStackTrace(),\n-            cause.getStackTrace()\n-        );\n-        cause.setStackTrace(entireStackTrace);\n+        try {\n+            final StackTraceElement[] callerStackTrace = ArrayUtils.addAll(\n+                throwable.getStackTrace(),\n+                new StackTraceElement(\"Dummy stack frame\", \"--- End caller context ---\", null, -1)\n+            );\n+            final StackTraceElement[] entireStackTrace = ArrayUtils.addAll(\n+                callerStackTrace,\n+                cause.getStackTrace()\n+            );\n+\n+            // Note: Stacktrace might be immutable\n+            cause.setStackTrace(entireStackTrace);\n+        } catch (Exception e) {\n+            log.info(\"Failed to append outer throwable's stacktrace to causing throwable's stack trace\", e);\n+        }\n         return cause;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5MDg0Ng==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2365#discussion_r376690846", "bodyText": "Empty line.", "author": "zhangn49", "createdAt": "2020-02-08T06:09:05Z", "path": "runtime/src/main/java/org/corfudb/util/CFUtils.java", "diffHunk": "@@ -1,6 +1,7 @@\n package org.corfudb.util;\n \n import com.google.common.util.concurrent.ThreadFactoryBuilder;\n+", "originalCommit": "771f106d88c22a95739dd17b901c1254808c7285", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9f71dd938350eb93fe88914415fb6e32fe36351", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/util/CFUtils.java b/runtime/src/main/java/org/corfudb/util/CFUtils.java\nindex c16a31c53ed..570be3f6479 100644\n--- a/runtime/src/main/java/org/corfudb/util/CFUtils.java\n+++ b/runtime/src/main/java/org/corfudb/util/CFUtils.java\n\n@@ -5,7 +5,9 @@ import com.google.common.util.concurrent.ThreadFactoryBuilder;\n import org.corfudb.runtime.exceptions.unrecoverable.UnrecoverableCorfuInterruptedError;\n \n import java.time.Duration;\n+import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.List;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.CompletionException;\n import java.util.concurrent.ExecutionException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5MDkwNA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2365#discussion_r376690904", "bodyText": "optimize imports to keep alphabetic order", "author": "zhangn49", "createdAt": "2020-02-08T06:10:51Z", "path": "runtime/src/main/java/org/corfudb/util/Utils.java", "diffHunk": "@@ -6,6 +6,7 @@\n import jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;\n import lombok.extern.slf4j.Slf4j;\n import org.corfudb.runtime.view.stream.StreamAddressSpace;\n+import org.apache.commons.lang3.ArrayUtils;", "originalCommit": "771f106d88c22a95739dd17b901c1254808c7285", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d86321716334211804bfc242a10847dfeb15d283", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/util/Utils.java b/runtime/src/main/java/org/corfudb/util/Utils.java\nindex d35923bd838..ef4f652b3dd 100644\n--- a/runtime/src/main/java/org/corfudb/util/Utils.java\n+++ b/runtime/src/main/java/org/corfudb/util/Utils.java\n\n@@ -1,24 +1,26 @@\n package org.corfudb.util;\n \n \n+import java.text.DecimalFormat;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+\n import jdk.internal.org.objectweb.asm.util.Printer;\n import jdk.internal.org.objectweb.asm.util.Textifier;\n import jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;\n import lombok.extern.slf4j.Slf4j;\n-import org.corfudb.runtime.view.stream.StreamAddressSpace;\n import org.apache.commons.lang3.ArrayUtils;\n+\n import org.corfudb.protocols.wireprotocol.StreamsAddressResponse;\n import org.corfudb.protocols.wireprotocol.TailsResponse;\n import org.corfudb.runtime.CorfuRuntime;\n import org.corfudb.runtime.view.Address;\n import org.corfudb.runtime.view.Layout;\n+import org.corfudb.runtime.view.stream.StreamAddressSpace;\n \n-import java.text.DecimalFormat;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.UUID;\n /**\n  * Created by crossbach on 5/22/15.\n  */\n"}}, {"oid": "e9f71dd938350eb93fe88914415fb6e32fe36351", "url": "https://github.com/CorfuDB/CorfuDB/commit/e9f71dd938350eb93fe88914415fb6e32fe36351", "message": "Retain caller's context when unwrapping exceptions", "committedDate": "2020-02-20T18:27:31Z", "type": "commit"}, {"oid": "d86321716334211804bfc242a10847dfeb15d283", "url": "https://github.com/CorfuDB/CorfuDB/commit/d86321716334211804bfc242a10847dfeb15d283", "message": "Address comments, add unit test", "committedDate": "2020-02-20T18:28:03Z", "type": "commit"}, {"oid": "a09ee5db4a15b28226f5ec78273e7ff0a8e32055", "url": "https://github.com/CorfuDB/CorfuDB/commit/a09ee5db4a15b28226f5ec78273e7ff0a8e32055", "message": "Retain caller's context when unwrapping exceptions", "committedDate": "2020-02-19T21:45:45Z", "type": "forcePushed"}, {"oid": "d86321716334211804bfc242a10847dfeb15d283", "url": "https://github.com/CorfuDB/CorfuDB/commit/d86321716334211804bfc242a10847dfeb15d283", "message": "Address comments, add unit test", "committedDate": "2020-02-20T18:28:03Z", "type": "forcePushed"}, {"oid": "0edc4a0bac422314cddd8100eab2218d0904b7cb", "url": "https://github.com/CorfuDB/CorfuDB/commit/0edc4a0bac422314cddd8100eab2218d0904b7cb", "message": "Please checkstyle", "committedDate": "2020-02-20T20:17:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzNzk0OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2365#discussion_r382237948", "bodyText": "Can you please write a comment describing what the test is suppose to be doing?", "author": "vjeko", "createdAt": "2020-02-20T20:24:18Z", "path": "test/src/test/java/org/corfudb/runtime/utils/ExceptionContextTest.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package org.corfudb.runtime.utils;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+\n+import org.corfudb.runtime.view.AbstractViewTest;\n+import org.corfudb.util.CFUtils;\n+\n+import org.junit.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class ExceptionContextTest extends AbstractViewTest {\n+\n+    private static class DummyCausingException extends RuntimeException {\n+        DummyCausingException(String message) {\n+            super(message);\n+        }\n+    }\n+\n+    @Test\n+    public void validateCallerStackTracePresent() throws InterruptedException, ArithmeticException {", "originalCommit": "0edc4a0bac422314cddd8100eab2218d0904b7cb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e81403427d412b7777f95c39518658119539d69c", "chunk": "diff --git a/test/src/test/java/org/corfudb/runtime/utils/ExceptionContextTest.java b/test/src/test/java/org/corfudb/runtime/utils/ExceptionContextTest.java\nindex a062d8cb7c8..be9a00ad11c 100644\n--- a/test/src/test/java/org/corfudb/runtime/utils/ExceptionContextTest.java\n+++ b/test/src/test/java/org/corfudb/runtime/utils/ExceptionContextTest.java\n\n@@ -25,21 +25,9 @@ public class ExceptionContextTest extends AbstractViewTest {\n     }\n \n     @Test\n-    public void validateCallerStackTracePresent() throws InterruptedException, ArithmeticException {\n-        final ScheduledExecutorService service = Executors.newSingleThreadScheduledExecutor((r) -> {\n-            Thread t = Executors.defaultThreadFactory().newThread(r);\n-            t.setName(\"exception_context_test_thread\");\n-            t.setDaemon(true);\n-            return t;\n-        });\n-\n-        final CompletableFuture<Integer> future = new CompletableFuture<>();\n-        service.submit(() -> {\n-            try {\n-                throw new DummyCausingException(\"Dummy causing exception\");\n-            } catch (DummyCausingException e) {\n-                future.completeExceptionally(e);\n-            }\n+    public void validateCallerStackTracePresent() throws InterruptedException {\n+        final CompletableFuture<Void> future = CompletableFuture.supplyAsync(() -> {\n+            throw new DummyCausingException(\"Dummy causing exception\");\n         });\n \n         ExecutionException originalExecutionException = null;\n"}}, {"oid": "e81403427d412b7777f95c39518658119539d69c", "url": "https://github.com/CorfuDB/CorfuDB/commit/e81403427d412b7777f95c39518658119539d69c", "message": "Use CompletableFuture.supplyAsync", "committedDate": "2020-02-20T20:32:32Z", "type": "commit"}, {"oid": "9880c0c7bdfe092d345fdb4200eb5a44deca0116", "url": "https://github.com/CorfuDB/CorfuDB/commit/9880c0c7bdfe092d345fdb4200eb5a44deca0116", "message": "Use assertThrows", "committedDate": "2020-02-20T21:48:23Z", "type": "commit"}, {"oid": "8915fa0abe11478126a4bfd3746603a71f80cc91", "url": "https://github.com/CorfuDB/CorfuDB/commit/8915fa0abe11478126a4bfd3746603a71f80cc91", "message": "Add test for extractCauseWithCompleteStacktrace\n\nAlso add docstrings", "committedDate": "2020-02-20T23:45:43Z", "type": "commit"}, {"oid": "1d3abe33ee45b67b5fcb1c8d4814f522b0a8cae7", "url": "https://github.com/CorfuDB/CorfuDB/commit/1d3abe33ee45b67b5fcb1c8d4814f522b0a8cae7", "message": "Merge branch 'master' into anm/exc_context", "committedDate": "2020-02-22T04:46:46Z", "type": "commit"}]}