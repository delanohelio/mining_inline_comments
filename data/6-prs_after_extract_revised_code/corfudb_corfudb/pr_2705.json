{"pr_number": 2705, "pr_title": "Fix Lock ITs", "pr_createdAt": "2020-08-12T05:23:19Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2705", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ3OTY2Ng==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2705#discussion_r469479666", "bodyText": "Shouldn't there be a sleep here?", "author": "Maithem", "createdAt": "2020-08-12T19:07:55Z", "path": "test/src/test/java/org/corfudb/integration/LockIT.java", "diffHunk": "@@ -153,13 +153,18 @@ public void testSingleLockClientMultipleLocks() throws Exception {\n             // Since this is the only client, ALL locks should've been acquired, verify, block until condition is met\n             waitCondition = WaitConditionType.LOCK_ACQUIRED;\n             for (int i=0; i<numLocks; i++) {\n-                log.debug(\"***** Wait until lock \" + i + \" is acquired\");\n+                log.debug(\"***** Wait until lock {} is acquired\", i);\n                 blockUntilWaitCondition.acquire();\n             }\n \n             assertThat(lockAcquiredObservables.get(clientId).getValue()).isEqualTo(numLocks);\n-            lockIds.forEach(lockId ->\n-                assertThat(client.getLocks().get(lockId).getState().getType()).isEqualTo(LockStateType.HAS_LEASE));\n+            lockIds.forEach(lockId -> {\n+                    while(client.getLocks().get(lockId).getState().getType() != LockStateType.HAS_LEASE) {\n+                        // Lock state might take longer to update as the listener is updated before the FSM transitions\n+                        // to the new state\n+                    }", "originalCommit": "284795a4b1864c4670a639c88fc3b6234fbabd73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ3OTk4MA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2705#discussion_r469479980", "bodyText": "And a max timeout wait before the test fails so that it doesn't keep on spinning indefinitely.", "author": "Maithem", "createdAt": "2020-08-12T19:08:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ3OTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ4OTAzMw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2705#discussion_r469489033", "bodyText": "There could be a sleep. The thing is the transition happens in the line right after the listener is notified that the lock was acquired. So technically it shouldn't be spinning for too long. It's just the interleaving between threads...\nAlso, regarding the timeout. Isn't it covered by the max time of each test? otherwise it times out.", "author": "annym", "createdAt": "2020-08-12T19:26:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ3OTY2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU0NzMwNQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2705#discussion_r469547305", "bodyText": "can we add the comment from line 238 here as well?", "author": "pankti-m", "createdAt": "2020-08-12T21:07:05Z", "path": "test/src/test/java/org/corfudb/integration/LockIT.java", "diffHunk": "@@ -230,17 +235,25 @@ public void testMultipleLockClientsSameLock() throws Exception {\n             }\n \n             // Verify that only one client has acquired the lock\n-            List<LockClient> clientsWithLock = getClientsThatAcquiredLock(lockId, clientIdToLockClient);\n+            // We might need to verify for several cycles as\n+            // the observable indicating the lock was acquired is\n+            // triggered before the state update\n+            List<LockClient> clientsWithLock;\n+            do {\n+                clientsWithLock = getClientsThatAcquiredLock(lockId, clientIdToLockClient);\n+            } while (clientsWithLock == null || clientsWithLock.isEmpty());\n+\n             assertThat(clientsWithLock.size()).isEqualTo(1);\n             LockClient clientWithLock = clientsWithLock.get(0);\n \n-\n             // Verify for 5 cycles that the lock is renewed\n             for (int i=0; i < RENEW_CYCLES; i++) {\n                 log.debug(\"***** Wait until lock is renewed\");\n                 // Wait for the renewal cycle + 1, and verify that the lock is still acquired by the same client\n                 Sleep.sleepUninterruptibly(Duration.ofSeconds(LOCK_TIME_CONSTANT + 1));\n-                clientsWithLock = getClientsThatAcquiredLock(lockId, clientIdToLockClient);\n+                do {", "originalCommit": "284795a4b1864c4670a639c88fc3b6234fbabd73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY3NDMzOQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2705#discussion_r469674339", "bodyText": "Done.", "author": "annym", "createdAt": "2020-08-13T03:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU0NzMwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9cda83faeef9f9cba16e30db287c07f555c30195", "chunk": "diff --git a/test/src/test/java/org/corfudb/integration/LockIT.java b/test/src/test/java/org/corfudb/integration/LockIT.java\nindex cee308cc22e..bb6b3ea21b3 100644\n--- a/test/src/test/java/org/corfudb/integration/LockIT.java\n+++ b/test/src/test/java/org/corfudb/integration/LockIT.java\n\n@@ -251,6 +251,10 @@ public class LockIT extends AbstractIT implements Observer {\n                 log.debug(\"***** Wait until lock is renewed\");\n                 // Wait for the renewal cycle + 1, and verify that the lock is still acquired by the same client\n                 Sleep.sleepUninterruptibly(Duration.ofSeconds(LOCK_TIME_CONSTANT + 1));\n+\n+                // We might need to verify for several cycles as\n+                // the observable indicating the lock was acquired is\n+                // triggered before the state update\n                 do {\n                     clientsWithLock = getClientsThatAcquiredLock(lockId, clientIdToLockClient);\n                 } while (clientsWithLock == null || clientsWithLock.isEmpty());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU0NzQ0OQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2705#discussion_r469547449", "bodyText": "comment", "author": "pankti-m", "createdAt": "2020-08-12T21:07:22Z", "path": "test/src/test/java/org/corfudb/integration/LockIT.java", "diffHunk": "@@ -330,7 +350,10 @@ public void testMultipleLockClientsSameLockFailure() throws Exception {\n             }\n \n             // Verify that only one client has acquired the lock\n-            clientsWithLock = getClientsThatAcquiredLock(lockId, clientIdToLockClient);\n+            do {", "originalCommit": "284795a4b1864c4670a639c88fc3b6234fbabd73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY3NDUzMw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2705#discussion_r469674533", "bodyText": "Done.", "author": "annym", "createdAt": "2020-08-13T03:26:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU0NzQ0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "9cda83faeef9f9cba16e30db287c07f555c30195", "chunk": "diff --git a/test/src/test/java/org/corfudb/integration/LockIT.java b/test/src/test/java/org/corfudb/integration/LockIT.java\nindex cee308cc22e..bb6b3ea21b3 100644\n--- a/test/src/test/java/org/corfudb/integration/LockIT.java\n+++ b/test/src/test/java/org/corfudb/integration/LockIT.java\n\n@@ -350,6 +354,10 @@ public class LockIT extends AbstractIT implements Observer {\n             }\n \n             // Verify that only one client has acquired the lock\n+\n+            // We might need to verify for several cycles as\n+            // the observable indicating the lock was acquired is\n+            // triggered before the state update\n             do {\n                 clientsWithLock = getClientsThatAcquiredLock(lockId, clientIdToLockClient);\n             } while (clientsWithLock == null || clientsWithLock.isEmpty());\n"}}, {"oid": "9cda83faeef9f9cba16e30db287c07f555c30195", "url": "https://github.com/CorfuDB/CorfuDB/commit/9cda83faeef9f9cba16e30db287c07f555c30195", "message": "Fix Lock ITs\n\n- Intermittent failures due to race condition on FSM transition.", "committedDate": "2020-08-13T05:25:56Z", "type": "commit"}, {"oid": "9cda83faeef9f9cba16e30db287c07f555c30195", "url": "https://github.com/CorfuDB/CorfuDB/commit/9cda83faeef9f9cba16e30db287c07f555c30195", "message": "Fix Lock ITs\n\n- Intermittent failures due to race condition on FSM transition.", "committedDate": "2020-08-13T05:25:56Z", "type": "forcePushed"}]}