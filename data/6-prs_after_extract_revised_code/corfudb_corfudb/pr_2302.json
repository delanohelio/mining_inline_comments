{"pr_number": 2302, "pr_title": "State Transfer Codec overwrite fix", "pr_createdAt": "2020-01-07T22:28:39Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2302", "timeline": [{"oid": "2ef14597b59753c2c4f94b0be146c25b57c36996", "url": "https://github.com/CorfuDB/CorfuDB/commit/2ef14597b59753c2c4f94b0be146c25b57c36996", "message": "State Transfer Codec overwrite fix", "committedDate": "2020-01-07T22:25:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4NTA0MA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2302#discussion_r363985040", "bodyText": "Issue found: Avoid really long methods.", "author": "corfudb-bot", "createdAt": "2020-01-07T22:34:35Z", "path": "test/src/test/java/org/corfudb/runtime/view/StateTransferTest.java", "diffHunk": "@@ -632,4 +634,131 @@ public void verifyConcurrentStateTransferCompletion() throws Exception {\n         assertThat(corfuRuntime.getLayoutView().getLayout().getSegments().size())\n                 .isEqualTo(1);\n     }\n+\n+\n+    /**\n+     * Here we test the capability of state transfer mechanism to preserve codec info, regardless of the configuration\n+     * that state transfer runtime has.\n+     *\n+     * This test first writes data with none default codecs (default being ZSTD), in the following way:\n+     * 0-2 [inclusive] write data to Node0 with codec LZ4\n+     * 3-5 [inclusive] write data to Node 0, Node1 with NO codec (NONE)\n+     *\n+     * We then add a third node, and let state transfer complete. Finally, we read all the data to confirm\n+     * we are able to decompress all the data after state transfer.\n+     **/\n+    @Test\n+    public void testStateTransferWithNoneDefaultCodec() {", "originalCommit": "2ef14597b59753c2c4f94b0be146c25b57c36996", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4OTU1NQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2302#discussion_r363989555", "bodyText": "I actually did this intentionally; assuming that the client and the server bits have the same codecs. The reason is, to load the new server/client version with an old data log (i.e. uncompressed), and the data can be compressed by bouncing the servers one-by-one to trigger state transfer and compress the data without having to rewrite it via checkpoint. Maybe that's not a deal breaker, but its just something for you to consider.", "author": "Maithem", "createdAt": "2020-01-07T22:48:00Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/orchestrator/actions/StateTransfer.java", "diffHunk": "@@ -221,7 +221,6 @@ private static void transferChunk(Layout layout,\n                 throw new IllegalStateException(\"Missing address\");\n             }\n             LogData ld = (LogData) dataMap.get(address);\n-            ld.setPayloadCodecType(Codec.Type.valueOf(runtime.getParameters().getCodecType()));", "originalCommit": "2ef14597b59753c2c4f94b0be146c25b57c36996", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}