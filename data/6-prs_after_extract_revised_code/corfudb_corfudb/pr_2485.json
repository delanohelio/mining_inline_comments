{"pr_number": 2485, "pr_title": "CorfuStore: Build-to-Build upgrade support", "pr_createdAt": "2020-03-19T20:19:41Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2485", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwNzE5NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r395307194", "bodyText": "please make batchSize configurable", "author": "xnull", "createdAt": "2020-03-19T20:40:59Z", "path": "corfudb-tools/src/main/java/org/corfudb/browser/CorfuStoreBrowser.java", "diffHunk": "@@ -124,12 +128,18 @@ public int printTable(String namespace, String tablename) {\n \n         CorfuTable<CorfuDynamicKey, CorfuDynamicRecord> table = getTable(namespace, tablename);\n         int size = table.size();\n-        for (CorfuDynamicKey entry : table.keySet()) {\n-            builder = new StringBuilder(\"\\nKey:\\n\" + entry.getKey())\n-                .append(\"\\nPayload:\\n\" + table.get(entry).getPayload())\n-                .append(\"\\nMetadata:\\n\" + table.get(entry).getMetadata())\n-                .append(\"\\n====================\\n\");\n-            log.info(builder.toString());\n+        final int batchSize = 50;", "originalCommit": "2f352c91ef80a2dda6e92b146d156a5982ae64a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMyOTIxOA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r395329218", "bodyText": "this is an internal setting that should not be tunable but I will expose it anyway, thanks", "author": "hisundar", "createdAt": "2020-03-19T21:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwNzE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM1ODM2Ng==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r395358366", "bodyText": "actually just had a conversation with the folks using this, we feel exposing this to the browser can cause a lot more confusion than help. this is really an internal batching for RocksDB partitions.", "author": "hisundar", "createdAt": "2020-03-19T22:38:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwNzE5NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwOTI3Nw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r395309277", "bodyText": "please make it configurable", "author": "xnull", "createdAt": "2020-03-19T20:45:14Z", "path": "test/src/test/java/org/corfudb/runtime/collections/CorfuStoreTest.java", "diffHunk": "@@ -264,6 +267,19 @@ public void checkMetadataTransactions() throws Exception {\n         assertThatThrownBy(() ->\n                 table.update(key1, EventInfo.getDefaultInstance(), wrongRevisionMetadata))\n                 .isExactlyInstanceOf(RuntimeException.class);\n+\n+        // Verify the table is readable using entryStream()\n+        final int batchSize = 50;", "originalCommit": "2f352c91ef80a2dda6e92b146d156a5982ae64a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMzMDE0Ng==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r395330146", "bodyText": "this is a unit test", "author": "hisundar", "createdAt": "2020-03-19T21:29:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwOTI3Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3NDI5NQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r395374295", "bodyText": "Can we have a test where the number of entries > batchsize and then verify that the number of partitions is correct and all entries are included in the entryStream api?", "author": "pankti-m", "createdAt": "2020-03-19T23:26:58Z", "path": "test/src/test/java/org/corfudb/runtime/collections/CorfuStoreTest.java", "diffHunk": "@@ -264,6 +267,19 @@ public void checkMetadataTransactions() throws Exception {\n         assertThatThrownBy(() ->\n                 table.update(key1, EventInfo.getDefaultInstance(), wrongRevisionMetadata))\n                 .isExactlyInstanceOf(RuntimeException.class);\n+", "originalCommit": "5b069c93ba418556811b79befd1ea2e30192fcf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3ODAyMg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r395378022", "bodyText": "this api is using the same parameters as checkpoint writer\nI think these good suggestions but are tests we should add to the checkpointer writer probably not here right?", "author": "hisundar", "createdAt": "2020-03-19T23:39:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3NDI5NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "07eb6ce329b5f9f38215c5612fe8e188fb4728ae", "url": "https://github.com/CorfuDB/CorfuDB/commit/07eb6ce329b5f9f38215c5612fe8e188fb4728ae", "message": "CorfuStore: Detected changes to protobuf & test upgrade", "committedDate": "2020-03-22T06:49:46Z", "type": "forcePushed"}, {"oid": "24b38ffc9c1248483fc3239f7b95c56faafa08b5", "url": "https://github.com/CorfuDB/CorfuDB/commit/24b38ffc9c1248483fc3239f7b95c56faafa08b5", "message": "CorfuStore: Detected changes to protobuf & test upgrade\n\nThis is to help QE with their build to build upgrades.\nUpdating the schema on openTable allows them to migrate to\na new protobuf version without having to redeploy their setups.", "committedDate": "2020-03-23T06:10:18Z", "type": "forcePushed"}, {"oid": "731f24d944b0ba5acc670a19e34078c6b2f6bd14", "url": "https://github.com/CorfuDB/CorfuDB/commit/731f24d944b0ba5acc670a19e34078c6b2f6bd14", "message": "CorfuStore: Detected changes to protobuf & test upgrade\n\nThis is to help QE with their build to build upgrades.\nUpdating the schema on openTable allows them to migrate to\na new protobuf version without having to redeploy their setups.", "committedDate": "2020-03-23T06:16:22Z", "type": "forcePushed"}, {"oid": "aa7467337db2717ae70ca1b5fcebf7580e1595f6", "url": "https://github.com/CorfuDB/CorfuDB/commit/aa7467337db2717ae70ca1b5fcebf7580e1595f6", "message": "CorfuStore: Detected changes to protobuf & test upgrade\n\nThis is to help QE with their build to build upgrades.\nUpdating the schema on openTable allows them to migrate to\na new protobuf version without having to redeploy their setups.", "committedDate": "2020-03-23T20:31:42Z", "type": "forcePushed"}, {"oid": "8a03a320df6ccf299a9b1861e4428424e3d1fe90", "url": "https://github.com/CorfuDB/CorfuDB/commit/8a03a320df6ccf299a9b1861e4428424e3d1fe90", "message": "CorfuStore: Detected changes to protobuf & test upgrade\n\nThis is to help QE with their build to build upgrades.\nUpdating the schema on openTable allows them to migrate to\na new protobuf version without having to redeploy their setups.", "committedDate": "2020-03-23T22:46:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwODcwNg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r396808706", "bodyText": "Should this be log.warn?", "author": "WenbinZhu", "createdAt": "2020-03-23T23:02:38Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java", "diffHunk": "@@ -163,10 +165,35 @@ void registerTable(@Nonnull String namespace,\n \n         TableMetadata.Builder metadataBuilder = TableMetadata.newBuilder();\n         metadataBuilder.setDiskBased(tableOptions.getPersistentDataPath().isPresent());\n+\n+        // Schema validation to ensure that there is either proper modification of the schema across open calls.\n+        // Or no modification to the protobuf files.\n+        boolean hasSchemaChanged = false;\n+        CorfuRecord<TableDescriptors, TableMetadata> oldRecord = this.registryTable.get(tableNameKey);\n+        if (oldRecord != null) {\n+            if (!oldRecord.getPayload().getFileDescriptorsMap().equals(tableDescriptors.getFileDescriptorsMap())) {\n+                hasSchemaChanged = true;\n+                int oldTableEntries = tableMap.get(\n+                        TableRegistry.getFullyQualifiedTableName(namespace, tableName)\n+                ).count();\n+                log.error(\"registerTable: Schema update detected for table \"+namespace+\" \"+ tableName);", "originalCommit": "8a03a320df6ccf299a9b1861e4428424e3d1fe90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTIxOA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r397535218", "bodyText": "I kept it as error because it is unsupported at this time and folks should really never see this.\nIn next release, we can move this to info once a migration path has been established.\nDoes that sound ok?", "author": "hisundar", "createdAt": "2020-03-25T00:06:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwODcwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzODY0Nw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r397538647", "bodyText": "Sure.", "author": "WenbinZhu", "createdAt": "2020-03-25T00:17:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwODcwNg=="}], "type": "inlineReview", "revised_code": {"commit": "b1ba1b229a7b79927f1a18145820b4eb769b85db", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java b/runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java\nindex a9c8e3ac3cb..7c585e5d9fd 100644\n--- a/runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java\n+++ b/runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java\n\n@@ -173,16 +173,9 @@ public class TableRegistry {\n         if (oldRecord != null) {\n             if (!oldRecord.getPayload().getFileDescriptorsMap().equals(tableDescriptors.getFileDescriptorsMap())) {\n                 hasSchemaChanged = true;\n-                int oldTableEntries = tableMap.get(\n-                        TableRegistry.getFullyQualifiedTableName(namespace, tableName)\n-                ).count();\n                 log.error(\"registerTable: Schema update detected for table \"+namespace+\" \"+ tableName);\n                 log.debug(\"registerTable: old schema:\"+oldRecord.getPayload().getFileDescriptorsMap());\n                 log.debug(\"registerTable: new schema:\"+tableDescriptors.getFileDescriptorsMap());\n-                // Ensure that the caller has done the due diligence of calling clear() and running checkpoint+trim!\n-                if (oldTableEntries != 0) {\n-                    log.warn(\"registerTable: updating schema with \"+oldTableEntries+ \" old entries still present!\");\n-                }\n             }\n         }\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwOTQ4NQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r396809485", "bodyText": "log.error? Is this used when you were debugging and forgot to delete?", "author": "WenbinZhu", "createdAt": "2020-03-23T23:04:44Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java", "diffHunk": "@@ -238,6 +265,7 @@ public static String getFullyQualifiedTableName(String namespace, String tableNa\n      */\n     private <T extends Message> void addTypeToClassMap(T msg) {\n         String typeUrl = getTypeUrl(msg.getDescriptorForType());\n+        log.error(\"Adding \"+ typeUrl + \" serializer map..\");", "originalCommit": "8a03a320df6ccf299a9b1861e4428424e3d1fe90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTU1MA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r397535550", "bodyText": "Good catch! thanks - this is from the debugging patch.", "author": "hisundar", "createdAt": "2020-03-25T00:07:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwOTQ4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "37bd894fd046b3e6639878e776f322e559a8b5e7", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java b/runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java\nindex a9c8e3ac3cb..156a143a4dd 100644\n--- a/runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java\n+++ b/runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java\n\n@@ -265,7 +258,6 @@ public class TableRegistry {\n      */\n     private <T extends Message> void addTypeToClassMap(T msg) {\n         String typeUrl = getTypeUrl(msg.getDescriptorForType());\n-        log.error(\"Adding \"+ typeUrl + \" serializer map..\");\n         // Register the schemas to schema table.\n         if (!classMap.containsKey(typeUrl)) {\n             classMap.put(typeUrl, msg.getClass());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgxMDQ0Mg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r396810442", "bodyText": "Same here?", "author": "WenbinZhu", "createdAt": "2020-03-23T23:07:16Z", "path": "runtime/src/main/java/org/corfudb/util/serializer/ProtobufSerializer.java", "diffHunk": "@@ -86,6 +86,13 @@ public Object deserialize(ByteBuf b, CorfuRuntime rt) {\n             bbis.readFully(data);\n             Record record = Record.parseFrom(data);\n             Any payload = record.getPayload();\n+            if (!classMap.containsKey(payload.getTypeUrl())) {\n+                log.error(\"Deserialization error: Unknown type \"+payload.getTypeUrl()+ \" dumping map..\\n\");\n+                for (String entry: classMap.keySet()) {\n+                    log.error(entry + \"=>\" + classMap.get(entry));", "originalCommit": "8a03a320df6ccf299a9b1861e4428424e3d1fe90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTc4NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r397535784", "bodyText": "No, we want this line to be printed out even going forward, since it helps diagnose a tricky deserialization issue, so this is intentional!", "author": "hisundar", "createdAt": "2020-03-25T00:08:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgxMDQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzODg2Mw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r397538863", "bodyText": "Okay, btw can you make it more descriptive?", "author": "WenbinZhu", "createdAt": "2020-03-25T00:17:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgxMDQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzOTUzMQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2485#discussion_r398039531", "bodyText": "ok I will try", "author": "hisundar", "createdAt": "2020-03-25T17:30:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgxMDQ0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5d3e818f8cb921c5c33bd1f3e4640c58f8b496e4", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/util/serializer/ProtobufSerializer.java b/runtime/src/main/java/org/corfudb/util/serializer/ProtobufSerializer.java\nindex 0cfc0b15e74..9f0d282ab36 100644\n--- a/runtime/src/main/java/org/corfudb/util/serializer/ProtobufSerializer.java\n+++ b/runtime/src/main/java/org/corfudb/util/serializer/ProtobufSerializer.java\n\n@@ -87,7 +87,8 @@ public class ProtobufSerializer implements ISerializer {\n             Record record = Record.parseFrom(data);\n             Any payload = record.getPayload();\n             if (!classMap.containsKey(payload.getTypeUrl())) {\n-                log.error(\"Deserialization error: Unknown type \"+payload.getTypeUrl()+ \" dumping map..\\n\");\n+                log.error(\"Deserialization error: Encountered a log update for this class \"+payload.getTypeUrl()\n+                        +\" but its corresponding class type cannot be found in in-memory type map. Dumping map..\\n\");\n                 for (String entry: classMap.keySet()) {\n                     log.error(entry + \"=>\" + classMap.get(entry));\n                 }\n"}}, {"oid": "b1ba1b229a7b79927f1a18145820b4eb769b85db", "url": "https://github.com/CorfuDB/CorfuDB/commit/b1ba1b229a7b79927f1a18145820b4eb769b85db", "message": "CorfuStore: Detected changes to protobuf & test upgrade\n\nThis is to help QE with their build to build upgrades.\nUpdating the schema on openTable allows them to migrate to\na new protobuf version without having to redeploy their setups.", "committedDate": "2020-03-24T17:48:11Z", "type": "forcePushed"}, {"oid": "37bd894fd046b3e6639878e776f322e559a8b5e7", "url": "https://github.com/CorfuDB/CorfuDB/commit/37bd894fd046b3e6639878e776f322e559a8b5e7", "message": "CorfuStore: Detected changes to protobuf & test upgrade\n\nThis is to help QE with their build to build upgrades.\nUpdating the schema on openTable allows them to migrate to\na new protobuf version without having to redeploy their setups.", "committedDate": "2020-03-25T00:09:27Z", "type": "forcePushed"}, {"oid": "5d3e818f8cb921c5c33bd1f3e4640c58f8b496e4", "url": "https://github.com/CorfuDB/CorfuDB/commit/5d3e818f8cb921c5c33bd1f3e4640c58f8b496e4", "message": "CorfuStore: Detected changes to protobuf & test upgrade\n\nThis is to help QE with their build to build upgrades.\nUpdating the schema on openTable allows them to migrate to\na new protobuf version without having to redeploy their setups.", "committedDate": "2020-03-25T17:32:58Z", "type": "forcePushed"}, {"oid": "2966c8eee46b876df9844e94f1af559a33ca506d", "url": "https://github.com/CorfuDB/CorfuDB/commit/2966c8eee46b876df9844e94f1af559a33ca506d", "message": "CorfuStore: expose entryStream() for large table iteration", "committedDate": "2020-03-29T05:34:19Z", "type": "commit"}, {"oid": "1942e522d08130ce50bff96a358efa5a5b7229c1", "url": "https://github.com/CorfuDB/CorfuDB/commit/1942e522d08130ce50bff96a358efa5a5b7229c1", "message": "CorfuStore: Detected changes to protobuf & test upgrade\n\nThis is to help QE with their build to build upgrades.\nUpdating the schema on openTable allows them to migrate to\na new protobuf version without having to redeploy their setups", "committedDate": "2020-03-29T05:34:19Z", "type": "commit"}, {"oid": "1942e522d08130ce50bff96a358efa5a5b7229c1", "url": "https://github.com/CorfuDB/CorfuDB/commit/1942e522d08130ce50bff96a358efa5a5b7229c1", "message": "CorfuStore: Detected changes to protobuf & test upgrade\n\nThis is to help QE with their build to build upgrades.\nUpdating the schema on openTable allows them to migrate to\na new protobuf version without having to redeploy their setups", "committedDate": "2020-03-29T05:34:19Z", "type": "forcePushed"}]}