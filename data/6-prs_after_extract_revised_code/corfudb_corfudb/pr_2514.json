{"pr_number": 2514, "pr_title": "Include deep size of metadataMap in LogData size calculation for Caffeine", "pr_createdAt": "2020-04-18T05:41:17Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2514", "timeline": [{"oid": "3e7ff161b6a1729716c4f5568168986c42c871bd", "url": "https://github.com/CorfuDB/CorfuDB/commit/3e7ff161b6a1729716c4f5568168986c42c871bd", "message": "Include deep size of metadataMap in LogData size calculation for\nCaffeine.", "committedDate": "2020-04-18T18:10:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4MDkwNA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2514#discussion_r411080904", "bodyText": "Can you replace this with a function call? For now, we suppose there is no performance impact if number of streams in a transaction is less than 10 tables? But if there are more tables, it may decrease the performance. Please put comments to the function and check how many streams in the map, if it is bigger than a threshold like 20, print a warn log.", "author": "xiaoqin2012", "createdAt": "2020-04-20T04:14:06Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java", "diffHunk": "@@ -27,7 +29,8 @@\n     public LogUnitServerCache(LogUnitServerConfig config, StreamLog streamLog) {\n         this.streamLog = streamLog;\n         this.dataCache = Caffeine.newBuilder()\n-                .<Long, ILogData>weigher((addr, logData) -> logData.getSizeEstimate())\n+                .<Long, ILogData>weigher((addr, logData) -> logData.getSizeEstimate() +", "originalCommit": "3e7ff161b6a1729716c4f5568168986c42c871bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE1OTY2NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2514#discussion_r414159664", "bodyText": "done", "author": "pankti-m", "createdAt": "2020-04-23T22:14:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4MDkwNA=="}], "type": "inlineReview", "revised_code": {"commit": "5ab37b3b7a7fee928b2028125c5e8586da3cf63a", "chunk": "diff --git a/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java b/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java\nindex 5d875d3df90..ede4dca6bac 100644\n--- a/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java\n+++ b/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java\n\n@@ -26,16 +26,31 @@ public class LogUnitServerCache {\n     private final LoadingCache<Long, ILogData> dataCache;\n     private final StreamLog streamLog;\n \n+    //Size of key in the cache.  8 bytes as its a long\n+    private final int KEY_SIZE = 8;\n+\n+    //Empirical threshold of number of streams in a logdata beyond which server performance may be slow\n+    private final int MAX_STREAM_THRESHOLD = 20;\n+\n     public LogUnitServerCache(LogUnitServerConfig config, StreamLog streamLog) {\n         this.streamLog = streamLog;\n         this.dataCache = Caffeine.newBuilder()\n-                .<Long, ILogData>weigher((addr, logData) -> logData.getSizeEstimate() +\n-                    (int)(sizeOf.deepSizeOf(logData.getMetadataMap())))\n+                .<Long, ILogData>weigher((addr, logData) -> getLogDataTotalSize(logData))\n                 .maximumWeight(config.getMaxCacheSize())\n                 .removalListener(this::handleEviction)\n                 .build(this::handleRetrieval);\n     }\n \n+    private int getLogDataTotalSize(ILogData logData) {\n+        if (logData.getStreams().size() > MAX_STREAM_THRESHOLD) {\n+            log.warn(\"Number of streams in this data is higher that threshold {}.\" +\n+                \"This may impact the server performance\", MAX_STREAM_THRESHOLD);\n+        }\n+        return logData.getSizeEstimate() +\n+            (int)(sizeOf.deepSizeOf(logData.getMetadataMap())) +\n+            KEY_SIZE;\n+    }\n+\n     /**\n      * Retrieves the LogUnitEntry from disk, given an address.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxMzU3OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2514#discussion_r413413578", "bodyText": "Remove this.", "author": "WenbinZhu", "createdAt": "2020-04-23T00:01:22Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java", "diffHunk": "@@ -91,6 +94,7 @@ public ILogData get(long address) {\n      */\n     public void put(long address, ILogData entry) {\n         log.trace(\"LogUnitServerCache.put: Cache write[{} : {}]\", address, entry);\n+        //System.out.println(\"Metadata map deep size - \" + sizeOf.deepSizeOf(entry.getMetadataMap()));", "originalCommit": "3e7ff161b6a1729716c4f5568168986c42c871bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE1OTc1NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2514#discussion_r414159754", "bodyText": "done", "author": "pankti-m", "createdAt": "2020-04-23T22:14:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxMzU3OA=="}], "type": "inlineReview", "revised_code": {"commit": "5ab37b3b7a7fee928b2028125c5e8586da3cf63a", "chunk": "diff --git a/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java b/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java\nindex 5d875d3df90..ede4dca6bac 100644\n--- a/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java\n+++ b/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java\n\n@@ -94,7 +109,6 @@ public class LogUnitServerCache {\n      */\n     public void put(long address, ILogData entry) {\n         log.trace(\"LogUnitServerCache.put: Cache write[{} : {}]\", address, entry);\n-        //System.out.println(\"Metadata map deep size - \" + sizeOf.deepSizeOf(entry.getMetadataMap()));\n         dataCache.put(address, entry);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxMzc1Mg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2514#discussion_r413413752", "bodyText": "Add 8 bytes for the key", "author": "WenbinZhu", "createdAt": "2020-04-23T00:01:47Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java", "diffHunk": "@@ -27,7 +29,8 @@\n     public LogUnitServerCache(LogUnitServerConfig config, StreamLog streamLog) {\n         this.streamLog = streamLog;\n         this.dataCache = Caffeine.newBuilder()\n-                .<Long, ILogData>weigher((addr, logData) -> logData.getSizeEstimate())\n+                .<Long, ILogData>weigher((addr, logData) -> logData.getSizeEstimate() +", "originalCommit": "3e7ff161b6a1729716c4f5568168986c42c871bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE1OTcxMg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2514#discussion_r414159712", "bodyText": "done", "author": "pankti-m", "createdAt": "2020-04-23T22:14:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxMzc1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5ab37b3b7a7fee928b2028125c5e8586da3cf63a", "chunk": "diff --git a/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java b/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java\nindex 5d875d3df90..ede4dca6bac 100644\n--- a/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java\n+++ b/infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServerCache.java\n\n@@ -26,16 +26,31 @@ public class LogUnitServerCache {\n     private final LoadingCache<Long, ILogData> dataCache;\n     private final StreamLog streamLog;\n \n+    //Size of key in the cache.  8 bytes as its a long\n+    private final int KEY_SIZE = 8;\n+\n+    //Empirical threshold of number of streams in a logdata beyond which server performance may be slow\n+    private final int MAX_STREAM_THRESHOLD = 20;\n+\n     public LogUnitServerCache(LogUnitServerConfig config, StreamLog streamLog) {\n         this.streamLog = streamLog;\n         this.dataCache = Caffeine.newBuilder()\n-                .<Long, ILogData>weigher((addr, logData) -> logData.getSizeEstimate() +\n-                    (int)(sizeOf.deepSizeOf(logData.getMetadataMap())))\n+                .<Long, ILogData>weigher((addr, logData) -> getLogDataTotalSize(logData))\n                 .maximumWeight(config.getMaxCacheSize())\n                 .removalListener(this::handleEviction)\n                 .build(this::handleRetrieval);\n     }\n \n+    private int getLogDataTotalSize(ILogData logData) {\n+        if (logData.getStreams().size() > MAX_STREAM_THRESHOLD) {\n+            log.warn(\"Number of streams in this data is higher that threshold {}.\" +\n+                \"This may impact the server performance\", MAX_STREAM_THRESHOLD);\n+        }\n+        return logData.getSizeEstimate() +\n+            (int)(sizeOf.deepSizeOf(logData.getMetadataMap())) +\n+            KEY_SIZE;\n+    }\n+\n     /**\n      * Retrieves the LogUnitEntry from disk, given an address.\n      *\n"}}, {"oid": "9c32d48da90bc2d63dcf3642f4bace5e8a8563d0", "url": "https://github.com/CorfuDB/CorfuDB/commit/9c32d48da90bc2d63dcf3642f4bace5e8a8563d0", "message": "Include deep size of metadataMap in LogData size calculation for\nCaffeine.", "committedDate": "2020-04-23T21:47:24Z", "type": "forcePushed"}, {"oid": "5ab37b3b7a7fee928b2028125c5e8586da3cf63a", "url": "https://github.com/CorfuDB/CorfuDB/commit/5ab37b3b7a7fee928b2028125c5e8586da3cf63a", "message": "Include deep size of metadataMap in LogData size calculation for Caffeine.", "committedDate": "2020-04-23T22:11:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3NDAxMw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2514#discussion_r414774013", "bodyText": "Expand", "author": "WenbinZhu", "createdAt": "2020-04-24T18:20:41Z", "path": "test/src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java", "diffHunk": "@@ -19,10 +19,7 @@\n import java.io.RandomAccessFile;\n import java.nio.ByteBuffer;\n import java.nio.channels.FileChannel;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.UUID;\n+import java.util.*;", "originalCommit": "5ab37b3b7a7fee928b2028125c5e8586da3cf63a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a3d91909da5aef4d7e5ee2fe2d08171c2d058514", "chunk": "diff --git a/test/src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java b/test/src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java\nindex 7842e10840f..1cd1aec5de9 100644\n--- a/test/src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java\n+++ b/test/src/test/java/org/corfudb/infrastructure/LogUnitServerTest.java\n\n@@ -19,7 +19,11 @@ import java.io.IOException;\n import java.io.RandomAccessFile;\n import java.nio.ByteBuffer;\n import java.nio.channels.FileChannel;\n-import java.util.*;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Random;\n+import java.util.UUID;\n import java.util.concurrent.CompletableFuture;\n \n import static org.assertj.core.api.Assertions.assertThatThrownBy;\n"}}, {"oid": "a3d91909da5aef4d7e5ee2fe2d08171c2d058514", "url": "https://github.com/CorfuDB/CorfuDB/commit/a3d91909da5aef4d7e5ee2fe2d08171c2d058514", "message": "Include deep size of metadataMap in LogData size calculation for Caffeine.", "committedDate": "2020-04-24T18:49:06Z", "type": "commit"}, {"oid": "a3d91909da5aef4d7e5ee2fe2d08171c2d058514", "url": "https://github.com/CorfuDB/CorfuDB/commit/a3d91909da5aef4d7e5ee2fe2d08171c2d058514", "message": "Include deep size of metadataMap in LogData size calculation for Caffeine.", "committedDate": "2020-04-24T18:49:06Z", "type": "forcePushed"}]}