{"pr_number": 2326, "pr_title": "Explicit close", "pr_createdAt": "2020-01-26T04:00:41Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2326", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxODQ0Mg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2326#discussion_r371518442", "bodyText": "Do you not need a precheck for checkStatus before invoking api or checkHandle is enough ?", "author": "medhavidhawan", "createdAt": "2020-01-27T22:28:13Z", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package org.corfudb.runtime.collections;\n+\n+import org.corfudb.runtime.exceptions.unrecoverable.UnrecoverableCorfuError;\n+import org.rocksdb.RocksDBException;\n+import org.rocksdb.RocksIterator;\n+import org.rocksdb.RocksIteratorInterface;\n+\n+/**\n+ *\n+ * A wrapper class that makes a access to the RocksIterator safe: the rocks library does some checks but they\n+ * are enforced via assert, but assert checking is disabled on many jvms by default, hence the explicit checking.\n+ *\n+ * Created by Maithem on 1/24/20.\n+ */\n+public class CheckedRocksIterator implements RocksIteratorInterface {\n+\n+    private final RocksIterator iterator;\n+    public CheckedRocksIterator(RocksIterator iterator) {\n+        this.iterator = iterator;\n+    }\n+\n+    private void checkHandle() {\n+        if (!iterator.isOwningHandle()) {\n+            throw new IllegalStateException(\"Handle is invalid\");\n+        }\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public boolean isValid() {\n+        checkHandle();\n+        boolean res =  iterator.isValid();\n+        checkStatus();\n+        return res;\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void seekToFirst() {\n+        checkHandle();\n+        iterator.seekToFirst();\n+        checkStatus();\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void seekToLast() {\n+        throw new UnsupportedOperationException(\"seekToLast\");\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void seek(byte[] target) {\n+        throw new UnsupportedOperationException(\"seek\");\n+    }\n+\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void seekForPrev(byte[] target){\n+        throw new UnsupportedOperationException(\"seekForPrev\");\n+    }\n+\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void next() {\n+       checkHandle();\n+       iterator.next();\n+       checkStatus();\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void prev() {\n+        throw new UnsupportedOperationException(\"prev\");\n+    }\n+\n+    /**\n+     * Returns the key of the current position of the iterator.\n+     */\n+    public byte[] key() {\n+        checkHandle();\n+        byte[] res = iterator.key();", "originalCommit": "f51439f225d709e2bd1134374603b0b45a0085bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE5MzgyMg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2326#discussion_r373193822", "bodyText": "The checkHandle and checkStatus  verifies the validity of the call.", "author": "Maithem", "createdAt": "2020-01-30T21:07:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxODQ0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c6740450be92a42a88a50b358442a0e9bacd0262", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java b/runtime/src/main/java/org/corfudb/runtime/collections/WrappedRocksIterator.java\nsimilarity index 80%\nrename from runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java\nrename to runtime/src/main/java/org/corfudb/runtime/collections/WrappedRocksIterator.java\nindex bee9995a276..2f5d2d63ba4 100644\n--- a/runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java\n+++ b/runtime/src/main/java/org/corfudb/runtime/collections/WrappedRocksIterator.java\n\n@@ -12,16 +12,20 @@ import org.rocksdb.RocksIteratorInterface;\n  *\n  * Created by Maithem on 1/24/20.\n  */\n-public class CheckedRocksIterator implements RocksIteratorInterface {\n+public class WrappedRocksIterator implements RocksIteratorInterface {\n \n     private final RocksIterator iterator;\n-    public CheckedRocksIterator(RocksIterator iterator) {\n+    public WrappedRocksIterator(RocksIterator iterator) {\n         this.iterator = iterator;\n     }\n \n+    /**\n+     * A helper method that is called before accessing the iterator.\n+     * This is necessary to make sure that the iterator hasn't been closed.\n+     */\n     private void checkHandle() {\n         if (!iterator.isOwningHandle()) {\n-            throw new IllegalStateException(\"Handle is invalid\");\n+            throw new IllegalStateException(\"RocksIterator has been closed\");\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxOTk1Nw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2326#discussion_r371519957", "bodyText": "Please add note on what it checks on rocksdb", "author": "medhavidhawan", "createdAt": "2020-01-27T22:31:48Z", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package org.corfudb.runtime.collections;\n+\n+import org.corfudb.runtime.exceptions.unrecoverable.UnrecoverableCorfuError;\n+import org.rocksdb.RocksDBException;\n+import org.rocksdb.RocksIterator;\n+import org.rocksdb.RocksIteratorInterface;\n+\n+/**\n+ *\n+ * A wrapper class that makes a access to the RocksIterator safe: the rocks library does some checks but they\n+ * are enforced via assert, but assert checking is disabled on many jvms by default, hence the explicit checking.\n+ *\n+ * Created by Maithem on 1/24/20.\n+ */\n+public class CheckedRocksIterator implements RocksIteratorInterface {\n+\n+    private final RocksIterator iterator;\n+    public CheckedRocksIterator(RocksIterator iterator) {\n+        this.iterator = iterator;\n+    }\n+\n+    private void checkHandle() {", "originalCommit": "f51439f225d709e2bd1134374603b0b45a0085bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE5NDU5Mw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2326#discussion_r373194593", "bodyText": "Added comment.", "author": "Maithem", "createdAt": "2020-01-30T21:09:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxOTk1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c6740450be92a42a88a50b358442a0e9bacd0262", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java b/runtime/src/main/java/org/corfudb/runtime/collections/WrappedRocksIterator.java\nsimilarity index 80%\nrename from runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java\nrename to runtime/src/main/java/org/corfudb/runtime/collections/WrappedRocksIterator.java\nindex bee9995a276..2f5d2d63ba4 100644\n--- a/runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java\n+++ b/runtime/src/main/java/org/corfudb/runtime/collections/WrappedRocksIterator.java\n\n@@ -12,16 +12,20 @@ import org.rocksdb.RocksIteratorInterface;\n  *\n  * Created by Maithem on 1/24/20.\n  */\n-public class CheckedRocksIterator implements RocksIteratorInterface {\n+public class WrappedRocksIterator implements RocksIteratorInterface {\n \n     private final RocksIterator iterator;\n-    public CheckedRocksIterator(RocksIterator iterator) {\n+    public WrappedRocksIterator(RocksIterator iterator) {\n         this.iterator = iterator;\n     }\n \n+    /**\n+     * A helper method that is called before accessing the iterator.\n+     * This is necessary to make sure that the iterator hasn't been closed.\n+     */\n     private void checkHandle() {\n         if (!iterator.isOwningHandle()) {\n-            throw new IllegalStateException(\"Handle is invalid\");\n+            throw new IllegalStateException(\"RocksIterator has been closed\");\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyMDY1OQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2326#discussion_r371520659", "bodyText": "nit:This code is repeated in every method.", "author": "medhavidhawan", "createdAt": "2020-01-27T22:33:38Z", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package org.corfudb.runtime.collections;\n+\n+import org.corfudb.runtime.exceptions.unrecoverable.UnrecoverableCorfuError;\n+import org.rocksdb.RocksDBException;\n+import org.rocksdb.RocksIterator;\n+import org.rocksdb.RocksIteratorInterface;\n+\n+/**\n+ *\n+ * A wrapper class that makes a access to the RocksIterator safe: the rocks library does some checks but they\n+ * are enforced via assert, but assert checking is disabled on many jvms by default, hence the explicit checking.\n+ *\n+ * Created by Maithem on 1/24/20.\n+ */\n+public class CheckedRocksIterator implements RocksIteratorInterface {\n+\n+    private final RocksIterator iterator;\n+    public CheckedRocksIterator(RocksIterator iterator) {\n+        this.iterator = iterator;\n+    }\n+\n+    private void checkHandle() {\n+        if (!iterator.isOwningHandle()) {\n+            throw new IllegalStateException(\"Handle is invalid\");\n+        }\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public boolean isValid() {\n+        checkHandle();", "originalCommit": "f51439f225d709e2bd1134374603b0b45a0085bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6740450be92a42a88a50b358442a0e9bacd0262", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java b/runtime/src/main/java/org/corfudb/runtime/collections/WrappedRocksIterator.java\nsimilarity index 80%\nrename from runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java\nrename to runtime/src/main/java/org/corfudb/runtime/collections/WrappedRocksIterator.java\nindex bee9995a276..2f5d2d63ba4 100644\n--- a/runtime/src/main/java/org/corfudb/runtime/collections/CheckedRocksIterator.java\n+++ b/runtime/src/main/java/org/corfudb/runtime/collections/WrappedRocksIterator.java\n\n@@ -12,16 +12,20 @@ import org.rocksdb.RocksIteratorInterface;\n  *\n  * Created by Maithem on 1/24/20.\n  */\n-public class CheckedRocksIterator implements RocksIteratorInterface {\n+public class WrappedRocksIterator implements RocksIteratorInterface {\n \n     private final RocksIterator iterator;\n-    public CheckedRocksIterator(RocksIterator iterator) {\n+    public WrappedRocksIterator(RocksIterator iterator) {\n         this.iterator = iterator;\n     }\n \n+    /**\n+     * A helper method that is called before accessing the iterator.\n+     * This is necessary to make sure that the iterator hasn't been closed.\n+     */\n     private void checkHandle() {\n         if (!iterator.isOwningHandle()) {\n-            throw new IllegalStateException(\"Handle is invalid\");\n+            throw new IllegalStateException(\"RocksIterator has been closed\");\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyNTAxOQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2326#discussion_r371525019", "bodyText": "Could you please add comments as to reason why try with resources is necessary here.", "author": "medhavidhawan", "createdAt": "2020-01-27T22:44:43Z", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -358,19 +358,21 @@ public void insert(@ConflictParameter K key, V value) {\n      */\n     @Accessor\n     public List<V> scanAndFilter(Predicate<? super V> valuePredicate) {\n-        return mainMap.entryStream()\n-                .map(Entry::getValue).filter(valuePredicate)\n-                .collect(Collectors.toCollection(ArrayList::new));\n+        try (Stream<Entry<K, V>> stream = mainMap.entryStream()) {", "originalCommit": "f51439f225d709e2bd1134374603b0b45a0085bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3026eab4ae8751a53fabe36047ab009c5db1c66", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java b/runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java\nindex 126574a9776..a7c970c21af 100644\n--- a/runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java\n+++ b/runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java\n\n@@ -358,10 +378,9 @@ public class CorfuTable<K ,V> implements\n      */\n     @Accessor\n     public List<V> scanAndFilter(Predicate<? super V> valuePredicate) {\n-        try (Stream<Entry<K, V>> stream = mainMap.entryStream()) {\n-            return stream.map(Entry::getValue).filter(valuePredicate)\n-                    .collect(Collectors.toCollection(ArrayList::new));\n-        }\n+        return pool.submit(() -> mainMap.entryStream()\n+                .map(Entry::getValue).filter(valuePredicate)\n+                .collect(Collectors.toCollection(ArrayList::new))).join();\n     }\n \n     /** {@inheritDoc} */\n"}}, {"oid": "c6740450be92a42a88a50b358442a0e9bacd0262", "url": "https://github.com/CorfuDB/CorfuDB/commit/c6740450be92a42a88a50b358442a0e9bacd0262", "message": "Explicitly Close Map Streams\n\nAlthough RocksDB iterators get closed automatically by finalize,\nthey should be closed right after they are no longer needed and\nnot relay on the Java's GC to release those resources.", "committedDate": "2020-01-31T03:43:51Z", "type": "forcePushed"}, {"oid": "d36833eacea200bcec998c676c725b6ff0eef60f", "url": "https://github.com/CorfuDB/CorfuDB/commit/d36833eacea200bcec998c676c725b6ff0eef60f", "message": "Explicitly Close Map Streams\n\nAlthough RocksDB iterators get closed automatically by finalize,\nthey should be closed right after they are no longer needed and\nnot relay on the Java's GC to release those resources.", "committedDate": "2020-01-31T03:47:08Z", "type": "forcePushed"}, {"oid": "1f3dece27a5f5998c5f62608585dd955bb36ef2d", "url": "https://github.com/CorfuDB/CorfuDB/commit/1f3dece27a5f5998c5f62608585dd955bb36ef2d", "message": "Explicitly Close Map Streams\n\nAlthough RocksDB iterators get closed automatically by finalize,\nthey should be closed right after they are no longer needed and\nnot relay on the Java's GC to release those resources.", "committedDate": "2020-01-31T18:17:57Z", "type": "forcePushed"}, {"oid": "826d1800cf64cee2cc964193754433e6d6175992", "url": "https://github.com/CorfuDB/CorfuDB/commit/826d1800cf64cee2cc964193754433e6d6175992", "message": "Explicitly Close Map Streams\n\nAlthough RocksDB iterators get closed automatically by finalize,\nthey should be closed right after they are no longer needed and\nnot relay on the Java's GC to release those resources.", "committedDate": "2020-01-31T18:20:41Z", "type": "forcePushed"}, {"oid": "c3026eab4ae8751a53fabe36047ab009c5db1c66", "url": "https://github.com/CorfuDB/CorfuDB/commit/c3026eab4ae8751a53fabe36047ab009c5db1c66", "message": "Explicitly Close Map Streams\n\nAlthough RocksDB iterators get closed automatically by finalize,\nthey should be closed right after they are no longer needed and\nnot relay on the Java's GC to release those resources.", "committedDate": "2020-01-31T22:17:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcxMTQ4NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2326#discussion_r373711484", "bodyText": "With this change, shall we put this log info before the try-with statement?", "author": "WenbinZhu", "createdAt": "2020-01-31T22:21:43Z", "path": "runtime/src/main/java/org/corfudb/runtime/CheckpointWriter.java", "diffHunk": "@@ -154,11 +148,10 @@ public Token appendCheckpoint(Token snapshotTimestamp) {\n                 .snapshot(snapshotTimestamp)\n                 .build()\n                 .begin();\n-        try (Timer.Context context = MetricsUtils.getConditionalContext(appendCheckpointTimer)) {\n+        try (Stream<Map.Entry> entries = this.map.entryStream()) {\n             // A checkpoint writer will do two accesses one to obtain the object\n             // vlo version and to get a shallow copy of the entry set\n             log.info(\"appendCheckpoint: Started checkpoint for {} at snapshot {}\", streamId, snapshotTimestamp);", "originalCommit": "c3026eab4ae8751a53fabe36047ab009c5db1c66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcxMjMwOQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2326#discussion_r373712309", "bodyText": "done.", "author": "Maithem", "createdAt": "2020-01-31T22:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcxMTQ4NA=="}], "type": "inlineReview", "revised_code": {"commit": "e822b831810632b685448133fc797bc43fd481b8", "chunk": "diff --git a/runtime/src/main/java/org/corfudb/runtime/CheckpointWriter.java b/runtime/src/main/java/org/corfudb/runtime/CheckpointWriter.java\nindex c75e2f6b0e3..88e03a3febd 100644\n--- a/runtime/src/main/java/org/corfudb/runtime/CheckpointWriter.java\n+++ b/runtime/src/main/java/org/corfudb/runtime/CheckpointWriter.java\n\n@@ -148,10 +148,12 @@ public class CheckpointWriter<T extends StreamingMap> {\n                 .snapshot(snapshotTimestamp)\n                 .build()\n                 .begin();\n+\n+        log.info(\"appendCheckpoint: Started checkpoint for {} at snapshot {}\", streamId, snapshotTimestamp);\n+        \n         try (Stream<Map.Entry> entries = this.map.entryStream()) {\n             // A checkpoint writer will do two accesses one to obtain the object\n             // vlo version and to get a shallow copy of the entry set\n-            log.info(\"appendCheckpoint: Started checkpoint for {} at snapshot {}\", streamId, snapshotTimestamp);\n             // The vloVersion which will determine the checkpoint START_LOG_ADDRESS (last observed update for this\n             // stream by the time of checkpointing) is defined by the stream's tail instead of the stream's version,\n             // as the latter discards holes for resolution, hence if last address is a hole it would diverge\n"}}, {"oid": "e822b831810632b685448133fc797bc43fd481b8", "url": "https://github.com/CorfuDB/CorfuDB/commit/e822b831810632b685448133fc797bc43fd481b8", "message": "Explicitly Close Map Streams\n\nAlthough RocksDB iterators get closed automatically by finalize,\nthey should be closed right after they are no longer needed and\nnot relay on the Java's GC to release those resources.", "committedDate": "2020-01-31T22:23:56Z", "type": "commit"}, {"oid": "e822b831810632b685448133fc797bc43fd481b8", "url": "https://github.com/CorfuDB/CorfuDB/commit/e822b831810632b685448133fc797bc43fd481b8", "message": "Explicitly Close Map Streams\n\nAlthough RocksDB iterators get closed automatically by finalize,\nthey should be closed right after they are no longer needed and\nnot relay on the Java's GC to release those resources.", "committedDate": "2020-01-31T22:23:56Z", "type": "forcePushed"}]}