{"pr_number": 2793, "pr_title": "CorfuStore option Tx Logging Disabled", "pr_createdAt": "2020-10-16T20:51:58Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2793", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0MDY4Nw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506740687", "bodyText": "It will be good to add a comment here that LR simply replicates the streams and does not need it to be added to the transaction log", "author": "pankti-m", "createdAt": "2020-10-16T22:04:25Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "diffHunk": "@@ -59,7 +59,7 @@\n \n     public LogReplicationMetadataManager(CorfuRuntime rt, long topologyConfigId, String localClusterId) {\n         this.runtime = rt;\n-        this.corfuStore = new CorfuStore(runtime);\n+        this.corfuStore = new CorfuStore(runtime, false);", "originalCommit": "f4241125554818f46c01c9ccb1ef628f3d559e1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5572c18e2768249f9f49296256faac9c1f97395", "chunk": "diff --git a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java\nindex b9406cfdbda..2fbfb5272c1 100644\n--- a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java\n+++ b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java\n\n@@ -59,6 +59,8 @@ public class LogReplicationMetadataManager {\n \n     public LogReplicationMetadataManager(CorfuRuntime rt, long topologyConfigId, String localClusterId) {\n         this.runtime = rt;\n+        // LR does not require transaction logging as we don't want data change notifications on the replicated data\n+        // this runtime is reused by the LogEntryWriter and SnapshotWriter\n         this.corfuStore = new CorfuStore(runtime, false);\n         metadataTableName = getPersistedWriterMetadataTableName(localClusterId);\n         try {\n"}}, {"oid": "f5572c18e2768249f9f49296256faac9c1f97395", "url": "https://github.com/CorfuDB/CorfuDB/commit/f5572c18e2768249f9f49296256faac9c1f97395", "message": "CorfuStore option Tx Logging Disabled\n\nLR does require TX Logging to be disabled on the standby site to avoid\ngeneration of DCNs on replicated data and CorfuStore enforces it to be enabled.", "committedDate": "2020-10-17T01:39:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjAwMg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506782002", "bodyText": "is the relation between data change notification and tx stream general to corfu?", "author": "pankti-m", "createdAt": "2020-10-17T02:10:37Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "diffHunk": "@@ -59,7 +59,9 @@\n \n     public LogReplicationMetadataManager(CorfuRuntime rt, long topologyConfigId, String localClusterId) {\n         this.runtime = rt;\n-        this.corfuStore = new CorfuStore(runtime);\n+        // LR does not require transaction logging as we don't want data change notifications on the replicated data", "originalCommit": "f5572c18e2768249f9f49296256faac9c1f97395", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4NjI1MQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506786251", "bodyText": "not really, it's one use case (out of Corfu) but it can be used for any purpose. Just didn't know how to make it clear.. I've rephrased it, take a look and let me know if you think it still is confusing.", "author": "annym", "createdAt": "2020-10-17T03:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjAwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTI5Mw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r507191293", "bodyText": "maybe we can say - 'Replicated entries from LR need not be logged to the transaction stream'... or something like that?", "author": "pankti-m", "createdAt": "2020-10-18T17:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjAwMg=="}], "type": "inlineReview", "revised_code": {"commit": "b7de26fd8d4d0d15d7c9cd732801a5fba49680e9", "chunk": "diff --git a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java\nindex 2fbfb5272c1..a42e527297d 100644\n--- a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java\n+++ b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java\n\n@@ -51,18 +50,29 @@ public class LogReplicationMetadataManager {\n \n     private final Table<ReplicationStatusKey, ReplicationStatusVal, ReplicationStatusVal> replicationStatusTable;\n \n-    @Getter\n-    private final Table<ReplicationEventKey, ReplicationEvent, ReplicationEventKey> replicationEventTable;\n+    private final CorfuRuntime runtimeTxLogging;\n+    private final CorfuStore corfuStoreTxLogging;\n \n     private final CorfuRuntime runtime;\n     private final String localClusterId;\n \n     public LogReplicationMetadataManager(CorfuRuntime rt, long topologyConfigId, String localClusterId) {\n+        // LR does not require transaction logging enabled as we don't want to trigger subscriber's logic\n+        // upon replicated data\n         this.runtime = rt;\n-        // LR does not require transaction logging as we don't want data change notifications on the replicated data\n-        // this runtime is reused by the LogEntryWriter and SnapshotWriter\n         this.corfuStore = new CorfuStore(runtime, false);\n-        metadataTableName = getPersistedWriterMetadataTableName(localClusterId);\n+\n+        // This special runtime with transaction logging enabled is exclusively used for the REPLICATION_EVENT_TABLE\n+        // which serves the purpose of communicating events between non-lead and lead nodes in LR (e.g., force\n+        // snapshot sync).\n+        CorfuRuntime.CorfuRuntimeParameters params = rt.getParameters();\n+        this.runtimeTxLogging = CorfuRuntime.fromParameters(params)\n+                .setTransactionLogging(true)\n+                .parseConfigurationString(rt.getLayoutServers().get(0))\n+                .connect();\n+        this.corfuStoreTxLogging = new CorfuStore(runtimeTxLogging);\n+\n+        this.metadataTableName = getPersistedWriterMetadataTableName(localClusterId);\n         try {\n             this.corfuStore.openTable(NAMESPACE,\n                             metadataTableName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjMyMg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506782322", "bodyText": "slightly unrelated to this change, but do we need to create multiple runtimes?", "author": "pankti-m", "createdAt": "2020-10-17T02:14:48Z", "path": "test/src/test/java/org/corfudb/integration/CorfuReplicationReconfigurationIT.java", "diffHunk": "@@ -179,6 +196,88 @@ public void testSnapshotSyncApplyInterrupted() throws Exception {\n         }\n     }\n \n+    /**\n+     * Validate that no data is written into the Standby's Transaction Log during replication\n+     * of 5K objects.\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    public void testStandbyTransactionLogging() throws Exception {\n+        final long timeout = 30;\n+\n+        replicationEnded.set(false);\n+\n+        // (1) Subscribe Client to Standby Transaction Log\n+        log.debug(\">>> (1) Subscribe to Transaction Stream on Standby\");\n+        Future<Boolean> consumerState = subscribeTransactionStream();\n+\n+        // (2) Snapshot and Log Entry Sync\n+        log.debug(\">>> (2) Start Snapshot and Log Entry Sync\");\n+        testEndToEndSnapshotAndLogEntrySync();\n+\n+        replicationEnded.set(true);\n+\n+        Boolean txStreamEmpty = consumerState.get(timeout, TimeUnit.SECONDS);\n+        assertThat(txStreamEmpty).isTrue();\n+    }\n+\n+    private Future<Boolean>  subscribeTransactionStream() {\n+\n+        ExecutorService consumer = Executors.newSingleThreadExecutor();\n+        List<CorfuRuntime> consumerRts = new ArrayList<>();\n+\n+        // A thread that starts and consumes transaction updates via the Transaction Stream.\n+        return consumer.submit(() -> {\n+\n+            CorfuRuntime consumerRt = CorfuRuntime.fromParameters(CorfuRuntime.CorfuRuntimeParameters", "originalCommit": "f5572c18e2768249f9f49296256faac9c1f97395", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4OTkyMA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506789920", "bodyText": "no, changing to only one and shutting it down...", "author": "annym", "createdAt": "2020-10-17T03:54:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjMyMg=="}], "type": "inlineReview", "revised_code": {"commit": "b7de26fd8d4d0d15d7c9cd732801a5fba49680e9", "chunk": "diff --git a/test/src/test/java/org/corfudb/integration/CorfuReplicationReconfigurationIT.java b/test/src/test/java/org/corfudb/integration/CorfuReplicationReconfigurationIT.java\nindex df9e7a7a558..7be1c419e9d 100644\n--- a/test/src/test/java/org/corfudb/integration/CorfuReplicationReconfigurationIT.java\n+++ b/test/src/test/java/org/corfudb/integration/CorfuReplicationReconfigurationIT.java\n\n@@ -225,7 +223,6 @@ public class CorfuReplicationReconfigurationIT extends LogReplicationAbstractIT\n     private Future<Boolean>  subscribeTransactionStream() {\n \n         ExecutorService consumer = Executors.newSingleThreadExecutor();\n-        List<CorfuRuntime> consumerRts = new ArrayList<>();\n \n         // A thread that starts and consumes transaction updates via the Transaction Stream.\n         return consumer.submit(() -> {\n"}}, {"oid": "b7de26fd8d4d0d15d7c9cd732801a5fba49680e9", "url": "https://github.com/CorfuDB/CorfuDB/commit/b7de26fd8d4d0d15d7c9cd732801a5fba49680e9", "message": "Make Serializer Non-Static / per Runtime", "committedDate": "2020-10-20T04:58:46Z", "type": "forcePushed"}, {"oid": "9f1d7446c7879d5a9e4e2339f0a82b9f8be3484e", "url": "https://github.com/CorfuDB/CorfuDB/commit/9f1d7446c7879d5a9e4e2339f0a82b9f8be3484e", "message": "Make Serializer Non-Static / per Runtime", "committedDate": "2020-10-20T05:18:01Z", "type": "forcePushed"}, {"oid": "64bccb312f4e30e7d3d812b82b5e617fe69d0f36", "url": "https://github.com/CorfuDB/CorfuDB/commit/64bccb312f4e30e7d3d812b82b5e617fe69d0f36", "message": "Make Serializer Non-Static / per Runtime", "committedDate": "2020-10-20T17:17:03Z", "type": "forcePushed"}, {"oid": "9ec1f806046aa0e991ddd4b50ab8abfd2b67d3ce", "url": "https://github.com/CorfuDB/CorfuDB/commit/9ec1f806046aa0e991ddd4b50ab8abfd2b67d3ce", "message": "ProtobufSerializer: Reuse existing classMap", "committedDate": "2020-10-20T19:53:22Z", "type": "forcePushed"}, {"oid": "2955e6deaeb810f18e296ab0d5474ae1d1c7946e", "url": "https://github.com/CorfuDB/CorfuDB/commit/2955e6deaeb810f18e296ab0d5474ae1d1c7946e", "message": "CorfuStore option Tx Logging Disabled\n\nLR does require TX Logging to be disabled on the standby site to avoid\ngeneration of DCNs on replicated data and CorfuStore enforces it to be enabled.", "committedDate": "2020-10-20T20:07:30Z", "type": "commit"}, {"oid": "873c63ffdea2a83066fe8f33a9d8867053d41af1", "url": "https://github.com/CorfuDB/CorfuDB/commit/873c63ffdea2a83066fe8f33a9d8867053d41af1", "message": "Add Runtime TX Logging Enabled for Force Snapshot Sync Use Case", "committedDate": "2020-10-20T20:07:30Z", "type": "commit"}, {"oid": "273497f68fcab71cfbef53f5cced4dc97dce0c2d", "url": "https://github.com/CorfuDB/CorfuDB/commit/273497f68fcab71cfbef53f5cced4dc97dce0c2d", "message": "ProtobufSerializer: Reuse existing classMap", "committedDate": "2020-10-20T20:07:30Z", "type": "forcePushed"}, {"oid": "ce4a03cbf678b33fe826d1b3d0427307347c1e31", "url": "https://github.com/CorfuDB/CorfuDB/commit/ce4a03cbf678b33fe826d1b3d0427307347c1e31", "message": "ProtobufSerializer: Reuse existing classMap", "committedDate": "2020-10-20T21:38:08Z", "type": "forcePushed"}, {"oid": "9f5fd28acdc077c5f9e90c038a9d851127919c84", "url": "https://github.com/CorfuDB/CorfuDB/commit/9f5fd28acdc077c5f9e90c038a9d851127919c84", "message": "ProtobufSerializer: Reuse existing classMap", "committedDate": "2020-10-20T21:40:57Z", "type": "commit"}, {"oid": "9f5fd28acdc077c5f9e90c038a9d851127919c84", "url": "https://github.com/CorfuDB/CorfuDB/commit/9f5fd28acdc077c5f9e90c038a9d851127919c84", "message": "ProtobufSerializer: Reuse existing classMap", "committedDate": "2020-10-20T21:40:57Z", "type": "forcePushed"}]}