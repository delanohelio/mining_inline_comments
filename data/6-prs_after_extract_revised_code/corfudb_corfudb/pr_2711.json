{"pr_number": 2711, "pr_title": "LR Fix Timeout Exceptions", "pr_createdAt": "2020-08-13T19:53:33Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2711", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI2NTM1NQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r470265355", "bodyText": "I think we still need the catch block for TimeoutException.\nThere are two kinds of TimeoutException:\n\nFrom the actual sendMsg's CF, this type will be wrapped with the ExecutionException \nFrom anyOf(cfs).get(long timeout, TimeUnit unit)", "author": "zhangn49", "createdAt": "2020-08-13T21:41:50Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java", "diffHunk": "@@ -175,20 +175,20 @@ public void sendWithBuffering(List<LogReplicationEntry> dataToSend) {\n \n     /**\n      * Resend the messages in the queue if they have timed out.\n-     * @return false, if an entry has been resent MAX_RETRY.\n-     *         true, otherwise\n      */\n     public LogReplicationEntry resend() {\n-        //Enforce a resend or not\n         LogReplicationEntry ack = null;\n         boolean force = false;\n         try {\n             ack = processAcks();\n-        } catch (TimeoutException e) {\n-            log.warn(\"Caught a timeout exception \", e);\n-            force = true;\n+        } catch (ExecutionException ee) {", "originalCommit": "6bac6a4b6c6edee1e24da7b05b0ef2fddea68a0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcwNjQ2OQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r471706469", "bodyText": "Yes, you're right. Added a catch on TimeoutException as well...", "author": "annym", "createdAt": "2020-08-17T18:45:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI2NTM1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a962d2690f3d6fe618e5ab88b94328c379df19a8", "chunk": "diff --git a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java\nindex b9f95587ca5..e4b17dceb5f 100644\n--- a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java\n+++ b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java\n\n@@ -181,6 +181,9 @@ public abstract class SenderBufferManager {\n         boolean force = false;\n         try {\n             ack = processAcks();\n+        } catch (TimeoutException te) {\n+            log.warn(\"Caught a timeout exception while processing ACKs\", te);\n+            force = true;\n         } catch (ExecutionException ee) {\n             log.warn(\"Caught an execution exception while processing ACKs\", ee);\n             final Throwable cause = ee.getCause();\n"}}, {"oid": "d5e040b20588d061daa4d802d1d7663c225944d8", "url": "https://github.com/CorfuDB/CorfuDB/commit/d5e040b20588d061daa4d802d1d7663c225944d8", "message": "Change to ThreadPoolExecutor", "committedDate": "2020-08-13T22:58:23Z", "type": "forcePushed"}, {"oid": "a962d2690f3d6fe618e5ab88b94328c379df19a8", "url": "https://github.com/CorfuDB/CorfuDB/commit/a962d2690f3d6fe618e5ab88b94328c379df19a8", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-17T18:46:40Z", "type": "forcePushed"}, {"oid": "e9d1d15b964a31744547cec85d46a4f267e350e7", "url": "https://github.com/CorfuDB/CorfuDB/commit/e9d1d15b964a31744547cec85d46a4f267e350e7", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-17T22:30:06Z", "type": "forcePushed"}, {"oid": "129d491dd3a02c94b57917793b1251c93b191ad9", "url": "https://github.com/CorfuDB/CorfuDB/commit/129d491dd3a02c94b57917793b1251c93b191ad9", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-18T02:47:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMyNjkwOA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472326908", "bodyText": "Can you add comments to explain what can lead this exception?", "author": "xiaoqin2012", "createdAt": "2020-08-18T16:30:43Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java", "diffHunk": "@@ -175,36 +174,32 @@ public void sendWithBuffering(List<LogReplicationEntry> dataToSend) {\n \n     /**\n      * Resend the messages in the queue if they have timed out.\n-     * @return false, if an entry has been resent MAX_RETRY.\n-     *         true, otherwise\n      */\n     public LogReplicationEntry resend() {\n-        //Enforce a resend or not\n         LogReplicationEntry ack = null;\n         boolean force = false;\n         try {\n             ack = processAcks();\n-        } catch (TimeoutException e) {\n-            log.warn(\"Caught a timeout exception \", e);\n+        } catch (TimeoutException te) {\n+            log.warn(\"Caught a timeout exception while processing ACKs\", te);", "originalCommit": "129d491dd3a02c94b57917793b1251c93b191ad9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea39cb4ac40cb7995c41d137924a56293059ab0b", "chunk": "diff --git a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java\nindex 0e2f60243e7..c04057d3f91 100644\n--- a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java\n+++ b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java\n\n@@ -181,9 +183,11 @@ public abstract class SenderBufferManager {\n         try {\n             ack = processAcks();\n         } catch (TimeoutException te) {\n+            // Exceptions thrown directly from the CompletableFuture.anyOf(cfs)\n             log.warn(\"Caught a timeout exception while processing ACKs\", te);\n             force = true;\n         } catch (ExecutionException ee) {\n+            // Exceptions thrown from the send message completable future will be wrapped around ExecutionException\n             log.warn(\"Caught an execution exception while processing ACKs\", ee);\n             final Throwable cause = ee.getCause();\n             if (cause instanceof TimeoutException) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMyNzQ1Ng==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472327456", "bodyText": "Same as the above add some comments to explain.", "author": "xiaoqin2012", "createdAt": "2020-08-18T16:31:31Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java", "diffHunk": "@@ -175,36 +174,32 @@ public void sendWithBuffering(List<LogReplicationEntry> dataToSend) {\n \n     /**\n      * Resend the messages in the queue if they have timed out.\n-     * @return false, if an entry has been resent MAX_RETRY.\n-     *         true, otherwise\n      */\n     public LogReplicationEntry resend() {\n-        //Enforce a resend or not\n         LogReplicationEntry ack = null;\n         boolean force = false;\n         try {\n             ack = processAcks();\n-        } catch (TimeoutException e) {\n-            log.warn(\"Caught a timeout exception \", e);\n+        } catch (TimeoutException te) {\n+            log.warn(\"Caught a timeout exception while processing ACKs\", te);\n             force = true;\n+        } catch (ExecutionException ee) {\n+            log.warn(\"Caught an execution exception while processing ACKs\", ee);", "originalCommit": "129d491dd3a02c94b57917793b1251c93b191ad9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea39cb4ac40cb7995c41d137924a56293059ab0b", "chunk": "diff --git a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java\nindex 0e2f60243e7..c04057d3f91 100644\n--- a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java\n+++ b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/send/SenderBufferManager.java\n\n@@ -181,9 +183,11 @@ public abstract class SenderBufferManager {\n         try {\n             ack = processAcks();\n         } catch (TimeoutException te) {\n+            // Exceptions thrown directly from the CompletableFuture.anyOf(cfs)\n             log.warn(\"Caught a timeout exception while processing ACKs\", te);\n             force = true;\n         } catch (ExecutionException ee) {\n+            // Exceptions thrown from the send message completable future will be wrapped around ExecutionException\n             log.warn(\"Caught an execution exception while processing ACKs\", ee);\n             final Throwable cause = ee.getCause();\n             if (cause instanceof TimeoutException) {\n"}}, {"oid": "ea39cb4ac40cb7995c41d137924a56293059ab0b", "url": "https://github.com/CorfuDB/CorfuDB/commit/ea39cb4ac40cb7995c41d137924a56293059ab0b", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-18T17:41:01Z", "type": "forcePushed"}, {"oid": "af6a42089087f47868735fb63b069f3c91fe2e12", "url": "https://github.com/CorfuDB/CorfuDB/commit/af6a42089087f47868735fb63b069f3c91fe2e12", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-18T17:53:16Z", "type": "forcePushed"}, {"oid": "55493a55b5391b4043987259d6f7ad3061e73370", "url": "https://github.com/CorfuDB/CorfuDB/commit/55493a55b5391b4043987259d6f7ad3061e73370", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-18T18:00:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4OTc1Mw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472389753", "bodyText": "Do we need to set thread name by a threadFactory?", "author": "zhangn49", "createdAt": "2020-08-18T18:14:06Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/CorfuLogReplicationRuntime.java", "diffHunk": "@@ -159,8 +161,8 @@ public CorfuLogReplicationRuntime(LogReplicationRuntimeParameters parameters, Lo\n         this.sourceManager = new LogReplicationSourceManager(parameters, new LogReplicationClient(router, remoteClusterId),\n             metadataManager);\n         this.connectedEndpoints = new HashSet<>();\n-        this.communicationFSMWorkers = Executors.newSingleThreadExecutor(new\n-                ThreadFactoryBuilder().setNameFormat(\"runtime-fsm-worker\").build());\n+        this.communicationFSMWorkers = new ThreadPoolExecutor(1, 1, 0L,\n+                TimeUnit.MILLISECONDS, new LinkedBlockingQueue<Runnable>());", "originalCommit": "55493a55b5391b4043987259d6f7ad3061e73370", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5NTcxOQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472395719", "bodyText": "Yes, I think this is a good idea, so we track it easier. Added.", "author": "annym", "createdAt": "2020-08-18T18:24:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4OTc1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "967ff0f1243d2e2e9776509782ae568a6333c2bd", "chunk": "diff --git a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/CorfuLogReplicationRuntime.java b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/CorfuLogReplicationRuntime.java\nindex a66b9b17e7a..236553a5810 100644\n--- a/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/CorfuLogReplicationRuntime.java\n+++ b/infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/CorfuLogReplicationRuntime.java\n\n@@ -161,8 +162,9 @@ public class CorfuLogReplicationRuntime {\n         this.sourceManager = new LogReplicationSourceManager(parameters, new LogReplicationClient(router, remoteClusterId),\n             metadataManager);\n         this.connectedEndpoints = new HashSet<>();\n+        ThreadFactory threadFactory = new ThreadFactoryBuilder().setNameFormat(\"runtime-fsm-worker\").build();\n         this.communicationFSMWorkers = new ThreadPoolExecutor(1, 1, 0L,\n-                TimeUnit.MILLISECONDS, new LinkedBlockingQueue<Runnable>());\n+                TimeUnit.MILLISECONDS, new LinkedBlockingQueue<Runnable>(), threadFactory);\n         this.communicationFSMConsumer = Executors.newSingleThreadExecutor(new\n                 ThreadFactoryBuilder().setNameFormat(\"runtime-fsm-consumer\").build());\n \n"}}, {"oid": "967ff0f1243d2e2e9776509782ae568a6333c2bd", "url": "https://github.com/CorfuDB/CorfuDB/commit/967ff0f1243d2e2e9776509782ae568a6333c2bd", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-18T18:24:42Z", "type": "forcePushed"}, {"oid": "24fa244c9e6a99fd0a75d72916d68a7a954fb776", "url": "https://github.com/CorfuDB/CorfuDB/commit/24fa244c9e6a99fd0a75d72916d68a7a954fb776", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-18T19:34:24Z", "type": "forcePushed"}, {"oid": "f9c55e366fa70ba81ff9fdad4ddbcae5eef84559", "url": "https://github.com/CorfuDB/CorfuDB/commit/f9c55e366fa70ba81ff9fdad4ddbcae5eef84559", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-18T22:47:57Z", "type": "forcePushed"}, {"oid": "3181a0ce7c59e486c8dc12d194e3ca76a35624b4", "url": "https://github.com/CorfuDB/CorfuDB/commit/3181a0ce7c59e486c8dc12d194e3ca76a35624b4", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-19T01:19:38Z", "type": "forcePushed"}, {"oid": "5c626b249d5d74e5bb7f0c5c236b328425951cc7", "url": "https://github.com/CorfuDB/CorfuDB/commit/5c626b249d5d74e5bb7f0c5c236b328425951cc7", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-19T02:53:46Z", "type": "commit"}, {"oid": "5c626b249d5d74e5bb7f0c5c236b328425951cc7", "url": "https://github.com/CorfuDB/CorfuDB/commit/5c626b249d5d74e5bb7f0c5c236b328425951cc7", "message": "Fix ACK TimeoutException Handling\n\n- TimeoutException's are attempted to be caught, while they're always wrapped around an ExecutionException.", "committedDate": "2020-08-19T02:53:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYyMjMxOA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472622318", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.util.concurrent.TimeoutException'", "author": "corfudb-bot", "createdAt": "2020-08-19T02:58:59Z", "path": "test/src/test/java/org/corfudb/integration/LogReplicationIT.java", "diffHunk": "@@ -16,9 +16,12 @@\n import java.util.Observer;\n import java.util.Set;\n import java.util.UUID;\n+import java.util.concurrent.CompletionException;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.Semaphore;\n+import java.util.concurrent.TimeoutException;", "originalCommit": "5c626b249d5d74e5bb7f0c5c236b328425951cc7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYyMjMzMA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472622330", "bodyText": "Codacy found an issue: Avoid unused imports such as 'org.junit.jupiter.api.Assertions'", "author": "corfudb-bot", "createdAt": "2020-08-19T02:59:00Z", "path": "test/src/test/java/org/corfudb/integration/LogReplicationIT.java", "diffHunk": "@@ -42,6 +45,7 @@\n import org.corfudb.util.Utils;\n import org.corfudb.util.serializer.Serializers;\n import org.junit.Test;\n+import org.junit.jupiter.api.Assertions;", "originalCommit": "5c626b249d5d74e5bb7f0c5c236b328425951cc7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYyMjMzNw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472622337", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.util.concurrent.CompletionException'", "author": "corfudb-bot", "createdAt": "2020-08-19T02:59:01Z", "path": "test/src/test/java/org/corfudb/integration/LogReplicationIT.java", "diffHunk": "@@ -16,9 +16,12 @@\n import java.util.Observer;\n import java.util.Set;\n import java.util.UUID;\n+import java.util.concurrent.CompletionException;", "originalCommit": "5c626b249d5d74e5bb7f0c5c236b328425951cc7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYyMjM0NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472622344", "bodyText": "Codacy found an issue: Unused import - java.util.concurrent.TimeoutException.", "author": "corfudb-bot", "createdAt": "2020-08-19T02:59:02Z", "path": "test/src/test/java/org/corfudb/integration/LogReplicationIT.java", "diffHunk": "@@ -16,9 +16,12 @@\n import java.util.Observer;\n import java.util.Set;\n import java.util.UUID;\n+import java.util.concurrent.CompletionException;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.Semaphore;\n+import java.util.concurrent.TimeoutException;", "originalCommit": "5c626b249d5d74e5bb7f0c5c236b328425951cc7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYyMjM1Mw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472622353", "bodyText": "Codacy found an issue: Unused import - java.util.concurrent.CompletionException.", "author": "corfudb-bot", "createdAt": "2020-08-19T02:59:02Z", "path": "test/src/test/java/org/corfudb/integration/LogReplicationIT.java", "diffHunk": "@@ -16,9 +16,12 @@\n import java.util.Observer;\n import java.util.Set;\n import java.util.UUID;\n+import java.util.concurrent.CompletionException;", "originalCommit": "5c626b249d5d74e5bb7f0c5c236b328425951cc7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYyMjM2Ng==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2711#discussion_r472622366", "bodyText": "Codacy found an issue: Unused import - org.junit.jupiter.api.Assertions.", "author": "corfudb-bot", "createdAt": "2020-08-19T02:59:03Z", "path": "test/src/test/java/org/corfudb/integration/LogReplicationIT.java", "diffHunk": "@@ -42,6 +45,7 @@\n import org.corfudb.util.Utils;\n import org.corfudb.util.serializer.Serializers;\n import org.junit.Test;\n+import org.junit.jupiter.api.Assertions;", "originalCommit": "5c626b249d5d74e5bb7f0c5c236b328425951cc7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}