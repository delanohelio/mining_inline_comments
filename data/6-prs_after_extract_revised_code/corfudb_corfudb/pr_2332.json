{"pr_number": 2332, "pr_title": "Make VmManager more reliable in terms of catching runtime exceptions ", "pr_createdAt": "2020-01-29T20:07:16Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2332", "timeline": [{"oid": "1e35ce0720b2cf61aebb5db8352c3dfe454c1f2e", "url": "https://github.com/CorfuDB/CorfuDB/commit/1e35ce0720b2cf61aebb5db8352c3dfe454c1f2e", "message": "Make VmManager more reliable in terms of catching runtime exceptions from ViJava lib", "committedDate": "2020-01-29T20:05:59Z", "type": "commit"}, {"oid": "686ba242efc275deef17b80cba3e5d0776408f26", "url": "https://github.com/CorfuDB/CorfuDB/commit/686ba242efc275deef17b80cba3e5d0776408f26", "message": "Merge branch 'master' into universe-vmmanager-err-handlers", "committedDate": "2020-01-29T23:04:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0MTAyMw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#discussion_r372741023", "bodyText": "Do you want a message for this exception?", "author": "hisundar", "createdAt": "2020-01-30T03:10:49Z", "path": "it/src/main/java/org/corfudb/universe/universe/vm/VmManager.java", "diffHunk": "@@ -284,16 +297,20 @@ private VirtualMachineCloneSpec createLinuxCustomization(ImmutableMap<String, St\n     }\n \n     private Result<VmManager, UniverseException> cloneAndPowerOn(VirtualMachine vm) {\n-        VirtualMachinePowerState powerState = vm.getSummary().runtime.powerState;\n-        if (powerState == VirtualMachinePowerState.poweredOn) {\n-            return Result.ok(this);\n-        } else {\n-            return powerOn().map(taskInfo -> this);\n+        try {\n+            VirtualMachinePowerState powerState = vm.getSummary().runtime.powerState;\n+            if (powerState == VirtualMachinePowerState.poweredOn) {\n+                return Result.ok(this);\n+            } else {\n+                return powerOn().map(taskInfo -> this);\n+            }\n+        } catch (RuntimeException ex) {\n+            return Result.error(new UniverseException(ex));", "originalCommit": "686ba242efc275deef17b80cba3e5d0776408f26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc1MjQyNQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#discussion_r372752425", "bodyText": "not needed, it's completely clear", "author": "xnull", "createdAt": "2020-01-30T04:15:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0MTAyMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0MTA5Nw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#discussion_r372741097", "bodyText": "Maybe a message for this exception", "author": "hisundar", "createdAt": "2020-01-30T03:11:12Z", "path": "it/src/main/java/org/corfudb/universe/universe/vm/VmManager.java", "diffHunk": "@@ -210,33 +218,38 @@ public IpAddress getResolvedIpAddress() {\n         return getVm(universeParams.getTemplateVMName()).flatMap(vmTemplate -> {\n             log.info(\"Cloning the VM {} via vSphere {}\", vmName, universeParams.getVSphereUrl());\n \n-            Properties vmPropsResult = VmConfigPropertiesLoader\n-                    .loadVmProperties()\n-                    .get();\n+            try {\n \n-            ImmutableMap<String, String> vmProps = Maps.fromProperties(vmPropsResult);\n+                Properties vmPropsResult = VmConfigPropertiesLoader\n+                        .loadVmProperties()\n+                        .get();\n \n-            // Create customization for cloning process\n-            VirtualMachineCloneSpec cloneSpec = createLinuxCustomization(vmProps);\n+                ImmutableMap<String, String> vmProps = Maps.fromProperties(vmPropsResult);\n \n-            String folderProp = String.format(\n-                    \"vm%d.%s\", vmName.getIndex(), ResourceType.FOLDER.resource\n-            );\n+                // Create customization for cloning process\n+                VirtualMachineCloneSpec cloneSpec = createLinuxCustomization(vmProps);\n \n-            Folder folder;\n-            if (vmProps.containsKey(folderProp)) {\n-                ManagedObjectReference folderR = new ManagedObjectReference();\n-                folderR.setType(ResourceType.FOLDER.resource);\n+                String folderProp = String.format(\n+                        \"vm%d.%s\", vmName.getIndex(), ResourceType.FOLDER.resource\n+                );\n \n-                String prop = vmProps.get(folderProp);\n-                folderR.setVal(prop);\n+                Folder folder;\n+                if (vmProps.containsKey(folderProp)) {\n+                    ManagedObjectReference folderR = new ManagedObjectReference();\n+                    folderR.setType(ResourceType.FOLDER.resource);\n \n-                folder = new Folder(vmTemplate.getServerConnection(), folderR);\n-            } else {\n-                folder = (Folder) vmTemplate.getParent();\n-            }\n+                    String prop = vmProps.get(folderProp);\n+                    folderR.setVal(prop);\n \n-            return executeTask(() -> vmTemplate.cloneVM_Task(folder, vmName.getName(), cloneSpec));\n+                    folder = new Folder(vmTemplate.getServerConnection(), folderR);\n+                } else {\n+                    folder = (Folder) vmTemplate.getParent();\n+                }\n+\n+                return executeTask(() -> vmTemplate.cloneVM_Task(folder, vmName.getName(), cloneSpec));\n+            } catch (RuntimeException ex) {\n+                return Result.error(new UniverseException(ex));", "originalCommit": "686ba242efc275deef17b80cba3e5d0776408f26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc1MjQ0OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#discussion_r372752448", "bodyText": "not needed, it's completely clear", "author": "xnull", "createdAt": "2020-01-30T04:15:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0MTA5Nw=="}], "type": "inlineReview", "revised_code": null}]}