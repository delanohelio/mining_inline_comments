{"pr_number": 809, "pr_title": "Support for table primary keys in SQL to DDlog compiler", "pr_createdAt": "2020-11-10T01:16:00Z", "pr_url": "https://github.com/vmware/differential-datalog/pull/809", "timeline": [{"oid": "3581ab5a9d5aa62006c5d279e514652deaaca95d", "url": "https://github.com/vmware/differential-datalog/commit/3581ab5a9d5aa62006c5d279e514652deaaca95d", "message": "Support for table primary keys", "committedDate": "2020-11-10T01:14:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzOTU5Mg==", "url": "https://github.com/vmware/differential-datalog/pull/809#discussion_r520239592", "bodyText": "Use braces just to be sure?", "author": "lalithsuresh", "createdAt": "2020-11-10T02:08:09Z", "path": "sql/src/main/java/com/vmware/ddlog/translator/TranslationVisitor.java", "diffHunk": "@@ -73,15 +73,25 @@ protected DDlogIRNode visitCreateTable(CreateTable node, TranslationContext cont\n \n         List<TableElement> elements = node.getElements();\n         List<DDlogField> fields = new ArrayList<DDlogField>();\n+        List<DDlogField> keyColumns = new ArrayList<DDlogField>();\n         for (TableElement te: elements) {\n-            DDlogIRNode field = this.process(te, context);\n-            fields.add(field.to(DDlogField.class));\n+            DDlogIRNode f = this.process(te, context);\n+            DDlogField field = f.to(DDlogField.class);\n+            fields.add(field);\n+            if (te instanceof ColumnDefinition) {\n+                ColumnDefinition cd = (ColumnDefinition)te;\n+                if (Linq.any(cd.getProperties(), p -> p.getName().getValue().equals(\"primary_key\")))\n+                    keyColumns.add(field);\n+            }\n         }\n         DDlogTUser tuser = context.createStruct(node, fields, name);\n         String relName = DDlogRelationDeclaration.relationName(name);\n         context.reserveGlobalName(relName);\n         DDlogRelationDeclaration rel = new DDlogRelationDeclaration(\n                 node, DDlogRelationDeclaration.Role.Input, relName, tuser);\n+        if (keyColumns.size() > 0)", "originalCommit": "3581ab5a9d5aa62006c5d279e514652deaaca95d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "34cf2d89696a46afdc0197ddff601fc441fefbed", "chunk": "diff --git a/sql/src/main/java/com/vmware/ddlog/translator/TranslationVisitor.java b/sql/src/main/java/com/vmware/ddlog/translator/TranslationVisitor.java\nindex 15013831..9aa64144 100644\n--- a/sql/src/main/java/com/vmware/ddlog/translator/TranslationVisitor.java\n+++ b/sql/src/main/java/com/vmware/ddlog/translator/TranslationVisitor.java\n\n@@ -89,9 +89,10 @@ class TranslationVisitor extends AstVisitor<DDlogIRNode, TranslationContext> {\n         context.reserveGlobalName(relName);\n         DDlogRelationDeclaration rel = new DDlogRelationDeclaration(\n                 node, DDlogRelationDeclaration.Role.Input, relName, tuser);\n-        if (keyColumns.size() > 0)\n-            // This type name will not appear in the generater program\n+        if (keyColumns.size() > 0) {\n+            // This type name will not appear in the generated program\n             rel = rel.setPrimaryKey(keyColumns, context.freshLocalName(\"TKey\"));\n+        }\n         context.add(rel);\n         return rel;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzOTgwOQ==", "url": "https://github.com/vmware/differential-datalog/pull/809#discussion_r520239809", "bodyText": "Can you also test for multiple primary keys in the same table (compound key)?", "author": "lalithsuresh", "createdAt": "2020-11-10T02:09:00Z", "path": "sql/src/test/java/ddlog/WeaveTest.java", "diffHunk": "@@ -12,7 +12,7 @@ public void testWeave() {\n         Translator t = new Translator(null);\n         String node_info = \"create table node_info\\n\" +\n                 \"(\\n\" +\n-                \"  name varchar(36) not null /*primary key*/,\\n\" +\n+                \"  name varchar(36) not null with (primary_key = true),\\n\" +", "originalCommit": "3581ab5a9d5aa62006c5d279e514652deaaca95d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5NTUzOA==", "url": "https://github.com/vmware/differential-datalog/pull/809#discussion_r520795538", "bodyText": "See keyTest", "author": "mbudiu-vmw", "createdAt": "2020-11-10T18:52:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzOTgwOQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "34cf2d89696a46afdc0197ddff601fc441fefbed", "url": "https://github.com/vmware/differential-datalog/commit/34cf2d89696a46afdc0197ddff601fc441fefbed", "message": "Address review comments", "committedDate": "2020-11-10T03:12:37Z", "type": "commit"}]}