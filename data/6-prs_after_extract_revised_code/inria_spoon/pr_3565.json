{"pr_number": 3565, "pr_title": "test: add test for untested class FieldScopeFunction", "pr_createdAt": "2020-09-04T08:57:27Z", "pr_url": "https://github.com/INRIA/spoon/pull/3565", "timeline": [{"oid": "fbfe49e2ed85965ea558d004a66bacfb8ca7348c", "url": "https://github.com/INRIA/spoon/commit/fbfe49e2ed85965ea558d004a66bacfb8ca7348c", "message": "test: add test for untested class FieldScopeFunction", "committedDate": "2020-09-04T08:56:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4NjkzOA==", "url": "https://github.com/INRIA/spoon/pull/3565#discussion_r483486938", "bodyText": "@martinezmatias a rotten assertion", "author": "monperrus", "createdAt": "2020-09-04T09:00:44Z", "path": "src/test/java/spoon/test/query_function/VariableReferencesTest.java", "diffHunk": "@@ -196,8 +196,6 @@ public void testVariableScopeFunction() {\n \t\t\t\tCtElement[] real = var.map(new VariableScopeFunction()).list().toArray(new CtElement[0]);\r\n \t\t\t\tif(var instanceof CtLocalVariable) {\r\n \t\t\t\t\tassertArrayEquals(var.map(new LocalVariableScopeFunction()).list().toArray(new CtElement[0]), real);\r\n-\t\t\t\t} else if(var instanceof CtField) {\r\n-\t\t\t\t\tassertArrayEquals(var.map(new FieldScopeFunction()).list().toArray(new CtElement[0]), real);\r", "originalCommit": "fbfe49e2ed85965ea558d004a66bacfb8ca7348c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4ODgxOQ==", "url": "https://github.com/INRIA/spoon/pull/3565#discussion_r483488819", "bodyText": "haha great!! Nice finding. I will run the rotten detection to know whether it is detected :)", "author": "martinezmatias", "createdAt": "2020-09-04T09:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4NjkzOA=="}], "type": "inlineReview", "revised_code": null}]}