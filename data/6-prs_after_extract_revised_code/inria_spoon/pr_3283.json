{"pr_number": 3283, "pr_title": "test: add @UnresolvedBug annotation for WIP test cases", "pr_createdAt": "2020-03-04T21:23:15Z", "pr_url": "https://github.com/INRIA/spoon/pull/3283", "timeline": [{"oid": "2bbb34789e6763a20186bc7c261427aadd6f959f", "url": "https://github.com/INRIA/spoon/commit/2bbb34789e6763a20186bc7c261427aadd6f959f", "message": " add annotation for ignoring", "committedDate": "2020-03-04T21:20:02Z", "type": "commit"}, {"oid": "51e6f04a6c560d89fff017d336eda92618be0066", "url": "https://github.com/INRIA/spoon/commit/51e6f04a6c560d89fff017d336eda92618be0066", "message": "fix args", "committedDate": "2020-03-04T21:39:02Z", "type": "commit"}, {"oid": "5b992458964830c19b27980dae5cbeda5e96e6ec", "url": "https://github.com/INRIA/spoon/commit/5b992458964830c19b27980dae5cbeda5e96e6ec", "message": "fix ci", "committedDate": "2020-03-04T22:05:19Z", "type": "commit"}, {"oid": "5191647f40c9f27a8bbcc84c27ab6bc5f49d9859", "url": "https://github.com/INRIA/spoon/commit/5191647f40c9f27a8bbcc84c27ab6bc5f49d9859", "message": "added test from issue 3281 for showcasing", "committedDate": "2020-03-04T23:03:23Z", "type": "commit"}, {"oid": "f7130f4ce330735707be95c21b32a989c8c5c35c", "url": "https://github.com/INRIA/spoon/commit/f7130f4ce330735707be95c21b32a989c8c5c35c", "message": "restore testcase", "committedDate": "2020-03-04T23:05:21Z", "type": "commit"}, {"oid": "1470a62bd9f60d3f7e14b6e19c675780777a43b9", "url": "https://github.com/INRIA/spoon/commit/1470a62bd9f60d3f7e14b6e19c675780777a43b9", "message": "add checks to githubissue annotation. added gson dependecy for checking", "committedDate": "2020-03-05T00:59:58Z", "type": "commit"}, {"oid": "5e093bb42dab58b231b34b3d24abc264f22e789d", "url": "https://github.com/INRIA/spoon/commit/5e093bb42dab58b231b34b3d24abc264f22e789d", "message": "replaced readAllBytes because it's jdk9+", "committedDate": "2020-03-05T01:07:26Z", "type": "commit"}, {"oid": "5c78b10cddba6db554bfb3b313457990db5be442", "url": "https://github.com/INRIA/spoon/commit/5c78b10cddba6db554bfb3b313457990db5be442", "message": "fix for jdk8", "committedDate": "2020-03-05T01:15:42Z", "type": "commit"}, {"oid": "b0762e9e44b5aad63637cb3a1bd737011473b7c4", "url": "https://github.com/INRIA/spoon/commit/b0762e9e44b5aad63637cb3a1bd737011473b7c4", "message": "change testGoodTestClassNames allowing both annotations", "committedDate": "2020-03-05T01:36:38Z", "type": "commit"}, {"oid": "a4b23fc88ffeb95fa47950b19ca49626cc8d80e4", "url": "https://github.com/INRIA/spoon/commit/a4b23fc88ffeb95fa47950b19ca49626cc8d80e4", "message": "remove @supress checkstyle", "committedDate": "2020-03-05T14:36:54Z", "type": "commit"}, {"oid": "2f2b909e33330290a585c4b623234375e4f90480", "url": "https://github.com/INRIA/spoon/commit/2f2b909e33330290a585c4b623234375e4f90480", "message": "fix imports", "committedDate": "2020-03-05T14:42:11Z", "type": "commit"}, {"oid": "2b709182b7400e3ae30803f9530fc6b0e3e489d6", "url": "https://github.com/INRIA/spoon/commit/2b709182b7400e3ae30803f9530fc6b0e3e489d6", "message": " splitted tests and annotation, added line to contributing file, showing both annoations", "committedDate": "2020-03-06T20:28:52Z", "type": "commit"}, {"oid": "2ffa818687d51ca5b9a691db08e7710a097d4014", "url": "https://github.com/INRIA/spoon/commit/2ffa818687d51ca5b9a691db08e7710a097d4014", "message": "fix markdown", "committedDate": "2020-03-06T20:32:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE2MzExNA==", "url": "https://github.com/INRIA/spoon/pull/3283#discussion_r389163114", "bodyText": "now this change can be removed :)", "author": "monperrus", "createdAt": "2020-03-06T21:55:06Z", "path": "src/test/java/spoon/test/architecture/SpoonArchitectureEnforcerTest.java", "diffHunk": "@@ -232,6 +232,9 @@ public void metamodelPackageRule() {\n \n \t@Test\n \tpublic void testGoodTestClassNames() {\n+\t\t//some testclasses are util only and dont have to follow the naming convention for better readability\n+\t\tSet<String> testUtilClasses = new HashSet<>(Arrays.asList(\"spoon.test.GitHubIssue\", \"spoon.test.UnresolvedBug\"));", "originalCommit": "2ffa818687d51ca5b9a691db08e7710a097d4014", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzMjgzOQ==", "url": "https://github.com/INRIA/spoon/pull/3283#discussion_r390332839", "bodyText": "100% correct. Changed it", "author": "MartinWitt", "createdAt": "2020-03-10T13:59:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE2MzExNA=="}], "type": "inlineReview", "revised_code": {"commit": "8401b97790024ecae038a87395e07ccbd5756da5", "chunk": "diff --git a/src/test/java/spoon/test/architecture/SpoonArchitectureEnforcerTest.java b/src/test/java/spoon/test/architecture/SpoonArchitectureEnforcerTest.java\nindex 1a8c258d..eecee6c6 100644\n--- a/src/test/java/spoon/test/architecture/SpoonArchitectureEnforcerTest.java\n+++ b/src/test/java/spoon/test/architecture/SpoonArchitectureEnforcerTest.java\n\n@@ -232,9 +232,6 @@ public class SpoonArchitectureEnforcerTest {\n \n \t@Test\n \tpublic void testGoodTestClassNames() {\n-\t\t//some testclasses are util only and dont have to follow the naming convention for better readability\n-\t\tSet<String> testUtilClasses = new HashSet<>(Arrays.asList(\"spoon.test.GitHubIssue\", \"spoon.test.UnresolvedBug\"));\n-\n \t\t// contract: to be run by Maven surefire, all test classes must be called Test* or *Test\n \t\t// reference: \"By default, the Surefire Plugin will automatically include all test classes with the following wildcard patterns:\"\n \t\t// \"**/Test*.java\" and \"**/*Test.java\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4NTU3MQ==", "url": "https://github.com/INRIA/spoon/pull/3283#discussion_r390185571", "bodyText": "what about returning an int instead of a String?", "author": "monperrus", "createdAt": "2020-03-10T09:27:57Z", "path": "src/test/java/spoon/test/GitHubIssue.java", "diffHunk": "@@ -0,0 +1,18 @@\n+/**\n+ * Copyright (C) 2006-2019 INRIA and contributors\n+ *\n+ * Spoon is available either under the terms of the MIT License (see LICENSE-MIT.txt) of the Cecill-C License (see LICENSE-CECILL-C.txt). You as the user are entitled to choose the terms under which to adopt Spoon.\n+ */\n+package spoon.test;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.METHOD)\n+public @interface GitHubIssue {\n+\tString issueNumber();", "originalCommit": "2ffa818687d51ca5b9a691db08e7710a097d4014", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzMzcyMA==", "url": "https://github.com/INRIA/spoon/pull/3283#discussion_r390333720", "bodyText": "Sounds good to me. We can safely assume github issue numbers fit in int.\nChanged it", "author": "MartinWitt", "createdAt": "2020-03-10T14:01:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4NTU3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8401b97790024ecae038a87395e07ccbd5756da5", "chunk": "diff --git a/src/test/java/spoon/test/GitHubIssue.java b/src/test/java/spoon/test/GitHubIssue.java\nindex 4ed41d26..ca429131 100644\n--- a/src/test/java/spoon/test/GitHubIssue.java\n+++ b/src/test/java/spoon/test/GitHubIssue.java\n\n@@ -14,5 +14,5 @@ import java.lang.annotation.Target;\n @Retention(RetentionPolicy.RUNTIME)\n @Target(ElementType.METHOD)\n public @interface GitHubIssue {\n-\tString issueNumber();\n+\tint issueNumber();\n }\n"}}, {"oid": "8401b97790024ecae038a87395e07ccbd5756da5", "url": "https://github.com/INRIA/spoon/commit/8401b97790024ecae038a87395e07ccbd5756da5", "message": "change string to int add restored testcase", "committedDate": "2020-03-10T13:31:20Z", "type": "commit"}, {"oid": "55c99c915b42b2a1dacab75f63937ee6e34884ac", "url": "https://github.com/INRIA/spoon/commit/55c99c915b42b2a1dacab75f63937ee6e34884ac", "message": " fix test case", "committedDate": "2020-03-10T13:46:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM2ODMzNA==", "url": "https://github.com/INRIA/spoon/pull/3283#discussion_r390368334", "bodyText": "+check that the issue is still open? (looks straighforward to do)", "author": "monperrus", "createdAt": "2020-03-10T14:46:21Z", "path": "src/test/java/spoon/test/UnresolvedBugTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (C) 2006-2019 INRIA and contributors\n+ *\n+ * Spoon is available either under the terms of the MIT License (see LICENSE-MIT.txt) of the Cecill-C License (see LICENSE-CECILL-C.txt). You as the user are entitled to choose the terms under which to adopt Spoon.\n+ */\n+package spoon.test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.URL;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonObject;\n+\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import spoon.FluentLauncher;\n+import spoon.reflect.declaration.CtMethod;\n+import spoon.reflect.visitor.filter.TypeFilter;\n+\n+public class UnresolvedBugTest {\n+\n+\tprivate List<CtMethod<?>> testMethods = findTestMethods();\n+\tprivate final String githubURL = \"https://api.github.com/repos/INRIA/spoon/issues/\";\n+\n+\t/**\n+\t * Checks if every githubIssue annotation has an github issue.\n+\t */\n+\t@Test\n+\tpublic void checkGithubIssueAnnotations() throws IOException {\n+\t\t// contract: every test GitHubIssue annotation points to a valid issue number.\n+\t\ttestMethods = testMethods.stream()\n+\t\t\t\t.filter(v -> v.hasAnnotation(Test.class) && v.hasAnnotation(GitHubIssue.class))\n+\t\t\t\t.collect(Collectors.toList());\n+\t\tfor (CtMethod<?> ctMethod : testMethods) {\n+\t\t\tint issueNumber = ctMethod.getAnnotation(GitHubIssue.class).issueNumber();\n+\t\t\tURL url = new URL(githubURL + issueNumber);\n+\t\t\t// because readAllBytes is jdk9 only\n+\t\t\tString data = new BufferedReader(new InputStreamReader(url.openStream())).lines().collect(Collectors.joining());\n+\t\t\tJsonObject issue = new Gson().fromJson(data, JsonObject.class);\n+\t\t\tassertTrue(issue.get(\"number\").getAsInt()==issueNumber);", "originalCommit": "55c99c915b42b2a1dacab75f63937ee6e34884ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQwMzQwOA==", "url": "https://github.com/INRIA/spoon/pull/3283#discussion_r390403408", "bodyText": "added", "author": "MartinWitt", "createdAt": "2020-03-10T15:31:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM2ODMzNA=="}], "type": "inlineReview", "revised_code": {"commit": "96be412bd42dcd4a7b4bd64dfd5e051c65790997", "chunk": "diff --git a/src/test/java/spoon/test/UnresolvedBugTest.java b/src/test/java/spoon/test/UnresolvedBugTest.java\nindex dca7ec4d..68ddf266 100644\n--- a/src/test/java/spoon/test/UnresolvedBugTest.java\n+++ b/src/test/java/spoon/test/UnresolvedBugTest.java\n\n@@ -27,15 +27,16 @@ import spoon.reflect.visitor.filter.TypeFilter;\n \n public class UnresolvedBugTest {\n \n+\tprivate static final String OPEN_ISSUE_TEXT = \"open\";\n \tprivate List<CtMethod<?>> testMethods = findTestMethods();\n \tprivate final String githubURL = \"https://api.github.com/repos/INRIA/spoon/issues/\";\n \n \t/**\n-\t * Checks if every githubIssue annotation has an github issue.\n+\t * Checks if every githubIssue annotation has an open github issue.\n \t */\n \t@Test\n \tpublic void checkGithubIssueAnnotations() throws IOException {\n-\t\t// contract: every test GitHubIssue annotation points to a valid issue number.\n+\t\t// contract: every test GitHubIssue annotation points to a valid issue number and the issue is open.\n \t\ttestMethods = testMethods.stream()\n \t\t\t\t.filter(v -> v.hasAnnotation(Test.class) && v.hasAnnotation(GitHubIssue.class))\n \t\t\t\t.collect(Collectors.toList());\n"}}, {"oid": "96be412bd42dcd4a7b4bd64dfd5e051c65790997", "url": "https://github.com/INRIA/spoon/commit/96be412bd42dcd4a7b4bd64dfd5e051c65790997", "message": "add check if pointed issues are still open", "committedDate": "2020-03-10T15:09:29Z", "type": "commit"}]}