{"pr_number": 6947, "pr_title": "add in feature extract code. resulting vcf still has bugs", "pr_createdAt": "2020-11-09T22:16:24Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6947", "timeline": [{"oid": "1a8608fae43e7f18679515b69f8d97b30ed41304", "url": "https://github.com/broadinstitute/gatk/commit/1a8608fae43e7f18679515b69f8d97b30ed41304", "message": "add in feature extract code. resulting vcf still has bugs", "committedDate": "2020-11-09T22:15:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYxOTM0Mg==", "url": "https://github.com/broadinstitute/gatk/pull/6947#discussion_r520619342", "bodyText": "rename variables --- e.g. firstLocation instead of firstProbeId", "author": "kcibul", "createdAt": "2020-11-10T14:48:05Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/SchemaUtils.java", "diffHunk": "@@ -71,4 +111,14 @@ public static String decodeContig(long location) {\n     public static int decodePosition(long location) {\n         return (int)(location % chromAdjustment);\n     }\n+\n+    public final static Comparator<GenericRecord> LOCATION_COMPARATOR = new Comparator<GenericRecord>() {\n+        @Override\n+        public int compare( GenericRecord o1, GenericRecord o2 ) {\n+            final long firstProbeId = (Long) o1.get(SchemaUtils.LOCATION_FIELD_NAME);", "originalCommit": "1a8608fae43e7f18679515b69f8d97b30ed41304", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59499f9f5dfab5c8240ba030c0852e0afc1c1ce9", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/SchemaUtils.java b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/SchemaUtils.java\nindex f2b8e2161..d80d3d2c4 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/SchemaUtils.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/SchemaUtils.java\n\n@@ -115,9 +115,9 @@ public class SchemaUtils {\n     public final static Comparator<GenericRecord> LOCATION_COMPARATOR = new Comparator<GenericRecord>() {\n         @Override\n         public int compare( GenericRecord o1, GenericRecord o2 ) {\n-            final long firstProbeId = (Long) o1.get(SchemaUtils.LOCATION_FIELD_NAME);\n-            final long secondProbeId = (Long) o2.get(SchemaUtils.LOCATION_FIELD_NAME);\n-            return Long.compare(firstProbeId, secondProbeId);\n+            final long firstLocation = (Long) o1.get(SchemaUtils.LOCATION_FIELD_NAME);\n+            final long secondLocation = (Long) o2.get(SchemaUtils.LOCATION_FIELD_NAME);\n+            return Long.compare(firstLocation, secondLocation);\n         }\n     };\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0NTc0OQ==", "url": "https://github.com/broadinstitute/gatk/pull/6947#discussion_r520645749", "bodyText": "rename variable, maybe just sampleId and change the parameter to the function to be sampleIdString.  MAybe remove the TODO", "author": "kcibul", "createdAt": "2020-11-10T15:21:28Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/IngestUtils.java", "diffHunk": "@@ -73,15 +73,14 @@ public static String getSampleId(final String sampleName, final File sampleMap)\n     // Since tables have a limited number of samples (default is 4k)\n     public static int getTableNumber(String sampleId, int sampleMod) { // this is based on sample id\n         // sample ids 1-4000 will go in directory 001\n-        int sampleIdInt = Integer.valueOf(sampleId); // TODO--should sampleId just get refactored as a long?\n+        long sampleIdInt = Long.valueOf(sampleId); // TODO--should sampleId just get refactored as a long?", "originalCommit": "1a8608fae43e7f18679515b69f8d97b30ed41304", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59499f9f5dfab5c8240ba030c0852e0afc1c1ce9", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/IngestUtils.java b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/IngestUtils.java\nindex 531d5fef0..7b4372824 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/IngestUtils.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/IngestUtils.java\n\n@@ -58,22 +58,11 @@ public class IngestUtils {\n         return sampleId;\n     }\n \n-//    public static Path createSampleDirectory(Path parentDirectory, int sampleDirectoryNumber) {\n-//        // If this sample set directory doesn't exist yet -- create it\n-//        final String sampleDirectoryName = String.valueOf(sampleDirectoryNumber);\n-//        final Path sampleDirectoryPath = parentDirectory.resolve(sampleDirectoryName);\n-//        final File sampleDirectory = new File(sampleDirectoryPath.toString());\n-//        if (!sampleDirectory.exists()) {\n-//            sampleDirectory.mkdir();\n-//        }\n-//        return sampleDirectoryPath;\n-//    }\n-\n-    // To determine which directory (and ultimately table) the sample's data will go into\n+    // To determine which table the sample's data will go into\n     // Since tables have a limited number of samples (default is 4k)\n     public static int getTableNumber(String sampleId, int sampleMod) { // this is based on sample id\n         // sample ids 1-4000 will go in directory 001\n-        long sampleIdInt = Long.valueOf(sampleId); // TODO--should sampleId just get refactored as a long?\n+        long sampleIdInt = Long.valueOf(sampleId);\n         return getTableNumber(sampleIdInt, sampleMod);\n     }\n \n"}}, {"oid": "59499f9f5dfab5c8240ba030c0852e0afc1c1ce9", "url": "https://github.com/broadinstitute/gatk/commit/59499f9f5dfab5c8240ba030c0852e0afc1c1ce9", "message": "minor changes", "committedDate": "2020-11-10T16:14:13Z", "type": "commit"}]}