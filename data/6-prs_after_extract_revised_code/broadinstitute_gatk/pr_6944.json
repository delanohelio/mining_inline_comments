{"pr_number": 6944, "pr_title": "Added a check to VariantAnnotator that all read samples are present in the VCF", "pr_createdAt": "2020-11-06T19:22:34Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6944", "timeline": [{"oid": "c4f5fc758cf856dfc6fd01526c2dbb2662b7525f", "url": "https://github.com/broadinstitute/gatk/commit/c4f5fc758cf856dfc6fd01526c2dbb2662b7525f", "message": "added a validation check that all samples in the input bam are present in the provided vcf before running variant annotator", "committedDate": "2020-11-06T19:21:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NDM5NA==", "url": "https://github.com/broadinstitute/gatk/pull/6944#discussion_r529864394", "bodyText": "This checks whether the samples in the bam are present in the vcf. But the original bug report in #6915 was (according to @gbrandt6 ) triggered by the reverse case where samples in the vcf don't exist in the bam.", "author": "droazen", "createdAt": "2020-11-24T20:40:42Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/VariantAnnotator.java", "diffHunk": "@@ -196,6 +197,14 @@ public void onTraversalStart() {\n         sequenceDictionary = getBestAvailableSequenceDictionary();\n         variantSamples = new IndexedSampleList(samples);\n \n+        // Check that the reads have compatible samples to the variants:\n+        if (hasReads()) {\n+            final Set<String> readsSamples = getHeaderForReads().getReadGroups().stream().map(rg -> rg.getSample()).collect(Collectors.toSet());\n+            readsSamples.forEach(readSample -> {\n+                if (!samples.contains(readSample))\n+                    throw new UserException(String.format(\"Reads sample '%s' from readgroups tags does not match any sample in the variant genotypes\", readSample));", "originalCommit": "c4f5fc758cf856dfc6fd01526c2dbb2662b7525f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3ODYzNA==", "url": "https://github.com/broadinstitute/gatk/pull/6944#discussion_r529878634", "bodyText": "Upon further investigation, @jamesemery and I confirmed that this patch is correct, and the original bug report was backwards. The NPE is triggered when there are samples in the bam not present in the vcf.", "author": "droazen", "createdAt": "2020-11-24T21:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NDM5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4MDU4Mg==", "url": "https://github.com/broadinstitute/gatk/pull/6944#discussion_r529880582", "bodyText": "Thanks for looking into it @droazen @jamesemery I checked again and it looks like the user said there were no samples in common.", "author": "gbrandt6", "createdAt": "2020-11-24T21:12:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NDM5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4MDY1NQ==", "url": "https://github.com/broadinstitute/gatk/pull/6944#discussion_r529880655", "bodyText": "If you look at the version that user was running the NPE is actually occurring on this line:\nreturnMap.get(ReadUtils.getSampleName(read, header)).add(read); \nWhich means that the problem is caused when the returnMap (which gets generated right above from the VCF samples list) doesn't contain a sample that is present in one of the reads at that site. It sounded like the user had accentually matched up the wrong bam with the wrong VCF and thats why they got the crash. Technically what they said is accurate but not exactly what caused the bug, it was the reverse of what they reported as the bug. Given that multisample bams exist perhaps there is something more robust that can be done to fix the bug if this ever comes up again.", "author": "jamesemery", "createdAt": "2020-11-24T21:12:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NDM5NA=="}], "type": "inlineReview", "revised_code": null}]}