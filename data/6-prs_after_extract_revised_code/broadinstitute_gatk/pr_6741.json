{"pr_number": 6741, "pr_title": "Fixed concurrent modification exception for local runs of HapltoypeCallerSpark ", "pr_createdAt": "2020-08-05T17:13:48Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6741", "timeline": [{"oid": "e91df1180bed84019d6c953407efc3bfc982ccec", "url": "https://github.com/broadinstitute/gatk/commit/e91df1180bed84019d6c953407efc3bfc982ccec", "message": "Fixing an oversight where the sort was being performed on the input kmer list rather than the coppied list", "committedDate": "2020-08-05T16:45:25Z", "type": "commit"}, {"oid": "ca43e96805cd19f4f3b86036bc1744e90c612c70", "url": "https://github.com/broadinstitute/gatk/commit/ca43e96805cd19f4f3b86036bc1744e90c612c70", "message": "added a test and a few more safety rails", "committedDate": "2020-08-05T17:13:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMzQxMA==", "url": "https://github.com/broadinstitute/gatk/pull/6741#discussion_r465933410", "bodyText": "add a comment with a link to the issue here so that people have some clue about the origin of this if they ever look at this test", "author": "lbergelson", "createdAt": "2020-08-05T18:50:35Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssemblerUnitTest.java", "diffHunk": "@@ -48,6 +48,17 @@ public void cleanup() throws IOException {\n         seq.close();\n     }\n \n+    @Test\n+    public void testReadThreadingAssemblerDoesntModifyInputKmerList() {", "originalCommit": "ca43e96805cd19f4f3b86036bc1744e90c612c70", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd486be3d326950df5677e76d940344e8a807ba8", "chunk": "diff --git a/src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssemblerUnitTest.java b/src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssemblerUnitTest.java\nindex e71314afe..99b9d00bd 100644\n--- a/src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssemblerUnitTest.java\n+++ b/src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssemblerUnitTest.java\n\n@@ -49,6 +49,7 @@ public final class ReadThreadingAssemblerUnitTest extends GATKBaseTest {\n     }\n \n     @Test\n+    // Test of fix for https://github.com/broadinstitute/gatk/issues/6513\n     public void testReadThreadingAssemblerDoesntModifyInputKmerList() {\n         List<Integer> kmersOutOfOrder = Arrays.asList(65, 25, 45, 35, 85);\n         List<Integer> kmersOutOfOrderCopy = new ArrayList<>(kmersOutOfOrder);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMzQ1MA==", "url": "https://github.com/broadinstitute/gatk/pull/6741#discussion_r465933450", "bodyText": "this is such a hard to notice mistake.  I wonder if intellij can catch this for us...\nYou could change it to\nthis.kmerSizes = kmerSizes.stream().sort().collect(Collectors.toList()) if we wanted to avoid the sort call.", "author": "lbergelson", "createdAt": "2020-08-05T18:50:40Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java", "diffHunk": "@@ -78,7 +78,7 @@ public ReadThreadingAssembler(final int maxAllowedPathsForReadThreadingAssembler\n                                   final int maxUnprunedVariants, final boolean useLinkedDebruijnGraphs) {\n         Utils.validateArg( maxAllowedPathsForReadThreadingAssembler >= 1, \"numBestHaplotypesPerGraph should be >= 1 but got \" + maxAllowedPathsForReadThreadingAssembler);\n         this.kmerSizes = new ArrayList<>(kmerSizes);\n-        kmerSizes.sort(Integer::compareTo);\n+        this.kmerSizes.sort(Integer::compareTo);", "originalCommit": "ca43e96805cd19f4f3b86036bc1744e90c612c70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5MTk2OQ==", "url": "https://github.com/broadinstitute/gatk/pull/6741#discussion_r465991969", "bodyText": "You know i think its actually cleaner and a little more future proof to do this in one line so i'll take that.", "author": "jamesemery", "createdAt": "2020-08-05T20:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMzQ1MA=="}], "type": "inlineReview", "revised_code": {"commit": "cd486be3d326950df5677e76d940344e8a807ba8", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java b/src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java\nindex a7df8694e..97b8ad417 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java\n\n@@ -77,8 +78,7 @@ public final class ReadThreadingAssembler {\n                                   final double initialErrorRateForPruning, final double pruningLogOddsThreshold,\n                                   final int maxUnprunedVariants, final boolean useLinkedDebruijnGraphs) {\n         Utils.validateArg( maxAllowedPathsForReadThreadingAssembler >= 1, \"numBestHaplotypesPerGraph should be >= 1 but got \" + maxAllowedPathsForReadThreadingAssembler);\n-        this.kmerSizes = new ArrayList<>(kmerSizes);\n-        this.kmerSizes.sort(Integer::compareTo);\n+        this.kmerSizes = kmerSizes.stream().sorted(Integer::compareTo).collect(Collectors.toList());\n         this.dontIncreaseKmerSizesForCycles = dontIncreaseKmerSizesForCycles;\n         this.allowNonUniqueKmersInRef = allowNonUniqueKmersInRef;\n         this.numPruningSamples = numPruningSamples;\n"}}, {"oid": "cd486be3d326950df5677e76d940344e8a807ba8", "url": "https://github.com/broadinstitute/gatk/commit/cd486be3d326950df5677e76d940344e8a807ba8", "message": "responding to reveiw comments", "committedDate": "2020-08-05T20:42:35Z", "type": "commit"}]}