{"pr_number": 6352, "pr_title": "gCNV vcf cleanup", "pr_createdAt": "2020-01-07T18:12:58Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6352", "timeline": [{"oid": "7f97fb156cde3bc72c5fab1cb136a797dc95af5f", "url": "https://github.com/broadinstitute/gatk/commit/7f97fb156cde3bc72c5fab1cb136a797dc95af5f", "message": "gCNV VCF cleanup\nOnly called alleles as alts; QS to QUAL", "committedDate": "2020-01-07T20:16:31Z", "type": "commit"}, {"oid": "7f97fb156cde3bc72c5fab1cb136a797dc95af5f", "url": "https://github.com/broadinstitute/gatk/commit/7f97fb156cde3bc72c5fab1cb136a797dc95af5f", "message": "gCNV VCF cleanup\nOnly called alleles as alts; QS to QUAL", "committedDate": "2020-01-07T20:16:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNTAwMA==", "url": "https://github.com/broadinstitute/gatk/pull/6352#discussion_r366025000", "bodyText": "Would it be better to use GATKTool's createVCFWriter()?", "author": "mwalker174", "createdAt": "2020-01-13T20:59:40Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java", "diffHunk": "@@ -372,7 +374,8 @@ public Object onTraversalSuccess() {\n \n     private void generateIntervalsVCFFileFromAllShards() {\n         logger.info(\"Generating intervals VCF file...\");\n-        final VariantContextWriter intervalsVCFWriter = createVCFWriter(outputIntervalsVCFFile);\n+        final VariantContextWriter intervalsVCFWriter = GATKVariantContextUtils.createVCFWriter(", "originalCommit": "7f97fb156cde3bc72c5fab1cb136a797dc95af5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ3MTQ0OQ==", "url": "https://github.com/broadinstitute/gatk/pull/6352#discussion_r366471449", "bodyText": "The GATKTool method won't accept a sequence dictionary.  It relies on the engine discovering a sequence dictionary from one of the inputs, which doesn't work so well here because the inputs are specified as directories.", "author": "ldgauthier", "createdAt": "2020-01-14T17:25:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNTAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU1MDM3NQ==", "url": "https://github.com/broadinstitute/gatk/pull/6352#discussion_r366550375", "bodyText": "Isn\u2019t the dictionary hooked up to createVCFWriter now via getBestAvailableSequenceDictionary?", "author": "samuelklee", "createdAt": "2020-01-14T20:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNTAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU1NTg1NQ==", "url": "https://github.com/broadinstitute/gatk/pull/6352#discussion_r366555855", "bodyText": "Ah yes, this is a holdover from before I implemented that suggestion Louis had.  Thanks for the extra set of eyes.", "author": "ldgauthier", "createdAt": "2020-01-14T20:27:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNTAwMA=="}], "type": "inlineReview", "revised_code": {"commit": "eefabf291b13c1c0832d98aaf1d74448ac99c878", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java b/src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java\nindex a9c75b5d6..52b02adb4 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java\n\n@@ -374,8 +374,7 @@ public final class PostprocessGermlineCNVCalls extends GATKTool {\n \n     private void generateIntervalsVCFFileFromAllShards() {\n         logger.info(\"Generating intervals VCF file...\");\n-        final VariantContextWriter intervalsVCFWriter = GATKVariantContextUtils.createVCFWriter(\n-                outputIntervalsVCFFile.toPath(), sequenceDictionary, false, Options.INDEX_ON_THE_FLY);\n+        final VariantContextWriter intervalsVCFWriter = createVCFWriter(outputIntervalsVCFFile);\n \n         final GermlineCNVIntervalVariantComposer germlineCNVIntervalVariantComposer =\n                 new GermlineCNVIntervalVariantComposer(intervalsVCFWriter, sampleName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNTEwNg==", "url": "https://github.com/broadinstitute/gatk/pull/6352#discussion_r366025106", "bodyText": "Same here?", "author": "mwalker174", "createdAt": "2020-01-13T20:59:58Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java", "diffHunk": "@@ -412,7 +415,8 @@ private void generateSegmentsVCFFileFromAllShards() {\n \n         /* write variants */\n         logger.info(String.format(\"Writing segments VCF file to %s...\", outputSegmentsVCFFile.getAbsolutePath()));\n-        final VariantContextWriter segmentsVCFWriter = createVCFWriter(outputSegmentsVCFFile);\n+        final VariantContextWriter segmentsVCFWriter = GATKVariantContextUtils.createVCFWriter(", "originalCommit": "7f97fb156cde3bc72c5fab1cb136a797dc95af5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eefabf291b13c1c0832d98aaf1d74448ac99c878", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java b/src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java\nindex a9c75b5d6..52b02adb4 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/copynumber/PostprocessGermlineCNVCalls.java\n\n@@ -415,8 +414,7 @@ public final class PostprocessGermlineCNVCalls extends GATKTool {\n \n         /* write variants */\n         logger.info(String.format(\"Writing segments VCF file to %s...\", outputSegmentsVCFFile.getAbsolutePath()));\n-        final VariantContextWriter segmentsVCFWriter = GATKVariantContextUtils.createVCFWriter(\n-                outputSegmentsVCFFile.toPath(), sequenceDictionary, false, Options.INDEX_ON_THE_FLY);\n+        final VariantContextWriter segmentsVCFWriter = createVCFWriter(outputSegmentsVCFFile.toPath());\n         final GermlineCNVSegmentVariantComposer germlineCNVSegmentVariantComposer =\n                 new GermlineCNVSegmentVariantComposer(segmentsVCFWriter, sampleName,\n                         refAutosomalIntegerCopyNumberState, allosomalContigSet);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNTc3Mg==", "url": "https://github.com/broadinstitute/gatk/pull/6352#discussion_r366025772", "bodyText": "Can delete", "author": "mwalker174", "createdAt": "2020-01-13T21:01:37Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/copynumber/gcnv/GermlineCNVSegmentVariantComposer.java", "diffHunk": "@@ -128,7 +128,7 @@ VariantContext composeVariantContext(final IntegerCopyNumberSegment segment) {\n         int copyNumberCall = segment.getCallIntegerCopyNumberState().getCopyNumber();\n \n         final VariantContextBuilder variantContextBuilder = new VariantContextBuilder();\n-        variantContextBuilder.alleles(ALL_ALLELES);\n+        //variantContextBuilder.alleles(ALL_ALLELES);", "originalCommit": "7f97fb156cde3bc72c5fab1cb136a797dc95af5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eefabf291b13c1c0832d98aaf1d74448ac99c878", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/copynumber/gcnv/GermlineCNVSegmentVariantComposer.java b/src/main/java/org/broadinstitute/hellbender/tools/copynumber/gcnv/GermlineCNVSegmentVariantComposer.java\nindex 72217be2b..9d6e08666 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/copynumber/gcnv/GermlineCNVSegmentVariantComposer.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/copynumber/gcnv/GermlineCNVSegmentVariantComposer.java\n\n@@ -128,7 +128,6 @@ public final class GermlineCNVSegmentVariantComposer extends GermlineCNVVariantC\n         int copyNumberCall = segment.getCallIntegerCopyNumberState().getCopyNumber();\n \n         final VariantContextBuilder variantContextBuilder = new VariantContextBuilder();\n-        //variantContextBuilder.alleles(ALL_ALLELES);\n         variantContextBuilder.chr(contig);\n         variantContextBuilder.start(start);\n         variantContextBuilder.stop(end);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAzMDIwNg==", "url": "https://github.com/broadinstitute/gatk/pull/6352#discussion_r366030206", "bodyText": "Could write this as final List<Allele> vcAlleles = Lists.newArrayList(REF_ALLELE);", "author": "mwalker174", "createdAt": "2020-01-13T21:12:08Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/copynumber/gcnv/GermlineCNVSegmentVariantComposer.java", "diffHunk": "@@ -155,8 +155,14 @@ VariantContext composeVariantContext(final IntegerCopyNumberSegment segment) {\n         genotypeBuilder.attribute(QSE, FastMath.round(segment.getQualityEnd()));\n         final Genotype genotype = genotypeBuilder.make();\n \n+        final List<Allele> vcAlleles = new ArrayList<>(Collections.singletonList(REF_ALLELE));", "originalCommit": "7f97fb156cde3bc72c5fab1cb136a797dc95af5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MzY5OQ==", "url": "https://github.com/broadinstitute/gatk/pull/6352#discussion_r366483699", "bodyText": "Lists is in which package?  avro?", "author": "ldgauthier", "createdAt": "2020-01-14T17:50:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAzMDIwNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "eefabf291b13c1c0832d98aaf1d74448ac99c878", "url": "https://github.com/broadinstitute/gatk/commit/eefabf291b13c1c0832d98aaf1d74448ac99c878", "message": "Review comments", "committedDate": "2020-01-14T20:31:40Z", "type": "commit"}, {"oid": "a30f89a49b7c37bc59afad97a7e731183f6cd184", "url": "https://github.com/broadinstitute/gatk/commit/a30f89a49b7c37bc59afad97a7e731183f6cd184", "message": "Last details", "committedDate": "2020-01-15T14:03:33Z", "type": "commit"}]}