{"pr_number": 6375, "pr_title": "Trim intervals loaded from interval files.", "pr_createdAt": "2020-01-14T16:37:54Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6375", "timeline": [{"oid": "66d3da82e7e7bb73afa860c2a34ac03512f00fd2", "url": "https://github.com/broadinstitute/gatk/commit/66d3da82e7e7bb73afa860c2a34ac03512f00fd2", "message": "Trim intervals loaded from interval files.", "committedDate": "2020-01-14T16:38:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNTk0MQ==", "url": "https://github.com/broadinstitute/gatk/pull/6375#discussion_r366515941", "bodyText": "There is at least one other call to parseGenomeLoc that are still not trimmed.  See line 332.  I think it should also be trimmed or the trimming should just be pushed down into parseGenomeLoc as well to be sure that it always happens.", "author": "lbergelson", "createdAt": "2020-01-14T18:59:13Z", "path": "src/main/java/org/broadinstitute/hellbender/utils/IntervalUtils.java", "diffHunk": "@@ -403,8 +403,9 @@ else if ( glParser.isValidGenomeLoc(interval.getContig(), interval.getStart(), i\n             } else {\n                 try (PathLineIterator reader = new PathLineIterator(inputPath)) {\n                     for (final String line : reader) {\n-                        if (!line.trim().isEmpty()) {\n-                            ret.add(glParser.parseGenomeLoc(line));\n+                        final String trimmedLine = line.trim();\n+                        if (!trimmedLine.isEmpty()) {\n+                            ret.add(glParser.parseGenomeLoc(trimmedLine));", "originalCommit": "66d3da82e7e7bb73afa860c2a34ac03512f00fd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwMzIxOQ==", "url": "https://github.com/broadinstitute/gatk/pull/6375#discussion_r373103219", "bodyText": "Added trim call to GenomeParserLoc, with a test.", "author": "cmnbroad", "createdAt": "2020-01-30T17:58:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNTk0MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNjQ2NQ==", "url": "https://github.com/broadinstitute/gatk/pull/6375#discussion_r366516465", "bodyText": "Huh, I've never seen this method which creates the temp file and writes to it before.   That seems useful.  Maybe it should be promote somewhere.", "author": "lbergelson", "createdAt": "2020-01-14T19:00:20Z", "path": "src/test/java/org/broadinstitute/hellbender/utils/IntervalUtilsUnitTest.java", "diffHunk": "@@ -1120,6 +1120,22 @@ public void testUnmergedIntervals(String unmergedIntervals) {\n         Assert.assertEquals(merged.size(), 1);\n     }\n \n+    @Test\n+    public void testIntervalFileIntervalsAreTrimmed() throws Exception {\n+        final GenomeLoc expectedGenomeLoc = hg19GenomeLocParser.createGenomeLoc(\"1\", 1, 10);\n+        final File gatkIntervalFile = createTempFile(\"testIntervalFileIntervalsAreTrimmed\", \".intervals.list\",", "originalCommit": "66d3da82e7e7bb73afa860c2a34ac03512f00fd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwMzc1Mw==", "url": "https://github.com/broadinstitute/gatk/pull/6375#discussion_r373103753", "bodyText": "I moved it to IOUtils with other methods with similar functionality, though now its no longer test-only.", "author": "cmnbroad", "createdAt": "2020-01-30T17:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNjQ2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "42a6d08136091c12129cd63958c2e514dce93cf3", "chunk": "diff --git a/src/test/java/org/broadinstitute/hellbender/utils/IntervalUtilsUnitTest.java b/src/test/java/org/broadinstitute/hellbender/utils/IntervalUtilsUnitTest.java\nindex 4a2e5f9b7..dc5d3eb17 100644\n--- a/src/test/java/org/broadinstitute/hellbender/utils/IntervalUtilsUnitTest.java\n+++ b/src/test/java/org/broadinstitute/hellbender/utils/IntervalUtilsUnitTest.java\n\n@@ -1121,11 +1120,17 @@ public final class IntervalUtilsUnitTest extends GATKBaseTest {\n     }\n \n     @Test\n-    public void testIntervalFileIntervalsAreTrimmed() throws Exception {\n+    public void testIntervalFileIntervalsAreTrimmed() throws IOException {\n         final GenomeLoc expectedGenomeLoc = hg19GenomeLocParser.createGenomeLoc(\"1\", 1, 10);\n-        final File gatkIntervalFile = createTempFile(\"testIntervalFileIntervalsAreTrimmed\", \".intervals.list\",\n-                // add some spaces around the start/end to test that it gets trimmed down to something valid\n-                String.format(\" %s:%d-%d \", expectedGenomeLoc.getContig(), expectedGenomeLoc.getStart(), expectedGenomeLoc.getEnd()));\n+        final File gatkIntervalFile = IOUtils.writeTempFile(\n+                Arrays.asList(\n+                    String.format(\n+                       // add some spaces around the start/end to test that it gets trimmed down to something valid\n+                        \" %s:%d-%d \",\n+                        expectedGenomeLoc.getContig(),\n+                        expectedGenomeLoc.getStart(),\n+                        expectedGenomeLoc.getEnd())),\n+                \"testIntervalFileIntervalsAreTrimmed\", \".intervals.list\");\n \n         final List<String> intervalArgs = new ArrayList<>(1);\n         intervalArgs.add(gatkIntervalFile.getAbsolutePath());\n"}}, {"oid": "86bd0097524d89fef6c917c9b1cda0b8105464b3", "url": "https://github.com/broadinstitute/gatk/commit/86bd0097524d89fef6c917c9b1cda0b8105464b3", "message": "Move trimming into GenomeLocParser.", "committedDate": "2020-01-30T17:01:47Z", "type": "commit"}, {"oid": "42a6d08136091c12129cd63958c2e514dce93cf3", "url": "https://github.com/broadinstitute/gatk/commit/42a6d08136091c12129cd63958c2e514dce93cf3", "message": "Move method to IOUtils.", "committedDate": "2020-01-30T17:50:54Z", "type": "commit"}]}