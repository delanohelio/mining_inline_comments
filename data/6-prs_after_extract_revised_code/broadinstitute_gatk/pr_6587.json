{"pr_number": 6587, "pr_title": "SplitIntervals dynamic zero padding in filenames", "pr_createdAt": "2020-05-06T19:52:46Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6587", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4NDgxOA==", "url": "https://github.com/broadinstitute/gatk/pull/6587#discussion_r421084818", "bodyText": "Should we keep the default at 4 to save anyone who has stupid scripts that look for 0001?", "author": "lbergelson", "createdAt": "2020-05-06T20:52:54Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/SplitIntervals.java", "diffHunk": "@@ -147,8 +147,9 @@ public void onTraversalStart() {\n                         })  // turn the intervals back into an IntervalList\n                 ).collect(Collectors.toList());\n \n-        final DecimalFormat formatter = new DecimalFormat(\"0000\");\n-        IntStream.range(0, scatteredFinal.size()).forEach(n -> scatteredFinal.get(n).write(new File(outputDir, formatter.format(n) + extension)));\n+        final int maxNumberOfPlaces = Math.max((int)Math.floor(Math.log10(scatterCount-1))+1,1); //max because single scatter case bombs otherwise", "originalCommit": "926e969c717a6dbb33712fb9dc99ee527c74d574", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU4NDMwNQ==", "url": "https://github.com/broadinstitute/gatk/pull/6587#discussion_r421584305", "bodyText": "I suppose that's a fair point.  Will do.", "author": "ldgauthier", "createdAt": "2020-05-07T15:14:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4NDgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "721576778a6e595d14bd1604abc930757073777c", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/walkers/SplitIntervals.java b/src/main/java/org/broadinstitute/hellbender/tools/walkers/SplitIntervals.java\nindex dfcf4a7b1..b4e960fc6 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/walkers/SplitIntervals.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/walkers/SplitIntervals.java\n\n@@ -147,7 +149,7 @@ public class SplitIntervals extends GATKTool {\n                         })  // turn the intervals back into an IntervalList\n                 ).collect(Collectors.toList());\n \n-        final int maxNumberOfPlaces = Math.max((int)Math.floor(Math.log10(scatterCount-1))+1,1); //max because single scatter case bombs otherwise\n+        final int maxNumberOfPlaces = Math.max((int)Math.floor(Math.log10(scatterCount-1))+1, DEFAULT_NUMBER_OF_DIGITS);\n         final String formatString = \"%0\" + maxNumberOfPlaces + \"d\";\n         IntStream.range(0, scatteredFinal.size()).forEach(n -> scatteredFinal.get(n).write(new File(outputDir, String.format(formatString, n) + extension)));\n     }\n"}}, {"oid": "721576778a6e595d14bd1604abc930757073777c", "url": "https://github.com/broadinstitute/gatk/commit/721576778a6e595d14bd1604abc930757073777c", "message": "Fix file names\nTests need fixing too", "committedDate": "2020-05-07T15:20:48Z", "type": "commit"}, {"oid": "721576778a6e595d14bd1604abc930757073777c", "url": "https://github.com/broadinstitute/gatk/commit/721576778a6e595d14bd1604abc930757073777c", "message": "Fix file names\nTests need fixing too", "committedDate": "2020-05-07T15:20:48Z", "type": "forcePushed"}]}