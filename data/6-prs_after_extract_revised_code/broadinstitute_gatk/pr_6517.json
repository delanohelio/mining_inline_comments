{"pr_number": 6517, "pr_title": "Fix ReadsSparkSource CRAM code paths.", "pr_createdAt": "2020-03-23T12:52:05Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6517", "timeline": [{"oid": "b408d9ec40d8d5932688acdc81a4f6e5c300cdf7", "url": "https://github.com/broadinstitute/gatk/commit/b408d9ec40d8d5932688acdc81a4f6e5c300cdf7", "message": "Fix ReadsSparkSource CRAM code paths.", "committedDate": "2020-05-04T21:04:54Z", "type": "forcePushed"}, {"oid": "39e83fc7052c1e48635e6d20fe29c42474a2bd6d", "url": "https://github.com/broadinstitute/gatk/commit/39e83fc7052c1e48635e6d20fe29c42474a2bd6d", "message": "Fix ReadsSparkSource CRAM code paths.", "committedDate": "2020-05-04T22:44:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNjcwNQ==", "url": "https://github.com/broadinstitute/gatk/pull/6517#discussion_r430716705", "bodyText": "this is super nitpicky, but why not do this set or not as part of the factory initialization and then just always pass in factory?  it moves the ternary out of the new object declaration which seems preferable.", "author": "lbergelson", "createdAt": "2020-05-26T21:25:09Z", "path": "src/main/java/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSource.java", "diffHunk": "@@ -164,16 +167,22 @@ public ReadsSparkSource(final JavaSparkContext ctx, final ValidationStringency v\n      * @return the header for the bam.\n      */\n     public SAMFileHeader getHeader(final String filePath, final GATKPathSpecifier referencePathSpecifier) {\n+        final GATKPathSpecifier cramReferencePathSpec = checkCramReference(ctx, filePath, referencePathSpecifier);\n+\n         // GCS case\n         if (BucketUtils.isGcsUrl(filePath)) {\n-            try (ReadsDataSource readsDataSource = new ReadsDataSource(IOUtils.getPath(filePath))) {\n-                return readsDataSource.getHeader();\n+            final SamReaderFactory factory = SamReaderFactory.makeDefault().validationStringency(validationStringency);\n+            try (ReadsDataSource readsDataSource = new ReadsDataSource(\n+                    Collections.singletonList(IOUtils.getPath(filePath)),\n+                    cramReferencePathSpec == null ?", "originalCommit": "39e83fc7052c1e48635e6d20fe29c42474a2bd6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MTY1OA==", "url": "https://github.com/broadinstitute/gatk/pull/6517#discussion_r431081658", "bodyText": "Done.", "author": "cmnbroad", "createdAt": "2020-05-27T12:34:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNjcwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "ddb35c020987d45919c4dc7174de9dc78e57b87b", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSource.java b/src/main/java/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSource.java\nindex b8413cf1d..4e38d178a 100644\n--- a/src/main/java/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSource.java\n+++ b/src/main/java/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSource.java\n\n@@ -171,12 +171,11 @@ public final class ReadsSparkSource implements Serializable {\n \n         // GCS case\n         if (BucketUtils.isGcsUrl(filePath)) {\n-            final SamReaderFactory factory = SamReaderFactory.makeDefault().validationStringency(validationStringency);\n-            try (ReadsDataSource readsDataSource = new ReadsDataSource(\n-                    Collections.singletonList(IOUtils.getPath(filePath)),\n-                    cramReferencePathSpec == null ?\n-                            factory :\n-                            factory.referenceSequence(referencePathSpecifier.toPath()))) {\n+            final SamReaderFactory factory = SamReaderFactory.makeDefault()\n+                    .validationStringency(validationStringency)\n+                    .referenceSequence(cramReferencePathSpec == null ? null : referencePathSpecifier.toPath());\n+            try (final ReadsDataSource readsDataSource =\n+                         new ReadsDataSource(Collections.singletonList(IOUtils.getPath(filePath)), factory)) {\n                  return readsDataSource.getHeader();\n             }\n         }\n"}}, {"oid": "ddb35c020987d45919c4dc7174de9dc78e57b87b", "url": "https://github.com/broadinstitute/gatk/commit/ddb35c020987d45919c4dc7174de9dc78e57b87b", "message": "Code review comments.", "committedDate": "2020-05-27T12:35:31Z", "type": "forcePushed"}, {"oid": "9165f8b1405c4d2ef7f8a6b1f3d9e953e9f738c3", "url": "https://github.com/broadinstitute/gatk/commit/9165f8b1405c4d2ef7f8a6b1f3d9e953e9f738c3", "message": "Fix ReadsSparkSource CRAM code paths.", "committedDate": "2020-05-27T12:35:31Z", "type": "commit"}, {"oid": "ddb35c020987d45919c4dc7174de9dc78e57b87b", "url": "https://github.com/broadinstitute/gatk/commit/ddb35c020987d45919c4dc7174de9dc78e57b87b", "message": "Code review comments.", "committedDate": "2020-05-27T12:35:31Z", "type": "commit"}]}