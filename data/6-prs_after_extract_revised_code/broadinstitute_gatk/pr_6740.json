{"pr_number": 6740, "pr_title": "Optimized DepthOfCoverage", "pr_createdAt": "2020-08-04T21:16:26Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6740", "timeline": [{"oid": "35c08b56002e82724f974d74eead0b90a3f80f3b", "url": "https://github.com/broadinstitute/gatk/commit/35c08b56002e82724f974d74eead0b90a3f80f3b", "message": "removing an errant toString()", "committedDate": "2020-08-03T17:27:56Z", "type": "commit"}, {"oid": "ca7c668e974e0e072ea5de2cd4628aacf815722a", "url": "https://github.com/broadinstitute/gatk/commit/ca7c668e974e0e072ea5de2cd4628aacf815722a", "message": "some minor looks at optimizing that didn't bear a lot of fruit", "committedDate": "2020-08-04T21:09:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxNDM0Nw==", "url": "https://github.com/broadinstitute/gatk/pull/6740#discussion_r465914347", "bodyText": "This will shock/ horrify you, but the formatters are not thread safe.  Make them fields instead of statics.", "author": "lbergelson", "createdAt": "2020-08-05T18:15:42Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/coverage/CoverageOutputWriter.java", "diffHunk": "@@ -61,7 +62,8 @@\n     private DEPTH_OF_COVERAGE_OUTPUT_FORMAT outputFormat;\n     private boolean omitDepthOutput;\n     private List<Integer> coverageThresholds;\n-    final static DecimalFormat DOUBLE_FORMAT = new DecimalFormat(\"0.00\");\n+    private final static DecimalFormat DOUBLE_FORMAT_2PLACES = new DecimalFormat(\"0.00\");", "originalCommit": "ca7c668e974e0e072ea5de2cd4628aacf815722a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6dd70aa8c9c128f8b0df35f59ba521354901f88", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/walkers/coverage/CoverageOutputWriter.java b/src/main/java/org/broadinstitute/hellbender/tools/walkers/coverage/CoverageOutputWriter.java\nindex 4839aa20c..537e27110 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/walkers/coverage/CoverageOutputWriter.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/walkers/coverage/CoverageOutputWriter.java\n\n@@ -62,8 +62,8 @@ public class CoverageOutputWriter implements Closeable {\n     private DEPTH_OF_COVERAGE_OUTPUT_FORMAT outputFormat;\n     private boolean omitDepthOutput;\n     private List<Integer> coverageThresholds;\n-    private final static DecimalFormat DOUBLE_FORMAT_2PLACES = new DecimalFormat(\"0.00\");\n-    private final static DecimalFormat DOUBLE_FORMAT_1PLACE = new DecimalFormat(\"0.0\");\n+    private final DecimalFormat DOUBLE_FORMAT_2PLACES = new DecimalFormat(\"0.00\");\n+    private final DecimalFormat DOUBLE_FORMAT_1PLACE = new DecimalFormat(\"0.0\");\n \n     public enum DEPTH_OF_COVERAGE_OUTPUT_FORMAT {\n         TABLE,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxNTgzMg==", "url": "https://github.com/broadinstitute/gatk/pull/6740#discussion_r465915832", "bodyText": "This one is the most funny.", "author": "lbergelson", "createdAt": "2020-08-05T18:18:38Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/coverage/CoverageUtils.java", "diffHunk": "@@ -149,7 +149,7 @@ private static void addCounts(int[] updateMe, int[] leaveMeAlone ) {\n \n         for (PileupElement e : countPileup) {\n             SAMReadGroupRecord readGroup = ReadUtils.getSAMReadGroupRecord(e.getRead(), header);\n-            Utils.nonNull(readGroup, String.format(\"Read %s was missing read group information\", e.getRead()));\n+            Utils.nonNull(readGroup, () -> String.format(\"Read %s was missing read group information\", e.getRead()));", "originalCommit": "ca7c668e974e0e072ea5de2cd4628aacf815722a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "e6dd70aa8c9c128f8b0df35f59ba521354901f88", "url": "https://github.com/broadinstitute/gatk/commit/e6dd70aa8c9c128f8b0df35f59ba521354901f88", "message": "responding to review comments", "committedDate": "2020-08-05T18:31:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMTMwOA==", "url": "https://github.com/broadinstitute/gatk/pull/6740#discussion_r465931308", "bodyText": "these should technically probably be lowercase, but eh", "author": "lbergelson", "createdAt": "2020-08-05T18:46:46Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/coverage/CoverageOutputWriter.java", "diffHunk": "@@ -61,7 +62,8 @@\n     private DEPTH_OF_COVERAGE_OUTPUT_FORMAT outputFormat;\n     private boolean omitDepthOutput;\n     private List<Integer> coverageThresholds;\n-    final static DecimalFormat DOUBLE_FORMAT = new DecimalFormat(\"0.00\");\n+    private final DecimalFormat DOUBLE_FORMAT_2PLACES = new DecimalFormat(\"0.00\");", "originalCommit": "e6dd70aa8c9c128f8b0df35f59ba521354901f88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3ODU3OA==", "url": "https://github.com/broadinstitute/gatk/pull/6740#discussion_r465978578", "bodyText": "I leave them uppercase to show my excitement for decimal formatting...", "author": "jamesemery", "createdAt": "2020-08-05T20:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMTMwOA=="}], "type": "inlineReview", "revised_code": null}]}