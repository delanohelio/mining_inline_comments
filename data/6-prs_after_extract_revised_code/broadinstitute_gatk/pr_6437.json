{"pr_number": 6437, "pr_title": "Don't call the non-ref allele in genotypes or ADs", "pr_createdAt": "2020-02-03T17:29:31Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6437", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyMzIyNw==", "url": "https://github.com/broadinstitute/gatk/pull/6437#discussion_r375623227", "bodyText": "Use GATKVariantContextUtils.noCallAlleles(ploidy)", "author": "davidbenjamin", "createdAt": "2020-02-06T03:20:58Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java", "diffHunk": "@@ -100,12 +100,25 @@ public static GenotypesContext subsetAlleles(final GenotypesContext originalGs,\n                 gb.attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, newSACs);\n             }\n \n+            //don't allow NON_REF genotype calls and set PLs to all zeros because we have no idea what's going on here\n+            if (gb.make().getAlleles().contains(Allele.NON_REF_ALLELE)) {\n+                gb.alleles(Arrays.asList(Allele.NO_CALL, Allele.NO_CALL));", "originalCommit": "b84fd6a55c005e441f8fc56afdbfc7e3fb22c859", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2155402993742d97171899029862db6478c679d3", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java b/src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java\nindex 5bb3afe48..58bb9227c 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java\n\n@@ -100,11 +100,6 @@ public final class AlleleSubsettingUtils {\n                 gb.attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, newSACs);\n             }\n \n-            //don't allow NON_REF genotype calls and set PLs to all zeros because we have no idea what's going on here\n-            if (gb.make().getAlleles().contains(Allele.NON_REF_ALLELE)) {\n-                gb.alleles(Arrays.asList(Allele.NO_CALL, Allele.NO_CALL));\n-                gb.PL(new int[newLikelihoods.length]);\n-            }\n \n             // restrict AD to the new allele subset\n             if(g.hasAD()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyMzk0MQ==", "url": "https://github.com/broadinstitute/gatk/pull/6437#discussion_r375623941", "bodyText": "It seems a bit wrong to make() gb prematurely just to check the alleles.  Perhaps that's a sign that this logic should be moved into GATKVariantContextUtils.makeGenotypeCall a few lines up.", "author": "davidbenjamin", "createdAt": "2020-02-06T03:25:01Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java", "diffHunk": "@@ -100,12 +100,25 @@ public static GenotypesContext subsetAlleles(final GenotypesContext originalGs,\n                 gb.attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, newSACs);\n             }\n \n+            //don't allow NON_REF genotype calls and set PLs to all zeros because we have no idea what's going on here\n+            if (gb.make().getAlleles().contains(Allele.NON_REF_ALLELE)) {", "originalCommit": "b84fd6a55c005e441f8fc56afdbfc7e3fb22c859", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2155402993742d97171899029862db6478c679d3", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java b/src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java\nindex 5bb3afe48..58bb9227c 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/AlleleSubsettingUtils.java\n\n@@ -100,11 +100,6 @@ public final class AlleleSubsettingUtils {\n                 gb.attribute(GATKVCFConstants.STRAND_COUNT_BY_SAMPLE_KEY, newSACs);\n             }\n \n-            //don't allow NON_REF genotype calls and set PLs to all zeros because we have no idea what's going on here\n-            if (gb.make().getAlleles().contains(Allele.NON_REF_ALLELE)) {\n-                gb.alleles(Arrays.asList(Allele.NO_CALL, Allele.NO_CALL));\n-                gb.PL(new int[newLikelihoods.length]);\n-            }\n \n             // restrict AD to the new allele subset\n             if(g.hasAD()) {\n"}}, {"oid": "2155402993742d97171899029862db6478c679d3", "url": "https://github.com/broadinstitute/gatk/commit/2155402993742d97171899029862db6478c679d3", "message": "No-call anything with a NON_REF allele, PLs to zeros, AD modified", "committedDate": "2020-02-13T16:24:20Z", "type": "forcePushed"}, {"oid": "4834c8765e2ef6cbe1f673361b72c1a5bb881df1", "url": "https://github.com/broadinstitute/gatk/commit/4834c8765e2ef6cbe1f673361b72c1a5bb881df1", "message": "No-call anything with a NON_REF allele, PLs to zeros, AD modified", "committedDate": "2020-02-14T19:31:22Z", "type": "commit"}, {"oid": "4834c8765e2ef6cbe1f673361b72c1a5bb881df1", "url": "https://github.com/broadinstitute/gatk/commit/4834c8765e2ef6cbe1f673361b72c1a5bb881df1", "message": "No-call anything with a NON_REF allele, PLs to zeros, AD modified", "committedDate": "2020-02-14T19:31:22Z", "type": "forcePushed"}]}