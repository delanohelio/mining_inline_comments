{"pr_number": 6934, "pr_title": "Making ingest work on gvcfs without allele specific annotations", "pr_createdAt": "2020-10-30T17:36:23Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6934", "timeline": [{"oid": "c4a740a6bed6fd9db49b538347ba6504993fd443", "url": "https://github.com/broadinstitute/gatk/commit/c4a740a6bed6fd9db49b538347ba6504993fd443", "message": "changes", "committedDate": "2020-11-03T15:58:52Z", "type": "commit"}, {"oid": "c4a740a6bed6fd9db49b538347ba6504993fd443", "url": "https://github.com/broadinstitute/gatk/commit/c4a740a6bed6fd9db49b538347ba6504993fd443", "message": "changes", "committedDate": "2020-11-03T15:58:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNTQ4OA==", "url": "https://github.com/broadinstitute/gatk/pull/6934#discussion_r516805488", "bodyText": "we need to replace the line above with this since we might have actual data in the last field:\nout = out.substring(0, out.lastIndexOf(\"|\"));", "author": "ahaessly", "createdAt": "2020-11-03T16:40:28Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java", "diffHunk": "@@ -75,30 +73,55 @@ public String getColumnValue(final VariantContext variant) {\n         // TODO sci notation?\n         public String getColumnValue(final VariantContext variant) {\n             String out = getAttribute(variant, GATKVCFConstants.AS_RAW_RMS_MAPPING_QUALITY_KEY, null);\n-            if (out == null) {\n-                throw new UserException(\"Cannot be missing required value for alternate_bases.AS_RAW_MQ\");\n+            String outNotAlleleSpecific = getAttribute(variant, GATKVCFConstants.RAW_MAPPING_QUALITY_WITH_DEPTH_KEY, null);\n+            String outNotAlleleSpecificAndOld = getAttribute(variant, GATKVCFConstants.RAW_RMS_MAPPING_QUALITY_DEPRECATED, null);\n+            if (out == null && outNotAlleleSpecific == null && outNotAlleleSpecificAndOld == null) {\n+                throw new UserException(\"Cannot be missing required value for alternate_bases.AS_RAW_MQ, RAW_MQandDP or RAW_MQ.\");\n             }\n-            if (!out.endsWith(\"|0.00\")) {\n-                logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n+            if (out != null) {\n+                if(!out.endsWith(\"|0.00\")) {\n+                    logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n+                }\n+                    out = out.substring(0, out.length() - 5);", "originalCommit": "c4a740a6bed6fd9db49b538347ba6504993fd443", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5dfe90713fb3eacff8938426961b4def6aa2aabe", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java\nindex ca46b9d81..5076eae12 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java\n\n@@ -82,7 +82,7 @@ public enum VetFieldEnum {\n                 if(!out.endsWith(\"|0.00\")) {\n                     logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n                 }\n-                    out = out.substring(0, out.length() - 5);\n+                    out = out.substring(0, out.lastIndexOf(\"|\"));\n                     String[] outValues = out.split(\"\\\\|\");\n                     out = Arrays\n                             .stream(outValues)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgxMjQyNA==", "url": "https://github.com/broadinstitute/gatk/pull/6934#discussion_r516812424", "bodyText": "I didn't notice before that we were setting this to a space (here and for MQRankSum). for PTG and PID we use the empty string if we don't have a value. can we change these to the empty string too?", "author": "ahaessly", "createdAt": "2020-11-03T16:50:13Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java", "diffHunk": "@@ -148,8 +171,8 @@ public String getColumnValue(final VariantContext variant) {\n \n     AS_RAW_ReadPosRankSum {  // TODO -- maybe rely on 1/1 for call_GT\n         public String getColumnValue(final VariantContext variant) {\n-            String out =  getAttribute(variant, GATKVCFConstants.AS_RAW_READ_POS_RANK_SUM_KEY, \"\");\n-            if (out.contentEquals(\"||\") || out.contentEquals(\"|||\") ) {\n+            String out =  getAttribute(variant, GATKVCFConstants.AS_RAW_READ_POS_RANK_SUM_KEY, null);\n+            if (out == null || out.contentEquals(\"||\") || out.contentEquals(\"|||\") ) {\n                 out = \" \"; // TODO is this better than null?", "originalCommit": "c4a740a6bed6fd9db49b538347ba6504993fd443", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5dfe90713fb3eacff8938426961b4def6aa2aabe", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java\nindex ca46b9d81..5076eae12 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java\n\n@@ -173,7 +173,7 @@ public enum VetFieldEnum {\n         public String getColumnValue(final VariantContext variant) {\n             String out =  getAttribute(variant, GATKVCFConstants.AS_RAW_READ_POS_RANK_SUM_KEY, null);\n             if (out == null || out.contentEquals(\"||\") || out.contentEquals(\"|||\") ) {\n-                out = \" \"; // TODO is this better than null?\n+                out = \"\";\n                 return out;\n             }\n             if (out.startsWith(\"|\")) {\n"}}, {"oid": "5dfe90713fb3eacff8938426961b4def6aa2aabe", "url": "https://github.com/broadinstitute/gatk/commit/5dfe90713fb3eacff8938426961b4def6aa2aabe", "message": "addressing comments", "committedDate": "2020-11-03T16:56:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyMzU1Ng==", "url": "https://github.com/broadinstitute/gatk/pull/6934#discussion_r516823556", "bodyText": "formatting nit - the 5 lines above should be tabbed out one level", "author": "ahaessly", "createdAt": "2020-11-03T17:06:11Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java", "diffHunk": "@@ -75,31 +73,56 @@ public String getColumnValue(final VariantContext variant) {\n         // TODO sci notation?\n         public String getColumnValue(final VariantContext variant) {\n             String out = getAttribute(variant, GATKVCFConstants.AS_RAW_RMS_MAPPING_QUALITY_KEY, null);\n-            if (out == null) {\n-                throw new UserException(\"Cannot be missing required value for alternate_bases.AS_RAW_MQ\");\n+            String outNotAlleleSpecific = getAttribute(variant, GATKVCFConstants.RAW_MAPPING_QUALITY_WITH_DEPTH_KEY, null);\n+            String outNotAlleleSpecificAndOld = getAttribute(variant, GATKVCFConstants.RAW_RMS_MAPPING_QUALITY_DEPRECATED, null);\n+            if (out == null && outNotAlleleSpecific == null && outNotAlleleSpecificAndOld == null) {\n+                throw new UserException(\"Cannot be missing required value for alternate_bases.AS_RAW_MQ, RAW_MQandDP or RAW_MQ.\");\n             }\n-            if (!out.endsWith(\"|0.00\")) {\n-                logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n+            if (out != null) {\n+                if(!out.endsWith(\"|0.00\")) {\n+                    logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n+                }\n+                    out = out.substring(0, out.lastIndexOf(\"|\"));\n+                    String[] outValues = out.split(\"\\\\|\");\n+                    out = Arrays\n+                            .stream(outValues)\n+                            .map(val -> val.endsWith(\".00\") ? val.substring(0, val.length() - 3) : val)", "originalCommit": "5dfe90713fb3eacff8938426961b4def6aa2aabe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4b6752644989acf32678f9851cce4e18d62833e", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java\nindex 5076eae12..c6fccf699 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/variantdb/nextgen/VetFieldEnum.java\n\n@@ -82,12 +82,12 @@ public enum VetFieldEnum {\n                 if(!out.endsWith(\"|0.00\")) {\n                     logger.warn(\"Expected AS_RAW_MQ value to end in |0.00. value is: \" + out + \" for variant \" + variant.toString());\n                 }\n-                    out = out.substring(0, out.lastIndexOf(\"|\"));\n-                    String[] outValues = out.split(\"\\\\|\");\n-                    out = Arrays\n-                            .stream(outValues)\n-                            .map(val -> val.endsWith(\".00\") ? val.substring(0, val.length() - 3) : val)\n-                            .collect(Collectors.joining(VCFConstants.PHASED));\n+                out = out.substring(0, out.lastIndexOf(\"|\"));\n+                String[] outValues = out.split(\"\\\\|\");\n+                out = Arrays\n+                        .stream(outValues)\n+                        .map(val -> val.endsWith(\".00\") ? val.substring(0, val.length() - 3) : val)\n+                        .collect(Collectors.joining(VCFConstants.PHASED));\n                 return out;\n             // If we have gvcfs that are not allele specific from GATK4 we'll get RAW_MQandDP.\n             // We can drop DP here and use AS_VarDP when finalizing RMS Mapping Quality\n"}}, {"oid": "a4b6752644989acf32678f9851cce4e18d62833e", "url": "https://github.com/broadinstitute/gatk/commit/a4b6752644989acf32678f9851cce4e18d62833e", "message": "tabs", "committedDate": "2020-11-03T17:44:14Z", "type": "commit"}]}