{"pr_number": 6891, "pr_title": "Add loci to annotation warnings", "pr_createdAt": "2020-10-15T16:49:58Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6891", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMTMyNw==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r505721327", "bodyText": "Can it ever be the case that both !g.isCalled() and likelihoods == null? If so, you might want to change this else if to just if so that we can get both messages when both are true.", "author": "droazen", "createdAt": "2020-10-15T17:36:33Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtils.java", "diffHunk": "@@ -85,4 +91,16 @@ public static boolean isAlleleSpecific(final InfoFieldAnnotation annotation) {\n         }\n         return Arrays.asList(rawDataString.split(ALLELE_SPECIFIC_SPLIT_REGEX));\n     }\n+\n+    static String generateMissingDataWarning(final VariantContext vc, final Genotype g, final AlleleLikelihoods<GATKRead, Allele> likelihoods) {\n+        final String positionString = \"Annotation will not be calculated at position \" + vc.getContig() + \":\" + vc.getStart() +\n+                \" and possibly subsequent\";\n+        if (!g.isCalled()) {\n+            return positionString + \"; genotype for sample \" + g.getSampleName() + \" is not called\";\n+        } else if (likelihoods == null) {\n+            return positionString +  \"; alleleLikelihoodMap is null\";", "originalCommit": "f352db4997f5ce605cff5f8b98ce38921bd01cdc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "de0dcc2f335307470097ac07801ffa454b48ed7c", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtils.java b/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtils.java\nindex f30887c0a..46a30dde0 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtils.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtils.java\n\n@@ -93,14 +93,14 @@ public final class AnnotationUtils {\n     }\n \n     static String generateMissingDataWarning(final VariantContext vc, final Genotype g, final AlleleLikelihoods<GATKRead, Allele> likelihoods) {\n-        final String positionString = \"Annotation will not be calculated at position \" + vc.getContig() + \":\" + vc.getStart() +\n-                \" and possibly subsequent\";\n+        final StringBuilder outString = new StringBuilder(\"Annotation will not be calculated at position \" + vc.getContig() + \":\" + vc.getStart() +\n+                \" and possibly subsequent\");\n         if (!g.isCalled()) {\n-            return positionString + \"; genotype for sample \" + g.getSampleName() + \" is not called\";\n-        } else if (likelihoods == null) {\n-            return positionString +  \"; alleleLikelihoodMap is null\";\n-        } else {\n-            return positionString;\n+            outString.append(\"; genotype for sample \" + g.getSampleName() + \" is not called\");\n         }\n+        if (likelihoods == null) {\n+            outString.append(\"; alleleLikelihoodMap is null\");\n+        }\n+        return outString.toString();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMjMyMQ==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r505722321", "bodyText": "I think the OneShotLogger should be separate from the normal logger in this class, with a clear name like oneShotLogger, so that people don't mistakenly try to write additional messages to the OneShotLogger and wonder why they don't show up.", "author": "droazen", "createdAt": "2020-10-15T17:38:21Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/DepthPerSampleHC.java", "diffHunk": "@@ -53,7 +53,7 @@ public void annotate( final ReferenceContext ref,\n         Utils.nonNull(gb);\n \n         if ( likelihoods == null || !g.isCalled() ) {\n-            logger.warn(\"Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null\");\n+            logger.warn(AnnotationUtils.generateMissingDataWarning(vc, g, likelihoods));", "originalCommit": "f352db4997f5ce605cff5f8b98ce38921bd01cdc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMjU5OA==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r505722598", "bodyText": "Here too I think the OneShotLogger should be separate from the normal logger, with a clear name like oneShotLogger, so that people don't mistakenly try to write additional messages to the OneShotLogger and wonder why they don't show up.", "author": "droazen", "createdAt": "2020-10-15T17:38:49Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/StrandBiasBySample.java", "diffHunk": "@@ -52,7 +53,7 @@\n  */\n @DocumentedFeature(groupName=HelpConstants.DOC_CAT_ANNOTATORS, groupSummary=HelpConstants.DOC_CAT_ANNOTATORS_SUMMARY, summary=\"Number of forward and reverse reads that support REF and ALT alleles (SB)\")\n public final class StrandBiasBySample extends GenotypeAnnotation implements StandardMutectAnnotation {\n-    private final static Logger logger = LogManager.getLogger(StrandBiasBySample.class);\n+    private final static OneShotLogger logger = new OneShotLogger(LogManager.getLogger(StrandBiasBySample.class));", "originalCommit": "f352db4997f5ce605cff5f8b98ce38921bd01cdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc5NTUwOQ==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r505795509", "bodyText": "FWIW in the situation I'm trying to untangle now, having this be repeated is actually useful.  Since there are (I think) reasonable cases where strand bias can't be computed, but in my case the fact that it came out ~350 times for a fairly small panel was a good indicator of error.  And we're not looking back through historic logs to find other samples/runs that have high rates of this log message.", "author": "tfenne", "createdAt": "2020-10-15T19:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMjU5OA=="}], "type": "inlineReview", "revised_code": {"commit": "de0dcc2f335307470097ac07801ffa454b48ed7c", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/StrandBiasBySample.java b/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/StrandBiasBySample.java\nindex 6920942ac..daed8bd2d 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/StrandBiasBySample.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/StrandBiasBySample.java\n\n@@ -53,7 +52,7 @@ import java.util.List;\n  */\n @DocumentedFeature(groupName=HelpConstants.DOC_CAT_ANNOTATORS, groupSummary=HelpConstants.DOC_CAT_ANNOTATORS_SUMMARY, summary=\"Number of forward and reverse reads that support REF and ALT alleles (SB)\")\n public final class StrandBiasBySample extends GenotypeAnnotation implements StandardMutectAnnotation {\n-    private final static OneShotLogger logger = new OneShotLogger(LogManager.getLogger(StrandBiasBySample.class));\n+    private final static Logger logger = LogManager.getLogger(StrandBiasBySample.class);\n \n     @Override\n     public void annotate(final ReferenceContext ref,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNDc5MA==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r505724790", "bodyText": "I'm not sure there's any point to piggybacking on these existing tests to \"cover\" this warning message, since it affects only the logging and not the output. It would be better, I think, to write a 2-3 line unit test for the new generateMissingDataWarning() method that just exercises the two cases of likelihoods == null and ! g.isCalled()", "author": "droazen", "createdAt": "2020-10-15T17:42:32Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerIntegrationTest.java", "diffHunk": "@@ -1128,6 +1129,7 @@ public void test100PercentContaminationNoCallsInGVCFMode() throws Exception {\n                 \"-contamination\", \"1.0\",\n                 \"--\" + AssemblyBasedCallerArgumentCollection.EMIT_REF_CONFIDENCE_LONG_NAME, ReferenceConfidenceMode.GVCF.toString(),\n                 \"--\" + AssemblyBasedCallerArgumentCollection.ALLELE_EXTENSION_LONG_NAME, \"2\",\n+                \"--\" + StandardArgumentDefinitions.VERBOSITY_NAME, Log.LogLevel.WARNING.toString()  //shows DP and SB warnings", "originalCommit": "f352db4997f5ce605cff5f8b98ce38921bd01cdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxOTA5MQ==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506619091", "bodyText": "Well, it certainly made me feel better to see it in the console output.", "author": "ldgauthier", "createdAt": "2020-10-16T17:27:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNDc5MA=="}], "type": "inlineReview", "revised_code": {"commit": "de0dcc2f335307470097ac07801ffa454b48ed7c", "chunk": "diff --git a/src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerIntegrationTest.java b/src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerIntegrationTest.java\nindex faa3fa395..1a712dfad 100644\n--- a/src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerIntegrationTest.java\n+++ b/src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerIntegrationTest.java\n\n@@ -1129,7 +1234,6 @@ public class HaplotypeCallerIntegrationTest extends CommandLineProgramTest {\n                 \"-contamination\", \"1.0\",\n                 \"--\" + AssemblyBasedCallerArgumentCollection.EMIT_REF_CONFIDENCE_LONG_NAME, ReferenceConfidenceMode.GVCF.toString(),\n                 \"--\" + AssemblyBasedCallerArgumentCollection.ALLELE_EXTENSION_LONG_NAME, \"2\",\n-                \"--\" + StandardArgumentDefinitions.VERBOSITY_NAME, Log.LogLevel.WARNING.toString()  //shows DP and SB warnings\n         };\n         runCommandLine(contaminationArgs);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY2OTk0MA==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506669940", "bodyText": "Rename logger to oneShotLogger to avoid hypothetical future confusion.", "author": "droazen", "createdAt": "2020-10-16T19:04:58Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/InbreedingCoeff.java", "diffHunk": "@@ -72,7 +72,8 @@ public InbreedingCoeff(final File pedigreeFile){\n         Utils.nonNull(vc);\n         final GenotypesContext genotypes = getFounderGenotypes(vc);\n         if (genotypes == null || genotypes.size() < MIN_SAMPLES || !vc.isVariant()) {\n-            logger.warn(\"InbreedingCoeff will not be calculated; at least \" + MIN_SAMPLES + \" samples must have called genotypes\");\n+            logger.warn(\"InbreedingCoeff will not be calculated at position \" + vc.getContig() + \":\" + vc.getStart() +", "originalCommit": "f30259daccf4226d3c5cbb2068d6659b6bb475bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "de0dcc2f335307470097ac07801ffa454b48ed7c", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/InbreedingCoeff.java b/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/InbreedingCoeff.java\nindex f42f317ac..4875bd2ca 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/InbreedingCoeff.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/InbreedingCoeff.java\n\n@@ -72,7 +72,7 @@ public final class InbreedingCoeff extends PedigreeAnnotation implements Standar\n         Utils.nonNull(vc);\n         final GenotypesContext genotypes = getFounderGenotypes(vc);\n         if (genotypes == null || genotypes.size() < MIN_SAMPLES || !vc.isVariant()) {\n-            logger.warn(\"InbreedingCoeff will not be calculated at position \" + vc.getContig() + \":\" + vc.getStart() +\n+            oneShotLogger.warn(\"InbreedingCoeff will not be calculated at position \" + vc.getContig() + \":\" + vc.getStart() +\n                     \" and possibly subsequent; at least \" + MIN_SAMPLES + \" samples must have called genotypes\");\n             return Collections.emptyMap();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3MTE3NQ==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506671175", "bodyText": "Should this one go to the regular logger? Or a separate OneShotLogger? We don't want to suppress this just because we had a site that hit the other warning above.", "author": "droazen", "createdAt": "2020-10-16T19:07:38Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/DepthPerSampleHC.java", "diffHunk": "@@ -68,7 +68,7 @@ public void annotate( final ReferenceContext ref,\n \n         // make sure that there's a meaningful relationship between the alleles in the likelihoods and our VariantContext\n         if ( !likelihoods.alleles().containsAll(alleles) ) {\n-            logger.warn(\"VC alleles \" + alleles + \" not a strict subset of AlleleLikelihoods alleles \" + likelihoods.alleles());\n+            oneShotLogger.warn(\"VC alleles \" + alleles + \" not a strict subset of AlleleLikelihoods alleles \" + likelihoods.alleles());", "originalCommit": "f30259daccf4226d3c5cbb2068d6659b6bb475bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "de0dcc2f335307470097ac07801ffa454b48ed7c", "chunk": "diff --git a/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/DepthPerSampleHC.java b/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/DepthPerSampleHC.java\nindex 2612041f6..070949063 100644\n--- a/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/DepthPerSampleHC.java\n+++ b/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/DepthPerSampleHC.java\n\n@@ -68,7 +70,7 @@ public final class DepthPerSampleHC extends GenotypeAnnotation implements Standa\n \n         // make sure that there's a meaningful relationship between the alleles in the likelihoods and our VariantContext\n         if ( !likelihoods.alleles().containsAll(alleles) ) {\n-            oneShotLogger.warn(\"VC alleles \" + alleles + \" not a strict subset of AlleleLikelihoods alleles \" + likelihoods.alleles());\n+            logger.warn(\"VC alleles \" + alleles + \" not a strict subset of AlleleLikelihoods alleles \" + likelihoods.alleles());\n             return;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3MTk1OQ==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506671959", "bodyText": "So here we have a regular logger instead of a OneShotLogger. I think we should be consistent: either have a regular logger in both StrandBiasBySample and DepthPerSampleHC, or a OneShotLogger in both places. For debuggability, it might actually be better to keep them both as regular loggers for now.", "author": "droazen", "createdAt": "2020-10-16T19:09:24Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/StrandBiasBySample.java", "diffHunk": "@@ -65,7 +65,7 @@ public void annotate(final ReferenceContext ref,\n         Utils.nonNull(gb);\n \n         if ( likelihoods == null || !g.isCalled() ) {\n-            logger.warn(\"Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null\");\n+            logger.warn(AnnotationUtils.generateMissingDataWarning(vc, g, likelihoods));", "originalCommit": "f30259daccf4226d3c5cbb2068d6659b6bb475bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3MjEzNg==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506672136", "bodyText": "Erm, I assume that this was added by mistake?", "author": "droazen", "createdAt": "2020-10-16T19:09:52Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/copynumber/GermlineCNVCallerIntegrationTest.java", "diffHunk": "@@ -57,6 +58,7 @@ public void testCase() {\n                 .add(StandardArgumentDefinitions.OUTPUT_LONG_NAME, OUTPUT_DIR.getAbsolutePath())\n                 .add(CopyNumberStandardArgument.OUTPUT_PREFIX_LONG_NAME, \"test-germline-cnv-case\");\n         runCommandLine(argsBuilder);\n+        Assert.assertTrue(true);", "originalCommit": "f30259daccf4226d3c5cbb2068d6659b6bb475bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "de0dcc2f335307470097ac07801ffa454b48ed7c", "chunk": "diff --git a/src/test/java/org/broadinstitute/hellbender/tools/copynumber/GermlineCNVCallerIntegrationTest.java b/src/test/java/org/broadinstitute/hellbender/tools/copynumber/GermlineCNVCallerIntegrationTest.java\nindex ee13380b0..3bd905503 100644\n--- a/src/test/java/org/broadinstitute/hellbender/tools/copynumber/GermlineCNVCallerIntegrationTest.java\n+++ b/src/test/java/org/broadinstitute/hellbender/tools/copynumber/GermlineCNVCallerIntegrationTest.java\n\n@@ -58,7 +58,6 @@ public final class GermlineCNVCallerIntegrationTest extends CommandLineProgramTe\n                 .add(StandardArgumentDefinitions.OUTPUT_LONG_NAME, OUTPUT_DIR.getAbsolutePath())\n                 .add(CopyNumberStandardArgument.OUTPUT_PREFIX_LONG_NAME, \"test-germline-cnv-case\");\n         runCommandLine(argsBuilder);\n-        Assert.assertTrue(true);\n     }\n \n     @Test(groups = {\"python\"}, expectedExceptions = IllegalArgumentException.class)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3MjIzNg==", "url": "https://github.com/broadinstitute/gatk/pull/6891#discussion_r506672236", "bodyText": "extends GATKBaseTest", "author": "droazen", "createdAt": "2020-10-16T19:10:05Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtilsUnitTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.broadinstitute.hellbender.tools.walkers.annotator;\n+\n+import htsjdk.samtools.TextCigarCodec;\n+import htsjdk.variant.variantcontext.Allele;\n+import org.broadinstitute.hellbender.testutils.ArtificialAnnotationUtils;\n+import org.broadinstitute.hellbender.testutils.VariantContextTestUtils;\n+import org.broadinstitute.hellbender.utils.genotyper.AlleleLikelihoods;\n+import org.broadinstitute.hellbender.utils.read.ArtificialReadUtils;\n+import org.broadinstitute.hellbender.utils.read.GATKRead;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+\n+import static org.testng.Assert.*;\n+\n+public class AnnotationUtilsUnitTest {", "originalCommit": "f30259daccf4226d3c5cbb2068d6659b6bb475bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "de0dcc2f335307470097ac07801ffa454b48ed7c", "chunk": "diff --git a/src/test/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtilsUnitTest.java b/src/test/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtilsUnitTest.java\nindex ba7392717..5bb72d69c 100644\n--- a/src/test/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtilsUnitTest.java\n+++ b/src/test/java/org/broadinstitute/hellbender/tools/walkers/annotator/AnnotationUtilsUnitTest.java\n\n@@ -2,6 +2,7 @@ package org.broadinstitute.hellbender.tools.walkers.annotator;\n \n import htsjdk.samtools.TextCigarCodec;\n import htsjdk.variant.variantcontext.Allele;\n+import org.broadinstitute.hellbender.GATKBaseTest;\n import org.broadinstitute.hellbender.testutils.ArtificialAnnotationUtils;\n import org.broadinstitute.hellbender.testutils.VariantContextTestUtils;\n import org.broadinstitute.hellbender.utils.genotyper.AlleleLikelihoods;\n"}}, {"oid": "de0dcc2f335307470097ac07801ffa454b48ed7c", "url": "https://github.com/broadinstitute/gatk/commit/de0dcc2f335307470097ac07801ffa454b48ed7c", "message": "Add more info when annotations are not output", "committedDate": "2020-11-13T20:46:53Z", "type": "commit"}, {"oid": "de0dcc2f335307470097ac07801ffa454b48ed7c", "url": "https://github.com/broadinstitute/gatk/commit/de0dcc2f335307470097ac07801ffa454b48ed7c", "message": "Add more info when annotations are not output", "committedDate": "2020-11-13T20:46:53Z", "type": "forcePushed"}, {"oid": "5be42bd7955eaebcddd2d68efae248683be9eed4", "url": "https://github.com/broadinstitute/gatk/commit/5be42bd7955eaebcddd2d68efae248683be9eed4", "message": "Import", "committedDate": "2020-11-17T18:10:16Z", "type": "commit"}]}