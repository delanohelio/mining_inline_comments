{"pr_number": 12047, "pr_title": "[FLINK-16990][table-planner-blink] Support LookupTableSource in blink planner", "pr_createdAt": "2020-05-09T03:09:01Z", "pr_url": "https://github.com/apache/flink/pull/12047", "timeline": [{"oid": "b718cd9e806a7ade0f9dca948a0b791b9d36cdc2", "url": "https://github.com/apache/flink/commit/b718cd9e806a7ade0f9dca948a0b791b9d36cdc2", "message": "[FLINK-16990][table-planner-blink] Support LookupTableSource in blink planner", "committedDate": "2020-05-09T02:37:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDY0NA==", "url": "https://github.com/apache/flink/pull/12047#discussion_r422474644", "bodyText": "Why is lookupKeys two-dimensional array.", "author": "danny0405", "createdAt": "2020-05-09T09:27:51Z", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/connector/source/LookupRuntimeProviderContext.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.connector.source;\n+\n+import org.apache.flink.table.connector.source.DynamicTableSource.DataStructureConverter;\n+import org.apache.flink.table.connector.source.LookupTableSource;\n+import org.apache.flink.table.data.util.DataFormatConverters.DataFormatConverter;\n+import org.apache.flink.table.types.DataType;\n+\n+import static org.apache.flink.table.data.util.DataFormatConverters.getConverterForDataType;\n+\n+/**\n+ * Implementation of {@link LookupTableSource.Context}. Currently we delegate\n+ * {@link #createDataStructureConverter} to {@link DataFormatConverter}.\n+ *\n+ * <p>In the future, we can code generate the implementation of {@link #createDataStructureConverter}\n+ * for better performance.\n+ */\n+public class LookupRuntimeProviderContext implements LookupTableSource.Context {\n+\n+\tprivate final int[][] lookupKeys;\n+\n+\tpublic LookupRuntimeProviderContext(int[][] lookupKeys) {\n+\t\tthis.lookupKeys = lookupKeys;", "originalCommit": "b718cd9e806a7ade0f9dca948a0b791b9d36cdc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4NTEwMw==", "url": "https://github.com/apache/flink/pull/12047#discussion_r422485103", "bodyText": "See the Javadoc org.apache.flink.table.connector.source.LookupTableSource.Context#getKeys, it is in order to support nested lookup keys.", "author": "wuchong", "createdAt": "2020-05-09T11:27:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUwNjk5Mw==", "url": "https://github.com/apache/flink/pull/12047#discussion_r422506993", "bodyText": "But IMO, two-dimensional array is not enough, what if there is a column a.b.c ?", "author": "danny0405", "createdAt": "2020-05-09T15:15:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUwODg0Mg==", "url": "https://github.com/apache/flink/pull/12047#discussion_r422508842", "bodyText": "It can be expressed. If we have a lookup table , and the lookup key is r.f.q2\nCREATE TABLE t1 (r ROW< d DOUBLE, f ROW<q1 STRING, q2 BOOLEAN> >);\nthe array will be [[0, 1, 1]] which is equivalent to [[\"r\", \"f\", \"q2\"]].", "author": "wuchong", "createdAt": "2020-05-09T15:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUwODg5NA==", "url": "https://github.com/apache/flink/pull/12047#discussion_r422508894", "bodyText": "The array is a path for selection.", "author": "wuchong", "createdAt": "2020-05-09T15:32:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NDY0NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NzU2OQ==", "url": "https://github.com/apache/flink/pull/12047#discussion_r422477569", "bodyText": "What is this used for ?", "author": "danny0405", "createdAt": "2020-05-09T09:59:24Z", "path": "flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/factories/TestValuesTableFactory.java", "diffHunk": "@@ -145,7 +157,9 @@ private static RowKind parseRowKind(String rowKindShortString) {\n \t// Factory\n \t// --------------------------------------------------------------------------------------------\n \n-\tpublic static final String IDENTIFIER = \"values\";\n+\tpublic static final AtomicInteger RESOURCE_COUNTER = new AtomicInteger();\n+", "originalCommit": "b718cd9e806a7ade0f9dca948a0b791b9d36cdc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4NDk5MQ==", "url": "https://github.com/apache/flink/pull/12047#discussion_r422484991", "bodyText": "It is used for checking open and close are both invocked. The RESOURCE_COUNTER will be checked in https://github.com/apache/flink/pull/12047/files#diff-46716d3945346195315abf04aa338171R79", "author": "wuchong", "createdAt": "2020-05-09T11:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NzU2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUwNzA5OQ==", "url": "https://github.com/apache/flink/pull/12047#discussion_r422507099", "bodyText": "Thanks for the explanation.", "author": "danny0405", "createdAt": "2020-05-09T15:15:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NzU2OQ=="}], "type": "inlineReview", "revised_code": null}]}