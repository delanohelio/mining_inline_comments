{"pr_number": 12403, "pr_title": "[FLINK-18030][hive] Hive UDF doesn't accept empty string literal para\u2026", "pr_createdAt": "2020-05-29T09:28:29Z", "pr_url": "https://github.com/apache/flink/pull/12403", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1NDY0NQ==", "url": "https://github.com/apache/flink/pull/12403#discussion_r435754645", "bodyText": "Also modify varchar?", "author": "JingsongLi", "createdAt": "2020-06-05T08:01:28Z", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTypeUtil.java", "diffHunk": "@@ -182,11 +182,17 @@ private static DataType toFlinkPrimitiveType(PrimitiveTypeInfo hiveType) {\n \n \t\t@Override\n \t\tpublic TypeInfo visit(CharType charType) {\n-\t\t\tif (charType.getLength() > HiveChar.MAX_CHAR_LENGTH) {\n-\t\t\t\tthrow new CatalogException(\n-\t\t\t\t\t\tString.format(\"HiveCatalog doesn't support char type with length of '%d'. \" +\n-\t\t\t\t\t\t\t\t\t\"The maximum length is %d\",\n+\t\t\t// Flink treats string literal UDF parameters as CHAR. Such types may have precisions not supported by\n+\t\t\t// Hive, e.g. CHAR(0). Promote it to STRING in such case if we're told not to check precision.\n+\t\t\tif (charType.getLength() > HiveChar.MAX_CHAR_LENGTH || charType.getLength() < 1) {", "originalCommit": "0e667a3bd702288955808b79493a09244513d202", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkxNzI0Mg==", "url": "https://github.com/apache/flink/pull/12403#discussion_r435917242", "bodyText": "I'm not sure whether that makes sense because currently we don't have a use case to involve a VARCHAR(0).\nEven for CHAR, Flink also has some logic to verify the length is > 0. So having this CHAR(0) as UDF parameter type seems a little inconsistent in the first place.", "author": "lirui-apache", "createdAt": "2020-06-05T13:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1NDY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQzMzIxNw==", "url": "https://github.com/apache/flink/pull/12403#discussion_r436433217", "bodyText": "No, you can not have this assumption.\nMaybe there is a VarChar with zero precision in somewhere.", "author": "JingsongLi", "createdAt": "2020-06-08T02:38:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1NDY0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "db8db54bfdc1802d744e906ecdaee5d4a0d3ad36", "chunk": "diff --git a/flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTypeUtil.java b/flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTypeUtil.java\nindex 069f8a67a8..0678c17e84 100644\n--- a/flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTypeUtil.java\n+++ b/flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTypeUtil.java\n\n@@ -182,14 +182,14 @@ public class HiveTypeUtil {\n \n \t\t@Override\n \t\tpublic TypeInfo visit(CharType charType) {\n-\t\t\t// Flink treats string literal UDF parameters as CHAR. Such types may have precisions not supported by\n-\t\t\t// Hive, e.g. CHAR(0). Promote it to STRING in such case if we're told not to check precision.\n+\t\t\t// Flink and Hive have different length limit for CHAR. Promote it to STRING if it exceeds the limits of\n+\t\t\t// Hive and we're told not to check precision. This can be useful when calling Hive UDF to process data.\n \t\t\tif (charType.getLength() > HiveChar.MAX_CHAR_LENGTH || charType.getLength() < 1) {\n \t\t\t\tif (checkPrecision) {\n \t\t\t\t\tthrow new CatalogException(\n \t\t\t\t\t\t\tString.format(\"HiveCatalog doesn't support char type with length of '%d'. \" +\n-\t\t\t\t\t\t\t\t\t\t\t\"The maximum length is %d\",\n-\t\t\t\t\t\t\t\t\tcharType.getLength(), HiveChar.MAX_CHAR_LENGTH));\n+\t\t\t\t\t\t\t\t\t\t\t\"The supported length is [%d, %d]\",\n+\t\t\t\t\t\t\t\t\tcharType.getLength(), 1, HiveChar.MAX_CHAR_LENGTH));\n \t\t\t\t} else {\n \t\t\t\t\treturn TypeInfoFactory.stringTypeInfo;\n \t\t\t\t}\n"}}, {"oid": "db8db54bfdc1802d744e906ecdaee5d4a0d3ad36", "url": "https://github.com/apache/flink/commit/db8db54bfdc1802d744e906ecdaee5d4a0d3ad36", "message": "add changes for varchar", "committedDate": "2020-06-08T03:48:18Z", "type": "forcePushed"}, {"oid": "f1843c0a3c5e25b09936b026b863a5de711f1df4", "url": "https://github.com/apache/flink/commit/f1843c0a3c5e25b09936b026b863a5de711f1df4", "message": "[FLINK-18030][hive] Hive UDF doesn't accept empty string literal parameters", "committedDate": "2020-06-09T02:27:37Z", "type": "commit"}, {"oid": "131754a31058bdc732ca114172dd1c31847429d5", "url": "https://github.com/apache/flink/commit/131754a31058bdc732ca114172dd1c31847429d5", "message": "add changes for varchar", "committedDate": "2020-06-09T02:27:37Z", "type": "commit"}, {"oid": "aaecb4e18e9c83f0aad76ab01a38a7ac60b81a88", "url": "https://github.com/apache/flink/commit/aaecb4e18e9c83f0aad76ab01a38a7ac60b81a88", "message": "fix tests", "committedDate": "2020-06-09T02:50:04Z", "type": "commit"}, {"oid": "aaecb4e18e9c83f0aad76ab01a38a7ac60b81a88", "url": "https://github.com/apache/flink/commit/aaecb4e18e9c83f0aad76ab01a38a7ac60b81a88", "message": "fix tests", "committedDate": "2020-06-09T02:50:04Z", "type": "forcePushed"}]}