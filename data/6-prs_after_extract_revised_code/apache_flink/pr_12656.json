{"pr_number": 12656, "pr_title": "[FLINK-17666][table-planner-blink] Insert into partitioned table can \u2026", "pr_createdAt": "2020-06-15T12:03:39Z", "pr_url": "https://github.com/apache/flink/pull/12656", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEzNTQ4OQ==", "url": "https://github.com/apache/flink/pull/12656#discussion_r440135489", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\thiveShell.execute(\"create table src (x int,y string)\");\n          \n          \n            \n            \t\thiveShell.insertInto(\"default\", \"src\").addRow(1, \"a\").commit();\n          \n          \n            \n            \t\thiveShell.execute(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n          \n          \n            \n            \t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n          \n          \n            \n            \t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n          \n          \n            \n            \t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n          \n          \n            \n            \t\tHiveTestUtils.createTextTableInserter(hiveShell, \"default\", \"src\").addRow(new Object[]{1, \"a\"}).commit();\n          \n          \n            \n            \t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");", "author": "lirui-apache", "createdAt": "2020-06-15T12:20:16Z", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java", "diffHunk": "@@ -669,6 +669,18 @@ public void testNonExistingPartitionFolder() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testInsertPartitionWithStarSource() throws Exception {\n+\t\thiveShell.execute(\"create table src (x int,y string)\");\n+\t\thiveShell.insertInto(\"default\", \"src\").addRow(1, \"a\").commit();\n+\t\thiveShell.execute(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n+\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();", "originalCommit": "e35de4a21f5cf007341a71a1461b796b286c9948", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8cec6fea4e3f8fe1edab5aab8484b8d315feae11", "chunk": "diff --git a/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java b/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java\nindex cc19b2becc..f2a8108a2f 100644\n--- a/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java\n+++ b/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java\n\n@@ -671,14 +671,21 @@ public class TableEnvHiveConnectorITCase {\n \n \t@Test\n \tpublic void testInsertPartitionWithStarSource() throws Exception {\n-\t\thiveShell.execute(\"create table src (x int,y string)\");\n-\t\thiveShell.insertInto(\"default\", \"src\").addRow(1, \"a\").commit();\n-\t\thiveShell.execute(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n \t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n+\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n+\t\tHiveTestUtils.createTextTableInserter(\n+\t\t\t\thiveShell,\n+\t\t\t\t\"default\",\n+\t\t\t\t\"src\")\n+\t\t\t\t.addRow(new Object[]{1, \"a\"})\n+\t\t\t\t.commit();\n+\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n \t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n \t\t\t\t\"insert into dest partition (p1=1) select * from src\");\n \t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n \t\tassertEquals(\"[1,1,a]\", results.toString());\n+\t\ttableEnv.executeSql(\"drop table if exists src\");\n+\t\ttableEnv.executeSql(\"drop table if exists dest\");\n \t}\n \n \tprivate TableEnvironment getTableEnvWithHiveCatalog() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEzNjI2Ng==", "url": "https://github.com/apache/flink/pull/12656#discussion_r440136266", "bodyText": "Need to drop table src and dest after the test, because the catalog is reused across all test cases. And you can just use tableEnv to execute DDLs -- it's using the hive dialect", "author": "lirui-apache", "createdAt": "2020-06-15T12:21:44Z", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java", "diffHunk": "@@ -669,6 +669,18 @@ public void testNonExistingPartitionFolder() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testInsertPartitionWithStarSource() throws Exception {\n+\t\thiveShell.execute(\"create table src (x int,y string)\");\n+\t\thiveShell.insertInto(\"default\", \"src\").addRow(1, \"a\").commit();\n+\t\thiveShell.execute(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n+\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n+\t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n+\t\t\t\t\"insert into dest partition (p1=1) select * from src\");\n+\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n+\t\tassertEquals(\"[1,1,a]\", results.toString());", "originalCommit": "e35de4a21f5cf007341a71a1461b796b286c9948", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8cec6fea4e3f8fe1edab5aab8484b8d315feae11", "chunk": "diff --git a/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java b/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java\nindex cc19b2becc..f2a8108a2f 100644\n--- a/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java\n+++ b/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java\n\n@@ -671,14 +671,21 @@ public class TableEnvHiveConnectorITCase {\n \n \t@Test\n \tpublic void testInsertPartitionWithStarSource() throws Exception {\n-\t\thiveShell.execute(\"create table src (x int,y string)\");\n-\t\thiveShell.insertInto(\"default\", \"src\").addRow(1, \"a\").commit();\n-\t\thiveShell.execute(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n \t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n+\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n+\t\tHiveTestUtils.createTextTableInserter(\n+\t\t\t\thiveShell,\n+\t\t\t\t\"default\",\n+\t\t\t\t\"src\")\n+\t\t\t\t.addRow(new Object[]{1, \"a\"})\n+\t\t\t\t.commit();\n+\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n \t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n \t\t\t\t\"insert into dest partition (p1=1) select * from src\");\n \t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n \t\tassertEquals(\"[1,1,a]\", results.toString());\n+\t\ttableEnv.executeSql(\"drop table if exists src\");\n+\t\ttableEnv.executeSql(\"drop table if exists dest\");\n \t}\n \n \tprivate TableEnvironment getTableEnvWithHiveCatalog() {\n"}}, {"oid": "8cec6fea4e3f8fe1edab5aab8484b8d315feae11", "url": "https://github.com/apache/flink/commit/8cec6fea4e3f8fe1edab5aab8484b8d315feae11", "message": "[FLINK-17666][table-planner-blink] Insert into partitioned table can fail with select *", "committedDate": "2020-06-16T03:56:31Z", "type": "commit"}, {"oid": "8cec6fea4e3f8fe1edab5aab8484b8d315feae11", "url": "https://github.com/apache/flink/commit/8cec6fea4e3f8fe1edab5aab8484b8d315feae11", "message": "[FLINK-17666][table-planner-blink] Insert into partitioned table can fail with select *", "committedDate": "2020-06-16T03:56:31Z", "type": "forcePushed"}]}