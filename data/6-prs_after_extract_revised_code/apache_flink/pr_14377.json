{"pr_number": 14377, "pr_title": "[FLINK-19905][Connector][jdbc] The Jdbc-connector's 'lookup.max-retries' option initial value is 1 in JdbcLookupFunction", "pr_createdAt": "2020-12-14T09:03:50Z", "pr_url": "https://github.com/apache/flink/pull/14377", "timeline": [{"oid": "b6e4542c77e26c1b8fc97321a78caa0b1f68b3d7", "url": "https://github.com/apache/flink/commit/b6e4542c77e26c1b8fc97321a78caa0b1f68b3d7", "message": "[FLINK-19905][Connector][jdbc] The Jdbc-connector's 'lookup.max-retries' option initial value is 1 in JdbcLookupFunction", "committedDate": "2020-12-14T08:54:30Z", "type": "commit"}, {"oid": "c0e212ed51c103765ada525c54ba3d83614f929a", "url": "https://github.com/apache/flink/commit/c0e212ed51c103765ada525c54ba3d83614f929a", "message": "[FLINK-19691][Connector][jdbc] Expose `CONNECTION_CHECK_TIMEOUT_SECONDS` as a configurable option in Jdbc connector", "committedDate": "2020-12-17T12:40:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NDk5NQ==", "url": "https://github.com/apache/flink/pull/14377#discussion_r545144995", "bodyText": "Space is needed before 0.", "author": "wangxlong", "createdAt": "2020-12-17T14:46:20Z", "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/table/descriptors/JdbcValidator.java", "diffHunk": "@@ -115,7 +115,7 @@ private void validateReadProperties(DescriptorProperties properties) {\n \tprivate void validateLookupProperties(DescriptorProperties properties) {\n \t\tproperties.validateLong(CONNECTOR_LOOKUP_CACHE_MAX_ROWS, true);\n \t\tproperties.validateDuration(CONNECTOR_LOOKUP_CACHE_TTL, true, 1);\n-\t\tproperties.validateInt(CONNECTOR_LOOKUP_MAX_RETRIES, true);\n+\t\tproperties.validateInt(CONNECTOR_LOOKUP_MAX_RETRIES, true,0);", "originalCommit": "c0e212ed51c103765ada525c54ba3d83614f929a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ffcb3c699eb099caccb20aa38f372557e8a59306", "chunk": "diff --git a/flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/table/descriptors/JdbcValidator.java b/flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/table/descriptors/JdbcValidator.java\nindex e1c682855c2..e80a5a7fd91 100644\n--- a/flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/table/descriptors/JdbcValidator.java\n+++ b/flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/table/descriptors/JdbcValidator.java\n\n@@ -115,7 +115,7 @@ public class JdbcValidator extends ConnectorDescriptorValidator {\n \tprivate void validateLookupProperties(DescriptorProperties properties) {\n \t\tproperties.validateLong(CONNECTOR_LOOKUP_CACHE_MAX_ROWS, true);\n \t\tproperties.validateDuration(CONNECTOR_LOOKUP_CACHE_TTL, true, 1);\n-\t\tproperties.validateInt(CONNECTOR_LOOKUP_MAX_RETRIES, true,0);\n+\t\tproperties.validateInt(CONNECTOR_LOOKUP_MAX_RETRIES, true, 0);\n \n \t\tcheckAllOrNone(properties, new String[]{\n \t\t\tCONNECTOR_LOOKUP_CACHE_MAX_ROWS,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0OTM2Ng==", "url": "https://github.com/apache/flink/pull/14377#discussion_r545149366", "bodyText": "// lookup max-retries property less than zero", "author": "wangxlong", "createdAt": "2020-12-17T14:51:45Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java", "diffHunk": "@@ -255,6 +255,17 @@ public void testJdbcValidation() {\n \t\t\tfail(\"exception expected\");\n \t\t} catch (IllegalArgumentException ignored) {\n \t\t}\n+\n+\t\t// lookup max-retries properties not complete", "originalCommit": "c0e212ed51c103765ada525c54ba3d83614f929a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY5Mzg3OQ==", "url": "https://github.com/apache/flink/pull/14377#discussion_r545693879", "bodyText": "Please fix the comment", "author": "wuchong", "createdAt": "2020-12-18T09:15:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0OTM2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ffcb3c699eb099caccb20aa38f372557e8a59306", "chunk": "diff --git a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java\nindex 2c217d6e665..0f9ff4d35eb 100644\n--- a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java\n+++ b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java\n\n@@ -259,7 +259,7 @@ public class JdbcTableSourceSinkFactoryTest {\n \t\t// lookup max-retries properties not complete\n \t\ttry {\n \t\t\tMap<String, String> properties = getBasicProperties();\n-\t\t\tproperties.put(\"connector.lookup.max-retries\", \"-1\");\n+\t\t\tproperties.put(\"connector.lookup.max-retries\", \"0\");\n \n \t\t\tTableFactoryService.find(StreamTableSourceFactory.class, properties)\n \t\t\t\t.createStreamTableSource(properties);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE1MDExNA==", "url": "https://github.com/apache/flink/pull/14377#discussion_r545150114", "bodyText": "Would be better as following,\n\nJdbcLookupOptions.Builder lookupOptionsBuilder = JdbcLookupOptions.builder().setMaxRetryTimes(0);\nif (useCache) {\nlookupOptionsBuilder.setCacheMaxSize(1000).setCacheExpireMs(1000 * 1000);\n}\nbuilder.setLookupOptions(lookupOptionsBuilder.build());", "author": "wangxlong", "createdAt": "2020-12-17T14:52:42Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcLookupTableITCase.java", "diffHunk": "@@ -120,7 +120,7 @@ public void testLookup() throws Exception {\n \t\t\t\t.build());\n \t\tif (useCache) {", "originalCommit": "c0e212ed51c103765ada525c54ba3d83614f929a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU4NDEwMQ==", "url": "https://github.com/apache/flink/pull/14377#discussion_r545584101", "bodyText": "Thank you for your careful review, I have fixed the code", "author": "xiaoHoly", "createdAt": "2020-12-18T05:38:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE1MDExNA=="}], "type": "inlineReview", "revised_code": {"commit": "ffcb3c699eb099caccb20aa38f372557e8a59306", "chunk": "diff --git a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcLookupTableITCase.java b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcLookupTableITCase.java\nindex d3f86266d94..3d91fbbc223 100644\n--- a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcLookupTableITCase.java\n+++ b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcLookupTableITCase.java\n\n@@ -118,10 +118,11 @@ public class JdbcLookupTableITCase extends JdbcLookupTestBase {\n \t\t\t\tnew String[]{\"id1\", \"comment1\", \"comment2\", \"id2\"},\n \t\t\t\tnew DataType[]{DataTypes.INT(), DataTypes.STRING(), DataTypes.STRING(), DataTypes.STRING()})\n \t\t\t\t.build());\n+\t\tJdbcLookupOptions.Builder lookupOptionsBuilder = JdbcLookupOptions.builder().setMaxRetryTimes(0);\n \t\tif (useCache) {\n-\t\t\tbuilder.setLookupOptions(JdbcLookupOptions.builder()\n-\t\t\t\t.setCacheMaxSize(1000).setCacheExpireMs(1000 * 1000).setMaxRetryTimes(0).build());\n+\t\t\tlookupOptionsBuilder.setCacheMaxSize(1000).setCacheExpireMs(1000 * 1000);\n \t\t}\n+\t\tbuilder.setLookupOptions(lookupOptionsBuilder.build());\n \t\ttEnv.registerFunction(\"jdbcLookup\",\n \t\t\tbuilder.build().getLookupFunction(t.getSchema().getFieldNames()));\n \n"}}, {"oid": "ffcb3c699eb099caccb20aa38f372557e8a59306", "url": "https://github.com/apache/flink/commit/ffcb3c699eb099caccb20aa38f372557e8a59306", "message": "[FLINK-19905][Connector][jdbc] The Jdbc-connector's 'lookup.max-retries' option initial value is 1 in JdbcLookupFunction", "committedDate": "2020-12-18T05:32:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY5Njc2Ng==", "url": "https://github.com/apache/flink/pull/14377#discussion_r545696766", "bodyText": "Zero is a valid value, so there should no exception be thrown here. I think what we want to test is -1 here.", "author": "wuchong", "createdAt": "2020-12-18T09:18:36Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java", "diffHunk": "@@ -255,6 +255,17 @@ public void testJdbcValidation() {\n \t\t\tfail(\"exception expected\");\n \t\t} catch (IllegalArgumentException ignored) {\n \t\t}\n+\n+\t\t// lookup max-retries properties not complete\n+\t\ttry {\n+\t\t\tMap<String, String> properties = getBasicProperties();\n+\t\t\tproperties.put(\"connector.lookup.max-retries\", \"0\");", "originalCommit": "ffcb3c699eb099caccb20aa38f372557e8a59306", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba3f9a13b98b5ddaee1dcf142ee3cf00322fe5c0", "chunk": "diff --git a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java\nindex 0f9ff4d35eb..b4af2b12f69 100644\n--- a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java\n+++ b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java\n\n@@ -256,15 +257,15 @@ public class JdbcTableSourceSinkFactoryTest {\n \t\t} catch (IllegalArgumentException ignored) {\n \t\t}\n \n-\t\t// lookup max-retries properties not complete\n+\t\t// lookup max-retries property less than zero\n \t\ttry {\n \t\t\tMap<String, String> properties = getBasicProperties();\n-\t\t\tproperties.put(\"connector.lookup.max-retries\", \"0\");\n+\t\t\tproperties.put(\"connector.lookup.max-retries\", \"-1\");\n \n \t\t\tTableFactoryService.find(StreamTableSourceFactory.class, properties)\n \t\t\t\t.createStreamTableSource(properties);\n \t\t\tfail(\"exception expected\");\n-\t\t} catch (Throwable ignored) {\n+\t\t} catch (ValidationException ignored) {\n \t\t}\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY5ODA0Mw==", "url": "https://github.com/apache/flink/pull/14377#discussion_r545698043", "bodyText": "This ignores the exception from fail(\"exception expected\"), we should catch the specific exception ValidationException here.", "author": "wuchong", "createdAt": "2020-12-18T09:19:47Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java", "diffHunk": "@@ -255,6 +255,17 @@ public void testJdbcValidation() {\n \t\t\tfail(\"exception expected\");\n \t\t} catch (IllegalArgumentException ignored) {\n \t\t}\n+\n+\t\t// lookup max-retries properties not complete\n+\t\ttry {\n+\t\t\tMap<String, String> properties = getBasicProperties();\n+\t\t\tproperties.put(\"connector.lookup.max-retries\", \"0\");\n+\n+\t\t\tTableFactoryService.find(StreamTableSourceFactory.class, properties)\n+\t\t\t\t.createStreamTableSource(properties);\n+\t\t\tfail(\"exception expected\");\n+\t\t} catch (Throwable ignored) {", "originalCommit": "ffcb3c699eb099caccb20aa38f372557e8a59306", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba3f9a13b98b5ddaee1dcf142ee3cf00322fe5c0", "chunk": "diff --git a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java\nindex 0f9ff4d35eb..b4af2b12f69 100644\n--- a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java\n+++ b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceSinkFactoryTest.java\n\n@@ -256,15 +257,15 @@ public class JdbcTableSourceSinkFactoryTest {\n \t\t} catch (IllegalArgumentException ignored) {\n \t\t}\n \n-\t\t// lookup max-retries properties not complete\n+\t\t// lookup max-retries property less than zero\n \t\ttry {\n \t\t\tMap<String, String> properties = getBasicProperties();\n-\t\t\tproperties.put(\"connector.lookup.max-retries\", \"0\");\n+\t\t\tproperties.put(\"connector.lookup.max-retries\", \"-1\");\n \n \t\t\tTableFactoryService.find(StreamTableSourceFactory.class, properties)\n \t\t\t\t.createStreamTableSource(properties);\n \t\t\tfail(\"exception expected\");\n-\t\t} catch (Throwable ignored) {\n+\t\t} catch (ValidationException ignored) {\n \t\t}\n \t}\n \n"}}, {"oid": "ba3f9a13b98b5ddaee1dcf142ee3cf00322fe5c0", "url": "https://github.com/apache/flink/commit/ba3f9a13b98b5ddaee1dcf142ee3cf00322fe5c0", "message": "[FLINK-19905][Connector][jdbc] The Jdbc-connector's 'lookup.max-retries' option initial value is 1 in JdbcLookupFunction", "committedDate": "2020-12-18T16:38:16Z", "type": "commit"}]}