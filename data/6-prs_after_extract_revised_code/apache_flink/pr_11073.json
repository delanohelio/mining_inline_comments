{"pr_number": 11073, "pr_title": "[FLINK-15672][build] Migrate to log4j2 ", "pr_createdAt": "2020-02-12T15:49:25Z", "pr_url": "https://github.com/apache/flink/pull/11073", "timeline": [{"oid": "29034cb85769cd69b09b121c4b88f54b4483aafe", "url": "https://github.com/apache/flink/commit/29034cb85769cd69b09b121c4b88f54b4483aafe", "message": "[FLINK-15672][build][tests] Migrate test log4j configurations to log4j2", "committedDate": "2020-02-12T15:50:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE1NTA4MQ==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381155081", "bodyText": "something unfinished?", "author": "azagrebin", "createdAt": "2020-02-19T09:01:34Z", "path": "flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.testutils.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.Appender;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.appender.AbstractAppender;\n+import org.apache.logging.log4j.core.config.AppenderRef;\n+import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.junit.rules.ExternalResource;\n+\n+import javax.annotation.concurrent.GuardedBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Utility for auditing logged messages.\n+ *\n+ * <p>When using this class, keep", "originalCommit": "d2aa679446b439e7a296418159afcc97e64feefb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a214fcca8d4557d2e4962a713cd8f2d9caf1d5cd", "chunk": "diff --git a/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java b/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java\nindex d818f2c10bf..a48af626fcd 100644\n--- a/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java\n+++ b/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java\n\n@@ -27,16 +27,13 @@ import org.apache.logging.log4j.core.config.AppenderRef;\n import org.apache.logging.log4j.core.config.LoggerConfig;\n import org.junit.rules.ExternalResource;\n \n-import javax.annotation.concurrent.GuardedBy;\n-\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n \n /**\n  * Utility for auditing logged messages.\n  *\n- * <p>When using this class, keep\n- *\n  * <p>Implementation note: Make sure to not expose log4j dependencies in the interface of this class to ease updates\n  * in logging infrastructure.\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE1Nzk1Nw==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381157957", "bodyText": "any particular reason to use org.slf4j.event.Level here instead of org.apache.logging.log4j.Level?", "author": "azagrebin", "createdAt": "2020-02-19T09:07:11Z", "path": "flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.testutils.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.Appender;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.appender.AbstractAppender;\n+import org.apache.logging.log4j.core.config.AppenderRef;\n+import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.junit.rules.ExternalResource;\n+\n+import javax.annotation.concurrent.GuardedBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Utility for auditing logged messages.\n+ *\n+ * <p>When using this class, keep\n+ *\n+ * <p>Implementation note: Make sure to not expose log4j dependencies in the interface of this class to ease updates\n+ * in logging infrastructure.\n+ */\n+public class TestLoggerResource extends ExternalResource {\n+\tprivate static final LoggerContext LOGGER_CONTEXT = (LoggerContext) LogManager.getContext(false);\n+\n+\tprivate final String loggerName;\n+\tprivate final org.slf4j.event.Level level;\n+\n+\tprivate final Object lock = new Object();\n+\n+\t@GuardedBy(\"lock\")\n+\tprivate List<String> loggingEvents;\n+\n+\tpublic TestLoggerResource(Class<?> clazz, org.slf4j.event.Level level) {", "originalCommit": "d2aa679446b439e7a296418159afcc97e64feefb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyODg5Mw==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381328893", "bodyText": "yes, to ensure we don't spread log4j compile dependencies to other modules.", "author": "zentol", "createdAt": "2020-02-19T14:34:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE1Nzk1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a214fcca8d4557d2e4962a713cd8f2d9caf1d5cd", "chunk": "diff --git a/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java b/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java\nindex d818f2c10bf..a48af626fcd 100644\n--- a/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java\n+++ b/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java\n\n@@ -27,16 +27,13 @@ import org.apache.logging.log4j.core.config.AppenderRef;\n import org.apache.logging.log4j.core.config.LoggerConfig;\n import org.junit.rules.ExternalResource;\n \n-import javax.annotation.concurrent.GuardedBy;\n-\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n \n /**\n  * Utility for auditing logged messages.\n  *\n- * <p>When using this class, keep\n- *\n  * <p>Implementation note: Make sure to not expose log4j dependencies in the interface of this class to ease updates\n  * in logging infrastructure.\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2NjQ2NQ==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381166465", "bodyText": "maybe then just e.g. a ConcurrentLinkedQueue?", "author": "azagrebin", "createdAt": "2020-02-19T09:23:37Z", "path": "flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.testutils.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.Appender;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.appender.AbstractAppender;\n+import org.apache.logging.log4j.core.config.AppenderRef;\n+import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.junit.rules.ExternalResource;\n+\n+import javax.annotation.concurrent.GuardedBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Utility for auditing logged messages.\n+ *\n+ * <p>When using this class, keep\n+ *\n+ * <p>Implementation note: Make sure to not expose log4j dependencies in the interface of this class to ease updates\n+ * in logging infrastructure.\n+ */\n+public class TestLoggerResource extends ExternalResource {\n+\tprivate static final LoggerContext LOGGER_CONTEXT = (LoggerContext) LogManager.getContext(false);\n+\n+\tprivate final String loggerName;\n+\tprivate final org.slf4j.event.Level level;\n+\n+\tprivate final Object lock = new Object();\n+\n+\t@GuardedBy(\"lock\")\n+\tprivate List<String> loggingEvents;", "originalCommit": "d2aa679446b439e7a296418159afcc97e64feefb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyOTg5NA==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381329894", "bodyText": "I ran into weird consistency issues on the way and this was the first solution that worked. I'll try ConcurrentLinkedQueue again, maybe the cause was something else.", "author": "zentol", "createdAt": "2020-02-19T14:35:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2NjQ2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a214fcca8d4557d2e4962a713cd8f2d9caf1d5cd", "chunk": "diff --git a/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java b/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java\nindex d818f2c10bf..a48af626fcd 100644\n--- a/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java\n+++ b/flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java\n\n@@ -27,16 +27,13 @@ import org.apache.logging.log4j.core.config.AppenderRef;\n import org.apache.logging.log4j.core.config.LoggerConfig;\n import org.junit.rules.ExternalResource;\n \n-import javax.annotation.concurrent.GuardedBy;\n-\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n \n /**\n  * Utility for auditing logged messages.\n  *\n- * <p>When using this class, keep\n- *\n  * <p>Implementation note: Make sure to not expose log4j dependencies in the interface of this class to ease updates\n  * in logging infrastructure.\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE3MzUxMA==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381173510", "bodyText": "do we want to keep this log message for testPassedFromLog4j = true?", "author": "azagrebin", "createdAt": "2020-02-19T09:35:37Z", "path": "flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java", "diffHunk": "@@ -816,14 +816,7 @@ protected void runWithArgs(String[] args, String terminateAfterString, String[]\n \t\t\t\t}\n \t\t\t}\n \t\t\t// check output for the expected terminateAfterString.\n-\t\t\tif (checkLogForTerminateString) {\n-\t\t\t\tLoggingEvent matchedEvent = UtilsTest.getEventContainingString(terminateAfterString);\n-\t\t\t\tif (matchedEvent != null) {\n-\t\t\t\t\ttestPassedFromLog4j = true;\n-\t\t\t\t\tLOG.info(\"Found expected output in logging event {}\", matchedEvent);", "originalCommit": "d2aa679446b439e7a296418159afcc97e64feefb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5MDAzNg==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381390036", "bodyText": "it's a bit of a pain to do; I'll retain it but better take another look.", "author": "zentol", "createdAt": "2020-02-19T16:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE3MzUxMA=="}], "type": "inlineReview", "revised_code": {"commit": "a214fcca8d4557d2e4962a713cd8f2d9caf1d5cd", "chunk": "diff --git a/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java b/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java\nindex 7f87685b31f..b1bb1bbc324 100644\n--- a/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java\n+++ b/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java\n\n@@ -816,7 +817,12 @@ public abstract class YarnTestBase extends TestLogger {\n \t\t\t\t}\n \t\t\t}\n \t\t\t// check output for the expected terminateAfterString.\n-\t\t\ttestPassedFromLog4j = logMessageSupplier.get().stream().anyMatch(s -> s.contains(terminateAfterString));\n+\t\t\ttestPassedFromLog4j = logMessageSupplier.get().stream()\n+\t\t\t\t.filter(s -> s.contains(terminateAfterString))\n+\t\t\t\t.limit(1)\n+\t\t\t\t.peek(matchedEvent -> LOG.info(\"Found expected output in logging event {}\", matchedEvent))\n+\t\t\t\t.findAny()\n+\t\t\t\t.isPresent();\n \n \t\t\tif (outContentString.contains(terminateAfterString) || errContentString.contains(terminateAfterString) || testPassedFromLog4j) {\n \t\t\t\texpectedStringSeen = true;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE3NTQ2NA==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381175464", "bodyText": "CliFrontend - > FlinkYarnSessionCli?\nNot sure whether we need this though at all", "author": "azagrebin", "createdAt": "2020-02-19T09:38:52Z", "path": "flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOITCase.java", "diffHunk": "@@ -60,6 +64,12 @@\n public class YARNSessionFIFOITCase extends YarnTestBase {\n \tprivate static final Logger LOG = LoggerFactory.getLogger(YARNSessionFIFOITCase.class);\n \n+\t@Rule\n+\tpublic final TestLoggerResource cliTestLoggerResource = new TestLoggerResource(CliFrontend.class, Level.INFO);", "originalCommit": "d2aa679446b439e7a296418159afcc97e64feefb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzMTI5MA==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381331290", "bodyText": "probably a copy&paste error; should only required in the YARNSessionCapacitySchedulerITCase", "author": "zentol", "createdAt": "2020-02-19T14:37:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE3NTQ2NA=="}], "type": "inlineReview", "revised_code": {"commit": "a214fcca8d4557d2e4962a713cd8f2d9caf1d5cd", "chunk": "diff --git a/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOITCase.java b/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOITCase.java\nindex 3654257f982..056182bb7c8 100644\n--- a/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOITCase.java\n+++ b/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOITCase.java\n\n@@ -64,9 +63,6 @@ import static org.junit.Assert.assertThat;\n public class YARNSessionFIFOITCase extends YarnTestBase {\n \tprivate static final Logger LOG = LoggerFactory.getLogger(YARNSessionFIFOITCase.class);\n \n-\t@Rule\n-\tpublic final TestLoggerResource cliTestLoggerResource = new TestLoggerResource(CliFrontend.class, Level.INFO);\n-\n \t@Rule\n \tpublic final TestLoggerResource yarTestLoggerResource = new TestLoggerResource(YarnClusterDescriptor.class, Level.WARN);\n \n"}}, {"oid": "a214fcca8d4557d2e4962a713cd8f2d9caf1d5cd", "url": "https://github.com/apache/flink/commit/a214fcca8d4557d2e4962a713cd8f2d9caf1d5cd", "message": "remove obsolete provider file", "committedDate": "2020-02-19T16:41:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNjQ1Mg==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381906452", "bodyText": "will it not throw if the stream is empty after the filtering?", "author": "azagrebin", "createdAt": "2020-02-20T10:18:44Z", "path": "flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java", "diffHunk": "@@ -817,7 +817,12 @@ protected void runWithArgs(String[] args, String terminateAfterString, String[]\n \t\t\t\t}\n \t\t\t}\n \t\t\t// check output for the expected terminateAfterString.\n-\t\t\ttestPassedFromLog4j = logMessageSupplier.get().stream().anyMatch(s -> s.contains(terminateAfterString));\n+\t\t\ttestPassedFromLog4j = logMessageSupplier.get().stream()\n+\t\t\t\t.filter(s -> s.contains(terminateAfterString))\n+\t\t\t\t.limit(1)", "originalCommit": "3e8fd83e7450b1b408661d7d259a47cd83473ce1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwODQxOA==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381908418", "bodyText": "maybe just good old loop :)", "author": "azagrebin", "createdAt": "2020-02-20T10:22:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNjQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMTM0MA==", "url": "https://github.com/apache/flink/pull/11073#discussion_r381911340", "bodyText": "I see no such behavior documented in the javadocs, it just limits the max size. Minimum size should be irrelevant.", "author": "zentol", "createdAt": "2020-02-20T10:27:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNjQ1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "61bb4cb16196729d63bf44071bb2aef63a8b5457", "chunk": "diff --git a/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java b/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java\nindex b1bb1bbc324..d8b5a7471e3 100644\n--- a/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java\n+++ b/flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java\n\n@@ -816,13 +858,13 @@ public abstract class YarnTestBase extends TestLogger {\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n-\t\t\t// check output for the expected terminateAfterString.\n-\t\t\ttestPassedFromLog4j = logMessageSupplier.get().stream()\n-\t\t\t\t.filter(s -> s.contains(terminateAfterString))\n-\t\t\t\t.limit(1)\n-\t\t\t\t.peek(matchedEvent -> LOG.info(\"Found expected output in logging event {}\", matchedEvent))\n-\t\t\t\t.findAny()\n-\t\t\t\t.isPresent();\n+\n+\t\t\tfor (String logMessage : logMessageSupplier.get()) {\n+\t\t\t\tif (logMessage.contains(terminateAfterString)) {\n+\t\t\t\t\ttestPassedFromLog4j = true;\n+\t\t\t\t\tLOG.info(\"Found expected output in logging event {}\", logMessage);\n+\t\t\t\t}\n+\t\t\t}\n \n \t\t\tif (outContentString.contains(terminateAfterString) || errContentString.contains(terminateAfterString) || testPassedFromLog4j) {\n \t\t\t\texpectedStringSeen = true;\n"}}, {"oid": "61bb4cb16196729d63bf44071bb2aef63a8b5457", "url": "https://github.com/apache/flink/commit/61bb4cb16196729d63bf44071bb2aef63a8b5457", "message": "[FLINK-15672][build] Migrate to log4j2", "committedDate": "2020-02-21T10:37:18Z", "type": "commit"}, {"oid": "f911d085f42f3077eb8742ea54577a54089f2222", "url": "https://github.com/apache/flink/commit/f911d085f42f3077eb8742ea54577a54089f2222", "message": "[FLINK-15672][build] Migrate production log4j configuration to log4j2", "committedDate": "2020-02-21T10:37:18Z", "type": "commit"}, {"oid": "c0fa7ff0de573f9be8aaebe6791dbc5b9dc0fb74", "url": "https://github.com/apache/flink/commit/c0fa7ff0de573f9be8aaebe6791dbc5b9dc0fb74", "message": "[FLINK-15672][build][tests] Migrate test log4j configurations to log4j2", "committedDate": "2020-02-21T10:37:19Z", "type": "commit"}, {"oid": "c0fa7ff0de573f9be8aaebe6791dbc5b9dc0fb74", "url": "https://github.com/apache/flink/commit/c0fa7ff0de573f9be8aaebe6791dbc5b9dc0fb74", "message": "[FLINK-15672][build][tests] Migrate test log4j configurations to log4j2", "committedDate": "2020-02-21T10:37:19Z", "type": "forcePushed"}]}