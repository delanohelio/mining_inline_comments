{"pr_number": 13679, "pr_title": "[FLINK-19695][table-runtime-blink] Fix ClassCastException when writing table with rowtime attribute", "pr_createdAt": "2020-10-19T04:08:35Z", "pr_url": "https://github.com/apache/flink/pull/13679", "timeline": [{"oid": "94103469ab37ce717e0a3629f28055035124a12c", "url": "https://github.com/apache/flink/commit/94103469ab37ce717e0a3629f28055035124a12c", "message": "[FLINK-19695][table-runtime-blink] Fix ClassCastException when writing table with rowtime attribute", "committedDate": "2020-10-19T04:04:58Z", "type": "commit"}, {"oid": "43189cea09d80f8e3c6bc5d9c8a54c51b2c87915", "url": "https://github.com/apache/flink/commit/43189cea09d80f8e3c6bc5d9c8a54c51b2c87915", "message": "add an additional test for TUMBLE_ROWTIME", "committedDate": "2020-10-19T08:43:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYzMjMyNQ==", "url": "https://github.com/apache/flink/pull/13679#discussion_r507632325", "bodyText": "Also use TableException ?", "author": "leonardBang", "createdAt": "2020-10-19T10:15:58Z", "path": "flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/factories/TestValuesTableFactory.java", "diffHunk": "@@ -315,15 +320,28 @@ public DynamicTableSource createDynamicTableSource(Context context) {\n \tpublic DynamicTableSink createDynamicTableSink(Context context) {\n \t\tFactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n \t\thelper.validate();\n+\t\tString sinkClass = helper.getOptions().get(TABLE_SINK_CLASS);\n+\n \t\tboolean isInsertOnly = helper.getOptions().get(SINK_INSERT_ONLY);\n \t\tString runtimeSink = helper.getOptions().get(RUNTIME_SINK);\n \t\tint expectedNum = helper.getOptions().get(SINK_EXPECTED_MESSAGES_NUM);\n \t\tTableSchema schema = context.getCatalogTable().getSchema();\n-\t\treturn new TestValuesTableSink(\n-\t\t\tschema,\n-\t\t\tcontext.getObjectIdentifier().getObjectName(),\n-\t\t\tisInsertOnly,\n-\t\t\truntimeSink, expectedNum);\n+\t\tif (sinkClass.equals(\"DEFAULT\")) {\n+\t\t\treturn new TestValuesTableSink(\n+\t\t\t\tschema,\n+\t\t\t\tcontext.getObjectIdentifier().getObjectName(),\n+\t\t\t\tisInsertOnly,\n+\t\t\t\truntimeSink, expectedNum);\n+\t\t} else {\n+\t\t\ttry {\n+\t\t\t\treturn InstantiationUtil.instantiate(\n+\t\t\t\t\tsinkClass,\n+\t\t\t\t\tDynamicTableSink.class,\n+\t\t\t\t\tThread.currentThread().getContextClassLoader());\n+\t\t\t} catch (FlinkException e) {", "originalCommit": "43189cea09d80f8e3c6bc5d9c8a54c51b2c87915", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg3NTQzNQ==", "url": "https://github.com/apache/flink/pull/13679#discussion_r507875435", "bodyText": "I think we can't use TableException here, because InstantiationUtil.instantiate throws FlinkException which is defined in flink-core.", "author": "wuchong", "createdAt": "2020-10-19T16:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYzMjMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NzgyNw==", "url": "https://github.com/apache/flink/pull/13679#discussion_r508267827", "bodyText": "got it", "author": "leonardBang", "createdAt": "2020-10-20T07:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYzMjMyNQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f1c677a00d1a729df385ab3b9663fdbba37ea0aa", "url": "https://github.com/apache/flink/commit/f1c677a00d1a729df385ab3b9663fdbba37ea0aa", "message": "address review comment", "committedDate": "2020-10-19T16:20:44Z", "type": "commit"}]}