{"pr_number": 13577, "pr_title": "[FLINK-16579][table] Upgrade Calcite version to 1.26 for Flink SQL", "pr_createdAt": "2020-10-10T02:05:38Z", "pr_url": "https://github.com/apache/flink/pull/13577", "timeline": [{"oid": "cde6b367bcfc5c76ee9004a6399c734ec890c6d1", "url": "https://github.com/apache/flink/commit/cde6b367bcfc5c76ee9004a6399c734ec890c6d1", "message": "Fix test failure", "committedDate": "2020-10-10T06:47:22Z", "type": "forcePushed"}, {"oid": "66f4d1a8a98fd2a0736b0f8e14dbe765cedf33f6", "url": "https://github.com/apache/flink/commit/66f4d1a8a98fd2a0736b0f8e14dbe765cedf33f6", "message": "Fix test failure", "committedDate": "2020-10-10T07:44:02Z", "type": "forcePushed"}, {"oid": "039b08f4bdd8a60a89fa324cc0213f4fb99a9e8f", "url": "https://github.com/apache/flink/commit/039b08f4bdd8a60a89fa324cc0213f4fb99a9e8f", "message": "[FLINK-16579][table] All kinds of left plan changes\n\n* The predicate normalization now only happens during planning, that means it does not change in the digest anymore\n* The HOP and SESSION window names changes to $HOP and $SESSION, both are deprecated\n* IS NOT DISTINCT FROM is expanded in the plan now\n* Many sort aggregate changes to hash aggregate which are more efficient", "committedDate": "2020-10-10T08:41:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MzU5Nw==", "url": "https://github.com/apache/flink/pull/13577#discussion_r502763597", "bodyText": "What about changing to use @Ignore +\t@Test annotations and also update the comment above?\nThis can avoid the IDEA warns this method is never used.", "author": "wuchong", "createdAt": "2020-10-10T08:21:48Z", "path": "flink-table/flink-sql-parser-hive/src/test/java/org/apache/flink/sql/parser/hive/FlinkHiveSqlParserImplTest.java", "diffHunk": "@@ -35,15 +35,12 @@ protected SqlParserImplFactory parserImplFactory() {\n \t}\n \n \t// overrides test methods that we don't support\n-\t@Override", "originalCommit": "66f4d1a8a98fd2a0736b0f8e14dbe765cedf33f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25608fcfaf896c97019360e45ae4a2c9fe96ae63", "chunk": "diff --git a/flink-table/flink-sql-parser-hive/src/test/java/org/apache/flink/sql/parser/hive/FlinkHiveSqlParserImplTest.java b/flink-table/flink-sql-parser-hive/src/test/java/org/apache/flink/sql/parser/hive/FlinkHiveSqlParserImplTest.java\nindex 72c69b3d30..51c76cd20c 100644\n--- a/flink-table/flink-sql-parser-hive/src/test/java/org/apache/flink/sql/parser/hive/FlinkHiveSqlParserImplTest.java\n+++ b/flink-table/flink-sql-parser-hive/src/test/java/org/apache/flink/sql/parser/hive/FlinkHiveSqlParserImplTest.java\n\n@@ -34,13 +35,19 @@ public class FlinkHiveSqlParserImplTest extends SqlParserTest {\n \t\treturn FlinkHiveSqlParserImpl.FACTORY;\n \t}\n \n-\t// overrides test methods that we don't support\n+\t// ignore test methods that we don't support\n+\t@Ignore\n+\t@Test\n \tpublic void testDescribeStatement() {\n \t}\n \n+\t@Ignore\n+\t@Test\n \tpublic void testTableHintsInInsert() {\n \t}\n \n+\t@Ignore\n+\t@Test\n \tpublic void testDescribeSchema() {\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MzY0Nw==", "url": "https://github.com/apache/flink/pull/13577#discussion_r502763647", "bodyText": "Use @Test instead?", "author": "wuchong", "createdAt": "2020-10-10T08:22:23Z", "path": "flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java", "diffHunk": "@@ -994,7 +992,6 @@ public void testShowViews() {\n \n \t// Override the test because our ROW field type default is nullable,\n \t// which is different with Calcite.\n-\t@Override", "originalCommit": "66f4d1a8a98fd2a0736b0f8e14dbe765cedf33f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE1MTE0Mw==", "url": "https://github.com/apache/flink/pull/13577#discussion_r503151143", "bodyText": "This is missed to update?", "author": "wuchong", "createdAt": "2020-10-12T09:10:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MzY0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7a38dfe2a8668cc543609d5e9f4a8887b8230b0e", "chunk": "diff --git a/flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java b/flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java\nindex 31b07a1ef5..7feffd7290 100644\n--- a/flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java\n+++ b/flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java\n\n@@ -992,6 +995,7 @@ public class FlinkSqlParserImplTest extends SqlParserTest {\n \n \t// Override the test because our ROW field type default is nullable,\n \t// which is different with Calcite.\n+\t@Test\n \tpublic void testCastAsRowType() {\n \t\tfinal String expr = \"cast(a as row(f0 int, f1 varchar))\";\n \t\tfinal String expected = \"CAST(`A` AS ROW(`F0` INTEGER, `F1` VARCHAR))\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2NTM2Mw==", "url": "https://github.com/apache/flink/pull/13577#discussion_r502765363", "bodyText": "Is it a temporary solution? Why we have to override the default value in interface?\nBut this change is only needed in legacy planner?", "author": "wuchong", "createdAt": "2020-10-10T08:42:27Z", "path": "flink-table/flink-table-planner/src/main/java/org/apache/calcite/schema/Statistic.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to you under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.calcite.schema;\n+\n+import org.apache.calcite.rel.RelCollation;\n+import org.apache.calcite.rel.RelDistribution;\n+import org.apache.calcite.rel.RelReferentialConstraint;\n+import org.apache.calcite.util.ImmutableBitSet;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Statistics about a {@link Table}.\n+ *\n+ * <p>Each of the methods may return {@code null} meaning \"not known\".</p>\n+ *\n+ * <p>Changes:\n+ *\n+ * <ul>\n+ *     <li>Line 61: default collations change from null to empty list.</li>", "originalCommit": "039b08f4bdd8a60a89fa324cc0213f4fb99a9e8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTM2OQ==", "url": "https://github.com/apache/flink/pull/13577#discussion_r502771369", "bodyText": "Because the default value changes to null, the legacy planner does not have custom Statistic so there is no good way to override the default value, e.g. (the Statistics.UNKNOWN).", "author": "danny0405", "createdAt": "2020-10-10T09:46:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2NTM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2OTA3Ng==", "url": "https://github.com/apache/flink/pull/13577#discussion_r504369076", "bodyText": "legacy planner also has customer statistic class: FlinkStatistic", "author": "godfreyhe", "createdAt": "2020-10-14T02:51:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2NTM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzM3OQ==", "url": "https://github.com/apache/flink/pull/13577#discussion_r505133379", "bodyText": "Yes, but because the legacy planner use the RelOptTableImpl as the SqlValidatorTable during sql-to-rel conversion, and there is no common base preparing table like FlinkPreparingTableBase in blink planner, we need to override each AbstractTable sub-class for the legacy planner.\nHere it is QueryOperationCatalogViewTable that causes the problem.", "author": "danny0405", "createdAt": "2020-10-15T02:50:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2NTM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "95841cbd815bd7dc9e773e00d164f961fd9bef1e", "chunk": "diff --git a/flink-table/flink-table-planner/src/main/java/org/apache/calcite/schema/Statistic.java b/flink-table/flink-table-planner/src/main/java/org/apache/calcite/schema/Statistic.java\ndeleted file mode 100644\nindex 6ad986e075..0000000000\n--- a/flink-table/flink-table-planner/src/main/java/org/apache/calcite/schema/Statistic.java\n+++ /dev/null\n\n@@ -1,73 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to you under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.calcite.schema;\n-\n-import org.apache.calcite.rel.RelCollation;\n-import org.apache.calcite.rel.RelDistribution;\n-import org.apache.calcite.rel.RelReferentialConstraint;\n-import org.apache.calcite.util.ImmutableBitSet;\n-\n-import java.util.Collections;\n-import java.util.List;\n-\n-/**\n- * Statistics about a {@link Table}.\n- *\n- * <p>Each of the methods may return {@code null} meaning \"not known\".</p>\n- *\n- * <p>Changes:\n- *\n- * <ul>\n- *     <li>Line 61: default collations change from null to empty list.</li>\n- * </ul>\n- *\n- * @see Statistics\n- */\n-public interface Statistic {\n-\t/** Returns the approximate number of rows in the table. */\n-\tdefault Double getRowCount() {\n-\t\treturn null;\n-\t}\n-\n-\t/** Returns whether the given set of columns is a unique key, or a superset\n-\t * of a unique key, of the table.\n-\t */\n-\tdefault boolean isKey(ImmutableBitSet columns) {\n-\t\treturn false;\n-\t}\n-\n-\t/** Returns a list of unique keys, or null if no key exist. */\n-\tdefault List<ImmutableBitSet> getKeys() {\n-\t\treturn null;\n-\t}\n-\n-\t/** Returns the collection of referential constraints (foreign-keys)\n-\t * for this table. */\n-\tdefault List<RelReferentialConstraint> getReferentialConstraints() {\n-\t\treturn null;\n-\t}\n-\n-\t/** Returns the collections of columns on which this table is sorted. */\n-\tdefault List<RelCollation> getCollations() {\n-\t\treturn Collections.emptyList();\n-\t}\n-\n-\t/** Returns the distribution of the data in this table. */\n-\tdefault RelDistribution getDistribution()  {\n-\t\treturn null;\n-\t}\n-}\n"}}, {"oid": "25608fcfaf896c97019360e45ae4a2c9fe96ae63", "url": "https://github.com/apache/flink/commit/25608fcfaf896c97019360e45ae4a2c9fe96ae63", "message": "Fix the test error", "committedDate": "2020-10-12T11:30:42Z", "type": "forcePushed"}, {"oid": "7a38dfe2a8668cc543609d5e9f4a8887b8230b0e", "url": "https://github.com/apache/flink/commit/7a38dfe2a8668cc543609d5e9f4a8887b8230b0e", "message": "Fix test failure", "committedDate": "2020-10-13T04:12:43Z", "type": "forcePushed"}, {"oid": "3db5dd700d90b99ec0a5d70d9b27a0df41a44164", "url": "https://github.com/apache/flink/commit/3db5dd700d90b99ec0a5d70d9b27a0df41a44164", "message": "Fix test failure\n\nRe-trigger the Azure tests", "committedDate": "2020-10-14T07:14:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2NzU2OA==", "url": "https://github.com/apache/flink/pull/13577#discussion_r504367568", "bodyText": "missed to update?", "author": "godfreyhe", "createdAt": "2020-10-14T02:45:36Z", "path": "flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java", "diffHunk": "@@ -188,7 +190,6 @@ public void testDescribeTable() {\n \t/**\n \t * Here we override the super method to avoid test error from `describe statement` supported in original calcite.\n \t */\n-\t@Override", "originalCommit": "4c7d37a3b02ae9221b3f9a798ba9fd0523ec4bb9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95841cbd815bd7dc9e773e00d164f961fd9bef1e", "chunk": "diff --git a/flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java b/flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java\nindex 7feffd7290..adff17e86c 100644\n--- a/flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java\n+++ b/flink-table/flink-sql-parser/src/test/java/org/apache/flink/sql/parser/FlinkSqlParserImplTest.java\n\n@@ -190,6 +190,8 @@ public class FlinkSqlParserImplTest extends SqlParserTest {\n \t/**\n \t * Here we override the super method to avoid test error from `describe statement` supported in original calcite.\n \t */\n+\t@Ignore\n+\t@Test\n \tpublic void testDescribeStatement() {\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ1MTAyMA==", "url": "https://github.com/apache/flink/pull/13577#discussion_r504451020", "bodyText": "nit: Line 671 ~ 681", "author": "godfreyhe", "createdAt": "2020-10-14T07:12:50Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -0,0 +1,2955 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to you under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.calcite.sql2rel;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableSortedMap;\n+import com.google.common.collect.ImmutableSortedSet;\n+import com.google.common.collect.Iterables;\n+import com.google.common.collect.Multimap;\n+import com.google.common.collect.MultimapBuilder;\n+import com.google.common.collect.Sets;\n+import com.google.common.collect.SortedSetMultimap;\n+import org.apache.calcite.linq4j.Ord;\n+import org.apache.calcite.linq4j.function.Function2;\n+import org.apache.calcite.plan.Context;\n+import org.apache.calcite.plan.RelOptCluster;\n+import org.apache.calcite.plan.RelOptCostImpl;\n+import org.apache.calcite.plan.RelOptRuleCall;\n+import org.apache.calcite.plan.RelOptUtil;\n+import org.apache.calcite.plan.RelRule;\n+import org.apache.calcite.plan.hep.HepPlanner;\n+import org.apache.calcite.plan.hep.HepProgram;\n+import org.apache.calcite.plan.hep.HepRelVertex;\n+import org.apache.calcite.rel.BiRel;\n+import org.apache.calcite.rel.RelCollation;\n+import org.apache.calcite.rel.RelHomogeneousShuttle;\n+import org.apache.calcite.rel.RelNode;\n+import org.apache.calcite.rel.core.Aggregate;\n+import org.apache.calcite.rel.core.AggregateCall;\n+import org.apache.calcite.rel.core.Correlate;\n+import org.apache.calcite.rel.core.CorrelationId;\n+import org.apache.calcite.rel.core.Filter;\n+import org.apache.calcite.rel.core.Join;\n+import org.apache.calcite.rel.core.JoinRelType;\n+import org.apache.calcite.rel.core.Project;\n+import org.apache.calcite.rel.core.RelFactories;\n+import org.apache.calcite.rel.core.Sort;\n+import org.apache.calcite.rel.core.Values;\n+import org.apache.calcite.rel.logical.LogicalAggregate;\n+import org.apache.calcite.rel.logical.LogicalCorrelate;\n+import org.apache.calcite.rel.logical.LogicalFilter;\n+import org.apache.calcite.rel.logical.LogicalJoin;\n+import org.apache.calcite.rel.logical.LogicalProject;\n+import org.apache.calcite.rel.logical.LogicalSnapshot;\n+import org.apache.calcite.rel.logical.LogicalTableFunctionScan;\n+import org.apache.calcite.rel.metadata.RelMdUtil;\n+import org.apache.calcite.rel.metadata.RelMetadataQuery;\n+import org.apache.calcite.rel.rules.CoreRules;\n+import org.apache.calcite.rel.rules.FilterCorrelateRule;\n+import org.apache.calcite.rel.rules.FilterJoinRule;\n+import org.apache.calcite.rel.rules.FilterProjectTransposeRule;\n+import org.apache.calcite.rel.type.RelDataType;\n+import org.apache.calcite.rel.type.RelDataTypeFactory;\n+import org.apache.calcite.rel.type.RelDataTypeField;\n+import org.apache.calcite.rex.RexBuilder;\n+import org.apache.calcite.rex.RexCall;\n+import org.apache.calcite.rex.RexCorrelVariable;\n+import org.apache.calcite.rex.RexFieldAccess;\n+import org.apache.calcite.rex.RexInputRef;\n+import org.apache.calcite.rex.RexLiteral;\n+import org.apache.calcite.rex.RexNode;\n+import org.apache.calcite.rex.RexShuttle;\n+import org.apache.calcite.rex.RexSubQuery;\n+import org.apache.calcite.rex.RexUtil;\n+import org.apache.calcite.rex.RexVisitorImpl;\n+import org.apache.calcite.sql.SqlExplainFormat;\n+import org.apache.calcite.sql.SqlExplainLevel;\n+import org.apache.calcite.sql.SqlFunction;\n+import org.apache.calcite.sql.SqlKind;\n+import org.apache.calcite.sql.SqlOperator;\n+import org.apache.calcite.sql.fun.SqlCountAggFunction;\n+import org.apache.calcite.sql.fun.SqlSingleValueAggFunction;\n+import org.apache.calcite.sql.fun.SqlStdOperatorTable;\n+import org.apache.calcite.tools.RelBuilder;\n+import org.apache.calcite.tools.RelBuilderFactory;\n+import org.apache.calcite.util.Holder;\n+import org.apache.calcite.util.ImmutableBeans;\n+import org.apache.calcite.util.ImmutableBitSet;\n+import org.apache.calcite.util.Litmus;\n+import org.apache.calcite.util.Pair;\n+import org.apache.calcite.util.ReflectUtil;\n+import org.apache.calcite.util.ReflectiveVisitor;\n+import org.apache.calcite.util.Util;\n+import org.apache.calcite.util.mapping.Mappings;\n+import org.apache.calcite.util.trace.CalciteTrace;\n+import org.slf4j.Logger;\n+\n+import javax.annotation.Nonnull;\n+\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NavigableMap;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.SortedMap;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Copied to fix CALCITE-4333, should be removed for the next Calcite upgrade.\n+ *\n+ * <p>Changes: Line 672 ~ Line 682, Line 430 ~ Line 441.", "originalCommit": "4c7d37a3b02ae9221b3f9a798ba9fd0523ec4bb9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95841cbd815bd7dc9e773e00d164f961fd9bef1e", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java\nindex 2652bc35b7..60c75d8ff3 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java\n\n@@ -121,7 +121,7 @@ import java.util.stream.Collectors;\n /**\n  * Copied to fix CALCITE-4333, should be removed for the next Calcite upgrade.\n  *\n- * <p>Changes: Line 672 ~ Line 682, Line 430 ~ Line 441.\n+ * <p>Changes: Line 671 ~ Line 681, Line 430 ~ Line 441.\n  */\n public class RelDecorrelator implements ReflectiveVisitor {\n   //~ Static fields/initializers ---------------------------------------------\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NjA4MA==", "url": "https://github.com/apache/flink/pull/13577#discussion_r504476080", "bodyText": "RowTableFunction(s) does not work now ?", "author": "godfreyhe", "createdAt": "2020-10-14T07:57:32Z", "path": "flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/runtime/stream/sql/FunctionITCase.java", "diffHunk": "@@ -768,7 +768,8 @@ public void testRowTableFunction() throws Exception {\n \n \t\ttEnv().createTemporarySystemFunction(\"RowTableFunction\", RowTableFunction.class);\n \t\ttEnv().executeSql(\n-\t\t\t\t\"INSERT INTO SinkTable SELECT t.s, t.sa FROM SourceTable, LATERAL TABLE(RowTableFunction(s)) t\")\n+\t\t\t\t\"INSERT INTO SinkTable SELECT t.s, t.sa FROM SourceTable source, \"", "originalCommit": "3db5dd700d90b99ec0a5d70d9b27a0df41a44164", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI5MzkxNQ==", "url": "https://github.com/apache/flink/pull/13577#discussion_r505293915", "bodyText": "Yes, the same column name s has ambiguity now.", "author": "danny0405", "createdAt": "2020-10-15T07:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NjA4MA=="}], "type": "inlineReview", "revised_code": {"commit": "b14e01c94da3395f712b1a7f5f062fef1e367fb2", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/runtime/stream/sql/FunctionITCase.java b/flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/runtime/stream/sql/FunctionITCase.java\nindex c0015724c9..5847e9ac07 100644\n--- a/flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/runtime/stream/sql/FunctionITCase.java\n+++ b/flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/runtime/stream/sql/FunctionITCase.java\n\n@@ -768,8 +768,7 @@ public class FunctionITCase extends StreamingTestBase {\n \n \t\ttEnv().createTemporarySystemFunction(\"RowTableFunction\", RowTableFunction.class);\n \t\ttEnv().executeSql(\n-\t\t\t\t\"INSERT INTO SinkTable SELECT t.s, t.sa FROM SourceTable source, \"\n-\t\t\t\t\t\t+ \"LATERAL TABLE(RowTableFunction(source.s)) t\")\n+\t\t\t\t\"INSERT INTO SinkTable SELECT t.s, t.sa FROM SourceTable, LATERAL TABLE(RowTableFunction(s)) t\")\n \t\t\t\t.await();\n \n \t\tassertThat(TestCollectionTableFactory.getResult(), equalTo(sinkData));\n"}}, {"oid": "95841cbd815bd7dc9e773e00d164f961fd9bef1e", "url": "https://github.com/apache/flink/commit/95841cbd815bd7dc9e773e00d164f961fd9bef1e", "message": "Fix review comments", "committedDate": "2020-10-16T05:48:51Z", "type": "forcePushed"}, {"oid": "b14e01c94da3395f712b1a7f5f062fef1e367fb2", "url": "https://github.com/apache/flink/commit/b14e01c94da3395f712b1a7f5f062fef1e367fb2", "message": "[FLINK-16579][table] Update Calcite version of pom and NOTICE file\n\nAs a dependency, the Guava version upgrade to 29.0-jre, janino version upgrade to 3.0.11", "committedDate": "2020-10-19T03:15:39Z", "type": "commit"}, {"oid": "1b3686abb009159aa2062b3bf178bae7a9cee08e", "url": "https://github.com/apache/flink/commit/1b3686abb009159aa2062b3bf178bae7a9cee08e", "message": "[FLINK-16579][table] Upgrade SQL parser Calcite version to 1.26.0", "committedDate": "2020-10-19T03:15:39Z", "type": "commit"}, {"oid": "1e6804f7a0f4b3165115feca6dd6bdb66a46baa9", "url": "https://github.com/apache/flink/commit/1e6804f7a0f4b3165115feca6dd6bdb66a46baa9", "message": "[FLINK-16579][table] Fix the API change for planner\n\n* SqlParser, SqlValidator and SqlToRelConverter now have a Config bean for configuration\n* Since CALCITE-2082, all the UDF needs a SqlOperandMetadata for operand type inference\n  (before the change, it is SqlOperandTypeChecker)\n* Since CALCITE-4215, Statistic default collations change from empty list to null", "committedDate": "2020-10-19T03:21:12Z", "type": "commit"}, {"oid": "3d780cebbed6e5301a78543489dc6a7c4ec6d273", "url": "https://github.com/apache/flink/commit/3d780cebbed6e5301a78543489dc6a7c4ec6d273", "message": "[FLINK-16579][table] Replace the rule instance with new one since CALCITE-3923\n\nThe core rules are changed to support new way of parameterization, and moved to CoreRules.", "committedDate": "2020-10-19T03:21:12Z", "type": "commit"}, {"oid": "40f569428531fd0f9a5075e32f0f819b0d0328ea", "url": "https://github.com/apache/flink/commit/40f569428531fd0f9a5075e32f0f819b0d0328ea", "message": "[FLINK-16579][table] Since CALCITE-3877, the default over window bounds does not print out in the plan digest", "committedDate": "2020-10-19T03:21:13Z", "type": "commit"}, {"oid": "4c0252a6db5699cf5505e356aae94ae49bb4fe01", "url": "https://github.com/apache/flink/commit/4c0252a6db5699cf5505e356aae94ae49bb4fe01", "message": "[FLINK-16579][table] Since CALCITE-3877, the default over window bounds does not print out in the plan digest", "committedDate": "2020-10-19T03:21:13Z", "type": "commit"}, {"oid": "d978e4fdfcf24f694bd1eadee0dc3ddcf029fd43", "url": "https://github.com/apache/flink/commit/d978e4fdfcf24f694bd1eadee0dc3ddcf029fd43", "message": "[FLINK-16579][table] Since CALCITE-4220, the aggregate is promoted automatically after sql to rel conversion", "committedDate": "2020-10-19T03:21:13Z", "type": "commit"}, {"oid": "fbeaabe5b9f2f64500f68b38192dbac4cb0c3bfa", "url": "https://github.com/apache/flink/commit/fbeaabe5b9f2f64500f68b38192dbac4cb0c3bfa", "message": "[FLINK-16579][table] The NDV algorithm has been tweaked since CALCITE-4132", "committedDate": "2020-10-19T03:21:13Z", "type": "commit"}, {"oid": "b56c3e8c4176504173eb1bb4dcc312082dabc4bc", "url": "https://github.com/apache/flink/commit/b56c3e8c4176504173eb1bb4dcc312082dabc4bc", "message": "Fix review comments", "committedDate": "2020-10-19T03:21:15Z", "type": "forcePushed"}, {"oid": "cee7bbd18b87444a31483cd90607d9757b043ab6", "url": "https://github.com/apache/flink/commit/cee7bbd18b87444a31483cd90607d9757b043ab6", "message": "Fix review comments", "committedDate": "2020-10-19T03:31:39Z", "type": "forcePushed"}, {"oid": "98165e15f06942ca55663fd9c1de667f8008139e", "url": "https://github.com/apache/flink/commit/98165e15f06942ca55663fd9c1de667f8008139e", "message": "[FLINK-16579][table] All kinds of left plan changes\n\n* The predicate normalization now only happens during planning, that means it does not change in the digest anymore\n* The HOP and SESSION window names changes to $HOP and $SESSION, both are deprecated\n* IS NOT DISTINCT FROM is expanded in the plan now\n* Many sort aggregate changes to hash aggregate which are more efficient\n\nFix review comments", "committedDate": "2020-10-19T03:51:50Z", "type": "forcePushed"}, {"oid": "08fada0fcc5270803b39a711b20f519c3e6c7fe4", "url": "https://github.com/apache/flink/commit/08fada0fcc5270803b39a711b20f519c3e6c7fe4", "message": "[FLINK-16579][table] All kinds of left plan changes\n\n* The predicate normalization now only happens during planning, that means it does not change in the digest anymore\n* The HOP and SESSION window names changes to $HOP and $SESSION, both are deprecated\n* IS NOT DISTINCT FROM is expanded in the plan now\n* Many sort aggregate changes to hash aggregate which are more efficient\n\nFix review comments", "committedDate": "2020-10-19T06:41:49Z", "type": "commit"}, {"oid": "08fada0fcc5270803b39a711b20f519c3e6c7fe4", "url": "https://github.com/apache/flink/commit/08fada0fcc5270803b39a711b20f519c3e6c7fe4", "message": "[FLINK-16579][table] All kinds of left plan changes\n\n* The predicate normalization now only happens during planning, that means it does not change in the digest anymore\n* The HOP and SESSION window names changes to $HOP and $SESSION, both are deprecated\n* IS NOT DISTINCT FROM is expanded in the plan now\n* Many sort aggregate changes to hash aggregate which are more efficient\n\nFix review comments", "committedDate": "2020-10-19T06:41:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczMTY2NA==", "url": "https://github.com/apache/flink/pull/13577#discussion_r507731664", "bodyText": "unnecessary change", "author": "godfreyhe", "createdAt": "2020-10-19T13:09:35Z", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/util/collections/ByteHashSet.java", "diffHunk": "@@ -26,7 +26,7 @@\n \n \tprotected boolean[] used;\n \n-\tpublic ByteHashSet() {\n+\tpublic ByteHashSet(final int expected) {", "originalCommit": "08fada0fcc5270803b39a711b20f519c3e6c7fe4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE2MDMyNw==", "url": "https://github.com/apache/flink/pull/13577#discussion_r508160327", "bodyText": "This is needed because it is a bug.", "author": "danny0405", "createdAt": "2020-10-20T01:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczMTY2NA=="}], "type": "inlineReview", "revised_code": {"commit": "1123f2ba056792dc7dd24feb4d49c6c235f47389", "chunk": "diff --git a/flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/util/collections/ByteHashSet.java b/flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/util/collections/ByteHashSet.java\nindex 95520c85da..e5d7cc6eda 100644\n--- a/flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/util/collections/ByteHashSet.java\n+++ b/flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/util/collections/ByteHashSet.java\n\n@@ -26,7 +26,9 @@ public class ByteHashSet {\n \n \tprotected boolean[] used;\n \n-\tpublic ByteHashSet(final int expected) {\n+\t// Do not remove the param \"dummy\", it is needed to simplify\n+\t// the code generation, see CodeGeneratorContext.addReusableHashSet.\n+\tpublic ByteHashSet(final int dummy) {\n \t\tused = new boolean[Byte.MAX_VALUE - Byte.MIN_VALUE + 1];\n \t}\n \n"}}, {"oid": "ba0ed645a060dc91363fb4334dadff0edcfb0e40", "url": "https://github.com/apache/flink/commit/ba0ed645a060dc91363fb4334dadff0edcfb0e40", "message": "Fix the review comments", "committedDate": "2020-10-20T02:10:08Z", "type": "commit"}, {"oid": "1123f2ba056792dc7dd24feb4d49c6c235f47389", "url": "https://github.com/apache/flink/commit/1123f2ba056792dc7dd24feb4d49c6c235f47389", "message": "Fix review comments", "committedDate": "2020-10-20T03:29:54Z", "type": "commit"}]}