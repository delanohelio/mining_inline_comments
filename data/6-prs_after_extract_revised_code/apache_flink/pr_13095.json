{"pr_number": 13095, "pr_title": "[FLINK-18861][python] Support add_source() to get a DataStream for Py\u2026", "pr_createdAt": "2020-08-09T16:24:30Z", "pr_url": "https://github.com/apache/flink/pull/13095", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3NTY0MA==", "url": "https://github.com/apache/flink/pull/13095#discussion_r467675640", "bodyText": "A custom source function for testing adds a custom source in Python StreamExecutionEnvironment.", "author": "hequn8128", "createdAt": "2020-08-10T03:45:18Z", "path": "flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.python.util;\n+\n+import org.apache.flink.streaming.api.functions.source.SourceFunction;\n+import org.apache.flink.types.Row;\n+\n+import java.util.Random;\n+\n+/**\n+ * A custom source function to for testing add a custom source in Python StreamExecutionEnvironment.", "originalCommit": "f76786840b2ef177ff8eea018e075370e0505891", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "055b4468aecff16d562740c5e2c81504ca15f37e", "chunk": "diff --git a/flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java b/flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java\nindex 53e649f98bb..67e7c741a6a 100644\n--- a/flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java\n+++ b/flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java\n\n@@ -23,7 +23,7 @@ import org.apache.flink.types.Row;\n import java.util.Random;\n \n /**\n- * A custom source function to for testing add a custom source in Python StreamExecutionEnvironment.\n+ * A custom source function for testing adds a custom source in Python StreamExecutionEnvironment.\n  */\n public class MyCustomSourceFunction implements SourceFunction<Row> {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY4NTIyMw==", "url": "https://github.com/apache/flink/pull/13095#discussion_r467685223", "bodyText": "Remove the empty line.", "author": "hequn8128", "createdAt": "2020-08-10T04:42:25Z", "path": "flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.python.util;\n+\n+import org.apache.flink.streaming.api.functions.source.SourceFunction;\n+import org.apache.flink.types.Row;\n+\n+import java.util.Random;\n+\n+/**\n+ * A custom source function to for testing add a custom source in Python StreamExecutionEnvironment.\n+ */\n+public class MyCustomSourceFunction implements SourceFunction<Row> {\n+\n+\tprivate static final String[] NAMES = {\"Bob\", \"Marry\", \"Henry\", \"Mike\", \"Ted\", \"Jack\"};\n+\n+\tprivate int recordCount = 50;\n+\n+\tpublic MyCustomSourceFunction() {\n+\t}\n+\n+\tpublic MyCustomSourceFunction(int recordCount) {\n+\t\tthis.recordCount = recordCount;\n+\t}\n+\n+\tpublic void run(SourceContext sourceContext) {\n+\t\tRandom random = new Random();\n+\t\tfor (int i = 0; i < recordCount; i++) {\n+\t\t\tRow row = Row.of(random.nextInt(1000), NAMES[random.nextInt(NAMES.length)], random.nextDouble());\n+\t\t\tsourceContext.collect(row);\n+\t\t}\n+", "originalCommit": "f76786840b2ef177ff8eea018e075370e0505891", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "055b4468aecff16d562740c5e2c81504ca15f37e", "chunk": "diff --git a/flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java b/flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java\nindex 53e649f98bb..67e7c741a6a 100644\n--- a/flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java\n+++ b/flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java\n\n@@ -23,7 +23,7 @@ import org.apache.flink.types.Row;\n import java.util.Random;\n \n /**\n- * A custom source function to for testing add a custom source in Python StreamExecutionEnvironment.\n+ * A custom source function for testing adds a custom source in Python StreamExecutionEnvironment.\n  */\n public class MyCustomSourceFunction implements SourceFunction<Row> {\n \n"}}, {"oid": "116a22008d334d085c6861c8d325c010cbb11f04", "url": "https://github.com/apache/flink/commit/116a22008d334d085c6861c8d325c010cbb11f04", "message": "[FLINK-18861][python] Support add_source() to get a DataStream for Python StreamExecutionEnvironment.", "committedDate": "2020-08-10T11:53:06Z", "type": "commit"}, {"oid": "055b4468aecff16d562740c5e2c81504ca15f37e", "url": "https://github.com/apache/flink/commit/055b4468aecff16d562740c5e2c81504ca15f37e", "message": "tmp commit", "committedDate": "2020-08-10T11:53:06Z", "type": "commit"}, {"oid": "b2395efe294a7eed7dae338ca7958afa597669be", "url": "https://github.com/apache/flink/commit/b2395efe294a7eed7dae338ca7958afa597669be", "message": "- rebase master branch", "committedDate": "2020-08-10T12:08:10Z", "type": "commit"}, {"oid": "b2395efe294a7eed7dae338ca7958afa597669be", "url": "https://github.com/apache/flink/commit/b2395efe294a7eed7dae338ca7958afa597669be", "message": "- rebase master branch", "committedDate": "2020-08-10T12:08:10Z", "type": "forcePushed"}]}