{"pr_number": 13473, "pr_title": "[FLINK-19264][runtime] Add JobID to ExecutionAttemptID", "pr_createdAt": "2020-09-24T07:47:34Z", "pr_url": "https://github.com/apache/flink/pull/13473", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc1Nzc0NQ==", "url": "https://github.com/apache/flink/pull/13473#discussion_r495757745", "bodyText": "need to check not null", "author": "zhuzhurk", "createdAt": "2020-09-28T08:03:52Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/ExecutionAttemptID.java", "diffHunk": "@@ -33,31 +36,46 @@\n \n \tprivate static final long serialVersionUID = -1169683445778281344L;\n \n+\tprivate final JobID jobId;\n \tprivate final ExecutionVertexID executionVertexId;\n \tprivate final int attemptNumber;\n \n \t/**\n \t * Get a random execution attempt id.\n \t */\n \tpublic ExecutionAttemptID() {\n-\t\tthis(new ExecutionVertexID(new JobVertexID(), 0), 0);\n+\t\tthis(new JobID(), new ExecutionVertexID(new JobVertexID(), 0), 0);\n \t}\n \n-\tpublic ExecutionAttemptID(ExecutionVertexID executionVertexId, int attemptNumber) {\n+\tpublic ExecutionAttemptID(JobID jobId, ExecutionVertexID executionVertexId, int attemptNumber) {\n \t\tPreconditions.checkState(attemptNumber >= 0);\n+\t\tthis.jobId = jobId;", "originalCommit": "d871e6519ed5b33b63cf34bf7454649ae19aced8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7341f5033aaa850ba9cf20800a3b0c082a20a5bf", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/ExecutionAttemptID.java b/flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/ExecutionAttemptID.java\nindex 4db78b69af..10b7667068 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/ExecutionAttemptID.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/ExecutionAttemptID.java\n\n@@ -49,7 +49,7 @@ public class ExecutionAttemptID implements java.io.Serializable {\n \n \tpublic ExecutionAttemptID(JobID jobId, ExecutionVertexID executionVertexId, int attemptNumber) {\n \t\tPreconditions.checkState(attemptNumber >= 0);\n-\t\tthis.jobId = jobId;\n+\t\tthis.jobId = Preconditions.checkNotNull(jobId);\n \t\tthis.executionVertexId = Preconditions.checkNotNull(executionVertexId);\n \t\tthis.attemptNumber = attemptNumber;\n \t}\n"}}, {"oid": "7341f5033aaa850ba9cf20800a3b0c082a20a5bf", "url": "https://github.com/apache/flink/commit/7341f5033aaa850ba9cf20800a3b0c082a20a5bf", "message": "[FLINK-19264][runtime] Add JobID to ExecutionAttemptID", "committedDate": "2020-09-28T08:13:49Z", "type": "forcePushed"}, {"oid": "e74c3f4d35222f876456134e4d800611da09c6cf", "url": "https://github.com/apache/flink/commit/e74c3f4d35222f876456134e4d800611da09c6cf", "message": "[FLINK-19264][runtime] Add JobID to ExecutionAttemptID", "committedDate": "2020-09-28T09:39:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU3ODcxNw==", "url": "https://github.com/apache/flink/pull/13473#discussion_r496578717", "bodyText": "I don't see a need for an explicit catch block", "author": "zentol", "createdAt": "2020-09-29T09:36:05Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/executiongraph/ExecutionGraphConstructionTest.java", "diffHunk": "@@ -61,6 +66,36 @@ private ExecutionGraph createExecutionGraph() throws Exception {\n \t\treturn TestingExecutionGraphBuilder.newBuilder().build();\n \t}\n \n+\t@Test\n+\tpublic void testExecutionAttemptIdInTwoIdenticalJobsIsNotSame() throws Exception {\n+\t\tJobVertex v1 = new JobVertex(\"vertex1\");\n+\t\tJobVertex v2 = new JobVertex(\"vertex2\");\n+\t\tJobVertex v3 = new JobVertex(\"vertex3\");\n+\n+\t\tv1.setParallelism(5);\n+\t\tv2.setParallelism(7);\n+\t\tv3.setParallelism(2);\n+\n+\t\tv1.setInvokableClass(AbstractInvokable.class);\n+\t\tv2.setInvokableClass(AbstractInvokable.class);\n+\t\tv3.setInvokableClass(AbstractInvokable.class);\n+\n+\t\tList<JobVertex> ordered = new ArrayList<>(Arrays.asList(v1, v2, v3));\n+\n+\t\tExecutionGraph eg1 = createExecutionGraph();\n+\t\tExecutionGraph eg2 = createExecutionGraph();\n+\t\ttry {\n+\t\t\teg1.attachJobGraph(ordered);\n+\t\t\teg2.attachJobGraph(ordered);\n+\t\t}\n+\t\tcatch (JobException e) {\n+\t\t\te.printStackTrace();\n+\t\t\tfail(\"Job failed with exception: \" + e.getMessage());", "originalCommit": "ef6232c564a071236900274c014325dcb24c9e97", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bf412ba5eb808a8307c7c69406712142e81f562", "chunk": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/executiongraph/ExecutionGraphConstructionTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/executiongraph/ExecutionGraphConstructionTest.java\nindex 7733ab1b30..b8d24d8bc4 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/executiongraph/ExecutionGraphConstructionTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/executiongraph/ExecutionGraphConstructionTest.java\n\n@@ -84,14 +84,8 @@ public class ExecutionGraphConstructionTest {\n \n \t\tExecutionGraph eg1 = createExecutionGraph();\n \t\tExecutionGraph eg2 = createExecutionGraph();\n-\t\ttry {\n-\t\t\teg1.attachJobGraph(ordered);\n-\t\t\teg2.attachJobGraph(ordered);\n-\t\t}\n-\t\tcatch (JobException e) {\n-\t\t\te.printStackTrace();\n-\t\t\tfail(\"Job failed with exception: \" + e.getMessage());\n-\t\t}\n+\t\teg1.attachJobGraph(ordered);\n+\t\teg2.attachJobGraph(ordered);\n \n \t\tassertThat(Sets.intersection(eg1.getRegisteredExecutions().keySet(), eg2.getRegisteredExecutions().keySet()), is(empty()));\n \t}\n"}}, {"oid": "4bf412ba5eb808a8307c7c69406712142e81f562", "url": "https://github.com/apache/flink/commit/4bf412ba5eb808a8307c7c69406712142e81f562", "message": "[FLINK-19264][runtime] Add JobID to ExecutionAttemptID", "committedDate": "2020-09-29T09:41:26Z", "type": "commit"}, {"oid": "4bf412ba5eb808a8307c7c69406712142e81f562", "url": "https://github.com/apache/flink/commit/4bf412ba5eb808a8307c7c69406712142e81f562", "message": "[FLINK-19264][runtime] Add JobID to ExecutionAttemptID", "committedDate": "2020-09-29T09:41:26Z", "type": "forcePushed"}]}