{"pr_number": 11039, "pr_title": "[FLINK-15942] Do not log huge/infinite cpu/memory resources in profiles", "pr_createdAt": "2020-02-07T13:46:01Z", "pr_url": "https://github.com/apache/flink/pull/11039", "timeline": [{"oid": "43b4289c0851b93da7d57d97e911f8b8091f11f5", "url": "https://github.com/apache/flink/commit/43b4289c0851b93da7d57d97e911f8b8091f11f5", "message": "[FLINK-15942] Do not log huge/infinite cpu/memory resources in profiles", "committedDate": "2020-02-07T13:39:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5MTczNQ==", "url": "https://github.com/apache/flink/pull/11039#discussion_r376491735", "bodyText": "extends TestLogger is missing.", "author": "tillrohrmann", "createdAt": "2020-02-07T16:42:11Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/clusterframework/types/ResourceProfileTest.java", "diffHunk": "@@ -29,17 +29,22 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import static org.apache.flink.runtime.clusterframework.types.ResourceProfile.MAX_CPU_CORE_NUMBER_TO_LOG;\n+import static org.apache.flink.runtime.clusterframework.types.ResourceProfile.MAX_MEMORY_SIZE_TO_LOG;\n+import static org.hamcrest.CoreMatchers.is;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertSame;\n+import static org.junit.Assert.assertThat;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n /**\n  * Tests for the {@link ResourceProfile}.\n  */\n public class ResourceProfileTest {", "originalCommit": "43b4289c0851b93da7d57d97e911f8b8091f11f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMTg4MA==", "url": "https://github.com/apache/flink/pull/11039#discussion_r376501880", "bodyText": "I think we could simplify the assertion a bit by testing whether the string contains cpuCores and a configured memory.", "author": "tillrohrmann", "createdAt": "2020-02-07T17:02:23Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/clusterframework/types/ResourceProfileTest.java", "diffHunk": "@@ -387,4 +392,36 @@ public void testSingletonPropertyOfAny() throws Exception {\n \n \t\tassertSame(ResourceProfile.ANY, copiedProfile);\n \t}\n+\n+\t@Test\n+\tpublic void testToStringWithoutCpu() {\n+\t\tdouble notLoggedCpu = MAX_CPU_CORE_NUMBER_TO_LOG.doubleValue() + 1.0;\n+\t\tResourceProfile resourceProfile = getResourceProfileForLogsWithCpuVal(notLoggedCpu);\n+\t\tassertThat(resourceProfile.toString(), is(getExpectedToString(resourceProfile, \"\")));\n+\t}\n+\n+\t@Test\n+\tpublic void testToStringWithCpu() {\n+\t\tResourceProfile resourceProfile = getResourceProfileForLogsWithCpuVal(1.0);\n+\t\tassertThat(resourceProfile.toString(), is(getExpectedToString(resourceProfile, \"cpuCores=1.0, \")));", "originalCommit": "43b4289c0851b93da7d57d97e911f8b8091f11f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMzgxMg==", "url": "https://github.com/apache/flink/pull/11039#discussion_r376503812", "bodyText": "Alright, I would just make sure that the right positions of commas are covered", "author": "azagrebin", "createdAt": "2020-02-07T17:06:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMTg4MA=="}], "type": "inlineReview", "revised_code": null}]}