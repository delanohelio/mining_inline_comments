{"pr_number": 10760, "pr_title": "[FLINK-15466][table-planner] Fix bug of `FlinkAggregateExpandDistinct\u2026", "pr_createdAt": "2020-01-03T10:11:47Z", "pr_url": "https://github.com/apache/flink/pull/10760", "timeline": [{"oid": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "url": "https://github.com/apache/flink/commit/1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "message": "[FLINK-15466][table-planner] Fix bug of `FlinkAggregateExpandDistinctAggregatesRule` for cases where distinct aggs with filter are used.", "committedDate": "2020-01-03T10:02:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTEwMA==", "url": "https://github.com/apache/flink/pull/10760#discussion_r363135100", "bodyText": "Get and remap xx ?", "author": "godfreyhe", "createdAt": "2020-01-06T01:50:35Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java", "diffHunk": "@@ -471,10 +474,24 @@ private void rewriteUsingGroupingSets(RelOptRuleCall call,\n \t\t\tfinal RexNode nodeZ = nodes.remove(nodes.size() - 1);\n \t\t\tfor (Map.Entry<ImmutableBitSet, Integer> entry : filters.entrySet()) {\n \t\t\t\tfinal long v = groupValue(fullGroupSet, entry.getKey());\n-\t\t\t\tnodes.add(\n+\t\t\t\t// Remap and get the filterArg of the distinct aggregate call.", "originalCommit": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1a1050925ee174aafd73f365bba300e194d95f1", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java\nindex 03dd64134f0..4b44eecc511 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java\n\n@@ -474,24 +474,21 @@ public final class FlinkAggregateExpandDistinctAggregatesRule extends RelOptRule\n \t\t\tfinal RexNode nodeZ = nodes.remove(nodes.size() - 1);\n \t\t\tfor (Map.Entry<ImmutableBitSet, Integer> entry : filters.entrySet()) {\n \t\t\t\tfinal long v = groupValue(fullGroupSet, entry.getKey());\n-\t\t\t\t// Remap and get the filterArg of the distinct aggregate call.\n+\t\t\t\t// Get and remap the filterArg of the distinct aggregate call.\n \t\t\t\tint distinctAggCallFilterArg = remap(fullGroupSet,\n \t\t\t\t\tgroupSetToDistinctAggCallFilterArg.getOrDefault(entry.getKey(), -1));\n+\t\t\t\tRexNode expr;\n \t\t\t\tif (distinctAggCallFilterArg < 0) {\n-\t\t\t\t\tnodes.add(\n-\t\t\t\t\t\trelBuilder.alias(\n-\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n-\t\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t\texpr = relBuilder.equals(nodeZ, relBuilder.literal(v));\n \t\t\t\t} else {\n \t\t\t\t\tRexBuilder rexBuilder = aggregate.getCluster().getRexBuilder();\n \t\t\t\t\t// merge the filter of the distinct aggregate call itself.\n-\t\t\t\t\tnodes.add(relBuilder.alias(\n-\t\t\t\t\t\trelBuilder.and(\n-\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n-\t\t\t\t\t\t\trexBuilder.makeCall(SqlStdOperatorTable.IS_TRUE,\n-\t\t\t\t\t\t\t\trelBuilder.field(distinctAggCallFilterArg))),\n-\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t\texpr = relBuilder.and(\n+\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n+\t\t\t\t\t\trexBuilder.makeCall(SqlStdOperatorTable.IS_TRUE,\n+\t\t\t\t\t\t\trelBuilder.field(distinctAggCallFilterArg)));\n \t\t\t\t}\n+\t\t\t\tnodes.add(relBuilder.alias(expr, \"$g_\" + v));\n \t\t\t}\n \t\t\trelBuilder.project(nodes);\n \t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNjE1Nw==", "url": "https://github.com/apache/flink/pull/10760#discussion_r363136157", "bodyText": "it's better to extract nodes.add(relBuilder.alias(project, \"$g_\" + v) as common part", "author": "godfreyhe", "createdAt": "2020-01-06T02:00:01Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java", "diffHunk": "@@ -471,10 +474,24 @@ private void rewriteUsingGroupingSets(RelOptRuleCall call,\n \t\t\tfinal RexNode nodeZ = nodes.remove(nodes.size() - 1);\n \t\t\tfor (Map.Entry<ImmutableBitSet, Integer> entry : filters.entrySet()) {\n \t\t\t\tfinal long v = groupValue(fullGroupSet, entry.getKey());\n-\t\t\t\tnodes.add(\n+\t\t\t\t// Remap and get the filterArg of the distinct aggregate call.\n+\t\t\t\tint distinctAggCallFilterArg = remap(fullGroupSet,\n+\t\t\t\t\tgroupSetToDistinctAggCallFilterArg.getOrDefault(entry.getKey(), -1));\n+\t\t\t\tif (distinctAggCallFilterArg < 0) {\n+\t\t\t\t\tnodes.add(\n \t\t\t\t\t\trelBuilder.alias(\n-\t\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n-\t\t\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n+\t\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t} else {\n+\t\t\t\t\tRexBuilder rexBuilder = aggregate.getCluster().getRexBuilder();\n+\t\t\t\t\t// merge the filter of the distinct aggregate call itself.\n+\t\t\t\t\tnodes.add(relBuilder.alias(", "originalCommit": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1a1050925ee174aafd73f365bba300e194d95f1", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java\nindex 03dd64134f0..4b44eecc511 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java\n\n@@ -474,24 +474,21 @@ public final class FlinkAggregateExpandDistinctAggregatesRule extends RelOptRule\n \t\t\tfinal RexNode nodeZ = nodes.remove(nodes.size() - 1);\n \t\t\tfor (Map.Entry<ImmutableBitSet, Integer> entry : filters.entrySet()) {\n \t\t\t\tfinal long v = groupValue(fullGroupSet, entry.getKey());\n-\t\t\t\t// Remap and get the filterArg of the distinct aggregate call.\n+\t\t\t\t// Get and remap the filterArg of the distinct aggregate call.\n \t\t\t\tint distinctAggCallFilterArg = remap(fullGroupSet,\n \t\t\t\t\tgroupSetToDistinctAggCallFilterArg.getOrDefault(entry.getKey(), -1));\n+\t\t\t\tRexNode expr;\n \t\t\t\tif (distinctAggCallFilterArg < 0) {\n-\t\t\t\t\tnodes.add(\n-\t\t\t\t\t\trelBuilder.alias(\n-\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n-\t\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t\texpr = relBuilder.equals(nodeZ, relBuilder.literal(v));\n \t\t\t\t} else {\n \t\t\t\t\tRexBuilder rexBuilder = aggregate.getCluster().getRexBuilder();\n \t\t\t\t\t// merge the filter of the distinct aggregate call itself.\n-\t\t\t\t\tnodes.add(relBuilder.alias(\n-\t\t\t\t\t\trelBuilder.and(\n-\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n-\t\t\t\t\t\t\trexBuilder.makeCall(SqlStdOperatorTable.IS_TRUE,\n-\t\t\t\t\t\t\t\trelBuilder.field(distinctAggCallFilterArg))),\n-\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t\texpr = relBuilder.and(\n+\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n+\t\t\t\t\t\trexBuilder.makeCall(SqlStdOperatorTable.IS_TRUE,\n+\t\t\t\t\t\t\trelBuilder.field(distinctAggCallFilterArg)));\n \t\t\t\t}\n+\t\t\t\tnodes.add(relBuilder.alias(expr, \"$g_\" + v));\n \t\t\t}\n \t\t\trelBuilder.project(nodes);\n \t\t}\n"}}, {"oid": "a1a1050925ee174aafd73f365bba300e194d95f1", "url": "https://github.com/apache/flink/commit/a1a1050925ee174aafd73f365bba300e194d95f1", "message": "fix comments.", "committedDate": "2020-01-07T08:45:54Z", "type": "commit"}]}