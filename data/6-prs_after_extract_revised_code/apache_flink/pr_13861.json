{"pr_number": 13861, "pr_title": "[FLINK-19901][metrics] Fix caching offset for variables", "pr_createdAt": "2020-10-30T14:18:30Z", "pr_url": "https://github.com/apache/flink/pull/13861", "timeline": [{"oid": "f0f24d76255c54cbb928dadbb38b95c9b42061c9", "url": "https://github.com/apache/flink/commit/f0f24d76255c54cbb928dadbb38b95c9b42061c9", "message": "[FLINK-19901][metrics] Fix caching offset for variables", "committedDate": "2020-10-30T13:22:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NDg4NQ==", "url": "https://github.com/apache/flink/pull/13861#discussion_r515984885", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn internalGetAllVariables(-1, Collections.emptySet());\n          \n          \n            \n            \t\treturn internalGetAllVariables(0, Collections.emptySet());\n          \n      \n    \n    \n  \n\nThe PR. version causes an ArrayIndexOutOfBoundsException in internalGetAllVariables:136.", "author": "XComp", "createdAt": "2020-11-02T13:53:06Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java", "diffHunk": "@@ -116,15 +116,18 @@ public AbstractMetricGroup(MetricRegistry registry, String[] scope, A parent) {\n \n \t@Override\n \tpublic Map<String, String> getAllVariables() {\n-\t\treturn internalGetAllVariables(0, Collections.emptySet());\n+\t\treturn internalGetAllVariables(-1, Collections.emptySet());", "originalCommit": "f0f24d76255c54cbb928dadbb38b95c9b42061c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18556843986a5697136c23d98e4acb905ace7d2b", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java b/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java\nindex c2edb8ae4b..73cf6ce1e4 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java\n\n@@ -116,7 +116,7 @@ public abstract class AbstractMetricGroup<A extends AbstractMetricGroup<?>> impl\n \n \t@Override\n \tpublic Map<String, String> getAllVariables() {\n-\t\treturn internalGetAllVariables(-1, Collections.emptySet());\n+\t\treturn internalGetAllVariables(0, Collections.emptySet());\n \t}\n \n \tpublic Map<String, String> getAllVariables(int reporterIndex, Set<String> excludedVariables) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NTY2Mg==", "url": "https://github.com/apache/flink/pull/13861#discussion_r515985662", "bodyText": "That's just a minor thing, but I would remove the brackets around IsMapContaining.hasKey(..) to make the code more readable.", "author": "XComp", "createdAt": "2020-11-02T13:54:14Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java", "diffHunk": "@@ -93,6 +96,26 @@ public void testGetAllVariablesWithExclusions() {\n \t\tassertEquals(group.getAllVariables(-1, Collections.singleton(ScopeFormat.SCOPE_HOST)).size(), 0);\n \t}\n \n+\t@Test\n+\tpublic void testGetAllVariablesWithExclusionsForReporters() {\n+\t\tMetricRegistry registry = TestingMetricRegistry.builder().setNumberReporters(2).build();\n+\n+\t\tAbstractMetricGroup<?> group = new GenericMetricGroup(registry, null, \"test\") {\n+\t\t\t@Override\n+\t\t\tprotected void putVariables(Map<String, String> variables) {\n+\t\t\t\tvariables.put(\"k1\", \"v1\");\n+\t\t\t\tvariables.put(\"k2\", \"v2\");\n+\t\t\t}\n+\t\t};\n+\n+\t\tgroup.getAllVariables(-1, Collections.emptySet());\n+\n+\t\tassertThat(group.getAllVariables(0, Collections.singleton(\"k1\")), not(IsMapContaining.hasKey(\"k1\")));\n+\t\tassertThat(group.getAllVariables(0, Collections.singleton(\"k1\")), (IsMapContaining.hasKey(\"k2\")));\n+\t\tassertThat(group.getAllVariables(1, Collections.singleton(\"k2\")), (IsMapContaining.hasKey(\"k1\")));", "originalCommit": "f0f24d76255c54cbb928dadbb38b95c9b42061c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18556843986a5697136c23d98e4acb905ace7d2b", "chunk": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java\nindex a67935c8c6..c712b62ebd 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java\n\n@@ -111,8 +110,8 @@ public class AbstractMetricGroupTest extends TestLogger {\n \t\tgroup.getAllVariables(-1, Collections.emptySet());\n \n \t\tassertThat(group.getAllVariables(0, Collections.singleton(\"k1\")), not(IsMapContaining.hasKey(\"k1\")));\n-\t\tassertThat(group.getAllVariables(0, Collections.singleton(\"k1\")), (IsMapContaining.hasKey(\"k2\")));\n-\t\tassertThat(group.getAllVariables(1, Collections.singleton(\"k2\")), (IsMapContaining.hasKey(\"k1\")));\n+\t\tassertThat(group.getAllVariables(0, Collections.singleton(\"k1\")), IsMapContaining.hasKey(\"k2\"));\n+\t\tassertThat(group.getAllVariables(1, Collections.singleton(\"k2\")), IsMapContaining.hasKey(\"k1\"));\n \t\tassertThat(group.getAllVariables(1, Collections.singleton(\"k2\")), not(IsMapContaining.hasKey(\"k2\")));\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NzEzMg==", "url": "https://github.com/apache/flink/pull/13861#discussion_r515987132", "bodyText": "The static method import org.hamcrest.collection.IsMapContaining.hasKey is never used. You're referring to the IsMapContaining class in the test code.", "author": "XComp", "createdAt": "2020-11-02T13:56:30Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java", "diffHunk": "@@ -43,9 +43,12 @@\n \n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.Map;\n import java.util.concurrent.atomic.AtomicReference;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.collection.IsMapContaining.hasKey;", "originalCommit": "f0f24d76255c54cbb928dadbb38b95c9b42061c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18556843986a5697136c23d98e4acb905ace7d2b", "chunk": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java\nindex a67935c8c6..c712b62ebd 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java\n\n@@ -47,7 +47,6 @@ import java.util.Map;\n import java.util.concurrent.atomic.AtomicReference;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.collection.IsMapContaining.hasKey;\n import static org.hamcrest.core.IsNot.not;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n"}}, {"oid": "18556843986a5697136c23d98e4acb905ace7d2b", "url": "https://github.com/apache/flink/commit/18556843986a5697136c23d98e4acb905ace7d2b", "message": "address comments", "committedDate": "2020-11-03T11:23:36Z", "type": "commit"}]}