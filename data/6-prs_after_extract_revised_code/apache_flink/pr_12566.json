{"pr_number": 12566, "pr_title": "[FLINK-17761][connector/common] Add a constructor taking capacity as a parameter for `FutureCompletingBlockingQueue`", "pr_createdAt": "2020-06-10T03:10:15Z", "pr_url": "https://github.com/apache/flink/pull/12566", "timeline": [{"oid": "4086eac47b36d124dd13d8a15261bcc823b89e74", "url": "https://github.com/apache/flink/commit/4086eac47b36d124dd13d8a15261bcc823b89e74", "message": "[FLINK-17761][connector/common] Add a constructor taking capacity as a parameter for `FutureCompletingBlockingQueue`", "committedDate": "2020-06-10T02:57:54Z", "type": "commit"}, {"oid": "887856985088fccc500f51a7ffc00dc8f619aeef", "url": "https://github.com/apache/flink/commit/887856985088fccc500f51a7ffc00dc8f619aeef", "message": "Fix Checkstyle violation", "committedDate": "2020-06-10T07:01:34Z", "type": "commit"}, {"oid": "c607aaed98c957173a95039f7da9df99143b21c0", "url": "https://github.com/apache/flink/commit/c607aaed98c957173a95039f7da9df99143b21c0", "message": "Add unit test for `FutureCompletingBlockingQueue` constructor", "committedDate": "2020-06-29T15:31:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwMjI0NA==", "url": "https://github.com/apache/flink/pull/12566#discussion_r447402244", "bodyText": "Can you add a license header to the file? Also, we usually do not use * in the imports.", "author": "becketqin", "createdAt": "2020-06-30T04:29:57Z", "path": "flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.apache.flink.connector.base.source.reader.synchronization;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;", "originalCommit": "c607aaed98c957173a95039f7da9df99143b21c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQxMzQ2Mw==", "url": "https://github.com/apache/flink/pull/12566#discussion_r447413463", "bodyText": "@becketqin Thanks for your detail guidance . I will fix it", "author": "pyscala", "createdAt": "2020-06-30T05:11:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwMjI0NA=="}], "type": "inlineReview", "revised_code": {"commit": "c7bac4fab3223f42d461d122658e87f541b3b042", "chunk": "diff --git a/flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java b/flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java\nindex 728ccd11d12..ed6d7141f02 100644\n--- a/flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java\n+++ b/flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java\n\n@@ -1,22 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n package org.apache.flink.connector.base.source.reader.synchronization;\n \n import org.junit.Test;\n \n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n \n /**\n  * The unit test for {@link FutureCompletingBlockingQueue}\n  */\n public class FutureCompletingBlockingQueueTest {\n \n+\n \tprivate static final Integer DEFAULT_CAPACITY = 10000;\n+\tprivate static final Integer SPECIFIED_CAPACITY = 20000;\n \n \t@Test\n \tpublic void testFutureCompletingBlockingQueueConstructor(){\n \t\tFutureNotifier notifier = new FutureNotifier();\n \t\tFutureCompletingBlockingQueue<Object> defaultCapacityFutureCompletingBlockingQueue = new FutureCompletingBlockingQueue<>(notifier);\n-\t\tFutureCompletingBlockingQueue<Object> specifiedCapacityFutureCompletingBlockingQueue = new FutureCompletingBlockingQueue<>(notifier, DEFAULT_CAPACITY);\n+\t\tFutureCompletingBlockingQueue<Object> specifiedCapacityFutureCompletingBlockingQueue = new FutureCompletingBlockingQueue<>(notifier, SPECIFIED_CAPACITY);\n+\t\t// The capacity of the queue needs to be equal to 10000\n \t\tassertEquals(defaultCapacityFutureCompletingBlockingQueue.remainingCapacity(),(int)DEFAULT_CAPACITY);\n-\t\tassertEquals(specifiedCapacityFutureCompletingBlockingQueue.remainingCapacity(),(int)DEFAULT_CAPACITY);\n+\t\t// The capacity of the queue needs to be equal to SPECIFIED_CAPACITY\n+\t\tassertEquals(specifiedCapacityFutureCompletingBlockingQueue.remainingCapacity(),(int)SPECIFIED_CAPACITY);\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwMjUyMw==", "url": "https://github.com/apache/flink/pull/12566#discussion_r447402523", "bodyText": "Should the unit test use a value different from the default value?", "author": "becketqin", "createdAt": "2020-06-30T04:31:05Z", "path": "flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.apache.flink.connector.base.source.reader.synchronization;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * The unit test for {@link FutureCompletingBlockingQueue}\n+ */\n+public class FutureCompletingBlockingQueueTest {\n+\n+\tprivate static final Integer DEFAULT_CAPACITY = 10000;", "originalCommit": "c607aaed98c957173a95039f7da9df99143b21c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQxMzU3NA==", "url": "https://github.com/apache/flink/pull/12566#discussion_r447413574", "bodyText": "Ok", "author": "pyscala", "createdAt": "2020-06-30T05:12:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwMjUyMw=="}], "type": "inlineReview", "revised_code": {"commit": "c7bac4fab3223f42d461d122658e87f541b3b042", "chunk": "diff --git a/flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java b/flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java\nindex 728ccd11d12..ed6d7141f02 100644\n--- a/flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java\n+++ b/flink-connectors/flink-connector-base/src/test/java/org/apache/flink/connector/base/source/reader/synchronization/FutureCompletingBlockingQueueTest.java\n\n@@ -1,22 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n package org.apache.flink.connector.base.source.reader.synchronization;\n \n import org.junit.Test;\n \n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n \n /**\n  * The unit test for {@link FutureCompletingBlockingQueue}\n  */\n public class FutureCompletingBlockingQueueTest {\n \n+\n \tprivate static final Integer DEFAULT_CAPACITY = 10000;\n+\tprivate static final Integer SPECIFIED_CAPACITY = 20000;\n \n \t@Test\n \tpublic void testFutureCompletingBlockingQueueConstructor(){\n \t\tFutureNotifier notifier = new FutureNotifier();\n \t\tFutureCompletingBlockingQueue<Object> defaultCapacityFutureCompletingBlockingQueue = new FutureCompletingBlockingQueue<>(notifier);\n-\t\tFutureCompletingBlockingQueue<Object> specifiedCapacityFutureCompletingBlockingQueue = new FutureCompletingBlockingQueue<>(notifier, DEFAULT_CAPACITY);\n+\t\tFutureCompletingBlockingQueue<Object> specifiedCapacityFutureCompletingBlockingQueue = new FutureCompletingBlockingQueue<>(notifier, SPECIFIED_CAPACITY);\n+\t\t// The capacity of the queue needs to be equal to 10000\n \t\tassertEquals(defaultCapacityFutureCompletingBlockingQueue.remainingCapacity(),(int)DEFAULT_CAPACITY);\n-\t\tassertEquals(specifiedCapacityFutureCompletingBlockingQueue.remainingCapacity(),(int)DEFAULT_CAPACITY);\n+\t\t// The capacity of the queue needs to be equal to SPECIFIED_CAPACITY\n+\t\tassertEquals(specifiedCapacityFutureCompletingBlockingQueue.remainingCapacity(),(int)SPECIFIED_CAPACITY);\n \t}\n }\n"}}, {"oid": "c7bac4fab3223f42d461d122658e87f541b3b042", "url": "https://github.com/apache/flink/commit/c7bac4fab3223f42d461d122658e87f541b3b042", "message": "Add a license header to `FutureCompletingBlockingQueueTest` & Modify SPECIFIED_CAPACITY to 20000 for unit test", "committedDate": "2020-06-30T05:32:45Z", "type": "commit"}, {"oid": "46d45cf0fe8cfc6966b7b4c8cf2649958a3e560b", "url": "https://github.com/apache/flink/commit/46d45cf0fe8cfc6966b7b4c8cf2649958a3e560b", "message": "Fix checkstyle violations", "committedDate": "2020-06-30T08:34:06Z", "type": "commit"}]}