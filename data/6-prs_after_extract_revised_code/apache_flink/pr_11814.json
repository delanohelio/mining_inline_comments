{"pr_number": 11814, "pr_title": "[FLINK-17218][tests] Adding recoverable failures and correctness chec\u2026", "pr_createdAt": "2020-04-20T06:27:47Z", "pr_url": "https://github.com/apache/flink/pull/11814", "timeline": [{"oid": "8e840d32b0adfc38e039e7194f6938c9188d8e0a", "url": "https://github.com/apache/flink/commit/8e840d32b0adfc38e039e7194f6938c9188d8e0a", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-04-21T18:31:11Z", "type": "forcePushed"}, {"oid": "e69396820172b1a22786b1f533999eb401b44244", "url": "https://github.com/apache/flink/commit/e69396820172b1a22786b1f533999eb401b44244", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-04-22T06:53:52Z", "type": "forcePushed"}, {"oid": "3c40823bc020362db1808d744481c5e77f59340e", "url": "https://github.com/apache/flink/commit/3c40823bc020362db1808d744481c5e77f59340e", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-04-22T06:58:58Z", "type": "forcePushed"}, {"oid": "186430ff68a28ee39cff541c61dfc76dd4332375", "url": "https://github.com/apache/flink/commit/186430ff68a28ee39cff541c61dfc76dd4332375", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-04-22T11:30:15Z", "type": "forcePushed"}, {"oid": "f474d64516f4f472100d5d9783767a62e7d4d097", "url": "https://github.com/apache/flink/commit/f474d64516f4f472100d5d9783767a62e7d4d097", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-04-22T13:28:06Z", "type": "forcePushed"}, {"oid": "1e0c61b438830bd4d377ae16f7f8d2b1bc0ce047", "url": "https://github.com/apache/flink/commit/1e0c61b438830bd4d377ae16f7f8d2b1bc0ce047", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-04-22T14:11:51Z", "type": "forcePushed"}, {"oid": "c49c41e5b98a8e48b35d880552e6da17888c93dc", "url": "https://github.com/apache/flink/commit/c49c41e5b98a8e48b35d880552e6da17888c93dc", "message": "[temp] Lots of debug", "committedDate": "2020-04-25T19:16:41Z", "type": "forcePushed"}, {"oid": "161c6e917c3797cfdbae58954576d0a03ab38b42", "url": "https://github.com/apache/flink/commit/161c6e917c3797cfdbae58954576d0a03ab38b42", "message": "[temp] Lots of debug", "committedDate": "2020-04-25T19:22:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjYzMA==", "url": "https://github.com/apache/flink/pull/11814#discussion_r415202630", "bodyText": "Thanks for finding this bug!\nI think the root cause was the state inconsistency among {leftOverLimit, leftOverStart} with leftOverData. During #clear() we only reset leftOverData as null, but now reset the derived {leftOverLimit, leftOverStart} from leftOverData. So we have to check the condition only by leftOverData here. Another option is also to reset {leftOverLimit, leftOverStart} during #clear() to keep all consistency.", "author": "zhijiangW", "createdAt": "2020-04-26T03:26:54Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/serialization/SpillingAdaptiveSpanningRecordDeserializer.java", "diffHunk": "@@ -597,12 +597,12 @@ private void addNextChunkFromMemorySegment(MemorySegment segment, int offset, in\n \t\t\t\tthrow new UnsupportedOperationException(\"Unaligned checkpoint currently do not support spilled \" +\n \t\t\t\t\t\"records.\");\n \t\t\t} else if (recordLength != -1) {\n-\t\t\t\tint leftOverSize = leftOverLimit - leftOverStart;\n+\t\t\t\tint leftOverSize = leftOverData != null ? leftOverLimit - leftOverStart : 0;", "originalCommit": "42653324e6245cf58b547928f0b90d151fcf8f48", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1644392eb3e33382aa22ad51ecae555c64126c5f", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/serialization/SpillingAdaptiveSpanningRecordDeserializer.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/serialization/SpillingAdaptiveSpanningRecordDeserializer.java\nindex 3a52173884..346bdfc766 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/serialization/SpillingAdaptiveSpanningRecordDeserializer.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/serialization/SpillingAdaptiveSpanningRecordDeserializer.java\n\n@@ -597,12 +598,12 @@ public class SpillingAdaptiveSpanningRecordDeserializer<T extends IOReadableWrit\n \t\t\t\tthrow new UnsupportedOperationException(\"Unaligned checkpoint currently do not support spilled \" +\n \t\t\t\t\t\"records.\");\n \t\t\t} else if (recordLength != -1) {\n-\t\t\t\tint leftOverSize = leftOverData != null ? leftOverLimit - leftOverStart : 0;\n+\t\t\t\tint leftOverSize = leftOverLimit - leftOverStart;\n \t\t\t\tint unconsumedSize = Integer.BYTES + accumulatedRecordBytes + leftOverSize;\n \t\t\t\tDataOutputSerializer serializer = new DataOutputSerializer(unconsumedSize);\n \t\t\t\tserializer.writeInt(recordLength);\n \t\t\t\tserializer.write(buffer, 0, accumulatedRecordBytes);\n-\t\t\t\tif (leftOverSize > 0) {\n+\t\t\t\tif (leftOverData != null) {\n \t\t\t\t\tserializer.write(leftOverData, leftOverStart, leftOverSize);\n \t\t\t\t}\n \t\t\t\tMemorySegment segment = MemorySegmentFactory.allocateUnpooledSegment(unconsumedSize);\n"}}, {"oid": "cbca6f0d98e1cb9e1a60086a32a9c058150fa97b", "url": "https://github.com/apache/flink/commit/cbca6f0d98e1cb9e1a60086a32a9c058150fa97b", "message": "[temp] Lots of debug", "committedDate": "2020-04-27T12:09:56Z", "type": "forcePushed"}, {"oid": "0118f76b444e2347aa3b5f30d2e1800962a42427", "url": "https://github.com/apache/flink/commit/0118f76b444e2347aa3b5f30d2e1800962a42427", "message": "[temp] Lots of debug", "committedDate": "2020-04-29T15:29:04Z", "type": "forcePushed"}, {"oid": "d2440367edb82698de508066a900555739b7cafb", "url": "https://github.com/apache/flink/commit/d2440367edb82698de508066a900555739b7cafb", "message": "[temp] Lots of debug", "committedDate": "2020-04-29T19:27:41Z", "type": "forcePushed"}, {"oid": "6abf4ce6e94c0b9d16370bc58381c4e4c3951267", "url": "https://github.com/apache/flink/commit/6abf4ce6e94c0b9d16370bc58381c4e4c3951267", "message": "[temp] Lots of debug", "committedDate": "2020-04-29T20:35:26Z", "type": "forcePushed"}, {"oid": "1d73dbf463d9f7e88d1899502d38d3a112b19647", "url": "https://github.com/apache/flink/commit/1d73dbf463d9f7e88d1899502d38d3a112b19647", "message": "[temp] Lots of debug", "committedDate": "2020-04-30T06:37:13Z", "type": "forcePushed"}, {"oid": "0ea51bf82cd4ac18d8003632cd4b817ca3223008", "url": "https://github.com/apache/flink/commit/0ea51bf82cd4ac18d8003632cd4b817ca3223008", "message": "[temp] Lots of debug", "committedDate": "2020-04-30T07:31:19Z", "type": "forcePushed"}, {"oid": "f239d680e9b8f3f5ace621b7806e0bb7e14d3fdd", "url": "https://github.com/apache/flink/commit/f239d680e9b8f3f5ace621b7806e0bb7e14d3fdd", "message": "[temp] Lots of debug", "committedDate": "2020-04-30T20:12:43Z", "type": "forcePushed"}, {"oid": "1644392eb3e33382aa22ad51ecae555c64126c5f", "url": "https://github.com/apache/flink/commit/1644392eb3e33382aa22ad51ecae555c64126c5f", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-12T21:55:20Z", "type": "forcePushed"}, {"oid": "b65da8bfe23d55c5280799a579c19895701d7ce5", "url": "https://github.com/apache/flink/commit/b65da8bfe23d55c5280799a579c19895701d7ce5", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-13T08:09:41Z", "type": "forcePushed"}, {"oid": "d9df481e7ac96ad50b4ed1925aad7a1d09058604", "url": "https://github.com/apache/flink/commit/d9df481e7ac96ad50b4ed1925aad7a1d09058604", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-13T12:17:26Z", "type": "forcePushed"}, {"oid": "ff781564fa208312e8be7d57f99430dc26080bcc", "url": "https://github.com/apache/flink/commit/ff781564fa208312e8be7d57f99430dc26080bcc", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-14T13:35:42Z", "type": "forcePushed"}, {"oid": "fee2a79881ee92f2200b130a6133dc4e763e77dd", "url": "https://github.com/apache/flink/commit/fee2a79881ee92f2200b130a6133dc4e763e77dd", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-14T16:42:26Z", "type": "forcePushed"}, {"oid": "72db310d8d648cb662f9161af83ec13255e747c8", "url": "https://github.com/apache/flink/commit/72db310d8d648cb662f9161af83ec13255e747c8", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-14T16:48:56Z", "type": "forcePushed"}, {"oid": "2bc36cbe132b1f0c5ecc026edda07ecc143970e0", "url": "https://github.com/apache/flink/commit/2bc36cbe132b1f0c5ecc026edda07ecc143970e0", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-14T17:00:49Z", "type": "forcePushed"}, {"oid": "0e5c18befed1d83308beb55c0e426b3c5f14eebe", "url": "https://github.com/apache/flink/commit/0e5c18befed1d83308beb55c0e426b3c5f14eebe", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-14T18:26:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQ5OA==", "url": "https://github.com/apache/flink/pull/11814#discussion_r425307498", "bodyText": "#8693 will add extra notifyCheckpointAborted that we could use here. I guess it's a race which PR is going to be merged first.", "author": "pnowojski", "createdAt": "2020-05-14T17:24:14Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -189,6 +188,7 @@ private void cleanup(\n \t\t\tCheckpointMetrics metrics, CheckpointOptions options,\n \t\t\tException ex) throws Exception {\n \n+\t\tchannelStateWriter.abort(metadata.getCheckpointId(), ex);", "originalCommit": "2e688933309bb8c7476facd2b7e6a52da74ede67", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29aed91c6b7319398eb972ad51bd581e9f2e8ea8", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java\nindex dc70818713..c077550cec 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java\n\n@@ -188,7 +189,6 @@ class SubtaskCheckpointCoordinatorImpl implements SubtaskCheckpointCoordinator {\n \t\t\tCheckpointMetrics metrics, CheckpointOptions options,\n \t\t\tException ex) throws Exception {\n \n-\t\tchannelStateWriter.abort(metadata.getCheckpointId(), ex);\n \t\tfor (OperatorSnapshotFutures operatorSnapshotResult : operatorSnapshotsInProgress.values()) {\n \t\t\tif (operatorSnapshotResult != null) {\n \t\t\t\ttry {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzc5OQ==", "url": "https://github.com/apache/flink/pull/11814#discussion_r425307799", "bodyText": "nit: I guess it's no longer notifyCheckpointComplete, but finishedWriting(...)?", "author": "pnowojski", "createdAt": "2020-05-14T17:24:47Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -240,7 +240,8 @@ private void finishAndReportAsync(Map<OperatorID, OperatorSnapshotFutures> snaps\n \t\tfinal Future<?> channelWrittenFuture;\n \t\tif (unalignedCheckpointEnabled) {\n \t\t\tChannelStateWriteResult writeResult = channelStateWriter.getWriteResult(metadata.getCheckpointId());\n-\t\t\tchannelWrittenFuture = writeResult.getJointFuture();\n+\t\t\tchannelWrittenFuture = writeResult.getJointFuture()\n+\t\t\t\t.whenComplete((dummy, ex) -> channelStateWriter.notifyCheckpointComplete(metadata.getCheckpointId()));", "originalCommit": "2e688933309bb8c7476facd2b7e6a52da74ede67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1OTQwNQ==", "url": "https://github.com/apache/flink/pull/11814#discussion_r425659405", "bodyText": "I called it stop now (symmetric to start).", "author": "AHeise", "createdAt": "2020-05-15T08:52:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzc5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0e5c18befed1d83308beb55c0e426b3c5f14eebe", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java\nindex dc70818713..6da143407e 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java\n\n@@ -240,7 +240,9 @@ class SubtaskCheckpointCoordinatorImpl implements SubtaskCheckpointCoordinator {\n \t\tfinal Future<?> channelWrittenFuture;\n \t\tif (unalignedCheckpointEnabled) {\n \t\t\tChannelStateWriteResult writeResult = channelStateWriter.getWriteResult(metadata.getCheckpointId());\n-\t\t\tchannelWrittenFuture = writeResult.getJointFuture()\n+\t\t\tchannelWrittenFuture = CompletableFuture.allOf(\n+\t\t\t\t\twriteResult.getInputChannelStateHandles(),\n+\t\t\t\t\twriteResult.getResultSubpartitionStateHandles())\n \t\t\t\t.whenComplete((dummy, ex) -> channelStateWriter.notifyCheckpointComplete(metadata.getCheckpointId()));\n \t\t} else {\n \t\t\tchannelWrittenFuture = FutureUtils.completedVoidFuture();\n"}}, {"oid": "7be02873084fae3c416270044162f98a0193230e", "url": "https://github.com/apache/flink/commit/7be02873084fae3c416270044162f98a0193230e", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-14T19:48:32Z", "type": "forcePushed"}, {"oid": "b9f7b7cf2702efc6e11f69a820e9ab4a8f2a60cb", "url": "https://github.com/apache/flink/commit/b9f7b7cf2702efc6e11f69a820e9ab4a8f2a60cb", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-15T06:00:58Z", "type": "forcePushed"}, {"oid": "29aed91c6b7319398eb972ad51bd581e9f2e8ea8", "url": "https://github.com/apache/flink/commit/29aed91c6b7319398eb972ad51bd581e9f2e8ea8", "message": "[FLINK-17218][checkpointing] Ensuring that ChannelStateWriter aborts previous checkpoints before a new checkpoint is started.", "committedDate": "2020-05-15T08:54:02Z", "type": "commit"}, {"oid": "9ee814ce07ebc6054d06eaaa587f76a8e2bf51f8", "url": "https://github.com/apache/flink/commit/9ee814ce07ebc6054d06eaaa587f76a8e2bf51f8", "message": "[FLINK-17218][checkpointing] Cleaning up ChannelStateWriter state after all data has been written and after sync checkpoint failure.", "committedDate": "2020-05-15T08:54:02Z", "type": "commit"}, {"oid": "bd4011ecc3dc8bb29d4d365dcb00f0b7505b6832", "url": "https://github.com/apache/flink/commit/bd4011ecc3dc8bb29d4d365dcb00f0b7505b6832", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-15T08:54:02Z", "type": "commit"}, {"oid": "bd4011ecc3dc8bb29d4d365dcb00f0b7505b6832", "url": "https://github.com/apache/flink/commit/bd4011ecc3dc8bb29d4d365dcb00f0b7505b6832", "message": "[FLINK-17218][tests] Adding recoverable failures and correctness checks to UnalignedCheckpointITCase.", "committedDate": "2020-05-15T08:54:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTczNDA3OQ==", "url": "https://github.com/apache/flink/pull/11814#discussion_r425734079", "bodyText": "I guess the below Preconditions.checkState(results.size() < maxCheckpoints, \"results.size() > maxCheckpoints\", results.size(), maxCheckpoints); might be invalid if we remove the old ones here?", "author": "zhijiangW", "createdAt": "2020-05-15T11:17:38Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/channel/ChannelStateWriterImpl.java", "diffHunk": "@@ -91,6 +91,7 @@ public ChannelStateWriterImpl(CheckpointStorageWorkerView streamFactoryResolver)\n \n \t@Override\n \tpublic void start(long checkpointId, CheckpointOptions checkpointOptions) {\n+\t\tresults.keySet().forEach(oldCheckpointId -> abort(oldCheckpointId, new Exception(\"Starting new checkpoint \" + checkpointId)));", "originalCommit": "bd4011ecc3dc8bb29d4d365dcb00f0b7505b6832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk0MTU2OQ==", "url": "https://github.com/apache/flink/pull/11814#discussion_r425941569", "bodyText": "You are right that it's probably not needed. However, it's an inexpensive check that verifies the highlighted line.\nI'd keep the check for now.", "author": "AHeise", "createdAt": "2020-05-15T17:19:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTczNDA3OQ=="}], "type": "inlineReview", "revised_code": null}]}