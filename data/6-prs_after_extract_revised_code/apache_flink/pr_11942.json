{"pr_number": 11942, "pr_title": "[FLINK-17325][orc] Integrate orc to file system connector", "pr_createdAt": "2020-04-29T09:11:52Z", "pr_url": "https://github.com/apache/flink/pull/11942", "timeline": [{"oid": "5e6e5057f05147c8eed38a148d54ad0f0022a5b9", "url": "https://github.com/apache/flink/commit/5e6e5057f05147c8eed38a148d54ad0f0022a5b9", "message": "[FLINK-17325][orc] Integrate orc to file system connector", "committedDate": "2020-04-29T09:09:07Z", "type": "commit"}, {"oid": "2e41f637638178e4ebd8efbdc6a1a20764658eca", "url": "https://github.com/apache/flink/commit/2e41f637638178e4ebd8efbdc6a1a20764658eca", "message": "checkstyle", "committedDate": "2020-04-29T12:44:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2NDQzMg==", "url": "https://github.com/apache/flink/pull/11942#discussion_r417264432", "bodyText": "rename to ORC_PROPERTY_PREFIX?", "author": "lirui-apache", "createdAt": "2020-04-29T12:07:29Z", "path": "flink-formats/flink-orc/src/main/java/org/apache/flink/orc/OrcFileSystemFormatFactory.java", "diffHunk": "@@ -0,0 +1,230 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.orc;\n+\n+import org.apache.flink.api.common.io.FileInputFormat;\n+import org.apache.flink.api.common.io.InputFormat;\n+import org.apache.flink.api.common.serialization.BulkWriter;\n+import org.apache.flink.api.common.serialization.Encoder;\n+import org.apache.flink.core.fs.FileInputSplit;\n+import org.apache.flink.core.fs.Path;\n+import org.apache.flink.orc.vector.RowDataVectorizer;\n+import org.apache.flink.orc.writer.OrcBulkWriterFactory;\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.descriptors.DescriptorProperties;\n+import org.apache.flink.table.factories.FileSystemFormatFactory;\n+import org.apache.flink.table.filesystem.PartitionPathUtils;\n+import org.apache.flink.table.types.DataType;\n+import org.apache.flink.table.types.logical.LogicalType;\n+import org.apache.flink.table.types.logical.RowType;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hive.ql.exec.vector.VectorizedRowBatch;\n+import org.apache.orc.TypeDescription;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Properties;\n+\n+import static org.apache.flink.table.data.vector.VectorizedColumnBatch.DEFAULT_SIZE;\n+import static org.apache.flink.table.descriptors.FormatDescriptorValidator.FORMAT;\n+import static org.apache.flink.table.filesystem.RowPartitionComputer.restorePartValueFromType;\n+\n+/**\n+ * Orc {@link FileSystemFormatFactory} for file system.\n+ */\n+public class OrcFileSystemFormatFactory implements FileSystemFormatFactory {\n+\n+\t/**\n+\t * Prefix for orc-related properties, besides format, start with \"orc\".\n+\t * See more in {@link org.apache.orc.OrcConf}.\n+\t */\n+\tpublic static final String ORC_PROPERTIES = \"format.orc\";", "originalCommit": "5e6e5057f05147c8eed38a148d54ad0f0022a5b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d1ec9bfa285d6113e1c376e22474fb8d021a3d0d", "chunk": "diff --git a/flink-formats/flink-orc/src/main/java/org/apache/flink/orc/OrcFileSystemFormatFactory.java b/flink-formats/flink-orc/src/main/java/org/apache/flink/orc/OrcFileSystemFormatFactory.java\nindex 38292c9e74..d56d3885eb 100644\n--- a/flink-formats/flink-orc/src/main/java/org/apache/flink/orc/OrcFileSystemFormatFactory.java\n+++ b/flink-formats/flink-orc/src/main/java/org/apache/flink/orc/OrcFileSystemFormatFactory.java\n\n@@ -62,7 +62,7 @@ public class OrcFileSystemFormatFactory implements FileSystemFormatFactory {\n \t * Prefix for orc-related properties, besides format, start with \"orc\".\n \t * See more in {@link org.apache.orc.OrcConf}.\n \t */\n-\tpublic static final String ORC_PROPERTIES = \"format.orc\";\n+\tpublic static final String ORC_PROPERTIES_PREFIX = \"format.orc\";\n \n \t@Override\n \tpublic Map<String, String> requiredContext() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5MDU3OQ==", "url": "https://github.com/apache/flink/pull/11942#discussion_r417290579", "bodyText": "rename i to columnId?", "author": "lirui-apache", "createdAt": "2020-04-29T12:53:19Z", "path": "flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/RowDataVectorizer.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.orc.vector;\n+\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.types.logical.DecimalType;\n+import org.apache.flink.table.types.logical.LocalZonedTimestampType;\n+import org.apache.flink.table.types.logical.LogicalType;\n+import org.apache.flink.table.types.logical.TimestampType;\n+\n+import org.apache.hadoop.hive.common.type.HiveDecimal;\n+import org.apache.hadoop.hive.ql.exec.vector.BytesColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.ColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.DecimalColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.DoubleColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.LongColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.TimestampColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.VectorizedRowBatch;\n+\n+import java.sql.Timestamp;\n+\n+/**\n+ * A {@link Vectorizer} of {@link RowData} type element.\n+ */\n+public class RowDataVectorizer extends Vectorizer<RowData> {\n+\n+\tprivate final LogicalType[] fieldTypes;\n+\n+\tpublic RowDataVectorizer(String schema, LogicalType[] fieldTypes) {\n+\t\tsuper(schema);\n+\t\tthis.fieldTypes = fieldTypes;\n+\t}\n+\n+\t@Override\n+\tpublic void vectorize(RowData row, VectorizedRowBatch batch) {\n+\t\tint rowId = batch.size++;\n+\t\tfor(int i = 0; i < row.getArity(); ++i) {\n+\t\t\tsetColumn(rowId, batch.cols[i], fieldTypes[i], row, i);\n+\t\t}\n+\t}\n+\n+\tprivate static void setColumn(\n+\t\t\tint rowId, ColumnVector column, LogicalType type, RowData row, int i) {", "originalCommit": "5e6e5057f05147c8eed38a148d54ad0f0022a5b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d1ec9bfa285d6113e1c376e22474fb8d021a3d0d", "chunk": "diff --git a/flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/RowDataVectorizer.java b/flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/RowDataVectorizer.java\nindex 804c0805a9..0ad4b242cd 100644\n--- a/flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/RowDataVectorizer.java\n+++ b/flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/RowDataVectorizer.java\n\n@@ -50,14 +50,14 @@ public class RowDataVectorizer extends Vectorizer<RowData> {\n \t@Override\n \tpublic void vectorize(RowData row, VectorizedRowBatch batch) {\n \t\tint rowId = batch.size++;\n-\t\tfor(int i = 0; i < row.getArity(); ++i) {\n+\t\tfor (int i = 0; i < row.getArity(); ++i) {\n \t\t\tsetColumn(rowId, batch.cols[i], fieldTypes[i], row, i);\n \t\t}\n \t}\n \n \tprivate static void setColumn(\n-\t\t\tint rowId, ColumnVector column, LogicalType type, RowData row, int i) {\n-\t\tif (row.isNullAt(i)) {\n+\t\t\tint rowId, ColumnVector column, LogicalType type, RowData row, int columnId) {\n+\t\tif (row.isNullAt(columnId)) {\n \t\t\tcolumn.noNulls = false;\n \t\t\tcolumn.isNull[rowId] = true;\n \t\t\treturn;\n"}}, {"oid": "d1ec9bfa285d6113e1c376e22474fb8d021a3d0d", "url": "https://github.com/apache/flink/commit/d1ec9bfa285d6113e1c376e22474fb8d021a3d0d", "message": "Fix comments", "committedDate": "2020-04-29T13:27:08Z", "type": "commit"}]}