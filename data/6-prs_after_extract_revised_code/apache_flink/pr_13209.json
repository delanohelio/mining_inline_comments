{"pr_number": 13209, "pr_title": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "pr_createdAt": "2020-08-20T15:30:57Z", "pr_url": "https://github.com/apache/flink/pull/13209", "timeline": [{"oid": "22f17388c9b9beba64aa8ab4bcd2c0ae6d344308", "url": "https://github.com/apache/flink/commit/22f17388c9b9beba64aa8ab4bcd2c0ae6d344308", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout\n\nThe current BoundedBlockingSubpartition in runtime does not support positive flush timeout setting.", "committedDate": "2020-08-21T07:53:30Z", "type": "forcePushed"}, {"oid": "16693da5e62a40ab86491c9d67679b838078725f", "url": "https://github.com/apache/flink/commit/16693da5e62a40ab86491c9d67679b838078725f", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout\n\nThe current BoundedBlockingSubpartition in runtime does not support positive flush timeout setting.", "committedDate": "2020-08-26T07:03:18Z", "type": "forcePushed"}, {"oid": "454310e0df591eac9dd81940f3cf690185155c70", "url": "https://github.com/apache/flink/commit/454310e0df591eac9dd81940f3cf690185155c70", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout\n\nThe current BoundedBlockingSubpartition in runtime does not support positive flush timeout setting.", "committedDate": "2020-08-26T10:58:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzNzMzOA==", "url": "https://github.com/apache/flink/pull/13209#discussion_r477537338", "bodyText": "Can you explain the reasoning behind removing this branch?\nI think we still need it, because if the user doesn't set a timeout for transformation then default job timeout should be used.", "author": "rkhachatryan", "createdAt": "2020-08-26T19:26:23Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java", "diffHunk": "@@ -285,11 +285,7 @@ public StreamGraph generate() {\n \t\t\talreadyTransformed.put(transform, transformedIds);\n \t\t}\n \n-\t\tif (transform.getBufferTimeout() >= 0) {\n-\t\t\tstreamGraph.setBufferTimeout(transform.getId(), transform.getBufferTimeout());\n-\t\t} else {\n-\t\t\tstreamGraph.setBufferTimeout(transform.getId(), defaultBufferTimeout);", "originalCommit": "454310e0df591eac9dd81940f3cf690185155c70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA4MDYwNg==", "url": "https://github.com/apache/flink/pull/13209#discussion_r479080606", "bodyText": "The motivation is for setting the default timeout (100) only for streaming job by design. But in this procedure we can not determine the ResultPartitionType for properly setting the default value, so I removed that path before. And actually the default value can also be set/got in the following procedure by StreamConfig.\nBut I found another problem to do so, which will effect some other code paths. Now I adjusted to make all the preceding default values as -1 if not explicitly set. Then during job graph generation, we can determine whether to reset the default value 100 only for pipelined partition.", "author": "zhijiangW", "createdAt": "2020-08-28T10:18:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzNzMzOA=="}], "type": "inlineReview", "revised_code": {"commit": "b05578c2b19808e488db3f520a0f09faee07a6ce", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java\nindex 207025170c..47eb3168eb 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java\n\n@@ -285,7 +282,11 @@ public class StreamGraphGenerator {\n \t\t\talreadyTransformed.put(transform, transformedIds);\n \t\t}\n \n-\t\tstreamGraph.setBufferTimeout(transform.getId(), transform.getBufferTimeout());\n+\t\tif (transform.getBufferTimeout() >= 0) {\n+\t\t\tstreamGraph.setBufferTimeout(transform.getId(), transform.getBufferTimeout());\n+\t\t} else {\n+\t\t\tstreamGraph.setBufferTimeout(transform.getId(), defaultBufferTimeout);\n+\t\t}\n \n \t\tif (transform.getUid() != null) {\n \t\t\tstreamGraph.setTransformationUID(transform.getId(), transform.getUid());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0MjAxOA==", "url": "https://github.com/apache/flink/pull/13209#discussion_r477542018", "bodyText": "I think adding the timeout value and edge.toString could help to find out misconfguration to the user.", "author": "rkhachatryan", "createdAt": "2020-08-26T19:35:19Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java", "diffHunk": "@@ -591,6 +593,13 @@ private void connect(Integer headOfChain, StreamEdge edge) {\n \t\t}\n \t}\n \n+\tprivate void checkCompatible(ResultPartitionType type, long bufferTimeout) {\n+\t\tif (type.isBlocking() && bufferTimeout != -1) {\n+\t\t\tthrow new UnsupportedOperationException(\"Blocking partition does not support buffer timeout at the\" +", "originalCommit": "454310e0df591eac9dd81940f3cf690185155c70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA4MjcwMg==", "url": "https://github.com/apache/flink/pull/13209#discussion_r479082702", "bodyText": "Agree, i will refactor the message.", "author": "zhijiangW", "createdAt": "2020-08-28T10:20:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0MjAxOA=="}], "type": "inlineReview", "revised_code": {"commit": "6c9e08bd3fecd65c7ea696f7285a106393739bdc", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java\nindex 2056a175c7..bc54f0141b 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java\n\n@@ -593,11 +593,16 @@ public class StreamingJobGraphGenerator {\n \t\t}\n \t}\n \n-\tprivate void checkCompatible(ResultPartitionType type, long bufferTimeout) {\n+\tprivate void checkAndResetBufferTimeout(ResultPartitionType type, StreamConfig config) {\n+\t\tlong bufferTimeout = config.getBufferTimeout();\n \t\tif (type.isBlocking() && bufferTimeout != -1) {\n \t\t\tthrow new UnsupportedOperationException(\"Blocking partition does not support buffer timeout at the\" +\n \t\t\t\t\" moment. Please either reset buffer timeout as -1 or use the non-blocking partition.\");\n \t\t}\n+\n+\t\tif (type.isPipelined() && bufferTimeout == -1) {\n+\t\t\tconfig.setDefaultTimeout();\n+\t\t}\n \t}\n \n \tprivate static boolean isPointwisePartitioner(StreamPartitioner<?> partitioner) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0NjUyNw==", "url": "https://github.com/apache/flink/pull/13209#discussion_r477546527", "bodyText": "If we keep using the default timeout (discussion above),\nthen the issue also happens with StreamExecutionEnvironment.setBufferTimeout(100) or even default, right?", "author": "rkhachatryan", "createdAt": "2020-08-26T19:43:51Z", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java", "diffHunk": "@@ -609,6 +609,33 @@ public void testShuffleModeUndefined() {\n \t\t\tsourceAndMapVertex.getProducedDataSets().get(0).getResultType());\n \t}\n \n+\t@Test(expected = UnsupportedOperationException.class)\n+\tpublic void testConflictShuffleModeWithBufferTimeout() {\n+\t\ttestCompatibleShuffleModeWithBufferTimeout(ShuffleMode.BATCH);\n+\t}\n+\n+\t@Test\n+\tpublic void testNormalShuffleModeWithBufferTimeout() {\n+\t\ttestCompatibleShuffleModeWithBufferTimeout(ShuffleMode.PIPELINED);\n+\t}\n+\n+\tprivate void testCompatibleShuffleModeWithBufferTimeout(ShuffleMode shuffleMode) {\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\n+\t\tDataStream<Integer> sourceDataStream = env.fromElements(1, 2, 3);\n+\t\tsourceDataStream.getTransformation().setBufferTimeout(100);", "originalCommit": "454310e0df591eac9dd81940f3cf690185155c70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzOTY4MA==", "url": "https://github.com/apache/flink/pull/13209#discussion_r479139680", "bodyText": "Yes, I took the way of env.setBufferTimeout(100) in this test for better understanding.", "author": "zhijiangW", "createdAt": "2020-08-28T11:09:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0NjUyNw=="}], "type": "inlineReview", "revised_code": {"commit": "a343c2c3bf36c97dca7045c65eccbcccfbbef5bf", "chunk": "diff --git a/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java b/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java\nindex e7172e2595..a389d77177 100644\n--- a/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java\n+++ b/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java\n\n@@ -621,10 +621,9 @@ public class StreamingJobGraphGeneratorTest extends TestLogger {\n \n \tprivate void testCompatibleShuffleModeWithBufferTimeout(ShuffleMode shuffleMode) {\n \t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tenv.setBufferTimeout(100);\n \n \t\tDataStream<Integer> sourceDataStream = env.fromElements(1, 2, 3);\n-\t\tsourceDataStream.getTransformation().setBufferTimeout(100);\n-\n \t\tPartitionTransformation<Integer> transformation = new PartitionTransformation<>(\n \t\t\tsourceDataStream.getTransformation(),\n \t\t\tnew RebalancePartitioner<>(),\n"}}, {"oid": "6c9e08bd3fecd65c7ea696f7285a106393739bdc", "url": "https://github.com/apache/flink/commit/6c9e08bd3fecd65c7ea696f7285a106393739bdc", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-08-28T10:09:29Z", "type": "forcePushed"}, {"oid": "6b299eb84623c97e80fcd15d64702fb993947186", "url": "https://github.com/apache/flink/commit/6b299eb84623c97e80fcd15d64702fb993947186", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-08-28T10:12:08Z", "type": "forcePushed"}, {"oid": "b05578c2b19808e488db3f520a0f09faee07a6ce", "url": "https://github.com/apache/flink/commit/b05578c2b19808e488db3f520a0f09faee07a6ce", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-08-28T10:49:11Z", "type": "forcePushed"}, {"oid": "a343c2c3bf36c97dca7045c65eccbcccfbbef5bf", "url": "https://github.com/apache/flink/commit/a343c2c3bf36c97dca7045c65eccbcccfbbef5bf", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-08-28T10:52:07Z", "type": "forcePushed"}, {"oid": "ac0be4b2ad8d19ecaa24923b7cdbd4a5edcd3601", "url": "https://github.com/apache/flink/commit/ac0be4b2ad8d19ecaa24923b7cdbd4a5edcd3601", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-08-28T10:55:02Z", "type": "forcePushed"}, {"oid": "3de3f59281d22f21dfbb30cf7d93b1ecd3165a9e", "url": "https://github.com/apache/flink/commit/3de3f59281d22f21dfbb30cf7d93b1ecd3165a9e", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-08-28T11:08:22Z", "type": "forcePushed"}, {"oid": "0ae129370bd5135099c3d195cc36e656f656e35d", "url": "https://github.com/apache/flink/commit/0ae129370bd5135099c3d195cc36e656f656e35d", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-08-31T04:00:14Z", "type": "forcePushed"}, {"oid": "ec3be2e6f417e344583e984579a6734825750546", "url": "https://github.com/apache/flink/commit/ec3be2e6f417e344583e984579a6734825750546", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-08-31T04:40:10Z", "type": "forcePushed"}, {"oid": "895da41424f7b688b26c469b61e3d024b0e325ed", "url": "https://github.com/apache/flink/commit/895da41424f7b688b26c469b61e3d024b0e325ed", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-09-01T03:06:07Z", "type": "forcePushed"}, {"oid": "b8fbd1b09c94299a7f0de5ec7897d962572b38f1", "url": "https://github.com/apache/flink/commit/b8fbd1b09c94299a7f0de5ec7897d962572b38f1", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-09-01T09:55:50Z", "type": "forcePushed"}, {"oid": "3564146f76e2ee9152f1afdccbb75d29dd0efbe8", "url": "https://github.com/apache/flink/commit/3564146f76e2ee9152f1afdccbb75d29dd0efbe8", "message": "modf8", "committedDate": "2020-09-03T10:23:51Z", "type": "forcePushed"}, {"oid": "11331396d796e39661c2ced405a6db61be745927", "url": "https://github.com/apache/flink/commit/11331396d796e39661c2ced405a6db61be745927", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-09-03T10:25:02Z", "type": "forcePushed"}, {"oid": "5c5e70c8a3a1831c1e4715378158eafa93bed707", "url": "https://github.com/apache/flink/commit/5c5e70c8a3a1831c1e4715378158eafa93bed707", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-09-03T10:34:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1NzUwOQ==", "url": "https://github.com/apache/flink/pull/13209#discussion_r483057509", "bodyText": "nit: define constant, e.g. FLUSH_ALWAYS?", "author": "rkhachatryan", "createdAt": "2020-09-03T15:16:19Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java", "diffHunk": "@@ -76,32 +76,68 @@\n \n \tprivate final ShuffleMode shuffleMode;\n \n-\tpublic StreamEdge(StreamNode sourceVertex, StreamNode targetVertex, int typeNumber,\n-\t\t\tList<String> selectedNames, StreamPartitioner<?> outputPartitioner, OutputTag outputTag) {\n-\t\tthis(sourceVertex,\n-\t\t\t\ttargetVertex,\n-\t\t\t\ttypeNumber,\n-\t\t\t\tselectedNames,\n-\t\t\t\toutputPartitioner,\n-\t\t\t\toutputTag,\n-\t\t\t\tShuffleMode.UNDEFINED);\n-\t}\n-\n-\tpublic StreamEdge(StreamNode sourceVertex, StreamNode targetVertex, int typeNumber,\n-\t\t\tList<String> selectedNames, StreamPartitioner<?> outputPartitioner, OutputTag outputTag,\n-\t\t\tShuffleMode shuffleMode) {\n+\tprivate long bufferTimeout;\n+\n+\tpublic StreamEdge(\n+\t\tStreamNode sourceVertex,\n+\t\tStreamNode targetVertex,\n+\t\tint typeNumber,\n+\t\tList<String> selectedNames,\n+\t\tStreamPartitioner<?> outputPartitioner,\n+\t\tOutputTag outputTag) {\n+\n+\t\tthis(\n+\t\t\tsourceVertex,\n+\t\t\ttargetVertex,\n+\t\t\ttypeNumber,\n+\t\t\t0,", "originalCommit": "5c5e70c8a3a1831c1e4715378158eafa93bed707", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fd8b1df7cebdeaeeea8f271a8c42c45f8f861f83", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java\nindex 981f82252e..70232ce5b2 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java\n\n@@ -90,7 +93,7 @@ public class StreamEdge implements Serializable {\n \t\t\tsourceVertex,\n \t\t\ttargetVertex,\n \t\t\ttypeNumber,\n-\t\t\t0,\n+\t\t\tALWAYS_FLUSH_BUFFER_TIMEOUT,\n \t\t\tselectedNames,\n \t\t\toutputPartitioner,\n \t\t\toutputTag,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1NzY3Mg==", "url": "https://github.com/apache/flink/pull/13209#discussion_r483057672", "bodyText": "nit: indentation (other constructors too).", "author": "rkhachatryan", "createdAt": "2020-09-03T15:16:33Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java", "diffHunk": "@@ -76,32 +76,68 @@\n \n \tprivate final ShuffleMode shuffleMode;\n \n-\tpublic StreamEdge(StreamNode sourceVertex, StreamNode targetVertex, int typeNumber,\n-\t\t\tList<String> selectedNames, StreamPartitioner<?> outputPartitioner, OutputTag outputTag) {\n-\t\tthis(sourceVertex,\n-\t\t\t\ttargetVertex,\n-\t\t\t\ttypeNumber,\n-\t\t\t\tselectedNames,\n-\t\t\t\toutputPartitioner,\n-\t\t\t\toutputTag,\n-\t\t\t\tShuffleMode.UNDEFINED);\n-\t}\n-\n-\tpublic StreamEdge(StreamNode sourceVertex, StreamNode targetVertex, int typeNumber,\n-\t\t\tList<String> selectedNames, StreamPartitioner<?> outputPartitioner, OutputTag outputTag,\n-\t\t\tShuffleMode shuffleMode) {\n+\tprivate long bufferTimeout;\n+\n+\tpublic StreamEdge(\n+\t\tStreamNode sourceVertex,\n+\t\tStreamNode targetVertex,\n+\t\tint typeNumber,\n+\t\tList<String> selectedNames,\n+\t\tStreamPartitioner<?> outputPartitioner,\n+\t\tOutputTag outputTag) {", "originalCommit": "5c5e70c8a3a1831c1e4715378158eafa93bed707", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1Njc1Mw==", "url": "https://github.com/apache/flink/pull/13209#discussion_r484156753", "bodyText": "I guess we suggested two options here in the past.\n\n\nAdd one more indentation to distinguish with below codes, as you suggested above.\n\n\nSame indentation as this PR did, and add a separate empty line to distinguish with below codes. And we can see that many existing class constructors took this way, e.g. Task, SingleInputGate, RemoteInputChannel, etc.\n\n\nSo I will keep the current way :)", "author": "zhijiangW", "createdAt": "2020-09-07T02:44:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1NzY3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "fd8b1df7cebdeaeeea8f271a8c42c45f8f861f83", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java\nindex 981f82252e..70232ce5b2 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java\n\n@@ -90,7 +93,7 @@ public class StreamEdge implements Serializable {\n \t\t\tsourceVertex,\n \t\t\ttargetVertex,\n \t\t\ttypeNumber,\n-\t\t\t0,\n+\t\t\tALWAYS_FLUSH_BUFFER_TIMEOUT,\n \t\t\tselectedNames,\n \t\t\toutputPartitioner,\n \t\t\toutputTag,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MTA3Mw==", "url": "https://github.com/apache/flink/pull/13209#discussion_r483061073", "bodyText": "nit: use constant? (already defined below)", "author": "rkhachatryan", "createdAt": "2020-09-03T15:20:59Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java", "diffHunk": "@@ -127,7 +124,7 @@\n \n \tprivate TimeCharacteristic timeCharacteristic = DEFAULT_TIME_CHARACTERISTIC;\n \n-\tprivate long defaultBufferTimeout = DEFAULT_NETWORK_BUFFER_TIMEOUT;\n+\tprivate long defaultBufferTimeout = -1L;", "originalCommit": "5c5e70c8a3a1831c1e4715378158eafa93bed707", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fd8b1df7cebdeaeeea8f271a8c42c45f8f861f83", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java\nindex 47eb3168eb..0f6c0e735e 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamGraphGenerator.java\n\n@@ -124,7 +124,7 @@ public class StreamGraphGenerator {\n \n \tprivate TimeCharacteristic timeCharacteristic = DEFAULT_TIME_CHARACTERISTIC;\n \n-\tprivate long defaultBufferTimeout = -1L;\n+\tprivate long defaultBufferTimeout = StreamingJobGraphGenerator.UNDEFINED_NETWORK_BUFFER_TIMEOUT;\n \n \tprivate String jobName = DEFAULT_JOB_NAME;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MjQzOQ==", "url": "https://github.com/apache/flink/pull/13209#discussion_r483062439", "bodyText": "nit: rename to UNSPECIFIED or ON_BUFFER_FULL?", "author": "rkhachatryan", "createdAt": "2020-09-03T15:22:53Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java", "diffHunk": "@@ -99,6 +99,10 @@\n \n \tprivate static final int MANAGED_MEMORY_FRACTION_SCALE = 16;\n \n+\tprivate static final long DEFAULT_PIPELINED_BUFFER_TIMEOUT = 100L;\n+\n+\tprivate static final long DEFAULT_BLOCKING_BUFFER_TIMEOUT = -1L;", "originalCommit": "5c5e70c8a3a1831c1e4715378158eafa93bed707", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NDU4Ng==", "url": "https://github.com/apache/flink/pull/13209#discussion_r484164586", "bodyText": "I renamed DEFAULT_PIPELINED_BUFFER_TIMEOUT to DEFAULT_NETWORK_BUFFER_TIMEOUT and DEFAULT_BLOCKING_BUFFER_TIMEOUT to UNDEFINED_NETWORK_BUFFER_TIMEOUT for not involving the concept of pipelined/blocking.", "author": "zhijiangW", "createdAt": "2020-09-07T03:24:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MjQzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "fd8b1df7cebdeaeeea8f271a8c42c45f8f861f83", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java\nindex 872d115615..edbde21977 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java\n\n@@ -99,9 +99,9 @@ public class StreamingJobGraphGenerator {\n \n \tprivate static final int MANAGED_MEMORY_FRACTION_SCALE = 16;\n \n-\tprivate static final long DEFAULT_PIPELINED_BUFFER_TIMEOUT = 100L;\n+\tprivate static final long DEFAULT_NETWORK_BUFFER_TIMEOUT = 100L;\n \n-\tprivate static final long DEFAULT_BLOCKING_BUFFER_TIMEOUT = -1L;\n+\tpublic static final long UNDEFINED_NETWORK_BUFFER_TIMEOUT = -1L;\n \n \t// ------------------------------------------------------------------------\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2OTA4NQ==", "url": "https://github.com/apache/flink/pull/13209#discussion_r483069085", "bodyText": "nit: check that current buffer timeout is not set (-1)? or alternatively move checkAndResetBufferTimeout logic into StreamEdge", "author": "rkhachatryan", "createdAt": "2020-09-03T15:31:56Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java", "diffHunk": "@@ -136,6 +172,14 @@ public void setPartitioner(StreamPartitioner<?> partitioner) {\n \t\tthis.outputPartitioner = partitioner;\n \t}\n \n+\tpublic void setBufferTimeout(long bufferTimeout) {\n+\t\tthis.bufferTimeout = bufferTimeout;", "originalCommit": "5c5e70c8a3a1831c1e4715378158eafa93bed707", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NDE4Nw==", "url": "https://github.com/apache/flink/pull/13209#discussion_r484164187", "bodyText": "Move checkAndResetBufferTimeout into StreamEdge seems not possible, because we can not only rely on internal StreamEdge#outputPartitioner to generate ResultPartitionType which also relies on StreamGraph, see StreamingJobGraphGenerator#determineResultPartitionType. Also it seems not good to pass the generate ResultPartitionType as argument into StreamEdge#setBufferTimeout.\nThe initial value of StreamEdge#bufferTimeout is actually -1 from the constructor in core codes if it is not set explicitly via StreamExecutionEnvironment/Transformation, and we will set this value properly based on the partition type during graph generation. I can add the check logic for the passed argument bufferTimeout >= -1.", "author": "zhijiangW", "createdAt": "2020-09-07T03:22:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2OTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI1NDQ1Ng==", "url": "https://github.com/apache/flink/pull/13209#discussion_r484254456", "bodyText": "Ok, thanks for the explanation.", "author": "rkhachatryan", "createdAt": "2020-09-07T07:56:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2OTA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "fd8b1df7cebdeaeeea8f271a8c42c45f8f861f83", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java\nindex 981f82252e..70232ce5b2 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamEdge.java\n\n@@ -173,6 +176,7 @@ public class StreamEdge implements Serializable {\n \t}\n \n \tpublic void setBufferTimeout(long bufferTimeout) {\n+\t\tcheckArgument(bufferTimeout >= -1);\n \t\tthis.bufferTimeout = bufferTimeout;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA3MDc0Mg==", "url": "https://github.com/apache/flink/pull/13209#discussion_r483070742", "bodyText": "I'd also test for 0 timeout as it is treated specially.", "author": "rkhachatryan", "createdAt": "2020-09-03T15:34:21Z", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java", "diffHunk": "@@ -609,6 +609,32 @@ public void testShuffleModeUndefined() {\n \t\t\tsourceAndMapVertex.getProducedDataSets().get(0).getResultType());\n \t}\n \n+\t@Test(expected = UnsupportedOperationException.class)\n+\tpublic void testConflictShuffleModeWithBufferTimeout() {\n+\t\ttestCompatibleShuffleModeWithBufferTimeout(ShuffleMode.BATCH);\n+\t}\n+\n+\t@Test\n+\tpublic void testNormalShuffleModeWithBufferTimeout() {\n+\t\ttestCompatibleShuffleModeWithBufferTimeout(ShuffleMode.PIPELINED);\n+\t}\n+\n+\tprivate void testCompatibleShuffleModeWithBufferTimeout(ShuffleMode shuffleMode) {\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tenv.setBufferTimeout(100);", "originalCommit": "5c5e70c8a3a1831c1e4715378158eafa93bed707", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2OTU0NQ==", "url": "https://github.com/apache/flink/pull/13209#discussion_r484169545", "bodyText": "The purpose of this test is for verifying the changes of StreamingJobGraphGenerator#checkAndResetBufferTimeout logics, which only treats -1 as special and 0/100 or any positive values are regarded the same logic.", "author": "zhijiangW", "createdAt": "2020-09-07T03:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA3MDc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI1NDI0OQ==", "url": "https://github.com/apache/flink/pull/13209#discussion_r484254249", "bodyText": "Makes sense.", "author": "rkhachatryan", "createdAt": "2020-09-07T07:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA3MDc0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "85c2b040fe9c9275fa03ce075ac60a3e3fcd0f5a", "chunk": "diff --git a/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java b/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java\nindex a389d77177..c947325819 100644\n--- a/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java\n+++ b/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java\n\n@@ -609,32 +609,6 @@ public class StreamingJobGraphGeneratorTest extends TestLogger {\n \t\t\tsourceAndMapVertex.getProducedDataSets().get(0).getResultType());\n \t}\n \n-\t@Test(expected = UnsupportedOperationException.class)\n-\tpublic void testConflictShuffleModeWithBufferTimeout() {\n-\t\ttestCompatibleShuffleModeWithBufferTimeout(ShuffleMode.BATCH);\n-\t}\n-\n-\t@Test\n-\tpublic void testNormalShuffleModeWithBufferTimeout() {\n-\t\ttestCompatibleShuffleModeWithBufferTimeout(ShuffleMode.PIPELINED);\n-\t}\n-\n-\tprivate void testCompatibleShuffleModeWithBufferTimeout(ShuffleMode shuffleMode) {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\tenv.setBufferTimeout(100);\n-\n-\t\tDataStream<Integer> sourceDataStream = env.fromElements(1, 2, 3);\n-\t\tPartitionTransformation<Integer> transformation = new PartitionTransformation<>(\n-\t\t\tsourceDataStream.getTransformation(),\n-\t\t\tnew RebalancePartitioner<>(),\n-\t\t\tshuffleMode);\n-\n-\t\tDataStream<Integer> partitionStream = new DataStream<>(env, transformation);\n-\t\tpartitionStream.map(value -> value).print();\n-\n-\t\tStreamingJobGraphGenerator.createJobGraph(env.getStreamGraph());\n-\t}\n-\n \t/**\n \t * Test iteration job, check slot sharing group and co-location group.\n \t */\n"}}, {"oid": "fd8b1df7cebdeaeeea8f271a8c42c45f8f861f83", "url": "https://github.com/apache/flink/commit/fd8b1df7cebdeaeeea8f271a8c42c45f8f861f83", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout", "committedDate": "2020-09-07T03:51:47Z", "type": "forcePushed"}, {"oid": "e1fe91323c1bf710d16a9ab02150a70a7a7e14e1", "url": "https://github.com/apache/flink/commit/e1fe91323c1bf710d16a9ab02150a70a7a7e14e1", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout\n\nFrom the requirement it is no need to enable buffer timeout for batch jobs since the downstream can only consume data when the upstream finishes.\nFurthermore the current implementation of BoundedBlockingSubpartition does not consider the concurrent issue from the flusher thread by enabling\nbuffer timeout. So it is nice to check this compatibility during job graph generation in advance and give a friendly message hint for users.\n\nThis closes #13209.", "committedDate": "2020-09-07T03:55:48Z", "type": "forcePushed"}, {"oid": "85c2b040fe9c9275fa03ce075ac60a3e3fcd0f5a", "url": "https://github.com/apache/flink/commit/85c2b040fe9c9275fa03ce075ac60a3e3fcd0f5a", "message": "[hotfix][datastream] Fix the formatting of StreamEdge class", "committedDate": "2020-09-07T04:10:35Z", "type": "commit"}, {"oid": "d41657dbc2a5610ab94e6463b32c87a53224f30c", "url": "https://github.com/apache/flink/commit/d41657dbc2a5610ab94e6463b32c87a53224f30c", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout\n\nFrom the requirement it is no need to enable buffer timeout for batch jobs since the downstream can only consume data when the upstream finishes.\nFurthermore the current implementation of BoundedBlockingSubpartition does not consider the concurrent issue from the flusher thread by enabling\nbuffer timeout. So it is nice to check this compatibility during job graph generation in advance and give a friendly message hint for users.\n\nThis closes #13209.", "committedDate": "2020-09-07T04:12:06Z", "type": "forcePushed"}, {"oid": "79b151e66afb2420c4d41d24961ac853d217ba76", "url": "https://github.com/apache/flink/commit/79b151e66afb2420c4d41d24961ac853d217ba76", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout\n\nFrom the requirement it is no need to enable buffer timeout for batch jobs since the downstream can only consume data when the upstream finishes.\nFurthermore the current implementation of BoundedBlockingSubpartition does not consider the concurrent issue from the flusher thread by enabling\nbuffer timeout. So it is nice to check this compatibility during job graph generation in advance and give a friendly message hint for users.\n\nThis closes #13209.", "committedDate": "2020-09-07T04:14:42Z", "type": "forcePushed"}, {"oid": "873283f82fa92bd1634f39846ac8142d3f580094", "url": "https://github.com/apache/flink/commit/873283f82fa92bd1634f39846ac8142d3f580094", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout\n\nFrom the requirement it is no need to enable buffer timeout for batch jobs since the downstream can only consume data when the upstream finishes.\nFurthermore the current implementation of BoundedBlockingSubpartition does not consider the concurrent issue from the flusher thread by enabling\nbuffer timeout. So it is nice to check this compatibility during job graph generation in advance and give a friendly message hint for users.\n\nThis closes #13209.", "committedDate": "2020-09-07T08:15:07Z", "type": "commit"}, {"oid": "873283f82fa92bd1634f39846ac8142d3f580094", "url": "https://github.com/apache/flink/commit/873283f82fa92bd1634f39846ac8142d3f580094", "message": "[FLINK-18832][datastream] Add compatible check for blocking partition with buffer timeout\n\nFrom the requirement it is no need to enable buffer timeout for batch jobs since the downstream can only consume data when the upstream finishes.\nFurthermore the current implementation of BoundedBlockingSubpartition does not consider the concurrent issue from the flusher thread by enabling\nbuffer timeout. So it is nice to check this compatibility during job graph generation in advance and give a friendly message hint for users.\n\nThis closes #13209.", "committedDate": "2020-09-07T08:15:07Z", "type": "forcePushed"}]}