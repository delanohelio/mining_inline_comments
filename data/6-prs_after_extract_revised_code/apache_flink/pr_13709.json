{"pr_number": 13709, "pr_title": "[FLINK-19401][checkpointing] Download checkpoints only if needed", "pr_createdAt": "2020-10-20T16:10:23Z", "pr_url": "https://github.com/apache/flink/pull/13709", "timeline": [{"oid": "14f7ba792a5ff15a1e6c2ca8cae93c7f3c63fe7c", "url": "https://github.com/apache/flink/commit/14f7ba792a5ff15a1e6c2ca8cae93c7f3c63fe7c", "message": "[FLINK-19401][checkpointing] Download checkpoints only if needed\n\nIf checkpoints in ZK are the same as already downloaded then skip\ndownload. This prevents excessive S3 reads and eventually failure to\nstart the job, particularly in multi-region recovery.", "committedDate": "2020-10-20T19:32:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAxMDE1Nw==", "url": "https://github.com/apache/flink/pull/13709#discussion_r509010157", "bodyText": "Also log the count of \"All checkpoints\" ?", "author": "Jiayi-Liao", "createdAt": "2020-10-21T06:04:21Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java", "diffHunk": "@@ -143,6 +145,10 @@ public void recover() throws Exception {\n \t\tint numberOfInitialCheckpoints = initialCheckpoints.size();\n \n \t\tLOG.info(\"Found {} checkpoints in ZooKeeper.\", numberOfInitialCheckpoints);\n+\t\tif (haveAllDownloaded(initialCheckpoints)) {\n+\t\t\tLOG.info(\"All checkpoints found are already downloaded.\");", "originalCommit": "14f7ba792a5ff15a1e6c2ca8cae93c7f3c63fe7c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6af74f96aa6de790a7d28afd6d438ed8959da4be", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java\nindex ca27b791a87..525ec1eec80 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java\n\n@@ -146,7 +146,7 @@ public class ZooKeeperCompletedCheckpointStore implements CompletedCheckpointSto\n \n \t\tLOG.info(\"Found {} checkpoints in ZooKeeper.\", numberOfInitialCheckpoints);\n \t\tif (haveAllDownloaded(initialCheckpoints)) {\n-\t\t\tLOG.info(\"All checkpoints found are already downloaded.\");\n+\t\t\tLOG.info(\"All {} checkpoints found are already downloaded.\", numberOfInitialCheckpoints);\n \t\t\treturn;\n \t\t}\n \n"}}, {"oid": "6af74f96aa6de790a7d28afd6d438ed8959da4be", "url": "https://github.com/apache/flink/commit/6af74f96aa6de790a7d28afd6d438ed8959da4be", "message": "[FLINK-19401][checkpointing] Download checkpoints only if needed\n\nIf checkpoints in ZK are the same as already downloaded then skip\ndownload. This prevents excessive S3 reads and eventually failure to\nstart the job, particularly in multi-region recovery.\n\nZooKeeperHighAvailabilityITCase is dropped is it now fails\nfalse-positively.  Instead, unit testRetrievalFailsRecovery\nwas added in the previous commit.", "committedDate": "2020-10-21T09:47:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIwOTU0Mw==", "url": "https://github.com/apache/flink/pull/13709#discussion_r509209543", "bodyText": "Could we reuse ExpectedTestException from runtime testutils package?", "author": "AHeise", "createdAt": "2020-10-21T11:44:49Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStoreTest.java", "diffHunk": "@@ -58,6 +66,54 @@ public void testPathConversion() {\n \t\tassertEquals(checkpointId, ZooKeeperCompletedCheckpointStore.pathToCheckpointId(path));\n \t}\n \n+\tprivate static class TestException extends RuntimeException{", "originalCommit": "6924cfd9a0a8172e3e1ef47649936046163ac2da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NzAyMQ==", "url": "https://github.com/apache/flink/pull/13709#discussion_r509267021", "bodyText": "I searched for suitable TestException and missed ExpectedTestException :)\nWill use it, thanks!", "author": "rkhachatryan", "createdAt": "2020-10-21T13:14:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIwOTU0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "73738e6c4954570a146c10ab3fa088ca956929d7", "chunk": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStoreTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStoreTest.java\nindex 6a4f5d18965..aec5c2fb076 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStoreTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStoreTest.java\n\n@@ -66,19 +67,16 @@ public class ZooKeeperCompletedCheckpointStoreTest extends TestLogger {\n \t\tassertEquals(checkpointId, ZooKeeperCompletedCheckpointStore.pathToCheckpointId(path));\n \t}\n \n-\tprivate static class TestException extends RuntimeException{\n-\t}\n-\n-\t@Test(expected = TestException.class)\n+\t@Test(expected = ExpectedTestException.class)\n \tpublic void testRecoverFailsIfDownloadFails() throws Exception {\n \t\ttestDownloadInternal((store, checkpointsInZk, sharedStateRegistry) -> {\n \t\t\ttry {\n \t\t\t\tcheckpointsInZk.add(createHandle(1, id -> {\n-\t\t\t\t\tthrow new TestException();\n+\t\t\t\t\tthrow new ExpectedTestException();\n \t\t\t\t}));\n \t\t\t\tstore.recover();\n \t\t\t} catch (Exception exception) {\n-\t\t\t\tfindThrowable(exception, TestException.class).ifPresent(ExceptionUtils::rethrow);\n+\t\t\t\tfindThrowable(exception, ExpectedTestException.class).ifPresent(ExceptionUtils::rethrow);\n \t\t\t\trethrow(exception);\n \t\t\t}\n \t\t});\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIxMTY4Mw==", "url": "https://github.com/apache/flink/pull/13709#discussion_r509211683", "bodyText": "What happens if all but one checkpoint have been downloaded? Would it download all of them or just the missing one?\nIf the former, I'd modify this method to return all missing checkpoints instead.", "author": "AHeise", "createdAt": "2020-10-21T11:48:38Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java", "diffHunk": "@@ -143,6 +145,10 @@ public void recover() throws Exception {\n \t\tint numberOfInitialCheckpoints = initialCheckpoints.size();\n \n \t\tLOG.info(\"Found {} checkpoints in ZooKeeper.\", numberOfInitialCheckpoints);\n+\t\tif (haveAllDownloaded(initialCheckpoints)) {", "originalCommit": "6af74f96aa6de790a7d28afd6d438ed8959da4be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NTY5NQ==", "url": "https://github.com/apache/flink/pull/13709#discussion_r509265695", "bodyText": "Yes, if at least one checkpoint is missing (or some extra checkpoints exist) it will re-download initialCheckpoints.\nIt's quite a sensitive part affecting correctness so I think it's better to keep it as simple as possible and not optimize further.\nWith that in mind, I think the only use of returning missing checkpoints would be to log them.\nIs this what you propose?", "author": "rkhachatryan", "createdAt": "2020-10-21T13:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIxMTY4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwODM0Nw==", "url": "https://github.com/apache/flink/pull/13709#discussion_r509608347", "bodyText": "I was thinking of optimization, but I understand your argument.", "author": "AHeise", "createdAt": "2020-10-21T19:27:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIxMTY4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "73738e6c4954570a146c10ab3fa088ca956929d7", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java\nindex 525ec1eec80..533b86d6b5c 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java\n\n@@ -145,10 +143,6 @@ public class ZooKeeperCompletedCheckpointStore implements CompletedCheckpointSto\n \t\tint numberOfInitialCheckpoints = initialCheckpoints.size();\n \n \t\tLOG.info(\"Found {} checkpoints in ZooKeeper.\", numberOfInitialCheckpoints);\n-\t\tif (haveAllDownloaded(initialCheckpoints)) {\n-\t\t\tLOG.info(\"All {} checkpoints found are already downloaded.\", numberOfInitialCheckpoints);\n-\t\t\treturn;\n-\t\t}\n \n \t\t// Try and read the state handles from storage. We try until we either successfully read\n \t\t// all of them or when we reach a stable state, i.e. when we successfully read the same set\n"}}, {"oid": "73738e6c4954570a146c10ab3fa088ca956929d7", "url": "https://github.com/apache/flink/commit/73738e6c4954570a146c10ab3fa088ca956929d7", "message": "[tests][checkpointing] Test retrieval error fails ZKStore.recover\n\nThe added test, coupled with the next change (download checkpoints\nonly if necessary) allows to drop ZK-HA-ITCase. Otherwise,\nZK-HA-ITCase would fail false-positively.", "committedDate": "2020-10-21T13:15:39Z", "type": "commit"}, {"oid": "3dd7b648660b9c4ae7fdb2bcff5f19bd02caba5c", "url": "https://github.com/apache/flink/commit/3dd7b648660b9c4ae7fdb2bcff5f19bd02caba5c", "message": "[FLINK-19401][checkpointing] Download checkpoints only if needed\n\nIf checkpoints in ZK are the same as already downloaded then skip\ndownload. This prevents excessive S3 reads and eventually failure to\nstart the job, particularly in multi-region recovery.\n\nZooKeeperHighAvailabilityITCase is dropped is it now fails\nfalse-positively.  Instead, unit testRetrievalFailsRecovery\nwas added in the previous commit.", "committedDate": "2020-10-21T13:15:39Z", "type": "commit"}, {"oid": "3dd7b648660b9c4ae7fdb2bcff5f19bd02caba5c", "url": "https://github.com/apache/flink/commit/3dd7b648660b9c4ae7fdb2bcff5f19bd02caba5c", "message": "[FLINK-19401][checkpointing] Download checkpoints only if needed\n\nIf checkpoints in ZK are the same as already downloaded then skip\ndownload. This prevents excessive S3 reads and eventually failure to\nstart the job, particularly in multi-region recovery.\n\nZooKeeperHighAvailabilityITCase is dropped is it now fails\nfalse-positively.  Instead, unit testRetrievalFailsRecovery\nwas added in the previous commit.", "committedDate": "2020-10-21T13:15:39Z", "type": "forcePushed"}]}