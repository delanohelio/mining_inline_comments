{"pr_number": 13539, "pr_title": "[FLINK-19027][network] Assign exclusive buffers to LocalRecoveredInputChannel.", "pr_createdAt": "2020-10-04T08:57:06Z", "pr_url": "https://github.com/apache/flink/pull/13539", "timeline": [{"oid": "524d380a3d1811870ffce75b4d149f3d8cf38392", "url": "https://github.com/apache/flink/commit/524d380a3d1811870ffce75b4d149f3d8cf38392", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels.", "committedDate": "2020-10-04T08:57:34Z", "type": "forcePushed"}, {"oid": "e7851e95b95667b7a12fc9495155416f2b9574d2", "url": "https://github.com/apache/flink/commit/e7851e95b95667b7a12fc9495155416f2b9574d2", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels.", "committedDate": "2020-10-04T18:11:29Z", "type": "forcePushed"}, {"oid": "9e2afb6339296312216da63a5b751a5233bb7614", "url": "https://github.com/apache/flink/commit/9e2afb6339296312216da63a5b751a5233bb7614", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels.", "committedDate": "2020-10-04T19:36:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NjAxMQ==", "url": "https://github.com/apache/flink/pull/13539#discussion_r499376011", "bodyText": "Did you remove awaitTermination and close calls?", "author": "pnowojski", "createdAt": "2020-10-05T06:51:38Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGateTest.java", "diffHunk": "@@ -217,15 +221,11 @@ public void testConcurrentReadStateAndProcessAndClose() throws Exception {\n \t\t\t\t}\n \t\t\t};\n \n-\t\t\tsubmitTasksAndWaitForResults(executor, new Callable[] {closeTask, readRecoveredStateTask, processStateTask});\n-\t\t} finally {\n-\t\t\texecutor.shutdown();\n+\t\t\texecutor.invokeAll(Arrays.asList(closeTask, readRecoveredStateTask, processStateTask));\n+\n \t\t\t// wait until the internal channel state recover task finishes\n-\t\t\texecutor.awaitTermination(60, TimeUnit.SECONDS);\n \t\t\tassertEquals(totalBuffers, environment.getNetworkBufferPool().getNumberOfAvailableMemorySegments());\n \t\t\tassertTrue(inputGate.getCloseFuture().isDone());\n-\n-\t\t\tenvironment.close();", "originalCommit": "f4fafbd875e938ead5b538bbc1e500472f1a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyMjc5OA==", "url": "https://github.com/apache/flink/pull/13539#discussion_r499422798", "bodyText": "close is called by the Closer.\nshutdown + awaitTermination is simply the wrong method. invokeAll is doing what was intended. Could be an extra commit. However, it should then probably be done on all 10 places that use submitTasksAndWaitForResults.", "author": "AHeise", "createdAt": "2020-10-05T08:22:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NjAxMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NjQ4Mw==", "url": "https://github.com/apache/flink/pull/13539#discussion_r499376483", "bodyText": "Change first commit message to:\n\n[FLINK-19027][test][network] Ensure SingleInputGateTest does not swallow exceptions during cleanup.\n\n?", "author": "pnowojski", "createdAt": "2020-10-05T06:52:50Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGateTest.java", "diffHunk": "@@ -59,26 +59,27 @@\n import org.apache.flink.runtime.shuffle.ShuffleDescriptor;", "originalCommit": "f4fafbd875e938ead5b538bbc1e500472f1a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyMzA1MA==", "url": "https://github.com/apache/flink/pull/13539#discussion_r499423050", "bodyText": "I didn't even know that double-tags are a thing. :p", "author": "AHeise", "createdAt": "2020-10-05T08:23:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NjQ4Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3OTAwMQ==", "url": "https://github.com/apache/flink/pull/13539#discussion_r499379001", "bodyText": "Why is this change relevant to the fix? Could you add some explanation to the commit message?", "author": "pnowojski", "createdAt": "2020-10-05T06:59:11Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGate.java", "diffHunk": "@@ -247,7 +248,18 @@ public void setup() throws IOException {\n \t}\n \n \t@Override\n-\tpublic CompletableFuture<?> readRecoveredState(ExecutorService executor, ChannelStateReader reader) {\n+\tpublic CompletableFuture<?> readRecoveredState(ExecutorService executor, ChannelStateReader reader) throws IOException {\n+\t\tsynchronized (requestLock) {\n+\t\t\tif (closeFuture.isDone()) {\n+\t\t\t\treturn FutureUtils.completedVoidFuture();\n+\t\t\t}\n+\t\t\tfor (InputChannel inputChannel : inputChannels.values()) {\n+\t\t\t\tif (inputChannel instanceof RemoteRecoveredInputChannel) {\n+\t\t\t\t\t((RemoteRecoveredInputChannel) inputChannel).assignExclusiveSegments();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+", "originalCommit": "81a54f6daa2ab03d404ec53a32f7c2ece7ce56cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyNDEyOA==", "url": "https://github.com/apache/flink/pull/13539#discussion_r499424128", "bodyText": "I'll add. In short, the #number of required buffers is now higher than a few tests (and possibly production setups) assume. Without the lazy initialization, you cannot simulate backpressure in a few scenarios as easily.", "author": "AHeise", "createdAt": "2020-10-05T08:24:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3OTAwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "dda8bcfa7c326ccc4af76e303edd205a1b282a6e", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGate.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGate.java\nindex e428507e53c..d63556caef0 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGate.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGate.java\n\n@@ -248,18 +247,7 @@ public class SingleInputGate extends IndexedInputGate {\n \t}\n \n \t@Override\n-\tpublic CompletableFuture<?> readRecoveredState(ExecutorService executor, ChannelStateReader reader) throws IOException {\n-\t\tsynchronized (requestLock) {\n-\t\t\tif (closeFuture.isDone()) {\n-\t\t\t\treturn FutureUtils.completedVoidFuture();\n-\t\t\t}\n-\t\t\tfor (InputChannel inputChannel : inputChannels.values()) {\n-\t\t\t\tif (inputChannel instanceof RemoteRecoveredInputChannel) {\n-\t\t\t\t\t((RemoteRecoveredInputChannel) inputChannel).assignExclusiveSegments();\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n+\tpublic CompletableFuture<?> readRecoveredState(ExecutorService executor, ChannelStateReader reader) {\n \t\tList<CompletableFuture<?>> futures = getStateConsumedFuture();\n \n \t\texecutor.submit(() -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4MjczOA==", "url": "https://github.com/apache/flink/pull/13539#discussion_r499382738", "bodyText": "I'm not sure if I understand this bug and the fix. Why is allocating exclusive buffers for LocalRecoveredInputChannel fixing the problem? Isn't it just reducing the window for the live lock to happen? What if downstream tasks are scheduled with a significant delay (exclusive buffers assignment happens after upstream tasks already acquired lot's of buffers).\nIn other words, Isn't this a semi fix for this bug https://issues.apache.org/jira/browse/FLINK-13203", "author": "pnowojski", "createdAt": "2020-10-05T07:08:39Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/LocalRecoveredInputChannel.java", "diffHunk": "@@ -42,8 +42,17 @@\n \t\t\tTaskEventPublisher taskEventPublisher,\n \t\t\tint initialBackOff,\n \t\t\tint maxBackoff,\n+\t\t\tint networkBuffersPerChannel,\n \t\t\tInputChannelMetrics metrics) {\n-\t\tsuper(inputGate, channelIndex, partitionId, initialBackOff, maxBackoff, metrics.getNumBytesInLocalCounter(), metrics.getNumBuffersInLocalCounter());\n+\t\tsuper(", "originalCommit": "d024a2f9e35958173143b16457bee0ae4acf4c7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyNTkxNg==", "url": "https://github.com/apache/flink/pull/13539#discussion_r499425916", "bodyText": "Hm you are right, it doesn't solve it completely after having read the ticket. However, without a solution for FLINK-13203, there will also not be a real solution here.\nOn the other hand, it's inherently wrong to treat local and remote channels differently during recovery (they even share the same implementation). So this commit is still fixing the issue in a best effort manner and certainly helps to improve build stability, which is an improvement of its own.", "author": "AHeise", "createdAt": "2020-10-05T08:28:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4MjczOA=="}], "type": "inlineReview", "revised_code": {"commit": "dda8bcfa7c326ccc4af76e303edd205a1b282a6e", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/LocalRecoveredInputChannel.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/LocalRecoveredInputChannel.java\nindex 30610fa101a..ba1ca9fe12a 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/LocalRecoveredInputChannel.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/LocalRecoveredInputChannel.java\n\n@@ -42,17 +42,8 @@ public class LocalRecoveredInputChannel extends RecoveredInputChannel {\n \t\t\tTaskEventPublisher taskEventPublisher,\n \t\t\tint initialBackOff,\n \t\t\tint maxBackoff,\n-\t\t\tint networkBuffersPerChannel,\n \t\t\tInputChannelMetrics metrics) {\n-\t\tsuper(\n-\t\t\tinputGate,\n-\t\t\tchannelIndex,\n-\t\t\tpartitionId,\n-\t\t\tinitialBackOff,\n-\t\t\tmaxBackoff,\n-\t\t\tmetrics.getNumBytesInLocalCounter(),\n-\t\t\tmetrics.getNumBuffersInLocalCounter(),\n-\t\t\tnetworkBuffersPerChannel);\n+\t\tsuper(inputGate, channelIndex, partitionId, initialBackOff, maxBackoff, metrics.getNumBytesInLocalCounter(), metrics.getNumBuffersInLocalCounter());\n \n \t\tthis.partitionManager = checkNotNull(partitionManager);\n \t\tthis.taskEventPublisher = checkNotNull(taskEventPublisher);\n"}}, {"oid": "dda8bcfa7c326ccc4af76e303edd205a1b282a6e", "url": "https://github.com/apache/flink/commit/dda8bcfa7c326ccc4af76e303edd205a1b282a6e", "message": "[FLINK-19027][test][network] Ensure SingleInputGateTest does not swallow exceptions during cleanup.\n\nIf any cleanup method fails, the original exception was swallowed. This commit uses try-with-resources with Guava's Closer to ensure that cleanup exception only appear as surpressed exceptions in case of test failures.\nNote that the cleanup order needs to be reversed as Closer closes in reversed order.", "committedDate": "2020-10-05T14:19:29Z", "type": "commit"}, {"oid": "c9e2508ddd1a37d59b0c352ceda75dc4e63df906", "url": "https://github.com/apache/flink/commit/c9e2508ddd1a37d59b0c352ceda75dc4e63df906", "message": "[FLINK-19027][test][network] Set exclusive and floating buffers in UnalignedCheckpointITCase.\n\nThis commit will amend the original build instability, but future commit will still ensure that a job will not livelock with a tight memory configuration.", "committedDate": "2020-10-05T14:19:55Z", "type": "commit"}, {"oid": "63cd3002b634c164d63b641c21863d68bda485be", "url": "https://github.com/apache/flink/commit/63cd3002b634c164d63b641c21863d68bda485be", "message": "[FLINK-19027][network] Only assign exclusive buffers to RecoveredRemoteInputChannels when recovering channel state.\n\nCurrently, exclusive buffers are assigned to all RecoveredRemoteInputChannels on construction, even though the channel may not read any data at all (aligned checkpoint, start from savepoint, start without checkpoint, etc.). The upcoming fix for the livelock assigns exclusive buffers also to local input channels, such that without the lazy initialization of this commit, tight memory configurations will not work anymore even if no channel state needs to be recovered at all.\n\nWith this commit, buffers are only assigned when state is actually recovered.", "committedDate": "2020-10-05T14:19:57Z", "type": "commit"}, {"oid": "1d4e06b9a9bd2b123286fdda136cdadd10a57440", "url": "https://github.com/apache/flink/commit/1d4e06b9a9bd2b123286fdda136cdadd10a57440", "message": "[FLINK-19027][network] Assign exclusive buffers to LocalRecoveredInputChannel.\n\nIf a local channel does not receive a buffer during recovery, a live lock may occur where the local channel cannot recover because it is waiting for a buffer but upstream operators are fully backpressured and cannot release a buffer.\nIt's important to treat LocalRecoveredInputChannel like RemoteInputChannels and assign exclusive buffers for recovery to avoid this situation.\n\nNote that due to FLINK-13203, it still possible to run into the livelock if the sink is deployed after upstream tasks take all buffers. However, it's a) much more unlikely and b) if FLINK-13203 gets resolved, this will then automatically also fix it for recovery.", "committedDate": "2020-10-05T14:21:16Z", "type": "commit"}, {"oid": "52830dff69c113aeb1a53a1cbe3fd859c7863a60", "url": "https://github.com/apache/flink/commit/52830dff69c113aeb1a53a1cbe3fd859c7863a60", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels.", "committedDate": "2020-10-05T14:21:16Z", "type": "commit"}, {"oid": "8c708c2846b29be724f0185f4ef3fba9643e9bf2", "url": "https://github.com/apache/flink/commit/8c708c2846b29be724f0185f4ef3fba9643e9bf2", "message": "fixup! [FLINK-19027][network] Assign exclusive buffers to LocalRecoveredInputChannel.", "committedDate": "2020-10-05T14:21:08Z", "type": "forcePushed"}, {"oid": "52830dff69c113aeb1a53a1cbe3fd859c7863a60", "url": "https://github.com/apache/flink/commit/52830dff69c113aeb1a53a1cbe3fd859c7863a60", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels.", "committedDate": "2020-10-05T14:21:16Z", "type": "forcePushed"}]}