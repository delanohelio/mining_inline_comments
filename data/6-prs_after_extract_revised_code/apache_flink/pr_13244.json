{"pr_number": 13244, "pr_title": "[FLINK-18333][jdbc] UnsignedTypeConversionITCase failed caused by MariaDB4j \"Asked to waitFor Program\"", "pr_createdAt": "2020-08-26T03:45:20Z", "pr_url": "https://github.com/apache/flink/pull/13244", "timeline": [{"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0", "url": "https://github.com/apache/flink/commit/f5fee133d28436ab73b03d05b1f6fadc8648f5d0", "message": "[FLINK-18333][jdbc] UnsignedTypeConversionITCase failed caused by MariaDB4j \"Asked to waitFor Program\"", "committedDate": "2020-08-26T03:34:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0ODc5OA==", "url": "https://github.com/apache/flink/pull/13244#discussion_r478448798", "bodyText": "log.warn?", "author": "wuchong", "createdAt": "2020-08-27T14:10:25Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();\n \t\tcreateMysqlTable();\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\ttEnv = StreamTableEnvironment.create(env);\n \t\tcreateFlinkTable();\n \t\tprepareData();\n \t}\n \n+\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t\tboolean initDbSuccess = false;\n+\t\tint i = 0;\n+\t\t//retry\n+\t\twhile (i < 3) {\n+\t\t\ttry {\n+\t\t\t\tdb = DB.newEmbeddedDB(DBConfigurationBuilder.newBuilder().build());\n+\t\t\t\tdb.start();\n+\t\t\t\tdbUrl = db.getConfiguration().getURL(DEFAULT_DB_NAME);\n+\t\t\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\t\t\ttry (Statement statement = connection.createStatement()) {\n+\t\t\t\t\tstatement.execute(\"CREATE DATABASE IF NOT EXISTS `\" + DEFAULT_DB_NAME + \"`;\");\n+\t\t\t\t\tResultSet resultSet = statement.executeQuery(\"SELECT SCHEMA_NAME FROM \" +\n+\t\t\t\t\t\t\"INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '\" + DEFAULT_DB_NAME + \"';\");\n+\t\t\t\t\tif (resultSet.next()) {\n+\t\t\t\t\t\tString dbName = resultSet.getString(1);\n+\t\t\t\t\t\tinitDbSuccess = DEFAULT_DB_NAME.equalsIgnoreCase(dbName);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tlog.info(\"Initialize DB fail caused by {}\", e);", "originalCommit": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MDA5MA==", "url": "https://github.com/apache/flink/pull/13244#discussion_r478450090", "bodyText": "stop the DB to release potential resources if errors happen?", "author": "wuchong", "createdAt": "2020-08-27T14:12:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0ODc5OA=="}], "type": "inlineReview", "revised_code": {"commit": "9c6afc2e13a7c112c0b65d0fb64b13224ec55efd", "chunk": "diff --git a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java\nindex e569ae44ad0..cd55d0e082f 100644\n--- a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java\n+++ b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java\n\n@@ -56,30 +60,23 @@ import static org.junit.Assert.assertEquals;\n  */\n public class UnsignedTypeConversionITCase extends AbstractTestBase {\n \n+\tprivate static final Logger logger = LoggerFactory.getLogger(UnsignedTypeConversionITCase.class);\n \tprivate static final String DEFAULT_DB_NAME = \"test\";\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n+\tprivate static final int INITIALIZE_DB_MAX_RETRY = 3;\n+\tprivate static DB db;\n+\tprivate static String dbUrl;\n+\tprivate static Connection connection;\n \n \tprivate StreamTableEnvironment tEnv;\n-\tprivate DB db;\n-\tprivate String dbUrl;\n-\tprivate Connection connection;\n \n-\t@Before\n-\tpublic void setUp() throws SQLException, IllegalStateException {\n-\t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tprepareMariaDB();\n-\t\tcreateMysqlTable();\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n-\t\tcreateFlinkTable();\n-\t\tprepareData();\n-\t}\n-\n-\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t@BeforeClass\n+\tpublic static void prepareMariaDB() throws IllegalStateException {\n \t\tboolean initDbSuccess = false;\n \t\tint i = 0;\n-\t\t//retry\n-\t\twhile (i < 3) {\n+\t\t//The initialization of maria db instance is a little unstable according to past CI tests.\n+\t\t//Add retry logic here to avoid initialization failure.\n+\t\twhile (i < INITIALIZE_DB_MAX_RETRY) {\n \t\t\ttry {\n \t\t\t\tdb = DB.newEmbeddedDB(DBConfigurationBuilder.newBuilder().build());\n \t\t\t\tdb.start();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MjU5Nw==", "url": "https://github.com/apache/flink/pull/13244#discussion_r478452597", "bodyText": "I would suggest to prepare DB in a @ClassBefore instead of @Before to avoid repeated initialization between tests.", "author": "wuchong", "createdAt": "2020-08-27T14:15:33Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();", "originalCommit": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c6afc2e13a7c112c0b65d0fb64b13224ec55efd", "chunk": "diff --git a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java\nindex e569ae44ad0..cd55d0e082f 100644\n--- a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java\n+++ b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java\n\n@@ -56,30 +60,23 @@ import static org.junit.Assert.assertEquals;\n  */\n public class UnsignedTypeConversionITCase extends AbstractTestBase {\n \n+\tprivate static final Logger logger = LoggerFactory.getLogger(UnsignedTypeConversionITCase.class);\n \tprivate static final String DEFAULT_DB_NAME = \"test\";\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n+\tprivate static final int INITIALIZE_DB_MAX_RETRY = 3;\n+\tprivate static DB db;\n+\tprivate static String dbUrl;\n+\tprivate static Connection connection;\n \n \tprivate StreamTableEnvironment tEnv;\n-\tprivate DB db;\n-\tprivate String dbUrl;\n-\tprivate Connection connection;\n \n-\t@Before\n-\tpublic void setUp() throws SQLException, IllegalStateException {\n-\t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tprepareMariaDB();\n-\t\tcreateMysqlTable();\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n-\t\tcreateFlinkTable();\n-\t\tprepareData();\n-\t}\n-\n-\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t@BeforeClass\n+\tpublic static void prepareMariaDB() throws IllegalStateException {\n \t\tboolean initDbSuccess = false;\n \t\tint i = 0;\n-\t\t//retry\n-\t\twhile (i < 3) {\n+\t\t//The initialization of maria db instance is a little unstable according to past CI tests.\n+\t\t//Add retry logic here to avoid initialization failure.\n+\t\twhile (i < INITIALIZE_DB_MAX_RETRY) {\n \t\t\ttry {\n \t\t\t\tdb = DB.newEmbeddedDB(DBConfigurationBuilder.newBuilder().build());\n \t\t\t\tdb.start();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1Mjk2Mg==", "url": "https://github.com/apache/flink/pull/13244#discussion_r478452962", "bodyText": "Please add more comments for why we add a retry here, we can also link the issue.", "author": "wuchong", "createdAt": "2020-08-27T14:16:06Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();\n \t\tcreateMysqlTable();\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\ttEnv = StreamTableEnvironment.create(env);\n \t\tcreateFlinkTable();\n \t\tprepareData();\n \t}\n \n+\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t\tboolean initDbSuccess = false;\n+\t\tint i = 0;\n+\t\t//retry", "originalCommit": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c6afc2e13a7c112c0b65d0fb64b13224ec55efd", "chunk": "diff --git a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java\nindex e569ae44ad0..cd55d0e082f 100644\n--- a/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java\n+++ b/flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java\n\n@@ -56,30 +60,23 @@ import static org.junit.Assert.assertEquals;\n  */\n public class UnsignedTypeConversionITCase extends AbstractTestBase {\n \n+\tprivate static final Logger logger = LoggerFactory.getLogger(UnsignedTypeConversionITCase.class);\n \tprivate static final String DEFAULT_DB_NAME = \"test\";\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n+\tprivate static final int INITIALIZE_DB_MAX_RETRY = 3;\n+\tprivate static DB db;\n+\tprivate static String dbUrl;\n+\tprivate static Connection connection;\n \n \tprivate StreamTableEnvironment tEnv;\n-\tprivate DB db;\n-\tprivate String dbUrl;\n-\tprivate Connection connection;\n \n-\t@Before\n-\tpublic void setUp() throws SQLException, IllegalStateException {\n-\t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tprepareMariaDB();\n-\t\tcreateMysqlTable();\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n-\t\tcreateFlinkTable();\n-\t\tprepareData();\n-\t}\n-\n-\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t@BeforeClass\n+\tpublic static void prepareMariaDB() throws IllegalStateException {\n \t\tboolean initDbSuccess = false;\n \t\tint i = 0;\n-\t\t//retry\n-\t\twhile (i < 3) {\n+\t\t//The initialization of maria db instance is a little unstable according to past CI tests.\n+\t\t//Add retry logic here to avoid initialization failure.\n+\t\twhile (i < INITIALIZE_DB_MAX_RETRY) {\n \t\t\ttry {\n \t\t\t\tdb = DB.newEmbeddedDB(DBConfigurationBuilder.newBuilder().build());\n \t\t\t\tdb.start();\n"}}, {"oid": "9c6afc2e13a7c112c0b65d0fb64b13224ec55efd", "url": "https://github.com/apache/flink/commit/9c6afc2e13a7c112c0b65d0fb64b13224ec55efd", "message": "address comments", "committedDate": "2020-08-28T07:29:41Z", "type": "commit"}]}