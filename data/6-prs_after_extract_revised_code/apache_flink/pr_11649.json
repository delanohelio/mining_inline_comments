{"pr_number": 11649, "pr_title": "[FLINK-15812][runtime] Archive jobs asynchronously", "pr_createdAt": "2020-04-06T18:55:23Z", "pr_url": "https://github.com/apache/flink/pull/11649", "timeline": [{"oid": "b1bdf83f8bb8fddb56e0b4cef572dffffe5668dc", "url": "https://github.com/apache/flink/commit/b1bdf83f8bb8fddb56e0b4cef572dffffe5668dc", "message": "[FLINK-15812][runtime] Archive jobs asynchronously", "committedDate": "2020-04-06T18:51:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NDkxMw==", "url": "https://github.com/apache/flink/pull/11649#discussion_r404874913", "bodyText": "nit in order to make it symmetric:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tthis.ioExecutor = ioExecutor;\n          \n          \n            \n            \t\tthis.ioExecutor = Preconditions.checkNotNull(ioExecutor);", "author": "tillrohrmann", "createdAt": "2020-04-07T14:55:35Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java", "diffHunk": "@@ -39,18 +39,25 @@\n \n \tprivate final Path archivePath;\n \n-\tJsonResponseHistoryServerArchivist(JsonArchivist jsonArchivist, Path archivePath) {\n+\tprivate final Executor ioExecutor;\n+\n+\tJsonResponseHistoryServerArchivist(JsonArchivist jsonArchivist, Path archivePath, Executor ioExecutor) {\n \t\tthis.jsonArchivist = Preconditions.checkNotNull(jsonArchivist);\n \t\tthis.archivePath = Preconditions.checkNotNull(archivePath);\n+\t\tthis.ioExecutor = ioExecutor;", "originalCommit": "b1bdf83f8bb8fddb56e0b4cef572dffffe5668dc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04f2e7a0bcfcc5b37a55d335f893f0d5f26685fd", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java b/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java\nindex c6b4a43c167..152f8f666fb 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java\n\n@@ -44,20 +44,16 @@ class JsonResponseHistoryServerArchivist implements HistoryServerArchivist {\n \tJsonResponseHistoryServerArchivist(JsonArchivist jsonArchivist, Path archivePath, Executor ioExecutor) {\n \t\tthis.jsonArchivist = Preconditions.checkNotNull(jsonArchivist);\n \t\tthis.archivePath = Preconditions.checkNotNull(archivePath);\n-\t\tthis.ioExecutor = ioExecutor;\n+\t\tthis.ioExecutor = Preconditions.checkNotNull(ioExecutor);\n \t}\n \n \t@Override\n \tpublic CompletableFuture<Acknowledge> archiveExecutionGraph(AccessExecutionGraph executionGraph) {\n-\t\tfinal CompletableFuture<Acknowledge> ackFuture = new CompletableFuture<>();\n-\t\tioExecutor.execute(() -> {\n-\t\t\ttry {\n-\t\t\t\tFsJobArchivist.archiveJob(archivePath, executionGraph.getJobID(), jsonArchivist.archiveJsonWithPath(executionGraph));\n-\t\t\t\tackFuture.complete(Acknowledge.get());\n-\t\t\t} catch (IOException e) {\n-\t\t\t\tackFuture.completeExceptionally(e);\n-\t\t\t}\n-\t\t});\n-\t\treturn ackFuture;\n+\t\treturn CompletableFuture\n+\t\t\t.runAsync(\n+\t\t\t\tThrowingRunnable.unchecked(() ->\n+\t\t\t\t\tFsJobArchivist.archiveJob(archivePath, executionGraph.getJobID(), jsonArchivist.archiveJsonWithPath(executionGraph))),\n+\t\t\t\tioExecutor)\n+\t\t\t.thenApply(ignored -> Acknowledge.get());\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3OTEyNw==", "url": "https://github.com/apache/flink/pull/11649#discussion_r404879127", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal CompletableFuture<Acknowledge> ackFuture = new CompletableFuture<>();\n          \n          \n            \n            \t\tioExecutor.execute(() -> {\n          \n          \n            \n            \t\t\ttry {\n          \n          \n            \n            \t\t\t\tFsJobArchivist.archiveJob(archivePath, executionGraph.getJobID(), jsonArchivist.archiveJsonWithPath(executionGraph));\n          \n          \n            \n            \t\t\t\tackFuture.complete(Acknowledge.get());\n          \n          \n            \n            \t\t\t} catch (IOException e) {\n          \n          \n            \n            \t\t\t\tackFuture.completeExceptionally(e);\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \t\t});\n          \n          \n            \n            \t\treturn ackFuture;\n          \n          \n            \n            return CompletableFuture\n          \n          \n            \n            \t\t\t.runAsync(\n          \n          \n            \n            \t\t\t\tThrowingRunnable.unchecked(() -> FsJobArchivist.archiveJob(\n          \n          \n            \n            \t\t\t\t\tarchivePath,\n          \n          \n            \n            \t\t\t\t\texecutionGraph.getJobID(),\n          \n          \n            \n            \t\t\t\t\tjsonArchivist.archiveJsonWithPath(executionGraph))),\n          \n          \n            \n            \t\t\t\tioExecutor)\n          \n          \n            \n            \t\t\t.thenApply(ignored -> Acknowledge.get());", "author": "tillrohrmann", "createdAt": "2020-04-07T15:00:32Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java", "diffHunk": "@@ -39,18 +39,25 @@\n \n \tprivate final Path archivePath;\n \n-\tJsonResponseHistoryServerArchivist(JsonArchivist jsonArchivist, Path archivePath) {\n+\tprivate final Executor ioExecutor;\n+\n+\tJsonResponseHistoryServerArchivist(JsonArchivist jsonArchivist, Path archivePath, Executor ioExecutor) {\n \t\tthis.jsonArchivist = Preconditions.checkNotNull(jsonArchivist);\n \t\tthis.archivePath = Preconditions.checkNotNull(archivePath);\n+\t\tthis.ioExecutor = ioExecutor;\n \t}\n \n \t@Override\n \tpublic CompletableFuture<Acknowledge> archiveExecutionGraph(AccessExecutionGraph executionGraph) {\n-\t\ttry {\n-\t\t\tFsJobArchivist.archiveJob(archivePath, executionGraph.getJobID(), jsonArchivist.archiveJsonWithPath(executionGraph));\n-\t\t\treturn CompletableFuture.completedFuture(Acknowledge.get());\n-\t\t} catch (IOException e) {\n-\t\t\treturn FutureUtils.completedExceptionally(e);\n-\t\t}\n+\t\tfinal CompletableFuture<Acknowledge> ackFuture = new CompletableFuture<>();\n+\t\tioExecutor.execute(() -> {\n+\t\t\ttry {\n+\t\t\t\tFsJobArchivist.archiveJob(archivePath, executionGraph.getJobID(), jsonArchivist.archiveJsonWithPath(executionGraph));\n+\t\t\t\tackFuture.complete(Acknowledge.get());\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tackFuture.completeExceptionally(e);\n+\t\t\t}\n+\t\t});\n+\t\treturn ackFuture;", "originalCommit": "b1bdf83f8bb8fddb56e0b4cef572dffffe5668dc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04f2e7a0bcfcc5b37a55d335f893f0d5f26685fd", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java b/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java\nindex c6b4a43c167..152f8f666fb 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/JsonResponseHistoryServerArchivist.java\n\n@@ -44,20 +44,16 @@ class JsonResponseHistoryServerArchivist implements HistoryServerArchivist {\n \tJsonResponseHistoryServerArchivist(JsonArchivist jsonArchivist, Path archivePath, Executor ioExecutor) {\n \t\tthis.jsonArchivist = Preconditions.checkNotNull(jsonArchivist);\n \t\tthis.archivePath = Preconditions.checkNotNull(archivePath);\n-\t\tthis.ioExecutor = ioExecutor;\n+\t\tthis.ioExecutor = Preconditions.checkNotNull(ioExecutor);\n \t}\n \n \t@Override\n \tpublic CompletableFuture<Acknowledge> archiveExecutionGraph(AccessExecutionGraph executionGraph) {\n-\t\tfinal CompletableFuture<Acknowledge> ackFuture = new CompletableFuture<>();\n-\t\tioExecutor.execute(() -> {\n-\t\t\ttry {\n-\t\t\t\tFsJobArchivist.archiveJob(archivePath, executionGraph.getJobID(), jsonArchivist.archiveJsonWithPath(executionGraph));\n-\t\t\t\tackFuture.complete(Acknowledge.get());\n-\t\t\t} catch (IOException e) {\n-\t\t\t\tackFuture.completeExceptionally(e);\n-\t\t\t}\n-\t\t});\n-\t\treturn ackFuture;\n+\t\treturn CompletableFuture\n+\t\t\t.runAsync(\n+\t\t\t\tThrowingRunnable.unchecked(() ->\n+\t\t\t\t\tFsJobArchivist.archiveJob(archivePath, executionGraph.getJobID(), jsonArchivist.archiveJsonWithPath(executionGraph))),\n+\t\t\t\tioExecutor)\n+\t\t\t.thenApply(ignored -> Acknowledge.get());\n \t}\n }\n"}}, {"oid": "04f2e7a0bcfcc5b37a55d335f893f0d5f26685fd", "url": "https://github.com/apache/flink/commit/04f2e7a0bcfcc5b37a55d335f893f0d5f26685fd", "message": "address comments", "committedDate": "2020-04-08T09:26:36Z", "type": "commit"}]}