{"pr_number": 10931, "pr_title": "[FLINK-15603][metrics] Add checkpointStartDelay metric", "pr_createdAt": "2020-01-23T08:32:02Z", "pr_url": "https://github.com/apache/flink/pull/10931", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5MTY4MQ==", "url": "https://github.com/apache/flink/pull/10931#discussion_r369991681", "bodyText": "1_000_000, while you usually don't use a separator up to 9999, once you start, you use it consistently every 3 places.\nWhy storing it as nanos at all? Should we just track it as ms and only display it as nano (for consistency?). We are faking a precision that is not there.", "author": "AHeise", "createdAt": "2020-01-23T08:49:43Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierHandler.java", "diffHunk": "@@ -95,4 +101,10 @@ protected void notifyAbortOnCancellationBarrier(long checkpointId) throws Except\n \tprotected void notifyAbort(long checkpointId, CheckpointException cause) throws Exception {\n \t\ttoNotifyOnCheckpoint.abortCheckpointOnBarrier(checkpointId, cause);\n \t}\n+\n+\tprotected void markCheckpointStart(long checkpointCreationTimestamp) {\n+\t\tlatestCheckpointStartDelayNanos = 1000_000 * Math.max(", "originalCommit": "b43b813c97413608b68d0672c312b92b23e1d4e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTkzOQ==", "url": "https://github.com/apache/flink/pull/10931#discussion_r370009939", "bodyText": "It's in the ns due to consistency with the existing method/field getAlignmentDurationNanos  and checkpointAlignmentTime metric.\nRe 1_000_000, I don't think that it increases readability, does it matter?", "author": "pnowojski", "createdAt": "2020-01-23T09:30:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5MTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAzMTE3Mg==", "url": "https://github.com/apache/flink/pull/10931#discussion_r370031172", "bodyText": "I found it weird to read, but it's clearly a nit.", "author": "AHeise", "createdAt": "2020-01-23T10:11:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5MTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAzMTY2MA==", "url": "https://github.com/apache/flink/pull/10931#discussion_r370031660", "bodyText": "It's in the ns due to consistency with the existing method/field getAlignmentDurationNanos and checkpointAlignmentTime metric.\n\nI'd be okay with leaving as is. However, I don't think consistency is needed as the unit is carried in the name.", "author": "AHeise", "createdAt": "2020-01-23T10:12:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5MTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA4OTM4MA==", "url": "https://github.com/apache/flink/pull/10931#discussion_r370089380", "bodyText": "Whether it is in the name or not, I think is a secondary issue. If we provide some stats, it's best if all have the same units.\nhttps://ci.apache.org/projects/flink/flink-docs-stable/monitoring/metrics.html#checkpointing\nhowever, annoying thing is, that in this class yes, all units are in nanos, but in other places it's millis (7 metrics in millis vs 2 in nanos?). More over, web ui is also using millis only...", "author": "pnowojski", "createdAt": "2020-01-23T12:28:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5MTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5MDAyMQ==", "url": "https://github.com/apache/flink/pull/10931#discussion_r370090021", "bodyText": "I guess after all, I would be leaning towards converging towards millis, so changing this new metric to millis as well... WDYT?", "author": "pnowojski", "createdAt": "2020-01-23T12:30:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5MTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5MjI1Ng==", "url": "https://github.com/apache/flink/pull/10931#discussion_r370092256", "bodyText": "Yes, I'd convert to ms. I don't see why any user profits from ns.\nIf it was some per-record metric, I'd agree with nano (like in Kinesis?).\nIt's technically much too complicated to actually produce nano-precision given the expected usability gain.", "author": "AHeise", "createdAt": "2020-01-23T12:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5MTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDY4Mg==", "url": "https://github.com/apache/flink/pull/10931#discussion_r370160682", "bodyText": "Offline discussion consensus was to:\n\nIn order to have consistency start converging all of the metrics (when adding new ones) to nano seconds. To nanoseconds instead of milliseconds, because some metrics might need this extra precision\nAlways adding the unit (Nanos) suffix to the  metric name", "author": "pnowojski", "createdAt": "2020-01-23T14:48:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5MTY4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "753e1073d4b9d298c8e5b50a3ddc1815c8b36a40", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierHandler.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierHandler.java\nindex b15f086749a..572d956f856 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierHandler.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierHandler.java\n\n@@ -103,7 +103,7 @@ public abstract class CheckpointBarrierHandler {\n \t}\n \n \tprotected void markCheckpointStart(long checkpointCreationTimestamp) {\n-\t\tlatestCheckpointStartDelayNanos = 1000_000 * Math.max(\n+\t\tlatestCheckpointStartDelayNanos = 1_000_000 * Math.max(\n \t\t\t0,\n \t\t\tSystem.currentTimeMillis() - checkpointCreationTimestamp);\n \t}\n"}}, {"oid": "ee6d65a614f081d582138c02cbaa5693ab1c00d9", "url": "https://github.com/apache/flink/commit/ee6d65a614f081d582138c02cbaa5693ab1c00d9", "message": "[FLINK-15603][metrics] Add checkpointStartDelayNanos metric\n\nThe time in nanoseconds that elapsed between the creation of the last checkpoint and\nthe time when the checkpointing process has started by this Task. This delay shows\nhow long it takes for a first checkpoint barrier to reach the task. Back-pressure will\nincrease this value.", "committedDate": "2020-01-23T14:59:41Z", "type": "forcePushed"}, {"oid": "753e1073d4b9d298c8e5b50a3ddc1815c8b36a40", "url": "https://github.com/apache/flink/commit/753e1073d4b9d298c8e5b50a3ddc1815c8b36a40", "message": "[FLINK-15603][metrics] Add checkpointStartDelayNanos metric\n\nThe time in nanoseconds that elapsed between the creation of the last checkpoint and\nthe time when the checkpointing process has started by this Task. This delay shows\nhow long it takes for a first checkpoint barrier to reach the task. Back-pressure will\nincrease this value.", "committedDate": "2020-01-23T15:01:09Z", "type": "forcePushed"}, {"oid": "6ef7018344b2171bdb55c9770d4326eb8e0fdb21", "url": "https://github.com/apache/flink/commit/6ef7018344b2171bdb55c9770d4326eb8e0fdb21", "message": "[FLINK-15603][metrics] Add checkpointStartDelayNanos metric\n\nThe time in nanoseconds that elapsed between the creation of the last checkpoint and\nthe time when the checkpointing process has started by this Task. This delay shows\nhow long it takes for a first checkpoint barrier to reach the task. Back-pressure will\nincrease this value.", "committedDate": "2020-01-24T08:55:18Z", "type": "commit"}, {"oid": "6ef7018344b2171bdb55c9770d4326eb8e0fdb21", "url": "https://github.com/apache/flink/commit/6ef7018344b2171bdb55c9770d4326eb8e0fdb21", "message": "[FLINK-15603][metrics] Add checkpointStartDelayNanos metric\n\nThe time in nanoseconds that elapsed between the creation of the last checkpoint and\nthe time when the checkpointing process has started by this Task. This delay shows\nhow long it takes for a first checkpoint barrier to reach the task. Back-pressure will\nincrease this value.", "committedDate": "2020-01-24T08:55:18Z", "type": "forcePushed"}]}