{"pr_number": 12320, "pr_title": "[FLINK-17887][table][connector] Improve interface of ScanFormatFactory and SinkFormatFactory", "pr_createdAt": "2020-05-25T12:41:07Z", "pr_url": "https://github.com/apache/flink/pull/12320", "timeline": [{"oid": "1ad6eea2421dd2c9950f19ff2fd5ee54bb66c6f0", "url": "https://github.com/apache/flink/commit/1ad6eea2421dd2c9950f19ff2fd5ee54bb66c6f0", "message": "[FLINK-17887][table][connector] Improve interface of ScanFormatFactory and SinkFormatFactory\n\n1. Have a common interface DynamicTableSource.Context, and make Context of ScanTableSource and LookupTableSource extend it, and rename them to LookupContext and ScanContext\n2. Change parameter of ScanFormat.createScanFormat from ScanTableSource.Context to DynamicTableSource.Context\n3. Rename ScanFormat.createScanFormat to DecodingFormat#createRuntimeDecoder()\n4. Rename SinkFormat.createSinkFormat to EncodingFormat#createRuntimeEncoder()\n5. Rename ScanFormatFactory to DecodingFormatFactory\n6. Rename SinkFormatFactory to EncodingFormatFactory", "committedDate": "2020-05-28T05:49:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjU5Mg==", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912592", "bodyText": "fix wrong indention here and at other locations", "author": "twalthr", "createdAt": "2020-05-31T05:52:05Z", "path": "flink-connectors/flink-connector-kafka-0.11/src/test/java/org/apache/flink/streaming/connectors/kafka/table/Kafka011DynamicTableFactoryTest.java", "diffHunk": "@@ -82,12 +82,12 @@ protected KafkaDynamicSinkBase getExpectedSink(\n \t\t\tString topic,\n \t\t\tProperties properties,\n \t\t\tOptional<FlinkKafkaPartitioner<RowData>> partitioner,\n-\t\t\tSinkFormat<SerializationSchema<RowData>> sinkFormat) {\n+\t\t\tEncodingFormat<SerializationSchema<RowData>> encodingFormat) {\n \t\treturn new Kafka011DynamicSink(\n \t\t\t\tconsumedDataType,\n \t\t\t\ttopic,\n \t\t\t\tproperties,\n \t\t\t\tpartitioner,\n-\t\t\t\tsinkFormat);\n+\t\t\tencodingFormat);", "originalCommit": "80bfdeac6274c0cfa3218da26c88f7e05d517f86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29cda133f6e006742e1518916128bb19b6cd6518", "chunk": "diff --git a/flink-connectors/flink-connector-kafka-0.11/src/test/java/org/apache/flink/streaming/connectors/kafka/table/Kafka011DynamicTableFactoryTest.java b/flink-connectors/flink-connector-kafka-0.11/src/test/java/org/apache/flink/streaming/connectors/kafka/table/Kafka011DynamicTableFactoryTest.java\nindex aae418b42f..37ecf1580f 100644\n--- a/flink-connectors/flink-connector-kafka-0.11/src/test/java/org/apache/flink/streaming/connectors/kafka/table/Kafka011DynamicTableFactoryTest.java\n+++ b/flink-connectors/flink-connector-kafka-0.11/src/test/java/org/apache/flink/streaming/connectors/kafka/table/Kafka011DynamicTableFactoryTest.java\n\n@@ -88,6 +88,6 @@ public class Kafka011DynamicTableFactoryTest extends KafkaDynamicTableFactoryTes\n \t\t\t\ttopic,\n \t\t\t\tproperties,\n \t\t\t\tpartitioner,\n-\t\t\tencodingFormat);\n+\t\t\t\tencodingFormat);\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjYzNA==", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912634", "bodyText": "update error message?", "author": "twalthr", "createdAt": "2020-05-31T05:52:48Z", "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSinkBase.java", "diffHunk": "@@ -63,23 +63,23 @@ protected KafkaDynamicSinkBase(\n \t\t\tString topic,\n \t\t\tProperties properties,\n \t\t\tOptional<FlinkKafkaPartitioner<RowData>> partitioner,\n-\t\t\tSinkFormat<SerializationSchema<RowData>> sinkFormat) {\n+\t\t\tEncodingFormat<SerializationSchema<RowData>> encodingFormat) {\n \t\tthis.consumedDataType = Preconditions.checkNotNull(consumedDataType, \"Consumed data type must not be null.\");\n \t\tthis.topic = Preconditions.checkNotNull(topic, \"Topic must not be null.\");\n \t\tthis.properties = Preconditions.checkNotNull(properties, \"Properties must not be null.\");\n \t\tthis.partitioner = Preconditions.checkNotNull(partitioner, \"Partitioner must not be null.\");\n-\t\tthis.sinkFormat = Preconditions.checkNotNull(sinkFormat, \"Sink format must not be null.\");\n+\t\tthis.encodingFormat = Preconditions.checkNotNull(encodingFormat, \"Sink format must not be null.\");", "originalCommit": "80bfdeac6274c0cfa3218da26c88f7e05d517f86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29cda133f6e006742e1518916128bb19b6cd6518", "chunk": "diff --git a/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSinkBase.java b/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSinkBase.java\nindex e95f0ac3b1..44058d2f5c 100644\n--- a/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSinkBase.java\n+++ b/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSinkBase.java\n\n@@ -68,7 +68,7 @@ public abstract class KafkaDynamicSinkBase implements DynamicTableSink {\n \t\tthis.topic = Preconditions.checkNotNull(topic, \"Topic must not be null.\");\n \t\tthis.properties = Preconditions.checkNotNull(properties, \"Properties must not be null.\");\n \t\tthis.partitioner = Preconditions.checkNotNull(partitioner, \"Partitioner must not be null.\");\n-\t\tthis.encodingFormat = Preconditions.checkNotNull(encodingFormat, \"Sink format must not be null.\");\n+\t\tthis.encodingFormat = Preconditions.checkNotNull(encodingFormat, \"Encoding format must not be null.\");\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjY4Mw==", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912683", "bodyText": "fix wrong indention and remove \"Scan\" from Javadoc?", "author": "twalthr", "createdAt": "2020-05-31T05:53:45Z", "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSourceBase.java", "diffHunk": "@@ -85,7 +85,7 @@\n \t * @param outputDataType         Source produced data type\n \t * @param topic                  Kafka topic to consume.\n \t * @param properties             Properties for the Kafka consumer.\n-\t * @param scanFormat             Scan format for decoding records from Kafka.\n+\t * @param decodingFormat             Scan format for decoding records from Kafka.", "originalCommit": "80bfdeac6274c0cfa3218da26c88f7e05d517f86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29cda133f6e006742e1518916128bb19b6cd6518", "chunk": "diff --git a/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSourceBase.java b/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSourceBase.java\nindex fd27aec726..519cc8c805 100644\n--- a/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSourceBase.java\n+++ b/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSourceBase.java\n\n@@ -85,7 +85,7 @@ public abstract class KafkaDynamicSourceBase implements ScanTableSource {\n \t * @param outputDataType         Source produced data type\n \t * @param topic                  Kafka topic to consume.\n \t * @param properties             Properties for the Kafka consumer.\n-\t * @param decodingFormat             Scan format for decoding records from Kafka.\n+\t * @param decodingFormat         Decoding format for decoding records from Kafka.\n \t * @param startupMode            Startup mode for the contained consumer.\n \t * @param specificStartupOffsets Specific startup offsets; only relevant when startup\n \t *                               mode is {@link StartupMode#SPECIFIC_OFFSETS}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjc2NQ==", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912765", "bodyText": "nit: for reading rows", "author": "twalthr", "createdAt": "2020-05-31T05:55:21Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/DecodingFormat.java", "diffHunk": "@@ -19,19 +19,19 @@\n package org.apache.flink.table.connector.format;\n \n import org.apache.flink.annotation.PublicEvolving;\n-import org.apache.flink.table.connector.source.ScanTableSource;\n+import org.apache.flink.table.connector.source.DynamicTableSource;\n import org.apache.flink.table.types.DataType;\n \n /**\n- * A {@link Format} for a {@link ScanTableSource}.\n+ * A {@link Format} for a {@link DynamicTableSource} to reading rows.", "originalCommit": "80bfdeac6274c0cfa3218da26c88f7e05d517f86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29cda133f6e006742e1518916128bb19b6cd6518", "chunk": "diff --git a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/DecodingFormat.java b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/DecodingFormat.java\nindex 960ab3c2d8..f43302643d 100644\n--- a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/DecodingFormat.java\n+++ b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/DecodingFormat.java\n\n@@ -23,7 +23,7 @@ import org.apache.flink.table.connector.source.DynamicTableSource;\n import org.apache.flink.table.types.DataType;\n \n /**\n- * A {@link Format} for a {@link DynamicTableSource} to reading rows.\n+ * A {@link Format} for a {@link DynamicTableSource} for reading rows.\n  *\n  * @param <I> runtime interface needed by the table source\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjgxNw==", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912817", "bodyText": "we can remove the e.g. it is only for those two locations now", "author": "twalthr", "createdAt": "2020-05-31T05:56:34Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/Format.java", "diffHunk": "@@ -34,15 +34,15 @@\n  *\n  * <p>Formats can be distinguished along two dimensions:\n  * <ul>\n- *     <li>Context in which the format is applied (e.g. {@link ScanTableSource} or {@link DynamicTableSink}).\n+ *     <li>Context in which the format is applied (e.g. {@link DynamicTableSource} or {@link DynamicTableSink}).", "originalCommit": "80bfdeac6274c0cfa3218da26c88f7e05d517f86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29cda133f6e006742e1518916128bb19b6cd6518", "chunk": "diff --git a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/Format.java b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/Format.java\nindex c30d183a7c..917731669a 100644\n--- a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/Format.java\n+++ b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/Format.java\n\n@@ -34,7 +34,7 @@ import org.apache.flink.table.factories.DynamicTableFactory;\n  *\n  * <p>Formats can be distinguished along two dimensions:\n  * <ul>\n- *     <li>Context in which the format is applied (e.g. {@link DynamicTableSource} or {@link DynamicTableSink}).\n+ *     <li>Context in which the format is applied ({@link DynamicTableSource} or {@link DynamicTableSink}).\n  *     <li>Runtime implementation interface that is required (e.g. {@link DeserializationSchema} or\n  *     some bulk interface).</li>\n  * </ul>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjk1OA==", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912958", "bodyText": "fix formatting here and below", "author": "twalthr", "createdAt": "2020-05-31T05:59:37Z", "path": "flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestDynamicTableFactory.java", "diffHunk": "@@ -134,13 +134,14 @@ public String factoryIdentifier() {\n \tpublic static class DynamicTableSourceMock implements ScanTableSource {\n \n \t\tpublic final String target;\n-\t\tpublic final @Nullable ScanFormat<DeserializationSchema<RowData>> sourceKeyFormat;\n-\t\tpublic final ScanFormat<DeserializationSchema<RowData>> sourceValueFormat;\n+\t\tpublic final @Nullable\n+\t\tDecodingFormat<DeserializationSchema<RowData>> sourceKeyFormat;", "originalCommit": "80bfdeac6274c0cfa3218da26c88f7e05d517f86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29cda133f6e006742e1518916128bb19b6cd6518", "chunk": "diff --git a/flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestDynamicTableFactory.java b/flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestDynamicTableFactory.java\nindex 4ad933e0e9..ad1de6b8cb 100644\n--- a/flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestDynamicTableFactory.java\n+++ b/flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestDynamicTableFactory.java\n\n@@ -134,17 +134,16 @@ public final class TestDynamicTableFactory implements DynamicTableSourceFactory,\n \tpublic static class DynamicTableSourceMock implements ScanTableSource {\n \n \t\tpublic final String target;\n-\t\tpublic final @Nullable\n-\t\tDecodingFormat<DeserializationSchema<RowData>> sourceKeyFormat;\n-\t\tpublic final DecodingFormat<DeserializationSchema<RowData>> sourceValueFormat;\n+\t\tpublic final @Nullable DecodingFormat<DeserializationSchema<RowData>> keyFormat;\n+\t\tpublic final DecodingFormat<DeserializationSchema<RowData>> valueFormat;\n \n \t\tDynamicTableSourceMock(\n \t\t\t\tString target,\n-\t\t\t\t@Nullable DecodingFormat<DeserializationSchema<RowData>> sourceKeyFormat,\n-\t\t\t\tDecodingFormat<DeserializationSchema<RowData>> sourceValueFormat) {\n+\t\t\t\t@Nullable DecodingFormat<DeserializationSchema<RowData>> keyFormat,\n+\t\t\t\tDecodingFormat<DeserializationSchema<RowData>> valueFormat) {\n \t\t\tthis.target = target;\n-\t\t\tthis.sourceKeyFormat = sourceKeyFormat;\n-\t\t\tthis.sourceValueFormat = sourceValueFormat;\n+\t\t\tthis.keyFormat = keyFormat;\n+\t\t\tthis.valueFormat = valueFormat;\n \t\t}\n \n \t\t@Override\n"}}, {"oid": "29cda133f6e006742e1518916128bb19b6cd6518", "url": "https://github.com/apache/flink/commit/29cda133f6e006742e1518916128bb19b6cd6518", "message": "[FLINK-17887][table][connector] Improve interface of ScanFormatFactory and SinkFormatFactory\n\n1. Have a common interface DynamicTableSource.Context, and make Context of ScanTableSource and LookupTableSource extend it, and rename them to LookupContext and ScanContext\n2. Change parameter of ScanFormat.createScanFormat from ScanTableSource.Context to DynamicTableSource.Context\n3. Rename ScanFormat.createScanFormat to DecodingFormat#createRuntimeDecoder()\n4. Rename SinkFormat.createSinkFormat to EncodingFormat#createRuntimeEncoder()\n5. Rename ScanFormatFactory to DecodingFormatFactory\n6. Rename SinkFormatFactory to EncodingFormatFactory", "committedDate": "2020-05-31T13:48:15Z", "type": "commit"}, {"oid": "29cda133f6e006742e1518916128bb19b6cd6518", "url": "https://github.com/apache/flink/commit/29cda133f6e006742e1518916128bb19b6cd6518", "message": "[FLINK-17887][table][connector] Improve interface of ScanFormatFactory and SinkFormatFactory\n\n1. Have a common interface DynamicTableSource.Context, and make Context of ScanTableSource and LookupTableSource extend it, and rename them to LookupContext and ScanContext\n2. Change parameter of ScanFormat.createScanFormat from ScanTableSource.Context to DynamicTableSource.Context\n3. Rename ScanFormat.createScanFormat to DecodingFormat#createRuntimeDecoder()\n4. Rename SinkFormat.createSinkFormat to EncodingFormat#createRuntimeEncoder()\n5. Rename ScanFormatFactory to DecodingFormatFactory\n6. Rename SinkFormatFactory to EncodingFormatFactory", "committedDate": "2020-05-31T13:48:15Z", "type": "forcePushed"}]}