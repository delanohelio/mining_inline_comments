{"pr_number": 13640, "pr_title": "[FLINK-19617] Added new metric for monitoring the JVM's Metaspace memory pool usage.", "pr_createdAt": "2020-10-14T14:52:43Z", "pr_url": "https://github.com/apache/flink/pull/13640", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAzODM1OA==", "url": "https://github.com/apache/flink/pull/13640#discussion_r505038358", "bodyText": "We should log a debug message if these nothing is found", "author": "zentol", "createdAt": "2020-10-14T22:48:29Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java", "diffHunk": "@@ -214,6 +216,15 @@ static void instantiateNonHeapMemoryMetrics(final MetricGroup metricGroup) {\n \t\tinstantiateMemoryUsageMetrics(metricGroup, () -> ManagementFactory.getMemoryMXBean().getNonHeapMemoryUsage());\n \t}\n \n+\t@VisibleForTesting\n+\tstatic void instantiateMetaspaceMemoryMetrics(final MetricGroup metricGroup) {\n+\t\tManagementFactory.getMemoryPoolMXBeans()\n+\t\t\t.stream()\n+\t\t\t.filter(memoryPoolMXBean -> \"Metaspace\".equals(memoryPoolMXBean.getName()))\n+\t\t\t.findFirst()", "originalCommit": "c295945375d779e056cd2503b878c5ea6544a7a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3be4f10f27cb91571c0c96eb522cb4ca66cd2054", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java b/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java\nindex 146680adb20..412bc224dd9 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java\n\n@@ -217,12 +220,26 @@ public class MetricUtils {\n \t}\n \n \t@VisibleForTesting\n-\tstatic void instantiateMetaspaceMemoryMetrics(final MetricGroup metricGroup) {\n-\t\tManagementFactory.getMemoryPoolMXBeans()\n+\tstatic void instantiateMetaspaceMemoryMetrics(final MetricGroup parentMetricGroup) {\n+\t\tfinal List<MemoryPoolMXBean> memoryPoolMXBeans = ManagementFactory.getMemoryPoolMXBeans()\n \t\t\t.stream()\n-\t\t\t.filter(memoryPoolMXBean -> \"Metaspace\".equals(memoryPoolMXBean.getName()))\n-\t\t\t.findFirst()\n-\t\t\t.ifPresent(memoryPoolMXBean -> instantiateMemoryUsageMetrics(metricGroup, () -> memoryPoolMXBean.getUsage()));\n+\t\t\t.filter(bean -> \"Metaspace\".equals(bean.getName()))\n+\t\t\t.collect(Collectors.toList());\n+\n+\t\tif (memoryPoolMXBeans.isEmpty()) {\n+\t\t\tLOG.info(\"The '{}' metrics will not be exposed because no pool named 'Metaspace' could be found. This might be caused by the used JVM.\", METRIC_GROUP_METASPACE_NAME);\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal MetricGroup metricGroup = parentMetricGroup.addGroup(METRIC_GROUP_METASPACE_NAME);\n+\t\tfinal Iterator<MemoryPoolMXBean> beanIterator = memoryPoolMXBeans.iterator();\n+\n+\t\tfinal MemoryPoolMXBean firstPool = beanIterator.next();\n+\t\tinstantiateMemoryUsageMetrics(metricGroup, firstPool::getUsage);\n+\n+\t\tif (beanIterator.hasNext()) {\n+\t\t\tLOG.debug(\"More than one memory pool named 'Metaspace' is present. Only the first pool was used for instantiating the '{}' metrics.\", METRIC_GROUP_METASPACE_NAME);\n+\t\t}\n \t}\n \n \tprivate static void instantiateMemoryUsageMetrics(final MetricGroup metricGroup, final Supplier<MemoryUsage> memoryUsageSupplier) {\n"}}, {"oid": "f5e746e18b4799208db4ec2954719c27d74df5f5", "url": "https://github.com/apache/flink/commit/f5e746e18b4799208db4ec2954719c27d74df5f5", "message": "[FLINK-19617][docs] Extended documentation to cover newly introduced Metaspace metric.", "committedDate": "2020-10-15T07:30:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODk3NA==", "url": "https://github.com/apache/flink/pull/13640#discussion_r505408974", "bodyText": "I'm fairly sure that this is mostly a theoretical issue; for it to be usable via JMX the MBeans require some unique identification, and according to the MemoryPoolMXBean javadocs the only unique part of the identifier is in fact the name. In other words, multiple pools of this name being present would likely be a bug in the JVM.\nWe can keep this check, but it should be on debug imo.\nIt is also a bit odd to use the metric group name as the pool name, when we used another string for the actual filtering (as in, move \"Metaspace\" into a constant, use that here, and maybe make METRIC_GROUP_METASPACE_NAME an alias for this constant.)", "author": "zentol", "createdAt": "2020-10-15T09:47:22Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java", "diffHunk": "@@ -214,6 +219,29 @@ static void instantiateNonHeapMemoryMetrics(final MetricGroup metricGroup) {\n \t\tinstantiateMemoryUsageMetrics(metricGroup, () -> ManagementFactory.getMemoryMXBean().getNonHeapMemoryUsage());\n \t}\n \n+\t@VisibleForTesting\n+\tstatic void instantiateMetaspaceMemoryMetrics(final MetricGroup parentMetricGroup) {\n+\t\tfinal List<MemoryPoolMXBean> memoryPoolMXBeans = ManagementFactory.getMemoryPoolMXBeans()\n+\t\t\t.stream()\n+\t\t\t.filter(bean -> \"Metaspace\".equals(bean.getName()))\n+\t\t\t.collect(Collectors.toList());\n+\n+\t\tif (memoryPoolMXBeans.isEmpty()) {\n+\t\t\tLOG.warn(\"No memory pool named 'Metaspace' is present. The '{}' metric group is not going to be instantiated.\", METRIC_GROUP_METASPACE_NAME);\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal MetricGroup metricGroup = parentMetricGroup.addGroup(METRIC_GROUP_METASPACE_NAME);\n+\t\tfinal Iterator<MemoryPoolMXBean> beanIterator = memoryPoolMXBeans.iterator();\n+\n+\t\tfinal MemoryPoolMXBean firstPool = beanIterator.next();\n+\t\tinstantiateMemoryUsageMetrics(metricGroup, firstPool::getUsage);\n+\n+\t\tif (beanIterator.hasNext()) {\n+\t\t\tLOG.warn(\"More than one memory pool named '{}' are present. Only the first pool was used for instantiating the metric.\", METRIC_GROUP_METASPACE_NAME);", "originalCommit": "aa80dacfde367a161ab467905de79dbbeee645ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3MjM3Ng==", "url": "https://github.com/apache/flink/pull/13640#discussion_r505472376", "bodyText": "Yup, I bet it's quite theoretical. I just felt a bit uneasy about ignoring this one.\nThe pool name issue was actually not what I intended and, therefore, a \"bug\". Thanks for pointing that out.", "author": "XComp", "createdAt": "2020-10-15T11:38:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODk3NA=="}], "type": "inlineReview", "revised_code": {"commit": "3be4f10f27cb91571c0c96eb522cb4ca66cd2054", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java b/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java\nindex 72a74e55cf9..412bc224dd9 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java\n\n@@ -227,7 +227,7 @@ public class MetricUtils {\n \t\t\t.collect(Collectors.toList());\n \n \t\tif (memoryPoolMXBeans.isEmpty()) {\n-\t\t\tLOG.warn(\"No memory pool named 'Metaspace' is present. The '{}' metric group is not going to be instantiated.\", METRIC_GROUP_METASPACE_NAME);\n+\t\t\tLOG.info(\"The '{}' metrics will not be exposed because no pool named 'Metaspace' could be found. This might be caused by the used JVM.\", METRIC_GROUP_METASPACE_NAME);\n \t\t\treturn;\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwOTk3MA==", "url": "https://github.com/apache/flink/pull/13640#discussion_r505409970", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tLOG.warn(\"No memory pool named 'Metaspace' is present. The '{}' metric group is not going to be instantiated.\", METRIC_GROUP_METASPACE_NAME);\n          \n          \n            \n            \t\t\tLOG.info(\"Metaspace metrics will not be exposed because no pool named 'Metaspace' could be found. This could be due to the used JVM.\");\n          \n      \n    \n    \n  \n\nUsers typically don't like warning they can't do anything about, and the message is relatively cryptic (\"what is a metric group? what is the consequence of it not being instantiated?\"", "author": "zentol", "createdAt": "2020-10-15T09:48:39Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java", "diffHunk": "@@ -214,6 +219,29 @@ static void instantiateNonHeapMemoryMetrics(final MetricGroup metricGroup) {\n \t\tinstantiateMemoryUsageMetrics(metricGroup, () -> ManagementFactory.getMemoryMXBean().getNonHeapMemoryUsage());\n \t}\n \n+\t@VisibleForTesting\n+\tstatic void instantiateMetaspaceMemoryMetrics(final MetricGroup parentMetricGroup) {\n+\t\tfinal List<MemoryPoolMXBean> memoryPoolMXBeans = ManagementFactory.getMemoryPoolMXBeans()\n+\t\t\t.stream()\n+\t\t\t.filter(bean -> \"Metaspace\".equals(bean.getName()))\n+\t\t\t.collect(Collectors.toList());\n+\n+\t\tif (memoryPoolMXBeans.isEmpty()) {\n+\t\t\tLOG.warn(\"No memory pool named 'Metaspace' is present. The '{}' metric group is not going to be instantiated.\", METRIC_GROUP_METASPACE_NAME);", "originalCommit": "aa80dacfde367a161ab467905de79dbbeee645ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3MjUxMQ==", "url": "https://github.com/apache/flink/pull/13640#discussion_r505472511", "bodyText": "Thanks for clarification. Makes sense!", "author": "XComp", "createdAt": "2020-10-15T11:39:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwOTk3MA=="}], "type": "inlineReview", "revised_code": {"commit": "3be4f10f27cb91571c0c96eb522cb4ca66cd2054", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java b/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java\nindex 72a74e55cf9..412bc224dd9 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/metrics/util/MetricUtils.java\n\n@@ -227,7 +227,7 @@ public class MetricUtils {\n \t\t\t.collect(Collectors.toList());\n \n \t\tif (memoryPoolMXBeans.isEmpty()) {\n-\t\t\tLOG.warn(\"No memory pool named 'Metaspace' is present. The '{}' metric group is not going to be instantiated.\", METRIC_GROUP_METASPACE_NAME);\n+\t\t\tLOG.info(\"The '{}' metrics will not be exposed because no pool named 'Metaspace' could be found. This might be caused by the used JVM.\", METRIC_GROUP_METASPACE_NAME);\n \t\t\treturn;\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI5NDE3Mg==", "url": "https://github.com/apache/flink/pull/13640#discussion_r506294172", "bodyText": "Could we not return this?", "author": "zentol", "createdAt": "2020-10-16T10:59:19Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java", "diffHunk": "@@ -79,6 +84,23 @@ public void testNonHeapMetricsCompleteness() {\n \t\tAssert.assertNotNull(nonHeapMetrics.get(MetricNames.MEMORY_MAX));\n \t}\n \n+\t@Test\n+\tpublic void testMetaspaceCompleteness() {\n+\t\tfinal InterceptingOperatorMetricGroup metaspaceMetrics = new InterceptingOperatorMetricGroup();\n+\t\tfinal InterceptingOperatorMetricGroup parentMetrics = new InterceptingOperatorMetricGroup() {\n+\t\t\t@Override\n+\t\t\tpublic MetricGroup addGroup(String name) {\n+\t\t\t\treturn metaspaceMetrics;", "originalCommit": "adb8530ae6bd18071a82319fe9d43aca7b23f5d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMzMDE5MQ==", "url": "https://github.com/apache/flink/pull/13640#discussion_r506330191", "bodyText": "Good idea. I addressed it in the code, squashed all the changes into two commits and rebased the PR to the most recent master. Thanks for the review, @zentol .", "author": "XComp", "createdAt": "2020-10-16T11:44:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI5NDE3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "3be4f10f27cb91571c0c96eb522cb4ca66cd2054", "chunk": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java\nindex d561cb756d7..7cfd6b198a2 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java\n\n@@ -86,15 +86,14 @@ public class MetricUtilsTest extends TestLogger {\n \n \t@Test\n \tpublic void testMetaspaceCompleteness() {\n-\t\tfinal InterceptingOperatorMetricGroup metaspaceMetrics = new InterceptingOperatorMetricGroup();\n-\t\tfinal InterceptingOperatorMetricGroup parentMetrics = new InterceptingOperatorMetricGroup() {\n+\t\tfinal InterceptingOperatorMetricGroup metaspaceMetrics = new InterceptingOperatorMetricGroup() {\n \t\t\t@Override\n \t\t\tpublic MetricGroup addGroup(String name) {\n-\t\t\t\treturn metaspaceMetrics;\n+\t\t\t\treturn this;\n \t\t\t}\n \t\t};\n \n-\t\tMetricUtils.instantiateMetaspaceMemoryMetrics(parentMetrics);\n+\t\tMetricUtils.instantiateMetaspaceMemoryMetrics(metaspaceMetrics);\n \n \t\tAssert.assertNotNull(metaspaceMetrics.get(MetricNames.MEMORY_USED));\n \t\tAssert.assertNotNull(metaspaceMetrics.get(MetricNames.MEMORY_COMMITTED));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI5NTQ0MA==", "url": "https://github.com/apache/flink/pull/13640#discussion_r506295440", "bodyText": "same as above", "author": "zentol", "createdAt": "2020-10-16T11:00:53Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java", "diffHunk": "@@ -119,4 +141,62 @@ public void testHeapMetrics() throws Exception {\n \t\t}\n \t\tAssert.fail(\"Heap usage metric never changed it's value.\");\n \t}\n+\n+\t@Test\n+\tpublic void testNonHeapMetricUsageNotStatic() throws InterruptedException {\n+\t\tfinal InterceptingOperatorMetricGroup nonHeapMetrics = new InterceptingOperatorMetricGroup();\n+\n+\t\tMetricUtils.instantiateNonHeapMemoryMetrics(nonHeapMetrics);\n+\n+\t\t@SuppressWarnings(\"unchecked\")\n+\t\tfinal Gauge<Long> used = (Gauge<Long>) nonHeapMetrics.get(MetricNames.MEMORY_USED);\n+\n+\t\tfinal long usedNonHeapInitially = used.getValue();\n+\n+\t\t// check memory usage difference multiple times since other tests may affect memory usage as well\n+\t\tfor (int x = 0; x < 10; x++) {\n+\t\t\tfinal ByteBuffer tmpByteBuffer = ByteBuffer.allocateDirect(1024 * 1024 * 8);\n+\t\t\tfinal long usedNonHeapAfterAllocation = used.getValue();\n+\n+\t\t\tif (usedNonHeapInitially != usedNonHeapAfterAllocation) {\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\tThread.sleep(50);\n+\t\t}\n+\t\tAssert.fail(\"Non-Heap usage metric never changed it's value.\");\n+\t}\n+\n+\t@Test\n+\tpublic void testMetaspaceMetricUsageNotStatic() throws InterruptedException {\n+\t\tfinal InterceptingOperatorMetricGroup metaspaceMetrics = new InterceptingOperatorMetricGroup();\n+\t\tfinal InterceptingOperatorMetricGroup parentMetrics = new InterceptingOperatorMetricGroup() {\n+\t\t\t@Override\n+\t\t\tpublic MetricGroup addGroup(String name) {\n+\t\t\t\treturn metaspaceMetrics;", "originalCommit": "adb8530ae6bd18071a82319fe9d43aca7b23f5d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMzMDY3MQ==", "url": "https://github.com/apache/flink/pull/13640#discussion_r506330671", "bodyText": "It was addressed. See comment above.", "author": "XComp", "createdAt": "2020-10-16T11:44:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI5NTQ0MA=="}], "type": "inlineReview", "revised_code": {"commit": "3be4f10f27cb91571c0c96eb522cb4ca66cd2054", "chunk": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java\nindex d561cb756d7..7cfd6b198a2 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/metrics/util/MetricUtilsTest.java\n\n@@ -168,15 +167,14 @@ public class MetricUtilsTest extends TestLogger {\n \n \t@Test\n \tpublic void testMetaspaceMetricUsageNotStatic() throws InterruptedException {\n-\t\tfinal InterceptingOperatorMetricGroup metaspaceMetrics = new InterceptingOperatorMetricGroup();\n-\t\tfinal InterceptingOperatorMetricGroup parentMetrics = new InterceptingOperatorMetricGroup() {\n+\t\tfinal InterceptingOperatorMetricGroup metaspaceMetrics = new InterceptingOperatorMetricGroup() {\n \t\t\t@Override\n \t\t\tpublic MetricGroup addGroup(String name) {\n-\t\t\t\treturn metaspaceMetrics;\n+\t\t\t\treturn this;\n \t\t\t}\n \t\t};\n \n-\t\tMetricUtils.instantiateMetaspaceMemoryMetrics(parentMetrics);\n+\t\tMetricUtils.instantiateMetaspaceMemoryMetrics(metaspaceMetrics);\n \n \t\t@SuppressWarnings(\"unchecked\")\n \t\tfinal Gauge<Long> used = (Gauge<Long>) metaspaceMetrics.get(MetricNames.MEMORY_USED);\n"}}, {"oid": "3be4f10f27cb91571c0c96eb522cb4ca66cd2054", "url": "https://github.com/apache/flink/commit/3be4f10f27cb91571c0c96eb522cb4ca66cd2054", "message": "[FLINK-19617][runtime] Introduced new metric for monitoring the JVM Metaspace.", "committedDate": "2020-10-16T11:41:07Z", "type": "forcePushed"}, {"oid": "fb535fe7ac77047fe3ba0991c85620db3a42fb83", "url": "https://github.com/apache/flink/commit/fb535fe7ac77047fe3ba0991c85620db3a42fb83", "message": "[hotfix][runtime] Added missing test MetricUtilsTest.testNonHeapMetricUsageNotStatic and renamed testHeapMetric to make it more descriptive.", "committedDate": "2020-10-16T11:42:31Z", "type": "commit"}, {"oid": "e957d897105a0bff335d8db266b9bc518942eae1", "url": "https://github.com/apache/flink/commit/e957d897105a0bff335d8db266b9bc518942eae1", "message": "[FLINK-19617][runtime] Introduced new metric for monitoring the JVM Metaspace.", "committedDate": "2020-10-16T11:42:31Z", "type": "commit"}, {"oid": "e957d897105a0bff335d8db266b9bc518942eae1", "url": "https://github.com/apache/flink/commit/e957d897105a0bff335d8db266b9bc518942eae1", "message": "[FLINK-19617][runtime] Introduced new metric for monitoring the JVM Metaspace.", "committedDate": "2020-10-16T11:42:31Z", "type": "forcePushed"}]}