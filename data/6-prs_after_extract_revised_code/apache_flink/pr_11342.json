{"pr_number": 11342, "pr_title": "[FLINK-16483][python] Add Python building blocks to make sure the basic functionality of vectorized Python UDF could work", "pr_createdAt": "2020-03-07T13:59:08Z", "pr_url": "https://github.com/apache/flink/pull/11342", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0NDY3NA==", "url": "https://github.com/apache/flink/pull/11342#discussion_r389744674", "bodyText": "Maybe we should not contain this commit in this PR? as it is included in FLINK-16273\uff1fotherwise there will be two commits for addressing the same problem.", "author": "hequn8128", "createdAt": "2020-03-09T14:56:42Z", "path": "flink-python/src/main/java/org/apache/flink/table/runtime/runners/python/scalar/arrow/AbstractArrowPythonScalarFunctionRunner.java", "diffHunk": "@@ -46,6 +46,12 @@\n \n \tprivate static final String SCHEMA_ARROW_CODER_URN = \"flink:coder:schema:scalar_function:arrow:v1\";\n \n+\tstatic {", "originalCommit": "27f93cc605b980ae0ce93b1d5503031ae98f6cd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e82d816f679e1ff790ebeae58ec6501411831b2", "chunk": "diff --git a/flink-python/src/main/java/org/apache/flink/table/runtime/runners/python/scalar/arrow/AbstractArrowPythonScalarFunctionRunner.java b/flink-python/src/main/java/org/apache/flink/table/runtime/runners/python/scalar/arrow/AbstractArrowPythonScalarFunctionRunner.java\nindex cb12d70cda..7d48ee311e 100644\n--- a/flink-python/src/main/java/org/apache/flink/table/runtime/runners/python/scalar/arrow/AbstractArrowPythonScalarFunctionRunner.java\n+++ b/flink-python/src/main/java/org/apache/flink/table/runtime/runners/python/scalar/arrow/AbstractArrowPythonScalarFunctionRunner.java\n\n@@ -46,12 +46,6 @@ public abstract class AbstractArrowPythonScalarFunctionRunner<IN> extends Abstra\n \n \tprivate static final String SCHEMA_ARROW_CODER_URN = \"flink:coder:schema:scalar_function:arrow:v1\";\n \n-\tstatic {\n-\t\t// Arrow requires the property io.netty.tryReflectionSetAccessible to\n-\t\t// be set to true for JDK >= 9. Please refer to ARROW-5412 for more details.\n-\t\tSystem.setProperty(\"io.netty.tryReflectionSetAccessible\", \"true\");\n-\t}\n-\n \t/**\n \t * Max number of elements to include in an arrow batch.\n \t */\n"}}, {"oid": "0e82d816f679e1ff790ebeae58ec6501411831b2", "url": "https://github.com/apache/flink/commit/0e82d816f679e1ff790ebeae58ec6501411831b2", "message": "address review", "committedDate": "2020-03-10T03:14:09Z", "type": "forcePushed"}, {"oid": "e431a7c17f43bba9ae2dd6e471b0191942cb7287", "url": "https://github.com/apache/flink/commit/e431a7c17f43bba9ae2dd6e471b0191942cb7287", "message": "[FLINK-16483][python] Add Python building blocks to make sure the basic functionality of vectorized Python UDF could work", "committedDate": "2020-03-10T03:18:08Z", "type": "commit"}, {"oid": "c506306f83eec4450719dfdfb2fe205a3fb69857", "url": "https://github.com/apache/flink/commit/c506306f83eec4450719dfdfb2fe205a3fb69857", "message": "address review", "committedDate": "2020-03-10T03:18:08Z", "type": "commit"}, {"oid": "c506306f83eec4450719dfdfb2fe205a3fb69857", "url": "https://github.com/apache/flink/commit/c506306f83eec4450719dfdfb2fe205a3fb69857", "message": "address review", "committedDate": "2020-03-10T03:18:08Z", "type": "forcePushed"}]}