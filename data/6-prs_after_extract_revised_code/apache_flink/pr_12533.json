{"pr_number": 12533, "pr_title": "[FLINK-18175][conf] Log final memory configuration", "pr_createdAt": "2020-06-08T16:52:17Z", "pr_url": "https://github.com/apache/flink/pull/12533", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyOTYzNw==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437529637", "bodyText": "We cannot rely on external logging in BashJavaUtils.\nThe logs have to be forced into the stdout independently from logging config to pass them to FLINK_INHERITED_LOGS env var which is used by the main Flink process to log on its startup.", "author": "azagrebin", "createdAt": "2020-06-09T15:39:51Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java", "diffHunk": "@@ -39,6 +45,7 @@\n  * Utility class for using java utilities in bash scripts.\n  */\n public class BashJavaUtils {\n+\tprivate static final Logger LOG = LoggerFactory.getLogger(BashJavaUtils.class);", "originalCommit": "9d12c7773ea58fa0fae03312d903bad263ab86ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU0MTk1Mw==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437541953", "bodyText": "It works though? All logging output goes to stdout, and the configuration things are split out based on a prefix. Everything else is treated as logging output; see flink-dist/src/main/flink-bin/bin/config.sh:extractLoggingOutputs()", "author": "zentol", "createdAt": "2020-06-09T15:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyOTYzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5NTcxMw==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437595713", "bodyText": "oh, we actually rely on default log config to output to stdout, sorry for confusion", "author": "azagrebin", "createdAt": "2020-06-09T17:22:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyOTYzNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMjc2NQ==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437532765", "bodyText": "This might be a bit tedious but I think it would be really cool to output this info in the format we use in JavaDocs for TaskExecutorProcessSpec if it works. Same for JM.", "author": "azagrebin", "createdAt": "2020-06-09T15:44:08Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java", "diffHunk": "@@ -92,9 +102,42 @@ public static void main(String[] args) throws FlinkException {\n \t\tJobManagerProcessSpec jobManagerProcessSpec = JobManagerProcessUtils.processSpecFromConfigWithNewOptionToInterpretLegacyHeap(\n \t\t\tconfiguration,\n \t\t\tJobManagerOptions.JVM_HEAP_MEMORY);\n+\n+\t\tlogMasterConfiguration(jobManagerProcessSpec);\n+\n \t\treturn Collections.singletonList(ProcessMemoryUtils.generateJvmParametersStr(jobManagerProcessSpec));\n \t}\n \n+\tprivate static void logMasterConfiguration(JobManagerProcessSpec spec) {\n+\t\tJobManagerFlinkMemory flinkMemory = spec.getFlinkMemory();\n+\t\tLOG.info(\"Final Master Memory configuration:\");\n+\t\tLOG.info(\"  Total Process Memory: {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"    Total Flink Memory: {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      Heap:             {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      Off-heap:         {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"    JVM Metaspace:      {}\", spec.getJvmMetaspaceSize().toHumanReadableString());\n+\t\tLOG.info(\"    JVM Overhead:       {}\", spec.getJvmOverheadSize().toHumanReadableString());\n+\t}\n+\n+\tprivate static void logTaskExecutorConfiguration(TaskExecutorProcessSpec spec) {\n+\t\tTaskExecutorFlinkMemory flinkMemory = spec.getFlinkMemory();\n+\t\tMemorySize totalOffHeapMemory = flinkMemory.getManaged().add(flinkMemory.getJvmDirectMemorySize());\n+\t\tLOG.info(\"Final TaskExecutor Memory configuration:\");", "originalCommit": "9d12c7773ea58fa0fae03312d903bad263ab86ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU0MDE4NA==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437540184", "bodyText": "that may be a bit overkill imo; I went more for a concise version.", "author": "zentol", "createdAt": "2020-06-09T15:53:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMjc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5Njg3OA==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437596878", "bodyText": "it is the same, just a bit more schematic, ok, maybe it can be even less readable under certain fonts or so.", "author": "azagrebin", "createdAt": "2020-06-09T17:24:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMjc2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5c5493ba5a54a128582133b188f590508abe7aec", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java b/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\nindex 6cc079f2c29..9d53db0c308 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\n\n@@ -113,7 +113,7 @@ public class BashJavaUtils {\n \t\tLOG.info(\"Final Master Memory configuration:\");\n \t\tLOG.info(\"  Total Process Memory: {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n \t\tLOG.info(\"    Total Flink Memory: {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n-\t\tLOG.info(\"      Heap:             {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      JVM Heap:         {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n \t\tLOG.info(\"      Off-heap:         {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());\n \t\tLOG.info(\"    JVM Metaspace:      {}\", spec.getJvmMetaspaceSize().toHumanReadableString());\n \t\tLOG.info(\"    JVM Overhead:       {}\", spec.getJvmOverheadSize().toHumanReadableString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMzEzMA==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437533130", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tLOG.info(\"      Heap:             {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n          \n          \n            \n            \t\tLOG.info(\"      JVM Heap:         {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());", "author": "azagrebin", "createdAt": "2020-06-09T15:44:40Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java", "diffHunk": "@@ -92,9 +102,42 @@ public static void main(String[] args) throws FlinkException {\n \t\tJobManagerProcessSpec jobManagerProcessSpec = JobManagerProcessUtils.processSpecFromConfigWithNewOptionToInterpretLegacyHeap(\n \t\t\tconfiguration,\n \t\t\tJobManagerOptions.JVM_HEAP_MEMORY);\n+\n+\t\tlogMasterConfiguration(jobManagerProcessSpec);\n+\n \t\treturn Collections.singletonList(ProcessMemoryUtils.generateJvmParametersStr(jobManagerProcessSpec));\n \t}\n \n+\tprivate static void logMasterConfiguration(JobManagerProcessSpec spec) {\n+\t\tJobManagerFlinkMemory flinkMemory = spec.getFlinkMemory();\n+\t\tLOG.info(\"Final Master Memory configuration:\");\n+\t\tLOG.info(\"  Total Process Memory: {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"    Total Flink Memory: {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      Heap:             {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());", "originalCommit": "9d12c7773ea58fa0fae03312d903bad263ab86ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5NzkxMw==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437597913", "bodyText": "I think we do not use Total for heap in docs, mostly JVM Heap", "author": "azagrebin", "createdAt": "2020-06-09T17:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMzEzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYwMDQ1MA==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437600450", "bodyText": "Although, I am also ok with Total, I would add JVM at least to align terminology more with docs.", "author": "azagrebin", "createdAt": "2020-06-09T17:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMzEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "5c5493ba5a54a128582133b188f590508abe7aec", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java b/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\nindex 6cc079f2c29..9d53db0c308 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\n\n@@ -113,7 +113,7 @@ public class BashJavaUtils {\n \t\tLOG.info(\"Final Master Memory configuration:\");\n \t\tLOG.info(\"  Total Process Memory: {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n \t\tLOG.info(\"    Total Flink Memory: {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n-\t\tLOG.info(\"      Heap:             {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      JVM Heap:         {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n \t\tLOG.info(\"      Off-heap:         {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());\n \t\tLOG.info(\"    JVM Metaspace:      {}\", spec.getJvmMetaspaceSize().toHumanReadableString());\n \t\tLOG.info(\"    JVM Overhead:       {}\", spec.getJvmOverheadSize().toHumanReadableString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMzM2MA==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437533360", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tLOG.info(\"      Total Heap Memory:     {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n          \n          \n            \n            \t\tLOG.info(\"      JVM Heap Memory:     {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());", "author": "azagrebin", "createdAt": "2020-06-09T15:44:59Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java", "diffHunk": "@@ -92,9 +102,42 @@ public static void main(String[] args) throws FlinkException {\n \t\tJobManagerProcessSpec jobManagerProcessSpec = JobManagerProcessUtils.processSpecFromConfigWithNewOptionToInterpretLegacyHeap(\n \t\t\tconfiguration,\n \t\t\tJobManagerOptions.JVM_HEAP_MEMORY);\n+\n+\t\tlogMasterConfiguration(jobManagerProcessSpec);\n+\n \t\treturn Collections.singletonList(ProcessMemoryUtils.generateJvmParametersStr(jobManagerProcessSpec));\n \t}\n \n+\tprivate static void logMasterConfiguration(JobManagerProcessSpec spec) {\n+\t\tJobManagerFlinkMemory flinkMemory = spec.getFlinkMemory();\n+\t\tLOG.info(\"Final Master Memory configuration:\");\n+\t\tLOG.info(\"  Total Process Memory: {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"    Total Flink Memory: {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      Heap:             {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      Off-heap:         {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"    JVM Metaspace:      {}\", spec.getJvmMetaspaceSize().toHumanReadableString());\n+\t\tLOG.info(\"    JVM Overhead:       {}\", spec.getJvmOverheadSize().toHumanReadableString());\n+\t}\n+\n+\tprivate static void logTaskExecutorConfiguration(TaskExecutorProcessSpec spec) {\n+\t\tTaskExecutorFlinkMemory flinkMemory = spec.getFlinkMemory();\n+\t\tMemorySize totalOffHeapMemory = flinkMemory.getManaged().add(flinkMemory.getJvmDirectMemorySize());\n+\t\tLOG.info(\"Final TaskExecutor Memory configuration:\");\n+\t\tLOG.info(\"  Total Process Memory:      {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"    Total Flink Memory:      {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      Total Heap Memory:     {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());", "originalCommit": "9d12c7773ea58fa0fae03312d903bad263ab86ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAwMDY5MA==", "url": "https://github.com/apache/flink/pull/12533#discussion_r438000690", "bodyText": "I always used Total if there are sub components. Not sure if it is necessary, but I'd probably remove either all or none.", "author": "zentol", "createdAt": "2020-06-10T09:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMzM2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAwODYwMQ==", "url": "https://github.com/apache/flink/pull/12533#discussion_r438008601", "bodyText": "Then I would prefer to keep both, at least JVM to make it more like what we use in docs.", "author": "azagrebin", "createdAt": "2020-06-10T10:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzMzM2MA=="}], "type": "inlineReview", "revised_code": {"commit": "5c5493ba5a54a128582133b188f590508abe7aec", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java b/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\nindex 6cc079f2c29..9d53db0c308 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\n\n@@ -113,7 +113,7 @@ public class BashJavaUtils {\n \t\tLOG.info(\"Final Master Memory configuration:\");\n \t\tLOG.info(\"  Total Process Memory: {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n \t\tLOG.info(\"    Total Flink Memory: {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n-\t\tLOG.info(\"      Heap:             {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      JVM Heap:         {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n \t\tLOG.info(\"      Off-heap:         {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());\n \t\tLOG.info(\"    JVM Metaspace:      {}\", spec.getJvmMetaspaceSize().toHumanReadableString());\n \t\tLOG.info(\"    JVM Overhead:       {}\", spec.getJvmOverheadSize().toHumanReadableString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzNDM3Mg==", "url": "https://github.com/apache/flink/pull/12533#discussion_r437534372", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tLOG.info(\"        Total Direct Memory: {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());\n          \n          \n            \n            \t\tLOG.info(\"        JVM Direct Memory: {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());", "author": "azagrebin", "createdAt": "2020-06-09T15:46:21Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java", "diffHunk": "@@ -92,9 +102,42 @@ public static void main(String[] args) throws FlinkException {\n \t\tJobManagerProcessSpec jobManagerProcessSpec = JobManagerProcessUtils.processSpecFromConfigWithNewOptionToInterpretLegacyHeap(\n \t\t\tconfiguration,\n \t\t\tJobManagerOptions.JVM_HEAP_MEMORY);\n+\n+\t\tlogMasterConfiguration(jobManagerProcessSpec);\n+\n \t\treturn Collections.singletonList(ProcessMemoryUtils.generateJvmParametersStr(jobManagerProcessSpec));\n \t}\n \n+\tprivate static void logMasterConfiguration(JobManagerProcessSpec spec) {\n+\t\tJobManagerFlinkMemory flinkMemory = spec.getFlinkMemory();\n+\t\tLOG.info(\"Final Master Memory configuration:\");\n+\t\tLOG.info(\"  Total Process Memory: {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"    Total Flink Memory: {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      Heap:             {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      Off-heap:         {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"    JVM Metaspace:      {}\", spec.getJvmMetaspaceSize().toHumanReadableString());\n+\t\tLOG.info(\"    JVM Overhead:       {}\", spec.getJvmOverheadSize().toHumanReadableString());\n+\t}\n+\n+\tprivate static void logTaskExecutorConfiguration(TaskExecutorProcessSpec spec) {\n+\t\tTaskExecutorFlinkMemory flinkMemory = spec.getFlinkMemory();\n+\t\tMemorySize totalOffHeapMemory = flinkMemory.getManaged().add(flinkMemory.getJvmDirectMemorySize());\n+\t\tLOG.info(\"Final TaskExecutor Memory configuration:\");\n+\t\tLOG.info(\"  Total Process Memory:      {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"    Total Flink Memory:      {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      Total Heap Memory:     {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"        Framework:           {}\", flinkMemory.getFrameworkHeap().toHumanReadableString());\n+\t\tLOG.info(\"        Task:                {}\", flinkMemory.getTaskHeap().toHumanReadableString());\n+\t\tLOG.info(\"      Total Off-heap Memory: {}\", totalOffHeapMemory.toHumanReadableString());\n+\t\tLOG.info(\"        Managed:             {}\", flinkMemory.getManaged().toHumanReadableString());\n+\t\tLOG.info(\"        Total Direct Memory: {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());", "originalCommit": "9d12c7773ea58fa0fae03312d903bad263ab86ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5c5493ba5a54a128582133b188f590508abe7aec", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java b/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\nindex 6cc079f2c29..9d53db0c308 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/BashJavaUtils.java\n\n@@ -113,7 +113,7 @@ public class BashJavaUtils {\n \t\tLOG.info(\"Final Master Memory configuration:\");\n \t\tLOG.info(\"  Total Process Memory: {}\", spec.getTotalProcessMemorySize().toHumanReadableString());\n \t\tLOG.info(\"    Total Flink Memory: {}\", flinkMemory.getTotalFlinkMemorySize().toHumanReadableString());\n-\t\tLOG.info(\"      Heap:             {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n+\t\tLOG.info(\"      JVM Heap:         {}\", flinkMemory.getJvmHeapMemorySize().toHumanReadableString());\n \t\tLOG.info(\"      Off-heap:         {}\", flinkMemory.getJvmDirectMemorySize().toHumanReadableString());\n \t\tLOG.info(\"    JVM Metaspace:      {}\", spec.getJvmMetaspaceSize().toHumanReadableString());\n \t\tLOG.info(\"    JVM Overhead:       {}\", spec.getJvmOverheadSize().toHumanReadableString());\n"}}, {"oid": "fcf5dd9fa40a098bf0d409c9a3635af65edd15ba", "url": "https://github.com/apache/flink/commit/fcf5dd9fa40a098bf0d409c9a3635af65edd15ba", "message": "[FLINK-18175][conf] Log final memory configuration", "committedDate": "2020-06-10T19:59:51Z", "type": "commit"}, {"oid": "5c5493ba5a54a128582133b188f590508abe7aec", "url": "https://github.com/apache/flink/commit/5c5493ba5a54a128582133b188f590508abe7aec", "message": "Add JVM prefix", "committedDate": "2020-06-10T19:59:51Z", "type": "commit"}, {"oid": "a1b0c37233ff7200b36ec769bedb5cd745cc0fd5", "url": "https://github.com/apache/flink/commit/a1b0c37233ff7200b36ec769bedb5cd745cc0fd5", "message": "tmp (testing)", "committedDate": "2020-06-10T19:59:51Z", "type": "forcePushed"}, {"oid": "5c5493ba5a54a128582133b188f590508abe7aec", "url": "https://github.com/apache/flink/commit/5c5493ba5a54a128582133b188f590508abe7aec", "message": "Add JVM prefix", "committedDate": "2020-06-10T19:59:51Z", "type": "forcePushed"}]}