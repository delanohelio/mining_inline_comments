{"pr_number": 13822, "pr_title": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent", "pr_createdAt": "2020-10-28T11:31:57Z", "pr_url": "https://github.com/apache/flink/pull/13822", "timeline": [{"oid": "ebbe8f9e0e55b1fb400195d83494486513a1280c", "url": "https://github.com/apache/flink/commit/ebbe8f9e0e55b1fb400195d83494486513a1280c", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-28T11:33:13Z", "type": "forcePushed"}, {"oid": "612c241aa46314c2822a6f350faf3116c1b5cce0", "url": "https://github.com/apache/flink/commit/612c241aa46314c2822a6f350faf3116c1b5cce0", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-28T11:43:03Z", "type": "forcePushed"}, {"oid": "54779f8ec9b131efd11662c22d2ff5dcd5cb2a08", "url": "https://github.com/apache/flink/commit/54779f8ec9b131efd11662c22d2ff5dcd5cb2a08", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-28T12:16:09Z", "type": "forcePushed"}, {"oid": "cecfabd36b9192284b4671fbdf48eb933ffc79e5", "url": "https://github.com/apache/flink/commit/cecfabd36b9192284b4671fbdf48eb933ffc79e5", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-28T16:07:23Z", "type": "forcePushed"}, {"oid": "c121f8a279bb69448c326dab7cee19fd5bb2096c", "url": "https://github.com/apache/flink/commit/c121f8a279bb69448c326dab7cee19fd5bb2096c", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-29T00:09:12Z", "type": "forcePushed"}, {"oid": "6e23ce525a7af28103e7abd8547b2ba6c9850567", "url": "https://github.com/apache/flink/commit/6e23ce525a7af28103e7abd8547b2ba6c9850567", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-29T00:53:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3MzYyOQ==", "url": "https://github.com/apache/flink/pull/13822#discussion_r514073629", "bodyText": "We should probably generalize ALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER + RECOVERY_COMPLETION to some BLOCKING_EVENT type.", "author": "AHeise", "createdAt": "2020-10-29T08:15:37Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java", "diffHunk": "@@ -270,7 +271,13 @@\n \t\t * ALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER indicates that this buffer represents a\n \t\t * serialized checkpoint barrier of aligned exactly-once checkpoint mode.\n \t\t */\n-\t\tALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER(false, true, true, false);\n+\t\tALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER(false, true, true, false),\n+\n+\t\t/**\n+\t\t * Indicates that this subpartition state is fully recovered (emitted).\n+\t\t * Further data can be consumed after unblocking.\n+\t\t */\n+\t\tRECOVERY_COMPLETION(false, true, true, false);", "originalCommit": "6e23ce525a7af28103e7abd8547b2ba6c9850567", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NDk5Mg==", "url": "https://github.com/apache/flink/pull/13822#discussion_r515344992", "bodyText": "I'd keep these events separate as long as they mean different things.\nEven if they are treated the same way today, doesn't mean they will in the future.", "author": "rkhachatryan", "createdAt": "2020-10-30T19:54:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3MzYyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "4409a03053bfbc21bb43df0535e222b17f6dcb51", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java\nindex 026d7d3389..b4da219ab9 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java\n\n@@ -277,7 +277,7 @@ public interface Buffer {\n \t\t * Indicates that this subpartition state is fully recovered (emitted).\n \t\t * Further data can be consumed after unblocking.\n \t\t */\n-\t\tRECOVERY_COMPLETION(false, true, true, false);\n+\t\tRECOVERY_COMPLETION(false, true, true /* true here fails IterateITCase#testSimpleIteration */, false);\n \n \t\tprivate final boolean isBuffer;\n \t\tprivate final boolean isEvent;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NDY3MA==", "url": "https://github.com/apache/flink/pull/13822#discussion_r514074670", "bodyText": "Why do we need that change here and not for aligned barriers?", "author": "AHeise", "createdAt": "2020-10-29T08:17:29Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java", "diffHunk": "@@ -263,7 +269,8 @@ BufferAndBacklog pollBuffer() {\n \n \t\t\t\tbuffer = bufferConsumer.build();\n \n-\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1,\n+\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1 ||", "originalCommit": "6e23ce525a7af28103e7abd8547b2ba6c9850567", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNjM5Nw==", "url": "https://github.com/apache/flink/pull/13822#discussion_r515516397", "bodyText": "Reverted this change - will fix FLINK-19907 instead.", "author": "rkhachatryan", "createdAt": "2020-10-31T16:58:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NDY3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxODA0Mg==", "url": "https://github.com/apache/flink/pull/13822#discussion_r515518042", "bodyText": "And thanks for this question! \ud83d\udc4d", "author": "rkhachatryan", "createdAt": "2020-10-31T17:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NDY3MA=="}], "type": "inlineReview", "revised_code": {"commit": "fff0f7c714454496715df23230ec552403b42aef", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java\nindex 9abf37ca26..235bf4fb12 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java\n\n@@ -269,8 +272,7 @@ public class PipelinedSubpartition extends ResultSubpartition\n \n \t\t\t\tbuffer = bufferConsumer.build();\n \n-\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1 ||\n-\t\t\t\t\t\t(buffers.size() == 2 && buffers.peekLast().getBufferConsumer().getDataType() == Buffer.DataType.RECOVERY_COMPLETION),\n+\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1,\n \t\t\t\t\t\"When there are multiple buffers, an unfinished bufferConsumer can not be at the head of the buffers queue.\");\n \n \t\t\t\tif (buffers.size() == 1) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NzA1MA==", "url": "https://github.com/apache/flink/pull/13822#discussion_r514077050", "bodyText": "We should generalize it for all epochs. Not sure if we already do it in this PR or then later.", "author": "AHeise", "createdAt": "2020-10-29T08:21:34Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/UpstreamRecoveryTracker.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.runtime.io;\n+\n+import org.apache.flink.runtime.checkpoint.channel.InputChannelInfo;\n+import org.apache.flink.runtime.io.network.partition.consumer.InputGate;\n+import org.apache.flink.util.Preconditions;\n+\n+import java.io.IOException;\n+import java.util.HashSet;\n+\n+final class UpstreamRecoveryTracker {", "originalCommit": "6e23ce525a7af28103e7abd8547b2ba6c9850567", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0Njk1OA==", "url": "https://github.com/apache/flink/pull/13822#discussion_r515346958", "bodyText": "I'd prefer to do it later if needed.\nThis PR is already a bit disconnected from how it will be used (tearing down VCs), and the code will probably change.", "author": "rkhachatryan", "createdAt": "2020-10-30T19:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NzA1MA=="}], "type": "inlineReview", "revised_code": {"commit": "4409a03053bfbc21bb43df0535e222b17f6dcb51", "chunk": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/UpstreamRecoveryTracker.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/UpstreamRecoveryTracker.java\nindex 6ca6ade762..59a53cf5e0 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/UpstreamRecoveryTracker.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/UpstreamRecoveryTracker.java\n\n@@ -49,7 +49,7 @@ final class UpstreamRecoveryTracker {\n \t\t}\n \t}\n \n-\tpublic boolean allRestored() {\n+\tpublic boolean allChannelsRecovered() {\n \t\treturn numUnrestoredChannels == 0;\n \t}\n }\n"}}, {"oid": "4409a03053bfbc21bb43df0535e222b17f6dcb51", "url": "https://github.com/apache/flink/commit/4409a03053bfbc21bb43df0535e222b17f6dcb51", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-29T18:04:43Z", "type": "forcePushed"}, {"oid": "c297b7ca14f26e55649885b0e3efcb4f997533f9", "url": "https://github.com/apache/flink/commit/c297b7ca14f26e55649885b0e3efcb4f997533f9", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-30T19:32:33Z", "type": "forcePushed"}, {"oid": "343172c8197162ff4ec4860f0389f6caefdc9ea4", "url": "https://github.com/apache/flink/commit/343172c8197162ff4ec4860f0389f6caefdc9ea4", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-31T14:54:30Z", "type": "forcePushed"}, {"oid": "fff0f7c714454496715df23230ec552403b42aef", "url": "https://github.com/apache/flink/commit/fff0f7c714454496715df23230ec552403b42aef", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-31T16:59:15Z", "type": "forcePushed"}, {"oid": "d14f3c4e3801f5518d6b11586ca655c35c7fef9e", "url": "https://github.com/apache/flink/commit/d14f3c4e3801f5518d6b11586ca655c35c7fef9e", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-31T17:06:27Z", "type": "forcePushed"}, {"oid": "f8c3e98172e956a6ea8362c165af13bbd82ec58f", "url": "https://github.com/apache/flink/commit/f8c3e98172e956a6ea8362c165af13bbd82ec58f", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-31T23:03:37Z", "type": "forcePushed"}, {"oid": "b3ae3549c9c7dd237f7aa84c5daa59f73747668c", "url": "https://github.com/apache/flink/commit/b3ae3549c9c7dd237f7aa84c5daa59f73747668c", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-10-31T23:06:11Z", "type": "forcePushed"}, {"oid": "781ae8792b9569e71af6b828a5f956b07099a310", "url": "https://github.com/apache/flink/commit/781ae8792b9569e71af6b828a5f956b07099a310", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-11-02T13:43:36Z", "type": "forcePushed"}, {"oid": "7c422adfc89835d7855e985d7cd09ba6202da933", "url": "https://github.com/apache/flink/commit/7c422adfc89835d7855e985d7cd09ba6202da933", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-11-02T13:46:48Z", "type": "forcePushed"}, {"oid": "3d994873a5b560ed751967381ddf3189c76422ac", "url": "https://github.com/apache/flink/commit/3d994873a5b560ed751967381ddf3189c76422ac", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-11-03T12:48:41Z", "type": "forcePushed"}, {"oid": "7c9b8addb9fe1e7ffa98e3f45664c1c31d1d0f74", "url": "https://github.com/apache/flink/commit/7c9b8addb9fe1e7ffa98e3f45664c1c31d1d0f74", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-11-03T13:01:56Z", "type": "forcePushed"}, {"oid": "4230a32c598e05d5da143e16489b67aaa66785e6", "url": "https://github.com/apache/flink/commit/4230a32c598e05d5da143e16489b67aaa66785e6", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-11-03T13:10:05Z", "type": "commit"}, {"oid": "4230a32c598e05d5da143e16489b67aaa66785e6", "url": "https://github.com/apache/flink/commit/4230a32c598e05d5da143e16489b67aaa66785e6", "message": "[FLINK-19856][network] Emit EndOfChannelRecoveryEvent\n\nThis event would allow to tear down \"virtual channels\"\nused to read channel state on recovery with unaligned checkpoints and\nrescaling.", "committedDate": "2020-11-03T13:10:05Z", "type": "forcePushed"}]}