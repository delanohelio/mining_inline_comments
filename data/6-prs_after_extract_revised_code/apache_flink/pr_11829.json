{"pr_number": 11829, "pr_title": "[FLINK-17021][table-planner-blink] Blink batch planner set GlobalDataExchangeMode", "pr_createdAt": "2020-04-20T13:08:16Z", "pr_url": "https://github.com/apache/flink/pull/11829", "timeline": [{"oid": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3", "url": "https://github.com/apache/flink/commit/c01e235c3048c97accdd33f7cfe2b03f6f60c8b3", "message": "[FLINK-17021][table-planner-blink] Blink batch planner set GlobalDataExchangeMode", "committedDate": "2020-04-21T03:46:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNTgwNg==", "url": "https://github.com/apache/flink/pull/11829#discussion_r412605806", "bodyText": "Consider default value is ALL_EDGES_BLOCKING, we can remove this code.", "author": "JingsongLi", "createdAt": "2020-04-22T01:38:52Z", "path": "flink-end-to-end-tests/flink-tpcds-test/src/main/java/org/apache/flink/table/tpcds/TpcdsTestProgram.java", "diffHunk": "@@ -123,8 +123,9 @@ private static TableEnvironment prepareTableEnv(String sourceTablePath, Boolean\n \t\tTableEnvironment tEnv = TableEnvironment.create(environmentSettings);\n \n \t\t//config Optimizer parameters\n-\t\ttEnv.getConfig().getConfiguration()\n-\t\t\t\t.setString(ExecutionConfigOptions.TABLE_EXEC_SHUFFLE_MODE, ShuffleMode.BATCH.toString());\n+\t\ttEnv.getConfig().getConfiguration().setString(", "originalCommit": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxMjY4MA==", "url": "https://github.com/apache/flink/pull/11829#discussion_r412612680", "bodyText": "Ok. Then TpcdsTestProgram will test the default behavior. I think it's even better.", "author": "zhuzhurk", "createdAt": "2020-04-22T01:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNTgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "c15a8214d2883f5a5c07bb6357dbfa465dd5cd39", "chunk": "diff --git a/flink-end-to-end-tests/flink-tpcds-test/src/main/java/org/apache/flink/table/tpcds/TpcdsTestProgram.java b/flink-end-to-end-tests/flink-tpcds-test/src/main/java/org/apache/flink/table/tpcds/TpcdsTestProgram.java\nindex 7de4b694852..fc3c4f12cfe 100644\n--- a/flink-end-to-end-tests/flink-tpcds-test/src/main/java/org/apache/flink/table/tpcds/TpcdsTestProgram.java\n+++ b/flink-end-to-end-tests/flink-tpcds-test/src/main/java/org/apache/flink/table/tpcds/TpcdsTestProgram.java\n\n@@ -123,9 +122,6 @@ public class TpcdsTestProgram {\n \t\tTableEnvironment tEnv = TableEnvironment.create(environmentSettings);\n \n \t\t//config Optimizer parameters\n-\t\ttEnv.getConfig().getConfiguration().setString(\n-\t\t\tExecutionConfigOptions.TABLE_EXEC_SHUFFLE_MODE,\n-\t\t\tGlobalDataExchangeMode.ALL_EDGES_BLOCKING.toString());\n \t\ttEnv.getConfig().getConfiguration()\n \t\t\t\t.setInteger(ExecutionConfigOptions.TABLE_EXEC_RESOURCE_DEFAULT_PARALLELISM, 4);\n \t\ttEnv.getConfig().getConfiguration()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNjE3NQ==", "url": "https://github.com/apache/flink/pull/11829#discussion_r412606175", "bodyText": "add .stringType()?", "author": "JingsongLi", "createdAt": "2020-04-22T01:40:00Z", "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/config/ExecutionConfigOptions.java", "diffHunk": "@@ -216,9 +219,34 @@\n \t@Documentation.TableOption(execMode = Documentation.ExecMode.BATCH)\n \tpublic static final ConfigOption<String> TABLE_EXEC_SHUFFLE_MODE =\n \t\tkey(\"table.exec.shuffle-mode\")\n-\t\t\t.defaultValue(\"batch\")\n-\t\t\t.withDescription(\"Sets exec shuffle mode. Only batch or pipelined can be set.\\n\" +\n-\t\t\t\t\"batch: the job will run stage by stage. \\n\" +\n-\t\t\t\t\"pipelined: the job will run in streaming mode, but it may cause resource deadlock that receiver waits for resource to start when \" +\n-\t\t\t\t\"the sender holds resource to wait to send data to the receiver.\");\n+\t\t\t.defaultValue(\"ALL_EDGES_BLOCKING\")", "originalCommit": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNTQxNw==", "url": "https://github.com/apache/flink/pull/11829#discussion_r412615417", "bodyText": "Ok.", "author": "zhuzhurk", "createdAt": "2020-04-22T02:06:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNjE3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "c15a8214d2883f5a5c07bb6357dbfa465dd5cd39", "chunk": "diff --git a/flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/config/ExecutionConfigOptions.java b/flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/config/ExecutionConfigOptions.java\nindex fddc53daa3f..45d4576e83a 100644\n--- a/flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/config/ExecutionConfigOptions.java\n+++ b/flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/config/ExecutionConfigOptions.java\n\n@@ -219,6 +219,7 @@ public class ExecutionConfigOptions {\n \t@Documentation.TableOption(execMode = Documentation.ExecMode.BATCH)\n \tpublic static final ConfigOption<String> TABLE_EXEC_SHUFFLE_MODE =\n \t\tkey(\"table.exec.shuffle-mode\")\n+\t\t\t.stringType()\n \t\t\t.defaultValue(\"ALL_EDGES_BLOCKING\")\n \t\t\t.withDescription(\n \t\t\t\tDescription.builder()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNjY4Ng==", "url": "https://github.com/apache/flink/pull/11829#discussion_r412606686", "bodyText": "isShuffleModeAllBlocking?", "author": "JingsongLi", "createdAt": "2020-04-22T01:41:27Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ExecutorUtils.java", "diffHunk": "@@ -85,19 +83,14 @@ public static void setBatchProperties(StreamGraph streamGraph, TableConfig table\n \t\tif (streamGraph.getCheckpointConfig().isCheckpointingEnabled()) {\n \t\t\tthrow new IllegalArgumentException(\"Checkpoint is not supported for batch jobs.\");\n \t\t}\n-\t\tif (ExecutorUtils.isShuffleModeAllBatch(tableConfig)) {\n-\t\t\tstreamGraph.setGlobalDataExchangeMode(GlobalDataExchangeMode.ALL_EDGES_BLOCKING);\n-\t\t}\n+\t\tstreamGraph.setGlobalDataExchangeMode(getGlobalDataExchangeMode(tableConfig));\n \t}\n \n \tprivate static boolean isShuffleModeAllBatch(TableConfig tableConfig) {", "originalCommit": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMTg2Ng==", "url": "https://github.com/apache/flink/pull/11829#discussion_r412621866", "bodyText": "Ok.", "author": "zhuzhurk", "createdAt": "2020-04-22T02:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNjY4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c15a8214d2883f5a5c07bb6357dbfa465dd5cd39", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ExecutorUtils.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ExecutorUtils.java\nindex 70fd844079d..d9c0335aedf 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ExecutorUtils.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ExecutorUtils.java\n\n@@ -86,7 +86,7 @@ public class ExecutorUtils {\n \t\tstreamGraph.setGlobalDataExchangeMode(getGlobalDataExchangeMode(tableConfig));\n \t}\n \n-\tprivate static boolean isShuffleModeAllBatch(TableConfig tableConfig) {\n+\tprivate static boolean isShuffleModeAllBlocking(TableConfig tableConfig) {\n \t\treturn getGlobalDataExchangeMode(tableConfig) == GlobalDataExchangeMode.ALL_EDGES_BLOCKING;\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNzMxMw==", "url": "https://github.com/apache/flink/pull/11829#discussion_r412607313", "bodyText": "Can we catch the specific exception?", "author": "JingsongLi", "createdAt": "2020-04-22T01:43:22Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ShuffleModeUtils.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.planner.utils;\n+\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.streaming.api.graph.GlobalDataExchangeMode;\n+import org.apache.flink.table.api.config.ExecutionConfigOptions;\n+\n+/**\n+ * Utility class to load job-wide shuffle mode.\n+ */\n+public class ShuffleModeUtils {\n+\n+\tstatic final String ALL_EDGES_BLOCKING_LEGACY = \"batch\";\n+\n+\tstatic final String ALL_EDGES_PIPELINED_LEGACY = \"pipelined\";\n+\n+\tstatic GlobalDataExchangeMode getShuffleModeAsGlobalDataExchangeMode(final Configuration configuration) {\n+\t\tfinal String value = configuration.getString(ExecutionConfigOptions.TABLE_EXEC_SHUFFLE_MODE);\n+\n+\t\ttry {\n+\t\t\treturn GlobalDataExchangeMode.valueOf(convertLegacyShuffleMode(value).toUpperCase());\n+\t\t} catch (Exception e) {", "originalCommit": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNjU3Ng==", "url": "https://github.com/apache/flink/pull/11829#discussion_r412616576", "bodyText": "Sure. I wanted to catch the NPE as well but seems it is not necessary.", "author": "zhuzhurk", "createdAt": "2020-04-22T02:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNzMxMw=="}], "type": "inlineReview", "revised_code": {"commit": "c15a8214d2883f5a5c07bb6357dbfa465dd5cd39", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ShuffleModeUtils.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ShuffleModeUtils.java\nindex 0aaba0102bf..229abe06aa0 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ShuffleModeUtils.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ShuffleModeUtils.java\n\n@@ -36,7 +36,7 @@ public class ShuffleModeUtils {\n \n \t\ttry {\n \t\t\treturn GlobalDataExchangeMode.valueOf(convertLegacyShuffleMode(value).toUpperCase());\n-\t\t} catch (Exception e) {\n+\t\t} catch (IllegalArgumentException e) {\n \t\t\tthrow new IllegalArgumentException(\n \t\t\t\tString.format(\"Unsupported value %s for config %s.\", value, ExecutionConfigOptions.TABLE_EXEC_SHUFFLE_MODE.key()));\n \t\t}\n"}}, {"oid": "c15a8214d2883f5a5c07bb6357dbfa465dd5cd39", "url": "https://github.com/apache/flink/commit/c15a8214d2883f5a5c07bb6357dbfa465dd5cd39", "message": "[FLINK-17021][table-planner-blink] Blink batch planner set GlobalDataExchangeMode", "committedDate": "2020-04-22T02:25:33Z", "type": "forcePushed"}, {"oid": "916148ed89d76a9b2fa7659941023f473ecb38a2", "url": "https://github.com/apache/flink/commit/916148ed89d76a9b2fa7659941023f473ecb38a2", "message": "[FLINK-17021][table-planner-blink] Blink batch planner set GlobalDataExchangeMode", "committedDate": "2020-04-24T07:12:21Z", "type": "commit"}, {"oid": "916148ed89d76a9b2fa7659941023f473ecb38a2", "url": "https://github.com/apache/flink/commit/916148ed89d76a9b2fa7659941023f473ecb38a2", "message": "[FLINK-17021][table-planner-blink] Blink batch planner set GlobalDataExchangeMode", "committedDate": "2020-04-24T07:12:21Z", "type": "forcePushed"}]}