{"pr_number": 14008, "pr_title": "[FLINK-20013][network] BoundedBlockingSubpartition may leak network buffer if task is failed or canceled", "pr_createdAt": "2020-11-10T06:36:43Z", "pr_url": "https://github.com/apache/flink/pull/14008", "timeline": [{"oid": "409377bf03bf344f259a1386a225ea33b510626c", "url": "https://github.com/apache/flink/commit/409377bf03bf344f259a1386a225ea33b510626c", "message": "[FLINK-20013][network] BoundedBlockingSubpartition may leak network buffer if task is failed or canceled", "committedDate": "2020-11-10T06:28:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwMjA0Mw==", "url": "https://github.com/apache/flink/pull/14008#discussion_r520602043", "bodyText": "The code is not testing if the buffer is really recycled.\nassertTrue(consumer.isRecycled())", "author": "AHeise", "createdAt": "2020-11-10T14:26:03Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionTest.java", "diffHunk": "@@ -117,6 +121,34 @@ public void testCloseBoundedData() throws Exception {\n \t\tassertTrue(reader.closed);\n \t}\n \n+\t@Test\n+\tpublic void testRecycleCurrentBufferOnFailure() throws Exception {\n+\t\tfinal ResultPartition resultPartition = createPartition(ResultPartitionType.BLOCKING, fileChannelManager);\n+\t\tfinal BoundedBlockingSubpartition subpartition = new BoundedBlockingSubpartition(\n+\t\t\t\t0,\n+\t\t\t\tresultPartition,\n+\t\t\t\tnew FailingBoundedData(),\n+\t\t\t\t!sslEnabled && type == BoundedBlockingSubpartitionType.FILE);\n+\t\tfinal BufferConsumer consumer = BufferBuilderTestUtils.createFilledFinishedBufferConsumer(100);\n+\n+\t\ttry {\n+\t\t\ttry {\n+\t\t\t\tsubpartition.add(consumer);\n+\t\t\t\tsubpartition.createReadView(new NoOpBufferAvailablityListener());\n+\t\t\t\tfail(\"should fail with an exception\");\n+\t\t\t} catch (Exception ignored) {\n+\t\t\t\t// expected\n+\t\t\t}\n+\n+\t\t\tassertNotNull(subpartition.getCurrentBuffer());\n+\t\t\tassertFalse(subpartition.getCurrentBuffer().isRecycled());\n+\t\t} finally {\n+\t\t\tsubpartition.release();\n+\n+\t\t\tassertNull(subpartition.getCurrentBuffer());", "originalCommit": "409377bf03bf344f259a1386a225ea33b510626c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2016822299161c5c69cd8139bc0c6fb18aea7c08", "chunk": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionTest.java\nindex 014085789ac..592ad3b8a5c 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/BoundedBlockingSubpartitionTest.java\n\n@@ -140,11 +140,15 @@ public class BoundedBlockingSubpartitionTest extends SubpartitionTestBase {\n \t\t\t\t// expected\n \t\t\t}\n \n+\t\t\tassertFalse(consumer.isRecycled());\n+\n \t\t\tassertNotNull(subpartition.getCurrentBuffer());\n \t\t\tassertFalse(subpartition.getCurrentBuffer().isRecycled());\n \t\t} finally {\n \t\t\tsubpartition.release();\n \n+\t\t\tassertTrue(consumer.isRecycled());\n+\n \t\t\tassertNull(subpartition.getCurrentBuffer());\n \t\t}\n \t}\n"}}, {"oid": "2016822299161c5c69cd8139bc0c6fb18aea7c08", "url": "https://github.com/apache/flink/commit/2016822299161c5c69cd8139bc0c6fb18aea7c08", "message": "[FLINK-20013][network] BoundedBlockingSubpartition may leak network buffer if task is failed or canceled", "committedDate": "2020-11-10T15:13:36Z", "type": "commit"}]}