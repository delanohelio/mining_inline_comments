{"pr_number": 12431, "pr_title": "[FLINK-18055] [sql-client] Fix catalog/database does not exist in sql client", "pr_createdAt": "2020-06-02T06:25:38Z", "pr_url": "https://github.com/apache/flink/pull/12431", "timeline": [{"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "url": "https://github.com/apache/flink/commit/b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "message": "[FLINK-18055] [sql-client] Fix catalog/database does not exist in sql client", "committedDate": "2020-06-02T06:44:20Z", "type": "commit"}, {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "url": "https://github.com/apache/flink/commit/b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "message": "[FLINK-18055] [sql-client] Fix catalog/database does not exist in sql client", "committedDate": "2020-06-02T06:44:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1OTg3MA==", "url": "https://github.com/apache/flink/pull/12431#discussion_r433759870", "bodyText": "we can use try(resources) to avoid call finally here?", "author": "leonardBang", "createdAt": "2020-06-02T09:56:52Z", "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java", "diffHunk": "@@ -166,6 +167,64 @@ public void write(int b) throws IOException {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testUseCatalog() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseCatalogConsumer((ignored1, catalogName) -> {\n+\t\t\t\t\tif (!catalogName.equals(\"cat\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected catalog name: \" + catalogName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use catalog cat;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);\n+\n+\t\ttry (Terminal terminal = new DumbTerminal(inputStream, outputStream)) {", "originalCommit": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxNzY4OQ==", "url": "https://github.com/apache/flink/pull/12431#discussion_r434317689", "bodyText": "CliClient does not inherit from AutoCloseable, so we can put CliClient into try-with-resource block", "author": "godfreyhe", "createdAt": "2020-06-03T05:34:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1OTg3MA=="}], "type": "inlineReview", "revised_code": {"commit": "3911c798a8a165f31e1db500b28dcd848a0f653c", "chunk": "diff --git a/flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java b/flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java\nindex e168ca1706..19d91ab4d9 100644\n--- a/flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java\n+++ b/flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java\n\n@@ -177,23 +177,9 @@ public class CliClientTest extends TestLogger {\n \t\t\t\t})\n \t\t\t\t.build();\n \n-\t\tInputStream inputStream = new ByteArrayInputStream(\"use catalog cat;\\n\".getBytes());\n-\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n-\t\tCliClient cliClient = null;\n-\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n-\t\tString sessionId = executor.openSession(sessionContext);\n-\n-\t\ttry (Terminal terminal = new DumbTerminal(inputStream, outputStream)) {\n-\t\t\tcliClient = new CliClient(terminal, sessionId, executor, File.createTempFile(\"history\", \"tmp\").toPath());\n-\t\t\tcliClient.open();\n-\t\t\tassertThat(executor.getNumUseCatalogCalls(), is(1));\n-\t\t\tString output = new String(outputStream.toByteArray());\n-\t\t\tassertFalse(output.contains(\"unexpected catalog name\"));\n-\t\t} finally {\n-\t\t\tif (cliClient != null) {\n-\t\t\t\tcliClient.close();\n-\t\t\t}\n-\t\t}\n+\t\tString output = testExecuteSql(executor, \"use catalog cat;\");\n+\t\tassertThat(executor.getNumUseCatalogCalls(), is(1));\n+\t\tassertFalse(output.contains(\"unexpected catalog name\"));\n \t}\n \n \t@Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc2MjA0Nw==", "url": "https://github.com/apache/flink/pull/12431#discussion_r433762047", "bodyText": "Could we extract this code to a function for reuse purpose?", "author": "leonardBang", "createdAt": "2020-06-02T10:00:45Z", "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java", "diffHunk": "@@ -166,6 +167,64 @@ public void write(int b) throws IOException {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testUseCatalog() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseCatalogConsumer((ignored1, catalogName) -> {\n+\t\t\t\t\tif (!catalogName.equals(\"cat\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected catalog name: \" + catalogName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use catalog cat;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);\n+\n+\t\ttry (Terminal terminal = new DumbTerminal(inputStream, outputStream)) {\n+\t\t\tcliClient = new CliClient(terminal, sessionId, executor, File.createTempFile(\"history\", \"tmp\").toPath());\n+\t\t\tcliClient.open();\n+\t\t\tassertThat(executor.getNumUseCatalogCalls(), is(1));\n+\t\t\tString output = new String(outputStream.toByteArray());\n+\t\t\tassertFalse(output.contains(\"unexpected catalog name\"));\n+\t\t} finally {\n+\t\t\tif (cliClient != null) {\n+\t\t\t\tcliClient.close();\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tpublic void testUseDatabase() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseDatabaseConsumer((ignored1, databaseName) -> {\n+\t\t\t\t\tif (!databaseName.equals(\"db\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected database name: \" + databaseName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use db;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);", "originalCommit": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3911c798a8a165f31e1db500b28dcd848a0f653c", "chunk": "diff --git a/flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java b/flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java\nindex e168ca1706..19d91ab4d9 100644\n--- a/flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java\n+++ b/flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java\n\n@@ -177,23 +177,9 @@ public class CliClientTest extends TestLogger {\n \t\t\t\t})\n \t\t\t\t.build();\n \n-\t\tInputStream inputStream = new ByteArrayInputStream(\"use catalog cat;\\n\".getBytes());\n-\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n-\t\tCliClient cliClient = null;\n-\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n-\t\tString sessionId = executor.openSession(sessionContext);\n-\n-\t\ttry (Terminal terminal = new DumbTerminal(inputStream, outputStream)) {\n-\t\t\tcliClient = new CliClient(terminal, sessionId, executor, File.createTempFile(\"history\", \"tmp\").toPath());\n-\t\t\tcliClient.open();\n-\t\t\tassertThat(executor.getNumUseCatalogCalls(), is(1));\n-\t\t\tString output = new String(outputStream.toByteArray());\n-\t\t\tassertFalse(output.contains(\"unexpected catalog name\"));\n-\t\t} finally {\n-\t\t\tif (cliClient != null) {\n-\t\t\t\tcliClient.close();\n-\t\t\t}\n-\t\t}\n+\t\tString output = testExecuteSql(executor, \"use catalog cat;\");\n+\t\tassertThat(executor.getNumUseCatalogCalls(), is(1));\n+\t\tassertFalse(output.contains(\"unexpected catalog name\"));\n \t}\n \n \t@Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTc4Mw==", "url": "https://github.com/apache/flink/pull/12431#discussion_r434289783", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };\n          \n          \n            \n            \t\t\toperands = new String[]{StringUtils.strip(((UseCatalogOperation) operation).getCatalogName(), \"`\")};", "author": "jxeditor", "createdAt": "2020-06-03T03:37:23Z", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "diffHunk": "@@ -132,11 +132,10 @@ private SqlCommandParser() {\n \t\t\tcmd = SqlCommand.DROP_CATALOG;\n \t\t} else if (operation instanceof UseCatalogOperation) {\n \t\t\tcmd = SqlCommand.USE_CATALOG;\n-\t\t\toperands = new String[] { String.format(\"`%s`\", ((UseCatalogOperation) operation).getCatalogName()) };\n+\t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };", "originalCommit": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMTQwMg==", "url": "https://github.com/apache/flink/pull/12431#discussion_r434321402", "bodyText": "The quoting string (\"`\")  is skipped by sql parser, so we need not to handle this. see the test (TestItem.validSql(\"use `default`;\", SqlCommand.USE, \"default\")) in SqlCommandParserTest#testCommands", "author": "godfreyhe", "createdAt": "2020-06-03T05:46:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTc4Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTg0OA==", "url": "https://github.com/apache/flink/pull/12431#discussion_r434289848", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\toperands = new String[] { ((UseDatabaseOperation) operation).getDatabaseName() };\n          \n          \n            \n            \t\t\toperands = new String[]{String.format(\"%s.%s\", StringUtils.strip(op.getCatalogName(), \"`\"), StringUtils.strip(op.getDatabaseName(), \"`\"))};", "author": "jxeditor", "createdAt": "2020-06-03T03:37:39Z", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "diffHunk": "@@ -132,11 +132,10 @@ private SqlCommandParser() {\n \t\t\tcmd = SqlCommand.DROP_CATALOG;\n \t\t} else if (operation instanceof UseCatalogOperation) {\n \t\t\tcmd = SqlCommand.USE_CATALOG;\n-\t\t\toperands = new String[] { String.format(\"`%s`\", ((UseCatalogOperation) operation).getCatalogName()) };\n+\t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };\n \t\t} else if (operation instanceof UseDatabaseOperation) {\n \t\t\tcmd = SqlCommand.USE;\n-\t\t\tUseDatabaseOperation op = ((UseDatabaseOperation) operation);\n-\t\t\toperands = new String[] { String.format(\"`%s`.`%s`\", op.getCatalogName(), op.getDatabaseName()) };\n+\t\t\toperands = new String[] { ((UseDatabaseOperation) operation).getDatabaseName() };", "originalCommit": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjUyOQ==", "url": "https://github.com/apache/flink/pull/12431#discussion_r434322529", "bodyText": "catalog name is unnecessary, only database is needed.", "author": "godfreyhe", "createdAt": "2020-06-03T05:51:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTg0OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "3911c798a8a165f31e1db500b28dcd848a0f653c", "url": "https://github.com/apache/flink/commit/3911c798a8a165f31e1db500b28dcd848a0f653c", "message": "address Leonard's comments", "committedDate": "2020-06-03T05:52:24Z", "type": "commit"}]}