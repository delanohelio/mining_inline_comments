{"pr_number": 13634, "pr_title": "[FLINK-19629]Fix NullPointException in avro format as null value on MAP type", "pr_createdAt": "2020-10-14T11:59:57Z", "pr_url": "https://github.com/apache/flink/pull/13634", "timeline": [{"oid": "d719acbd86db08cb920aac511e4ef0e82720469f", "url": "https://github.com/apache/flink/commit/d719acbd86db08cb920aac511e4ef0e82720469f", "message": "[FLINK-19629]Fix NullPointException in avro format whith null value in map type", "committedDate": "2020-10-14T11:28:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NDE2OQ==", "url": "https://github.com/apache/flink/pull/13634#discussion_r509264169", "bodyText": "We don't need to add such a big test. You can just add a null entry to the map in the testSerializeDeserialize.", "author": "wuchong", "createdAt": "2020-10-21T13:10:39Z", "path": "flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRowDataDeSerializationSchemaTest.java", "diffHunk": "@@ -198,4 +198,38 @@ public void testSpecificType() throws Exception {\n \t\tAssert.assertEquals(\"12:12:12\", DataFormatConverters.LocalTimeConverter.INSTANCE.toExternal(\n \t\t\t\trowData.getInt(2)).toString());\n \t}\n+\n+\t@Test\n+\tpublic void testNullableMapType() throws Exception {", "originalCommit": "d719acbd86db08cb920aac511e4ef0e82720469f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI5NDM5OA==", "url": "https://github.com/apache/flink/pull/13634#discussion_r509294398", "bodyText": "OK, i will remove it , and add in the testSerializeDeserialize", "author": "shizhengchao", "createdAt": "2020-10-21T13:43:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NDE2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "16a7e73c66d66707a59d19be6ace83ba664f20fc", "chunk": "diff --git a/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRowDataDeSerializationSchemaTest.java b/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRowDataDeSerializationSchemaTest.java\nindex 68958a33a48..206f8a671ed 100644\n--- a/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRowDataDeSerializationSchemaTest.java\n+++ b/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroRowDataDeSerializationSchemaTest.java\n\n@@ -198,38 +203,4 @@ public class AvroRowDataDeSerializationSchemaTest {\n \t\tAssert.assertEquals(\"12:12:12\", DataFormatConverters.LocalTimeConverter.INSTANCE.toExternal(\n \t\t\t\trowData.getInt(2)).toString());\n \t}\n-\n-\t@Test\n-\tpublic void testNullableMapType() throws Exception {\n-\t\tfinal DataType dataType = ROW(\n-\t\t\t\tFIELD(\"map\", MAP(STRING(), STRING())));\n-\t\tfinal RowType rowType = (RowType) dataType.getLogicalType();\n-\t\tfinal TypeInformation<RowData> typeInfo = InternalTypeInfo.of(rowType);\n-\n-\t\tfinal Schema schema = AvroSchemaConverter.convertToSchema(rowType);\n-\t\tfinal GenericRecord record = new GenericData.Record(schema);\n-\n-\t\tMap<String, String> map = new HashMap<>();\n-\t\tmap.put(\"flink\", \"good\");\n-\t\tmap.put(\"avro\", null);\n-\t\trecord.put(0, map);\n-\n-\t\tAvroRowDataSerializationSchema serializationSchema = new AvroRowDataSerializationSchema(rowType);\n-\t\tserializationSchema.open(null);\n-\t\tAvroRowDataDeserializationSchema deserializationSchema =\n-\t\t\t\tnew AvroRowDataDeserializationSchema(rowType, typeInfo);\n-\t\tdeserializationSchema.open(null);\n-\n-\t\tByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-\t\tGenericDatumWriter<IndexedRecord> datumWriter = new GenericDatumWriter<>(schema);\n-\t\tEncoder encoder = EncoderFactory.get().binaryEncoder(byteArrayOutputStream, null);\n-\t\tdatumWriter.write(record, encoder);\n-\t\tencoder.flush();\n-\t\tbyte[] input = byteArrayOutputStream.toByteArray();\n-\n-\t\tRowData rowData = deserializationSchema.deserialize(input);\n-\t\tbyte[] output = serializationSchema.serialize(rowData);\n-\n-\t\tassertArrayEquals(input, output);\n-\t}\n }\n"}}, {"oid": "16a7e73c66d66707a59d19be6ace83ba664f20fc", "url": "https://github.com/apache/flink/commit/16a7e73c66d66707a59d19be6ace83ba664f20fc", "message": "[FLINK-19629][Formats] Remove testNullableMapType method and add a null entry to the map in the testSerializeDeserialize", "committedDate": "2020-10-21T14:28:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzOTA4MA==", "url": "https://github.com/apache/flink/pull/13634#discussion_r509839080", "bodyText": "key can also be null?", "author": "libenchao", "createdAt": "2020-10-22T02:16:52Z", "path": "flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/AvroToRowDataConverters.java", "diffHunk": "@@ -178,7 +178,7 @@ private static AvroToRowDataConverter createArrayConverter(ArrayType arrayType)\n \n \tprivate static AvroToRowDataConverter createMapConverter(LogicalType type) {\n \t\tfinal AvroToRowDataConverter keyConverter = createConverter(DataTypes.STRING().getLogicalType());", "originalCommit": "16a7e73c66d66707a59d19be6ace83ba664f20fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0NjM2Nw==", "url": "https://github.com/apache/flink/pull/13634#discussion_r509846367", "bodyText": "Avro can't serialize null key for map.", "author": "wuchong", "createdAt": "2020-10-22T02:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzOTA4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0ODk4OQ==", "url": "https://github.com/apache/flink/pull/13634#discussion_r509848989", "bodyText": "Avro can't serialize null key for map.\n\nThat's right, and this problem only exists when the type of map entry is STRING()", "author": "shizhengchao", "createdAt": "2020-10-22T02:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzOTA4MA=="}], "type": "inlineReview", "revised_code": null}]}