{"pr_number": 12127, "pr_title": "[FLINK-17665][network] Serialize DataType of Buffer into BufferResponse", "pr_createdAt": "2020-05-13T13:06:19Z", "pr_url": "https://github.com/apache/flink/pull/12127", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzNDY4Nw==", "url": "https://github.com/apache/flink/pull/12127#discussion_r424534687", "bodyText": "redundant empty line", "author": "zhijiangW", "createdAt": "2020-05-13T15:35:57Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyMessage.java", "diffHunk": "@@ -279,27 +279,28 @@ protected Object decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception\n \n \t\tfinal int backlog;\n \n-\t\tfinal boolean isBuffer;\n+\t\tfinal Buffer.DataType dataType;\n \n \t\tfinal boolean isCompressed;\n \n \t\tfinal int bufferSize;\n \n \t\tprivate BufferResponse(\n \t\t\t\t@Nullable Buffer buffer,\n-\t\t\t\tboolean isBuffer,\n+\t\t\t\tBuffer.DataType dataType,\n \t\t\t\tboolean isCompressed,\n \t\t\t\tint sequenceNumber,\n \t\t\t\tInputChannelID receiverId,\n \t\t\t\tint backlog,\n \t\t\t\tint bufferSize) {\n \t\t\tthis.buffer = buffer;\n-\t\t\tthis.isBuffer = isBuffer;\n+\t\t\tthis.dataType = dataType;\n \t\t\tthis.isCompressed = isCompressed;\n \t\t\tthis.sequenceNumber = sequenceNumber;\n \t\t\tthis.receiverId = checkNotNull(receiverId);\n \t\t\tthis.backlog = backlog;\n \t\t\tthis.bufferSize = bufferSize;\n+", "originalCommit": "f9e182497db98539df5317ce52f5ce15c8775bc5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1d6ed83e3db68867923b60e32e3ed628505cbed2", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyMessage.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyMessage.java\nindex 670f8d6d4b..3bf537a5a2 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyMessage.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyMessage.java\n\n@@ -300,7 +300,6 @@ public abstract class NettyMessage {\n \t\t\tthis.receiverId = checkNotNull(receiverId);\n \t\t\tthis.backlog = backlog;\n \t\t\tthis.bufferSize = bufferSize;\n-\n \t\t}\n \n \t\tBufferResponse(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzODU0Mg==", "url": "https://github.com/apache/flink/pull/12127#discussion_r424538542", "bodyText": "nit: <p>Notes:", "author": "zhijiangW", "createdAt": "2020-05-13T15:40:59Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java", "diffHunk": "@@ -238,6 +238,10 @@\n \t/**\n \t * Used to identify the type of data contained in the {@link Buffer} so that we can get\n \t * the information without deserializing the serialized data.\n+\t *\n+\t * Notes: Currently, one byte is used to serialize {@link DataType}, so the maximum number", "originalCommit": "f9e182497db98539df5317ce52f5ce15c8775bc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU0NTE4Nw==", "url": "https://github.com/apache/flink/pull/12127#discussion_r424545187", "bodyText": "....one byte of the ordinal in {@link DataType} is written into {@link BufferResponse}, so...", "author": "zhijiangW", "createdAt": "2020-05-13T15:49:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzODU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1d6ed83e3db68867923b60e32e3ed628505cbed2", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java\nindex 0fcc41ac6a..06dcec0be9 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java\n\n@@ -239,9 +239,9 @@ public interface Buffer {\n \t * Used to identify the type of data contained in the {@link Buffer} so that we can get\n \t * the information without deserializing the serialized data.\n \t *\n-\t * Notes: Currently, one byte is used to serialize {@link DataType}, so the maximum number\n-\t * of data types can be supported is 128. And for compatibility reason, do not change the\n-\t * ordinal of the existing data type.\n+\t * <p>Notes: Currently, one byte is used to serialize the ordinal of {@link DataType} in\n+\t * {@link org.apache.flink.runtime.io.network.netty.NettyMessage.BufferResponse}, so the\n+\t * maximum number of supported data types is 128.\n \t */\n \tenum DataType {\n \t\t/**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzOTY5Ng==", "url": "https://github.com/apache/flink/pull/12127#discussion_r424539696", "bodyText": "of supported data types is 128", "author": "zhijiangW", "createdAt": "2020-05-13T15:42:32Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java", "diffHunk": "@@ -238,6 +238,10 @@\n \t/**\n \t * Used to identify the type of data contained in the {@link Buffer} so that we can get\n \t * the information without deserializing the serialized data.\n+\t *\n+\t * Notes: Currently, one byte is used to serialize {@link DataType}, so the maximum number\n+\t * of data types can be supported is 128. And for compatibility reason, do not change the", "originalCommit": "f9e182497db98539df5317ce52f5ce15c8775bc5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1d6ed83e3db68867923b60e32e3ed628505cbed2", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java\nindex 0fcc41ac6a..06dcec0be9 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java\n\n@@ -239,9 +239,9 @@ public interface Buffer {\n \t * Used to identify the type of data contained in the {@link Buffer} so that we can get\n \t * the information without deserializing the serialized data.\n \t *\n-\t * Notes: Currently, one byte is used to serialize {@link DataType}, so the maximum number\n-\t * of data types can be supported is 128. And for compatibility reason, do not change the\n-\t * ordinal of the existing data type.\n+\t * <p>Notes: Currently, one byte is used to serialize the ordinal of {@link DataType} in\n+\t * {@link org.apache.flink.runtime.io.network.netty.NettyMessage.BufferResponse}, so the\n+\t * maximum number of supported data types is 128.\n \t */\n \tenum DataType {\n \t\t/**\n"}}, {"oid": "1d6ed83e3db68867923b60e32e3ed628505cbed2", "url": "https://github.com/apache/flink/commit/1d6ed83e3db68867923b60e32e3ed628505cbed2", "message": "[FLINK-17665][network] Serialize DataType of Buffer into BufferResponse\n\nAfter serializing DataType of Buffer into BufferResponse, we can get the DataType at downstream without deserializing the Buffer, which is more performance friendly.", "committedDate": "2020-05-13T16:20:40Z", "type": "commit"}, {"oid": "1d6ed83e3db68867923b60e32e3ed628505cbed2", "url": "https://github.com/apache/flink/commit/1d6ed83e3db68867923b60e32e3ed628505cbed2", "message": "[FLINK-17665][network] Serialize DataType of Buffer into BufferResponse\n\nAfter serializing DataType of Buffer into BufferResponse, we can get the DataType at downstream without deserializing the Buffer, which is more performance friendly.", "committedDate": "2020-05-13T16:20:40Z", "type": "forcePushed"}]}