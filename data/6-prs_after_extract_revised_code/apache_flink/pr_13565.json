{"pr_number": 13565, "pr_title": "[FLINK-17073][checkpointing] Backpressure checkpointing on slow cleanup", "pr_createdAt": "2020-10-08T17:47:09Z", "pr_url": "https://github.com/apache/flink/pull/13565", "timeline": [{"oid": "0ecc402015f53d8e13797f515e7b230e15ec6bbf", "url": "https://github.com/apache/flink/commit/0ecc402015f53d8e13797f515e7b230e15ec6bbf", "message": "[FLINK-17073] [checkpointing] Introduce CheckpointsCleaner responsible for asynchronous checkpoints cleaning via the ioExecutor. This class counts the number of checkpoints to clean and reports it to CheckpointRequestDecider. Add a test for too many checkpoints to clean.", "committedDate": "2020-10-08T13:48:23Z", "type": "commit"}, {"oid": "2455dcb7c3e5a2c9bbf894896d82a1d7db352cc7", "url": "https://github.com/apache/flink/commit/2455dcb7c3e5a2c9bbf894896d82a1d7db352cc7", "message": "[FLINK-17073][checkpointing][refactor] Remove callbacks from Checkpoint classes\n\nPass CheckpointsCleaner and postCleanup as arguments\ninstead of storing them in Checkpoints classes as callbacks.", "committedDate": "2020-10-08T14:07:20Z", "type": "commit"}, {"oid": "5d75e4997366ca955978cd582ca3e67a897d90df", "url": "https://github.com/apache/flink/commit/5d75e4997366ca955978cd582ca3e67a897d90df", "message": "[hotfix][checkpointing][refactor] Remove PendingCheckpoint.executor\n\nPass Executor as an argument instead of storing it as a field.", "committedDate": "2020-10-08T14:11:07Z", "type": "commit"}, {"oid": "24423325af15daec9939199fbed5063b621f0cd9", "url": "https://github.com/apache/flink/commit/24423325af15daec9939199fbed5063b621f0cd9", "message": "[FLINK-17073][checkpointing][refactor] Remove callback in ZK checkpoint store", "committedDate": "2020-10-08T14:11:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDYxNg==", "url": "https://github.com/apache/flink/pull/13565#discussion_r503350616", "bodyText": "Why do we need this check now? As far as I can tell, previously it was not needed?", "author": "pnowojski", "createdAt": "2020-10-12T14:53:01Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java", "diffHunk": "@@ -531,6 +527,30 @@ private void dispose(boolean releaseState, CheckpointsCleaner checkpointsCleaner\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic void discard() {\n+\t\tsynchronized (lock) {\n+\t\t\tif (stateDiscarded) {\n+\t\t\t\tPreconditions.checkState(discarded, \"Checkpoint should be disposed before being discarded\");\n+\t\t\t\treturn;\n+\t\t\t} else {\n+\t\t\t\tstateDiscarded = true;\n+\t\t\t}\n+\t\t}", "originalCommit": "5feafbbf87c7cefaf7ebe3a36c1e3f346386d629", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzczMDUzMw==", "url": "https://github.com/apache/flink/pull/13565#discussion_r503730533", "bodyText": "Yes, previously it wasn't needed. I added it to avoid future mistakes.", "author": "rkhachatryan", "createdAt": "2020-10-13T07:36:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDYxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwOTY1NQ==", "url": "https://github.com/apache/flink/pull/13565#discussion_r503809655", "bodyText": "Ok, I think I get it now. Now it's a public method so you are protecting it more.\nI think I would prefer:\n\nrename discarded -> disposed or scheduledForDisacrding\nrename stateDiscarded -> discarded\n\n?", "author": "pnowojski", "createdAt": "2020-10-13T09:36:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDYxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg2NjA2Mw==", "url": "https://github.com/apache/flink/pull/13565#discussion_r503866063", "bodyText": "I agree (just wanted to avoid touching additional files calling getter).\nAdded a fixup commit on top.", "author": "rkhachatryan", "createdAt": "2020-10-13T11:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDYxNg=="}], "type": "inlineReview", "revised_code": {"commit": "82386f6b770e774839f3c3d4d28de2019e072775", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java\nindex ca277ea6967..d7f3dafa949 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java\n\n@@ -519,7 +519,7 @@ public class PendingCheckpoint implements Checkpoint {\n \t\t\t\tnumAcknowledgedTasks = -1;\n \t\t\t\tcheckpointsCleaner.cleanCheckpoint(this, releaseState, postCleanup, executor);\n \t\t\t} finally {\n-\t\t\t\tdiscarded = true;\n+\t\t\t\tdisposed = true;\n \t\t\t\tnotYetAcknowledgedTasks.clear();\n \t\t\t\tacknowledgedTasks.clear();\n \t\t\t\tcancelCanceller();\n"}}, {"oid": "82386f6b770e774839f3c3d4d28de2019e072775", "url": "https://github.com/apache/flink/commit/82386f6b770e774839f3c3d4d28de2019e072775", "message": "[FLINK-17073][checkpointing][refactor] Remove callback from CheckpointsCleaner\n\nReplace cleanup Runnable with a direct call to CheckpointsCleaner.", "committedDate": "2020-10-14T10:13:56Z", "type": "commit"}, {"oid": "82386f6b770e774839f3c3d4d28de2019e072775", "url": "https://github.com/apache/flink/commit/82386f6b770e774839f3c3d4d28de2019e072775", "message": "[FLINK-17073][checkpointing][refactor] Remove callback from CheckpointsCleaner\n\nReplace cleanup Runnable with a direct call to CheckpointsCleaner.", "committedDate": "2020-10-14T10:13:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQwMDY3MA==", "url": "https://github.com/apache/flink/pull/13565#discussion_r551400670", "bodyText": "Why do we need the postCleanup? In the current code base I couldn't find a single usage where we don't pass () -> {} @rkhachatryan and @pnowojski? If this is not needed, can we get rid of it? I think it does not make a very nice API with the no-ops.\nMoreover, it would be nice if we could update the JavaDocs if we change the signature of interfaces.", "author": "tillrohrmann", "createdAt": "2021-01-04T15:53:18Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpointStore.java", "diffHunk": "@@ -84,7 +85,7 @@ default CompletedCheckpoint getLatestCheckpoint(boolean isPreferCheckpointForRec\n \t *\n \t * @param jobStatus Job state on shut down\n \t */\n-\tvoid shutdown(JobStatus jobStatus) throws Exception;\n+\tvoid shutdown(JobStatus jobStatus, CheckpointsCleaner checkpointsCleaner, Runnable postCleanup) throws Exception;", "originalCommit": "82386f6b770e774839f3c3d4d28de2019e072775", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQyNjMxNQ==", "url": "https://github.com/apache/flink/pull/13565#discussion_r551426315", "bodyText": "postCleanup is used by checkpointsCleaner but not in case of shutting down. I agree, it should be removed (by pushing down to DefaultCompletedCheckpointStore) and javadoc added. My bad.\nI've created FLINK-20847 to address this.", "author": "rkhachatryan", "createdAt": "2021-01-04T16:33:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQwMDY3MA=="}], "type": "inlineReview", "revised_code": null}]}