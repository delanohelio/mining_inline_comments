{"pr_number": 11648, "pr_title": "[FLINK-16945][checkpointing] Execute CheckpointFailureManager.FailJob\u2026", "pr_createdAt": "2020-04-06T14:22:10Z", "pr_url": "https://github.com/apache/flink/pull/11648", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NTc5Nw==", "url": "https://github.com/apache/flink/pull/11648#discussion_r404795797", "bodyText": "Why did you need to bump those timeouts? Is it because otherwise the checkpoints that you create in your unit test that you introduced could timeout?", "author": "pnowojski", "createdAt": "2020-04-07T13:10:48Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ExecutionGraphCheckpointCoordinatorTest.java", "diffHunk": "@@ -144,11 +228,14 @@ private ExecutionGraph createExecutionGraphAndEnableCheckpointing(\n \t\t\t.setJobGraph(new JobGraph(jobVertex))\n \t\t\t.setRpcTimeout(timeout)\n \t\t\t.setAllocationTimeout(timeout)\n+\t\t\t.setIoExecutor(Executors.directExecutor())\n \t\t\t.build();\n \n+\t\tfinal ExecutionJobVertex executionJobVertex = executionGraph.getVerticesTopologically().iterator().next();\n+\n \t\tCheckpointCoordinatorConfiguration chkConfig = new CheckpointCoordinatorConfiguration(\n-\t\t\t100,\n-\t\t\t100,\n+\t\t\t1000000,\n+\t\t\t1000000,", "originalCommit": "be41fd7ebd6cec17ef830786e89e4d12dcb9fc54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxMDMxMg==", "url": "https://github.com/apache/flink/pull/11648#discussion_r405210312", "bodyText": "Yes, the timeout is one of the reasons. There is another reason that I don't want the periodic checkpoint triggered during testing. It would disturb the verification.", "author": "ifndef-SleePy", "createdAt": "2020-04-08T01:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NTc5Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwMDMyNw==", "url": "https://github.com/apache/flink/pull/11648#discussion_r404800327", "bodyText": "Why is this checkpoint going to be declined? Maybe expand the comment with a bit of explanation?\nIf it's failing, maybe add an assertion that it has failed? Or just skip this code block if it's not necessary for the test as a whole?\nedit:\nreplace\n// trigger a normal checkpoint which would be declined then\n\nwith\n// trigger a normal checkpoint which we will fail/decline later\n\nto avoid confusion as mine above? :)", "author": "pnowojski", "createdAt": "2020-04-07T13:17:20Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ExecutionGraphCheckpointCoordinatorTest.java", "diffHunk": "@@ -131,9 +142,82 @@ public void testShutdownCheckpointCoordinatorOnFinished() throws Exception {\n \t\tassertThat(storeShutdownFuture.get(), is(JobStatus.FINISHED));\n \t}\n \n+\t/**\n+\t * The case is designed to check the race condition between {@link ExecutionGraph} and\n+\t * {@link CheckpointCoordinator}. There should be no checkpoint accepted after\n+\t * {@link CheckpointFailureManager} decides to fail the {@link ExecutionGraph}.\n+\t */\n+\t@Test\n+\tpublic void testNoCheckpointAcceptedWhileFailingExecutionGraph() throws Exception {\n+\t\tCheckpointIDCounter counter = new TestingCheckpointIDCounter(new CompletableFuture<>());\n+\n+\t\tTestingCompletedCheckpointStore store = new TestingCompletedCheckpointStore(new CompletableFuture<>());\n+\n+\t\tfinal ManuallyTriggeredScheduledExecutor mainThreadExecutor = new ManuallyTriggeredScheduledExecutor();\n+\t\tExecutionGraph graph = createExecutionGraphAndEnableCheckpointing(\n+\t\t\tcounter,\n+\t\t\tstore,\n+\t\t\tnew ComponentMainThreadExecutorServiceAdapter(mainThreadExecutor, Thread.currentThread()));\n+\n+\t\tfinal CheckpointCoordinator checkpointCoordinator = graph.getCheckpointCoordinator();\n+\n+\t\tassertThat(checkpointCoordinator, Matchers.notNullValue());\n+\t\tassertThat(checkpointCoordinator.isShutdown(), is(false));\n+\n+\t\tgraph.scheduleForExecution();\n+\t\tExecutionGraphTestUtils.switchToRunning(graph);\n+\n+\t\t// trigger a normal checkpoint which would be declined then\n+\t\tcheckpointCoordinator.triggerCheckpoint(System.currentTimeMillis(), true);\n+\t\tmainThreadExecutor.triggerAll();\n+\t\tfinal long checkpointId = checkpointCoordinator.getPendingCheckpoints().keySet().iterator().next();", "originalCommit": "be41fd7ebd6cec17ef830786e89e4d12dcb9fc54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxMDkzOA==", "url": "https://github.com/apache/flink/pull/11648#discussion_r405210938", "bodyText": "sure", "author": "ifndef-SleePy", "createdAt": "2020-04-08T01:45:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwMDMyNw=="}], "type": "inlineReview", "revised_code": {"commit": "99b55422106d30a8d6a9e03fa4f665b683615f71", "chunk": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ExecutionGraphCheckpointCoordinatorTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ExecutionGraphCheckpointCoordinatorTest.java\nindex f88abe13c9..78b798d64e 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ExecutionGraphCheckpointCoordinatorTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ExecutionGraphCheckpointCoordinatorTest.java\n\n@@ -167,7 +167,7 @@ public class ExecutionGraphCheckpointCoordinatorTest extends TestLogger {\n \t\tgraph.scheduleForExecution();\n \t\tExecutionGraphTestUtils.switchToRunning(graph);\n \n-\t\t// trigger a normal checkpoint which would be declined then\n+\t\t// trigger a normal checkpoint which we will fail/decline later\n \t\tcheckpointCoordinator.triggerCheckpoint(System.currentTimeMillis(), true);\n \t\tmainThreadExecutor.triggerAll();\n \t\tfinal long checkpointId = checkpointCoordinator.getPendingCheckpoints().keySet().iterator().next();\n"}}, {"oid": "99b55422106d30a8d6a9e03fa4f665b683615f71", "url": "https://github.com/apache/flink/commit/99b55422106d30a8d6a9e03fa4f665b683615f71", "message": "[FLINK-16945][checkpointing] Execute CheckpointFailureManager.FailJobCallback directly in main thread executor", "committedDate": "2020-04-08T01:44:39Z", "type": "commit"}, {"oid": "99b55422106d30a8d6a9e03fa4f665b683615f71", "url": "https://github.com/apache/flink/commit/99b55422106d30a8d6a9e03fa4f665b683615f71", "message": "[FLINK-16945][checkpointing] Execute CheckpointFailureManager.FailJobCallback directly in main thread executor", "committedDate": "2020-04-08T01:44:39Z", "type": "forcePushed"}]}