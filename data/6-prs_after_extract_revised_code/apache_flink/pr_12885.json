{"pr_number": 12885, "pr_title": "[FLINK-18585][elasticsearch] Dynamic index can not work in new DynamicTableSink", "pr_createdAt": "2020-07-13T12:22:02Z", "pr_url": "https://github.com/apache/flink/pull/12885", "timeline": [{"oid": "7b910e7be07e4dad715382de2ef09e5715c7cb7f", "url": "https://github.com/apache/flink/commit/7b910e7be07e4dad715382de2ef09e5715c7cb7f", "message": "[FLINK-18585][elasticsearch] Dynamic index can not work in new DynamicTableSink", "committedDate": "2020-07-13T12:16:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMjA5OQ==", "url": "https://github.com/apache/flink/pull/12885#discussion_r453632099", "bodyText": "Use DDL for IT case.", "author": "wuchong", "createdAt": "2020-07-13T13:01:44Z", "path": "flink-connectors/flink-connector-elasticsearch6/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch6DynamicSinkITCase.java", "diffHunk": "@@ -247,6 +247,45 @@ public void testWritingDocumentsNoPrimaryKey() throws Exception {\n \t\tassertThat(result, equalTo(expectedMap));\n \t}\n \n+\t@Test\n+\tpublic void testWritingDocumentsWithDynamicIndex() throws Exception {\n+\t\tTableSchema schema = TableSchema.builder()\n+\t\t\t.field(\"a\", DataTypes.BIGINT().notNull())\n+\t\t\t.field(\"b\", DataTypes.TIMESTAMP().notNull())\n+\t\t\t.primaryKey(\"a\")\n+\t\t\t.build();\n+\t\tGenericRowData rowData = GenericRowData.of(\n+\t\t\t1L,\n+\t\t\tTimestampData.fromLocalDateTime(LocalDateTime.parse(\"2012-12-12T12:12:12\")));\n+\n+\t\tString index = \"dynamic-index-{b|yyyy-MM-dd}\";\n+\t\tString myType = \"MyType\";\n+\t\tElasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n+\n+\t\tSinkFunctionProvider sinkRuntimeProvider = (SinkFunctionProvider) sinkFactory.createDynamicTableSink(\n+\t\t\tcontext()\n+\t\t\t\t.withSchema(schema)\n+\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), index)\n+\t\t\t\t.withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), myType)\n+\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://127.0.0.1:9200\")\n+\t\t\t\t.withOption(ElasticsearchOptions.FLUSH_ON_CHECKPOINT_OPTION.key(), \"false\")\n+\t\t\t\t.build()\n+\t\t).getSinkRuntimeProvider(new MockContext());\n+\n+\t\tSinkFunction<RowData> sinkFunction = sinkRuntimeProvider.createSinkFunction();", "originalCommit": "7b910e7be07e4dad715382de2ef09e5715c7cb7f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f4cdf12e413735712f7fcb654ae3a82e58aa138", "chunk": "diff --git a/flink-connectors/flink-connector-elasticsearch6/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch6DynamicSinkITCase.java b/flink-connectors/flink-connector-elasticsearch6/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch6DynamicSinkITCase.java\nindex 828141b3fe1..b306b34b6bf 100644\n--- a/flink-connectors/flink-connector-elasticsearch6/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch6DynamicSinkITCase.java\n+++ b/flink-connectors/flink-connector-elasticsearch6/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch6DynamicSinkITCase.java\n\n@@ -249,34 +249,32 @@ public class Elasticsearch6DynamicSinkITCase {\n \n \t@Test\n \tpublic void testWritingDocumentsWithDynamicIndex() throws Exception {\n-\t\tTableSchema schema = TableSchema.builder()\n-\t\t\t.field(\"a\", DataTypes.BIGINT().notNull())\n-\t\t\t.field(\"b\", DataTypes.TIMESTAMP().notNull())\n-\t\t\t.primaryKey(\"a\")\n-\t\t\t.build();\n-\t\tGenericRowData rowData = GenericRowData.of(\n-\t\t\t1L,\n-\t\t\tTimestampData.fromLocalDateTime(LocalDateTime.parse(\"2012-12-12T12:12:12\")));\n+\t\tTableEnvironment tableEnvironment = TableEnvironment.create(EnvironmentSettings.newInstance()\n+\t\t\t.useBlinkPlanner()\n+\t\t\t.inStreamingMode()\n+\t\t\t.build());\n \n \t\tString index = \"dynamic-index-{b|yyyy-MM-dd}\";\n \t\tString myType = \"MyType\";\n-\t\tElasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n-\n-\t\tSinkFunctionProvider sinkRuntimeProvider = (SinkFunctionProvider) sinkFactory.createDynamicTableSink(\n-\t\t\tcontext()\n-\t\t\t\t.withSchema(schema)\n-\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), index)\n-\t\t\t\t.withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), myType)\n-\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://127.0.0.1:9200\")\n-\t\t\t\t.withOption(ElasticsearchOptions.FLUSH_ON_CHECKPOINT_OPTION.key(), \"false\")\n-\t\t\t\t.build()\n-\t\t).getSinkRuntimeProvider(new MockContext());\n+\t\ttableEnvironment.executeSql(\"CREATE TABLE esTable (\" +\n+\t\t\t\"a BIGINT NOT NULL,\\n\" +\n+\t\t\t\"b TIMESTAMP NOT NULL,\\n\" +\n+\t\t\t\"PRIMARY KEY (a) NOT ENFORCED\\n\" +\n+\t\t\t\")\\n\" +\n+\t\t\t\"WITH (\\n\" +\n+\t\t\tString.format(\"'%s'='%s',\\n\", \"connector\", \"elasticsearch-6\") +\n+\t\t\tString.format(\"'%s'='%s',\\n\", ElasticsearchOptions.INDEX_OPTION.key(), index) +\n+\t\t\tString.format(\"'%s'='%s',\\n\", ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), myType) +\n+\t\t\tString.format(\"'%s'='%s',\\n\", ElasticsearchOptions.HOSTS_OPTION.key(), \"http://127.0.0.1:9200\") +\n+\t\t\tString.format(\"'%s'='%s'\\n\", ElasticsearchOptions.FLUSH_ON_CHECKPOINT_OPTION.key(), \"false\") +\n+\t\t\t\")\");\n \n-\t\tSinkFunction<RowData> sinkFunction = sinkRuntimeProvider.createSinkFunction();\n-\t\tStreamExecutionEnvironment environment = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\trowData.setRowKind(RowKind.UPDATE_AFTER);\n-\t\tenvironment.<RowData>fromElements(rowData).addSink(sinkFunction);\n-\t\tenvironment.execute();\n+\t\ttableEnvironment.fromValues(row(1L, LocalDateTime.parse(\"2012-12-12T12:12:12\")))\n+\t\t\t.executeInsert(\"esTable\")\n+\t\t\t.getJobClient()\n+\t\t\t.get()\n+\t\t\t.getJobExecutionResult(this.getClass().getClassLoader())\n+\t\t\t.get();\n \n \t\tClient client = elasticsearchResource.getClient();\n \t\tMap<String, Object> response = client.get(new GetRequest(\"dynamic-index-2012-12-12\", myType, \"1\")).actionGet().getSource();\n"}}, {"oid": "9f4cdf12e413735712f7fcb654ae3a82e58aa138", "url": "https://github.com/apache/flink/commit/9f4cdf12e413735712f7fcb654ae3a82e58aa138", "message": "update tests", "committedDate": "2020-07-13T14:00:45Z", "type": "commit"}]}