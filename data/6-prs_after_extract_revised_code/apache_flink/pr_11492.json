{"pr_number": 11492, "pr_title": "[FLINK-16740][orc] OrcSplitReaderUtil::logicalTypeToOrcType fails to \u2026", "pr_createdAt": "2020-03-24T06:21:10Z", "pr_url": "https://github.com/apache/flink/pull/11492", "timeline": [{"oid": "0aa5fdeb1ccc1f795a885218a10624baab48ae63", "url": "https://github.com/apache/flink/commit/0aa5fdeb1ccc1f795a885218a10624baab48ae63", "message": "[FLINK-16740][orc] OrcSplitReaderUtil::logicalTypeToOrcType fails to create decimal type with precision < 10", "committedDate": "2020-03-24T06:16:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1Mjg4OQ==", "url": "https://github.com/apache/flink/pull/11492#discussion_r396952889", "bodyText": "Just curious why this order matters?", "author": "KurtYoung", "createdAt": "2020-03-24T07:43:43Z", "path": "flink-formats/flink-orc/src/main/java/org/apache/flink/orc/OrcSplitReaderUtil.java", "diffHunk": "@@ -158,8 +158,8 @@ static TypeDescription logicalTypeToOrcType(LogicalType type) {\n \t\t\tcase DECIMAL:\n \t\t\t\tDecimalType decimalType = (DecimalType) type;\n \t\t\t\treturn TypeDescription.createDecimal()\n-\t\t\t\t\t\t.withPrecision(decimalType.getPrecision())\n-\t\t\t\t\t\t.withScale(decimalType.getScale());\n+\t\t\t\t\t\t.withScale(decimalType.getScale())", "originalCommit": "0aa5fdeb1ccc1f795a885218a10624baab48ae63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1NjgxMA==", "url": "https://github.com/apache/flink/pull/11492#discussion_r396956810", "bodyText": "I had some explanations in the description of this PR. In short, it's because ORC TypeDescription assumes default scale to be 10, and asserts scale < precision when we set the precision.\nIt'd be better if they provide an interface to set precision and scale in one go.", "author": "lirui-apache", "createdAt": "2020-03-24T07:52:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1Mjg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1NzY1OA==", "url": "https://github.com/apache/flink/pull/11492#discussion_r396957658", "bodyText": "public TypeDescription withPrecision(int precision) {\n    if (precision < 1 || precision > MAX_PRECISION || **scale > precision**){\n      throw new IllegalArgumentException(\"precision \" + precision +\n          \" is out of range 1 .. \" + scale);\n    }\n    this.precision = precision;\n    return this;\n  }\n\nThere is check in withPrecision, and default scale is 10.", "author": "JingsongLi", "createdAt": "2020-03-24T07:53:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1Mjg4OQ=="}], "type": "inlineReview", "revised_code": null}]}