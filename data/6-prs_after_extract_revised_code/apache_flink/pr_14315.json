{"pr_number": 14315, "pr_title": "[FLINK-20478][table-planner-blink] Adjust the explain result for blink planner", "pr_createdAt": "2020-12-05T09:00:05Z", "pr_url": "https://github.com/apache/flink/pull/14315", "timeline": [{"oid": "d244b5a760a84cc019788bc8c4ce84784152d26f", "url": "https://github.com/apache/flink/commit/d244b5a760a84cc019788bc8c4ce84784152d26f", "message": "[FLINK-20478][table-planner-blink] ExecNodePlanDumper only displays the attributes of ExecNode", "committedDate": "2020-12-05T09:04:21Z", "type": "forcePushed"}, {"oid": "24f37dab384122f6e95ffd3684fffc8401ca3380", "url": "https://github.com/apache/flink/commit/24f37dab384122f6e95ffd3684fffc8401ca3380", "message": "[FLINK-20478][table-planner-blink] ExecNodePlanDumper only displays the attributes of ExecNode", "committedDate": "2020-12-06T16:04:29Z", "type": "forcePushed"}, {"oid": "a3f61482d6083556f5304a670939332f676ee879", "url": "https://github.com/apache/flink/commit/a3f61482d6083556f5304a670939332f676ee879", "message": "[FLINK-20478][table-planner-blink] ExecNodePlanDumper only displays the attributes of ExecNode", "committedDate": "2020-12-06T16:12:40Z", "type": "forcePushed"}, {"oid": "5d0686ca5fcf8ac45b5fcf7e884864ffe3c5ab7e", "url": "https://github.com/apache/flink/commit/5d0686ca5fcf8ac45b5fcf7e884864ffe3c5ab7e", "message": "[FLINK-20478][table-planner-blink] ExecNodePlanDumper only displays the attributes of ExecNode", "committedDate": "2020-12-07T02:08:59Z", "type": "forcePushed"}, {"oid": "7d81f10ae1ee99ae852e4333e9ac766c44f563cf", "url": "https://github.com/apache/flink/commit/7d81f10ae1ee99ae852e4333e9ac766c44f563cf", "message": "[FLINK-20478][table-planner-blink] ExecNodePlanDumper only displays the attributes of ExecNode", "committedDate": "2020-12-07T10:12:46Z", "type": "forcePushed"}, {"oid": "7890576ec8c791313d5a309a3488b1de846e2e47", "url": "https://github.com/apache/flink/commit/7890576ec8c791313d5a309a3488b1de846e2e47", "message": "[FLINK-20478][table-planner-blink] ExecNodePlanDumper only displays the attributes of ExecNode", "committedDate": "2020-12-09T08:42:50Z", "type": "forcePushed"}, {"oid": "c89b7c0522e126bb172acaef9d182d602a4a7d34", "url": "https://github.com/apache/flink/commit/c89b7c0522e126bb172acaef9d182d602a4a7d34", "message": "[FLINK-20478][table-planner-blink] Normalize the plan printing: print arithmetic operators, comparison operators and AND/OR operator as the infix style, and print other operators as the prefix style", "committedDate": "2020-12-09T12:45:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc4NTIzOQ==", "url": "https://github.com/apache/flink/pull/14315#discussion_r539785239", "bodyText": "I think it is a dag not tree?", "author": "wenlong88", "createdAt": "2020-12-10T01:58:06Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java", "diffHunk": "@@ -0,0 +1,391 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.planner.plan.utils;\n+\n+import org.apache.flink.table.planner.plan.nodes.calcite.LegacySink;\n+import org.apache.flink.table.planner.plan.nodes.calcite.Sink;\n+import org.apache.flink.table.planner.plan.nodes.exec.ExecNode;\n+import org.apache.flink.table.planner.plan.nodes.exec.ExecNodeVisitor;\n+import org.apache.flink.table.planner.plan.nodes.exec.ExecNodeVisitorImpl;\n+import org.apache.flink.table.planner.plan.nodes.physical.FlinkPhysicalRel;\n+import org.apache.flink.util.Preconditions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.IdentityHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static org.apache.flink.util.Preconditions.checkNotNull;\n+\n+/**\n+ * An utility class for converting an exec node plan to a string as a tree style.\n+ */\n+public class ExecNodePlanDumper {\n+\n+\t/**\n+\t * Converts an {@link ExecNode} tree to a string as a tree style.\n+\t *\n+\t * @param node the ExecNode to convert\n+\t * @return explain plan of ExecNode\n+\t *\n+\t * <p> The following tree of {@link ExecNode}", "originalCommit": "0e7b23c85777667d339a659a70922d79d8ca9a79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgyMDAwMA==", "url": "https://github.com/apache/flink/pull/14315#discussion_r539820000", "bodyText": "if there is only one sink (root) node, it's a rooted tree, see https://en.wikipedia.org/wiki/Tree_(graph_theory)#Rooted_tree", "author": "godfreyhe", "createdAt": "2020-12-10T03:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc4NTIzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "80537703f8383d5dd6c36dbd45ed63cfa83364c0", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java\nindex 5a805aa5c2..a1f75374a1 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java\n\n@@ -44,10 +44,7 @@ public class ExecNodePlanDumper {\n \t/**\n \t * Converts an {@link ExecNode} tree to a string as a tree style.\n \t *\n-\t * @param node the ExecNode to convert\n-\t * @return explain plan of ExecNode\n-\t *\n-\t * <p> The following tree of {@link ExecNode}\n+\t *  <p>The following tree of {@link ExecNode}\n \t * <pre>{@code\n \t *        Sink\n \t *         |\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc4ODQ2MA==", "url": "https://github.com/apache/flink/pull/14315#discussion_r539788460", "bodyText": "just wonder that why the result doesn't contain 2 tree starting from sink but three trees? IMO, treeToString and dagToString can be unified and it maybe easier to understand for user if the plan starts from sink.", "author": "wenlong88", "createdAt": "2020-12-10T02:05:43Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java", "diffHunk": "@@ -0,0 +1,391 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.planner.plan.utils;\n+\n+import org.apache.flink.table.planner.plan.nodes.calcite.LegacySink;\n+import org.apache.flink.table.planner.plan.nodes.calcite.Sink;\n+import org.apache.flink.table.planner.plan.nodes.exec.ExecNode;\n+import org.apache.flink.table.planner.plan.nodes.exec.ExecNodeVisitor;\n+import org.apache.flink.table.planner.plan.nodes.exec.ExecNodeVisitorImpl;\n+import org.apache.flink.table.planner.plan.nodes.physical.FlinkPhysicalRel;\n+import org.apache.flink.util.Preconditions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.IdentityHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static org.apache.flink.util.Preconditions.checkNotNull;\n+\n+/**\n+ * An utility class for converting an exec node plan to a string as a tree style.\n+ */\n+public class ExecNodePlanDumper {\n+\n+\t/**\n+\t * Converts an {@link ExecNode} tree to a string as a tree style.\n+\t *\n+\t * @param node the ExecNode to convert\n+\t * @return explain plan of ExecNode\n+\t *\n+\t * <p> The following tree of {@link ExecNode}\n+\t * <pre>{@code\n+\t *        Sink\n+\t *         |\n+\t *        Join\n+\t *      /      \\\n+\t *  Filter1  Filter2\n+\t *     \\     /\n+\t *    Project1\n+\t *       |\n+\t *     Scan\n+\t * }</pre>\n+\t *\n+\t * would be converted to the tree style as following:\n+\t * <pre>{@code\n+\t * Sink\n+\t * +- Join\n+\t *    :- Filter1\n+\t *    :  +- Project1(reuse_id=[1])\n+\t *    :     +- Scan\n+\t *    +- Filter2\n+\t *       +- Reused(reference_id=[1])\n+\t * }\n+\t * }</pre>\n+\t */\n+\tpublic static String treeToString(ExecNode<?> node) {\n+\t\treturn treeToString(node, new ArrayList<>(), false);\n+\t}\n+\n+\t/**\n+\t * Converts an {@link ExecNode} tree to a string as a tree style.\n+\t *\n+\t * @param node the ExecNode to convert\n+\t * @param borders node sets that stop visit when meet them\n+\t * @param includingBorders Whether print the border nodes\n+\t * @return the plan of ExecNode\n+\t */\n+\tpublic static String treeToString(ExecNode<?> node, List<ExecNode<?>> borders, boolean includingBorders) {\n+\t\tcheckNotNull(node, \"node should not be null.\");\n+\t\t// convert to mutable list\n+\t\tList<ExecNode<?>> borderList = new ArrayList<>(checkNotNull(borders, \"borders should not be null.\"));\n+\t\tTreeReuseInfo reuseInfo = new TreeReuseInfo(node, borderList);\n+\t\treturn doConvertTreeToString(node, reuseInfo, true, borderList, includingBorders);\n+\t}\n+\n+\t/**\n+\t * Converts an {@link ExecNode} DAG to a string as a tree style.\n+\t *\n+\t * @param nodes the ExecNodes to convert\n+\t * @return the plan of ExecNode\n+\t *\n+\t * <p> The following DAG of {@link ExecNode}\n+\t * <pre>{@code\n+\t *     Sink1    Sink2\n+\t *      |        |\n+\t *   Filter3  Filter4\n+\t *       \\     /\n+\t *        Join\n+\t *      /      \\\n+\t *  Filter1  Filter2\n+\t *     \\     /\n+\t *    Project1\n+\t *       |\n+\t *     Scan\n+\t * }</pre>\n+\t *\n+\t * would be converted to the tree style as following:\n+\t * <pre>{@code", "originalCommit": "c89b7c0522e126bb172acaef9d182d602a4a7d34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgxMzQzOA==", "url": "https://github.com/apache/flink/pull/14315#discussion_r539813438", "bodyText": "how to display the reused (common) plan ? If  the result of the example just contains two trees, each tree will display all nodes from sink to source.", "author": "godfreyhe", "createdAt": "2020-12-10T03:16:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc4ODQ2MA=="}], "type": "inlineReview", "revised_code": {"commit": "80537703f8383d5dd6c36dbd45ed63cfa83364c0", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java\nindex 5a805aa5c2..a1f75374a1 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/ExecNodePlanDumper.java\n\n@@ -44,10 +44,7 @@ public class ExecNodePlanDumper {\n \t/**\n \t * Converts an {@link ExecNode} tree to a string as a tree style.\n \t *\n-\t * @param node the ExecNode to convert\n-\t * @return explain plan of ExecNode\n-\t *\n-\t * <p> The following tree of {@link ExecNode}\n+\t *  <p>The following tree of {@link ExecNode}\n \t * <pre>{@code\n \t *        Sink\n \t *         |\n"}}, {"oid": "80537703f8383d5dd6c36dbd45ed63cfa83364c0", "url": "https://github.com/apache/flink/commit/80537703f8383d5dd6c36dbd45ed63cfa83364c0", "message": "[FLINK-20478][table-planner-blink] Normalize the plan printing: print arithmetic operators, comparison operators and AND/OR operator as the infix style, and print other operators as the prefix style\n\nThis closes #14315", "committedDate": "2020-12-10T14:17:49Z", "type": "forcePushed"}, {"oid": "f11937f7d55cebf72abaec9c64c4561e32be2fa9", "url": "https://github.com/apache/flink/commit/f11937f7d55cebf72abaec9c64c4561e32be2fa9", "message": "[FLINK-20478][table-planner-blink] Normalize the plan printing: print arithmetic operators, comparison operators and AND/OR operator as the infix style, and print other operators as the prefix style\n\nThis closes #14315", "committedDate": "2020-12-10T14:29:50Z", "type": "forcePushed"}, {"oid": "234c85248a621f76d16d1f36ecc25f76469fc478", "url": "https://github.com/apache/flink/commit/234c85248a621f76d16d1f36ecc25f76469fc478", "message": "[FLINK-20478][table-planner-blink] Adjust the explain result for blink planner\n\nThis closes #14315", "committedDate": "2020-12-10T16:24:17Z", "type": "commit"}, {"oid": "fdfbe326164e67a5c6de1d918294f8e43469b74c", "url": "https://github.com/apache/flink/commit/fdfbe326164e67a5c6de1d918294f8e43469b74c", "message": "[hotfix] BatchExecRank#explainTerms should use `RelWriter#input` instead of `RelWriter#item` for input rel\n\nThis closes #14315", "committedDate": "2020-12-10T16:24:17Z", "type": "commit"}, {"oid": "23665039b4d6e558f876f902053e2247c3205aa2", "url": "https://github.com/apache/flink/commit/23665039b4d6e558f876f902053e2247c3205aa2", "message": "[FLINK-20478][table-planner-blink] ExecNodePlanDumper only displays the attributes of ExecNode\n\nThis closes #14315", "committedDate": "2020-12-10T16:24:17Z", "type": "commit"}, {"oid": "641ede9d043a115cfb2613aae136dac460cce1e0", "url": "https://github.com/apache/flink/commit/641ede9d043a115cfb2613aae136dac460cce1e0", "message": "[FLINK-20478][table-planner-blink] Normalize ExecNode's description: print arithmetic operators, comparison operators and AND/OR operator as the infix style, and print other operators as the prefix style\n\nThis closes #14315", "committedDate": "2020-12-10T16:25:30Z", "type": "commit"}, {"oid": "641ede9d043a115cfb2613aae136dac460cce1e0", "url": "https://github.com/apache/flink/commit/641ede9d043a115cfb2613aae136dac460cce1e0", "message": "[FLINK-20478][table-planner-blink] Normalize ExecNode's description: print arithmetic operators, comparison operators and AND/OR operator as the infix style, and print other operators as the prefix style\n\nThis closes #14315", "committedDate": "2020-12-10T16:25:30Z", "type": "forcePushed"}]}