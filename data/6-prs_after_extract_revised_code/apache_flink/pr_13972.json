{"pr_number": 13972, "pr_title": "[FLINK-19912][json] Fix JSON format fails to serialize map value with\u2026", "pr_createdAt": "2020-11-06T18:28:54Z", "pr_url": "https://github.com/apache/flink/pull/13972", "timeline": [{"oid": "51a6d2c307caa087518945825fb72ac1921c1a50", "url": "https://github.com/apache/flink/commit/51a6d2c307caa087518945825fb72ac1921c1a50", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys", "committedDate": "2020-11-07T13:17:56Z", "type": "forcePushed"}, {"oid": "18bd1620f55d1363b4d3173dc2e9c14e83ba859b", "url": "https://github.com/apache/flink/commit/18bd1620f55d1363b4d3173dc2e9c14e83ba859b", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys", "committedDate": "2020-11-08T13:40:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU0NjYyNQ==", "url": "https://github.com/apache/flink/pull/13972#discussion_r519546625", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t.withDescription(\"Optional flag to specify string literal when 'map-null-key.literal' is LITERAL, \\\"null\\\" by default.\");\n          \n          \n            \n            \t\t.withDescription(\"Optional flag to specify string literal for null keys when 'map-null-key.mode' is LITERAL, \\\"null\\\" by default.\");", "author": "wuchong", "createdAt": "2020-11-09T04:28:52Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java", "diffHunk": "@@ -36,14 +40,28 @@\n \t\t\t.key(\"fail-on-missing-field\")\n \t\t\t.booleanType()\n \t\t\t.defaultValue(false)\n-\t\t\t.withDescription(\"Optional flag to specify whether to fail if a field is missing or not, false by default\");\n+\t\t\t.withDescription(\"Optional flag to specify whether to fail if a field is missing or not, false by default.\");\n \n \tpublic static final ConfigOption<Boolean> IGNORE_PARSE_ERRORS = ConfigOptions\n \t\t\t.key(\"ignore-parse-errors\")\n \t\t\t.booleanType()\n \t\t\t.defaultValue(false)\n \t\t\t.withDescription(\"Optional flag to skip fields and rows with parse errors instead of failing;\\n\"\n-\t\t\t\t\t+ \"fields are set to null in case of errors, false by default\");\n+\t\t\t\t\t+ \"fields are set to null in case of errors, false by default.\");\n+\n+\tpublic static final ConfigOption<String> MAP_NULL_KEY_MODE = ConfigOptions\n+\t\t.key(\"map-null-key.mode\")\n+\t\t.stringType()\n+\t\t.defaultValue(\"FAIL\")\n+\t\t.withDescription(\"Optional flag to control the handling mode when serializing null key for map data, FAIL by default.\"\n+\t\t\t+ \" Option DROP will drop null key entries for map data.\"\n+\t\t\t+ \" Option LITERAL will use 'map-null-key.literal' as key literal.\");\n+\n+\tpublic static final ConfigOption<String> MAP_NULL_KEY_LITERAL = ConfigOptions\n+\t\t.key(\"map-null-key.literal\")\n+\t\t.stringType()\n+\t\t.defaultValue(\"null\")\n+\t\t.withDescription(\"Optional flag to specify string literal when 'map-null-key.literal' is LITERAL, \\\"null\\\" by default.\");", "originalCommit": "951191135eee7d3f7fddea2a5e296dbd36716dd3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aeae10f1d6b602b08485ff70d90ea8f536779420", "chunk": "diff --git a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java\nindex 6323f01c85f..037027a5839 100644\n--- a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java\n+++ b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java\n\n@@ -61,7 +60,7 @@ public class JsonOptions {\n \t\t.key(\"map-null-key.literal\")\n \t\t.stringType()\n \t\t.defaultValue(\"null\")\n-\t\t.withDescription(\"Optional flag to specify string literal when 'map-null-key.literal' is LITERAL, \\\"null\\\" by default.\");\n+\t\t.withDescription(\"Optional flag to specify string literal for null keys when 'map-null-key.mode' is LITERAL, \\\"null\\\" by default.\");\n \n \tpublic static final ConfigOption<String> TIMESTAMP_FORMAT = ConfigOptions\n \t\t\t.key(\"timestamp-format.standard\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU0ODg0Nw==", "url": "https://github.com/apache/flink/pull/13972#discussion_r519548847", "bodyText": "We don't need JSON_MAP_NULL_KEY_MODE_ENUM.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t// validator for {@link MAP_NULL_KEY_MODE}\n          \n          \n            \n            \t\tif (!JSON_MAP_NULL_KEY_MODE_ENUM.contains(mapNullKeyMode.toUpperCase())){\n          \n          \n            \n            \t\t\tthrow new ValidationException(\n          \n          \n            \n            \t\t\t\tString.format(\"Unsupported value '%s' for %s. Supported values are [FAIL, DROP, LITERAL].\",\n          \n          \n            \n            \t\t\t\t\tmapNullKeyMode, MAP_NULL_KEY_MODE.key()));\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tSet<String> nullKeyModes = Arrays.stream(MapNullKeyMode.values())\n          \n          \n            \n            \t\t\t.map(Objects::toString)\n          \n          \n            \n            \t\t\t.collect(Collectors.toSet());\n          \n          \n            \n            \t\tif (!nullKeyModes.contains(tableOptions.get(MAP_NULL_KEY_MODE).toUpperCase())){\n          \n          \n            \n            \t\t\tthrow new ValidationException(String.format(\n          \n          \n            \n            \t\t\t\t\"Unsupported value '%s' for option %s. Supported values are %s.\",\n          \n          \n            \n            \t\t\t\tmapNullKeyMode,\n          \n          \n            \n            \t\t\t\tMAP_NULL_KEY_MODE.key(),\n          \n          \n            \n            \t\t\t\tnullKeyModes));\n          \n          \n            \n            \t\t}", "author": "wuchong", "createdAt": "2020-11-09T04:39:16Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java", "diffHunk": "@@ -81,4 +110,89 @@ public static TimestampFormat getTimestampFormat(ReadableConfig config){\n \t\t\t\t\tString.format(\"Unsupported timestamp format '%s'. Validator should have checked that.\", timestampFormat));\n \t\t}\n \t}\n+\n+\t/**\n+\t * Creates handling mode for null key map data.\n+\t *\n+\t * <p>See {@link #JSON_MAP_NULL_KEY_MODE_FAIL}, {@link #JSON_MAP_NULL_KEY_MODE_DROP},\n+\t * and {@link #JSON_MAP_NULL_KEY_MODE_LITERAL} for more information.\n+\t */\n+\tpublic static MapNullKeyMode getMapNullKeyMode(ReadableConfig config){\n+\t\tString mapNullKeyMode = config.get(MAP_NULL_KEY_MODE);\n+\t\tswitch (mapNullKeyMode.toUpperCase()){\n+\t\t\tcase JSON_MAP_NULL_KEY_MODE_FAIL:\n+\t\t\t\treturn MapNullKeyMode.FAIL;\n+\t\t\tcase JSON_MAP_NULL_KEY_MODE_DROP:\n+\t\t\t\treturn MapNullKeyMode.DROP;\n+\t\t\tcase JSON_MAP_NULL_KEY_MODE_LITERAL:\n+\t\t\t\treturn MapNullKeyMode.LITERAL;\n+\t\t\tdefault:\n+\t\t\t\tthrow new TableException(\n+\t\t\t\t\tString.format(\"Unsupported map null key handling mode '%s'. Validator should have checked that.\", mapNullKeyMode));\n+\t\t}\n+\t}\n+\n+\t// --------------------------------------------------------------------------------------------\n+\t// Inner classes\n+\t// --------------------------------------------------------------------------------------------\n+\n+\t/** Handling mode for map data with null key. */\n+\tpublic enum MapNullKeyMode {\n+\t\tFAIL,\n+\t\tDROP,\n+\t\tLITERAL\n+\t}\n+\n+\t// --------------------------------------------------------------------------------------------\n+\t// Validation\n+\t// --------------------------------------------------------------------------------------------\n+\n+\t/**\n+\t * Validator for decoding format.\n+\t */\n+\tpublic static void validateDecodingFormatOptions(ReadableConfig tableOptions) {\n+\t\tboolean failOnMissingField = tableOptions.get(FAIL_ON_MISSING_FIELD);\n+\t\tboolean ignoreParseErrors = tableOptions.get(IGNORE_PARSE_ERRORS);\n+\t\tif (ignoreParseErrors && failOnMissingField) {\n+\t\t\tthrow new ValidationException(FAIL_ON_MISSING_FIELD.key()\n+\t\t\t\t+ \" and \"\n+\t\t\t\t+ IGNORE_PARSE_ERRORS.key()\n+\t\t\t\t+ \" shouldn't both be true.\");\n+\t\t}\n+\t\tvalidateTimestampFormat(tableOptions);\n+\t}\n+\n+\t/**\n+\t * Validator for encoding format.\n+\t */\n+\tpublic static void validateEncodingFormatOptions(ReadableConfig tableOptions) {\n+\t\tString mapNullKeyMode = tableOptions.get(MAP_NULL_KEY_MODE);\n+\t\t// validator for {@link MAP_NULL_KEY_MODE}\n+\t\tif (!JSON_MAP_NULL_KEY_MODE_ENUM.contains(mapNullKeyMode.toUpperCase())){\n+\t\t\tthrow new ValidationException(\n+\t\t\t\tString.format(\"Unsupported value '%s' for %s. Supported values are [FAIL, DROP, LITERAL].\",\n+\t\t\t\t\tmapNullKeyMode, MAP_NULL_KEY_MODE.key()));\n+\t\t}", "originalCommit": "951191135eee7d3f7fddea2a5e296dbd36716dd3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aeae10f1d6b602b08485ff70d90ea8f536779420", "chunk": "diff --git a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java\nindex 6323f01c85f..037027a5839 100644\n--- a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java\n+++ b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java\n\n@@ -148,7 +141,7 @@ public class JsonOptions {\n \t// --------------------------------------------------------------------------------------------\n \n \t/**\n-\t * Validator for decoding format.\n+\t * Validator for json decoding format.\n \t */\n \tpublic static void validateDecodingFormatOptions(ReadableConfig tableOptions) {\n \t\tboolean failOnMissingField = tableOptions.get(FAIL_ON_MISSING_FIELD);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYwNjg2MQ==", "url": "https://github.com/apache/flink/pull/13972#discussion_r519606861", "bodyText": "Separate parameters into a new line.", "author": "wuchong", "createdAt": "2020-11-09T07:44:44Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonFormatFactory.java", "diffHunk": "@@ -96,16 +98,21 @@ public ChangelogMode getChangelogMode() {\n \t\t\tDynamicTableFactory.Context context,\n \t\t\tReadableConfig formatOptions) {\n \t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n+\t\tvalidateEncodingFormatOptions(formatOptions);\n \n \t\tTimestampFormat timestampOption = JsonOptions.getTimestampFormat(formatOptions);\n+\t\tJsonOptions.MapNullKeyMode mapNullKeyMode = JsonOptions.getMapNullKeyMode(formatOptions);\n+\t\tString mapNullKeyLiteral = formatOptions.get(MAP_NULL_KEY_LITERAL);\n \n \t\treturn new EncodingFormat<SerializationSchema<RowData>>() {\n \t\t\t@Override\n \t\t\tpublic SerializationSchema<RowData> createRuntimeEncoder(\n \t\t\t\t\tDynamicTableSink.Context context,\n \t\t\t\t\tDataType consumedDataType) {\n \t\t\t\tfinal RowType rowType = (RowType) consumedDataType.getLogicalType();\n-\t\t\t\treturn new JsonRowDataSerializationSchema(rowType, timestampOption);\n+\t\t\t\treturn new JsonRowDataSerializationSchema(\n+\t\t\t\t\t\trowType, timestampOption,\n+\t\t\t\t\t\tmapNullKeyMode, mapNullKeyLiteral);", "originalCommit": "b2dcd73cb70c5a3a1628aeff8dc1fb8e05d6fd53", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aeae10f1d6b602b08485ff70d90ea8f536779420", "chunk": "diff --git a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonFormatFactory.java b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonFormatFactory.java\nindex fda649761c9..17fb69e53a8 100644\n--- a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonFormatFactory.java\n+++ b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonFormatFactory.java\n\n@@ -111,8 +111,10 @@ public class JsonFormatFactory implements\n \t\t\t\t\tDataType consumedDataType) {\n \t\t\t\tfinal RowType rowType = (RowType) consumedDataType.getLogicalType();\n \t\t\t\treturn new JsonRowDataSerializationSchema(\n-\t\t\t\t\t\trowType, timestampOption,\n-\t\t\t\t\t\tmapNullKeyMode, mapNullKeyLiteral);\n+\t\t\t\t\t\trowType,\n+\t\t\t\t\t\ttimestampOption,\n+\t\t\t\t\t\tmapNullKeyMode,\n+\t\t\t\t\t\tmapNullKeyLiteral);\n \t\t\t}\n \n \t\t\t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYyMDEyOQ==", "url": "https://github.com/apache/flink/pull/13972#discussion_r519620129", "bodyText": "Can simplify invoking keyArray.isNullAt(i) here.", "author": "wuchong", "createdAt": "2020-11-09T08:12:31Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java", "diffHunk": "@@ -250,7 +261,26 @@ private RowDataToJsonConverter createMapConverter(\n \t\t\tArrayData valueArray = map.valueArray();\n \t\t\tint numElements = map.size();\n \t\t\tfor (int i = 0; i < numElements; i++) {\n-\t\t\t\tString fieldName = keyArray.getString(i).toString(); // key must be string\n+\t\t\t\tboolean isFieldNameNull = keyArray.isNullAt(i);\n+\t\t\t\tString fieldName = null;\n+\t\t\t\tif (isFieldNameNull) {", "originalCommit": "b2dcd73cb70c5a3a1628aeff8dc1fb8e05d6fd53", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aeae10f1d6b602b08485ff70d90ea8f536779420", "chunk": "diff --git a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java\nindex 49e39674e5e..61a11fbf87c 100644\n--- a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java\n+++ b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java\n\n@@ -261,9 +261,8 @@ public class RowDataToJsonConverters implements Serializable {\n \t\t\tArrayData valueArray = map.valueArray();\n \t\t\tint numElements = map.size();\n \t\t\tfor (int i = 0; i < numElements; i++) {\n-\t\t\t\tboolean isFieldNameNull = keyArray.isNullAt(i);\n \t\t\t\tString fieldName = null;\n-\t\t\t\tif (isFieldNameNull) {\n+\t\t\t\tif (keyArray.isNullAt(i)) {\n \t\t\t\t\t// when map key is null\n \t\t\t\t\tswitch (mapNullKeyMode) {\n \t\t\t\t\t\tcase LITERAL:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYyMDI2OQ==", "url": "https://github.com/apache/flink/pull/13972#discussion_r519620269", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t\tthrow new RuntimeException(\"Map key is null, please have a check.\"\n          \n          \n            \n            \t\t\t\t\t\t\t\t+ \" You can setup null key handling mode to drop entry or replace with a no-null literal.\");\n          \n          \n            \n            \t\t\t\t\t\t\tthrow new RuntimeException(String.format(\n          \n          \n            \n            \t\t\t\t\t\t\t\t\"JSON format doesn't support to serialize map data with null keys. \" +\n          \n          \n            \n            \t\t\t\t\t\t\t\t\t\"You can drop null key entries or encode null in literals by specifying %s option.\",\n          \n          \n            \n            \t\t\t\t\t\t\t\tJsonOptions.MAP_NULL_KEY_LITERAL.key()));", "author": "wuchong", "createdAt": "2020-11-09T08:12:49Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java", "diffHunk": "@@ -250,7 +261,26 @@ private RowDataToJsonConverter createMapConverter(\n \t\t\tArrayData valueArray = map.valueArray();\n \t\t\tint numElements = map.size();\n \t\t\tfor (int i = 0; i < numElements; i++) {\n-\t\t\t\tString fieldName = keyArray.getString(i).toString(); // key must be string\n+\t\t\t\tboolean isFieldNameNull = keyArray.isNullAt(i);\n+\t\t\t\tString fieldName = null;\n+\t\t\t\tif (isFieldNameNull) {\n+\t\t\t\t\t// when map key is null\n+\t\t\t\t\tswitch (mapNullKeyMode) {\n+\t\t\t\t\t\tcase LITERAL:\n+\t\t\t\t\t\t\tfieldName = mapNullKeyLiteral;\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tcase DROP:\n+\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\tcase FAIL:\n+\t\t\t\t\t\t\tthrow new RuntimeException(\"Map key is null, please have a check.\"\n+\t\t\t\t\t\t\t\t+ \" You can setup null key handling mode to drop entry or replace with a no-null literal.\");", "originalCommit": "b2dcd73cb70c5a3a1628aeff8dc1fb8e05d6fd53", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aeae10f1d6b602b08485ff70d90ea8f536779420", "chunk": "diff --git a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java\nindex 49e39674e5e..61a11fbf87c 100644\n--- a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java\n+++ b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java\n\n@@ -261,9 +261,8 @@ public class RowDataToJsonConverters implements Serializable {\n \t\t\tArrayData valueArray = map.valueArray();\n \t\t\tint numElements = map.size();\n \t\t\tfor (int i = 0; i < numElements; i++) {\n-\t\t\t\tboolean isFieldNameNull = keyArray.isNullAt(i);\n \t\t\t\tString fieldName = null;\n-\t\t\t\tif (isFieldNameNull) {\n+\t\t\t\tif (keyArray.isNullAt(i)) {\n \t\t\t\t\t// when map key is null\n \t\t\t\t\tswitch (mapNullKeyMode) {\n \t\t\t\t\t\tcase LITERAL:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMzNjE4MQ==", "url": "https://github.com/apache/flink/pull/13972#discussion_r520336181", "bodyText": "Sorry, it should be MAP_NULL_KEY_MODE option.", "author": "wuchong", "createdAt": "2020-11-10T07:09:01Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java", "diffHunk": "@@ -272,8 +271,10 @@ private RowDataToJsonConverter createMapConverter(\n \t\t\t\t\t\tcase DROP:\n \t\t\t\t\t\t\tcontinue;\n \t\t\t\t\t\tcase FAIL:\n-\t\t\t\t\t\t\tthrow new RuntimeException(\"Map key is null, please have a check.\"\n-\t\t\t\t\t\t\t\t+ \" You can setup null key handling mode to drop entry or replace with a no-null literal.\");\n+\t\t\t\t\t\t\tthrow new RuntimeException(String.format(\n+\t\t\t\t\t\t\t\t\"JSON format doesn't support to serialize map data with null keys. \"\n+\t\t\t\t\t\t\t\t\t+ \"You can drop null key entries or encode null in literals by specifying %s option.\",\n+\t\t\t\t\t\t\t\tJsonOptions.MAP_NULL_KEY_LITERAL.key()));", "originalCommit": "e1393af2a259f5db3cd78f49130412df83a062a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0NDE1Ng==", "url": "https://github.com/apache/flink/pull/13972#discussion_r520344156", "bodyText": "done~", "author": "wangxlong", "createdAt": "2020-11-10T07:29:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMzNjE4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "aeae10f1d6b602b08485ff70d90ea8f536779420", "chunk": "diff --git a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java\nindex 4f520617d75..61a11fbf87c 100644\n--- a/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java\n+++ b/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java\n\n@@ -274,7 +274,7 @@ public class RowDataToJsonConverters implements Serializable {\n \t\t\t\t\t\t\tthrow new RuntimeException(String.format(\n \t\t\t\t\t\t\t\t\"JSON format doesn't support to serialize map data with null keys. \"\n \t\t\t\t\t\t\t\t\t+ \"You can drop null key entries or encode null in literals by specifying %s option.\",\n-\t\t\t\t\t\t\t\tJsonOptions.MAP_NULL_KEY_LITERAL.key()));\n+\t\t\t\t\t\t\t\tJsonOptions.MAP_NULL_KEY_MODE.key()));\n \t\t\t\t\t\tdefault:\n \t\t\t\t\t\t\tthrow new RuntimeException(\"Unsupported map null key mode. Validator should have checked that.\");\n \t\t\t\t\t}\n"}}, {"oid": "aeae10f1d6b602b08485ff70d90ea8f536779420", "url": "https://github.com/apache/flink/commit/aeae10f1d6b602b08485ff70d90ea8f536779420", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys\n\nThis closes #13972", "committedDate": "2020-11-10T07:53:05Z", "type": "commit"}, {"oid": "aeae10f1d6b602b08485ff70d90ea8f536779420", "url": "https://github.com/apache/flink/commit/aeae10f1d6b602b08485ff70d90ea8f536779420", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys\n\nThis closes #13972", "committedDate": "2020-11-10T07:53:05Z", "type": "forcePushed"}]}