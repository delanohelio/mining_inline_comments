{"pr_number": 11848, "pr_title": "[FLINK-17313]fix type validation error when sink table ddl exists column with precision of decimal/varchar", "pr_createdAt": "2020-04-22T03:37:28Z", "pr_url": "https://github.com/apache/flink/pull/11848", "timeline": [{"oid": "9b24a40f43a101b63ab73d1fa1e0c0f31178b36d", "url": "https://github.com/apache/flink/commit/9b24a40f43a101b63ab73d1fa1e0c0f31178b36d", "message": "[FLINK-17313]fix type validation error when insert sink ddl wihich indicates precision of decimal/timestamp/varchar", "committedDate": "2020-04-22T03:29:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc4NTcwNg==", "url": "https://github.com/apache/flink/pull/11848#discussion_r413785706", "bodyText": "Lets just inline the last argument.", "author": "dawidwys", "createdAt": "2020-04-23T12:47:11Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java", "diffHunk": "@@ -158,19 +158,33 @@ public static void checkPhysicalLogicalTypeCompatible(\n \t\t\tString physicalFieldName,\n \t\t\tString logicalFieldName,\n \t\t\tboolean isSource) {\n-\t\tcheckIfCompatible(\n-\t\t\tphysicalFieldType,\n-\t\t\tlogicalFieldType,\n-\t\t\t(cause) -> new ValidationException(\n-\t\t\t\tString.format(\n-\t\t\t\t\t\"Type %s of table field '%s' does not match with \" +\n-\t\t\t\t\t\t\"the physical type %s of the '%s' field of the %s.\",\n+\t\tif (isSource) {\n+\t\t\tcheckIfCompatible(\n+\t\t\t\t\tphysicalFieldType,\n+\t\t\t\t\tlogicalFieldType,\n+\t\t\t\t\t(cause) -> new ValidationException(\n+\t\t\t\t\t\t\t\tString.format(\"Type %s of table field '%s' does not match with \" +\n+\t\t\t\t\t\t\t\t\t\"the physical type %s of the '%s' field of the %s.\",\n+\t\t\t\t\t\t\t\t\t\tlogicalFieldType,\n+\t\t\t\t\t\t\t\t\t\tlogicalFieldName,\n+\t\t\t\t\t\t\t\t\t\tphysicalFieldType,\n+\t\t\t\t\t\t\t\t\t\tphysicalFieldName,\n+\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"),", "originalCommit": "9b24a40f43a101b63ab73d1fa1e0c0f31178b36d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgwOTMyOQ==", "url": "https://github.com/apache/flink/pull/11848#discussion_r413809329", "bodyText": "ok", "author": "zjuwangg", "createdAt": "2020-04-23T13:47:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc4NTcwNg=="}], "type": "inlineReview", "revised_code": {"commit": "d9e94d75abf678712b7a56b2a4246d3f71b7eb9e", "chunk": "diff --git a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java\nindex 681d4fe8abd..27139d91349 100644\n--- a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java\n+++ b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java\n\n@@ -169,8 +169,7 @@ public final class TypeMappingUtils {\n \t\t\t\t\t\t\t\t\t\tlogicalFieldName,\n \t\t\t\t\t\t\t\t\t\tphysicalFieldType,\n \t\t\t\t\t\t\t\t\t\tphysicalFieldName,\n-\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"),\n-\t\t\t\t\t\t\t\tcause));\n+\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"), cause));\n \t\t} else {\n \t\t\tcheckIfCompatible(\n \t\t\t\t\tlogicalFieldType,\n"}}, {"oid": "d9e94d75abf678712b7a56b2a4246d3f71b7eb9e", "url": "https://github.com/apache/flink/commit/d9e94d75abf678712b7a56b2a4246d3f71b7eb9e", "message": "inline the last argument according to review comments", "committedDate": "2020-04-24T03:22:31Z", "type": "commit"}, {"oid": "88d8d3f5e30e69f324adac96e4db471f91fe490b", "url": "https://github.com/apache/flink/commit/88d8d3f5e30e69f324adac96e4db471f91fe490b", "message": "add tests to verfiy function work normal", "committedDate": "2020-04-24T08:04:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM5MjY5OQ==", "url": "https://github.com/apache/flink/pull/11848#discussion_r414392699", "bodyText": "What I meant is that we can inline the TableSource return type into the string. There is no reason for having it as an argument to String.format().:\n(cause) -> new ValidationException(\n\tString.format(\"Type %s of table field '%s' does not match with \" +\n\t\t\"the physical type %s of the '%s' field of the TableSource return type.\",\n\t\t\tlogicalFieldType,\n\t\t\tlogicalFieldName,\n\t\t\tphysicalFieldType,\n\t\t\tphysicalFieldName),\n\tcause));", "author": "dawidwys", "createdAt": "2020-04-24T08:28:26Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java", "diffHunk": "@@ -169,8 +169,7 @@ public static void checkPhysicalLogicalTypeCompatible(\n \t\t\t\t\t\t\t\t\t\tlogicalFieldName,\n \t\t\t\t\t\t\t\t\t\tphysicalFieldType,\n \t\t\t\t\t\t\t\t\t\tphysicalFieldName,\n-\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"),\n-\t\t\t\t\t\t\t\tcause));\n+\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"), cause));", "originalCommit": "d9e94d75abf678712b7a56b2a4246d3f71b7eb9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1NTUxNg==", "url": "https://github.com/apache/flink/pull/11848#discussion_r414455516", "bodyText": "Oh, sry, you are right.", "author": "zjuwangg", "createdAt": "2020-04-24T10:05:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM5MjY5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "7357ae7ca4a8a752458b1ed3b6391c846ff6bd09", "chunk": "diff --git a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java\nindex 27139d91349..9d800ea57b8 100644\n--- a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java\n+++ b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java\n\n@@ -164,24 +164,24 @@ public final class TypeMappingUtils {\n \t\t\t\t\tlogicalFieldType,\n \t\t\t\t\t(cause) -> new ValidationException(\n \t\t\t\t\t\t\t\tString.format(\"Type %s of table field '%s' does not match with \" +\n-\t\t\t\t\t\t\t\t\t\"the physical type %s of the '%s' field of the %s.\",\n+\t\t\t\t\t\t\t\t\t\"the physical type %s of the '%s' field of the TableSource return type.\",\n \t\t\t\t\t\t\t\t\t\tlogicalFieldType,\n \t\t\t\t\t\t\t\t\t\tlogicalFieldName,\n \t\t\t\t\t\t\t\t\t\tphysicalFieldType,\n-\t\t\t\t\t\t\t\t\t\tphysicalFieldName,\n-\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"), cause));\n+\t\t\t\t\t\t\t\t\t\tphysicalFieldName),\n+\t\t\t\t\t\t\t\tcause));\n \t\t} else {\n \t\t\tcheckIfCompatible(\n \t\t\t\t\tlogicalFieldType,\n \t\t\t\t\tphysicalFieldType,\n \t\t\t\t\t(cause) -> new ValidationException(\n \t\t\t\t\t\t\t\tString.format(\"Type %s of table field '%s' does not match with \" +\n-\t\t\t\t\t\t\t\t\t\"the physical type %s of the '%s' field of the %s.\",\n+\t\t\t\t\t\t\t\t\t\"the physical type %s of the '%s' field of the TableSink consumed type.\",\n \t\t\t\t\t\t\t\t\tlogicalFieldType,\n \t\t\t\t\t\t\t\t\tlogicalFieldName,\n \t\t\t\t\t\t\t\t\tphysicalFieldType,\n-\t\t\t\t\t\t\t\t\tphysicalFieldName,\n-\t\t\t\t\t\t\t\t\t\"TableSink consumed type\"), cause));\n+\t\t\t\t\t\t\t\t\tphysicalFieldName),\n+\t\t\t\t\t\t\t\tcause));\n \t\t}\n \t}\n \n"}}, {"oid": "7357ae7ca4a8a752458b1ed3b6391c846ff6bd09", "url": "https://github.com/apache/flink/commit/7357ae7ca4a8a752458b1ed3b6391c846ff6bd09", "message": "inline the last arguments", "committedDate": "2020-04-24T10:07:38Z", "type": "commit"}]}