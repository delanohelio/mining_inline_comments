{"pr_number": 11837, "pr_title": "[FLINK-16160][table-planner-blink] Fix proctime()/rowtime() doesn't w\u2026", "pr_createdAt": "2020-04-21T04:32:18Z", "pr_url": "https://github.com/apache/flink/pull/11837", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ2OTU1NQ==", "url": "https://github.com/apache/flink/pull/11837#discussion_r413469555", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tOptional<TableSource> sourceOpt = findAndCreateTableSource(new TableConfig().getConfiguration());\n          \n          \n            \n            \t\tOptional<TableSource<?>> sourceOpt = findAndCreateTableSource(new TableConfig().getConfiguration());\n          \n      \n    \n    \n  \n\nAdd <?> to TableSource to avoid IDEA warning.", "author": "wuchong", "createdAt": "2020-04-23T02:50:02Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java", "diffHunk": "@@ -153,6 +166,27 @@ private static RelDataType getRowType(RelDataTypeFactory typeFactory,\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\n+\t\t// The following block is a workaround to support tables defined by TableEnvironment.connect() and\n+\t\t// the actual table sources implement DefinedProctimeAttribute/DefinedRowtimeAttributes.\n+\t\t// It should be removed after we remove DefinedProctimeAttribute/DefinedRowtimeAttributes.\n+\t\tOptional<TableSource> sourceOpt = findAndCreateTableSource(new TableConfig().getConfiguration());", "originalCommit": "38df357bc5c54d93159c2d460833cf80c42b5e0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3MTU3Nw==", "url": "https://github.com/apache/flink/pull/11837#discussion_r413471577", "bodyText": "If the ReadableConfig is always an empty configuration. Please remove the parameter and construct in the findAndCreateTableSource method with a comment to explain why we use an empty configuration.", "author": "wuchong", "createdAt": "2020-04-23T02:55:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ2OTU1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b62fcd03a583ef204f21a313f6969c8aaa4ee61d", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java\nindex bb2825d6eb3..6fcfe29ca17 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java\n\n@@ -170,20 +169,17 @@ public class CatalogSchemaTable extends AbstractTable implements TemporalTable {\n \t\t// The following block is a workaround to support tables defined by TableEnvironment.connect() and\n \t\t// the actual table sources implement DefinedProctimeAttribute/DefinedRowtimeAttributes.\n \t\t// It should be removed after we remove DefinedProctimeAttribute/DefinedRowtimeAttributes.\n-\t\tOptional<TableSource> sourceOpt = findAndCreateTableSource(new TableConfig().getConfiguration());\n-\t\tif (tableSchema.getTableColumns().stream().noneMatch(TableColumn::isGenerated)\n+\t\tOptional<TableSource<?>> sourceOpt = findAndCreateTableSource();\n+\t\tif (isStreamingMode\n+\t\t\t&& tableSchema.getTableColumns().stream().noneMatch(TableColumn::isGenerated)\n \t\t\t&& tableSchema.getWatermarkSpecs().isEmpty()\n \t\t\t&& sourceOpt.isPresent()) {\n-\t\t\tTableSource source = sourceOpt.get();\n-\t\t\tif ((source instanceof DefinedProctimeAttribute\n-\t\t\t\t\t&& ((DefinedProctimeAttribute) source).getProctimeAttribute() != null)\n-\t\t\t\t\t||\n-\t\t\t\t\t(source instanceof DefinedRowtimeAttributes\n-\t\t\t\t\t\t\t&& ((DefinedRowtimeAttributes) source).getRowtimeAttributeDescriptors() != null\n-\t\t\t\t\t\t\t&& !((DefinedRowtimeAttributes) source).getRowtimeAttributeDescriptors().isEmpty())) {\n+\t\t\tTableSource<?> source = sourceOpt.get();\n+\t\t\tif (TableSourceValidation.hasProctimeAttribute(source)\n+\t\t\t\t\t|| TableSourceValidation.hasRowtimeAttribute(source)) {\n \t\t\t\t// If the table is defined by TableEnvironment.connect(), and use the legacy proctime and rowtime\n \t\t\t\t// descriptors, the TableSchema should fallback to ConnectorCatalogTable#calculateSourceSchema\n-\t\t\t\ttableSchema = ConnectorCatalogTable.calculateSourceSchema(source, !isStreamingMode);\n+\t\t\t\ttableSchema = ConnectorCatalogTable.calculateSourceSchema(source, false);\n \t\t\t}\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3MDg2MA==", "url": "https://github.com/apache/flink/pull/11837#discussion_r413470860", "bodyText": "Add a hasProctimeAttribute to TableSourceValidation and the condition can be simplified into\nif (hasRowtimeAttribute(source) && hasProctimeAttribute(source))", "author": "wuchong", "createdAt": "2020-04-23T02:53:45Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java", "diffHunk": "@@ -153,6 +166,27 @@ private static RelDataType getRowType(RelDataTypeFactory typeFactory,\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\n+\t\t// The following block is a workaround to support tables defined by TableEnvironment.connect() and\n+\t\t// the actual table sources implement DefinedProctimeAttribute/DefinedRowtimeAttributes.\n+\t\t// It should be removed after we remove DefinedProctimeAttribute/DefinedRowtimeAttributes.\n+\t\tOptional<TableSource> sourceOpt = findAndCreateTableSource(new TableConfig().getConfiguration());\n+\t\tif (tableSchema.getTableColumns().stream().noneMatch(TableColumn::isGenerated)\n+\t\t\t&& tableSchema.getWatermarkSpecs().isEmpty()\n+\t\t\t&& sourceOpt.isPresent()) {\n+\t\t\tTableSource source = sourceOpt.get();\n+\t\t\tif ((source instanceof DefinedProctimeAttribute\n+\t\t\t\t\t&& ((DefinedProctimeAttribute) source).getProctimeAttribute() != null)\n+\t\t\t\t\t||\n+\t\t\t\t\t(source instanceof DefinedRowtimeAttributes\n+\t\t\t\t\t\t\t&& ((DefinedRowtimeAttributes) source).getRowtimeAttributeDescriptors() != null\n+\t\t\t\t\t\t\t&& !((DefinedRowtimeAttributes) source).getRowtimeAttributeDescriptors().isEmpty())) {", "originalCommit": "38df357bc5c54d93159c2d460833cf80c42b5e0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b62fcd03a583ef204f21a313f6969c8aaa4ee61d", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java\nindex bb2825d6eb3..6fcfe29ca17 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java\n\n@@ -170,20 +169,17 @@ public class CatalogSchemaTable extends AbstractTable implements TemporalTable {\n \t\t// The following block is a workaround to support tables defined by TableEnvironment.connect() and\n \t\t// the actual table sources implement DefinedProctimeAttribute/DefinedRowtimeAttributes.\n \t\t// It should be removed after we remove DefinedProctimeAttribute/DefinedRowtimeAttributes.\n-\t\tOptional<TableSource> sourceOpt = findAndCreateTableSource(new TableConfig().getConfiguration());\n-\t\tif (tableSchema.getTableColumns().stream().noneMatch(TableColumn::isGenerated)\n+\t\tOptional<TableSource<?>> sourceOpt = findAndCreateTableSource();\n+\t\tif (isStreamingMode\n+\t\t\t&& tableSchema.getTableColumns().stream().noneMatch(TableColumn::isGenerated)\n \t\t\t&& tableSchema.getWatermarkSpecs().isEmpty()\n \t\t\t&& sourceOpt.isPresent()) {\n-\t\t\tTableSource source = sourceOpt.get();\n-\t\t\tif ((source instanceof DefinedProctimeAttribute\n-\t\t\t\t\t&& ((DefinedProctimeAttribute) source).getProctimeAttribute() != null)\n-\t\t\t\t\t||\n-\t\t\t\t\t(source instanceof DefinedRowtimeAttributes\n-\t\t\t\t\t\t\t&& ((DefinedRowtimeAttributes) source).getRowtimeAttributeDescriptors() != null\n-\t\t\t\t\t\t\t&& !((DefinedRowtimeAttributes) source).getRowtimeAttributeDescriptors().isEmpty())) {\n+\t\t\tTableSource<?> source = sourceOpt.get();\n+\t\t\tif (TableSourceValidation.hasProctimeAttribute(source)\n+\t\t\t\t\t|| TableSourceValidation.hasRowtimeAttribute(source)) {\n \t\t\t\t// If the table is defined by TableEnvironment.connect(), and use the legacy proctime and rowtime\n \t\t\t\t// descriptors, the TableSchema should fallback to ConnectorCatalogTable#calculateSourceSchema\n-\t\t\t\ttableSchema = ConnectorCatalogTable.calculateSourceSchema(source, !isStreamingMode);\n+\t\t\t\ttableSchema = ConnectorCatalogTable.calculateSourceSchema(source, false);\n \t\t\t}\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3NjAyMw==", "url": "https://github.com/apache/flink/pull/11837#discussion_r413476023", "bodyText": "Add isStreamingMode into this condition, and findAndCreateTableSource  when the condition is satisfied.", "author": "wuchong", "createdAt": "2020-04-23T03:09:29Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java", "diffHunk": "@@ -153,6 +166,27 @@ private static RelDataType getRowType(RelDataTypeFactory typeFactory,\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\n+\t\t// The following block is a workaround to support tables defined by TableEnvironment.connect() and\n+\t\t// the actual table sources implement DefinedProctimeAttribute/DefinedRowtimeAttributes.\n+\t\t// It should be removed after we remove DefinedProctimeAttribute/DefinedRowtimeAttributes.\n+\t\tOptional<TableSource> sourceOpt = findAndCreateTableSource(new TableConfig().getConfiguration());\n+\t\tif (tableSchema.getTableColumns().stream().noneMatch(TableColumn::isGenerated)\n+\t\t\t&& tableSchema.getWatermarkSpecs().isEmpty()", "originalCommit": "38df357bc5c54d93159c2d460833cf80c42b5e0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b62fcd03a583ef204f21a313f6969c8aaa4ee61d", "chunk": "diff --git a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java\nindex bb2825d6eb3..6fcfe29ca17 100644\n--- a/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java\n+++ b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogSchemaTable.java\n\n@@ -170,20 +169,17 @@ public class CatalogSchemaTable extends AbstractTable implements TemporalTable {\n \t\t// The following block is a workaround to support tables defined by TableEnvironment.connect() and\n \t\t// the actual table sources implement DefinedProctimeAttribute/DefinedRowtimeAttributes.\n \t\t// It should be removed after we remove DefinedProctimeAttribute/DefinedRowtimeAttributes.\n-\t\tOptional<TableSource> sourceOpt = findAndCreateTableSource(new TableConfig().getConfiguration());\n-\t\tif (tableSchema.getTableColumns().stream().noneMatch(TableColumn::isGenerated)\n+\t\tOptional<TableSource<?>> sourceOpt = findAndCreateTableSource();\n+\t\tif (isStreamingMode\n+\t\t\t&& tableSchema.getTableColumns().stream().noneMatch(TableColumn::isGenerated)\n \t\t\t&& tableSchema.getWatermarkSpecs().isEmpty()\n \t\t\t&& sourceOpt.isPresent()) {\n-\t\t\tTableSource source = sourceOpt.get();\n-\t\t\tif ((source instanceof DefinedProctimeAttribute\n-\t\t\t\t\t&& ((DefinedProctimeAttribute) source).getProctimeAttribute() != null)\n-\t\t\t\t\t||\n-\t\t\t\t\t(source instanceof DefinedRowtimeAttributes\n-\t\t\t\t\t\t\t&& ((DefinedRowtimeAttributes) source).getRowtimeAttributeDescriptors() != null\n-\t\t\t\t\t\t\t&& !((DefinedRowtimeAttributes) source).getRowtimeAttributeDescriptors().isEmpty())) {\n+\t\t\tTableSource<?> source = sourceOpt.get();\n+\t\t\tif (TableSourceValidation.hasProctimeAttribute(source)\n+\t\t\t\t\t|| TableSourceValidation.hasRowtimeAttribute(source)) {\n \t\t\t\t// If the table is defined by TableEnvironment.connect(), and use the legacy proctime and rowtime\n \t\t\t\t// descriptors, the TableSchema should fallback to ConnectorCatalogTable#calculateSourceSchema\n-\t\t\t\ttableSchema = ConnectorCatalogTable.calculateSourceSchema(source, !isStreamingMode);\n+\t\t\t\ttableSchema = ConnectorCatalogTable.calculateSourceSchema(source, false);\n \t\t\t}\n \t\t}\n \n"}}, {"oid": "b62fcd03a583ef204f21a313f6969c8aaa4ee61d", "url": "https://github.com/apache/flink/commit/b62fcd03a583ef204f21a313f6969c8aaa4ee61d", "message": "fixup: use CustomConnectorDescriptor in the added tests", "committedDate": "2020-05-08T03:56:24Z", "type": "forcePushed"}, {"oid": "75489d25f5a00957a2bbae1ed3a80c13c22a8e53", "url": "https://github.com/apache/flink/commit/75489d25f5a00957a2bbae1ed3a80c13c22a8e53", "message": "fixup: rebase", "committedDate": "2020-05-15T01:56:35Z", "type": "forcePushed"}, {"oid": "d1d16a0c0d9e8b01c6bbf4d39374d25911373f07", "url": "https://github.com/apache/flink/commit/d1d16a0c0d9e8b01c6bbf4d39374d25911373f07", "message": "[FLINK-16160][table-planner-blink] Fix proctime()/rowtime() doesn't work for TableEnvironment.connect().createTemporaryTable()", "committedDate": "2020-05-18T04:43:31Z", "type": "commit"}, {"oid": "d1d16a0c0d9e8b01c6bbf4d39374d25911373f07", "url": "https://github.com/apache/flink/commit/d1d16a0c0d9e8b01c6bbf4d39374d25911373f07", "message": "[FLINK-16160][table-planner-blink] Fix proctime()/rowtime() doesn't work for TableEnvironment.connect().createTemporaryTable()", "committedDate": "2020-05-18T04:43:31Z", "type": "forcePushed"}]}