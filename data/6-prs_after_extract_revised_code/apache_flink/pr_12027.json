{"pr_number": 12027, "pr_title": "[FLINK-17564][checkpointing] Fix buffer disorder issue of RemoteInputChannel for unaligned checkpoint", "pr_createdAt": "2020-05-08T05:32:00Z", "pr_url": "https://github.com/apache/flink/pull/12027", "timeline": [{"oid": "0e3ac198efdf799e34ffc78d2c2e5996d9e2d326", "url": "https://github.com/apache/flink/commit/0e3ac198efdf799e34ffc78d2c2e5996d9e2d326", "message": "[FLINK-17564][checkpointing] Fix buffer disorder issue of RemoteInputChannel for unaligned checkpoint", "committedDate": "2020-05-08T05:32:35Z", "type": "forcePushed"}, {"oid": "42f0a0401969ac05f42aa592a39c2431c9f3aed4", "url": "https://github.com/apache/flink/commit/42f0a0401969ac05f42aa592a39c2431c9f3aed4", "message": "[FLINK-17564][checkpointing] Fix buffer disorder issue of RemoteInputChannel for unaligned checkpoint", "committedDate": "2020-05-08T06:02:16Z", "type": "forcePushed"}, {"oid": "914db8df1506edc8bd9dea08f1d35208d077e850", "url": "https://github.com/apache/flink/commit/914db8df1506edc8bd9dea08f1d35208d077e850", "message": "[FLINK-17564][checkpointing] Fix buffer disorder issue of RemoteInputChannel for unaligned checkpoint", "committedDate": "2020-05-09T07:55:36Z", "type": "forcePushed"}, {"oid": "39c357488ab03b5771bad5e1d135a7109d4efcca", "url": "https://github.com/apache/flink/commit/39c357488ab03b5771bad5e1d135a7109d4efcca", "message": "[FLINK-17564][checkpointing] Fix buffer disorder issue of RemoteInputChannel for unaligned checkpoint\n\nFor unaligned checkpoint, when checkpointing the inflight data of incoming channels, both task thread and Netty thread may add data to the ChannelStateWriter. More specifically, the task thread will first request inflight buffers from the input channel and add the buffers to the ChannelStateWriter, and then the Netty thread will add the following up buffers (if any) to the ChannelStateWriter. The buffer adding action of task thread and Netty thread is not synchronized so the Netty thread may add buffers before the task thread which leads to disorder of the data and corruption of the data stream.\n\nThis PR fixes the problem by requesting and enqueuing the inflight buffers in the synchronized block.", "committedDate": "2020-05-09T09:15:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4NDI3OQ==", "url": "https://github.com/apache/flink/pull/12027#discussion_r422484279", "bodyText": "rename all of the methods requestInflightBuffers -> spillInflightBuffers? As this method is no longer returning/requesting but spilling inflight buffers?", "author": "pnowojski", "createdAt": "2020-05-09T11:16:17Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel.java", "diffHunk": "@@ -216,7 +220,7 @@ void retriggerSubpartitionRequest(int subpartitionIndex) throws IOException {\n \t}\n \n \t@Override\n-\tpublic List<Buffer> requestInflightBuffers(long checkpointId) throws IOException {\n+\tpublic void requestInflightBuffers(long checkpointId, ChannelStateWriter channelStateWriter) throws IOException {", "originalCommit": "39c357488ab03b5771bad5e1d135a7109d4efcca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ5MjIzMw==", "url": "https://github.com/apache/flink/pull/12027#discussion_r422492233", "bodyText": "Thank for the review. I have renamed the method requestInflightBuffers to spillInflightBuffers.", "author": "wsry", "createdAt": "2020-05-09T12:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4NDI3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8c2f01f2d9d3bbc9cfcb4608482bc487f2922f9e", "chunk": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel.java\nindex 1cae48f6572..09dd0e72f40 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel.java\n\n@@ -220,7 +220,7 @@ public class RemoteInputChannel extends InputChannel implements BufferRecycler,\n \t}\n \n \t@Override\n-\tpublic void requestInflightBuffers(long checkpointId, ChannelStateWriter channelStateWriter) throws IOException {\n+\tpublic void spillInflightBuffers(long checkpointId, ChannelStateWriter channelStateWriter) throws IOException {\n \t\tsynchronized (receivedBuffers) {\n \t\t\tcheckState(checkpointId > lastRequestedCheckpointId, \"Need to request the next checkpointId\");\n \n"}}, {"oid": "8c2f01f2d9d3bbc9cfcb4608482bc487f2922f9e", "url": "https://github.com/apache/flink/commit/8c2f01f2d9d3bbc9cfcb4608482bc487f2922f9e", "message": "[FLINK-17564][checkpointing] Fix buffer disorder issue of RemoteInputChannel for unaligned checkpoint\n\nFor unaligned checkpoint, when checkpointing the inflight data of incoming channels, both task thread and Netty thread may add data to the ChannelStateWriter. More specifically, the task thread will first request inflight buffers from the input channel and add the buffers to the ChannelStateWriter, and then the Netty thread will add the following up buffers (if any) to the ChannelStateWriter. The buffer adding action of task thread and Netty thread is not synchronized so the Netty thread may add buffers before the task thread which leads to disorder of the data and corruption of the data stream.\n\nThis PR fixes the problem by requesting and enqueuing the inflight buffers in the synchronized block.", "committedDate": "2020-05-09T12:52:08Z", "type": "forcePushed"}, {"oid": "68d8c93c0bf932a53689325005a9cdd79b2cdbed", "url": "https://github.com/apache/flink/commit/68d8c93c0bf932a53689325005a9cdd79b2cdbed", "message": "[FLINK-17564][checkpointing] Fix buffer disorder issue of RemoteInputChannel for unaligned checkpoint\n\nFor unaligned checkpoint, when checkpointing the inflight data of incoming channels, both task thread and Netty thread may add data to the ChannelStateWriter. More specifically, the task thread will first request inflight buffers from the input channel and add the buffers to the ChannelStateWriter, and then the Netty thread will add the following up buffers (if any) to the ChannelStateWriter. The buffer adding action of task thread and Netty thread is not synchronized so the Netty thread may add buffers before the task thread which leads to disorder of the data and corruption of the data stream.\n\nThis PR fixes the problem by requesting and enqueuing the inflight buffers in the synchronized block.", "committedDate": "2020-05-09T12:58:43Z", "type": "forcePushed"}, {"oid": "a7bc0776ec4eb009b23ca26e5282f7fafdd13a6b", "url": "https://github.com/apache/flink/commit/a7bc0776ec4eb009b23ca26e5282f7fafdd13a6b", "message": "[FLINK-17564][checkpointing] Fix buffer disorder issue of RemoteInputChannel for unaligned checkpoint\n\nFor unaligned checkpoint, when checkpointing the inflight data of incoming channels, both task thread and Netty thread may add data to the ChannelStateWriter. More specifically, the task thread will first request inflight buffers from the input channel and add the buffers to the ChannelStateWriter, and then the Netty thread will add the following up buffers (if any) to the ChannelStateWriter. The buffer adding action of task thread and Netty thread is not synchronized so the Netty thread may add buffers before the task thread which leads to disorder of the data and corruption of the data stream.\n\nThis PR fixes the problem by requesting and enqueuing the inflight buffers in the synchronized block.", "committedDate": "2020-05-10T04:13:58Z", "type": "commit"}, {"oid": "a7bc0776ec4eb009b23ca26e5282f7fafdd13a6b", "url": "https://github.com/apache/flink/commit/a7bc0776ec4eb009b23ca26e5282f7fafdd13a6b", "message": "[FLINK-17564][checkpointing] Fix buffer disorder issue of RemoteInputChannel for unaligned checkpoint\n\nFor unaligned checkpoint, when checkpointing the inflight data of incoming channels, both task thread and Netty thread may add data to the ChannelStateWriter. More specifically, the task thread will first request inflight buffers from the input channel and add the buffers to the ChannelStateWriter, and then the Netty thread will add the following up buffers (if any) to the ChannelStateWriter. The buffer adding action of task thread and Netty thread is not synchronized so the Netty thread may add buffers before the task thread which leads to disorder of the data and corruption of the data stream.\n\nThis PR fixes the problem by requesting and enqueuing the inflight buffers in the synchronized block.", "committedDate": "2020-05-10T04:13:58Z", "type": "forcePushed"}]}