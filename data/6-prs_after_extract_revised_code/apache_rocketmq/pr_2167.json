{"pr_number": 2167, "pr_title": "[ISSUE #2165] Slave read enable not work sometimes When cluster deployed on DLedger mode", "pr_createdAt": "2020-07-16T13:06:23Z", "pr_url": "https://github.com/apache/rocketmq/pull/2167", "timeline": [{"oid": "373f6451c360daa930e619019c23548fafcbd5dd", "url": "https://github.com/apache/rocketmq/commit/373f6451c360daa930e619019c23548fafcbd5dd", "message": "[Client] Fix slaveReadEnable=true not work sometimes When cluster deployed on DLedger mode", "committedDate": "2020-07-16T13:02:48Z", "type": "commit"}, {"oid": "0a7f802b8efedbe69605d09145968814df6b5dbb", "url": "https://github.com/apache/rocketmq/commit/0a7f802b8efedbe69605d09145968814df6b5dbb", "message": "[Client] Add unit test for findBrokerAddressInSubscribe", "committedDate": "2020-07-16T13:03:04Z", "type": "commit"}, {"oid": "d747e8a4ba0f0078bb91e65a47162872a9d6f1bd", "url": "https://github.com/apache/rocketmq/commit/d747e8a4ba0f0078bb91e65a47162872a9d6f1bd", "message": "refine unit test", "committedDate": "2020-07-17T02:05:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM3OTM3MA==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r502379370", "bodyText": "why just choose the concrete index 2 while not 3, 4 or other if size > 2? Is there any optimized space, image if the first follower also not available?", "author": "vongosling", "createdAt": "2020-10-09T12:02:05Z", "path": "client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java", "diffHunk": "@@ -1044,9 +1044,14 @@ public FindBrokerResult findBrokerAddressInSubscribe(\n             found = brokerAddr != null;\n \n             if (!found && !onlyThisBroker) {\n-                Entry<Long, String> entry = map.entrySet().iterator().next();\n-                brokerAddr = entry.getValue();\n-                slave = entry.getKey() != MixAll.MASTER_ID;\n+                if (brokerId == 1 && map.size() > 2) {\n+                    brokerAddr = map.get(2L);", "originalCommit": "d747e8a4ba0f0078bb91e65a47162872a9d6f1bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzMDk0NQ==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r502530945", "bodyText": "I agree with u, I'will try to find a more elegant way.", "author": "maixiaohai", "createdAt": "2020-10-09T16:04:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM3OTM3MA=="}], "type": "inlineReview", "revised_code": {"commit": "5dd7a3e4e59e81ee97509ec672b7e42900bf1678", "chunk": "diff --git a/client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java b/client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java\nindex 9b75e6ce..4900dea4 100644\n--- a/client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java\n+++ b/client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java\n\n@@ -1043,15 +1043,20 @@ public class MQClientInstance {\n             slave = brokerId != MixAll.MASTER_ID;\n             found = brokerAddr != null;\n \n-            if (!found && !onlyThisBroker) {\n-                if (brokerId == 1 && map.size() > 2) {\n-                    brokerAddr = map.get(2L);\n-                    slave = true;\n-                } else {\n-                    Entry<Long, String> entry = map.entrySet().iterator().next();\n-                    brokerAddr = entry.getValue();\n-                    slave = entry.getKey() != MixAll.MASTER_ID;\n+            if (!found && slave && brokerId == 1) {\n+                for (Long key : map.keySet()) {\n+                    if (key != 0) {\n+                        brokerAddr = map.get(key);\n+                        found = true;\n+                        break;\n+                    }\n                 }\n+            }\n+\n+            if (!found && !onlyThisBroker) {\n+                Entry<Long, String> entry = map.entrySet().iterator().next();\n+                brokerAddr = entry.getValue();\n+                slave = entry.getKey() != MixAll.MASTER_ID;\n                 found = true;\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM4MDExMA==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r502380110", "bodyText": "Is there any difference in your test case?(0,1,2 vs 0,2,3)", "author": "vongosling", "createdAt": "2020-10-09T12:03:50Z", "path": "client/src/test/java/org/apache/rocketmq/client/impl/factory/MQClientInstanceTest.java", "diffHunk": "@@ -74,6 +87,34 @@ public void testTopicRouteData2TopicPublishInfo() {\n         assertThat(topicPublishInfo.getMessageQueueList().size()).isEqualTo(4);\n     }\n \n+    @Test\n+    public void testFindBrokerAddressInSubscribe() {\n+        // dledger normal case\n+        String brokerName = \"BrokerA\";\n+        HashMap<Long, String> addrMap = new HashMap<Long, String>();\n+        addrMap.put(0L, \"127.0.0.1:10911\");\n+        addrMap.put(1L, \"127.0.0.1:10912\");\n+        addrMap.put(2L, \"127.0.0.1:10913\");\n+        brokerAddrTable.put(brokerName, addrMap);\n+        long brokerId = 1;\n+        FindBrokerResult brokerResult = mqClientInstance.findBrokerAddressInSubscribe(brokerName, brokerId, false);\n+        assertThat(brokerResult).isNotNull();\n+        assertThat(brokerResult.getBrokerAddr()).isEqualTo(\"127.0.0.1:10912\");\n+        assertThat(brokerResult.isSlave()).isTrue();\n+\n+        // dledger case, when node n0 was voted as the leader\n+        brokerName = \"BrokerB\";\n+        HashMap<Long, String> addrMapNew = new HashMap<Long, String>();\n+        addrMapNew.put(0L, \"127.0.0.1:10911\");\n+        addrMapNew.put(2L, \"127.0.0.1:10912\");", "originalCommit": "d747e8a4ba0f0078bb91e65a47162872a9d6f1bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzMzA2Ng==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r502533066", "bodyText": "(0,1,2) is the normal case, which is added to check my code and also for the future changes from others. IMO, it can improve the coverage of UT.\n(0,2,3) is the \"bugfix\" case, which is added to check if my code fix the bug.", "author": "maixiaohai", "createdAt": "2020-10-09T16:08:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM4MDExMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyOTgyOQ==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r502729829", "bodyText": "Please go ahead, I would like to follow your pr :-)", "author": "vongosling", "createdAt": "2020-10-10T01:41:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM4MDExMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "5dd7a3e4e59e81ee97509ec672b7e42900bf1678", "url": "https://github.com/apache/rocketmq/commit/5dd7a3e4e59e81ee97509ec672b7e42900bf1678", "message": "update", "committedDate": "2020-10-12T06:10:53Z", "type": "commit"}, {"oid": "593f3fca444ba4e56c82441c41c22332057570cb", "url": "https://github.com/apache/rocketmq/commit/593f3fca444ba4e56c82441c41c22332057570cb", "message": "refine", "committedDate": "2020-10-13T14:00:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTM2MQ==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r504335361", "bodyText": "mockito and jmockit has native support for the reflection", "author": "vongosling", "createdAt": "2020-10-14T00:40:10Z", "path": "client/src/test/java/org/apache/rocketmq/client/impl/factory/MQClientInstanceTest.java", "diffHunk": "@@ -42,6 +47,14 @@\n     private MQClientInstance mqClientInstance = MQClientManager.getInstance().getOrCreateMQClientInstance(new ClientConfig());\n     private String topic = \"FooBar\";\n     private String group = \"FooBarGroup\";\n+    private ConcurrentMap<String, HashMap<Long, String>> brokerAddrTable = new ConcurrentHashMap<String, HashMap<Long, String>>();\n+\n+    @Before\n+    public void init() throws Exception {\n+        Field field = MQClientInstance.class.getDeclaredField(\"brokerAddrTable\");", "originalCommit": "593f3fca444ba4e56c82441c41c22332057570cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM4MDQ5OA==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r504380498", "bodyText": "done", "author": "maixiaohai", "createdAt": "2020-10-14T03:34:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTM2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNjU2Ng==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r505136566", "bodyText": "My idea was to remind you to use jmockit's built-in reflection method to mock private implementation. For some tools, do not use the internal package. These codes are created mainly by its usage, which is not suitable for direct import in projects. This is good practice. For this problem, The value of the two implementations\uff08mock or inject reflection\uff09 is not much different. I hope you could pay attention to this point in the future :-)", "author": "vongosling", "createdAt": "2020-10-15T03:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTM2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE5MzYyMQ==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r505193621", "bodyText": "Thanks for your reminding\uff01I will pay attention to it.", "author": "maixiaohai", "createdAt": "2020-10-15T06:20:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTM2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f8b0044ddf766bbdedb7d76dbf4841ea050fb75e", "chunk": "diff --git a/client/src/test/java/org/apache/rocketmq/client/impl/factory/MQClientInstanceTest.java b/client/src/test/java/org/apache/rocketmq/client/impl/factory/MQClientInstanceTest.java\nindex ecc5978a..e0506aa1 100644\n--- a/client/src/test/java/org/apache/rocketmq/client/impl/factory/MQClientInstanceTest.java\n+++ b/client/src/test/java/org/apache/rocketmq/client/impl/factory/MQClientInstanceTest.java\n\n@@ -51,9 +51,7 @@ public class MQClientInstanceTest {\n \n     @Before\n     public void init() throws Exception {\n-        Field field = MQClientInstance.class.getDeclaredField(\"brokerAddrTable\");\n-        field.setAccessible(true);\n-        field.set(mqClientInstance, brokerAddrTable);\n+        FieldSetter.setField(mqClientInstance, MQClientInstance.class.getDeclaredField(\"brokerAddrTable\"), brokerAddrTable);\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTgzNw==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r504335837", "bodyText": "How do we handle if the slave has happened to become a master?", "author": "vongosling", "createdAt": "2020-10-14T00:41:56Z", "path": "client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java", "diffHunk": "@@ -1043,6 +1043,11 @@ public FindBrokerResult findBrokerAddressInSubscribe(\n             slave = brokerId != MixAll.MASTER_ID;\n             found = brokerAddr != null;\n \n+            if (!found && slave) {\n+                brokerAddr = map.get(brokerId + 1);", "originalCommit": "593f3fca444ba4e56c82441c41c22332057570cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2MzA0Mg==", "url": "https://github.com/apache/rocketmq/pull/2167#discussion_r504363042", "bodyText": "The broker id will change as dledger role change.\nIf it happended to be the temporary state, the request will return error code, and client will refresh addr tables", "author": "maixiaohai", "createdAt": "2020-10-14T02:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTgzNw=="}], "type": "inlineReview", "revised_code": {"commit": "f8b0044ddf766bbdedb7d76dbf4841ea050fb75e", "chunk": "diff --git a/client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java b/client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java\nindex 7194c743..4900dea4 100644\n--- a/client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java\n+++ b/client/src/main/java/org/apache/rocketmq/client/impl/factory/MQClientInstance.java\n\n@@ -1043,9 +1043,14 @@ public class MQClientInstance {\n             slave = brokerId != MixAll.MASTER_ID;\n             found = brokerAddr != null;\n \n-            if (!found && slave) {\n-                brokerAddr = map.get(brokerId + 1);\n-                found = brokerAddr != null;\n+            if (!found && slave && brokerId == 1) {\n+                for (Long key : map.keySet()) {\n+                    if (key != 0) {\n+                        brokerAddr = map.get(key);\n+                        found = true;\n+                        break;\n+                    }\n+                }\n             }\n \n             if (!found && !onlyThisBroker) {\n"}}, {"oid": "f8b0044ddf766bbdedb7d76dbf4841ea050fb75e", "url": "https://github.com/apache/rocketmq/commit/f8b0044ddf766bbdedb7d76dbf4841ea050fb75e", "message": "refine UT code", "committedDate": "2020-10-14T03:31:13Z", "type": "commit"}, {"oid": "8cbb709fa2b9e7ef25ae595da6b3a919a59f4817", "url": "https://github.com/apache/rocketmq/commit/8cbb709fa2b9e7ef25ae595da6b3a919a59f4817", "message": "Merge branch 'slave_read_enable_not_work_sometimes' of https://github.com/maixiaohai/rocketmq into slave_read_enable_not_work_sometimes", "committedDate": "2020-10-14T03:32:45Z", "type": "commit"}]}