{"pr_number": 3999, "pr_title": "[risk=low][RW-5475] Admin read-only notebook endpoint", "pr_createdAt": "2020-09-14T17:29:12Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3999", "timeline": [{"oid": "e976231d06594837f461614722cf1b6361f43102", "url": "https://github.com/all-of-us/workbench/commit/e976231d06594837f461614722cf1b6361f43102", "message": "first attempt at adminReadOnlyNotebooks", "committedDate": "2020-09-14T17:04:43Z", "type": "commit"}, {"oid": "71e5e2d86c05f0861b086b6cca884fd36b853b0b", "url": "https://github.com/all-of-us/workbench/commit/71e5e2d86c05f0861b086b6cca884fd36b853b0b", "message": "Audit", "committedDate": "2020-09-14T17:04:43Z", "type": "commit"}, {"oid": "c49bef5594977049fde79c8512aa5935f159aa18", "url": "https://github.com/all-of-us/workbench/commit/c49bef5594977049fde79c8512aa5935f159aa18", "message": "Add adminGetReadOnlyHtml()\n\nAdd serviceAccountStaticNotebooksApi\n\nSwitch to non-String body due to Swagger bugs", "committedDate": "2020-09-14T17:04:57Z", "type": "commit"}, {"oid": "abb3801809d3471674fd25c48d3a4edb3db6aa59", "url": "https://github.com/all-of-us/workbench/commit/abb3801809d3471674fd25c48d3a4edb3db6aa59", "message": "rebase fix", "committedDate": "2020-09-14T17:14:40Z", "type": "commit"}, {"oid": "992d972537070052137ec567fec647ec318dc468", "url": "https://github.com/all-of-us/workbench/commit/992d972537070052137ec567fec647ec318dc468", "message": "lint", "committedDate": "2020-09-14T17:16:59Z", "type": "commit"}, {"oid": "5e216e517492d57ea145d4d80f2b7123cb236107", "url": "https://github.com/all-of-us/workbench/commit/5e216e517492d57ea145d4d80f2b7123cb236107", "message": "restore original method", "committedDate": "2020-09-14T17:37:11Z", "type": "commit"}, {"oid": "e49c23f2a1605a5a8100d344e4c905d7add003bb", "url": "https://github.com/all-of-us/workbench/commit/e49c23f2a1605a5a8100d344e4c905d7add003bb", "message": "Add MockBean of AdminAuditor", "committedDate": "2020-09-14T18:22:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEzOTY3NA==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488139674", "bodyText": "Please update the PR description with the general approach here. I didn't expect to see FC cloud changes, but it makes sense.", "author": "jaycarlton", "createdAt": "2020-09-14T18:33:03Z", "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudConfig.java", "diffHunk": "@@ -38,6 +38,9 @@\n   public static final String SERVICE_ACCOUNT_GROUPS_API = \"serviceAccountGroupsApi\";\n   public static final String SERVICE_ACCOUNT_WORKSPACE_API = \"workspaceAclsApi\";\n   public static final String END_USER_WORKSPACE_API = \"workspacesApi\";\n+  public static final String SERVICE_ACCOUNT_STATIC_NOTEBOOKS_API =", "originalCommit": "e49c23f2a1605a5a8100d344e4c905d7add003bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MDIxOQ==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488140219", "bodyText": "Looks like these three lines could be their own helper function called by both beans.", "author": "jaycarlton", "createdAt": "2020-09-14T18:34:05Z", "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudConfig.java", "diffHunk": "@@ -91,15 +94,24 @@ public WorkspacesApi workspacesApiAcls(\n     return api;\n   }\n \n-  @Bean\n+  @Bean(name = END_USER_STATIC_NOTEBOOKS_API)\n   @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)\n-  public StaticNotebooksApi staticNotebooksApi(\n+  public StaticNotebooksApi endUserStaticNotebooksApi(\n       @Qualifier(END_USER_API_CLIENT) ApiClient apiClient) {\n     StaticNotebooksApi api = new StaticNotebooksApi();\n     api.setApiClient(apiClient);\n     return api;\n   }\n \n+  @Bean(name = SERVICE_ACCOUNT_STATIC_NOTEBOOKS_API)\n+  @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)\n+  public StaticNotebooksApi serviceAccountStaticNotebooksApi(\n+      @Qualifier(SERVICE_ACCOUNT_API_CLIENT) ApiClient apiClient) {\n+    StaticNotebooksApi api = new StaticNotebooksApi();", "originalCommit": "e49c23f2a1605a5a8100d344e4c905d7add003bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1ODcyMQ==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488158721", "bodyText": "I'm not sure that gets us much", "author": "jmthibault79", "createdAt": "2020-09-14T19:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MDIxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE5NjU3Ng==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488196576", "bodyText": "it's easy to do and makes it obvious that it's the same bean but with different ApiClients.", "author": "jaycarlton", "createdAt": "2020-09-14T20:20:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MDIxOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MDcwOQ==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488140709", "bodyText": "nit: change context to unused here and below.", "author": "jaycarlton", "createdAt": "2020-09-14T18:34:55Z", "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudServiceImpl.java", "diffHunk": "@@ -471,7 +476,13 @@ public boolean isUserMemberOfGroup(String email, String groupName) {\n   @Override\n   public String staticNotebooksConvert(byte[] notebook) {\n     return retryHandler.run(\n-        (context) -> staticNotebooksApiProvider.get().convertNotebook(notebook));\n+        (context) -> endUserStaticNotebooksApiProvider.get().convertNotebook(notebook));", "originalCommit": "e49c23f2a1605a5a8100d344e4c905d7add003bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1Mzg4NA==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488153884", "bodyText": "the whole file uses this style.  I'm going to keep it like this", "author": "jmthibault79", "createdAt": "2020-09-14T18:58:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MDcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE4MzUwOA==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488183508", "bodyText": "ok", "author": "jaycarlton", "createdAt": "2020-09-14T19:54:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MDcwOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MjExNA==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488142114", "bodyText": "Huh. I'm surprised there's not a flag or something to avoid this.", "author": "jaycarlton", "createdAt": "2020-09-14T18:37:27Z", "path": "api/src/main/java/org/pmiops/workbench/notebooks/NotebooksServiceImpl.java", "diffHunk": "@@ -255,6 +255,24 @@ public String getReadOnlyHtml(\n     return PREVIEW_SANITIZER.sanitize(fireCloudService.staticNotebooksConvert(blob.getContent()));\n   }\n \n+  @Override\n+  public String adminGetReadOnlyHtml(\n+      String workspaceNamespace, String workspaceName, String notebookName) {\n+    String bucketName =\n+        fireCloudService\n+            .getWorkspaceAsService(workspaceNamespace, workspaceName)\n+            .getWorkspace()\n+            .getBucketName();\n+\n+    Blob blob = getBlobWithSizeConstraint(bucketName, notebookName);\n+    // We need to send a byte array so the ApiClient attaches the body as is instead", "originalCommit": "e49c23f2a1605a5a8100d344e4c905d7add003bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MjYxOA==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488142618", "bodyText": "super-nit: I'd kind of expect the notebook name to come before the reason, as it's the third in a line of increasingly specific identifiers.", "author": "jaycarlton", "createdAt": "2020-09-14T18:38:27Z", "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminService.java", "diffHunk": "@@ -26,4 +27,10 @@ WorkspaceAuditLogQueryResponse getAuditLogEntries(\n       Integer limit,\n       Long afterMillis,\n       @Nullable Long beforeMillisNullable);\n+\n+  String getReadOnlyNotebook(\n+      String workspaceNamespace,\n+      String workspaceName,\n+      AccessReason accessReason,", "originalCommit": "e49c23f2a1605a5a8100d344e4c905d7add003bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1Nzc3OQ==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488157779", "bodyText": "agreed, fixed", "author": "jmthibault79", "createdAt": "2020-09-14T19:05:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MjYxOA=="}], "type": "inlineReview", "revised_code": {"commit": "8f177a7b78198b87ee23d12d275f8127b6cbd799", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminService.java b/api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminService.java\nindex d7864fcec..a11449b42 100644\n--- a/api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminService.java\n+++ b/api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminService.java\n\n@@ -31,6 +31,6 @@ public interface WorkspaceAdminService {\n   String getReadOnlyNotebook(\n       String workspaceNamespace,\n       String workspaceName,\n-      AccessReason accessReason,\n-      String notebookName);\n+      String notebookName,\n+      AccessReason accessReason);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NDEyNg==", "url": "https://github.com/all-of-us/workbench/pull/3999#discussion_r488144126", "bodyText": "Can you please add a unit test on this service (and possibly notebooks service)? I'm especially interested in showing this serialization workaround.", "author": "jaycarlton", "createdAt": "2020-09-14T18:41:17Z", "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminServiceImpl.java", "diffHunk": "@@ -220,6 +227,21 @@ public WorkspaceAuditLogQueryResponse getAuditLogEntries(\n         workspaceDatabaseId, limit, after, before);\n   }\n \n+  @Override\n+  public String getReadOnlyNotebook(", "originalCommit": "e49c23f2a1605a5a8100d344e4c905d7add003bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8f177a7b78198b87ee23d12d275f8127b6cbd799", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminServiceImpl.java b/api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminServiceImpl.java\nindex 7e620394d..27efca464 100644\n--- a/api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminServiceImpl.java\n+++ b/api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminServiceImpl.java\n\n@@ -231,14 +231,14 @@ public class WorkspaceAdminServiceImpl implements WorkspaceAdminService {\n   public String getReadOnlyNotebook(\n       String workspaceNamespace,\n       String workspaceName,\n-      AccessReason accessReason,\n-      String notebookName) {\n+      String notebookName,\n+      AccessReason accessReason) {\n     if (StringUtils.isBlank(accessReason.getReason())) {\n       throw new BadRequestException(\"Notebook viewing access reason is required\");\n     }\n \n     adminAuditor.fireViewNotebookAction(\n-        workspaceNamespace, workspaceName, accessReason, notebookName);\n+        workspaceNamespace, workspaceName, notebookName, accessReason);\n     return notebooksService.adminGetReadOnlyHtml(workspaceNamespace, workspaceName, notebookName);\n   }\n \n"}}, {"oid": "e3599d1dfddd31091151ce9fa944944c1f7cb67a", "url": "https://github.com/all-of-us/workbench/commit/e3599d1dfddd31091151ce9fa944944c1f7cb67a", "message": "snake_case prop names", "committedDate": "2020-09-14T18:55:12Z", "type": "commit"}, {"oid": "8de9b424437e3125d9fb8260ad1bd94863a17bab", "url": "https://github.com/all-of-us/workbench/commit/8de9b424437e3125d9fb8260ad1bd94863a17bab", "message": "common timestamp", "committedDate": "2020-09-14T18:55:56Z", "type": "commit"}, {"oid": "8f177a7b78198b87ee23d12d275f8127b6cbd799", "url": "https://github.com/all-of-us/workbench/commit/8f177a7b78198b87ee23d12d275f8127b6cbd799", "message": "reorder params", "committedDate": "2020-09-14T19:04:28Z", "type": "commit"}]}