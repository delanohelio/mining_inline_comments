{"pr_number": 3023, "pr_title": "[RW-4314][risk=no] Gauge metric for GSuite Domain Account Count", "pr_createdAt": "2020-01-22T17:07:00Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3023", "timeline": [{"oid": "690805d15daa92b110338bbb9928dbb77b36a8d1", "url": "https://github.com/all-of-us/workbench/commit/690805d15daa92b110338bbb9928dbb77b36a8d1", "message": "implement gsuite user count gauge", "committedDate": "2020-01-22T16:59:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY4ODc0Ng==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r369688746", "bodyText": "I don't know of a good way to write a reasonable test case for this logic", "author": "jaycarlton", "createdAt": "2020-01-22T17:08:25Z", "path": "api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java", "diffHunk": "@@ -239,6 +252,38 @@ public void deleteUser(String username) {\n     }\n   }\n \n+  @Override\n+  public Collection<MeasurementBundle> getGaugeData() {\n+    long userCount = 0;\n+    try {\n+      final Directory directoryService = getGoogleDirectoryService();\n+      Optional<String> nextPageToken = Optional.empty();\n+      do {\n+        final Directory.Users.List listQuery = directoryService", "originalCommit": "690805d15daa92b110338bbb9928dbb77b36a8d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c789edace4200b8ceae2f7e42e57b6c115c9cf89", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\nindex 9dbd2fd01..fcb13ff3a 100644\n--- a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n+++ b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n\n@@ -259,13 +259,14 @@ public class DirectoryServiceImpl implements DirectoryService, GaugeDataCollecto\n       final Directory directoryService = getGoogleDirectoryService();\n       Optional<String> nextPageToken = Optional.empty();\n       do {\n-        final Directory.Users.List listQuery = directoryService\n-            .users()\n-            .list()\n-            .setDomain(gSuiteDomain())\n-            .setViewType(USER_VIEW_TYPE)\n-            .setMaxResults(MAX_USERS_LIST_PAGE_SIZE)\n-            .setOrderBy(EMAIL_USER_FIELD);\n+        final Directory.Users.List listQuery =\n+            directoryService\n+                .users()\n+                .list()\n+                .setDomain(gSuiteDomain())\n+                .setViewType(USER_VIEW_TYPE)\n+                .setMaxResults(MAX_USERS_LIST_PAGE_SIZE)\n+                .setOrderBy(EMAIL_USER_FIELD);\n         nextPageToken.ifPresent(listQuery::setPageToken);\n \n         final Users usersQueryResult = listQuery.execute();\n"}}, {"oid": "c789edace4200b8ceae2f7e42e57b6c115c9cf89", "url": "https://github.com/all-of-us/workbench/commit/c789edace4200b8ceae2f7e42e57b6c115c9cf89", "message": "spotlless", "committedDate": "2020-01-22T17:13:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY5MTk2Ng==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r369691966", "bodyText": "Do we have a place in the GSuite Admin UI where I can verify this value? Looks like 660 for fake-research-aou.org.", "author": "jaycarlton", "createdAt": "2020-01-22T17:14:37Z", "path": "api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java", "diffHunk": "@@ -239,6 +252,40 @@ public void deleteUser(String username) {\n     }\n   }\n \n+  @Override\n+  public Collection<MeasurementBundle> getGaugeData() {\n+    long userCount = 0;\n+    try {\n+      final Directory directoryService = getGoogleDirectoryService();\n+      Optional<String> nextPageToken = Optional.empty();\n+      do {\n+        final Directory.Users.List listQuery =\n+            directoryService\n+                .users()\n+                .list()\n+                .setDomain(gSuiteDomain())\n+                .setViewType(USER_VIEW_TYPE)\n+                .setMaxResults(MAX_USERS_LIST_PAGE_SIZE)\n+                .setOrderBy(EMAIL_USER_FIELD);\n+        nextPageToken.ifPresent(listQuery::setPageToken);\n+\n+        final Users usersQueryResult = listQuery.execute();\n+\n+        userCount += usersQueryResult.getUsers().size();", "originalCommit": "c789edace4200b8ceae2f7e42e57b6c115c9cf89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2MzMxMg==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r370763312", "bodyText": "I don't see an easy way - best thing I found is to go to the users page, then \"download users\" to get them as CSV:", "author": "calbach", "createdAt": "2020-01-24T17:54:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY5MTk2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0622d9b66cf382545fba1a19cb7f2e88a932c22d", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\nindex fcb13ff3a..5aea5c8c5 100644\n--- a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n+++ b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n\n@@ -254,7 +264,31 @@ public class DirectoryServiceImpl implements DirectoryService, GaugeDataCollecto\n \n   @Override\n   public Collection<MeasurementBundle> getGaugeData() {\n-    long userCount = 0;\n+    ImmutableSet.Builder<MeasurementBundle> resultBuilder = ImmutableSet.builder();\n+\n+    final String localDomain = gSuiteDomain();\n+    final long localDomainUserCount = countUsersInDomain(localDomain);\n+    resultBuilder.add(\n+        MeasurementBundle.builder()\n+            .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, localDomainUserCount)\n+            .addTag(MetricLabel.GSUITE_DOMAIN, localDomain)\n+            .build());\n+\n+    final String topLevelDomain = getTopLevelGSuiteDomain();\n+    // Avoid creating duplicate data point if the local domain is the top domain\n+    if (!localDomain.equals(topLevelDomain)) {\n+      final long topLevelDomainUserCount = countUsersInDomain(topLevelDomain);\n+      resultBuilder.add(\n+          MeasurementBundle.builder()\n+              .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, topLevelDomainUserCount)\n+              .addTag(MetricLabel.GSUITE_DOMAIN, topLevelDomain)\n+              .build());\n+    }\n+    return resultBuilder.build();\n+  }\n+\n+  private long countUsersInDomain(String gSuiteDomain) {\n+    long result = 0;\n     try {\n       final Directory directoryService = getGoogleDirectoryService();\n       Optional<String> nextPageToken = Optional.empty();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2MTE1OQ==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r370761159", "bodyText": "custom view type with a projection of just primaryEmail is probably better, as you mention in your PR description - especially if this is running frequently. I also don't see a better API for counting", "author": "calbach", "createdAt": "2020-01-24T17:49:46Z", "path": "api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java", "diffHunk": "@@ -239,6 +252,40 @@ public void deleteUser(String username) {\n     }\n   }\n \n+  @Override\n+  public Collection<MeasurementBundle> getGaugeData() {\n+    long userCount = 0;\n+    try {\n+      final Directory directoryService = getGoogleDirectoryService();\n+      Optional<String> nextPageToken = Optional.empty();\n+      do {\n+        final Directory.Users.List listQuery =\n+            directoryService\n+                .users()\n+                .list()\n+                .setDomain(gSuiteDomain())\n+                .setViewType(USER_VIEW_TYPE)", "originalCommit": "c789edace4200b8ceae2f7e42e57b6c115c9cf89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4MjY0Mg==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r371882642", "bodyText": "I don't see a way to use only a subset fo the basic fields. Looks like projection and customFieldMask only deal with hiding selected custom fields.\nhttps://developers.google.com/admin-sdk/directory/v1/reference/users/list\nThis only runs every minute. I don't see a rate limit specifically for this list API or any other read-only operations at https://developers.google.com/admin-sdk/directory/v1/limits", "author": "jaycarlton", "createdAt": "2020-01-28T15:43:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2MTE1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5MzA3OQ==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r373093079", "bodyText": "Ah, I see that it doesn't apply to the basic fields - misunderstood the docs for this. Yeah - sounds fine.", "author": "calbach", "createdAt": "2020-01-30T17:37:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2MTE1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0622d9b66cf382545fba1a19cb7f2e88a932c22d", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\nindex fcb13ff3a..5aea5c8c5 100644\n--- a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n+++ b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n\n@@ -254,7 +264,31 @@ public class DirectoryServiceImpl implements DirectoryService, GaugeDataCollecto\n \n   @Override\n   public Collection<MeasurementBundle> getGaugeData() {\n-    long userCount = 0;\n+    ImmutableSet.Builder<MeasurementBundle> resultBuilder = ImmutableSet.builder();\n+\n+    final String localDomain = gSuiteDomain();\n+    final long localDomainUserCount = countUsersInDomain(localDomain);\n+    resultBuilder.add(\n+        MeasurementBundle.builder()\n+            .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, localDomainUserCount)\n+            .addTag(MetricLabel.GSUITE_DOMAIN, localDomain)\n+            .build());\n+\n+    final String topLevelDomain = getTopLevelGSuiteDomain();\n+    // Avoid creating duplicate data point if the local domain is the top domain\n+    if (!localDomain.equals(topLevelDomain)) {\n+      final long topLevelDomainUserCount = countUsersInDomain(topLevelDomain);\n+      resultBuilder.add(\n+          MeasurementBundle.builder()\n+              .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, topLevelDomainUserCount)\n+              .addTag(MetricLabel.GSUITE_DOMAIN, topLevelDomain)\n+              .build());\n+    }\n+    return resultBuilder.build();\n+  }\n+\n+  private long countUsersInDomain(String gSuiteDomain) {\n+    long result = 0;\n     try {\n       final Directory directoryService = getGoogleDirectoryService();\n       Optional<String> nextPageToken = Optional.empty();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NDg1Mw==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r370764853", "bodyText": "This domain restriction is correct, but not the target we want to directly alert on. The gsuite user capacity is dictated by the total number of users in a gsuite domain - which for fake-research-aou.org covers test, perf, staging, stable. So the alert would need to be driven on the sum of those user counts. So you'd need to either sum these values together across projects and alert on that (if that's possible), or just remove the domain restriction here, or else export both of these metrics but only alert on the total gsuite count.", "author": "calbach", "createdAt": "2020-01-24T17:58:27Z", "path": "api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java", "diffHunk": "@@ -239,6 +252,40 @@ public void deleteUser(String username) {\n     }\n   }\n \n+  @Override\n+  public Collection<MeasurementBundle> getGaugeData() {\n+    long userCount = 0;\n+    try {\n+      final Directory directoryService = getGoogleDirectoryService();\n+      Optional<String> nextPageToken = Optional.empty();\n+      do {\n+        final Directory.Users.List listQuery =\n+            directoryService\n+                .users()\n+                .list()\n+                .setDomain(gSuiteDomain())", "originalCommit": "c789edace4200b8ceae2f7e42e57b6c115c9cf89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NzI5OQ==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r370767299", "bodyText": "IIUC, we are on the right track. The gauge will fire for all environments, and we'll be able to distinguish those based on the namespace and the project_id in the resource descriptor.\nWhere it gets tricky is that those environments today are in separate Stackdriver Workspaces, meaning we can't see all those counts in one place to apply some kind of formula. I'm quietly pushing for a bit more investigation of moving things to a single workspace, but the catch is that no project can be in more than one workspace at a time.", "author": "jaycarlton", "createdAt": "2020-01-24T18:04:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NDg1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5MzU0Nw==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r370793547", "bodyText": "If that's not possible today, then I'd suggest just dropping this filter and have the metric represent \"the total number of users in the corresponding gsuite domain\". The metric would be identical in all environments which share a gsuite instance, and would be larger than the actual user count for the environment.", "author": "calbach", "createdAt": "2020-01-24T19:04:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NDg1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwMzUyNQ==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r370803525", "bodyText": "I can give both with different labels.\nFor perf, instead of perf.fake-research-aou.org, you would just get fake-research-aou.org.", "author": "jaycarlton", "createdAt": "2020-01-24T19:27:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NDg1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0622d9b66cf382545fba1a19cb7f2e88a932c22d", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\nindex fcb13ff3a..5aea5c8c5 100644\n--- a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n+++ b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n\n@@ -254,7 +264,31 @@ public class DirectoryServiceImpl implements DirectoryService, GaugeDataCollecto\n \n   @Override\n   public Collection<MeasurementBundle> getGaugeData() {\n-    long userCount = 0;\n+    ImmutableSet.Builder<MeasurementBundle> resultBuilder = ImmutableSet.builder();\n+\n+    final String localDomain = gSuiteDomain();\n+    final long localDomainUserCount = countUsersInDomain(localDomain);\n+    resultBuilder.add(\n+        MeasurementBundle.builder()\n+            .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, localDomainUserCount)\n+            .addTag(MetricLabel.GSUITE_DOMAIN, localDomain)\n+            .build());\n+\n+    final String topLevelDomain = getTopLevelGSuiteDomain();\n+    // Avoid creating duplicate data point if the local domain is the top domain\n+    if (!localDomain.equals(topLevelDomain)) {\n+      final long topLevelDomainUserCount = countUsersInDomain(topLevelDomain);\n+      resultBuilder.add(\n+          MeasurementBundle.builder()\n+              .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, topLevelDomainUserCount)\n+              .addTag(MetricLabel.GSUITE_DOMAIN, topLevelDomain)\n+              .build());\n+    }\n+    return resultBuilder.build();\n+  }\n+\n+  private long countUsersInDomain(String gSuiteDomain) {\n+    long result = 0;\n     try {\n       final Directory directoryService = getGoogleDirectoryService();\n       Optional<String> nextPageToken = Optional.empty();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NTU0OA==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r370765548", "bodyText": "the formatter butchered this a bit, probably move the comment before the enum value instead", "author": "calbach", "createdAt": "2020-01-24T18:00:09Z", "path": "api/src/main/java/org/pmiops/workbench/monitoring/attachments/MetricLabel.java", "diffHunk": "@@ -10,9 +10,12 @@\n public enum MetricLabel implements MetricLabelBase {\n   BUFFER_ENTRY_STATUS(\"BufferEntryStatus\", Enums.getValueStrings(BufferEntryStatus.class)),\n   DATASET_INVALID(\"Invalid\", Booleans.VALUE_STRINGS),\n+  DATA_ACCESS_LEVEL(\"DataAccessLevel\", Enums.getValueStrings(DataAccessLevel.class)),\n+  GSUITE_DOMAIN(\n+      \"gsuite_domain\"), // provide this (slightly redundant) in case we ever merge time series", "originalCommit": "c789edace4200b8ceae2f7e42e57b6c115c9cf89", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0622d9b66cf382545fba1a19cb7f2e88a932c22d", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/monitoring/attachments/MetricLabel.java b/api/src/main/java/org/pmiops/workbench/monitoring/attachments/MetricLabel.java\nindex 75d7c7624..d8f9076e5 100644\n--- a/api/src/main/java/org/pmiops/workbench/monitoring/attachments/MetricLabel.java\n+++ b/api/src/main/java/org/pmiops/workbench/monitoring/attachments/MetricLabel.java\n\n@@ -11,9 +11,7 @@ public enum MetricLabel implements MetricLabelBase {\n   BUFFER_ENTRY_STATUS(\"BufferEntryStatus\", Enums.getValueStrings(BufferEntryStatus.class)),\n   DATASET_INVALID(\"Invalid\", Booleans.VALUE_STRINGS),\n   DATA_ACCESS_LEVEL(\"DataAccessLevel\", Enums.getValueStrings(DataAccessLevel.class)),\n-  GSUITE_DOMAIN(\n-      \"gsuite_domain\"), // provide this (slightly redundant) in case we ever merge time series\n-  // across projects or have multiple domains per project\n+  GSUITE_DOMAIN(\"gsuite_domain\"),\n   USER_BYPASSED_BETA(\"BypassedBeta\", Booleans.VALUE_STRINGS),\n   USER_DISABLED(\"Disabled\", Booleans.VALUE_STRINGS),\n   WORKSPACE_ACTIVE_STATUS(\"ActiveStatus\");\n"}}, {"oid": "24f4ade57be2badf99bb0719f7b17bf34897ce5f", "url": "https://github.com/all-of-us/workbench/commit/24f4ade57be2badf99bb0719f7b17bf34897ce5f", "message": "Merge branch 'master' into jaycarlton/RW-4314", "committedDate": "2020-01-24T19:22:52Z", "type": "commit"}, {"oid": "0622d9b66cf382545fba1a19cb7f2e88a932c22d", "url": "https://github.com/all-of-us/workbench/commit/0622d9b66cf382545fba1a19cb7f2e88a932c22d", "message": "report both lower-level and upper-level domains, if present", "committedDate": "2020-01-24T21:50:31Z", "type": "commit"}, {"oid": "9d24456338d9a7bf6a3a3b27545d348dcbcf8e24", "url": "https://github.com/all-of-us/workbench/commit/9d24456338d9a7bf6a3a3b27545d348dcbcf8e24", "message": "merge master", "committedDate": "2020-01-28T15:51:30Z", "type": "commit"}, {"oid": "6bcd1463cd1e530f3c4fd7c76b6a9240cf122028", "url": "https://github.com/all-of-us/workbench/commit/6bcd1463cd1e530f3c4fd7c76b6a9240cf122028", "message": "factor out a bit of common code", "committedDate": "2020-01-28T16:00:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg5MDE1Mw==", "url": "https://github.com/all-of-us/workbench/pull/3023#discussion_r371890153", "bodyText": "I'll have to wait for this to deploy to another environment where the top isn't the same as the environment domain to verify this logic.", "author": "jaycarlton", "createdAt": "2020-01-28T15:53:56Z", "path": "api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java", "diffHunk": "@@ -252,6 +275,60 @@ public void deleteUser(String username) {\n     }\n   }\n \n+  @Override\n+  public Collection<MeasurementBundle> getGaugeData() {\n+    ImmutableSet.Builder<MeasurementBundle> resultBuilder = ImmutableSet.builder();\n+\n+    final String localDomain = gSuiteDomain();\n+    final long localDomainUserCount = countUsersInDomain(localDomain);\n+    resultBuilder.add(\n+        MeasurementBundle.builder()\n+            .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, localDomainUserCount)\n+            .addTag(MetricLabel.GSUITE_DOMAIN, localDomain)\n+            .build());\n+\n+    final String topLevelDomain = getTopLevelGSuiteDomain();\n+    // Avoid creating duplicate data point if the local domain is the top domain\n+    if (!localDomain.equals(topLevelDomain)) {", "originalCommit": "9d24456338d9a7bf6a3a3b27545d348dcbcf8e24", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bcd1463cd1e530f3c4fd7c76b6a9240cf122028", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\nindex 4836f1cf6..3f519249f 100644\n--- a/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n+++ b/api/src/main/java/org/pmiops/workbench/google/DirectoryServiceImpl.java\n\n@@ -280,26 +280,27 @@ public class DirectoryServiceImpl implements DirectoryService, GaugeDataCollecto\n     ImmutableSet.Builder<MeasurementBundle> resultBuilder = ImmutableSet.builder();\n \n     final String localDomain = gSuiteDomain();\n-    final long localDomainUserCount = countUsersInDomain(localDomain);\n-    resultBuilder.add(\n-        MeasurementBundle.builder()\n-            .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, localDomainUserCount)\n-            .addTag(MetricLabel.GSUITE_DOMAIN, localDomain)\n-            .build());\n+    addDomainCountMeasurement(resultBuilder, localDomain, countUsersInDomain(localDomain));\n \n     final String topLevelDomain = getTopLevelGSuiteDomain();\n     // Avoid creating duplicate data point if the local domain is the top domain\n     if (!localDomain.equals(topLevelDomain)) {\n-      final long topLevelDomainUserCount = countUsersInDomain(topLevelDomain);\n-      resultBuilder.add(\n-          MeasurementBundle.builder()\n-              .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, topLevelDomainUserCount)\n-              .addTag(MetricLabel.GSUITE_DOMAIN, topLevelDomain)\n-              .build());\n+      addDomainCountMeasurement(resultBuilder, topLevelDomain, countUsersInDomain(topLevelDomain));\n     }\n     return resultBuilder.build();\n   }\n \n+  private void addDomainCountMeasurement(\n+      ImmutableSet.Builder<MeasurementBundle> resultBuilder,\n+      String gSuiteDomain,\n+      long domainUserCount) {\n+    resultBuilder.add(\n+        MeasurementBundle.builder()\n+            .addMeasurement(GaugeMetric.GSUITE_USER_COUNT, domainUserCount)\n+            .addTag(MetricLabel.GSUITE_DOMAIN, gSuiteDomain)\n+            .build());\n+  }\n+\n   private long countUsersInDomain(String gSuiteDomain) {\n     long result = 0;\n     try {\n"}}]}