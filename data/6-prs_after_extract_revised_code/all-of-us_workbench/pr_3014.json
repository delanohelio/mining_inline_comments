{"pr_number": 3014, "pr_title": "[risk=no] removing warnings about unchecked method invocation", "pr_createdAt": "2020-01-20T14:15:01Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3014", "timeline": [{"oid": "e270791a8250ee29081c3c09ab7e6b4362fafcac", "url": "https://github.com/all-of-us/workbench/commit/e270791a8250ee29081c3c09ab7e6b4362fafcac", "message": "removing warnings.", "committedDate": "2020-01-20T14:13:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTI2MA==", "url": "https://github.com/all-of-us/workbench/pull/3014#discussion_r368635260", "bodyText": "nit: It's a bit difficult to read ternary statements where each branch is a method call with a bunch of parameters (and only one different). Rather than put the ternary operator in the return statement, I'd probably declare final matchExpression = StringUtils.isBlank(keyword) ? conceptTypes : keyword; Then you can return the same statement either way.", "author": "jaycarlton", "createdAt": "2020-01-20T16:27:52Z", "path": "api/src/main/java/org/pmiops/workbench/concept/ConceptService.java", "diffHunk": "@@ -165,7 +165,7 @@ public long countSurveys() {\n     Pageable pageable = new PageRequest(page, limit, new Sort(Direction.DESC, \"countValue\"));\n     ImmutableList<String> conceptTypes = getConceptTypes(standardConceptFilter);\n     if (domainIds.contains(CommonStorageEnums.domainToDomainId(Domain.PHYSICALMEASUREMENT))) {\n-      ImmutableList domains =\n+      ImmutableList<String> domains =\n           ImmutableList.of(CommonStorageEnums.domainToDomainId(Domain.MEASUREMENT));\n       return StringUtils.isBlank(keyword)", "originalCommit": "e270791a8250ee29081c3c09ab7e6b4362fafcac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0ODkwNA==", "url": "https://github.com/all-of-us/workbench/pull/3014#discussion_r368648904", "bodyText": "I might be misunderstanding your statement, but conceptTypes and keyword are not mutually exclusive. If keyword is blank then call:\nconceptDao.findConcepts(conceptTypes, ...) otherwise call:\nconceptDao.findConcepts(keyword, conceptTypes, ...)", "author": "freemabd", "createdAt": "2020-01-20T16:56:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTI2MA=="}], "type": "inlineReview", "revised_code": null}]}