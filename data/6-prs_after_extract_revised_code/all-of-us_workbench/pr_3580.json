{"pr_number": 3580, "pr_title": "[RW-4258][risk=low] Admin UI for List Institute entities for affiliation", "pr_createdAt": "2020-05-13T17:21:54Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3580", "timeline": [{"oid": "177772d32765fc988f7557ef0fa12e89e6e18565", "url": "https://github.com/all-of-us/workbench/commit/177772d32765fc988f7557ef0fa12e89e6e18565", "message": "Admin UI Instruction List page", "committedDate": "2020-05-13T17:16:35Z", "type": "commit"}, {"oid": "e96d41b043c08a0de4269670fc82fe2ee7cabc96", "url": "https://github.com/all-of-us/workbench/commit/e96d41b043c08a0de4269670fc82fe2ee7cabc96", "message": "Fix UI Test", "committedDate": "2020-05-13T17:36:48Z", "type": "commit"}, {"oid": "56539db8a490d5758271b0084ae639f265e7f2d6", "url": "https://github.com/all-of-us/workbench/commit/56539db8a490d5758271b0084ae639f265e7f2d6", "message": "revert data table version", "committedDate": "2020-05-13T18:20:10Z", "type": "commit"}, {"oid": "fe847d628a2e57f39acdaf40dcc2e3816a343ec6", "url": "https://github.com/all-of-us/workbench/commit/fe847d628a2e57f39acdaf40dcc2e3816a343ec6", "message": "Add some Api test for getInstitutions", "committedDate": "2020-05-13T18:37:15Z", "type": "commit"}, {"oid": "2a98bd76735d19d56ab00096a9a4f97a1be89466", "url": "https://github.com/all-of-us/workbench/commit/2a98bd76735d19d56ab00096a9a4f97a1be89466", "message": "add Loading parameter to datatable", "committedDate": "2020-05-13T18:50:43Z", "type": "commit"}, {"oid": "d55f4da2b9a537fb0b9abdc7663cfc30ea2de0e9", "url": "https://github.com/all-of-us/workbench/commit/d55f4da2b9a537fb0b9abdc7663cfc30ea2de0e9", "message": "Remove Extra line", "committedDate": "2020-05-13T18:52:13Z", "type": "commit"}, {"oid": "9a916e7d9d9072190ed2d207f54356ad37241926", "url": "https://github.com/all-of-us/workbench/commit/9a916e7d9d9072190ed2d207f54356ad37241926", "message": "Add logic to display different type of institution", "committedDate": "2020-05-13T19:10:32Z", "type": "commit"}, {"oid": "fe36239feb29a2a557332a72f3b4c1c4a11fbf89", "url": "https://github.com/all-of-us/workbench/commit/fe36239feb29a2a557332a72f3b4c1c4a11fbf89", "message": "spotless", "committedDate": "2020-05-13T19:11:38Z", "type": "commit"}, {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c", "url": "https://github.com/all-of-us/workbench/commit/dd6ac1181bf23c58becb6fa6795d16900e1ccd0c", "message": "udpate comments", "committedDate": "2020-05-13T19:13:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwMjE3NQ==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425302175", "bodyText": "one of these needs to be \"that\"", "author": "jmthibault79", "createdAt": "2020-05-14T17:15:11Z", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbInstitutionUserInstructions.java", "diffHunk": "@@ -64,12 +67,12 @@ public boolean equals(Object o) {\n \n     DbInstitutionUserInstructions that = (DbInstitutionUserInstructions) o;\n \n-    return Objects.equals(institutionId, that.institutionId)\n+    return Objects.equals(institution.getInstitutionId(), institution.getInstitutionId())", "originalCommit": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "038c63b7f66d820137d79539f9a78c75942ed48b", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/db/model/DbInstitutionUserInstructions.java b/api/src/main/java/org/pmiops/workbench/db/model/DbInstitutionUserInstructions.java\nindex 5ab21e8e8..224cdda20 100644\n--- a/api/src/main/java/org/pmiops/workbench/db/model/DbInstitutionUserInstructions.java\n+++ b/api/src/main/java/org/pmiops/workbench/db/model/DbInstitutionUserInstructions.java\n\n@@ -67,7 +67,7 @@ public class DbInstitutionUserInstructions {\n \n     DbInstitutionUserInstructions that = (DbInstitutionUserInstructions) o;\n \n-    return Objects.equals(institution.getInstitutionId(), institution.getInstitutionId())\n+    return Objects.equals(institution.getInstitutionId(), that.institution.getInstitutionId())\n         && Objects.equals(userInstructions, that.userInstructions);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425307403", "bodyText": "If this is now part of the Institution model, we should make it part of the DB model too", "author": "jmthibault79", "createdAt": "2020-05-14T17:24:04Z", "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -20,6 +20,8 @@\n   @Mapping(target = \"institutionId\", ignore = true)\n   DbInstitution modelToDb(Institution modelObject);\n \n+  // userInstructions will be populated by InstitutionUserInstructionsMapper\n+  @Mapping(target = \"userInstructions\", ignore = true)", "originalCommit": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4OTI2Mw==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425389263", "bodyText": "So the issue was that since FK resides in user instructions, if we include userInstruction in DbInstitution, the save was throwing error and not behaving as it should.", "author": "NehaBroad", "createdAt": "2020-05-14T19:47:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MDQ3OQ==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425470479", "bodyText": "the email addrs and domains are like that too - so we should be able to make this work", "author": "jmthibault79", "createdAt": "2020-05-14T22:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNjM3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425816372", "bodyText": "yes thats given me an issue too as its doing insert and not update and adding multiple rows. So as part of the edit institution PR i'll be taking that out", "author": "NehaBroad", "createdAt": "2020-05-15T13:52:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxODAyOA==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425818028", "bodyText": "Ripping out userInstructions was done after suggestion from @freemabd", "author": "NehaBroad", "createdAt": "2020-05-15T13:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxODA0OA==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r426018048", "bodyText": "I'm not sure I understand yet, but this doesn't need to be a blocker.  We can follow up on Slack.", "author": "jmthibault79", "createdAt": "2020-05-15T19:57:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}], "type": "inlineReview", "revised_code": {"commit": "c5b90bc5d5fac66ea2df0d4155e776c5c5c6b7be", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java b/api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java\nindex 7487886f1..1d52a81cb 100644\n--- a/api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java\n+++ b/api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java\n\n@@ -24,6 +25,8 @@ public interface InstitutionMapper {\n   @Mapping(target = \"userInstructions\", ignore = true)\n   Institution dbToModel(DbInstitution dbObject);\n \n+  Institution dbToModel(DbInstitution dbObject, DbInstitutionUserInstructions userInstructions);\n+\n   default List<String> toModelDomains(Set<DbInstitutionEmailDomain> dbDomains) {\n     return Optional.ofNullable(dbDomains).orElse(Collections.emptySet()).stream()\n         .map(DbInstitutionEmailDomain::getEmailDomain)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzkwMA==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425307900", "bodyText": "the institutionMapper should handle this", "author": "jmthibault79", "createdAt": "2020-05-14T17:24:56Z", "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionServiceImpl.java", "diffHunk": "@@ -55,6 +55,12 @@\n   public List<Institution> getInstitutions() {\n     return StreamSupport.stream(institutionDao.findAll().spliterator(), false)\n         .map(institutionMapper::dbToModel)\n+        .map(", "originalCommit": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MTU3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425471572", "bodyText": "dbToModel should handle all of the logic regarding whether instructions exist or not\nSo getInstitutions() can look simply like:\nreturn StreamSupport.stream(institutionDao.findAll().spliterator(), false)\n  .map(institutionMapper::dbToModel)\n  .collect(Collectors.toList());", "author": "jmthibault79", "createdAt": "2020-05-14T22:45:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzkwMA=="}], "type": "inlineReview", "revised_code": {"commit": "c5b90bc5d5fac66ea2df0d4155e776c5c5c6b7be", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/institution/InstitutionServiceImpl.java b/api/src/main/java/org/pmiops/workbench/institution/InstitutionServiceImpl.java\nindex 290974caa..e6d49da40 100644\n--- a/api/src/main/java/org/pmiops/workbench/institution/InstitutionServiceImpl.java\n+++ b/api/src/main/java/org/pmiops/workbench/institution/InstitutionServiceImpl.java\n\n@@ -54,12 +54,15 @@ public class InstitutionServiceImpl implements InstitutionService {\n   @Override\n   public List<Institution> getInstitutions() {\n     return StreamSupport.stream(institutionDao.findAll().spliterator(), false)\n-        .map(institutionMapper::dbToModel)\n         .map(\n             institution -> {\n-              getInstitutionUserInstructions(institution.getShortName())\n-                  .ifPresent(user -> institution.setUserInstructions(user));\n-              return institution;\n+              Optional<DbInstitutionUserInstructions> userInstructionsOptional =\n+                  institutionUserInstructionsDao.getByInstitution(institution);\n+              if (userInstructionsOptional.isPresent()) {\n+                return institutionMapper.dbToModel(institution, userInstructionsOptional.get());\n+              } else {\n+                return institutionMapper.dbToModel(institution);\n+              }\n             })\n         .collect(Collectors.toList());\n   }\n"}}, {"oid": "c5b90bc5d5fac66ea2df0d4155e776c5c5c6b7be", "url": "https://github.com/all-of-us/workbench/commit/c5b90bc5d5fac66ea2df0d4155e776c5c5c6b7be", "message": "Pr comments", "committedDate": "2020-05-14T21:21:40Z", "type": "commit"}, {"oid": "038c63b7f66d820137d79539f9a78c75942ed48b", "url": "https://github.com/all-of-us/workbench/commit/038c63b7f66d820137d79539f9a78c75942ed48b", "message": "Pr comments equality that", "committedDate": "2020-05-14T21:23:30Z", "type": "commit"}, {"oid": "8aa8cc1488ac3b15179e4ef874bd615f6858e708", "url": "https://github.com/all-of-us/workbench/commit/8aa8cc1488ac3b15179e4ef874bd615f6858e708", "message": "Primereact 4.2 has updated dropdown onchange to originalEvent: Event, value: any, target: {name: string, id: string, value: any", "committedDate": "2020-05-15T13:35:59Z", "type": "commit"}, {"oid": "832540f36273e59ebab9ba7f7b37b4f0a1896b8b", "url": "https://github.com/all-of-us/workbench/commit/832540f36273e59ebab9ba7f7b37b4f0a1896b8b", "message": "PR COMMENTS: Use mapper for setting userInstructions", "committedDate": "2020-05-15T16:13:15Z", "type": "commit"}, {"oid": "e07bdcee21765c9dc7ccda75e82ed735befc89c6", "url": "https://github.com/all-of-us/workbench/commit/e07bdcee21765c9dc7ccda75e82ed735befc89c6", "message": "Add comments InstructionMapper", "committedDate": "2020-05-15T16:14:39Z", "type": "commit"}, {"oid": "311024f8e3e6e57a54471651186ea932eb6b4535", "url": "https://github.com/all-of-us/workbench/commit/311024f8e3e6e57a54471651186ea932eb6b4535", "message": "Remove method not being used in InstructionMapper", "committedDate": "2020-05-15T16:19:45Z", "type": "commit"}, {"oid": "590adbb9590eecf84fca804e30a7d56a2f77ac1a", "url": "https://github.com/all-of-us/workbench/commit/590adbb9590eecf84fca804e30a7d56a2f77ac1a", "message": "Fix Api Test", "committedDate": "2020-05-15T16:35:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxNTk5Nw==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r426015997", "bodyText": "this can be ifPresent(target::setUserInstructions)", "author": "jmthibault79", "createdAt": "2020-05-15T19:52:32Z", "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -50,4 +55,15 @@\n         .map(address -> new DbInstitutionEmailAddress().setEmailAddress(address))\n         .collect(Collectors.toSet());\n   }\n+\n+  @AfterMapping\n+  default void setUserInstruction(\n+      @MappingTarget Institution target, @Context InstitutionService institutionService) {\n+    institutionService\n+        .getInstitutionUserInstructions(target.getShortName())\n+        .ifPresent(", "originalCommit": "590adbb9590eecf84fca804e30a7d56a2f77ac1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxNzAwOQ==", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r426017009", "bodyText": "yes thats much neater thanks", "author": "NehaBroad", "createdAt": "2020-05-15T19:54:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxNTk5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "babf665f0858785dfccdada4d53bd92efbc52586", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java b/api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java\nindex a8c0ea7b7..adabdfb9b 100644\n--- a/api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java\n+++ b/api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java\n\n@@ -61,9 +61,6 @@ public interface InstitutionMapper {\n       @MappingTarget Institution target, @Context InstitutionService institutionService) {\n     institutionService\n         .getInstitutionUserInstructions(target.getShortName())\n-        .ifPresent(\n-            userInstructions -> {\n-              target.setUserInstructions(userInstructions);\n-            });\n+        .ifPresent(target::setUserInstructions);\n   }\n }\n"}}, {"oid": "babf665f0858785dfccdada4d53bd92efbc52586", "url": "https://github.com/all-of-us/workbench/commit/babf665f0858785dfccdada4d53bd92efbc52586", "message": "PR Comment: Neater way to set  user instruction", "committedDate": "2020-05-15T19:58:28Z", "type": "commit"}]}