{"pr_number": 4240, "pr_title": "[RW-5419][risk=no] Runtime cost estimator widget", "pr_createdAt": "2020-11-02T18:29:40Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4240", "timeline": [{"oid": "8a73b4effabcfbf7a27f396b48e9caa9313c5668", "url": "https://github.com/all-of-us/workbench/commit/8a73b4effabcfbf7a27f396b48e9caa9313c5668", "message": "dryerful of lint", "committedDate": "2020-11-02T21:27:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4MzYwNg==", "url": "https://github.com/all-of-us/workbench/pull/4240#discussion_r516883606", "bodyText": "opt nit: I would probably just inline this below, but personal preference", "author": "calbach", "createdAt": "2020-11-03T18:48:35Z", "path": "api/src/main/java/org/pmiops/workbench/api/WorkspacesController.java", "diffHunk": "@@ -963,4 +964,17 @@ private void recordOperationTime(Runnable operation, String operationName) {\n         DistributionMetric.WORKSPACE_OPERATION_TIME,\n         operation);\n   }\n+\n+  public ResponseEntity<WorkspaceCreatorFreeCreditsRemainingResponse>\n+      getWorkspaceCreatorFreeCreditsRemaining(String workspaceNamespace, String workspaceId) {\n+    workspaceService.enforceWorkspaceAccessLevelAndRegisteredAuthDomain(\n+        workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);\n+    DbWorkspace dbWorkspace = workspaceService.getRequired(workspaceNamespace, workspaceId);\n+    double freeCreditsRemaining =\n+        freeTierBillingService.getWorkspaceCreatorFreeCreditsRemaining(dbWorkspace);\n+    WorkspaceCreatorFreeCreditsRemainingResponse response =\n+        new WorkspaceCreatorFreeCreditsRemainingResponse()", "originalCommit": "088c63f7e172c2fb53f3ec227ccfc689f1070f30", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdb049eb02b945a5883aba1a769b6d76bdfc6d2f", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/api/WorkspacesController.java b/api/src/main/java/org/pmiops/workbench/api/WorkspacesController.java\nindex 2bd9c3c3f..cd5afdc35 100644\n--- a/api/src/main/java/org/pmiops/workbench/api/WorkspacesController.java\n+++ b/api/src/main/java/org/pmiops/workbench/api/WorkspacesController.java\n\n@@ -964,17 +963,4 @@ public class WorkspacesController implements WorkspacesApiDelegate {\n         DistributionMetric.WORKSPACE_OPERATION_TIME,\n         operation);\n   }\n-\n-  public ResponseEntity<WorkspaceCreatorFreeCreditsRemainingResponse>\n-      getWorkspaceCreatorFreeCreditsRemaining(String workspaceNamespace, String workspaceId) {\n-    workspaceService.enforceWorkspaceAccessLevelAndRegisteredAuthDomain(\n-        workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);\n-    DbWorkspace dbWorkspace = workspaceService.getRequired(workspaceNamespace, workspaceId);\n-    double freeCreditsRemaining =\n-        freeTierBillingService.getWorkspaceCreatorFreeCreditsRemaining(dbWorkspace);\n-    WorkspaceCreatorFreeCreditsRemainingResponse response =\n-        new WorkspaceCreatorFreeCreditsRemainingResponse()\n-            .freeCreditsRemaining(freeCreditsRemaining);\n-    return ResponseEntity.ok(response);\n-  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NDc4Mg==", "url": "https://github.com/all-of-us/workbench/pull/4240#discussion_r516884782", "bodyText": "opt: Math.max(creatorFreeCreditsRemaining, 0); probably more readable than the ternary", "author": "calbach", "createdAt": "2020-11-03T18:50:40Z", "path": "api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java", "diffHunk": "@@ -348,4 +348,21 @@ public boolean maybeSetDollarLimitOverride(DbUser user, double newDollarLimit) {\n   public Map<Long, Double> getUserIdToTotalCost() {\n     return workspaceFreeTierUsageDao.getUserIdToTotalCost();\n   }\n+\n+  /**\n+   * Given a workspace, find the amount of free credits that the workspace creator has left.\n+   *\n+   * @param dbWorkspace The workspace for which to find its creator's free credits remaining\n+   * @return The amount of free credits in USD the workspace creator has left, represented as a\n+   *     double\n+   */\n+  public double getWorkspaceCreatorFreeCreditsRemaining(DbWorkspace dbWorkspace) {\n+    Double creatorCachedFreeTierUsage = this.getCachedFreeTierUsage(dbWorkspace.getCreator());\n+    Double creatorFreeTierDollarLimit = this.getUserFreeTierDollarLimit(dbWorkspace.getCreator());\n+    double creatorFreeCreditsRemaining =\n+        creatorCachedFreeTierUsage == null\n+            ? creatorFreeTierDollarLimit\n+            : creatorFreeTierDollarLimit - creatorCachedFreeTierUsage;\n+    return creatorFreeCreditsRemaining > 0 ? creatorFreeCreditsRemaining : 0.0;", "originalCommit": "088c63f7e172c2fb53f3ec227ccfc689f1070f30", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdb049eb02b945a5883aba1a769b6d76bdfc6d2f", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java b/api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java\nindex 8c9011f8c..b9e5da297 100644\n--- a/api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java\n+++ b/api/src/main/java/org/pmiops/workbench/billing/FreeTierBillingService.java\n\n@@ -348,21 +348,4 @@ public class FreeTierBillingService {\n   public Map<Long, Double> getUserIdToTotalCost() {\n     return workspaceFreeTierUsageDao.getUserIdToTotalCost();\n   }\n-\n-  /**\n-   * Given a workspace, find the amount of free credits that the workspace creator has left.\n-   *\n-   * @param dbWorkspace The workspace for which to find its creator's free credits remaining\n-   * @return The amount of free credits in USD the workspace creator has left, represented as a\n-   *     double\n-   */\n-  public double getWorkspaceCreatorFreeCreditsRemaining(DbWorkspace dbWorkspace) {\n-    Double creatorCachedFreeTierUsage = this.getCachedFreeTierUsage(dbWorkspace.getCreator());\n-    Double creatorFreeTierDollarLimit = this.getUserFreeTierDollarLimit(dbWorkspace.getCreator());\n-    double creatorFreeCreditsRemaining =\n-        creatorCachedFreeTierUsage == null\n-            ? creatorFreeTierDollarLimit\n-            : creatorFreeTierDollarLimit - creatorCachedFreeTierUsage;\n-    return creatorFreeCreditsRemaining > 0 ? creatorFreeCreditsRemaining : 0.0;\n-  }\n }\n"}}, {"oid": "cdb049eb02b945a5883aba1a769b6d76bdfc6d2f", "url": "https://github.com/all-of-us/workbench/commit/cdb049eb02b945a5883aba1a769b6d76bdfc6d2f", "message": "Initial preset and dataproc fixes", "committedDate": "2020-11-05T16:49:41Z", "type": "commit"}, {"oid": "d4c04094e835a62d1a5cc7014d1e0965c832c14b", "url": "https://github.com/all-of-us/workbench/commit/d4c04094e835a62d1a5cc7014d1e0965c832c14b", "message": "first pass", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "ff12bc635157fc5702c7db32cdabaf733458952d", "url": "https://github.com/all-of-us/workbench/commit/ff12bc635157fc5702c7db32cdabaf733458952d", "message": "dynamic update styling", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "0b68da8d3131377ae92ea6ba8e7ccc1bbea53b3d", "url": "https://github.com/all-of-us/workbench/commit/0b68da8d3131377ae92ea6ba8e7ccc1bbea53b3d", "message": "shelving", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "0aba36ed19766561b60690d57e5cc70152cb849e", "url": "https://github.com/all-of-us/workbench/commit/0aba36ed19766561b60690d57e5cc70152cb849e", "message": "free credits", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "ba08455e2e3261471d03f5b48c2a87df3e5f3ef4", "url": "https://github.com/all-of-us/workbench/commit/ba08455e2e3261471d03f5b48c2a87df3e5f3ef4", "message": "billing account name", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "880d4ac8258b32a50230b2306dbf55ae70fb62ec", "url": "https://github.com/all-of-us/workbench/commit/880d4ac8258b32a50230b2306dbf55ae70fb62ec", "message": "shelving - tooltips", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "87cc2f834fe372a95bac7525bfd1bbe1595e8c51", "url": "https://github.com/all-of-us/workbench/commit/87cc2f834fe372a95bac7525bfd1bbe1595e8c51", "message": "shelving for debugging", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "0432560500777424eb0c78e72c6a01b99b7392bc", "url": "https://github.com/all-of-us/workbench/commit/0432560500777424eb0c78e72c6a01b99b7392bc", "message": "per hour", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "77e1ed5811e856338cb57573859d1b058f86fadb", "url": "https://github.com/all-of-us/workbench/commit/77e1ed5811e856338cb57573859d1b058f86fadb", "message": "dryerful of lint", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "19efeba7e7dca2b4cd5913e5c6793856750b4b4e", "url": "https://github.com/all-of-us/workbench/commit/19efeba7e7dca2b4cd5913e5c6793856750b4b4e", "message": "implement api stub", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "6da5617e3d4383f1a2bd1a9bec44e8c239dfa700", "url": "https://github.com/all-of-us/workbench/commit/6da5617e3d4383f1a2bd1a9bec44e8c239dfa700", "message": "spotless.........", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "349724cb90889fd5936b9ef90f6615cc862d0d05", "url": "https://github.com/all-of-us/workbench/commit/349724cb90889fd5936b9ef90f6615cc862d0d05", "message": "use api stub", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "0c64603f6cb782c8463879d3af0a404e2e467c9c", "url": "https://github.com/all-of-us/workbench/commit/0c64603f6cb782c8463879d3af0a404e2e467c9c", "message": "lint & lint & lint", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "3fcc33fbc39c7118ddf3d3a18cbb80815ca2b81d", "url": "https://github.com/all-of-us/workbench/commit/3fcc33fbc39c7118ddf3d3a18cbb80815ca2b81d", "message": "fix ui tests", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "954226363296c8b4f21055102a6c71e5ea48852f", "url": "https://github.com/all-of-us/workbench/commit/954226363296c8b4f21055102a6c71e5ea48852f", "message": "unfuck tests for real this time", "committedDate": "2020-11-05T16:49:42Z", "type": "commit"}, {"oid": "2f64bd1df82fef0db712efb126e69398d6ca8574", "url": "https://github.com/all-of-us/workbench/commit/2f64bd1df82fef0db712efb126e69398d6ca8574", "message": "review feedback", "committedDate": "2020-11-05T16:53:18Z", "type": "commit"}, {"oid": "38a38218e51df86f1fa9d3f3f8e70b69c626c7a0", "url": "https://github.com/all-of-us/workbench/commit/38a38218e51df86f1fa9d3f3f8e70b69c626c7a0", "message": "oy geVALT", "committedDate": "2020-11-05T16:53:18Z", "type": "commit"}, {"oid": "3f888badf753cbb3d48404f3eae3d92149798b16", "url": "https://github.com/all-of-us/workbench/commit/3f888badf753cbb3d48404f3eae3d92149798b16", "message": "further revisions", "committedDate": "2020-11-05T16:53:18Z", "type": "commit"}, {"oid": "ef6efd2c37bdb7d495ff079a3f04953b214ce1ef", "url": "https://github.com/all-of-us/workbench/commit/ef6efd2c37bdb7d495ff079a3f04953b214ce1ef", "message": "unit tests", "committedDate": "2020-11-05T20:18:12Z", "type": "commit"}, {"oid": "ef6efd2c37bdb7d495ff079a3f04953b214ce1ef", "url": "https://github.com/all-of-us/workbench/commit/ef6efd2c37bdb7d495ff079a3f04953b214ce1ef", "message": "unit tests", "committedDate": "2020-11-05T20:18:12Z", "type": "forcePushed"}]}