{"pr_number": 3285, "pr_title": "[risk=no]UserServiceTestConfiguration: transitive imports for UserServiceImpl", "pr_createdAt": "2020-03-23T12:34:56Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3285", "timeline": [{"oid": "763c36de2338c9a476d6d7c27467f2ae42d4f96e", "url": "https://github.com/all-of-us/workbench/commit/763c36de2338c9a476d6d7c27467f2ae42d4f96e", "message": "New UserServiceTestConfiguration: contains transitive @Imports for UserServiceImpl", "committedDate": "2020-03-23T12:36:48Z", "type": "commit"}, {"oid": "763c36de2338c9a476d6d7c27467f2ae42d4f96e", "url": "https://github.com/all-of-us/workbench/commit/763c36de2338c9a476d6d7c27467f2ae42d4f96e", "message": "New UserServiceTestConfiguration: contains transitive @Imports for UserServiceImpl", "committedDate": "2020-03-23T12:36:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMzYxNQ==", "url": "https://github.com/all-of-us/workbench/pull/3285#discussion_r396523615", "bodyText": "\ud83e\udd14 The problem we'll run into, though, is that Java uses single inheritance. So I can't use this same trick for the WorkspaceService or NotebookService if any tests for those also need the UserService", "author": "jaycarlton", "createdAt": "2020-03-23T15:10:09Z", "path": "api/src/test/java/org/pmiops/workbench/api/DataSetControllerTest.java", "diffHunk": "@@ -307,7 +300,7 @@\n     Zendesk.class,\n     FreeTierBillingService.class\n   })\n-  static class Configuration {\n+  static class Configuration extends UserServiceTestConfiguration {", "originalCommit": "763c36de2338c9a476d6d7c27467f2ae42d4f96e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUzNTIwMA==", "url": "https://github.com/all-of-us/workbench/pull/3285#discussion_r396535200", "bodyText": "Oh, you can have multiple classes annotated with @TestConfiguration! So basically you can just have\n@TestConfiguration\nstatic class UserServiceTestConfig extends UserServiceTestConfiguration {}\n\nand do the same for the others. So this is definitely viable for the test cases.\nI think what I would change would be to leave the main configuration class as Configuration and then add UserServiceConfig, NotebookServiceConfig, etc, as separate classes, so they're on equal footing.", "author": "jaycarlton", "createdAt": "2020-03-23T15:25:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMzYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUzNjIwMA==", "url": "https://github.com/all-of-us/workbench/pull/3285#discussion_r396536200", "bodyText": "very true.  I really want this to be a Scala trait (mixin) but we don't have this.", "author": "jmthibault79", "createdAt": "2020-03-23T15:26:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMzYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUzNzk5NQ==", "url": "https://github.com/all-of-us/workbench/pull/3285#discussion_r396537995", "bodyText": "I vaguely recall it being possible to build a config class that you can @Import into another one, but it's 50/50 whether I made that up.", "author": "jaycarlton", "createdAt": "2020-03-23T15:28:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMzYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0NDQ5MA==", "url": "https://github.com/all-of-us/workbench/pull/3285#discussion_r396544490", "bodyText": "I vaguely recall it being possible to build a config class that you can @Import into another one, but it's 50/50 whether I made that up.\n\nDefinitely possible \u2013\u00a0see \n  \n    \n      workbench/api/src/integration/java/org/pmiops/workbench/BaseIntegrationTest.java\n    \n    \n         Line 21\n      in\n      c44a41f\n    \n    \n    \n    \n\n        \n          \n           @Import({IntegrationTestConfig.class})", "author": "gjuggler", "createdAt": "2020-03-23T15:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMzYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MjE3MQ==", "url": "https://github.com/all-of-us/workbench/pull/3285#discussion_r396572171", "bodyText": "This is much better, thank you.  I'll update to this.", "author": "jmthibault79", "createdAt": "2020-03-23T16:12:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMzYxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "99adab8b61099557782a0b4096d8a7ab8a6c10ce", "chunk": "diff --git a/api/src/test/java/org/pmiops/workbench/api/DataSetControllerTest.java b/api/src/test/java/org/pmiops/workbench/api/DataSetControllerTest.java\nindex d8f15fc39..e50656a10 100644\n--- a/api/src/test/java/org/pmiops/workbench/api/DataSetControllerTest.java\n+++ b/api/src/test/java/org/pmiops/workbench/api/DataSetControllerTest.java\n\n@@ -300,7 +301,7 @@ public class DataSetControllerTest {\n     Zendesk.class,\n     FreeTierBillingService.class\n   })\n-  static class Configuration extends UserServiceTestConfiguration {\n+  static class Configuration {\n \n     @Bean(END_USER_CLOUD_BILLING)\n     Cloudbilling endUserCloudbilling() {\n"}}, {"oid": "99adab8b61099557782a0b4096d8a7ab8a6c10ce", "url": "https://github.com/all-of-us/workbench/commit/99adab8b61099557782a0b4096d8a7ab8a6c10ce", "message": "import UserServiceTestConfiguration, don't extend", "committedDate": "2020-03-23T16:20:16Z", "type": "commit"}, {"oid": "d5bc61a4f3577aa49dd52db3f70eecbf83a0e235", "url": "https://github.com/all-of-us/workbench/commit/d5bc61a4f3577aa49dd52db3f70eecbf83a0e235", "message": "in soviet russia bean mocks you", "committedDate": "2020-03-23T17:18:35Z", "type": "commit"}]}