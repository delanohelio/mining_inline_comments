{"pr_number": 3781, "pr_title": "[RW-5166][risk=no] inject DataSetMapper into DataSetServiceImpl", "pr_createdAt": "2020-07-14T17:59:28Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3781", "timeline": [{"oid": "2b15b49e0b86a1d4ce8a1eaa75237a537365875c", "url": "https://github.com/all-of-us/workbench/commit/2b15b49e0b86a1d4ce8a1eaa75237a537365875c", "message": "RW-5166 moving mapper", "committedDate": "2020-07-14T18:00:17Z", "type": "commit"}, {"oid": "015aa0792945358529809a03d1f633ae6c9ab204", "url": "https://github.com/all-of-us/workbench/commit/015aa0792945358529809a03d1f633ae6c9ab204", "message": "RW-5166 cleanup", "committedDate": "2020-07-14T18:00:17Z", "type": "commit"}, {"oid": "015aa0792945358529809a03d1f633ae6c9ab204", "url": "https://github.com/all-of-us/workbench/commit/015aa0792945358529809a03d1f633ae6c9ab204", "message": "RW-5166 cleanup", "committedDate": "2020-07-14T18:00:17Z", "type": "forcePushed"}, {"oid": "80ad42a5f302027a232d80722274b671d9fef018", "url": "https://github.com/all-of-us/workbench/commit/80ad42a5f302027a232d80722274b671d9fef018", "message": "RW-5166 fixing test case.", "committedDate": "2020-07-14T20:58:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDIxNw==", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455270217", "bodyText": "Not part of this story, but we should add validation for createRequest to be sure we have cohort/conceptsets and values information in data set Request", "author": "NehaBroad", "createdAt": "2020-07-15T18:52:06Z", "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -124,18 +107,14 @@\n   public ResponseEntity<DataSet> createDataSet(\n       String workspaceNamespace, String workspaceFirecloudName, DataSetRequest dataSetRequest) {\n     validateDataSetCreateRequest(dataSetRequest);\n-    final Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n-        workspaceNamespace, workspaceFirecloudName, WorkspaceAccessLevel.WRITER);\n     final long workspaceId =\n-        workspaceService.get(workspaceNamespace, workspaceFirecloudName).getWorkspaceId();\n+        workspaceService\n+            .getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n+                workspaceNamespace, workspaceFirecloudName, WorkspaceAccessLevel.WRITER)\n+            .getWorkspaceId();\n     dataSetRequest.setWorkspaceId(workspaceId);\n-    DbDataset datasetToSave = dataSetMapper.dataSetRequestToDb(dataSetRequest, null);\n-    datasetToSave.setCreationTime(now);\n-    datasetToSave.setCreatorId(userProvider.get().getUserId());\n-    datasetToSave.setInvalid(false);\n-    DbDataset savedDataSet = dataSetService.saveDataSet(datasetToSave);\n-    return ResponseEntity.ok(dataSetMapper.dbModelToClient(savedDataSet));\n+    return ResponseEntity.ok(\n+        dataSetService.saveDataSet(dataSetRequest, userProvider.get().getUserId()));", "originalCommit": "80ad42a5f302027a232d80722274b671d9fef018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxMDc2OA==", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455310768", "bodyText": "Isn't that what validateDataSetCreateRequest(dataSetRequest) on line 109 does?", "author": "freemabd", "createdAt": "2020-07-15T20:06:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3MTI0NA==", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455771244", "bodyText": "Ahh i missed that. Thanks!", "author": "NehaBroad", "createdAt": "2020-07-16T13:07:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDIxNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDkyMw==", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455270923", "bodyText": "Should this also be Optional?", "author": "NehaBroad", "createdAt": "2020-07-15T18:53:21Z", "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetService.java", "diffHunk": "@@ -37,11 +44,13 @@ DbDataset cloneDataSetToWorkspace(\n \n   List<DbCohort> getCohortsForDataset(DbDataset dataSet);\n \n-  List<DbDataset> getDataSets(ResourceType resourceType, long resourceId);\n+  List<DataSet> getDataSets(ResourceType resourceType, long resourceId);", "originalCommit": "80ad42a5f302027a232d80722274b671d9fef018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxMTY1Nw==", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455311657", "bodyText": "Not sure return type of List needs to be Optional... it either has items on it or it's empty... no chance of a NullPointer", "author": "freemabd", "createdAt": "2020-07-15T20:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDkyMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MjE4NA==", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455272184", "bodyText": "Again we can create another story: But should this throw an exception if no data sets are found for resourceType and Id ?", "author": "NehaBroad", "createdAt": "2020-07-15T18:55:27Z", "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetServiceImpl.java", "diffHunk": "@@ -683,19 +732,18 @@ public DbDataset cloneDataSetToWorkspace(\n   }\n \n   @Override\n-  public void deleteDataSet(DbWorkspace dbWorkspace, Long dataSetId) {\n-    long dbDataSetId = getDbDataSet(dbWorkspace, dataSetId).get().getDataSetId();\n-    dataSetDao.delete(dbDataSetId);\n+  public void deleteDataSet(Long dataSetId) {\n+    dataSetDao.delete(dataSetId);\n   }\n \n   @Override\n-  public Optional<DbDataset> getDbDataSet(DbWorkspace dbWorkspace, Long dataSetId) {\n-    return Optional.of(dataSetDao.findOne(dataSetId));\n+  public Optional<DataSet> getDbDataSet(Long dataSetId) {\n+    return Optional.of(dataSetMapper.dbModelToClient(dataSetDao.findOne(dataSetId)));\n   }\n \n   @Override\n   public void markDirty(ResourceType resourceType, long resourceId) {\n-    List<DbDataset> dbDataSetList = getDataSets(resourceType, resourceId);\n+    List<DbDataset> dbDataSetList = getDbDataSets(resourceType, resourceId);", "originalCommit": "80ad42a5f302027a232d80722274b671d9fef018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxNTMwNA==", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455315304", "bodyText": "Good idea, we could also return false here instead of an exception -> \n  \n    \n      workbench/api/src/main/java/org/pmiops/workbench/api/DataSetController.java\n    \n    \n         Line 381\n      in\n      9c1af4c\n    \n    \n    \n    \n\n        \n          \n           return ResponseEntity.ok(true);", "author": "freemabd", "createdAt": "2020-07-15T20:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MjE4NA=="}], "type": "inlineReview", "revised_code": null}]}