{"pr_number": 3109, "pr_title": "[RW-4285][risk=NO] Changes to workspace description page", "pr_createdAt": "2020-02-10T15:14:53Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3109", "timeline": [{"oid": "183a754ab707b4610b34a54b75c7b0f9ac00ed53", "url": "https://github.com/all-of-us/workbench/commit/183a754ab707b4610b34a54b75c7b0f9ac00ed53", "message": "Workspace Edit page", "committedDate": "2020-02-10T15:13:37Z", "type": "commit"}, {"oid": "d9422108c3cf7b01304621c6e3d6f00c25771a23", "url": "https://github.com/all-of-us/workbench/commit/d9422108c3cf7b01304621c6e3d6f00c25771a23", "message": "tests and other changes", "committedDate": "2020-02-10T16:08:56Z", "type": "commit"}, {"oid": "f853ad9edefc3f4de1242e85433a38928e1c3f36", "url": "https://github.com/all-of-us/workbench/commit/f853ad9edefc3f4de1242e85433a38928e1c3f36", "message": "null checks", "committedDate": "2020-02-10T16:52:18Z", "type": "commit"}, {"oid": "6e1171cb4012dd3e34dc60a9fb2454c8f8534067", "url": "https://github.com/all-of-us/workbench/commit/6e1171cb4012dd3e34dc60a9fb2454c8f8534067", "message": "Upsing optional.ofNullable", "committedDate": "2020-02-10T17:02:13Z", "type": "commit"}, {"oid": "342550cbfb6a14ffc55dbf4dca7407a24f39928e", "url": "https://github.com/all-of-us/workbench/commit/342550cbfb6a14ffc55dbf4dca7407a24f39928e", "message": "Test fix", "committedDate": "2020-02-10T19:33:49Z", "type": "commit"}, {"oid": "d6b79eb16012af9380a3874753e230fe49e935eb", "url": "https://github.com/all-of-us/workbench/commit/d6b79eb16012af9380a3874753e230fe49e935eb", "message": "Name change to ResearchOutcome", "committedDate": "2020-02-10T20:05:15Z", "type": "commit"}, {"oid": "b33eace0f35144c6006212badac733c645152933", "url": "https://github.com/all-of-us/workbench/commit/b33eace0f35144c6006212badac733c645152933", "message": "change variable name to have List", "committedDate": "2020-02-10T20:29:27Z", "type": "commit"}, {"oid": "0315123b5bfca262181c0af8d70ed05ed4741e2b", "url": "https://github.com/all-of-us/workbench/commit/0315123b5bfca262181c0af8d70ed05ed4741e2b", "message": "fix test", "committedDate": "2020-02-10T22:02:25Z", "type": "commit"}, {"oid": "2e356fc621beef100a99b84fedaf126d5d29d980", "url": "https://github.com/all-of-us/workbench/commit/2e356fc621beef100a99b84fedaf126d5d29d980", "message": "spotless", "committedDate": "2020-02-10T22:38:50Z", "type": "commit"}, {"oid": "80734dd10f6d5460f310e66f64d090cef1658c8b", "url": "https://github.com/all-of-us/workbench/commit/80734dd10f6d5460f310e66f64d090cef1658c8b", "message": "split Liquibase change to another PR", "committedDate": "2020-02-10T22:46:34Z", "type": "commit"}, {"oid": "979fa9ac7e97f258116695531d84df39d384784a", "url": "https://github.com/all-of-us/workbench/commit/979fa9ac7e97f258116695531d84df39d384784a", "message": "rebase", "committedDate": "2020-02-10T23:42:14Z", "type": "commit"}, {"oid": "c18a926f3e709edfff64145ac63e1b6555940ad0", "url": "https://github.com/all-of-us/workbench/commit/c18a926f3e709edfff64145ac63e1b6555940ad0", "message": "lint", "committedDate": "2020-02-11T00:00:15Z", "type": "commit"}, {"oid": "e03309b5ac27f6149cd962aec51e590056e2aaff", "url": "https://github.com/all-of-us/workbench/commit/e03309b5ac27f6149cd962aec51e590056e2aaff", "message": "adding comments", "committedDate": "2020-02-11T03:38:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3NjY4NA==", "url": "https://github.com/all-of-us/workbench/pull/3109#discussion_r378476684", "bodyText": "If it is null, I assume this returns null? It should probably return an empty list.", "author": "s-rubenstein", "createdAt": "2020-02-12T19:50:36Z", "path": "api/src/main/java/org/pmiops/workbench/utils/WorkspaceMapper.java", "diffHunk": "@@ -58,13 +58,23 @@ void mergeResearchPurposeIntoWorkspace(\n   @Mapping(target = \"timeReviewed\", ignore = true)\n   ResearchPurpose workspaceToResearchPurpose(DbWorkspace dbWorkspace);\n \n+  // This method (defined by AfterMapping annotation) handles the scenario in which the name of the\n+  // parameters are different\n   @AfterMapping\n   default void afterWorkspaceIntoResearchPurpose(\n       @MappingTarget ResearchPurpose researchPurpose, DbWorkspace dbWorkspace) {\n     if (dbWorkspace.getPopulation()) {\n       researchPurpose.setPopulationDetails(\n           ImmutableList.copyOf(dbWorkspace.getSpecificPopulationsEnum()));\n     }\n+    if (null != dbWorkspace.getResearchOutcomeSet()) {", "originalCommit": "e03309b5ac27f6149cd962aec51e590056e2aaff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1be28f0c35467351d078c34272ae7b445fee727", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/utils/WorkspaceMapper.java b/api/src/main/java/org/pmiops/workbench/utils/WorkspaceMapper.java\nindex 5eca458c0..eb4fced1d 100644\n--- a/api/src/main/java/org/pmiops/workbench/utils/WorkspaceMapper.java\n+++ b/api/src/main/java/org/pmiops/workbench/utils/WorkspaceMapper.java\n\n@@ -67,14 +71,15 @@ public interface WorkspaceMapper {\n       researchPurpose.setPopulationDetails(\n           ImmutableList.copyOf(dbWorkspace.getSpecificPopulationsEnum()));\n     }\n-    if (null != dbWorkspace.getResearchOutcomeSet()) {\n-      researchPurpose.setResearchOutcomeList(\n-          ImmutableList.copyOf(dbWorkspace.getResearchOutcomeEnumSet()));\n-    }\n-    if (null != dbWorkspace.getDisseminateResearchEnumSet()) {\n-      researchPurpose.setDisseminateResearchFindingList(\n-          ImmutableList.copyOf(dbWorkspace.getDisseminateResearchEnumSet()));\n-    }\n+    researchPurpose.setResearchOutcomeList(\n+        Optional.ofNullable(dbWorkspace.getResearchOutcomeEnumSet())\n+            .map(researchOutcome -> researchOutcome.stream().collect(Collectors.toList()))\n+            .orElse(new ArrayList<ResearchOutcomeEnum>()));\n+\n+    researchPurpose.setDisseminateResearchFindingList(\n+        Optional.ofNullable(dbWorkspace.getDisseminateResearchEnumSet())\n+            .map(disseminateResearch -> disseminateResearch.stream().collect(Collectors.toList()))\n+            .orElse(new ArrayList<DisseminateResearchEnum>()));\n   }\n \n   @AfterMapping\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3ODM2Mw==", "url": "https://github.com/all-of-us/workbench/pull/3109#discussion_r378478363", "bodyText": "There is a null check here: https://github.com/all-of-us/workbench/pull/3109/files#diff-e5967f0cb03794422311275e49891c41R74\nbut this doesn't have one, so it could null pointer error. Could you add a null check to this?", "author": "s-rubenstein", "createdAt": "2020-02-12T19:53:36Z", "path": "api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java", "diffHunk": "@@ -155,15 +158,30 @@ public void setResearchPurposeDetails(DbWorkspace dbWorkspace, ResearchPurpose p\n     }\n     dbWorkspace.setSocialBehavioral(purpose.getSocialBehavioral());\n     dbWorkspace.setPopulationHealth(purpose.getPopulationHealth());\n+    dbWorkspace.setEthics(purpose.getEthics());\n     dbWorkspace.setEducational(purpose.getEducational());\n     dbWorkspace.setDrugDevelopment(purpose.getDrugDevelopment());\n     dbWorkspace.setOtherPurpose(purpose.getOtherPurpose());\n     dbWorkspace.setOtherPurposeDetails(purpose.getOtherPurposeDetails());\n     dbWorkspace.setAdditionalNotes(purpose.getAdditionalNotes());\n     dbWorkspace.setReasonForAllOfUs(purpose.getReasonForAllOfUs());\n     dbWorkspace.setIntendedStudy(purpose.getIntendedStudy());\n+    dbWorkspace.setScientificApproach(purpose.getScientificApproach());\n     dbWorkspace.setAnticipatedFindings(purpose.getAnticipatedFindings());\n     dbWorkspace.setOtherPopulationDetails(purpose.getOtherPopulationDetails());\n+    dbWorkspace.setDisseminateResearchEnumSet(\n+        Optional.ofNullable(purpose.getDisseminateResearchFindingList())\n+            .map(disseminateResearch -> disseminateResearch.stream().collect(Collectors.toSet()))\n+            .orElse(new HashSet<DisseminateResearchEnum>()));\n+\n+    if (dbWorkspace.getDisseminateResearchEnumSet().contains(DisseminateResearchEnum.OTHER)) {", "originalCommit": "e03309b5ac27f6149cd962aec51e590056e2aaff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1ODUwNw==", "url": "https://github.com/all-of-us/workbench/pull/3109#discussion_r378958507", "bodyText": "it will be an empty HashSet in case purpose.getDisseminateResearchFindingList() is NULL L175", "author": "NehaBroad", "createdAt": "2020-02-13T16:06:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3ODM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f1be28f0c35467351d078c34272ae7b445fee727", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java b/api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java\nindex d12552e4b..993c960ec 100644\n--- a/api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java\n+++ b/api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java\n\n@@ -175,7 +175,7 @@ public class ManualWorkspaceMapper {\n             .orElse(new HashSet<DisseminateResearchEnum>()));\n \n     if (dbWorkspace.getDisseminateResearchEnumSet().contains(DisseminateResearchEnum.OTHER)) {\n-      dbWorkspace.setDisseminateResearchOther(purpose.getOtherdisseminateResearchFindings());\n+      dbWorkspace.setDisseminateResearchOther(purpose.getOtherDisseminateResearchFindings());\n     }\n \n     dbWorkspace.setResearchOutcomeEnumSet(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3OTM5NQ==", "url": "https://github.com/all-of-us/workbench/pull/3109#discussion_r378479395", "bodyText": "Same thing where if this can return null, then this could null pointer error, and if it can't, then we don't need the null check above. (I think it could probably return an empty set rather than null)", "author": "s-rubenstein", "createdAt": "2020-02-12T19:55:36Z", "path": "api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java", "diffHunk": "@@ -182,17 +200,28 @@ private ResearchPurpose createResearchPurpose(DbWorkspace workspace) {\n             .otherPurpose(workspace.getOtherPurpose())\n             .otherPurposeDetails(workspace.getOtherPurposeDetails())\n             .population(workspace.getPopulation())\n+            .ethics(workspace.getEthics())\n             .reasonForAllOfUs(workspace.getReasonForAllOfUs())\n             .intendedStudy(workspace.getIntendedStudy())\n+            .scientificApproach(workspace.getScientificApproach())\n             .anticipatedFindings(workspace.getAnticipatedFindings())\n             .additionalNotes(workspace.getAdditionalNotes())\n             .reviewRequested(workspace.getReviewRequested())\n             .approved(workspace.getApproved())\n             .otherPopulationDetails(workspace.getOtherPopulationDetails())\n+            .disseminateResearchFindingList(\n+                workspace.getDisseminateResearchEnumSet().stream().collect(Collectors.toList()))", "originalCommit": "e03309b5ac27f6149cd962aec51e590056e2aaff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1be28f0c35467351d078c34272ae7b445fee727", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java b/api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java\nindex d12552e4b..993c960ec 100644\n--- a/api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java\n+++ b/api/src/main/java/org/pmiops/workbench/workspaces/ManualWorkspaceMapper.java\n\n@@ -210,16 +210,24 @@ public class ManualWorkspaceMapper {\n             .approved(workspace.getApproved())\n             .otherPopulationDetails(workspace.getOtherPopulationDetails())\n             .disseminateResearchFindingList(\n-                workspace.getDisseminateResearchEnumSet().stream().collect(Collectors.toList()))\n+                Optional.ofNullable(workspace.getDisseminateResearchEnumSet())\n+                    .map(\n+                        disseminateResearchEnums ->\n+                            disseminateResearchEnums.stream().collect(Collectors.toList()))\n+                    .orElse(new ArrayList<DisseminateResearchEnum>()))\n             .researchOutcomeList(\n-                workspace.getResearchOutcomeEnumSet().stream().collect(Collectors.toList()))\n+                Optional.ofNullable(workspace.getResearchOutcomeEnumSet())\n+                    .map(\n+                        researchOutcomeEnums ->\n+                            researchOutcomeEnums.stream().collect(Collectors.toList()))\n+                    .orElse(new ArrayList<ResearchOutcomeEnum>()))\n             .populationDetails(\n                 workspace.getPopulationDetails().stream()\n                     .map(DbStorageEnums::specificPopulationFromStorage)\n                     .collect(Collectors.toList()));\n \n     if (workspace.getDisseminateResearchEnumSet().contains(DisseminateResearchEnum.OTHER)) {\n-      researchPurpose.setOtherdisseminateResearchFindings(workspace.getDisseminateResearchOther());\n+      researchPurpose.setOtherDisseminateResearchFindings(workspace.getDisseminateResearchOther());\n     }\n \n     if (workspace.getTimeRequested() != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ4MTUxNg==", "url": "https://github.com/all-of-us/workbench/pull/3109#discussion_r378481516", "bodyText": "Are these tests added to the test suite?", "author": "s-rubenstein", "createdAt": "2020-02-12T19:59:51Z", "path": "api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java", "diffHunk": "@@ -528,36 +530,49 @@ private Workspace createWorkspace() {\n   }\n \n   private Workspace createWorkspace(String workspaceNameSpace, String workspaceName) {\n-    return new Workspace()\n-        .id(workspaceName)\n-        .name(workspaceName)\n-        .namespace(workspaceNameSpace)\n-        .dataAccessLevel(DataAccessLevel.PROTECTED)\n-        .cdrVersionId(cdrVersionId)\n-        .googleBucketName(BUCKET_NAME)\n-        .billingAccountName(\"billing-account\")\n-        .researchPurpose(\n-            new ResearchPurpose()\n-                .diseaseFocusedResearch(true)\n-                .diseaseOfFocus(\"cancer\")\n-                .methodsDevelopment(true)\n-                .controlSet(true)\n-                .ancestry(true)\n-                .commercialPurpose(true)\n-                .socialBehavioral(true)\n-                .populationHealth(true)\n-                .educational(true)\n-                .drugDevelopment(true)\n-                .population(false)\n-                .populationDetails(Collections.emptyList())\n-                .additionalNotes(\"additional notes\")\n-                .reasonForAllOfUs(\"reason for aou\")\n-                .intendedStudy(\"intended study\")\n-                .anticipatedFindings(\"anticipated findings\")\n-                .timeRequested(1000L)\n-                .timeReviewed(1500L)\n-                .reviewRequested(true)\n-                .approved(false));\n+    List<DisseminateResearchEnum> disseminateResearchEnumsList =\n+        new ArrayList<DisseminateResearchEnum>();\n+    disseminateResearchEnumsList.add(DisseminateResearchEnum.PRESENATATION_SCIENTIFIC_CONFERENCES);\n+    disseminateResearchEnumsList.add(DisseminateResearchEnum.PRESENTATION_ADVISORY_GROUPS);", "originalCommit": "e03309b5ac27f6149cd962aec51e590056e2aaff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2MjgzNg==", "url": "https://github.com/all-of-us/workbench/pull/3109#discussion_r378962836", "bodyText": "The test compare the object return from the saved/clones vs whats store in the Database, so if the value of either one of them is incorrect or not set it fails. I am however not checking the individual parameter", "author": "NehaBroad", "createdAt": "2020-02-13T16:13:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ4MTUxNg=="}], "type": "inlineReview", "revised_code": {"commit": "d03a1e6a815f9bfd7508770694a94dea9ffd1541", "chunk": "diff --git a/api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java b/api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java\nindex e5f9ce0ce..3d0cba6aa 100644\n--- a/api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java\n+++ b/api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java\n\n@@ -526,53 +534,7 @@ public class WorkspacesControllerTest {\n   }\n \n   private Workspace createWorkspace() {\n-    return createWorkspace(\"namespace\", \"name\");\n-  }\n-\n-  private Workspace createWorkspace(String workspaceNameSpace, String workspaceName) {\n-    List<DisseminateResearchEnum> disseminateResearchEnumsList =\n-        new ArrayList<DisseminateResearchEnum>();\n-    disseminateResearchEnumsList.add(DisseminateResearchEnum.PRESENATATION_SCIENTIFIC_CONFERENCES);\n-    disseminateResearchEnumsList.add(DisseminateResearchEnum.PRESENTATION_ADVISORY_GROUPS);\n-\n-    List<ResearchOutcomeEnum> ResearchOutcomeEnumsList = new ArrayList<ResearchOutcomeEnum>();\n-    ResearchOutcomeEnumsList.add(ResearchOutcomeEnum.IMPROVED_RISK_ASSESMENT);\n-    ResearchPurpose researchPurpose =\n-        new ResearchPurpose()\n-            .disseminateResearchFindingList(disseminateResearchEnumsList)\n-            .researchOutcomeList(ResearchOutcomeEnumsList)\n-            .diseaseFocusedResearch(true)\n-            .diseaseOfFocus(\"cancer\")\n-            .methodsDevelopment(true)\n-            .controlSet(true)\n-            .ancestry(true)\n-            .commercialPurpose(true)\n-            .socialBehavioral(true)\n-            .populationHealth(true)\n-            .educational(true)\n-            .drugDevelopment(true)\n-            .ethics(true)\n-            .population(false)\n-            .populationDetails(Collections.emptyList())\n-            .additionalNotes(\"additional notes\")\n-            .reasonForAllOfUs(\"reason for aou\")\n-            .scientificApproach(\"Scientific Approach\")\n-            .intendedStudy(\"intended study\")\n-            .anticipatedFindings(\"anticipated findings\")\n-            .timeRequested(1000L)\n-            .timeReviewed(1500L)\n-            .reviewRequested(true)\n-            .approved(false);\n-    Workspace workspace = new Workspace();\n-    workspace.setId(workspaceName);\n-    workspace.setName(workspaceName);\n-    workspace.setNamespace(workspaceNameSpace);\n-    workspace.setDataAccessLevel(DataAccessLevel.PROTECTED);\n-    workspace.setResearchPurpose(researchPurpose);\n-    workspace.setCdrVersionId(cdrVersionId);\n-    workspace.setGoogleBucketName(BUCKET_NAME);\n-    workspace.setBillingAccountName(\"billing-account\");\n-    return workspace;\n+    return testMockFactory.createWorkspace(\"namespace\", \"name\");\n   }\n \n   public Cohort createDefaultCohort(String name) {\n"}}, {"oid": "f1be28f0c35467351d078c34272ae7b445fee727", "url": "https://github.com/all-of-us/workbench/commit/f1be28f0c35467351d078c34272ae7b445fee727", "message": "PR Comments I", "committedDate": "2020-02-13T16:28:21Z", "type": "commit"}, {"oid": "a39ef44e26081fb0a91a47ef213652b7a29fc4f4", "url": "https://github.com/all-of-us/workbench/commit/a39ef44e26081fb0a91a47ef213652b7a29fc4f4", "message": "test fix", "committedDate": "2020-02-13T16:31:23Z", "type": "commit"}, {"oid": "bed2caddd664d1ba5dc56649d1684658a5b730dc", "url": "https://github.com/all-of-us/workbench/commit/bed2caddd664d1ba5dc56649d1684658a5b730dc", "message": "UI TEST", "committedDate": "2020-02-13T16:33:17Z", "type": "commit"}, {"oid": "c9c3e30cced00d016fab93feceb9a2573e3f3322", "url": "https://github.com/all-of-us/workbench/commit/c9c3e30cced00d016fab93feceb9a2573e3f3322", "message": "Add tooltip", "committedDate": "2020-02-13T18:26:21Z", "type": "commit"}, {"oid": "273b5a7452e52c964f263a22fc8cc1069ffc4f4c", "url": "https://github.com/all-of-us/workbench/commit/273b5a7452e52c964f263a22fc8cc1069ffc4f4c", "message": "PR Comments: moving style and spaces", "committedDate": "2020-02-13T22:47:36Z", "type": "commit"}, {"oid": "a5cfc4118c0bd3e8b4f4fe2845cac7b95f1f053f", "url": "https://github.com/all-of-us/workbench/commit/a5cfc4118c0bd3e8b4f4fe2845cac7b95f1f053f", "message": "Margin correction for Specific population", "committedDate": "2020-02-13T22:48:59Z", "type": "commit"}, {"oid": "7b163adc560bab2fee952d5e31ed918c3aa6952a", "url": "https://github.com/all-of-us/workbench/commit/7b163adc560bab2fee952d5e31ed918c3aa6952a", "message": "UI Changes Primary Purpose", "committedDate": "2020-02-19T15:59:59Z", "type": "commit"}, {"oid": "d03a1e6a815f9bfd7508770694a94dea9ffd1541", "url": "https://github.com/all-of-us/workbench/commit/d03a1e6a815f9bfd7508770694a94dea9ffd1541", "message": "resolve conflicts", "committedDate": "2020-02-19T16:08:54Z", "type": "commit"}, {"oid": "294aed95538e21c5f95539773ef33fe682caa300", "url": "https://github.com/all-of-us/workbench/commit/294aed95538e21c5f95539773ef33fe682caa300", "message": "Fix UI Test", "committedDate": "2020-02-19T16:41:46Z", "type": "commit"}, {"oid": "90cccc4ca5b46c7afca80699a730e4fa12fa14b5", "url": "https://github.com/all-of-us/workbench/commit/90cccc4ca5b46c7afca80699a730e4fa12fa14b5", "message": "correct import statment", "committedDate": "2020-02-19T16:43:42Z", "type": "commit"}, {"oid": "7f9e0a5645620407e0692e6042ecf81ebf8e27c7", "url": "https://github.com/all-of-us/workbench/commit/7f9e0a5645620407e0692e6042ecf81ebf8e27c7", "message": "fix ui test", "committedDate": "2020-02-19T16:52:27Z", "type": "commit"}, {"oid": "d52157b464e48a20116954d85e0df7858b8338b1", "url": "https://github.com/all-of-us/workbench/commit/d52157b464e48a20116954d85e0df7858b8338b1", "message": "Lous UI Comment", "committedDate": "2020-02-19T20:41:25Z", "type": "commit"}, {"oid": "96b5c722e4d163b467763b29f5b805d8ca030d80", "url": "https://github.com/all-of-us/workbench/commit/96b5c722e4d163b467763b29f5b805d8ca030d80", "message": "Change font Size for sub Categories", "committedDate": "2020-02-19T21:17:47Z", "type": "commit"}, {"oid": "02cc3cfd8841a89bab484cf7234c47e8a47a3a51", "url": "https://github.com/all-of-us/workbench/commit/02cc3cfd8841a89bab484cf7234c47e8a47a3a51", "message": "Space after .", "committedDate": "2020-02-19T21:21:48Z", "type": "commit"}]}