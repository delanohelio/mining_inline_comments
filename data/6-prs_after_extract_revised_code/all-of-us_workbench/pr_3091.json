{"pr_number": 3091, "pr_title": "[noTicket][RISK=NO]Send user demographic survey attribute Gender identity to RDR", "pr_createdAt": "2020-02-05T14:54:06Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3091", "timeline": [{"oid": "82404dd3b57fc35f294f7c6a367d82952390973a", "url": "https://github.com/all-of-us/workbench/commit/82404dd3b57fc35f294f7c6a367d82952390973a", "message": "Send user survey Gender identity to RDR", "committedDate": "2020-02-05T14:52:39Z", "type": "commit"}, {"oid": "e3a572bd9cffb17c8decb73930c61c095f502f5e", "url": "https://github.com/all-of-us/workbench/commit/e3a572bd9cffb17c8decb73930c61c095f502f5e", "message": "Spotless", "committedDate": "2020-02-05T15:06:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyMzc3OA==", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375323778", "bodyText": "nit: It takes a bit of getting used to, but I think it's cleaner to do\nOptional.ofNullable(dbDemographicSurvey.getGenderIdentityEnumList())\n    .map(g -> g.stream().map(RdrExportEnums::genderToRdrGender).collect(Collectors.toList()))\n    .ifPresent(researcher::setGender);\n\nif, null, and != should generally be minimized IMO.", "author": "jaycarlton", "createdAt": "2020-02-05T15:26:16Z", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -200,6 +200,12 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n                 .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n                 .collect(Collectors.toList()));\n       }\n+      if (null != dbDemographicSurvey.getGenderIdentityEnumList()) {\n+        researcher.setGender(\n+            dbDemographicSurvey.getGenderIdentityEnumList().stream()\n+                .map(RdrExportEnums::genderToRdrGender)\n+                .collect(Collectors.toList()));\n+      }", "originalCommit": "e3a572bd9cffb17c8decb73930c61c095f502f5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1MDAzMw==", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375350033", "bodyText": "@jaycarlton : Do you mind taking another look?", "author": "NehaBroad", "createdAt": "2020-02-05T16:05:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyMzc3OA=="}], "type": "inlineReview", "revised_code": {"commit": "36490a2a186097f5df26c7f4b42c76932df1e086", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java b/api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java\nindex 60413519c..9c3f9d2fa 100644\n--- a/api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java\n+++ b/api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java\n\n@@ -194,32 +195,31 @@ public class RdrExportServiceImpl implements RdrExportService {\n                     RdrExportEnums.ethnicityToRdrEthnicity(\n                         dbDemographicSurvey.getEthnicityEnum()))));\n       }\n-      if (dbDemographicSurvey.getSexAtBirthEnum() != null) {\n-        researcher.setSexAtBirth(\n-            dbDemographicSurvey.getSexAtBirthEnum().stream()\n-                .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n-                .collect(Collectors.toList()));\n-      }\n-      if (null != dbDemographicSurvey.getGenderIdentityEnumList()) {\n-        researcher.setGender(\n-            dbDemographicSurvey.getGenderIdentityEnumList().stream()\n-                .map(RdrExportEnums::genderToRdrGender)\n-                .collect(Collectors.toList()));\n-      }\n+      researcher.setSexAtBirth(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getSexAtBirthEnum().stream()\n+                      .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<SexAtBirth>()));\n+      researcher.setGender(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getGenderIdentityEnumList().stream()\n+                      .map(RdrExportEnums::genderToRdrGender)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<Gender>()));\n       researcher.setDisability(\n           RdrExportEnums.disabilityToRdrDisability(dbDemographicSurvey.getDisabilityEnum()));\n-    }\n \n-    if (null != dbDemographicSurvey && dbDemographicSurvey.getRaceEnum() != null) {\n       researcher.setRace(\n-          dbDemographicSurvey.getRaceEnum().stream()\n-              .map(RdrExportEnums::raceToRdrRace)\n-              .collect(Collectors.toList()));\n-    } else {\n-      researcher.setRace(new ArrayList<>());\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getRaceEnum().stream()\n+                      .map(RdrExportEnums::raceToRdrRace)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<Race>()));\n+\n+      researcher.setLgbtqIdentity(dbDemographicSurvey.getLgbtqIdentity());\n+      researcher.setIdentifiesAsLgbtq(dbDemographicSurvey.getIdentifiesAsLgbtq());\n     }\n-    researcher.setLgbtqIdentity(dbDemographicSurvey.getLgbtqIdentity());\n-    researcher.setIdentifiesAsLgbtq(dbDemographicSurvey.getIdentifiesAsLgbtq());\n     researcher.setAffiliations(\n         dbUser.getInstitutionalAffiliations().stream()\n             .map(\n"}}, {"oid": "36490a2a186097f5df26c7f4b42c76932df1e086", "url": "https://github.com/all-of-us/workbench/commit/36490a2a186097f5df26c7f4b42c76932df1e086", "message": "Use optional.ofNullable and correct enum YES NO yaml error", "committedDate": "2020-02-05T16:04:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NTY3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375355672", "bodyText": "This confuses me. Either we have a boolean, in which case we don't need an enum, or we have an enum that describes  the situation like Disability.NOT_DISABLED, Disability.SOME, etc. But if you want to start an enum, it's hard to imagine what you'd add to yes and no.\nEnums are definitely preferred over booleans for public APIs, but if the enum itself has true & false in it, I don't know that you're winning as much.", "author": "jaycarlton", "createdAt": "2020-02-05T16:14:21Z", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportEnums.java", "diffHunk": "@@ -70,8 +72,8 @@\n   private static final BiMap<Disability, org.pmiops.workbench.rdr.model.Disability>\n       CLIENT_TO_RDR_DISABILITY =\n           ImmutableBiMap.<Disability, org.pmiops.workbench.rdr.model.Disability>builder()\n-              .put(Disability.TRUE, org.pmiops.workbench.rdr.model.Disability.TRUE)\n-              .put(Disability.FALSE, org.pmiops.workbench.rdr.model.Disability.FALSE)\n+              .put(Disability.TRUE, org.pmiops.workbench.rdr.model.Disability.YES)", "originalCommit": "36490a2a186097f5df26c7f4b42c76932df1e086", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NzA3OA==", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375357078", "bodyText": "RDR basically have three options not just TRUE and FALSE for DISABILITY: YES, NO ,PREFER_NOT_TO_ANSWER (L110)", "author": "NehaBroad", "createdAt": "2020-02-05T16:16:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NTY3Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NzQ5NA==", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375357494", "bodyText": "Do you want the race field to be written to, or should the set of entries be fixed?\nClients might do researcher.getRace().add(Race.DAYTONA_500);, which works, but is counterintuitive.", "author": "jaycarlton", "createdAt": "2020-02-05T16:17:11Z", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -194,26 +195,31 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n                     RdrExportEnums.ethnicityToRdrEthnicity(\n                         dbDemographicSurvey.getEthnicityEnum()))));\n       }\n-      if (dbDemographicSurvey.getSexAtBirthEnum() != null) {\n-        researcher.setSexAtBirth(\n-            dbDemographicSurvey.getSexAtBirthEnum().stream()\n-                .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n-                .collect(Collectors.toList()));\n-      }\n+      researcher.setSexAtBirth(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getSexAtBirthEnum().stream()\n+                      .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<SexAtBirth>()));\n+      researcher.setGender(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getGenderIdentityEnumList().stream()\n+                      .map(RdrExportEnums::genderToRdrGender)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<Gender>()));\n       researcher.setDisability(\n           RdrExportEnums.disabilityToRdrDisability(dbDemographicSurvey.getDisabilityEnum()));\n-    }\n \n-    if (null != dbDemographicSurvey && dbDemographicSurvey.getRaceEnum() != null) {\n       researcher.setRace(\n-          dbDemographicSurvey.getRaceEnum().stream()\n-              .map(RdrExportEnums::raceToRdrRace)\n-              .collect(Collectors.toList()));\n-    } else {\n-      researcher.setRace(new ArrayList<>());\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getRaceEnum().stream()\n+                      .map(RdrExportEnums::raceToRdrRace)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<Race>()));", "originalCommit": "36490a2a186097f5df26c7f4b42c76932df1e086", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM3OTQzNg==", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375379436", "bodyText": "no RDR needs to simple take whatever value we give to them and not manipulate them", "author": "NehaBroad", "createdAt": "2020-02-05T16:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NzQ5NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM2MDk1OA==", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375360958", "bodyText": "Looks good. Passing in .ifPresent(researcher::setSexAtBirth) is more a matter of taste.", "author": "jaycarlton", "createdAt": "2020-02-05T16:22:44Z", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -194,26 +195,31 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n                     RdrExportEnums.ethnicityToRdrEthnicity(\n                         dbDemographicSurvey.getEthnicityEnum()))));\n       }\n-      if (dbDemographicSurvey.getSexAtBirthEnum() != null) {\n-        researcher.setSexAtBirth(\n-            dbDemographicSurvey.getSexAtBirthEnum().stream()\n-                .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n-                .collect(Collectors.toList()));\n-      }\n+      researcher.setSexAtBirth(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getSexAtBirthEnum().stream()\n+                      .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<SexAtBirth>()));", "originalCommit": "36490a2a186097f5df26c7f4b42c76932df1e086", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}