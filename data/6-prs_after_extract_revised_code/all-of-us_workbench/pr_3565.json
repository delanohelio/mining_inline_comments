{"pr_number": 3565, "pr_title": "[no ticket][risk=no] Allow RDR export cron failures to throw a server error", "pr_createdAt": "2020-05-11T14:17:51Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3565", "timeline": [{"oid": "c85db49d8bfbcefe5888b8ddc44edc0ad34b126a", "url": "https://github.com/all-of-us/workbench/commit/c85db49d8bfbcefe5888b8ddc44edc0ad34b126a", "message": "Return a 500 response code if any part of RDR export task creation fails.", "committedDate": "2020-05-11T13:41:51Z", "type": "commit"}, {"oid": "b19b9e73be8f8f57ed4ba2b6da90e59fdc1219e3", "url": "https://github.com/all-of-us/workbench/commit/b19b9e73be8f8f57ed4ba2b6da90e59fdc1219e3", "message": "Add some clarifying comments.", "committedDate": "2020-05-11T13:46:09Z", "type": "commit"}, {"oid": "93ac816461781523350922cef1631ebed194e3da", "url": "https://github.com/all-of-us/workbench/commit/93ac816461781523350922cef1631ebed194e3da", "message": "Spotless fixes.", "committedDate": "2020-05-11T14:21:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMjczMQ==", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r423132731", "bodyText": "In a controller you might want to throw a more specific error here and let the handler translate it into a 500, but I'm not sure if that happens with crons. This is fine.", "author": "jaycarlton", "createdAt": "2020-05-11T15:40:26Z", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -63,14 +68,15 @@\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllUserIdsToExport(), EXPORT_RESEARCHER_PATH);\n       } catch (Exception ex) {\n-        log.severe(\n-            String.format(\"Error while exporting researcher data to RDR: %s\", ex.getMessage()));\n+        throw new ServerErrorException(", "originalCommit": "93ac816461781523350922cef1631ebed194e3da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43b4cba5b437295d45371fd941bb2e46e1f97cd7", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java b/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java\nindex 498cb0669..578e9b050 100644\n--- a/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java\n+++ b/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java\n\n@@ -68,15 +68,12 @@ public class OfflineRdrExportController implements OfflineRdrExportApiDelegate {\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllUserIdsToExport(), EXPORT_RESEARCHER_PATH);\n       } catch (Exception ex) {\n-        throw new ServerErrorException(\n-            String.format(\"Error creating RDR export Cloud Tasks for users: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\"Error creating RDR export Cloud Tasks for users\", ex);\n       }\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllWorkspacesIdsToExport(), EXPORT_USER_PATH);\n       } catch (Exception ex) {\n-        throw new ServerErrorException(\n-            String.format(\n-                \"Error creating RDR export Cloud Tasks for workspaces: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\"Error creating RDR export Cloud Tasks for workspaces\", ex);\n       }\n     }\n     return ResponseEntity.noContent().build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMzA0OQ==", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r423133049", "bodyText": "If you use this constructor that takes the throwable itself, you keep the stack trace.", "author": "jaycarlton", "createdAt": "2020-05-11T15:40:55Z", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -63,14 +68,15 @@\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllUserIdsToExport(), EXPORT_RESEARCHER_PATH);\n       } catch (Exception ex) {\n-        log.severe(\n-            String.format(\"Error while exporting researcher data to RDR: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\n+            String.format(\"Error creating RDR export Cloud Tasks for users: %s\", ex.getMessage()));\n       }\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllWorkspacesIdsToExport(), EXPORT_USER_PATH);\n       } catch (Exception ex) {\n-        log.severe(\n-            String.format(\"Error while exporting workspace data to RDR: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\n+            String.format(\n+                \"Error creating RDR export Cloud Tasks for workspaces: %s\", ex.getMessage()));", "originalCommit": "93ac816461781523350922cef1631ebed194e3da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwODI5Nw==", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427508297", "bodyText": "Thanks \u2013\u00a0done", "author": "gjuggler", "createdAt": "2020-05-19T18:20:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMzA0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "43b4cba5b437295d45371fd941bb2e46e1f97cd7", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java b/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java\nindex 498cb0669..578e9b050 100644\n--- a/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java\n+++ b/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java\n\n@@ -68,15 +68,12 @@ public class OfflineRdrExportController implements OfflineRdrExportApiDelegate {\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllUserIdsToExport(), EXPORT_RESEARCHER_PATH);\n       } catch (Exception ex) {\n-        throw new ServerErrorException(\n-            String.format(\"Error creating RDR export Cloud Tasks for users: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\"Error creating RDR export Cloud Tasks for users\", ex);\n       }\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllWorkspacesIdsToExport(), EXPORT_USER_PATH);\n       } catch (Exception ex) {\n-        throw new ServerErrorException(\n-            String.format(\n-                \"Error creating RDR export Cloud Tasks for workspaces: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\"Error creating RDR export Cloud Tasks for workspaces\", ex);\n       }\n     }\n     return ResponseEntity.noContent().build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzNjUyOA==", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r423136528", "bodyText": "drive-by nit: Above, I'd declare a TaskBuilder and then use taskBuilder.build() in the cal to createTask(). Or just inline the builder.", "author": "jaycarlton", "createdAt": "2020-05-11T15:46:09Z", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -127,8 +134,10 @@ private void createAndPushTask(List<Long> ids, String queuePath, String taskUri)\n     } catch (IOException ex) {", "originalCommit": "93ac816461781523350922cef1631ebed194e3da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwOTg1OA==", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427509858", "bodyText": "Done", "author": "gjuggler", "createdAt": "2020-05-19T18:23:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzNjUyOA=="}], "type": "inlineReview", "revised_code": {"commit": "43b4cba5b437295d45371fd941bb2e46e1f97cd7", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java b/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java\nindex 498cb0669..578e9b050 100644\n--- a/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java\n+++ b/api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java\n\n@@ -127,10 +124,7 @@ public class OfflineRdrExportController implements OfflineRdrExportApiDelegate {\n               .setHttpMethod(HttpMethod.POST)\n               .putHeaders(\"Content-type\", \"application/json\")\n               .build();\n-\n-      Task taskBuilder = Task.newBuilder().setAppEngineHttpRequest(req).build();\n-      Task task = client.createTask(queuePath, taskBuilder);\n-\n+      client.createTask(queuePath, Task.newBuilder().setAppEngineHttpRequest(req).build());\n     } catch (IOException ex) {\n       log.severe(\n           String.format(\n"}}, {"oid": "43b4cba5b437295d45371fd941bb2e46e1f97cd7", "url": "https://github.com/all-of-us/workbench/commit/43b4cba5b437295d45371fd941bb2e46e1f97cd7", "message": "PR feedback.", "committedDate": "2020-05-19T18:23:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNjQ2OQ==", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427526469", "bodyText": "So we need to trigger an alert on the tasks failing in the queue. I bet I can get that from logs somewhere, assuming the tasks live in our GCP-space.", "author": "jaycarlton", "createdAt": "2020-05-19T18:51:40Z", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -17,13 +17,18 @@\n import javax.inject.Provider;\n import org.pmiops.workbench.config.WorkbenchConfig;\n import org.pmiops.workbench.config.WorkbenchLocationConfigService;\n+import org.pmiops.workbench.exceptions.ServerErrorException;\n import org.pmiops.workbench.rdr.RdrExportService;\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.RestController;\n \n /**\n- * This offline process is responsible to daily sync up with RDR by creating/pushing multiple task\n- * with eligible user Ids and workspace Ids to cloud task queue\n+ * This offline process is responsible to daily sync up with RDR by creating/pushing multiple Cloud\n+ * Task tasks with eligible user Ids and workspace Ids to cloud task queue.\n+ *\n+ * <p>None of the actual RDR communication occurs from within this cron job handler, so this cron\n+ * may succeed even though the actual export tasks to RDR are failing. See\n+ * CloudTaskRdrExportController for the handlers which do the actual RDR export work.", "originalCommit": "43b4cba5b437295d45371fd941bb2e46e1f97cd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU0Njc1Mg==", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427546752", "bodyText": "Yes \u2013 this will be an important metric to track & alert on too.", "author": "gjuggler", "createdAt": "2020-05-19T19:27:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNjQ2OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNzI0Nw==", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427527247", "bodyText": "nit: Should the IDs be a Set? Alternatively, just take in a Collection<Long>.", "author": "jaycarlton", "createdAt": "2020-05-19T18:53:07Z", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -83,7 +86,7 @@\n    * @param idList : Lis of Ids\n    * @param taskUri: The destination URL the task will be calling with group of 10 ids\n    */\n-  private void groupIdsAndPushTask(List<Long> idList, String taskUri) {\n+  private void groupIdsAndPushTask(List<Long> idList, String taskUri) throws IOException {", "originalCommit": "43b4cba5b437295d45371fd941bb2e46e1f97cd7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}