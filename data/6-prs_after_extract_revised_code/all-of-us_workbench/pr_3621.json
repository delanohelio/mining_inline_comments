{"pr_number": 3621, "pr_title": "[risk=no] Add additional metadata fields for user/workspace export", "pr_createdAt": "2020-05-28T22:55:44Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3621", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NTk4OQ==", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436085989", "bodyText": "nit: I'd prefer the nullable/map/orElse pattern here but I'm not gonna block on that", "author": "jmthibault79", "createdAt": "2020-06-05T18:13:12Z", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ExportWorkspaceData.java", "diffHunk": "@@ -230,11 +238,34 @@ private WorkspaceExportRow toWorkspaceExportRow(DbWorkspace workspace) {\n   }\n \n   private WorkspaceExportRow toWorkspaceExportRow(DbUser user) {\n+    String verifiedInstitutionName =\n+        verifiedInstitutionalAffiliationDao\n+            .findFirstByUser(user)\n+            .map(via -> via.getInstitution().getDisplayName())\n+            .orElse(\"\");\n+\n     WorkspaceExportRow row = new WorkspaceExportRow();\n     row.setCreatorContactEmail(user.getContactEmail());\n     row.setCreatorUsername(user.getUsername());\n+    row.setInstitution(verifiedInstitutionName);\n     row.setCreatorFirstSignIn(\n         user.getFirstSignInTime() == null ? \"\" : dateFormat.format(user.getFirstSignInTime()));", "originalCommit": "ef4806ce3f990ef1ecb4e865d7988f9920108831", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA5NzMwNQ==", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436097305", "bodyText": "Agreed, done", "author": "calbach", "createdAt": "2020-06-05T18:34:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NTk4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "43a021888f0cff8771501ba404c8d75787e2086a", "chunk": "diff --git a/api/tools/src/main/java/org/pmiops/workbench/tools/ExportWorkspaceData.java b/api/tools/src/main/java/org/pmiops/workbench/tools/ExportWorkspaceData.java\nindex a2f3ead44..ba03daa84 100644\n--- a/api/tools/src/main/java/org/pmiops/workbench/tools/ExportWorkspaceData.java\n+++ b/api/tools/src/main/java/org/pmiops/workbench/tools/ExportWorkspaceData.java\n\n@@ -249,23 +250,21 @@ public class ExportWorkspaceData {\n     row.setCreatorUsername(user.getUsername());\n     row.setInstitution(verifiedInstitutionName);\n     row.setCreatorFirstSignIn(\n-        user.getFirstSignInTime() == null ? \"\" : dateFormat.format(user.getFirstSignInTime()));\n+        Optional.ofNullable(user.getFirstSignInTime()).map(dateFormat::format).orElse(\"\"));\n     row.setTwoFactorAuthCompletionDate(\n-        user.getTwoFactorAuthCompletionTime() == null\n-            ? \"\"\n-            : dateFormat.format(user.getTwoFactorAuthCompletionTime()));\n+        Optional.ofNullable(user.getTwoFactorAuthCompletionTime())\n+            .map(dateFormat::format)\n+            .orElse(\"\"));\n     row.setEraCompletionDate(\n-        user.getEraCommonsCompletionTime() == null\n-            ? \"\"\n-            : dateFormat.format(user.getEraCommonsCompletionTime()));\n+        Optional.ofNullable(user.getEraCommonsCompletionTime()).map(dateFormat::format).orElse(\"\"));\n     row.setTrainingCompletionDate(\n-        user.getComplianceTrainingCompletionTime() == null\n-            ? \"\"\n-            : dateFormat.format(user.getComplianceTrainingCompletionTime()));\n+        Optional.ofNullable(user.getComplianceTrainingCompletionTime())\n+            .map(dateFormat::format)\n+            .orElse(\"\"));\n     row.setDuccCompletionDate(\n-        user.getDataUseAgreementCompletionTime() == null\n-            ? \"\"\n-            : dateFormat.format(user.getDataUseAgreementCompletionTime()));\n+        Optional.ofNullable(user.getDataUseAgreementCompletionTime())\n+            .map(dateFormat::format)\n+            .orElse(\"\"));\n     row.setCreatorRegistrationState(user.getDataAccessLevelEnum().toString());\n \n     return row;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NjkyNg==", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436086926", "bodyText": "welp this is certainly tedious.  assuming there's no better way or you'd have done it?", "author": "jmthibault79", "createdAt": "2020-06-05T18:14:21Z", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/WorkspaceExportRow.java", "diffHunk": "@@ -38,7 +50,7 @@ public void setCreatorFirstSignIn(String creatorFirstSignIn) {\n   }\n \n   @CsvBindByName(column = \"First Sign In\")\n-  @CsvBindByPosition(position = 2)\n+  @CsvBindByPosition(position = 3)", "originalCommit": "ef4806ce3f990ef1ecb4e865d7988f9920108831", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA5OTA5Nw==", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436099097", "bodyText": "Indeed - I didn't do the initial implementation or review, but from a quick scan around some of the documentation, it seems that custom names + custom ordering is not very well supported by this CSV library. I would not be surprised if this is the best way (at least, for this library). Will consider digging deeper if we decide to extend the lifespan of this tool further - it may be going away soon'ish with new metrics export plans.", "author": "calbach", "createdAt": "2020-06-05T18:38:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NjkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwODk3MA==", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436708970", "bodyText": "FWIW, this was not intended to be a long-lived implementation.", "author": "jaycarlton", "createdAt": "2020-06-08T13:40:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NjkyNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0aff14e6ecdb9f5351a27a27c26c30e2a097e74e", "url": "https://github.com/all-of-us/workbench/commit/0aff14e6ecdb9f5351a27a27c26c30e2a097e74e", "message": "Add additional metadata fields for export", "committedDate": "2020-06-05T18:42:59Z", "type": "commit"}, {"oid": "43a021888f0cff8771501ba404c8d75787e2086a", "url": "https://github.com/all-of-us/workbench/commit/43a021888f0cff8771501ba404c8d75787e2086a", "message": "optionals", "committedDate": "2020-06-05T18:42:59Z", "type": "commit"}, {"oid": "43a021888f0cff8771501ba404c8d75787e2086a", "url": "https://github.com/all-of-us/workbench/commit/43a021888f0cff8771501ba404c8d75787e2086a", "message": "optionals", "committedDate": "2020-06-05T18:42:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwOTYzNw==", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436709637", "bodyText": "One option is to just write an array of JSON objects and use an off-the-shelf json->csv converter.", "author": "jaycarlton", "createdAt": "2020-06-08T13:41:43Z", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/WorkspaceExportRow.java", "diffHunk": "@@ -62,7 +122,7 @@ public void setProjectId(String projectId) {\n   }\n \n   @CsvBindByName(column = \"Workspace Project ID\")\n-  @CsvBindByPosition(position = 4)\n+  @CsvBindByPosition(position = 9)", "originalCommit": "43a021888f0cff8771501ba404c8d75787e2086a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}