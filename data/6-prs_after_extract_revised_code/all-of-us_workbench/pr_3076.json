{"pr_number": 3076, "pr_title": "[No ticket][RISK=NO]Account creation - Add gender Identity to demographic survey", "pr_createdAt": "2020-02-03T17:57:51Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3076", "timeline": [{"oid": "9f83e4b08dae6aff79f6a1959635ddb76714a7be", "url": "https://github.com/all-of-us/workbench/commit/9f83e4b08dae6aff79f6a1959635ddb76714a7be", "message": "Add gender Identity to demographic survey", "committedDate": "2020-02-03T17:53:14Z", "type": "commit"}, {"oid": "21bf85417fe689ec06b0f5bf615eb1772932fca2", "url": "https://github.com/all-of-us/workbench/commit/21bf85417fe689ec06b0f5bf615eb1772932fca2", "message": "Fix lint error", "committedDate": "2020-02-03T17:59:15Z", "type": "commit"}, {"oid": "b56daf588cef7880a9839b5eeef998df3e160221", "url": "https://github.com/all-of-us/workbench/commit/b56daf588cef7880a9839b5eeef998df3e160221", "message": "Update enum values to match UI", "committedDate": "2020-02-03T18:22:22Z", "type": "commit"}, {"oid": "81d9600bdf642541b23902bd95ebb3d87c624c31", "url": "https://github.com/all-of-us/workbench/commit/81d9600bdf642541b23902bd95ebb3d87c624c31", "message": "UI change enum to match UI field", "committedDate": "2020-02-03T18:24:36Z", "type": "commit"}, {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2", "url": "https://github.com/all-of-us/workbench/commit/388d1231d1fdd5ef6447221acee2acd534103be2", "message": "resolve merge conflicts", "committedDate": "2020-02-03T18:55:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MzMwOA==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374293308", "bodyText": "Please don't return a null list if you can avoid it. Can you use Collections.emptyList()?", "author": "jaycarlton", "createdAt": "2020-02-03T19:25:19Z", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +176,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender\")\n+  public List<Short> getGender() {\n+    return gender;\n+  }\n+\n+  public void setGender(List<Short> gender) {\n+    this.gender = gender;\n+  }\n+\n+  @Transient\n+  public List<Gender> getGenderEnum() {\n+    if (gender == null) return null;", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java b/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java\nindex 52557afa6..17eb42b9d 100644\n--- a/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java\n+++ b/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java\n\n@@ -178,29 +183,29 @@ public class DbDemographicSurvey {\n \n   @ElementCollection(fetch = FetchType.LAZY)\n   @CollectionTable(\n-      name = \"demographic_survey_gender\",\n+      name = \"demographic_survey_gender_identity\",\n       joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n-  @Column(name = \"gender\")\n-  public List<Short> getGender() {\n-    return gender;\n+  @Column(name = \"gender_identity\")\n+  public List<Short> getGenderIdentityList() {\n+    return genderIdentityList;\n   }\n \n-  public void setGender(List<Short> gender) {\n-    this.gender = gender;\n+  public void setGenderIdentityList(List<Short> genderIdentityList) {\n+    this.genderIdentityList = genderIdentityList;\n   }\n \n   @Transient\n-  public List<Gender> getGenderEnum() {\n-    if (gender == null) return null;\n-    return this.gender.stream()\n-        .map(DemographicSurveyEnum::genderFromStorage)\n+  public List<GenderIdentity> getGenderIdentityEnumList() {\n+    if (genderIdentityList == null) return new ArrayList<GenderIdentity>();\n+    return this.genderIdentityList.stream()\n+        .map(DemographicSurveyEnum::genderIdentityFromStorage)\n         .collect(Collectors.toList());\n   }\n \n-  public void setGenderEnum(List<Gender> genderlist) {\n-    this.gender =\n-        genderlist.stream()\n-            .map(DemographicSurveyEnum::genderToStorage)\n+  public void setGenderIdentityEnumList(List<GenderIdentity> genderList) {\n+    this.genderIdentityList =\n+        genderList.stream()\n+            .map(DemographicSurveyEnum::genderIdentityToStorage)\n             .collect(Collectors.toList());\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5Mzc4MA==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374293780", "bodyText": "Maybe getGenderEnumList() would be clearer.", "author": "jaycarlton", "createdAt": "2020-02-03T19:26:12Z", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +176,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender\")\n+  public List<Short> getGender() {\n+    return gender;\n+  }\n+\n+  public void setGender(List<Short> gender) {\n+    this.gender = gender;\n+  }\n+\n+  @Transient\n+  public List<Gender> getGenderEnum() {", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java b/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java\nindex 52557afa6..17eb42b9d 100644\n--- a/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java\n+++ b/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java\n\n@@ -178,29 +183,29 @@ public class DbDemographicSurvey {\n \n   @ElementCollection(fetch = FetchType.LAZY)\n   @CollectionTable(\n-      name = \"demographic_survey_gender\",\n+      name = \"demographic_survey_gender_identity\",\n       joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n-  @Column(name = \"gender\")\n-  public List<Short> getGender() {\n-    return gender;\n+  @Column(name = \"gender_identity\")\n+  public List<Short> getGenderIdentityList() {\n+    return genderIdentityList;\n   }\n \n-  public void setGender(List<Short> gender) {\n-    this.gender = gender;\n+  public void setGenderIdentityList(List<Short> genderIdentityList) {\n+    this.genderIdentityList = genderIdentityList;\n   }\n \n   @Transient\n-  public List<Gender> getGenderEnum() {\n-    if (gender == null) return null;\n-    return this.gender.stream()\n-        .map(DemographicSurveyEnum::genderFromStorage)\n+  public List<GenderIdentity> getGenderIdentityEnumList() {\n+    if (genderIdentityList == null) return new ArrayList<GenderIdentity>();\n+    return this.genderIdentityList.stream()\n+        .map(DemographicSurveyEnum::genderIdentityFromStorage)\n         .collect(Collectors.toList());\n   }\n \n-  public void setGenderEnum(List<Gender> genderlist) {\n-    this.gender =\n-        genderlist.stream()\n-            .map(DemographicSurveyEnum::genderToStorage)\n+  public void setGenderIdentityEnumList(List<GenderIdentity> genderList) {\n+    this.genderIdentityList =\n+        genderList.stream()\n+            .map(DemographicSurveyEnum::genderIdentityToStorage)\n             .collect(Collectors.toList());\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NDI1MQ==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374294251", "bodyText": "Should we be using List, or would Set be better? I.e. does order matter? I don't think we want duplicate entries.", "author": "jaycarlton", "createdAt": "2020-02-03T19:27:10Z", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +176,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender\")\n+  public List<Short> getGender() {\n+    return gender;\n+  }\n+\n+  public void setGender(List<Short> gender) {\n+    this.gender = gender;\n+  }\n+\n+  @Transient\n+  public List<Gender> getGenderEnum() {\n+    if (gender == null) return null;\n+    return this.gender.stream()\n+        .map(DemographicSurveyEnum::genderFromStorage)\n+        .collect(Collectors.toList());\n+  }\n+\n+  public void setGenderEnum(List<Gender> genderlist) {", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java b/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java\nindex 52557afa6..17eb42b9d 100644\n--- a/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java\n+++ b/api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java\n\n@@ -178,29 +183,29 @@ public class DbDemographicSurvey {\n \n   @ElementCollection(fetch = FetchType.LAZY)\n   @CollectionTable(\n-      name = \"demographic_survey_gender\",\n+      name = \"demographic_survey_gender_identity\",\n       joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n-  @Column(name = \"gender\")\n-  public List<Short> getGender() {\n-    return gender;\n+  @Column(name = \"gender_identity\")\n+  public List<Short> getGenderIdentityList() {\n+    return genderIdentityList;\n   }\n \n-  public void setGender(List<Short> gender) {\n-    this.gender = gender;\n+  public void setGenderIdentityList(List<Short> genderIdentityList) {\n+    this.genderIdentityList = genderIdentityList;\n   }\n \n   @Transient\n-  public List<Gender> getGenderEnum() {\n-    if (gender == null) return null;\n-    return this.gender.stream()\n-        .map(DemographicSurveyEnum::genderFromStorage)\n+  public List<GenderIdentity> getGenderIdentityEnumList() {\n+    if (genderIdentityList == null) return new ArrayList<GenderIdentity>();\n+    return this.genderIdentityList.stream()\n+        .map(DemographicSurveyEnum::genderIdentityFromStorage)\n         .collect(Collectors.toList());\n   }\n \n-  public void setGenderEnum(List<Gender> genderlist) {\n-    this.gender =\n-        genderlist.stream()\n-            .map(DemographicSurveyEnum::genderToStorage)\n+  public void setGenderIdentityEnumList(List<GenderIdentity> genderList) {\n+    this.genderIdentityList =\n+        genderList.stream()\n+            .map(DemographicSurveyEnum::genderIdentityToStorage)\n             .collect(Collectors.toList());\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NDgxMg==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374294812", "bodyText": "Should we burn the old 1 & 2 values and make new ones for MAN and WOMAN? Or are they really exact replacements?", "author": "jaycarlton", "createdAt": "2020-02-03T19:28:16Z", "path": "common-api/src/main/java/org/pmiops/workbench/db/model/DemographicSurveyEnum.java", "diffHunk": "@@ -54,8 +54,8 @@\n \n   private static final BiMap<Gender, Short> CLIENT_TO_STORAGE_GENDER =\n       ImmutableBiMap.<Gender, Short>builder()\n-          .put(Gender.MALE, (short) 1)\n-          .put(Gender.FEMALE, (short) 2)\n+          .put(Gender.MAN, (short) 1)", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMwMzQ2Ng==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374303466", "bodyText": "Its the exact replacement, i can still have this as MALE AND FEMALE and have ui label MAN and WOMAN , but since we are going to reintroduce the table itself i thought its best that our enum matches the label", "author": "NehaBroad", "createdAt": "2020-02-03T19:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NDgxMg=="}], "type": "inlineReview", "revised_code": {"commit": "3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "chunk": "diff --git a/common-api/src/main/java/org/pmiops/workbench/db/model/DemographicSurveyEnum.java b/common-api/src/main/java/org/pmiops/workbench/db/model/DemographicSurveyEnum.java\nindex 25ea1860b..802defc5b 100644\n--- a/common-api/src/main/java/org/pmiops/workbench/db/model/DemographicSurveyEnum.java\n+++ b/common-api/src/main/java/org/pmiops/workbench/db/model/DemographicSurveyEnum.java\n\n@@ -52,15 +52,14 @@ public class DemographicSurveyEnum {\n           .put(Ethnicity.PREFER_NO_ANSWER, (short) 3)\n           .build();\n \n-  private static final BiMap<Gender, Short> CLIENT_TO_STORAGE_GENDER =\n-      ImmutableBiMap.<Gender, Short>builder()\n-          .put(Gender.MAN, (short) 1)\n-          .put(Gender.WOMAN, (short) 2)\n-          .put(Gender.NON_BINARY, (short) 3)\n-          .put(Gender.TRANSGENDER, (short) 4)\n-          .put(Gender.INTERSEX, (short) 5)\n-          .put(Gender.NONE, (short) 6)\n-          .put(Gender.PREFER_NO_ANSWER, (short) 7)\n+  private static final BiMap<GenderIdentity, Short> CLIENT_TO_STORAGE_GENDER_IDENTITY =\n+      ImmutableBiMap.<GenderIdentity, Short>builder()\n+          .put(GenderIdentity.MAN, (short) 1)\n+          .put(GenderIdentity.WOMAN, (short) 2)\n+          .put(GenderIdentity.NON_BINARY, (short) 3)\n+          .put(GenderIdentity.TRANSGENDER, (short) 4)\n+          .put(GenderIdentity.NONE_DESCRIBE_ME, (short) 5)\n+          .put(GenderIdentity.PREFER_NO_ANSWER, (short) 6)\n           .build();\n \n   private static final BiMap<Education, Short> CLIENT_TO_STORAGE_EDUCATION =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5OTQ3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374299472", "bodyText": "I think we should consider making it a bad request if NONE or PREFER_NO_ANSWER aren't by themselves. The UI should probably enforce that as well.\nWe should definitely allow combining the others though.", "author": "jaycarlton", "createdAt": "2020-02-03T19:37:54Z", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -155,6 +155,9 @@ public DbDemographicSurvey apply(DemographicSurvey demographicSurvey) {\n               if (demographicSurvey.getDisability() != null)\n                 result.setDisabilityEnum(\n                     demographicSurvey.getDisability() ? Disability.TRUE : Disability.FALSE);\n+              if (demographicSurvey.getGender() != null) {\n+                result.setGenderEnum(demographicSurvey.getGender());", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczODgyNA==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374738824", "bodyText": "Since that logic is not just limited to gender we can have another PR/story to take care of it.", "author": "NehaBroad", "createdAt": "2020-02-04T15:25:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5OTQ3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "chunk": "diff --git a/api/src/main/java/org/pmiops/workbench/api/ProfileController.java b/api/src/main/java/org/pmiops/workbench/api/ProfileController.java\nindex 6ee016c06..0951407ef 100644\n--- a/api/src/main/java/org/pmiops/workbench/api/ProfileController.java\n+++ b/api/src/main/java/org/pmiops/workbench/api/ProfileController.java\n\n@@ -155,8 +155,8 @@ public class ProfileController implements ProfileApiDelegate {\n               if (demographicSurvey.getDisability() != null)\n                 result.setDisabilityEnum(\n                     demographicSurvey.getDisability() ? Disability.TRUE : Disability.FALSE);\n-              if (demographicSurvey.getGender() != null) {\n-                result.setGenderEnum(demographicSurvey.getGender());\n+              if (demographicSurvey.getGenderIdentityList() != null) {\n+                result.setGenderIdentityEnumList(demographicSurvey.getGenderIdentityList());\n               }\n               if (demographicSurvey.getSexAtBirth() != null)\n                 result.setSexAtBirthEnum(demographicSurvey.getSexAtBirth());\n"}}, {"oid": "3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "url": "https://github.com/all-of-us/workbench/commit/3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "message": "Change gender to genderIdentity", "committedDate": "2020-02-04T04:05:25Z", "type": "commit"}, {"oid": "5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3", "url": "https://github.com/all-of-us/workbench/commit/5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3", "message": "spotless", "committedDate": "2020-02-04T04:11:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMTI3Ng==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374821276", "bodyText": "nit: can this be a set instead of a list?", "author": "jaycarlton", "createdAt": "2020-02-04T17:41:29Z", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +181,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender_identity\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender_identity\")\n+  public List<Short> getGenderIdentityList() {\n+    return genderIdentityList;\n+  }\n+\n+  public void setGenderIdentityList(List<Short> genderIdentityList) {", "originalCommit": "5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyNTIzNw==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374825237", "bodyText": "Good point will change this to set", "author": "NehaBroad", "createdAt": "2020-02-04T17:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMTI3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyNjgwOQ==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374826809", "bodyText": "However this will . be consistent with other elements will it be ok if i can have another PR to have it for all the elements (race ,sexAtbirth)?", "author": "NehaBroad", "createdAt": "2020-02-04T17:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMTI3Ng=="}], "type": "inlineReview", "revised_code": null}, {"oid": "29dca079e0d057ba08a5ee377bc53bfa4fb4b228", "url": "https://github.com/all-of-us/workbench/commit/29dca079e0d057ba08a5ee377bc53bfa4fb4b228", "message": "rebase", "committedDate": "2020-02-04T17:56:53Z", "type": "commit"}]}