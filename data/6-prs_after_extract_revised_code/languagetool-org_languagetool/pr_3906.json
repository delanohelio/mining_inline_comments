{"pr_number": 3906, "pr_title": "JLanguageTool: cache active rules", "pr_createdAt": "2020-11-23T10:38:18Z", "pr_url": "https://github.com/languagetool-org/languagetool/pull/3906", "timeline": [{"oid": "a67d04ee31422baa172ad51b77be7ae33e375126", "url": "https://github.com/languagetool-org/languagetool/commit/a67d04ee31422baa172ad51b77be7ae33e375126", "message": "JLanguageTool: cache active rules\n\nto avoid calling `ignoreRule` for each rule in each `check` invocation, often for each sentence\nand to avoid filtering out picky rules by tag on each `check` call", "committedDate": "2020-11-23T10:37:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODgzNg==", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528608836", "bodyText": "This method is unused in LT, so I can remove it instead of changing. Not sure if there are external callers though.", "author": "donnerpeter", "createdAt": "2020-11-23T10:39:12Z", "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "diffHunk": "@@ -1145,7 +1157,8 @@ protected void printSentenceInfo(AnalyzedSentence analyzedSentence) {\n \n   protected List<RuleMatch> performCheck(List<AnalyzedSentence> analyzedSentences, List<String> sentences,\n                                          List<Rule> allRules, ParagraphHandling paraMode, AnnotatedText annotatedText, Mode mode, Level level) throws IOException {\n-    return performCheck(analyzedSentences, sentences, allRules, paraMode, annotatedText, null, mode, level, true);\n+    List<Rule> nonIgnored = allRules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());", "originalCommit": "a67d04ee31422baa172ad51b77be7ae33e375126", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxMDg4NQ==", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528610885", "bodyText": "As LT can be used from Java directly via its API, we should expect public methods to be used. We can clean them up, but for that, we should first deprecate them and only remove them 2 releases later or so.", "author": "danielnaber", "createdAt": "2020-11-23T10:42:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyOTMxMw==", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528629313", "bodyText": "This one is protected.\nSo, should I deprecate these methods?", "author": "donnerpeter", "createdAt": "2020-11-23T11:16:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY2MDY4Ng==", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528660686", "bodyText": "So, should I deprecate these methods?\n\nYes", "author": "danielnaber", "createdAt": "2020-11-23T12:14:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODgzNg=="}], "type": "inlineReview", "revised_code": {"commit": "aa71a9d003533c2b7e0a1249199091574765c070", "chunk": "diff --git a/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java b/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java\nindex ca9e160013..3f4eebc0db 100644\n--- a/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java\n+++ b/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java\n\n@@ -1155,6 +1155,10 @@ public class JLanguageTool {\n     }\n   }\n \n+  /**\n+   * @deprecated use {@link #performCheck(List, List, List, ParagraphHandling, AnnotatedText, RuleMatchListener, Mode, Level, boolean)}\n+   */\n+  @Deprecated\n   protected List<RuleMatch> performCheck(List<AnalyzedSentence> analyzedSentences, List<String> sentences,\n                                          List<Rule> allRules, ParagraphHandling paraMode, AnnotatedText annotatedText, Mode mode, Level level) throws IOException {\n     List<Rule> nonIgnored = allRules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwOTAyMg==", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528609022", "bodyText": "Another unused method, public", "author": "donnerpeter", "createdAt": "2020-11-23T10:39:29Z", "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "diffHunk": "@@ -1201,7 +1214,8 @@ private int processColumnChange(int columnCount, String sentence) {\n    */\n   public List<RuleMatch> checkAnalyzedSentence(ParagraphHandling paraMode,\n                                                List<Rule> rules, AnalyzedSentence analyzedSentence) throws IOException {\n-    return checkAnalyzedSentence(paraMode, rules, analyzedSentence, false);\n+    List<Rule> nonIgnored = rules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());", "originalCommit": "a67d04ee31422baa172ad51b77be7ae33e375126", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYzNTY3MQ==", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528635671", "bodyText": "Also documented as \"This is an internal method that's public only for technical reasons, please use one of the {@link #check(String)} methods instead\"", "author": "donnerpeter", "createdAt": "2020-11-23T11:27:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwOTAyMg=="}], "type": "inlineReview", "revised_code": {"commit": "aa71a9d003533c2b7e0a1249199091574765c070", "chunk": "diff --git a/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java b/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java\nindex ca9e160013..3f4eebc0db 100644\n--- a/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java\n+++ b/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java\n\n@@ -1207,11 +1211,12 @@ public class JLanguageTool {\n   }\n \n   /**\n-   * This is an internal method that's public only for technical reasons, please use one\n-   * of the {@link #check(String)} methods instead.\n+   * This is an internal method that's public only for technical reasons.\n    *\n    * @since 2.3\n+   * @deprecated use one of the {@link #check} methods instead.\n    */\n+  @Deprecated\n   public List<RuleMatch> checkAnalyzedSentence(ParagraphHandling paraMode,\n                                                List<Rule> rules, AnalyzedSentence analyzedSentence) throws IOException {\n     List<Rule> nonIgnored = rules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());\n"}}, {"oid": "aa71a9d003533c2b7e0a1249199091574765c070", "url": "https://github.com/languagetool-org/languagetool/commit/aa71a9d003533c2b7e0a1249199091574765c070", "message": "JLanguageTool: deprecate unused methods", "committedDate": "2020-11-23T12:19:00Z", "type": "commit"}]}