{"pr_number": 7619, "pr_title": "Move webhook api to spark", "pr_createdAt": "2020-01-16T15:04:33Z", "pr_url": "https://github.com/gocd/gocd/pull/7619", "timeline": [{"oid": "368cee0d7e02d79989fb7babdce8c31e31a2685d", "url": "https://github.com/gocd/gocd/commit/368cee0d7e02d79989fb7babdce8c31e31a2685d", "message": "Initial commit", "committedDate": "2020-01-15T08:38:26Z", "type": "commit"}, {"oid": "e4c6d24eae955c4155035f721d070dc08ca24256", "url": "https://github.com/gocd/gocd/commit/e4c6d24eae955c4155035f721d070dc08ca24256", "message": "Adding a toggle to swtich between rails and spark controller", "committedDate": "2020-01-16T15:05:00Z", "type": "commit"}, {"oid": "684cd95e15df7f79d685c1fa6335a96b04165e6f", "url": "https://github.com/gocd/gocd/commit/684cd95e15df7f79d685c1fa6335a96b04165e6f", "message": "Github webhook implementation", "committedDate": "2020-01-16T15:05:14Z", "type": "commit"}, {"oid": "bcee8faa859a98819f2821c7dfedaed60288e00b", "url": "https://github.com/gocd/gocd/commit/bcee8faa859a98819f2821c7dfedaed60288e00b", "message": "GitLab webhook implementation", "committedDate": "2020-01-16T15:05:14Z", "type": "commit"}, {"oid": "359da511f362e7df00b1d34358a5f53d1db938dd", "url": "https://github.com/gocd/gocd/commit/359da511f362e7df00b1d34358a5f53d1db938dd", "message": "Bit bucket webhook implementation", "committedDate": "2020-01-16T15:05:15Z", "type": "commit"}, {"oid": "fca7b544340f561a80cf8c8421becc9a44c6b2c9", "url": "https://github.com/gocd/gocd/commit/fca7b544340f561a80cf8c8421becc9a44c6b2c9", "message": "Adding BitBucket server webhook api", "committedDate": "2020-01-16T15:05:15Z", "type": "commit"}, {"oid": "be949f30eb8a0679d5aa013894de3a3e4c33359e", "url": "https://github.com/gocd/gocd/commit/be949f30eb8a0679d5aa013894de3a3e4c33359e", "message": "Improved logging in webhook requests", "committedDate": "2020-01-16T15:05:15Z", "type": "commit"}, {"oid": "be949f30eb8a0679d5aa013894de3a3e4c33359e", "url": "https://github.com/gocd/gocd/commit/be949f30eb8a0679d5aa013894de3a3e4c33359e", "message": "Improved logging in webhook requests", "committedDate": "2020-01-16T15:05:15Z", "type": "forcePushed"}, {"oid": "30e6ee197eb24f8a9eb8274f13b1147e64c630a7", "url": "https://github.com/gocd/gocd/commit/30e6ee197eb24f8a9eb8274f13b1147e64c630a7", "message": "Guess more webhook urls", "committedDate": "2020-01-17T07:05:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2OTczNQ==", "url": "https://github.com/gocd/gocd/pull/7619#discussion_r368369735", "bodyText": "(Additionally) Read an environment variable? so that a user can pass more possible URLs?", "author": "GaneshSPatil", "createdAt": "2020-01-20T04:55:44Z", "path": "api/api-webhook-v1/src/main/java/com/thoughtworks/go/apiv1/webhook/GuessUrlWebHook.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.thoughtworks.go.apiv1.webhook;\n+\n+import java.util.List;\n+\n+import static java.lang.String.format;\n+\n+public interface GuessUrlWebHook {\n+\n+    default List<String> possibleUrls(String hostname, String repoFullName) {\n+        return List.of(\n+            format(\"https://%s/%s\", hostname, repoFullName),\n+            format(\"https://%s/%s/\", hostname, repoFullName),\n+            format(\"https://%s/%s.git\", hostname, repoFullName),\n+            format(\"https://%s/%s.git/\", hostname, repoFullName),\n+            format(\"http://%s/%s\", hostname, repoFullName),\n+            format(\"http://%s/%s/\", hostname, repoFullName),\n+            format(\"http://%s/%s.git\", hostname, repoFullName),\n+            format(\"http://%s/%s.git/\", hostname, repoFullName),\n+            format(\"git://%s/%s\", hostname, repoFullName),\n+            format(\"git://%s/%s/\", hostname, repoFullName),\n+            format(\"git://%s/%s.git\", hostname, repoFullName),\n+            format(\"git://%s/%s.git/\", hostname, repoFullName),\n+            format(\"git@%s:%s\", hostname, repoFullName),\n+            format(\"git@%s:%s/\", hostname, repoFullName),\n+            format(\"git@%s:%s.git\", hostname, repoFullName),\n+            format(\"git@%s:%s.git/\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s/\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s.git\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s.git/\", hostname, repoFullName),\n+            format(\"ssh://%s/%s\", hostname, repoFullName),\n+            format(\"ssh://%s/%s/\", hostname, repoFullName),\n+            format(\"ssh://%s/%s.git\", hostname, repoFullName),\n+            format(\"ssh://%s/%s.git/\", hostname, repoFullName)", "originalCommit": "30e6ee197eb24f8a9eb8274f13b1147e64c630a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3OTQwNA==", "url": "https://github.com/gocd/gocd/pull/7619#discussion_r368379404", "bodyText": "That can happen separately as It may involve templating the URLs", "author": "bdpiprava", "createdAt": "2020-01-20T05:56:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2OTczNQ=="}], "type": "inlineReview", "revised_code": null}]}