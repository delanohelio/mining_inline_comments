{"pr_number": 8667, "pr_title": "Allow `ConfigRepoConfig` to set `autoUpdate` to `false`", "pr_createdAt": "2020-10-20T01:50:29Z", "pr_url": "https://github.com/gocd/gocd/pull/8667", "timeline": [{"oid": "af95059a3b423d5809f20430b8226fb8354bad53", "url": "https://github.com/gocd/gocd/commit/af95059a3b423d5809f20430b8226fb8354bad53", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`.", "committedDate": "2020-10-20T01:54:31Z", "type": "forcePushed"}, {"oid": "de4958ffa90153ecfc28519bf5347423b1b28ca2", "url": "https://github.com/gocd/gocd/commit/de4958ffa90153ecfc28519bf5347423b1b28ca2", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`.", "committedDate": "2020-10-20T08:15:14Z", "type": "forcePushed"}, {"oid": "48b2e09981a024ec7e6a82106ab921b3378b1aaf", "url": "https://github.com/gocd/gocd/commit/48b2e09981a024ec7e6a82106ab921b3378b1aaf", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`.", "committedDate": "2020-10-20T09:48:59Z", "type": "forcePushed"}, {"oid": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6", "url": "https://github.com/gocd/gocd/commit/c1b63d3e919d02e5a032f2d8dbb26b7870402cb6", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`.", "committedDate": "2020-10-20T10:04:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMzODM5NQ==", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r508338395", "bodyText": "Dint find usages for this method.", "author": "maheshp", "createdAt": "2020-10-20T09:12:18Z", "path": "server/src/main/java/com/thoughtworks/go/server/service/EntityHashingService.java", "diffHunk": "@@ -397,6 +405,26 @@ public String hashForEntity(ArtifactConfig artifactConfig) {\n         return getFromCache(cacheKey, () -> String.valueOf(Objects.hash(artifactConfig)));\n     }\n \n+    public String hashForEntity(PartialConfig entity) {", "originalCommit": "de4958ffa90153ecfc28519bf5347423b1b28ca2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAxMjM5MQ==", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509012391", "bodyText": "I'll remove it. I think I had intended to use it from a controller, but realized it is really the PartialConfigParseResult that I needed to hash. Thanks for catching it.", "author": "marques-work", "createdAt": "2020-10-21T06:10:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMzODM5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6", "chunk": "diff --git a/server/src/main/java/com/thoughtworks/go/server/service/EntityHashingService.java b/server/src/main/java/com/thoughtworks/go/server/service/EntityHashingService.java\nindex f3f0e2ead2..8be251fedc 100644\n--- a/server/src/main/java/com/thoughtworks/go/server/service/EntityHashingService.java\n+++ b/server/src/main/java/com/thoughtworks/go/server/service/EntityHashingService.java\n\n@@ -418,6 +418,10 @@ public class EntityHashingService implements ConfigChangedListener, Initializer\n      * @return the calculated hash\n      */\n     public String hashForEntity(PartialConfigParseResult entity) {\n+        if (null == entity) {\n+            return null;\n+        }\n+\n         return hashes.digest(\n                 partials.hash(entity.lastGoodPartialConfig()),\n                 hashes.digestDomainNonConfigEntity(entity.getGoodModification()),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NjQwNw==", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r508986407", "bodyText": "The implementation for validateAutoUpdateState has to change to check if auto_update value for ConfigRepo material matches with regular material.", "author": "maheshp", "createdAt": "2020-10-21T04:45:02Z", "path": "config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java", "diffHunk": "@@ -65,7 +67,6 @@ public void validate(ValidationContext validationContext) {\n         this.validateRepoIsSet();\n         this.validateMaterial(validationContext);\n         if (isValidMaterial()) {\n-            this.validateAutoUpdateEnabled();\n             this.validateAutoUpdateState(validationContext);", "originalCommit": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAxMjg1Ng==", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509012856", "bodyText": "Is this because if there is an existing material that has the same config, auto_update must be the same?", "author": "marques-work", "createdAt": "2020-10-21T06:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NjQwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAxODg0OA==", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509018848", "bodyText": "Changed this to test if autoUpdate is the same across all matching materials", "author": "marques-work", "createdAt": "2020-10-21T06:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NjQwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAzOTM3MA==", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509039370", "bodyText": "Is this because if there is an existing material that has the same config, auto_update must be the same?\n\nYes", "author": "maheshp", "createdAt": "2020-10-21T07:11:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NjQwNw=="}], "type": "inlineReview", "revised_code": {"commit": "7f97caab8358750e2ecf8a688d4122417eafe66a", "chunk": "diff --git a/config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java b/config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java\nindex 6819ff4f8c..ed1e6a8230 100644\n--- a/config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java\n+++ b/config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java\n\n@@ -67,6 +67,7 @@ public class ConfigRepoConfig extends RuleAwarePluginProfile {\n         this.validateRepoIsSet();\n         this.validateMaterial(validationContext);\n         if (isValidMaterial()) {\n+            this.validateAutoUpdateEnabled();\n             this.validateAutoUpdateState(validationContext);\n             this.validateMaterialUniqueness(validationContext);\n         }\n"}}, {"oid": "7f97caab8358750e2ecf8a688d4122417eafe66a", "url": "https://github.com/gocd/gocd/commit/7f97caab8358750e2ecf8a688d4122417eafe66a", "message": "Compute ConfigRepoConfig and ConfigRepoWithResult etags based on serialized content instead of the easily-spoofed `hashCode()`\n\nThis also makes it more correct these now take account of `autoUpdate`; `hashCode()` did not.", "committedDate": "2020-10-21T06:25:42Z", "type": "commit"}, {"oid": "90854ebd19c4693b493f01eb424d15335dadbf1b", "url": "https://github.com/gocd/gocd/commit/90854ebd19c4693b493f01eb424d15335dadbf1b", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`.", "committedDate": "2020-10-21T06:25:42Z", "type": "forcePushed"}, {"oid": "91cc0c42eed9ec076ca2fb9cc9f3e55146d44152", "url": "https://github.com/gocd/gocd/commit/91cc0c42eed9ec076ca2fb9cc9f3e55146d44152", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`.", "committedDate": "2020-10-21T08:06:26Z", "type": "commit"}, {"oid": "91cc0c42eed9ec076ca2fb9cc9f3e55146d44152", "url": "https://github.com/gocd/gocd/commit/91cc0c42eed9ec076ca2fb9cc9f3e55146d44152", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`.", "committedDate": "2020-10-21T08:06:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA3NzY2NQ==", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509077665", "bodyText": "Changing this test to reflect that only materials and configrepos with auto_update = false will be considered.", "author": "marques-work", "createdAt": "2020-10-21T08:14:19Z", "path": "config/config-api/src/test/java/com/thoughtworks/go/config/CruiseConfigTestBase.java", "diffHunk": "@@ -811,24 +814,27 @@ public void getAllUniquePostCommitSchedulableMaterials_shouldReturnMaterialsWith\n     }\n \n     @Test\n-    public void getAllUniquePostCommitSchedulableMaterials_shouldReturnMaterialsWithAutoUpdateFalseAndConfigRepos() {\n-        GitMaterialConfig gitAutoMaterial = MaterialConfigsMother.gitMaterialConfig(\"url\");\n-        PipelineConfig pipelineAuto = pipelineConfig(\"pipelineAuto\", new MaterialConfigs(gitAutoMaterial));\n-        GitMaterialConfig gitNonAutoMaterial = git(new UrlArgument(\"other-url\"), null, null, \"master\", \"dest\", false, null, false, null, new CaseInsensitiveString(\"git\"), false);\n-        PipelineConfig pipelineTriggerable = pipelineConfig(\"pipelineTriggerable\", new MaterialConfigs(gitNonAutoMaterial));\n+    public void getAllUniquePostCommitSchedulableMaterials_shouldReturnMaterialsAndConfigReposWithAutoUpdateFalse() {\n+        GitMaterialConfig gitMaterialAuto = MaterialConfigsMother.gitMaterialConfig(\"url\");\n+        PipelineConfig pipelineAuto = pipelineConfig(\"pipelineAuto\", new MaterialConfigs(gitMaterialAuto));\n+        GitMaterialConfig gitMaterialManual = git(new UrlArgument(\"other-url\"), null, null, \"master\", \"dest\", false, null, false, null, new CaseInsensitiveString(\"git\"), false);\n+        PipelineConfig pipelineTriggerable = pipelineConfig(\"pipelineTriggerable\", new MaterialConfigs(gitMaterialManual));\n         PipelineConfigs defaultGroup = createGroup(\"defaultGroup\", pipelineAuto, pipelineTriggerable);\n \n         cruiseConfig = new BasicCruiseConfig(defaultGroup);\n         ConfigReposConfig reposConfig = new ConfigReposConfig();\n-        GitMaterialConfig configRepoMaterial = git(\"http://git\");\n-        reposConfig.add(ConfigRepoConfig.createConfigRepoConfig(configRepoMaterial, \"myplug\", \"id\"));\n+        GitMaterialConfig configRepoMaterialAutoUpdate = git(\"http://git\");\n+        GitMaterialConfig configRepoMaterialManual = tap(git(\"http://git2\"), g -> g.setAutoUpdate(false));\n+        reposConfig.add(ConfigRepoConfig.createConfigRepoConfig(configRepoMaterialAutoUpdate, \"myplug\", \"exclude\"));\n+        reposConfig.add(ConfigRepoConfig.createConfigRepoConfig(configRepoMaterialManual, \"myplug\", \"include\"));\n         cruiseConfig.setConfigRepos(reposConfig);\n \n \n         Set<MaterialConfig> materials = cruiseConfig.getAllUniquePostCommitSchedulableMaterials();\n         assertThat(materials.size(), is(2));\n-        assertThat(materials, hasItem(gitNonAutoMaterial));\n-        assertThat(materials, hasItem(configRepoMaterial));\n+        assertThat(materials, hasItem(gitMaterialManual));\n+        assertThat(materials, hasItem(configRepoMaterialManual));\n+        assertThat(materials, not(hasItem(configRepoMaterialAutoUpdate)));", "originalCommit": "91cc0c42eed9ec076ca2fb9cc9f3e55146d44152", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}