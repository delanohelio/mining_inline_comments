{"pr_number": 8628, "pr_title": "Do not run database migration for server in standby", "pr_createdAt": "2020-10-09T04:49:50Z", "pr_url": "https://github.com/gocd/gocd/pull/8628", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0MTM1NQ==", "url": "https://github.com/gocd/gocd/pull/8628#discussion_r505141355", "bodyText": "intentional indent?", "author": "GaneshSPatil", "createdAt": "2020-10-15T03:22:28Z", "path": "server/src/main/java/com/thoughtworks/go/server/database/Database.java", "diffHunk": "@@ -31,15 +32,23 @@\n import java.util.function.Function;\n \n @Component\n+@Slf4j\n public class Database {\n \n     private final ConnectionManager connectionManager;\n     private SystemEnvironment systemEnvironment;\n+    private DatabaseMigrator databaseMigrator;\n \n     @Autowired\n     public Database(SystemEnvironment systemEnvironment) {\n-        this.connectionManager = new ConnectionManager(System.getProperties(), systemEnvironment.configDir(), decryptionFunction());\n+        this(systemEnvironment, new ConnectionManager(System.getProperties(), systemEnvironment.configDir(), decryptionFunction()),\n+                new DatabaseMigrator());", "originalCommit": "e2d9a9c355d4b1c9104db358c08b63e730a1c6f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0ODAyMQ==", "url": "https://github.com/gocd/gocd/pull/8628#discussion_r505148021", "bodyText": "Yes", "author": "maheshp", "createdAt": "2020-10-15T03:49:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0MTM1NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "b041c7501c5d7d35e37380527c32ee547c591929", "url": "https://github.com/gocd/gocd/commit/b041c7501c5d7d35e37380527c32ee547c591929", "message": "Do not run database migration for server in standby\n\n* After moving to liquibase, as part of database upgrade\n  liquibase tries to update the 'databasechangeloglock' table to\n  take a lock. While using Business Continuity, this update fails on\n  the secondary server running in a standby mode which is connected\n  to a database which is configured to be in standby mode as well.\n* This commit ensures a db migration is not run on a server in standby.\n  When using business continuity, the database replication should take\n  care of syncing migrations from primary to secondary db.", "committedDate": "2020-10-15T06:41:14Z", "type": "commit"}, {"oid": "b041c7501c5d7d35e37380527c32ee547c591929", "url": "https://github.com/gocd/gocd/commit/b041c7501c5d7d35e37380527c32ee547c591929", "message": "Do not run database migration for server in standby\n\n* After moving to liquibase, as part of database upgrade\n  liquibase tries to update the 'databasechangeloglock' table to\n  take a lock. While using Business Continuity, this update fails on\n  the secondary server running in a standby mode which is connected\n  to a database which is configured to be in standby mode as well.\n* This commit ensures a db migration is not run on a server in standby.\n  When using business continuity, the database replication should take\n  care of syncing migrations from primary to secondary db.", "committedDate": "2020-10-15T06:41:14Z", "type": "forcePushed"}]}