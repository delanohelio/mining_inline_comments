{"pr_number": 3425, "pr_title": "The shutdown hook wasn't starting the right thread and leaking the ca\u2026", "pr_createdAt": "2020-05-25T12:14:04Z", "pr_url": "https://github.com/eclipse-vertx/vert.x/pull/3425", "timeline": [{"oid": "24ab84a119a1a27e92ca4b1f6ea6798c2273cede", "url": "https://github.com/eclipse-vertx/vert.x/commit/24ab84a119a1a27e92ca4b1f6ea6798c2273cede", "message": "The shutdown hook wasn't starting the right thread and leaking the cacheDir to null while still in use\n\nSigned-off-by: Paulo Lopes <pmlopes@gmail.com>", "committedDate": "2020-05-25T12:12:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwMzg0Mg==", "url": "https://github.com/eclipse-vertx/vert.x/pull/3425#discussion_r429903842", "bodyText": "instead of a Latch use thread.join on the thread that was started", "author": "vietj", "createdAt": "2020-05-25T12:16:28Z", "path": "src/main/java/io/vertx/core/file/impl/FileResolver.java", "diffHunk": "@@ -377,31 +377,29 @@ private ClassLoader getClassLoader() {\n     return cl;\n   }\n \n-  private void setupCacheDir() {\n-    String cacheDirName = fileCacheDir + \"/file-cache-\" + UUID.randomUUID().toString();\n+  private synchronized void setupCacheDir(String id) {\n+    String cacheDirName = fileCacheDir + \"/file-cache-\" + id;\n     cacheDir = new File(cacheDirName);\n     if (!cacheDir.mkdirs()) {\n       throw new IllegalStateException(\"Failed to create cache dir: \" + cacheDirName);\n     }\n     // Add shutdown hook to delete on exit\n-    synchronized (this) {\n-      shutdownHook = new Thread(() -> {\n-        CountDownLatch latch = new CountDownLatch(1);\n-        new Thread(() -> {\n-          try {\n-            deleteCacheDir();\n-          } catch (IOException ignore) {\n-          }\n-          latch.countDown();\n-        }).run();\n+    shutdownHook = new Thread(() -> {\n+      CountDownLatch latch = new CountDownLatch(1);\n+      new Thread(() -> {\n         try {\n-          latch.await(10, TimeUnit.SECONDS);\n-        } catch (InterruptedException e) {\n-          Thread.currentThread().interrupt();\n+          deleteCacheDir();\n+        } catch (IOException ignore) {\n         }\n-      });\n-      Runtime.getRuntime().addShutdownHook(shutdownHook);\n-    }\n+        latch.countDown();\n+      }).start();\n+      try {\n+        latch.await(10, TimeUnit.SECONDS);", "originalCommit": "24ab84a119a1a27e92ca4b1f6ea6798c2273cede", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9176eba74dcb538f9e12ce2e6c69806110e9807c", "chunk": "diff --git a/src/main/java/io/vertx/core/file/impl/FileResolver.java b/src/main/java/io/vertx/core/file/impl/FileResolver.java\nindex 85afc9fe8..4eb56d5bc 100644\n--- a/src/main/java/io/vertx/core/file/impl/FileResolver.java\n+++ b/src/main/java/io/vertx/core/file/impl/FileResolver.java\n\n@@ -385,16 +383,16 @@ public class FileResolver {\n     }\n     // Add shutdown hook to delete on exit\n     shutdownHook = new Thread(() -> {\n-      CountDownLatch latch = new CountDownLatch(1);\n-      new Thread(() -> {\n+      final Thread deleteCacheDirThread = new Thread(() -> {\n         try {\n           deleteCacheDir();\n         } catch (IOException ignore) {\n         }\n-        latch.countDown();\n-      }).start();\n+      });\n+      // start the thread\n+      deleteCacheDirThread.start();\n       try {\n-        latch.await(10, TimeUnit.SECONDS);\n+        deleteCacheDirThread.join(10 * 1000);\n       } catch (InterruptedException e) {\n         Thread.currentThread().interrupt();\n       }\n"}}, {"oid": "9176eba74dcb538f9e12ce2e6c69806110e9807c", "url": "https://github.com/eclipse-vertx/vert.x/commit/9176eba74dcb538f9e12ce2e6c69806110e9807c", "message": "Avoid using latch, use the Thread join method instead\n\nSigned-off-by: Paulo Lopes <pmlopes@gmail.com>", "committedDate": "2020-05-25T12:48:55Z", "type": "commit"}]}