{"pr_number": 989, "pr_title": "Add support for SameSite attribute in Cookies", "pr_createdAt": "2020-03-30T18:01:49Z", "pr_url": "https://github.com/apple/servicetalk/pull/989", "timeline": [{"oid": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4", "url": "https://github.com/apple/servicetalk/commit/63c4de5c0ac0ab7b79beb4827b0d5711941700b4", "message": "Add support for SameSite attribute in Cookies\n\nMotivation:\nThere is a revision of the HTTP cookies RFC (6265) in review which adds\na new SameSite attribute\nhttps://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7.\n\nModifications:\n- Add the SameSite attribute support to the SetCookies related APIs\n\nResult:\nHttpSetCookies now support the SameSite attribute.", "committedDate": "2020-03-30T18:00:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4OTA4NA==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400389084", "bodyText": "note this PR breaks the public APIs in a few spots (here and constructor of DeafultHttpSetCookie). it could be done in alternative ways but at this point we are still breaking APIs and I'm assuming minimal direct implement/use these APIs.", "author": "Scottmitch", "createdAt": "2020-03-30T18:03:27Z", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/HttpSetCookie.java", "diffHunk": "@@ -55,6 +55,15 @@\n     @Nullable\n     CharSequence expires();\n \n+    /**\n+     * Get the value for the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n+     * @return The value for the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n+     */\n+    @Nullable\n+    SameSite sameSite();", "originalCommit": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NjEwMA==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400446100", "bodyText": "You could also add a default implementation if you want to minimise breakage... not sure this is needed tho.", "author": "normanmaurer", "createdAt": "2020-03-30T19:38:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4OTA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3MjgzNw==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400572837", "bodyText": "Ack; I think it is OK to break APIs now.", "author": "NiteshKant", "createdAt": "2020-03-31T00:27:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4OTA4NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MjQ3NQ==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400442475", "bodyText": "I just wondered why 16 now... Seems like 8 should be enough ?", "author": "normanmaurer", "createdAt": "2020-03-30T19:31:58Z", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -45,13 +50,14 @@\n      * if/else block we lean on {@link HttpHeaders} which provides an associative array that compares keys in a case\n      * case-insensitive manner.\n      */\n-    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(8, false, false);\n+    private static final HttpHeaders AV_FIELD_NAMES = new DefaultHttpHeaders(16, false, false);", "originalCommit": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NTM4Nw==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400455387", "bodyText": "8 and 16 are both functional, but 8 lead to overlap in a bucket between 2 entries and 16 makes it so there is no overlap.", "author": "Scottmitch", "createdAt": "2020-03-30T19:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MjQ3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3MDA3NQ==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400570075", "bodyText": "javadoc mentions 8 which is stale now.", "author": "NiteshKant", "createdAt": "2020-03-31T00:18:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MjQ3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3Nzk0Nw==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400577947", "bodyText": "javadoc fixed", "author": "Scottmitch", "createdAt": "2020-03-31T00:45:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MjQ3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d6bc3ea4c86d28025e448decdfbff27864af7b70", "chunk": "diff --git a/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java b/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java\nindex 9a0939de6..aef21831d 100644\n--- a/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java\n+++ b/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java\n\n@@ -42,7 +42,7 @@ public final class DefaultHttpSetCookie implements HttpSetCookie {\n     private static final String ENCODED_LABEL_SAMESITE = \"; samesite=\";\n \n     /**\n-     * An underlying size of 8 has been shown with the current {@link AsciiBuffer} hash algorithm to have no collisions\n+     * An underlying size of 16 has been shown with the current {@link AsciiBuffer} hash algorithm to have no collisions\n      * with the current set of supported cookie names. If more cookie names are supported, or the hash algorithm changes\n      * this initial value should be re-evaluated.\n      * <p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MzI1MQ==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400443251", "bodyText": "not really related to this PR but I wondered if you may want to consider adding a Builder at some point as these are quite a few params for a constructor.", "author": "normanmaurer", "createdAt": "2020-03-30T19:33:23Z", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -111,18 +119,21 @@ public DefaultHttpSetCookie(final CharSequence name, final CharSequence value,\n      * @param secure the <a href=\"https://tools.ietf.org/html/rfc6265#section-4.1.1\">secure-av</a>.\n      * @param httpOnly the <a href=\"https://tools.ietf.org/html/rfc6265#section-4.1.1\">httponly-av</a> (see\n      * <a href=\"http://www.owasp.org/index.php/HTTPOnly\">HTTP-only</a>).\n+     * @param sameSite the\n+     * <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-05#section-5.3.7\">SameSite attribute</a>.\n      */\n     public DefaultHttpSetCookie(final CharSequence name, final CharSequence value, @Nullable final CharSequence path,\n                                 @Nullable final CharSequence domain, @Nullable final CharSequence expires,\n-                                @Nullable final Long maxAge, final boolean wrapped, final boolean secure,\n-                                final boolean httpOnly) {\n+                                @Nullable final Long maxAge, @Nullable final SameSite sameSite, final boolean wrapped,\n+                                final boolean secure, final boolean httpOnly) {", "originalCommit": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NTYwNg==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400455606", "bodyText": "lets consider for a followup PR.", "author": "Scottmitch", "createdAt": "2020-03-30T19:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0MzI1MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0Mzg0MA==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400443840", "bodyText": "why you even need this if its checked in the constructor ?", "author": "normanmaurer", "createdAt": "2020-03-30T19:34:25Z", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -277,7 +295,9 @@ static HttpSetCookie parseSetCookie(final CharSequence setCookieString, boolean\n             }\n         }\n \n-        return new DefaultHttpSetCookie(name, value, path, domain, expires, maxAge, isWrapped, isSecure, isHttpOnly);\n+        assert name != null && value != null; // these are checked at runtime in the constructor", "originalCommit": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NTkzNg==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400455936", "bodyText": "IntelliJ flags this as a warning (e.g. passing in arguments that maybe null that are no annotated with @Nullable).", "author": "Scottmitch", "createdAt": "2020-03-30T19:56:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0Mzg0MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NDM5NQ==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400444395", "bodyText": "nit: the toString() is not needed.", "author": "normanmaurer", "createdAt": "2020-03-30T19:35:18Z", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -373,6 +400,10 @@ public CharSequence encoded() {\n             sb.append(ENCODED_LABEL_MAX_AGE);\n             sb.append(maxAge);\n         }\n+        if (sameSite != null) {\n+            sb.append(ENCODED_LABEL_SAMESITE);\n+            sb.append(sameSite.toString());", "originalCommit": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2MTY5MA==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400461690", "bodyText": "done", "author": "Scottmitch", "createdAt": "2020-03-30T20:07:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NDM5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "db38d73452deeffe1ec9ba102dba3bf48b7272fa", "chunk": "diff --git a/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java b/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java\nindex 9a0939de6..040f1f969 100644\n--- a/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java\n+++ b/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java\n\n@@ -402,7 +402,7 @@ public final class DefaultHttpSetCookie implements HttpSetCookie {\n         }\n         if (sameSite != null) {\n             sb.append(ENCODED_LABEL_SAMESITE);\n-            sb.append(sameSite.toString());\n+            sb.append(sameSite);\n         }\n         if (httpOnly) {\n             sb.append(ENCODED_LABEL_HTTP_ONLY);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NzU1OA==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400447558", "bodyText": "nit: you could optimize this with a switch statement:\nswitch (length) {\n    // lax\n    case 3: \n       ....\n    // none\n    case 4:\n       ....\n    // strict\n    case 6:\n       ...\n    default:\n        return null;\n\n}", "author": "normanmaurer", "createdAt": "2020-03-30T19:41:25Z", "path": "servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java", "diffHunk": "@@ -447,6 +479,35 @@ public CharSequence subSequence(final int start, final int end) {\n         }\n     }\n \n+    @Nullable\n+    private static SameSite fromSequence(CharSequence cs, int begin, int end) {\n+        final int length = end - begin;\n+        if (length == Lax.toString().length()) {", "originalCommit": "63c4de5c0ac0ab7b79beb4827b0d5711941700b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2ODk3NA==", "url": "https://github.com/apple/servicetalk/pull/989#discussion_r400468974", "bodyText": "done", "author": "Scottmitch", "createdAt": "2020-03-30T20:20:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NzU1OA=="}], "type": "inlineReview", "revised_code": {"commit": "db38d73452deeffe1ec9ba102dba3bf48b7272fa", "chunk": "diff --git a/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java b/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java\nindex 9a0939de6..040f1f969 100644\n--- a/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java\n+++ b/servicetalk-http-api/src/main/java/io/servicetalk/http/api/DefaultHttpSetCookie.java\n\n@@ -481,29 +481,34 @@ public final class DefaultHttpSetCookie implements HttpSetCookie {\n \n     @Nullable\n     private static SameSite fromSequence(CharSequence cs, int begin, int end) {\n-        final int length = end - begin;\n-        if (length == Lax.toString().length()) {\n-            if (toLowerCase(cs.charAt(begin)) == 'l' &&\n-                    toLowerCase(cs.charAt(begin + 1)) == 'a' &&\n-                    toLowerCase(cs.charAt(begin + 2)) == 'x') {\n-                return Lax;\n-            }\n-        } else if (length == None.toString().length()) {\n-            if (toLowerCase(cs.charAt(begin)) == 'n' &&\n-                    toLowerCase(cs.charAt(begin + 1)) == 'o' &&\n-                    toLowerCase(cs.charAt(begin + 2)) == 'n' &&\n-                    toLowerCase(cs.charAt(begin + 3)) == 'e') {\n-                return None;\n-            }\n-        } else if (length == Strict.toString().length()) {\n-            if (toLowerCase(cs.charAt(begin)) == 's' &&\n-                    toLowerCase(cs.charAt(begin + 1)) == 't' &&\n-                    toLowerCase(cs.charAt(begin + 2)) == 'r' &&\n-                    toLowerCase(cs.charAt(begin + 3)) == 'i' &&\n-                    toLowerCase(cs.charAt(begin + 4)) == 'c' &&\n-                    toLowerCase(cs.charAt(begin + 5)) == 't') {\n-                return Strict;\n-            }\n+        switch (end - begin) {\n+            case 3:\n+                if (equalsIgnoreCaseLower(cs.charAt(begin), 'l') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 1), 'a') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 2), 'x')) {\n+                    return Lax;\n+                }\n+                break;\n+            case 4:\n+                if (equalsIgnoreCaseLower(cs.charAt(begin), 'n') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 1), 'o') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 2), 'n') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 3), 'e')) {\n+                    return None;\n+                }\n+                break;\n+            case 6:\n+                if (equalsIgnoreCaseLower(cs.charAt(begin), 's') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 1), 't') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 2), 'r') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 3), 'i') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 4), 'c') &&\n+                    equalsIgnoreCaseLower(cs.charAt(begin + 5), 't')) {\n+                    return Strict;\n+                }\n+                break;\n+            default:\n+                break;\n         }\n         return null;\n     }\n"}}, {"oid": "db38d73452deeffe1ec9ba102dba3bf48b7272fa", "url": "https://github.com/apple/servicetalk/commit/db38d73452deeffe1ec9ba102dba3bf48b7272fa", "message": "review comments", "committedDate": "2020-03-30T20:22:04Z", "type": "commit"}, {"oid": "d6bc3ea4c86d28025e448decdfbff27864af7b70", "url": "https://github.com/apple/servicetalk/commit/d6bc3ea4c86d28025e448decdfbff27864af7b70", "message": "update javadocs", "committedDate": "2020-03-31T00:45:30Z", "type": "commit"}]}