{"pr_number": 1124, "pr_title": "Propagate ConnectionObserver without channel attribute", "pr_createdAt": "2020-08-12T17:19:08Z", "pr_url": "https://github.com/apple/servicetalk/pull/1124", "timeline": [{"oid": "aa7912f90364bf531a1cd8b5980947d82f8284ff", "url": "https://github.com/apple/servicetalk/commit/aa7912f90364bf531a1cd8b5980947d82f8284ff", "message": "Reduce usage of `Channel` attributes\n\nMotivation:\n\nUsage of `Channel`'s attributes increase a shared state of the `Channel`.\n\nModifications:\n\n- Introduce `ObservabilityProvider` to share observers between different\nlayers instead of using `Channel` attributes;\n- Eliminate usage of `CONNECTION_OBSERVER` attribute;\n- Eliminate usage of `SECURITY_HANDSHAKE_OBSERVER` attribute;\n- Use `ChannelCloseUtils` to register a reason exception for `Channel` closure;\n- Improve tests related to stream and connection closure;\n\nResult:\n\nLess state on the `Channel` instance, better handling of the close reason.", "committedDate": "2020-08-12T01:34:25Z", "type": "commit"}, {"oid": "1598de173abdadbe4c8955edb6635def81e82c63", "url": "https://github.com/apple/servicetalk/commit/1598de173abdadbe4c8955edb6635def81e82c63", "message": "fix quality warnings", "committedDate": "2020-08-12T17:34:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMTYxNg==", "url": "https://github.com/apple/servicetalk/pull/1124#discussion_r469611616", "bodyText": "I do not quite understand the reasoning behind this class. connectionObserver and handshakeObserver references are temporary, i.e. they can only be retrieved once which makes the contract very error prone and not very different than the connection attribute approach. My hope was that we can be explicit in contract while passing these objects between classes, can we try doing that?", "author": "NiteshKant", "createdAt": "2020-08-12T23:58:00Z", "path": "servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/ObservabilityProvider.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.transport.netty.internal;\n+\n+import io.servicetalk.transport.api.ConnectionObserver;\n+import io.servicetalk.transport.api.ConnectionObserver.SecurityHandshakeObserver;\n+import io.servicetalk.transport.api.TransportObserver;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A helper class which allows sharing observers between different layers and handlers.\n+ */\n+public final class ObservabilityProvider {", "originalCommit": "1598de173abdadbe4c8955edb6635def81e82c63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkyMzYyMQ==", "url": "https://github.com/apple/servicetalk/pull/1124#discussion_r470923621", "bodyText": "Updated according to the approach we discussed offline. Looks a lot better now!\nI will kill SECURITY_HANDSHAKE_OBSERVER in a follow-up PR.\nWill keep ChannelCloseUtils here, because it's related to the ConnectionObserver and there was a bug in tests that is fixed now.", "author": "idelpivnitskiy", "createdAt": "2020-08-15T01:52:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMTYxNg=="}], "type": "inlineReview", "revised_code": {"commit": "a09ec7c0578b33d118f12f211c27ed5a05d5a52d", "chunk": "diff --git a/servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/ObservabilityProvider.java b/servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/ObservabilityProvider.java\ndeleted file mode 100644\nindex e8c2dff09..000000000\n--- a/servicetalk-transport-netty-internal/src/main/java/io/servicetalk/transport/netty/internal/ObservabilityProvider.java\n+++ /dev/null\n\n@@ -1,79 +0,0 @@\n-/*\n- * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package io.servicetalk.transport.netty.internal;\n-\n-import io.servicetalk.transport.api.ConnectionObserver;\n-import io.servicetalk.transport.api.ConnectionObserver.SecurityHandshakeObserver;\n-import io.servicetalk.transport.api.TransportObserver;\n-\n-import javax.annotation.Nullable;\n-\n-/**\n- * A helper class which allows sharing observers between different layers and handlers.\n- */\n-public final class ObservabilityProvider {\n-\n-    private final TransportObserver transportObserver;\n-    @Nullable\n-    private ConnectionObserver connectionObserver;\n-    @Nullable\n-    private SecurityHandshakeObserver handshakeObserver;\n-\n-    private ObservabilityProvider(final TransportObserver transportObserver) {\n-        this.transportObserver = transportObserver;\n-    }\n-\n-    @Nullable\n-    public static ObservabilityProvider newObservabilityProvider(@Nullable final TransportObserver observer) {\n-        return observer == null ? null : new ObservabilityProvider(observer);\n-    }\n-\n-    ConnectionObserver onNewConnection() {\n-        assert connectionObserver == null;\n-        return connectionObserver = transportObserver.onNewConnection();\n-    }\n-\n-    /**\n-     * Returns current {@link ConnectionObserver}.\n-     *\n-     * @return current {@link ConnectionObserver}.\n-     */\n-    public ConnectionObserver connectionObserver() {\n-        final ConnectionObserver connectionObserver = this.connectionObserver;\n-        assert connectionObserver != null;\n-        this.connectionObserver = null; // Clear the reference to allow GC to destroy the object.\n-        return connectionObserver;\n-    }\n-\n-    void onSecurityHandshake() {\n-        assert handshakeObserver == null;\n-        final ConnectionObserver connectionObserver = this.connectionObserver;\n-        assert connectionObserver != null;\n-        handshakeObserver = connectionObserver.onSecurityHandshake();\n-    }\n-\n-    /**\n-     * Returns current {@link SecurityHandshakeObserver}.\n-     *\n-     * @return current {@link SecurityHandshakeObserver}.\n-     */\n-    public SecurityHandshakeObserver handshakeObserver() {\n-        final SecurityHandshakeObserver handshakeObserver = this.handshakeObserver;\n-        assert handshakeObserver != null;\n-        // Do not clear the reference to observe renegotiation.\n-        return handshakeObserver;\n-    }\n-}\n"}}, {"oid": "a09ec7c0578b33d118f12f211c27ed5a05d5a52d", "url": "https://github.com/apple/servicetalk/commit/a09ec7c0578b33d118f12f211c27ed5a05d5a52d", "message": "Kill `ObservabilityProvider`", "committedDate": "2020-08-15T01:35:14Z", "type": "commit"}, {"oid": "48749b31f51d38257a8fa5cdd371c37f85e2f6b8", "url": "https://github.com/apple/servicetalk/commit/48749b31f51d38257a8fa5cdd371c37f85e2f6b8", "message": "Rename `TransportObserverInitializer` -> `ConnectionObserverInitializer`", "committedDate": "2020-08-15T01:47:12Z", "type": "commit"}, {"oid": "a58cf1c8badc4ae2a3f5ec44dd73fe06baa4291e", "url": "https://github.com/apple/servicetalk/commit/a58cf1c8badc4ae2a3f5ec44dd73fe06baa4291e", "message": "Convert to safe observer", "committedDate": "2020-08-15T03:45:59Z", "type": "commit"}, {"oid": "7c0f1fb42130d15ef0d7944c5cbbbd008461360e", "url": "https://github.com/apple/servicetalk/commit/7c0f1fb42130d15ef0d7944c5cbbbd008461360e", "message": "Improve verify ordering for echoRequestResponse to avoid flaky behavior", "committedDate": "2020-08-17T21:36:51Z", "type": "commit"}, {"oid": "b16b9c865dc26cb3cf4a2fedd0d5a067fdb80144", "url": "https://github.com/apple/servicetalk/commit/b16b9c865dc26cb3cf4a2fedd0d5a067fdb80144", "message": "Fix DeferSslHandler", "committedDate": "2020-08-17T21:51:51Z", "type": "commit"}]}