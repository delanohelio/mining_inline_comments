{"pr_number": 1153, "pr_title": "Unix Domain Sockets HttpClientBuilder fixes", "pr_createdAt": "2020-09-16T02:25:35Z", "pr_url": "https://github.com/apple/servicetalk/pull/1153", "timeline": [{"oid": "cc05a2f2a13fa3623549786b4d43fadff124696f", "url": "https://github.com/apple/servicetalk/commit/cc05a2f2a13fa3623549786b4d43fadff124696f", "message": "Unix Domain Sockets HttpClientBuilder fixes\n\nMotivation:\nUDS is supported by ServicetTalk by passing in a DomainSocketAddress\naddress. However the HttpClientBuilder had some restrictions/assumptions\nabout the address type which prevented its use.\n\nModifications:\n- Relax assumptions/restrictions in the HttpClientBuilder to allow for\nDomainSocketAddress\n- Add unit test to demonstrate UDS\n- Add example for UDS\n\nResult:\nUDS client is now working and tested.", "committedDate": "2020-09-16T02:22:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODUyOQ==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489168529", "bodyText": "May be in a separate PR: can you please remove get prefix from DomainSocketAddress#getPath() method for consistency with other API?", "author": "idelpivnitskiy", "createdAt": "2020-09-16T05:17:59Z", "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/BlockingUdsServer.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.http.uds.blocking;\n+\n+import io.servicetalk.http.netty.HttpServers;\n+import io.servicetalk.transport.api.DomainSocketAddress;\n+\n+import java.io.File;\n+\n+import static io.servicetalk.examples.http.uds.blocking.UdsUtils.udsAddress;\n+import static io.servicetalk.http.api.HttpSerializationProviders.textSerializer;\n+\n+/**\n+ * <a href=\"http://man7.org/linux/man-pages/man7/unix.7.html\">AF_UNIX socket</a> server example.\n+ */\n+public final class BlockingUdsServer {\n+    public static void main(String[] args) throws Exception {\n+        DomainSocketAddress udsAddress = udsAddress();\n+        try {\n+            HttpServers.forAddress(udsAddress)\n+                    .listenBlockingAndAwait((ctx, request, responseFactory) ->\n+                            responseFactory.ok().payloadBody(\"Hello World!\", textSerializer()))\n+                    .awaitShutdown();\n+        } finally {\n+            new File(udsAddress.getPath()).delete(); // After the server is done, clean up the file.", "originalCommit": "cc05a2f2a13fa3623549786b4d43fadff124696f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3Njc1NQ==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489576755", "bodyText": "Separate PR, I'm not sure this is worth breaking APIs over.", "author": "Scottmitch", "createdAt": "2020-09-16T16:41:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3ODgxOA==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489578818", "bodyText": "Sounds good, looks like DomainSocketAddress was not useful before this PR, should be ok to change API.", "author": "idelpivnitskiy", "createdAt": "2020-09-16T16:45:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "7bfc17ef16b821306565b59cbead401d0a0cdd2e", "chunk": "diff --git a/servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/BlockingUdsServer.java b/servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/BlockingUdsServer.java\nindex d5c696e4d..d01a285bd 100644\n--- a/servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/BlockingUdsServer.java\n+++ b/servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/BlockingUdsServer.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MTMxOQ==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489171319", "bodyText": "Consider using File#createTempFile instead of requiring a system property to simplify the example.", "author": "idelpivnitskiy", "createdAt": "2020-09-16T05:27:19Z", "path": "servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/UdsUtils.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.examples.http.uds.blocking;\n+\n+import io.servicetalk.transport.api.DomainSocketAddress;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+public final class UdsUtils {\n+    /**\n+     * Create a {@link DomainSocketAddress} that is backed by a fixed file such that different JVMs\n+     * can use it to communicate via UDS.\n+     * @return a {@link DomainSocketAddress} that is backed by a fixed file such that different JVMs\n+     * can use it to communicate via UDS.\n+     */\n+    public static DomainSocketAddress udsAddress() {\n+        final String tempDirProp = \"java.io.tmpdir\";\n+        final String tempDir = System.getProperty(tempDirProp);\n+        if (tempDir == null) {\n+            throw new IllegalStateException(\"unable to find \" + tempDirProp + \" in System properties\");", "originalCommit": "cc05a2f2a13fa3623549786b4d43fadff124696f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2MjcyMg==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489262722", "bodyText": "I believe a fixed name is needed, not a random one, the File#createTempFile wouldn't work in that case", "author": "tkountis", "createdAt": "2020-09-16T08:36:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MTMxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MzEwNA==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489553104", "bodyText": "+1 to what @tkountis said. Random file name is not suitable for this use case. The system property is set by the JVM [1] and this code is just a bit defensive.\n[1] https://docs.oracle.com/javase/8/docs/api/java/lang/System.html", "author": "Scottmitch", "createdAt": "2020-09-16T16:03:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MTMxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "7bfc17ef16b821306565b59cbead401d0a0cdd2e", "chunk": "diff --git a/servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/UdsUtils.java b/servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/UdsUtils.java\nindex b030d2e71..c2364b744 100644\n--- a/servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/UdsUtils.java\n+++ b/servicetalk-examples/http/uds/src/main/java/io/servicetalk/examples/http/uds/blocking/UdsUtils.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright \u00a9 2018 Apple Inc. and the ServiceTalk project authors\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MzMyNw==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489173327", "bodyText": "Why the @Nullable required now?", "author": "idelpivnitskiy", "createdAt": "2020-09-16T05:34:16Z", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "diffHunk": "@@ -495,6 +495,7 @@ HttpExecutionStrategyInfluencer buildStrategyInfluencerForClient(HttpExecutionSt\n         return influencerChainBuilder.buildForClient(strategy);\n     }\n \n+    @Nullable", "originalCommit": "cc05a2f2a13fa3623549786b4d43fadff124696f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0MDAxMg==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489540012", "bodyText": "good call, not needed. was returning null at one point during development.", "author": "Scottmitch", "createdAt": "2020-09-16T15:44:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MzMyNw=="}], "type": "inlineReview", "revised_code": {"commit": "7bfc17ef16b821306565b59cbead401d0a0cdd2e", "chunk": "diff --git a/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java b/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java\nindex 3ab37ca36..f4ffc989c 100644\n--- a/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java\n+++ b/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java\n\n@@ -495,7 +496,6 @@ final class DefaultSingleAddressHttpClientBuilder<U, R> extends SingleAddressHtt\n         return influencerChainBuilder.buildForClient(strategy);\n     }\n \n-    @Nullable\n     private CharSequence toAuthorityForm(final U address) {\n         if (address instanceof CharSequence) {\n             return (CharSequence) address;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3NjQ1MQ==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489176451", "bodyText": "Should R extend SocketAddress?", "author": "idelpivnitskiy", "createdAt": "2020-09-16T05:44:13Z", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "diffHunk": "@@ -179,9 +179,9 @@ private DefaultSingleAddressHttpClientBuilder(@Nullable final U address,\n                 globalDnsServiceDiscoverer());\n     }\n \n-    static <U> DefaultSingleAddressHttpClientBuilder<U, InetSocketAddress> forResolvedAddress(\n-            final U u, final InetSocketAddress address) {\n-        ServiceDiscoverer<U, InetSocketAddress, ServiceDiscovererEvent<InetSocketAddress>> sd =\n+    static <U, R> DefaultSingleAddressHttpClientBuilder<U, R> forResolvedAddress(", "originalCommit": "cc05a2f2a13fa3623549786b4d43fadff124696f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUzOTYwNg==", "url": "https://github.com/apple/servicetalk/pull/1153#discussion_r489539606", "bodyText": "done. somewhat on the fence if we need to take a dependency on the marker base class in our APIs, but we should be able to relax the generic constraints later if necessary.", "author": "Scottmitch", "createdAt": "2020-09-16T15:43:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3NjQ1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7bfc17ef16b821306565b59cbead401d0a0cdd2e", "chunk": "diff --git a/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java b/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java\nindex 3ab37ca36..f4ffc989c 100644\n--- a/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java\n+++ b/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java\n\n@@ -179,7 +180,7 @@ final class DefaultSingleAddressHttpClientBuilder<U, R> extends SingleAddressHtt\n                 globalDnsServiceDiscoverer());\n     }\n \n-    static <U, R> DefaultSingleAddressHttpClientBuilder<U, R> forResolvedAddress(\n+    static <U, R extends SocketAddress> DefaultSingleAddressHttpClientBuilder<U, R> forResolvedAddress(\n             final U u, final R address) {\n         ServiceDiscoverer<U, R, ServiceDiscovererEvent<R>> sd =\n                 new NoopServiceDiscoverer<>(u, address);\n"}}, {"oid": "7bfc17ef16b821306565b59cbead401d0a0cdd2e", "url": "https://github.com/apple/servicetalk/commit/7bfc17ef16b821306565b59cbead401d0a0cdd2e", "message": "review comments", "committedDate": "2020-09-16T16:00:48Z", "type": "commit"}]}