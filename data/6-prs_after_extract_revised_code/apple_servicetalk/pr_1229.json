{"pr_number": 1229, "pr_title": "Consolidate Test*Subscriber classes", "pr_createdAt": "2020-11-21T19:58:01Z", "pr_url": "https://github.com/apple/servicetalk/pull/1229", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIzNjUwNw==", "url": "https://github.com/apple/servicetalk/pull/1229#discussion_r528236507", "bodyText": "this is a change to real code, caught by updating the test utilities.", "author": "Scottmitch", "createdAt": "2020-11-21T19:59:43Z", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/PublisherConcatMapIterable.java", "diffHunk": "@@ -172,17 +177,22 @@ private void tryDrainIterator(ErrorHandlingStrategyInDrain errorHandlingStrategy\n                         switch (errorHandlingStrategyInDrain) {\n                             case PropagateAndCancel:\n                                 terminated = true;\n-                                doCancel();\n                                 safeOnError(target, cause);\n+                                doCancel();\n                                 return; // hard return to avoid potential for duplicate terminal events\n                             case Propagate:\n                                 terminated = true;\n                                 safeOnError(target, cause);\n+                                tryClose(currentIterator);\n                                 return; // hard return to avoid potential for duplicate terminal events\n                             case Throw:\n                                 // since we only request 1 at a time we maybe holding requestN demand, in this case we\n                                 // discard the current iterator and request 1 more from upstream (if there is demand).\n                                 hasNext = false;\n+                                thrown = true;", "originalCommit": "07133e14b10da963171b6db907727b747a4d5688", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MjIzOQ==", "url": "https://github.com/apple/servicetalk/pull/1229#discussion_r529092239", "bodyText": "moved to #1231", "author": "Scottmitch", "createdAt": "2020-11-24T00:53:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIzNjUwNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIzNjU2Mw==", "url": "https://github.com/apple/servicetalk/pull/1229#discussion_r528236563", "bodyText": "this is a change in real code, caught by test utility updates", "author": "Scottmitch", "createdAt": "2020-11-21T20:00:15Z", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/SingleConcatWithPublisher.java", "diffHunk": "@@ -120,20 +120,22 @@ public void request(long n) {\n                 if (oldVal == REQUESTED || oldVal == CANCELLED) {\n                     super.request(n);\n                     break;\n+                } else if (!isRequestNValid(n)) {", "originalCommit": "07133e14b10da963171b6db907727b747a4d5688", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA4Njg1Mg==", "url": "https://github.com/apple/servicetalk/pull/1229#discussion_r529086852", "bodyText": "moved to #1230", "author": "Scottmitch", "createdAt": "2020-11-24T00:37:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIzNjU2Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0a4de04d7b60ba9978eb44f355aeb3aa3b27953b", "url": "https://github.com/apple/servicetalk/commit/0a4de04d7b60ba9978eb44f355aeb3aa3b27953b", "message": "Consolidate Test*Subscriber classes\n\nMotivation:\nThere are 3 variants of test subscriber classes that have organically\nbeen added over time:\n- LegacyMocked*ListenerRule\n- concurrent.api.Test*Subscriber\n- concurrent.api.TestCollecting*Subscriber\n\nThere is no technical justification for the duplication, and some older\ntest utilities lend themselves toward violating the reactive streams\nspecification.\n\nModifications:\n- Remove all the of test utilities mentioned above\n- Create a servicetalk-concurrent-test-internal module with\nTestSubscribers build from concurrent.api.TestCollecting*Subscriber\n\nResult:\nThere is a single set of low-level, currently internal, Test*Subscriber\nclasses.", "committedDate": "2020-11-21T21:33:39Z", "type": "forcePushed"}, {"oid": "325268879b1e3945fc9fd389969ebe6730bb621b", "url": "https://github.com/apple/servicetalk/commit/325268879b1e3945fc9fd389969ebe6730bb621b", "message": "Consolidate Test*Subscriber classes\n\nMotivation:\nThere are 3 variants of test subscriber classes that have organically\nbeen added over time:\n- LegacyMocked*ListenerRule\n- concurrent.api.Test*Subscriber\n- concurrent.api.TestCollecting*Subscriber\n\nThere is no technical justification for the duplication, and some older\ntest utilities lend themselves toward violating the reactive streams\nspecification.\n\nModifications:\n- Remove all the of test utilities mentioned above\n- Create a servicetalk-concurrent-test-internal module with\nTestSubscribers build from concurrent.api.TestCollecting*Subscriber\n\nResult:\nThere is a single set of low-level, currently internal, Test*Subscriber\nclasses.", "committedDate": "2020-11-21T21:47:31Z", "type": "forcePushed"}, {"oid": "f8e83bce333e427b4e06f4027fc6033361f842c6", "url": "https://github.com/apple/servicetalk/commit/f8e83bce333e427b4e06f4027fc6033361f842c6", "message": "Consolidate Test*Subscriber classes\n\nMotivation:\nThere are 3 variants of test subscriber classes that have organically\nbeen added over time:\n- LegacyMocked*ListenerRule\n- concurrent.api.Test*Subscriber\n- concurrent.api.TestCollecting*Subscriber\n\nThere is no technical justification for the duplication, and some older\ntest utilities lend themselves toward violating the reactive streams\nspecification.\n\nModifications:\n- Remove all the of test utilities mentioned above\n- Create a servicetalk-concurrent-test-internal module with\nTestSubscribers build from concurrent.api.TestCollecting*Subscriber\n\nResult:\nThere is a single set of low-level, currently internal, Test*Subscriber\nclasses.", "committedDate": "2020-11-30T16:10:52Z", "type": "commit"}, {"oid": "f8e83bce333e427b4e06f4027fc6033361f842c6", "url": "https://github.com/apple/servicetalk/commit/f8e83bce333e427b4e06f4027fc6033361f842c6", "message": "Consolidate Test*Subscriber classes\n\nMotivation:\nThere are 3 variants of test subscriber classes that have organically\nbeen added over time:\n- LegacyMocked*ListenerRule\n- concurrent.api.Test*Subscriber\n- concurrent.api.TestCollecting*Subscriber\n\nThere is no technical justification for the duplication, and some older\ntest utilities lend themselves toward violating the reactive streams\nspecification.\n\nModifications:\n- Remove all the of test utilities mentioned above\n- Create a servicetalk-concurrent-test-internal module with\nTestSubscribers build from concurrent.api.TestCollecting*Subscriber\n\nResult:\nThere is a single set of low-level, currently internal, Test*Subscriber\nclasses.", "committedDate": "2020-11-30T16:10:52Z", "type": "forcePushed"}]}