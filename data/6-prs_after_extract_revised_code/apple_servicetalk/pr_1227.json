{"pr_number": 1227, "pr_title": "Make `HttpObjectDecoder` more RFC7230 compatible and other improvements", "pr_createdAt": "2020-11-20T03:15:08Z", "pr_url": "https://github.com/apple/servicetalk/pull/1227", "timeline": [{"oid": "3db09a6019dcfabfd2b36bfe0519025b1a738f16", "url": "https://github.com/apple/servicetalk/commit/3db09a6019dcfabfd2b36bfe0519025b1a738f16", "message": "Make `HttpObjectDecoder` more RFC7230 compatible and other improvements\n\nMotivation:\n\nRFC7230 defines `obs-text` as `%x80-FF` (any negative byte value), and\nreason-phrase as `*( HTAB / SP / VCHAR / obs-text )`.\n\nModifications:\n\n- Adjust `isObsText` and reason-phrase validation according to RFC7230;\n- Verify that the passed `closeHandler` is non-null;\n- Return fast if the buffer is not readable after skipping control chars;\n\nResult:\n\n`HttpObjectDecoder` is more robust and RFC7230 compatible.", "committedDate": "2020-11-20T03:14:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk4NjYwNQ==", "url": "https://github.com/apple/servicetalk/pull/1227#discussion_r527986605", "bodyText": "IIUC this is just an optimization to avoid attempting to search for CRLF? is this thought to be common?", "author": "Scottmitch", "createdAt": "2020-11-20T21:42:52Z", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpObjectDecoder.java", "diffHunk": "@@ -225,6 +226,9 @@ protected final void decode(final ChannelHandlerContext ctx, final ByteBuf buffe\n                 currentState = State.READ_INITIAL;\n             }\n             case READ_INITIAL: {\n+                if (!buffer.isReadable()) {", "originalCommit": "3db09a6019dcfabfd2b36bfe0519025b1a738f16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk4OTY3OA==", "url": "https://github.com/apple/servicetalk/pull/1227#discussion_r527989678", "bodyText": "Can not say it's common, because usually TCP packet includes enough data for the start-line. This is to prevent going inside handlePartialInitialLine when CRLF was not found. Let me move it inside the if statement.", "author": "idelpivnitskiy", "createdAt": "2020-11-20T21:50:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk4NjYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk5MDI5OQ==", "url": "https://github.com/apple/servicetalk/pull/1227#discussion_r527990299", "bodyText": "Actually, I don't think we need it. Let me kill it :)", "author": "idelpivnitskiy", "createdAt": "2020-11-20T21:52:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk4NjYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "87399cb7487ce9e8189eb1eb713e601d399882e5", "chunk": "diff --git a/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpObjectDecoder.java b/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpObjectDecoder.java\nindex 43415f078..10438ee66 100644\n--- a/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpObjectDecoder.java\n+++ b/servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpObjectDecoder.java\n\n@@ -226,9 +226,6 @@ abstract class HttpObjectDecoder<T extends HttpMetaData> extends ByteToMessageDe\n                 currentState = State.READ_INITIAL;\n             }\n             case READ_INITIAL: {\n-                if (!buffer.isReadable()) {\n-                    return;\n-                }\n                 final int lfIndex = findCRLF(buffer, maxStartLineLength);\n                 if (lfIndex < 0) {\n                     handlePartialInitialLine(ctx, buffer);\n"}}, {"oid": "87399cb7487ce9e8189eb1eb713e601d399882e5", "url": "https://github.com/apple/servicetalk/commit/87399cb7487ce9e8189eb1eb713e601d399882e5", "message": "Remove unnecessary optimization for READ_INITIAL", "committedDate": "2020-11-20T21:52:53Z", "type": "commit"}]}