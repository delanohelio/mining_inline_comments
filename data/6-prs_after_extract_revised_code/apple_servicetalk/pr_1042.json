{"pr_number": 1042, "pr_title": "`SingleConcatWithPublisher` and invalid request-n", "pr_createdAt": "2020-05-06T00:23:37Z", "pr_url": "https://github.com/apple/servicetalk/pull/1042", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5ODc0Mg==", "url": "https://github.com/apple/servicetalk/pull/1042#discussion_r420498742", "bodyText": "consider breaking into 2 tests:\n\nrequest(0) delivers on onError\nrequest(0) after request(>0) delivers the item and propagates the 0 to the subscription (what is done now in this test)", "author": "Scottmitch", "createdAt": "2020-05-06T01:24:44Z", "path": "servicetalk-concurrent-api/src/test/java/io/servicetalk/concurrent/api/single/SingleConcatWithPublisherTest.java", "diffHunk": "@@ -140,6 +152,7 @@ private void invalidThenValidRequest(long invalidN) {\n     @Test\n     public void request0PropagatedAfterSuccess() {\n         source.onSuccess(1);\n+        subscriber.request(1); // get the success from the Single", "originalCommit": "dae808df61d0597aa18e6da0c28586456770305f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMDY1MQ==", "url": "https://github.com/apple/servicetalk/pull/1042#discussion_r420500651", "bodyText": "The new test that I added invalidRequestNWithInlineSourceCompletion() is equivalent to the first test you mention, that is why I did not add it separately.", "author": "NiteshKant", "createdAt": "2020-05-06T01:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5ODc0Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "7f720fb78c1af42534b8ea07f01a436e4f0a5568", "url": "https://github.com/apple/servicetalk/commit/7f720fb78c1af42534b8ea07f01a436e4f0a5568", "message": "`SingleConcatWithPublisher` and invalid request-n\n\n__Motivation__\n\nIf invalid calls to request-n are made for `Single.concat(Publisher)` before the `Single` result is propagated, we first emit the result and then propagate the invalid demand.\nFor cases, when the concatenated `Publisher` completes inline with `subscribe()` (eg: `Publisher.empty()`), this means we will never deliver an error for the invalid demand.\n\n__Modification__\n\nDeliver error when invalid demand is made in the above case instead of `Single`'s result and do not subscribe to the concatenated `Publisher`\n\n__Result__\n\nInvalid demand always terminates the `Subscriber` with an error.", "committedDate": "2020-05-06T01:35:02Z", "type": "commit"}, {"oid": "7f720fb78c1af42534b8ea07f01a436e4f0a5568", "url": "https://github.com/apple/servicetalk/commit/7f720fb78c1af42534b8ea07f01a436e4f0a5568", "message": "`SingleConcatWithPublisher` and invalid request-n\n\n__Motivation__\n\nIf invalid calls to request-n are made for `Single.concat(Publisher)` before the `Single` result is propagated, we first emit the result and then propagate the invalid demand.\nFor cases, when the concatenated `Publisher` completes inline with `subscribe()` (eg: `Publisher.empty()`), this means we will never deliver an error for the invalid demand.\n\n__Modification__\n\nDeliver error when invalid demand is made in the above case instead of `Single`'s result and do not subscribe to the concatenated `Publisher`\n\n__Result__\n\nInvalid demand always terminates the `Subscriber` with an error.", "committedDate": "2020-05-06T01:35:02Z", "type": "forcePushed"}]}