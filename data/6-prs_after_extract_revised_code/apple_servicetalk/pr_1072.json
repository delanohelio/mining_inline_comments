{"pr_number": 1072, "pr_title": "Configure ServiceTalkJacksonSerializerFeature explicitly and remove '\u2026", "pr_createdAt": "2020-05-28T09:46:05Z", "pr_url": "https://github.com/apple/servicetalk/pull/1072", "timeline": [{"oid": "cd67e1bf04bfac936f0df23dfbe0c44bf368dcda", "url": "https://github.com/apple/servicetalk/commit/cd67e1bf04bfac936f0df23dfbe0c44bf368dcda", "message": "Configure ServiceTalkJacksonSerializerFeature explicitly and remove 'org.glassfish.jersey.jackson.JacksonFeature' check\n\nMotivation:\n\nDocumentation for JerseyDataJacksonTestSuite.wrap says that we can't run test suite in Intellij IDEA because somehow JacksonFeature get to test test classpath due to bug in ' Gradle IDEA plugin' . If we configure ServiceTalkJacksonSerializerFeature with Application.getProperties(), we can run tests in the Intellij for those classes that use ServiceTalkJacksonSerializerFeature\n\nModifications:\n\n- Add ServiceTalkJacksonSerializerFeature property to tests that uses ServiceTalkJacksonSerializerFeature\n- remove method JerseyDataJacksonTestSuite.wrap\n\nResult:\n\nNow JerseyDataJacksonTestSuite.java tests can be run in IDEA.", "committedDate": "2020-05-28T09:32:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE4NjE2Ng==", "url": "https://github.com/apple/servicetalk/pull/1072#discussion_r432186166", "bodyText": "Does newProperties have to be mutable? If not, consider using singletonMap\nCan you use the ST_JSON_FEATURE constant instead of \"ServiceTalkJacksonSerializerFeature\"?\nPlease use static imports for readability (JSON_FEATURE)", "author": "ddossot", "createdAt": "2020-05-28T23:56:34Z", "path": "servicetalk-data-jackson-jersey/src/test/java/io/servicetalk/data/jackson/jersey/AbstractStreamingJsonResourcesTest.java", "diffHunk": "@@ -47,6 +50,14 @@ public AbstractStreamingJsonResourcesTest(final RouterApi api) {\n                     PublisherJsonResources.class\n             ));\n         }\n+\n+        @Override\n+        public Map<String, Object> getProperties() {\n+            Map<String, Object> properties = super.getProperties();\n+            Map<String, Object> newProperties = new HashMap<>(properties);\n+            newProperties.put(InternalProperties.JSON_FEATURE, \"ServiceTalkJacksonSerializerFeature\");\n+            return newProperties;", "originalCommit": "cd67e1bf04bfac936f0df23dfbe0c44bf368dcda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56683c06b21de85718f583a6b436268c0cfbe6c0", "chunk": "diff --git a/servicetalk-data-jackson-jersey/src/test/java/io/servicetalk/data/jackson/jersey/AbstractStreamingJsonResourcesTest.java b/servicetalk-data-jackson-jersey/src/test/java/io/servicetalk/data/jackson/jersey/AbstractStreamingJsonResourcesTest.java\nindex 3f65143e3..342e4fed0 100644\n--- a/servicetalk-data-jackson-jersey/src/test/java/io/servicetalk/data/jackson/jersey/AbstractStreamingJsonResourcesTest.java\n+++ b/servicetalk-data-jackson-jersey/src/test/java/io/servicetalk/data/jackson/jersey/AbstractStreamingJsonResourcesTest.java\n\n@@ -53,10 +54,7 @@ public abstract class AbstractStreamingJsonResourcesTest extends AbstractJerseyS\n \n         @Override\n         public Map<String, Object> getProperties() {\n-            Map<String, Object> properties = super.getProperties();\n-            Map<String, Object> newProperties = new HashMap<>(properties);\n-            newProperties.put(InternalProperties.JSON_FEATURE, \"ServiceTalkJacksonSerializerFeature\");\n-            return newProperties;\n+            return singletonMap(JSON_FEATURE, ST_JSON_FEATURE);\n         }\n     }\n \n"}}, {"oid": "56683c06b21de85718f583a6b436268c0cfbe6c0", "url": "https://github.com/apple/servicetalk/commit/56683c06b21de85718f583a6b436268c0cfbe6c0", "message": "review comments", "committedDate": "2020-05-29T15:51:28Z", "type": "commit"}]}